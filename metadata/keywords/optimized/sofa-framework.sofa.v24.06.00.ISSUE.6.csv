quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Modifiability,[SofaHelper] PluginManager now checks for file existence instead of library extension match.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/621:13,Plugin,PluginManager,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/621,1,['Plugin'],['PluginManager']
Modifiability,[SofaHelper] REMOVE PluginManager::m_searchPaths,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/947:20,Plugin,PluginManager,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/947,1,['Plugin'],['PluginManager']
Modifiability,[SofaHelper][SofaPython] ADD PluginManager callback and use it in SofaPython,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1777:29,Plugin,PluginManager,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1777,1,['Plugin'],['PluginManager']
Modifiability,[SofaImplicitOdeSolver] Rewrite of the static Newton-Raphson ODE solver,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2050:24,Rewrite,Rewrite,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2050,1,['Rewrite'],['Rewrite']
Modifiability,"[SofaKernel] Add automatically the ""_d"" suffix when loading plugins in debug",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/465:60,plugin,plugins,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/465,1,['plugin'],['plugins']
Modifiability,[SofaKernel] Add tests on PluginManager,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/240:26,Plugin,PluginManager,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/240,1,['Plugin'],['PluginManager']
Modifiability,[SofaKernel] Autoload plugin mechanism,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253:22,plugin,plugin,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253,1,['plugin'],['plugin']
Modifiability,[SofaKernel] Deep refactoring of DataTypeInfo (not to merge...but to review),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552:18,refactor,refactoring,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552,1,['refactor'],['refactoring']
Modifiability,[SofaKernel] FIX PluginManager::pluginIsLoaded,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1615:17,Plugin,PluginManager,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1615,2,"['Plugin', 'plugin']","['PluginManager', 'pluginIsLoaded']"
Modifiability,[SofaKernel] Improve check for already registered plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1472:50,plugin,plugins,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1472,1,['plugin'],['plugins']
Modifiability,[SofaKernel] Minor code refactor in BaseData & new StringUtils functions.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/860:24,refactor,refactor,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/860,1,['refactor'],['refactor']
Modifiability,[SofaKernel] Refactor BaseData to use DataLink,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1491:13,Refactor,Refactor,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1491,1,['Refactor'],['Refactor']
Modifiability,[SofaKernel] Refactor DDGNode,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1372:13,Refactor,Refactor,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1372,1,['Refactor'],['Refactor']
Modifiability,[SofaKernel] Refactor DataTrackerEngine so it match the DataCallback,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1073:13,Refactor,Refactor,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1073,1,['Refactor'],['Refactor']
Modifiability,[SofaKernel] Refactor the FileRepository constructors,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1610:13,Refactor,Refactor,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1610,1,['Refactor'],['Refactor']
Modifiability,[SofaKernel] Refactor the MutationListener,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/917:13,Refactor,Refactor,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/917,1,['Refactor'],['Refactor']
Modifiability,"[SofaKernel] Refactoring in Camera, BackgroundSetting and Light",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/676:13,Refactor,Refactoring,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/676,1,['Refactor'],['Refactoring']
Modifiability,[SofaKernel] Remove a #pragma in a config.h (shouldn't be there),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1365:35,config,config,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1365,1,['config'],['config']
Modifiability,[SofaKernel] Remove core::Plugin/core::PluginManager,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1612:26,Plugin,Plugin,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1612,2,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability,[SofaKernel] fix shadow variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2791:24,variab,variable,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2791,1,['variab'],['variable']
Modifiability,[SofaMacros] FIX libs copy and plugin deps finding,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1708:31,plugin,plugin,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1708,1,['plugin'],['plugin']
Modifiability,[SofaMacros] FIX plugins RPATH,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1619:17,plugin,plugins,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1619,1,['plugin'],['plugins']
Modifiability,[SofaMacros] Refactor for better target and package management,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1433:13,Refactor,Refactor,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1433,1,['Refactor'],['Refactor']
Modifiability,[SofaMatrix] A new plugin adding tools for linear system matrix,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2517:19,plugin,plugin,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2517,1,['plugin'],['plugin']
Modifiability,[SofaMatrix] Move CI setting to the plugin folder,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2579:36,plugin,plugin,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2579,1,['plugin'],['plugin']
Modifiability,[SofaMatrix] Update plugin CMakeLists to avoid strong dependency on Qt,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3423:20,plugin,plugin,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3423,1,['plugin'],['plugin']
Modifiability,[SofaMeshCollision] Fix cmake generated config file,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2400:40,config,config,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2400,1,['config'],['config']
Modifiability,[SofaMiscCollision] Extract OBB/Capsule code into its own plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820:58,plugin,plugin,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820,1,['plugin'],['plugin']
Modifiability,[SofaMiscCollision] Fix config.in cmake file for export,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2052:24,config,config,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2052,1,['config'],['config']
Modifiability,[SofaMiscCollision] Move back to modules (instead of applications/plugins),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2127:66,plugin,plugins,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2127,1,['plugin'],['plugins']
Modifiability,[SofaMiscEngine] Pluginize,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/477:17,Plugin,Pluginize,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/477,1,['Plugin'],['Pluginize']
Modifiability,[SofaMiscForceField] Fix error while trying to compile a plugin depending on SofaGuiQt,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2707:57,plugin,plugin,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2707,1,['plugin'],['plugin']
Modifiability,[SofaMiscForceField] Pluginizing the module,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/408:21,Plugin,Pluginizing,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/408,1,['Plugin'],['Pluginizing']
Modifiability,[SofaMiscMapping] Remove unused global variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1956:39,variab,variable,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1956,1,['variab'],['variable']
Modifiability,[SofaMiscTopology_test] Replace inheritence of SofaTest by BaseSimulation_test and fix test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1909:32,inherit,inheritence,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1909,1,['inherit'],['inheritence']
Modifiability,[SofaMisc] Pluginize all modules,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1306:11,Plugin,Pluginize,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1306,2,['Plugin'],['Pluginize']
Modifiability,[SofaNG] Setup Sofa.GL (as a plugin),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2709:29,plugin,plugin,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2709,1,['plugin'],['plugin']
Modifiability,[SofaNonUniformFem] Remove shadow variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1874:34,variab,variable,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1874,1,['variab'],['variable']
Modifiability,[SofaOpenCL] Fix Cmake configuration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1647:23,config,configuration,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1647,1,['config'],['configuration']
Modifiability,[SofaOpenglVisual] Pluginize &clean,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1071:19,Plugin,Pluginize,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1071,1,['Plugin'],['Pluginize']
Modifiability,[SofaOpenglVisual] Pluginize.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1080:19,Plugin,Pluginize,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1080,1,['Plugin'],['Pluginize']
Modifiability,[SofaPardisoSolver] Fix plugin and add example,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1830:24,plugin,plugin,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1830,1,['plugin'],['plugin']
Modifiability,"[SofaPhysicsAPI] Add methods and C bindings to load SOFA ini file, plugins and messageHandler",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3540:67,plugin,plugins,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3540,1,['plugin'],['plugins']
Modifiability,[SofaPython] ADD Refactor the bindings and script controllers into subdirectories,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/616:17,Refactor,Refactor,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/616,1,['Refactor'],['Refactor']
Modifiability,[SofaPython] Adds several bindings to the SOFA python's plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/990:56,plugin,plugin,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/990,1,['plugin'],['plugin']
Modifiability,[SofaPython] Make cython available as an plugin.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/176:41,plugin,plugin,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/176,1,['plugin'],['plugin']
Modifiability,[SofaPython] Restrict the plugin and its dependers to C++11,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1284:26,plugin,plugin,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1284,1,['plugin'],['plugin']
Modifiability,[SofaPython] Small fixes to import plugin and remove scene warnings,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1466:35,plugin,plugin,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1466,1,['plugin'],['plugin']
Modifiability,[SofaSPHFluid] Fix invalid plugin initialization.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/467:27,plugin,plugin,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/467,1,['plugin'],['plugin']
Modifiability,[SofaSimpleFem] Refactor TetrahedronFEMForceField for better readability,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2550:16,Refactor,Refactor,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2550,1,['Refactor'],['Refactor']
Modifiability,[SofaSimulationCore] Add boolean variables to the base class BaseMech…,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1962:33,variab,variables,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962,1,['variab'],['variables']
Modifiability,[SofaSparseSolver] Add cmake configuration for Threads,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2739:29,config,configuration,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2739,1,['config'],['configuration']
Modifiability,[SofaSphFluid & SofaMiscCollision] Pluginizing the two modules,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/407:35,Plugin,Pluginizing,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/407,1,['Plugin'],['Pluginizing']
Modifiability,[SofaSphFluid plugin] Fix broken behavior for ParticleSink and ParticleSource,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1278:14,plugin,plugin,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1278,1,['plugin'],['plugin']
Modifiability,[SofaSphFluid] Clean SofaFluid plugin compilation warning.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1296:31,plugin,plugin,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1296,1,['plugin'],['plugin']
Modifiability,[SofaSphFluid] Fix required plugin in scenes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3272:28,plugin,plugin,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3272,1,['plugin'],['plugin']
Modifiability,[SofaSphFluid] Reorder plugin code and scenes files,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1165:23,plugin,plugin,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1165,1,['plugin'],['plugin']
Modifiability,[SofaSphFluid] Several clean in the plugin components,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1186:36,plugin,plugin,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1186,1,['plugin'],['plugin']
Modifiability,[SofaTopologyMapping] Fix shadowed variable #2158,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2413:35,variab,variable,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2413,1,['variab'],['variable']
Modifiability,[SofaUserInteraction] Refactor PickParticlePerformer,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2084:22,Refactor,Refactor,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2084,1,['Refactor'],['Refactor']
Modifiability,[SofaUserInteraction] remove shadow variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2795:36,variab,variable,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2795,1,['variab'],['variable']
Modifiability,"[SofaValidation] is a plugin, not a collection",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3296:22,plugin,plugin,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3296,1,['plugin'],['plugin']
Modifiability,[SofaVolumetricData] Split the module into multiple plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/389:52,plugin,plugin,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/389,1,['plugin'],['plugin']
Modifiability,[SolidMechanics.Spring] CMake: Fix package configuration,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3846:43,config,configuration,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3846,1,['config'],['configuration']
Modifiability,[Spring] Remove variable redefinitions,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3754:16,variab,variable,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3754,1,['variab'],['variable']
Modifiability,[THMPGSpatialHashing] Introduce an example scene in the plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2148:56,plugin,plugin,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2148,1,['plugin'],['plugin']
Modifiability,[Test] Refactor Mapping_test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5079:7,Refactor,Refactor,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5079,1,['Refactor'],['Refactor']
Modifiability,[Testing] Fix CMake config after removal of compat,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3694:20,config,config,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3694,1,['config'],['config']
Modifiability,[Tests] Update SceneCreator_test to inherit from BaseSimulationTest and remove some warnings,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2406:36,inherit,inherit,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2406,1,['inherit'],['inherit']
Modifiability,[Tests] Update required plugins in tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3542:24,plugin,plugins,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3542,1,['plugin'],['plugins']
Modifiability,[This simulation](https://github.com/sofa-framework/sofa/blob/master/applications/plugins/SofaCUDA/scenes/cpu-gpu_validation/QuadSpringsSphere.scn) shows the difference,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2618#issuecomment-1017251239:82,plugin,plugins,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2618#issuecomment-1017251239,1,['plugin'],['plugins']
Modifiability,[Tools] Update astyle config,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/550:22,config,config,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/550,1,['config'],['config']
Modifiability,[Topology.Container.Dynamic] Add class TriangleSubdividers to store methods to subdivide a triangle in differents configurations,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4747:114,config,configurations,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4747,1,['config'],['configurations']
Modifiability,[Type] RGBAColor: remove inheritance from type::fixed_array and use std::array to store its components,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4263:25,inherit,inheritance,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4263,1,['inherit'],['inheritance']
Modifiability,[Type] Refactor Mat,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4396:7,Refactor,Refactor,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4396,1,['Refactor'],['Refactor']
Modifiability,[Type] Refactor Vec,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4296:7,Refactor,Refactor,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4296,1,['Refactor'],['Refactor']
Modifiability,[Visual] Fix cmake config,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4555:19,config,config,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4555,1,['config'],['config']
Modifiability,[WARNING] [ObjectFactory] Class already registered: SurfacePressureForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TaitSurfacePressureForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TorsionForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: TorsionForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TrianglePressureForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: UniformVelocityDampingForceField<Rigid2d>; [WARNING] [ObjectFactory] Class already registered: UniformVelocityDampingForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: UniformVelocityDampingForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: UniformVelocityDampingForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: UniformVelocityDampingForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: UniformVelocityDampingForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: ProjectToLineConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToLineConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPlaneConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPlaneConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec1d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec6d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:24075,Plugin,PluginManager,24075,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,[all] BaseClass reflection refactoring,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1283:27,refactor,refactoring,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1283,1,['refactor'],['refactoring']
Modifiability,[all] Change variable name supportOnlySymmetricMatrix in MParams,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3861:13,variab,variable,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3861,1,['variab'],['variable']
Modifiability,"[all] Clean warnings for option config, again",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1339:32,config,config,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1339,1,['config'],['config']
Modifiability,[all] EDIT: use PluginRepository instead of Utils::getPluginDirectory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/518:16,Plugin,PluginRepository,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/518,1,['Plugin'],['PluginRepository']
Modifiability,[all] Make local variables const,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3937:17,variab,variables,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3937,1,['variab'],['variables']
Modifiability,[all] Refactor BaseTest & BaseSimulationTest,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/605:6,Refactor,Refactor,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/605,1,['Refactor'],['Refactor']
Modifiability,[all] Refactor Read/Write Accessor.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1807:6,Refactor,Refactor,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1807,1,['Refactor'],['Refactor']
Modifiability,[all] Refactor SofaTest to cut dependencies,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471:6,Refactor,Refactor,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471,1,['Refactor'],['Refactor']
Modifiability,[all] Refactor the loading of Xsp files.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/918:6,Refactor,Refactor,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/918,1,['Refactor'],['Refactor']
Modifiability,[all] Refactor vector & vector_device,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1799:6,Refactor,Refactor,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1799,1,['Refactor'],['Refactor']
Modifiability,[all] Refactoring #4: BaseData,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1380:6,Refactor,Refactoring,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1380,1,['Refactor'],['Refactoring']
Modifiability,[all] Remove warning: unused variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1787:29,variab,variable,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1787,1,['variab'],['variable']
Modifiability,[all] Rename depreciation macros in config.h.in for unique module id…,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4755:36,config,config,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4755,1,['config'],['config']
Modifiability,[all] Run codespell on the code base + config file,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5064:39,config,config,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5064,1,['config'],['config']
Modifiability,[all] Update code base according to refactoring done in PR1283.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1330:36,refactor,refactoring,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1330,1,['refactor'],['refactoring']
Modifiability,[all] Variable can be made constexpr,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2472:6,Variab,Variable,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2472,1,['Variab'],['Variable']
Modifiability,[all] Fix missing #include config.h or invalid ordering that disturb the factory's getTarget() to operate properly.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2693:27,config,config,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2693,1,['config'],['config']
Modifiability,[applications/plugins/Geomagic/src/Geomagic/GeomagicEmulator.cpp line 54; code:; GeomagicEmulatorTask::MemoryAlloc GeomagicEmulatorTask::run(); {; Vector3 currentForce;; Vector3 pos_in_world;; bool contact = false; // <- unused,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3878:14,plugin,plugins,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3878,1,['plugin'],['plugins']
Modifiability,[applications] remove shadow variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3488:29,variab,variable,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3488,1,['variab'],['variable']
Modifiability,[applications] remove unused variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3920:29,variab,variable,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3920,1,['variab'],['variable']
Modifiability,[applications] rename shadow variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3738:29,variab,variable,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3738,1,['variab'],['variable']
Modifiability,[applications] unused variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3878:22,variab,variable,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3878,1,['variab'],['variable']
Modifiability,"[ci-depends-on https://github.com/sofa-framework/Regression/pull/56]; [ci-depends-on https://github.com/sofa-framework/BeamAdapter/pull/125]. This PR is based on [PR #56](https://github.com/sofa-framework/Regression/pull/56) of Regression. . This PR fixes the problem of running regression tests in plugins when their references are inside of the plugin and not Regression (e.g. BeamAdapter). The idea is to have a stand alone `*.regression.tests` file that also includes the relative path of the reference folder. This is meant to be placed at the top of the reference file in a relative manne. This allows two things : ; 1. Having a stand alone file ease the process of finding the reference folder for any new comer; 2. Having a stand alone file ease the process of automatizing the retrieval of new regression test along with their reference folder without the need of modifying anything in the CI script. . Tested on my side : only two remaining regression test failing from SofaSPH. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4420:299,plugin,plugins,299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4420,2,['plugin'],"['plugin', 'plugins']"
Modifiability,[config] CHANGE USE_MASK option to off by default,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/532:1,config,config,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/532,1,['config'],['config']
Modifiability,[core] Remove shadow variables,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3212:21,variab,variables,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3212,1,['variab'],['variables']
Modifiability,[core] remove shadow variables (modern version),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3267:21,variab,variables,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3267,1,['variab'],['variables']
Modifiability,[examples] Another pass of plugin finder,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3351:27,plugin,plugin,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3351,1,['plugin'],['plugin']
Modifiability,[examples] Fix plugins in a couple of scenes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2810:15,plugin,plugins,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2810,1,['plugin'],['plugins']
Modifiability,[examples] Last pass of plugin finder before the release,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3146:24,plugin,plugin,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3146,1,['plugin'],['plugin']
Modifiability,[examples] Move PointSplatModel and SpatialGridPointModel scenes into Sph plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2847:74,plugin,plugin,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2847,1,['plugin'],['plugin']
Modifiability,[examples] Run PluginFinder,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2950:15,Plugin,PluginFinder,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2950,2,['Plugin'],['PluginFinder']
Modifiability,[examples] Run PluginFinder after some module changes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2860:15,Plugin,PluginFinder,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2860,1,['Plugin'],['PluginFinder']
Modifiability,[examples] Run PluginFinder on examples,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4707:15,Plugin,PluginFinder,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4707,1,['Plugin'],['PluginFinder']
Modifiability,"[image,Mapping.NonLinear] Properly includes config.h before ObjectFactory.h",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4726:44,config,config,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4726,1,['config'],['config']
Modifiability,[image] Add warning guiding users regarding pluginization of DiffusionSolver,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1067:44,plugin,pluginization,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1067,1,['plugin'],['pluginization']
Modifiability,[image] Fix image_gui plugin loading,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1015:22,plugin,plugin,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1015,1,['plugin'],['plugin']
Modifiability,[image] Remove example scenes requiring Flexible plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3421:40,Flexible,Flexible,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3421,2,"['Flexible', 'plugin']","['Flexible', 'plugin']"
Modifiability,[image] fix shadow variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2515:19,variab,variable,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2515,2,['variab'],['variable']
Modifiability,[image] fix shadow variable #2432,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2437:19,variab,variable,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2437,1,['variab'],['variable']
Modifiability,[image] fix shadow variables,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2528:19,variab,variables,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2528,1,['variab'],['variables']
Modifiability,[image] remove shadow variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2722:22,variab,variable,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2722,3,['variab'],['variable']
Modifiability,[image] remove shadow variables,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2921:22,variab,variables,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2921,2,['variab'],['variables']
Modifiability,[main] Changes screenshots and config directories location,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5096:31,config,config,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5096,1,['config'],['config']
Modifiability,[modules] Set relocatable flags to pluginized modules,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1604:35,plugin,pluginized,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1604,1,['plugin'],['pluginized']
Modifiability,[plugin/SceneCreator] Cosmetic changes and remove un-needed include,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/169:1,plugin,plugin,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/169,1,['plugin'],['plugin']
Modifiability,[plugin] Add image data exchange in the MultiThreading plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/769:1,plugin,plugin,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/769,2,['plugin'],['plugin']
Modifiability,[plugin] Experimental : Add PSL for 17.12,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/541:1,plugin,plugin,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/541,1,['plugin'],['plugin']
Modifiability,[plugins] ADD external collisions plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3890:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3890,2,['plugin'],['plugins']
Modifiability,[plugins] ADD new Communication plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"[plugins] ADD submodules for ROS, SoftRobots, STLIB",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1122:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1122,1,['plugin'],['plugins']
Modifiability,[plugins] Add BeamAdapter as a new plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890,2,['plugin'],"['plugin', 'plugins']"
Modifiability,[plugins] Add SimpleApi as a dependency in SofaCarving_test,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4572:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4572,1,['plugin'],['plugins']
Modifiability,[plugins] Add SofaPython3 as external project in SOFA,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1427:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1427,1,['plugin'],['plugins']
Modifiability,[plugins] Add fetchable ModelOrderReduction,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4608:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4608,1,['plugin'],['plugins']
Modifiability,[plugins] Add fetchable ShapeMatchingPlugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4106:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4106,1,['plugin'],['plugins']
Modifiability,[plugins] Add fetchable SoftRobots,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882,1,['plugin'],['plugins']
Modifiability,[plugins] ArticulatedSystemMapping : adds size check & fixes typo,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3751:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3751,1,['plugin'],['plugins']
Modifiability,[plugins] Beam plastic,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1618:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1618,1,['plugin'],['plugins']
Modifiability,[plugins] Disable old python2 examples,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2025:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2025,1,['plugin'],['plugins']
Modifiability,[plugins] Externalize SofaDistanceGrid plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4573:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4573,2,['plugin'],"['plugin', 'plugins']"
Modifiability,[plugins] Externalize all remaining plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4589:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4589,2,['plugin'],['plugins']
Modifiability,[plugins] Externalize haptic/interface plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4575:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4575,2,['plugin'],['plugins']
Modifiability,[plugins] Fix CUDA includes of SofaSphFluid,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1550:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1550,1,['plugin'],['plugins']
Modifiability,[plugins] Fix OptionGroup deprecated constructor in image and SofaCUDA plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4064:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4064,2,['plugin'],"['plugin', 'plugins']"
Modifiability,[plugins] Fix compilation further to 1397,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1428:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1428,1,['plugin'],['plugins']
Modifiability,[plugins] Fix minor compilation issue in plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1106:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1106,2,['plugin'],['plugins']
Modifiability,[plugins] Fix warnings for option compilation,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1316:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1316,1,['plugin'],['plugins']
Modifiability,[plugins] Fix warnings in SofaSphFluid and image,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3439:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3439,1,['plugin'],['plugins']
Modifiability,[plugins] Move examples in LMConstraint plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1778:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1778,2,['plugin'],"['plugin', 'plugins']"
Modifiability,[plugins] Reactivate SofaPython3,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1574:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1574,1,['plugin'],['plugins']
Modifiability,[plugins] Remove ExternalBehaviorModel and ManualMapping plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4565:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4565,2,['plugin'],['plugins']
Modifiability,[plugins] Remove LMConstraint from SOFA repository,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2508:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2508,1,['plugin'],['plugins']
Modifiability,"[plugins] Remove PSL files, add ExternalProjectConfig and update CMakeLists",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4047:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4047,1,['plugin'],['plugins']
Modifiability,[plugins] Remove fetching of SofaPython,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3855:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3855,1,['plugin'],['plugins']
Modifiability,[plugins] Remove plugins to be deleted,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1439:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1439,2,['plugin'],['plugins']
Modifiability,[plugins] Remove references to external deleted plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3980:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3980,2,['plugin'],['plugins']
Modifiability,[plugins] Remove references to old plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3960:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3960,2,['plugin'],['plugins']
Modifiability,[plugins] SofaCUDA does not require Sofa.GL,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3514:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3514,1,['plugin'],['plugins']
Modifiability,[plugins] Update license to LGPL of remaining files,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4425:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4425,1,['plugin'],['plugins']
Modifiability,[plugins] rename shadow variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3581:1,plugin,plugins,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3581,2,"['plugin', 'variab']","['plugins', 'variable']"
Modifiability,[projects] remove unused variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1747:25,variab,variable,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1747,1,['variab'],['variable']
Modifiability,[runSofa] Centralize configuration into the user local directory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4926:21,config,configuration,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4926,1,['config'],['configuration']
Modifiability,[runSofa] FIX PluginRepository initialization,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/502:14,Plugin,PluginRepository,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/502,1,['Plugin'],['PluginRepository']
Modifiability,[runSofa] FIX plugin config copy on Windows,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/451:14,plugin,plugin,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/451,2,"['config', 'plugin']","['config', 'plugin']"
Modifiability,[runSofa] Fix CMake error if all plugins are disabled,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3069:33,plugin,plugins,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3069,1,['plugin'],['plugins']
Modifiability,[runSofa] autoload plugins (2nd version),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/301:19,plugin,plugins,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/301,1,['plugin'],['plugins']
Modifiability,[test] Make quaternion test deterministic and portable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4126:46,portab,portable,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4126,1,['portab'],['portable']
Modifiability,[tests] Adapt code to any Eigen version,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4724:8,Adapt,Adapt,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4724,1,['Adapt'],['Adapt']
Modifiability,[tests] Fix remove SofaComponentAll plugin which doesn't exist anymore,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3266:36,plugin,plugin,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3266,1,['plugin'],['plugin']
Modifiability,[tools] Deactivate all plugin containing CUDA in its name,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5044:23,plugin,plugin,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5044,1,['plugin'],['plugin']
Modifiability,[tools] Factorize and clean plugin list filtering,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4748:28,plugin,plugin,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4748,1,['plugin'],['plugin']
Modifiability,[tools] Handles Qt plugins installed from system's package managers,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1728:19,plugin,plugins,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1728,1,['plugin'],['plugins']
Modifiability,[tools] More default plugins in binaries,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1725:21,plugin,plugins,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1725,1,['plugin'],['plugins']
Modifiability,\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:1074,Plugin,PluginManager,1074,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaPython.so; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/Example.py; [ OK ] Batch/Python_scene_test.sofa_python_scene_tests/0 (2544 ms); [ RUN ] Batch/Python_scene_test.sofa_python_scene_tests/1; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/LambdaPropagation.py; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant.so; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant_gui.so; [DEPRECATED] [Compliant.Vec] Compliant's Vec.py is now deprecated (and will be deleted soon), please use numpy instead; [ERROR] [SofaPython] createObject: component 'compliance' of type 'UniformCompliance' in node 'joint'; [ERROR] [SofaPython] Object type UniformCompliance<Vec1d> creation failed; [FATAL] [SofaPython] SP_CALL_MODULEFUNC; Traceback (most recent call last):; File ""LambdaPropagation.py"", line 90, in createScene; joint = StructuralAPI.FixedRigidJoint( ""joint"", ground.node, rigid.node ); File ""/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python/Compliant/StructuralAPI.py"", line 634, in __init__; self.compliance = self.node.createObject('UniformCompliance', name='compliance', compliance=compliance); TypeError: bad argument",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:1727,Plugin,PluginManager,1727,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/he,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:5848,Plugin,PluginManager,5848,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [IN",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9366,Plugin,PluginManager,9366,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MechanicalStateController<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MechanicalStateController<Vec1d>; [WARNING] [ObjectFactory] Class already registered: RayCollisionModel; [WARNING] [ObjectFactory] Class already registered: RayTraceDetection; [WARNING] [ObjectFactory] Class already registered: SleepController; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [WARNING] [ObjectFactory] Class already registered: ReadState; [WARNING] [ObjectFactory] Class already registered: ReadTopology; [WARNING] [ObjectFactory] Class already registered: GIDMeshLoader; [WARNING] [ObjectFactory] Class already registered: GridMeshCreator; [WARNING] [ObjectFactory] Class already registered: InputEventReader; [WARNING] [ObjectFactory] Class already registered: MeshGmshLoader; [WARNING] [ObjectFactory] Class already registered: MeshOffLoader; [WARNING] [ObjectFactory] Class already registered: MeshSTLLoader; [WARNING] [ObjectFactory] Class already registered: MeshTrianLoader; [WARNING] [ObjectFactory] Class already registered: MeshXspLoader; [WARNING] [ObjectFactory] Class already registered: OffSequenceLoader; [WARNING] [ObjectFactory] Class already registered: SphereLoader; [WARNING] [ObjectFactory] Class already registered: StringMeshCreator; [WARNING] [ObjectFactory] Class alrea,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:28411,Plugin,PluginManager,28411,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m2,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:4548,Plugin,PluginManager,4548,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [Plugin,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5141,Plugin,PluginManager,5141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4583,Plugin,PluginManager,4583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4171,Plugin,PluginManager,4171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded pl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:7974,Plugin,PluginManager,7974,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m2,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:3994,Plugin,PluginManager,3994,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Componen,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9033,Plugin,PluginManager,9033,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"_HEADER_NOT_REPLACED(""v23.06"", ""v23.12""); | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ; In file included from include/Sofa.Config/sofa/config.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:25,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:24,; from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; include/Sofa.Config/sofa/config/sharedlibrary_defines.h:26:38: error: expected identifier before '__attribute__'; 26 | # define SOFA_EXPORT_DYNAMIC_LIBRARY __attribute__ ((visibility (""default""))); | ^~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/config.h:29:42: note: in expansion of macro 'SOFA_EXPORT_DYNAMIC_LIBRARY'; 29 | # define SOFA_MULTITHREADING_PLUGIN_API SOFA_EXPORT_DYNAMIC_LIBRARY; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:1: note: in expansion of macro 'SOFA_MULTITHREADING_PLUGIN_API'; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; In file included from /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.cpp:22:; /builds/workspace/sofa-framework/PR-3607/ubuntu_gcc_options_release/src/applications/plugins/MultiThreading/src/MultiThreading/component/animationloop/StepTask.h:40:41: error: expected initializer before ':' token; 40 | SOFA_MULTITHREADING_PLUGIN_API StepTask : public sofa::simulation::CpuTask; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008:1305,plugin,plugins,1305,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3607#issuecomment-1411703008,3,['plugin'],['plugins']
Modifiability,"_How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:4566,Plugin,Plugin,4566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,2,"['Plugin', 'plugin']","['Plugin', 'plugin']"
Modifiability,"_I suggest we use this issue card to track ongoing work (aka as dashboard/ChangeLog)_; Observation: Link implementation is invasive too complex, thus making SOFA respectively long to compile and hard to maintain / support. An ongoing work led by @damienmarchal aims at: ; - simplifying the Link implementation:; - avoiding the use of Traits; - split SingleLink into several cases: links between Data (DataLink), links between multiple Data (DataMultiLink?) links between BaseObject (?); - reducing massively used / included of SingleLinks. DONE:; - introduce Data Link (#1491 ); - remove duplicated SingleLink<> parentData in BaseData to ease further refactoring (#1491 ); - replace the use of the SingleLink<Data> by a DataLink class in BaseData.h (#1491 ); - remove traits code from Link.h and BaseLink.h. (#1503 ); - remove reflection code in BaseData (#1541). Also done:; - use forward declaration to reduce dependency (due to headers included in header) between modules --> cleaning code dependency graph and reducing compilation time (#1509 ); - DataContentValue : was there as DataValue, extracted from Data and renamed as DataContentValue; - PathResolver : mechanism to generalize for resolving path (parsing string, search in graph, convert in to an object), extracted from Link in order isolate it (for now reoriente towards existing SOFA functions). ______________________________________________________. **Next step** :; - refactoring the whole Link to separate SingleLink & MultiLink; - rename AbstractDataLink as BaseDataLink ?; - remove reflection mechanism inn BaseData (due to removal of SingleLink for Data). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1526:651,refactor,refactoring,651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1526,2,['refactor'],['refactoring']
Modifiability,"_You made a recent checkout from master and your private plugins does not compile anymore._ . This is an unconfortable situation and be sure a lot of effort are done to reduce the amount of time this is happening. But whatever care we can take, this may and will happen. Two probable cases:; - when breaking stuffs that shouldn't be there have been merged by mistake. Well, we apologize for this situation. To help, do not hesitate to participate in the reviewing of the PRs before they are merged into master to detect this situation. ; ; - when breaking change that are accepted on purpose. The reason is that there is a general consensus that Sofa is currently very ""fat"" and thus PRs trying to clean or make sofa lightweight to compile are positive contribution to Sofa. The drawback of that is that cleaning and modularizing Sofa have a strong impact on file/code organization and for sure is going to break external code. . As this is going to happen I suggest in the following thread to report what he had to do to compile master when encountered a broken compilation. Anyone can contribute... . Hope this will help. . eg:; - I had to add a lot of #include<fstream> to avoid compilation problem with xxx; - Component from #include<SofaVolumetricData> have moved and been renamed ! I had to update my ; CMakeList.txt to add find_package(SofaImplicitField) or find_package(SofaDistanceGrid). An html version of the this thread is at:; Website version: https://www.sofa-framework.org/community/doc/programming-with-sofa/start-coding/help-list/. To edit it checkout: https://github.com/sofa-framework/doc/blob/master/40_Programming_with_SOFA/10_Start_coding/70_Help_list.md. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/418:57,plugin,plugins,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/418,1,['plugin'],['plugins']
Modifiability,_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plug,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6911,Plugin,PluginManager,6911,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"_sub_I_TransformEngine_test.cpp (sofa/modules/SofaGeneralEngine/SofaGeneralEngine_test/TransformEngine_test.cpp); 1813 ms: cimg_library::CImg<unsigned char>::get_resize(int, int, int, int, int, unsigned int, float, float, float, float) const (sofa/applications/plugins/CImgPlugin/src/CImgPlugin/ImageCImg.cpp); 1797 ms: _GLOBAL__sub_I_PlaneForceField_test.cpp (sofa/modules/SofaBoundaryCondition/SofaBoundaryCondition_test/PlaneForceField_test.cpp); 1679 ms: sofa::component::engine::GenerateSphere<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3ul, double>, sofa::d... (sofa/modules/SofaGeneralEngine/GenerateSphere.cpp); 1584 ms: sofa::component::engine::GenerateCylinder<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3ul, double>, sofa:... (sofa/modules/SofaGeneralEngine/GenerateCylinder.cpp); 1373 ms: sofa::component::misc::MeshTetraStuffing::init() (sofa/modules/SofaMiscExtra/MeshTetraStuffing.cpp); 1282 ms: cimg_library::CImgList<unsigned char>::_load_cimg(_IO_FILE*, char const*) (sofa/applications/plugins/CImgPlugin/src/CImgPlugin/ImageCImg.cpp); 1222 ms: cimg_library::CImg<unsigned char>::_load_pandore(_IO_FILE*, char const*) (sofa/applications/plugins/CImgPlugin/src/CImgPlugin/ImageCImg.cpp); 1196 ms: sofa::component::odesolver::VariationalSymplecticSolver::solve(sofa::core::ExecParams const*, double, sofa::core::TMul... (sofa/modules/SofaGeneralImplicitOdeSolver/VariationalSymplecticSolver.cpp); 1158 ms: sofa::component::topology::TetrahedronSetGeometryAlgorithms<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<1... (sofa/SofaKernel/modules/SofaBaseTopology/TetrahedronSetGeometryAlgorithms.cpp); 1131 ms: sofa::Mapping_test<sofa::component::mapping::RigidMapping<sofa::defaulttype::StdRigidTypes<3ul, double>, sofa::default... (sofa/SofaKernel/modules/SofaRigid/SofaRigid_test/RigidMapping_test.cpp); 1125 ms: sofa::component::topology::TriangleSetGeometryAlgorithms<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3ul,... (sofa/SofaK",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:16651,plugin,plugins,16651,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['plugin'],['plugins']
Modifiability,`${CMAKE_BINARY_DIR}/bin/$<CONFIG>/` does not exist if using MSVC without Visual Studio IDE. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/451:27,CONFIG,CONFIG,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/451,1,['CONFIG'],['CONFIG']
Modifiability,"`BaseOrderingMethod` is introduced as an abstract component in `Sofa.Core`. It is the base class of a new category of components. Then, a new module is introduced. In this module, the components are derived from `BaseOrderingMethod`. Therefore, its name is `Sofa.Component.LinearSolver.Ordering`. It is in `LinearSolver` because an ordering method is only used with linear solvers, more specifically sparse direct linear solvers. Only one ordering method is still in `LinearSolver.Direct`: `MetisOrderingMethod`. The goal is to move later this component in a plugin so that METIS is no longer a dependency of SOFA core. In the meantime, this method is still the preferred one for legacy reasons. Eigen-based solvers were problematic. In Eigen, everything is defined at compile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS de",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4477:559,plugin,plugin,559,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477,3,"['plugin', 'polymorphi']","['plugin', 'polymorphism']"
Modifiability,"`CGLinearSolver::init()` did not call `init()` of its base class. The result is that the check of the required Data, which is in `BaseObject::init()`, is never called. `CGLinearSolver` has required Data, therefore the error never triggered when one of the required Data was not set. [ci-depends-on https://github.com/sofa-framework/Compliant/pull/4]; [ci-depends-on https://github.com/sofa-framework/Flexible/pull/3]; [ci-depends-on https://github.com/sofa-framework/SofaPython/pull/2]; [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/211]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2419:400,Flexible,Flexible,400,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2419,1,['Flexible'],['Flexible']
Modifiability,"`FindEigen3.cmake` is defining the cmake variable **EIGEN3_VERSION**, whereas `SofaEigen2Solver` was using **Eigen3_VERSION** to get the version of Eigen (which was; empty). Hence, **SOFAEIGEN2SOLVER_HAVE_OPENMP** was always true (given **SOFA_OPENMP**=ON), which was making the compilation fail when using Eigen > 3.2.9. Fixes #1412 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1416:41,variab,variable,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1416,1,['variab'],['variable']
Modifiability,"`GetFileNameWithoutExtension` currently finds the first dot in the filename to deduce the plugin name from a path. However, the filename `SoftRobots.Inverse.dll` deduces to `SoftRobots`, which is another existing plugin. To fix this behavior, I propose to rely the deduction on the extension of a dynamic library, which is known. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2961:90,plugin,plugin,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2961,2,['plugin'],['plugin']
Modifiability,"`PairInteractionConstraint` inherits multiple times from `StateAccessor`. `StateAccessor` constructor can be called multiple times. Therefore it initializes the Data multiple times. To prevent that the solution is virtual inheritance. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2488:28,inherit,inherits,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2488,2,['inherit'],"['inheritance', 'inherits']"
Modifiability,"`Plugin not found: ""TestPluginB_d_d""` it may be the cause 🙊",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4464#issuecomment-1935783327:1,Plugin,Plugin,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4464#issuecomment-1935783327,1,['Plugin'],['Plugin']
Modifiability,"`SofaNonUniformFem` is required by `SofaMiscEngine`. This needed to be; propagated back to the `SofaMiscConfig.cmake` in order to let external; projects find the target. Also, since `SofaGui` calls `find_package(SofaMisc)`, `SofaNonUniformFemConfig.cmake.in`; needs to be configure before `SofaGui`. The problem was raised [here](https://www.sofa-framework.org/community/forum/topic/setting-up-out-of-tree-build-sofapython-3-plugin/#post-16198) by Sander. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1384:272,config,configure,272,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1384,2,"['config', 'plugin']","['configure', 'plugin']"
Modifiability,"`TopologySparseData` inherits `TopologyData`; `TopologySubsetData` inherits `TopologyData`; Both `TopologySparseData` and `TopologySubsetData` overload virtual functions defined in `TopologyData`. However, the way they were defined made clang consider this not as an overload, but as a redefinition of a new function hidding the initial virtual function.; Basically, this PR removes a compilation warning. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1972:21,inherit,inherits,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1972,2,['inherit'],['inherits']
Modifiability,```; /; plugins; BeamAdapter; ...; framework; Sofa; Compat; Config; Core; ...; components; Sofa; Component; Collision; ...; scripts; tools; ...; ```; Slight modification but seems to be consensual,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2876#issuecomment-1110810493:8,plugin,plugins,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2876#issuecomment-1110810493,2,"['Config', 'plugin']","['Config', 'plugins']"
Modifiability,"```; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu: In function 'void sofa::gpu::cuda::mycudaGLRegisterBufferObject(int)':; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu:380:37: warning: 'cudaError_t cudaGLRegisterBufferObject(GLuint)' is deprecated [-Wdeprecated-declarations]; 380 | cudaCheck(cudaGLRegisterBufferObject((GLuint)id),""cudaGLRegisterBufferObject"");; | ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~; /usr/local/cuda/include/cuda_gl_interop.h:333:46: note: declared here; 333 | extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaGLRegisterBufferObject(GLuint bufObj);; | ^~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu: In function 'void sofa::gpu::cuda::mycudaGLUnregisterBufferObject(int)':; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu:385:39: warning: 'cudaError_t cudaGLUnregisterBufferObject(GLuint)' is deprecated [-Wdeprecated-declarations]; 385 | cudaCheck(cudaGLUnregisterBufferObject((GLuint)id),""cudaGLUnregisterBufferObject"");; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~; /usr/local/cuda/include/cuda_gl_interop.h:410:46: note: declared here; 410 | extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaGLUnregisterBufferObject(GLuint bufObj);; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu: In function 'void sofa::gpu::cuda::mycudaGLMapBufferObject(void**, int)':; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu:390:32: warning: 'cudaError_t cudaGLMapBufferObject(void**, GLuint)' is deprecated [-Wdeprecated-declarations]; 39",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4871:90,plugin,plugins,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4871,4,['plugin'],['plugins']
Modifiability,"`lcp_gaussseidel_unbuilt` is called even if there is no constraints, so a test is added.; And the initial guess was writing a 0.0 outside bounds (but I dont know why this line was here). :warning: WARNING :warning:; one needs to set the responseParams to mu=0.0 also. This is really confusing and would need to refactor somewhere.; If the LCP defines mu to 0.0 but not responseParams, funny things happen (one component expects 1contact = 1 constraint and the other 1contact = 3 constraints). Moreover:; - remove (deprecate) usage of the member `_mu` which was confusing with the data `mu`; - adds two scenes to demonstrate with and without friction, and their regression tests. [ci-depends-on https://github.com/sofa-framework/Regression/pull/47]. ![lcp_friction](https://github.com/sofa-framework/sofa/assets/11028016/eba86b90-3cfc-40f6-850f-6aba720d291d); ![lcp_nofriction](https://github.com/sofa-framework/sofa/assets/11028016/fb015cd7-54c6-4347-a07e-e5c960dc609c). Benchmarks:; As friction adds two additional constraints in the matrix, then frictionless scenes are faster:; ```; caduceus:; w/: 5000 iterations done in 52.071 s ( 96.0227 FPS); w/o: 5000 iterations done in 44.6895 s ( 111.883 FPS); ```; ```; 3instruments_collis:; w: 5000 iterations done in 69.8352 s ( 71.5971 FPS); w/o: 5000 iterations done in 43.0997 s ( 116.01 FPS); ```; Obviously, this change the behavior of the scene...; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failur",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3905:311,refactor,refactor,311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3905,1,['refactor'],['refactor']
Modifiability,"`sofa/helper/set.h` is not required if we just need `std::set`. `TagSet` also no longer inherits from `std::set`. Composition instead. Note that there is still a contaminating include in `Sofa/framework/DefaultType/src/sofa/defaulttype/DataTypeInfo.h`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4820:88,inherit,inherits,88,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4820,1,['inherit'],['inherits']
Modifiability,"a.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Compon",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2006,Plugin,Plugin,2006,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,a.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.L,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:2233,Plugin,PluginManager,2233,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"a.Core`. It is the base class of a new category of components. Then, a new module is introduced. In this module, the components are derived from `BaseOrderingMethod`. Therefore, its name is `Sofa.Component.LinearSolver.Ordering`. It is in `LinearSolver` because an ordering method is only used with linear solvers, more specifically sparse direct linear solvers. Only one ordering method is still in `LinearSolver.Direct`: `MetisOrderingMethod`. The goal is to move later this component in a plugin so that METIS is no longer a dependency of SOFA core. In the meantime, this method is still the preferred one for legacy reasons. Eigen-based solvers were problematic. In Eigen, everything is defined at compile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scot",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4477:1077,polymorphi,polymorphism,1077,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477,1,['polymorphi'],['polymorphism']
Modifiability,a/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded pl,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6028,Plugin,PluginManager,6028,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,a/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded p,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5890,Plugin,PluginManager,5890,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"a/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaMatrix.dll; [INFO] [PluginManager] 72 plugins have been loaded from C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from C:/Users/gfurn/anaconda3/envs/so",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10858,Plugin,PluginManager,10858,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,a/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/b,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:7866,Plugin,PluginManager,7866,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,a/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/li,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7152,Plugin,PluginManager,7152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"a/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. This dll is actually present. Pleas",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1747,Plugin,PluginManager,1747,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"a19fe for absolutely no good reasons.; It breaks a very basic functionaliy ( you can always load a library that is in your working directory ), also this change had some **interesting** side effects when basically you write a unit test which relies on; a scene file that uses a `RequiredPlugin`... that shortcoming was somewhat hidden by having all tests relying on `SofaGTest`, whose sole reason of being is to actually amend c5a19fe by populating the PluginRepository with the current working dir. Some additional functionalities are added to `RequiredPlugin` by this PR, namely the ability to specify other suffixes ( or no suffix at all ) to prepend when attemtping to load a plugin with a name hint. . # CHANGELOG ; FIX; [SofaHelper]; - Restore the `SOFA_LIBSUFFIX` behavior with msvc; - `PluginRepository` is initialized to contain the current working directory. CHANGE; [SofaHelper] ; - `PluginManager` : keep only a single version of the `loadPlugin` method. Also the method returns true; even if the plugin is already loaded. Returning false is kept only for real failures, whereby the library could ; not be loaded. If it is important to check wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ; It also gives some more advanced options to extend the plugin search. # Remarks. I do not know which version of the GUI is still in use. However I believe that the widget that can add/remove plugins to the `PluginManager` should be removed since there is no valid reason to ; keep it. I am really not sure about the current state of SofaGTestMain. It is hidden somewhere in the folder hierarchy (inside tools directory), and its existence seems to imply that you cannot write a unit test inside sofa without relying on it to ""initialise Sofa"" which is absolutely not the case. See PR #471; Instead h",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:1610,plugin,plugin,1610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,1,['plugin'],['plugin']
Modifiability,"a1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra.frag; [ERROR] [GLSLShader] 0(8) : warning C7555: 'varying' is deprecated, use 'in/out' instead; 0(16) : error C7616: global variable gl_Color is removed after version 140; 0(35) : warning C7533: global variable gl_FragColor is deprecated after version 120. [ERROR] [GLSLShader] ERROR: Compilation of Vertex shader failed:; [ERROR] [GLSLShader] From File: C:\Users\Alex\Dev\sofa1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra.vert; [ERROR] [GLSLShader] 0(20) : error C7616: global variable gl_ModelViewProjectionMatrix is removed after version 140; 0(23) : error C7616: global variable gl_ClipVertex is removed after version 140; 0(23) : error C7616: global variable gl_ModelViewMatrix is removed after version 140; 0(23) : error C7616: global variable gl_Vertex is removed after version 140. [ERROR] [GLSLShader] ERROR: Compilation of Geometry shader failed:; [ERROR] [GLSLShader] From File: C:\Users\Alex\Dev\sofa1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra_triangles.geo; [ERROR] [GLSLShader] 0(45) : warning C7533: global variable gl_FrontColor is deprecated after version 120; 0(46) : error C7616: global variable gl_ClipVertex is removed after version 140. [ERROR] [GLSLShader] SHADER compilation failed.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] Variable ""a_vertexColor"" NOT FOUND in shader ""[ 'share/shaders/tetra.vert' ]""; [ERROR] [Node()] Object 'OglFloat4Attribute1' already has a node (/OglFloat4Attribute1). Please remove it from this node before adding it to a new one.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] TopologyData: value already has a TopologyDataHandler. createTopologyHandler should only be called once at init of the TopologyData.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] Variable ""a_vertexColor"" NOT FOUND in shader ""[ 'share/shaders/tetra.vert' ]""; ```. I guess the shaders needs to be updated for version >=",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4398#issuecomment-1867351181:1242,plugin,plugins,1242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398#issuecomment-1867351181,1,['plugin'],['plugins']
Modifiability,"aPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:3780,plugin,plugin,3780,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,3,['plugin'],"['plugin', 'pluginManager', 'plugins']"
Modifiability,"aVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). SofaContextAPI::loadScene method returns: success (bool) for scene: C:/Users/dhananjay/unity_projects/testSofa/Assets/SofaUnity/Scenes/SofaScenes/tissue.scn; UnityEngine.Debug:LogError (object); SofaUnityAPI.SofaContextAPI:loadScene (string) (at Assets/SofaUnity/Plugins/SofaUnityAPI/SofaContextAPI.cs:189); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:486); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). ## SofaVisualModel:Reconnect ; UnityEngine.Debug:Log (object); SofaUnity.SofaUnityRenderer:Reconnect () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaUnityRenderer.cs:109); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:495); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:4256,Plugin,Plugins,4256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['Plugin'],['Plugins']
Modifiability,a_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7048,Plugin,PluginManager,7048,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPython.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaMiscCollision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaAllCommonComponents.dylib; Using python: /usr/local/opt/python@2/bin/python2.7; **** sys.path ****. /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python; /usr/local/lib/python2.7/site-packages; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python27.zip; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/Extras/lib/python; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk; /usr/local/Cellar/python@2/2,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:3916,plugin,plugins,3916,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,1,['plugin'],['plugins']
Modifiability,aconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8485,Plugin,PluginManager,8485,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,aconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [Plu,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5446,Plugin,PluginManager,5446,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"act detected"". ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: Version 21.12 binary; - State: Install directory: User home directory. **Command called**. ```txt. runSofa <filename>. ```. **Env vars**; --Unchanged--; ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. Result of the command above is unapplicable, since it is a Windows system. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaNonUniformFem.dll; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaMiscForceField.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/STLIB.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SoftRobots.dll; [WARNING] [UniformMass(uniformMass1)] Unused Attribute: ""massDensity"" with value: ""0.1""; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneChe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2651:1447,Plugin,PluginManager,1447,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2651,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"actory**. The factory currently access component by their classname only causing collision when two component have the same name/template. To avoid this, the PR add the plugin name as a prefix for the Factory'key. As an exemple, a component created with *<OglModel>* in the past is now referenced as *<SofaOpenglVisual.OglModel>*. Backward compatbility is possible by adding into the factory registration an alias mapping between ; new names and old name;; Eg:; ```; ""OglModel"" => ""SofaOpenglVisual.OglModel""; ```. 2) **Importing plugin and component *à la* python**; A new component called *FromComponent* is added to handle the loading of plugin and the import of object. . Examples of use:; ```; 	 # To make only <OglModel> accessible in the scene; 	<From plugin=""SofaOpenglVisual"" import=""OglModel""/>; 	<OglModel/>. 	# To add ""custom"" name in a scene ; 	<From plugin=""SofaOpenglVisual"" import=""OglModel"" as=""RenderingModel""/>; 	<RenderingModel/>. 	# To be a super lazy man and import everything; 	<From plugin=""SofaOpenglVisual"" import=""*""/>; ```. I didn't implemented multiple object imports so currently it is necessary to do ; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel""/>; <From plugin=""SofaOpenglVisual"" import=""GlslShader""/>; ```; But we could as in python with:; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel, GlslShader""/>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512:1285,plugin,plugin,1285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512,1,['plugin'],['plugin']
Modifiability,"actually this seems to happen during CMake config (not during ""normal"" MSVC compilation).; Also note that I am using v19.12, not master (so you might have already solved this?)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1331#issuecomment-613110288:43,config,config,43,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1331#issuecomment-613110288,1,['config'],['config']
Modifiability,"ad Sofa.Component.UserInterface.ConfigurationSetting plugin, which is causing failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1081,Plugin,Plugin,1081,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['Plugin'],['Plugin']
Modifiability,add SphereActiver class in SphereModel so that some controller inheriting from this class can compute sphere(s) de/activation during execution. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1259:63,inherit,inheriting,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1259,1,['inherit'],['inheriting']
Modifiability,aded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/C,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:4981,Plugin,PluginManager,4981,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,aded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Rele,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4043,Plugin,PluginManager,4043,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ady registered: Monitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec6d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [WARNING] [ObjectFactory] Class already registered: TopologicalChangeProcessor; [WARNING] [ObjectFactory] Class already registered: TopologyChecker; [WARNING] [ObjectFactory] Default template for class TopologyBoundingTrasher already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:32749,Plugin,PluginManager,32749,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,ager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMi,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8254,Plugin,PluginManager,8254,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,ager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3776,Plugin,PluginManager,3776,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,ager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:3570,Plugin,PluginManager,3570,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3613,Plugin,PluginManager,3613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ahah.... shame all the config for PR are with options... so we don't know if it works...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1817#issuecomment-778474866:23,config,config,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1817#issuecomment-778474866,1,['config'],['config']
Modifiability,"all SOFA files!. This PR contains:. ------------------------. Default properties for targets calling sofa_generate_package or sofa_install_targets; - include_directories:; - BUILD_INTERFACE: the directory given in INCLUDE_SOURCE_DIR or ""${CMAKE_CURRENT_SOURCE_DIR}/.."" (bad but necessary for old modules); - BUILD_INTERFACE: ""${CMAKE_BINARY_DIR}/include/${PROJECT_NAME}""; - INSTALL_INTERFACE: ""install"" (if relocatable plugin) or ""install/${PROJECT_NAME}""; - DEBUG_POSTFIX: ""_d""; - VERSION: Sofa_VERSION. ------------------------. Cleaning of config.h mechanism (consistency with all other SOFA modules); - deprecate headers not following the ""config.h"" naming convention; - sofa/core/core.h -> sofa/core/config.h; - sofa/defaulttype/defaulttype.h -> sofa/defaulttype/config.h; - sofa/helper/helper.h -> sofa/helper/config.h; - sofa/simulation/simulationcore.h -> sofa/simulation/config.h; - SofaSimulationCommon/common.h -> SofaSimulationCommon/config.h; - SofaSimulationGraph/graph.h -> SofaSimulationGraph/config.h; - SofaSimulationTree/tree.h -> SofaSimulationTree/config.h; - sofa/gui/SofaGUI.h -> sofa/gui/config.h; - sofa/gui/qt/SofaGuiQt.h -> sofa/gui/qt/config.h; - centralize config.h call chain on sofa/config.h; - sofa/helper/system/config.h is now useless; -> WARNING: maybe not a good idea, review needed here; - dispatch all SOFA_BUILD_* macros from packages' config.h towards modules' config.h (good for future modularizations). ------------------------. Moving SofaGui modules into ""modules"" directory + cleaning their source trees. ------------------------. Every package is now also a library. Work started by @fredroy in #1314, 3 packages remained; - SofaFramework; - SofaGui; - SofaSimulation. ------------------------. Cleaning source trees to eliminate some "".."" include directories; (files move but includes stay the same); - SofaExporter; - SofaGuiCommon; - SofaGuiQt; - SofaHeadlessRecorder; - SofaMiscCollision. ------------------------. Fix #1395 by removing ""relocatable""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1397:1065,config,config,1065,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1397,1,['config'],['config']
Modifiability,"all the configuration necessary for compiling the SofaFramework and the subsequent modules.; It allows to spread efficiently all the flags/config/whatever to the cmake modules using it. # Description; A lot of CMake configuration/flags are spread everywhere in the code base: root CMakefile, Soframework CMakefile, SofaHelper CMakefile.; Moreover, a lot of compiler options are not set by **target** (CMake notion), so those are to added EVERYTIME for each projet/plugin (see SofaPython3): c++17, MSVC special flags, etc. # Solution; This PR regroups all CMake config code and SofaFramework is no more the ""bootstrapper"" or whatever it was not.; If you linking against anything from SOFA (most likely at least SofaHelper), the configuration will spread into your project automatically.; This module will be the lowest in the depencency chain (was a bastard mix of SofaFramework/SofaHelper before). # WIP; * ~~Some CMake file to clean~~. * ~~Add no-attribute flags from #1682~~. * Some variables are still not linked to Sofa.Config like Sofa_VERSION: it was in the root CMakefile before, so all the projects know this variable.; For now, Sofa.Config set those global variables **PARENT_SCOPE** but this is ugly in my opinion, and not ""Modern CMake""; One solution is to link this variable to a property of Sofa.Config, and retrieve this property when needed. But it seems a bit bothersome.; ```; get_target_property(Sofa_VERSION ${TARGET} Sofa_VERSION_PROPERTY); ```; Any opinion ?. * I guess there will other things to do later like removing all the tests related code/config into an eventual Sofa.Test, etc; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1674:1068,variab,variables,1068,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1674,1,['variab'],['variables']
Modifiability,already registered: MeshSTLLoader; [WARNING] [ObjectFactory] Class already registered: MeshTrianLoader; [WARNING] [ObjectFactory] Class already registered: MeshXspLoader; [WARNING] [ObjectFactory] Class already registered: OffSequenceLoader; [WARNING] [ObjectFactory] Class already registered: SphereLoader; [WARNING] [ObjectFactory] Class already registered: StringMeshCreator; [WARNING] [ObjectFactory] Class already registered: VoxelGridLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [WARNING] [ObjectFactory] Class already registered: CompareState; [WARNING] [ObjectFactory] Class already registered: CompareTopology; [WARNING] [ObjectFactory] Class already registered: DataController; [WARNING] [ObjectFactory] Class already registered: DataMonitor; [WARNING] [ObjectFactory] Class already registered: DevAngleCollisionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DevMonitorManager; [WARNING] [ObjectFactory] Class already registered: DevTensionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: EvalPointsDistance<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: EvalPointsDistance<Vec3d>; [WARNING] [ObjectFactory] Class already registered: EvalSurfaceDistance<Vec3d>; [WARNING] [ObjectF,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:29991,Plugin,PluginManager,29991,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,alyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is depreca,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9695,Plugin,PluginManager,9695,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,amples\Benchmark\Performance\MatrixAssembly\MatrixAssembly_direct.scn; examples\Components\linearsolver\preconditioner\FEMBAR_PCG_AsyncSparseLDLSolver.scn; examples\Components\loader\GIDMeshLoader.scn; examples\Components\solver\EulerExplicitSolver\EulerExplicitSolver.scn; examples\Components\solver\EulerExplicitSolver\EulerSymplecticSolver.scn; examples\Components\solver\NewmarkImplicitSolver.scn. [INFO] [PluginFinder] Found 9 files with deprecated:; examples\Components\interactionforcefield\BoxStiffSpringForceField.scn; examples\Components\linearsolver\FEMBAR_AsyncSparseLDLSolver.scn; examples\Components\misc\sleep\test_sleep.scn; examples\Components\misc\sleep\test_sleep2.scn; examples\Components\misc\sleep\test_sleep3.scn; examples\Components\visualmodel\OglLabel.scn; examples\Tutorials\Mappings\TutorialMappingOctopusArticulated.scn; examples\Tutorials\StepByStep\Visual\5_Visual.scn; examples\Tutorials\StepByStep\Visual\6_Visual.scn. [INFO] [PluginFinder] Found 132 files with warning:; examples\Benchmark\Analysis\constantMomentum.scn; examples\Benchmark\Performance\benchmark_cubes.scn; examples\Benchmark\Performance\BuildLCP\BuiltConstraintCorrection.scn; examples\Benchmark\Performance\BuildLCP\NonBuiltConstraintCorrection.scn; examples\Benchmark\TopologicalChanges\AffineMovementConstraint__RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\LinearMovementConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectDirectionConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToLineConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPointConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\TriangularBendingSprings_RemovingMeshTest.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3352:1098,Plugin,PluginFinder,1098,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3352,1,['Plugin'],['PluginFinder']
Modifiability,amples\Tutorials\OldTutorials\demo7Triangle.scn; examples\Tutorials\OldTutorials\demo8.scn; examples\Tutorials\OldTutorials\demo8Triangle.scn; examples\Tutorials\OldTutorials\demo9.scn; examples\Tutorials\OldTutorials\tutorial4.scn; examples\Tutorials\StepByStep\FullObject\0_FullObject.scn; examples\Tutorials\StepByStep\FullObject\1_FullObject.scn; examples\Tutorials\StepByStep\FullObject\2_FullObject.scn; examples\Tutorials\StepByStep\FullObject\3_FullObject.scn; examples\Tutorials\StepByStep\FullObject\4_FullObject.scn; examples\Tutorials\StepByStep\FullObject\5_FullObject.scn; examples\Tutorials\StepByStep\FullObject\6_FullObject.scn; examples\Tutorials\StepByStep\FullObject\7_FullObject.scn; examples\Tutorials\StepByStep\FullObject\8_FullObject.scn; examples\Tutorials\StepByStep\Pendulum\0_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\1_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\2_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\3_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\4_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\5_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\6_Pendulum.scn; examples\Tutorials\StepByStep\Pendulum\7_Pendulum.scn; examples\Tutorials\StepByStep\TopologicalMapping\2_TopoMapping.scn; examples\Tutorials\StepByStep\TopologicalMapping\5_TopoMapping.scn; examples\Tutorials\StepByStep\TopologicalMapping\6_TopoMapping.scn; examples\Tutorials\StepByStep\Visual\3_Visual.scn; examples\Tutorials\Topologies\TopologyDynamicSurfaceMesh.scn; examples\Tutorials\Topologies\TopologyHexa2QuadTopologicalMapping.scn; examples\Tutorials\Topologies\TopologyHexa2TetraTopologicalMapping.scn; examples\Tutorials\Topologies\TopologyQuad2TriangleTopologicalMapping.scn; examples\Tutorials\Topologies\TopologyTetra2TriangleTopologicalMapping.scn; examples\Tutorials\Topologies\TopologyTriangle2EdgeTopologicalMapping.scn. [INFO] [PluginFinder] Found 1 files with error:; examples\Benchmark\Accuracy\cylinder_PhantomSolution.scn; ```,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3352:9236,Plugin,PluginFinder,9236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3352,1,['Plugin'],['PluginFinder']
Modifiability,an/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/lib,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:7975,Plugin,PluginManager,7975,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3201,Plugin,PluginManager,3201,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"anager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternalModule` function's pointer or plugin's name as another already loaded plugin; - A plublic `PluginManager::addPlugin` that adds a plugin to the register without loading it (it must be loaded in the memory beforehand) is now available. **Supplementary python bindings**; Since me and @vmagno used this PR extensively during the past 2 months for our simulations, we added a couple of python bindings useful to us. I think this wraps up a lot of things, let me know what you guys think. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:5498,Plugin,PluginManager,5498,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"anager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::forcefield::TetrahedronFEMForceField<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::init(); sofa:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9674,Plugin,PluginManager,9674,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"anager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::comp",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9516,Plugin,PluginManager,9516,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"anager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; The object is not in the factory.; This component has been PLUGINIZED since SOFA v20.06. To continue using this component you need to update you scene and add <RequiredPlugin name='SofaNonUniformFem'/>. [ERROR] [SceneLoaderXML] Node initialization failed. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckColli",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9900,Plugin,PluginManager,9900,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1962:2453,variab,variables,2453,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962,1,['variab'],['variables']
Modifiability,"and about the process, I think this PR is a very good test case for everyone to give it a try.; Regarding the feedback we should be able to package it together as a public plugin.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/700#issuecomment-400260057:172,plugin,plugin,172,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/700#issuecomment-400260057,1,['plugin'],['plugin']
Modifiability,ang-3.5_default_release sofa$ ./build/bin/runSofa -g batch test.py; [INFO] [runSofa] Loading automatically plugin list in /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaSparseSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPreconditioner.dylib; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPython.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaMiscCollision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaAllCommonComponents.dylib; Using python: /usr/local/opt/python@2/bin/python2.7; **** sys.path ****. /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python; /usr/local/lib/python2.7/site-packa,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:3068,Plugin,PluginManager,3068,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"anicalObject` and `PointCollisionModel`.; I repeatedly load and unload the scene, first with no collision models, then one collision model, and then two collision models.; -> each graph has 3 segments. ```python; import Sofa; import Sofa.Core; import Sofa.Simulation; from enum import Enum. class TestCase(Enum):; ONE_MODEL = 0; TWO_MODELS = 1; NONE = 2. class SimulationHandler:; def __init__(self):. self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, TestCase.NONE); Sofa.Simulation.init(self.root_node). def step(self):; Sofa.Simulation.animate(self.root_node, self.root_node.getDt()). def reload(self, case: TestCase = TestCase.NONE):. Sofa.Simulation.unload(self.root_node); self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, case); Sofa.Simulation.init(self.root_node). def createScene(root, case: TestCase):; plugins = [; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ]; for plugin in plugins:; root.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root.addObject(""DefaultAnimationLoop""); root.addObject(""DefaultPipeline""); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""DefaultContactManager""); root.addObject(; ""LocalMinDistance"",; alarmDistance=5.0,; contactDistance=0.5,; ). node_1 = root.addChild(""child_1""); node_1.addObject(""MechanicalObject"", position=[0, 0, 0] * 5). node_2 = root.addChild(""child_2""); node_2.addObject(""MechanicalObject"", position=[1, 1, 1] * 5). if case == TestCase.ONE_MODEL:; node_1.addObject(""PointCollisionModel""); elif case == TestCase.TWO_MODELS:; node_1.addObject(""PointCollisionModel""); node_2.addObject(""PointCollisionModel""); elif case == TestCase.NONE:; pass. return node_1, node_2. if __name__ == ""__main__"":; simulation = SimulationHandler(). for i in range(5000):; simulation.step(); simulation.reload(case=TestCase.NONE). for i in range(5000):; simulation.step(); simulation.relo",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318:1154,plugin,plugin,1154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318,2,['plugin'],"['plugin', 'plugins']"
Modifiability,ant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:3056,Plugin,PluginManager,3056,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,anyway the variable to be used should be the inherited `f_printLog` right @damienmarchal @alxbilger ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1557197650:11,variab,variable,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3871#issuecomment-1557197650,2,"['inherit', 'variab']","['inherited', 'variable']"
Modifiability,"applications/plugins/CGALPlugin/src/CGALPlugin/BooleanOperations.cpp line 274; Code:; helper::WriteAccessor< Data<helper::vector<int>> > indices1 = d_indices1Out;; helper::WriteAccessor< Data<helper::vector<int>> > indices2 = d_indices2Out;; m_distribution.clear();; std::pair<int, std::pair<int, int>> pair; // <- better with space (> >)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2219:13,plugin,plugins,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2219,1,['plugin'],['plugins']
Modifiability,applications/plugins/PersistentContact/PersistentUnilateralInteractionConstraint.inl line 485; Code:; template<class DataTypes>; void PersistentUnilateralInteractionConstraint<DataTypes>::draw(const core::visual::VisualParams* vparams); {; return;; if (!vparams->displayFlags().getShowInteractionForceFields()) return; // <-- unreachable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3877:13,plugin,plugins,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3877,1,['plugin'],['plugins']
Modifiability,applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaCollisionDetection.cpp line 385 ; Code:. return results.nbTests();. return 0; // <-- unreachable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1691:13,plugin,plugins,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1691,1,['plugin'],['plugins']
Modifiability,"applications/plugins/SofaDistanceGrid/extlibs/miniFlowVR/src/librender/mesh_io_mesh.cpp line 130; Code:; if (fread(&magic, sizeof(int), 1, fp)<=0) return false; // <-- missing fclose",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1884:13,plugin,plugins,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1884,1,['plugin'],['plugins']
Modifiability,"ar); OpenGL.GL.glMatrixMode(OpenGL.GL.GL_MODELVIEW); OpenGL.GL.glLoadIdentity(). cameraMVM = root.camera.getOpenGLModelViewMatrix(); OpenGL.GL.glMultMatrixd(cameraMVM); Sofa.SofaGL.draw(root). pygame.display.flip(). def GetFrame():; """"""; Get frame image as numpy. Parameters:; ----------; kwargs: Dictionary; Initialization of the arguments. Returns:; -------; image: np.ndarray. """"""; buffer = OpenGL.GL.glReadPixels(0, 0, *display_size, OpenGL.GL.GL_RGB, OpenGL.GL.GL_UNSIGNED_BYTE); image_array = np.fromstring(buffer, np.uint8); if image_array.shape != (0,):; image = image_array.reshape(display_size[1], display_size[0], 3); else:; image = np.zeros((display_size[1], display_size[0], 3)); image = np.flipud(image); return image; ; def SaveImage(image:np.ndarray, filename:str):; im = PIL.Image.fromarray(image); im.save(filename); . def createScene(root):; root.addObject('RequiredPlugin', pluginName=['BeamAdapter',; 'SofaMiscCollision',; 'SofaConstraint',; 'SofaImplicitOdeSolver',; 'SofaGeneralLinearSolver',; 'SofaBoundaryCondition',; 'SofaDeformable',; 'SofaTopologyMapping',; 'SofaOpenglVisual,'; 'SofaMeshCollision',; 'Sofa.Component.Collision.Detection.Algorithm',; 'Sofa.Component.IO.Mesh',; 'Sofa.GL.Component.Rendering3D',; 'Sofa.GL.Component.Shader'; ]); root.addObject('FreeMotionAnimationLoop'); root.addObject('VisualStyle', displayFlags=['showVisualModels',; 'showCollisionModels',; ]); root.addObject('LCPConstraintSolver', mu='0.1', tolerance='1e-10', maxIt='1000', build_lcp='false'); root.addObject('DefaultPipeline', draw='0', depth='6', verbose='1'); root.addObject('BruteForceBroadPhase', name='N2'); root.addObject('BVHNarrowPhase'); root.addObject('LocalMinDistance', contactDistance='1', alarmDistance='3', name='localmindistance', angleCone='0.02'); root.addObject('DefaultContactManager', name='Response', response='FrictionContactConstraint'). name='guide'; straightLength=980.0; length=1000.0; numEdges=200; youngModulus=20000; spireDiameter=25; numEdgesCollis=[50,10",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4636:11922,plugin,pluginName,11922,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636,1,['plugin'],['pluginName']
Modifiability,"are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = D:/github-clones/sofa/build/bin;D:/github-clones/sofa/build/plugins;D:/github-clones/sofa/build/bin/RelWithDebInfo; [INFO] [runSofa] DataRepository paths = D:/github-clones/sofa/src/share;D:/github-clones/sofa/src/examples;D:/github-clones/sofa/build;D:/github-clones/sofa/build; [INFO] [runSofa] GuiDataRepository paths = D:/github-clones/sofa/src/applications/projects/runSofa/resources;D:/github-clones/sofa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/S",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:5480,Plugin,PluginManager,5480,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,are/sofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/examples:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/runSofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/qt; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Com,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:1401,plugin,plugin,1401,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['plugin'],['plugin']
Modifiability,"arser = argparse.ArgumentParser(); parser.add_argument(""-n"", ""--number_of_steps"", type=int, help=""Number of steps until the final forces are reach"", default=10); o = parser.parse_args(). sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim); root = Sofa.createNode(""root""). # ...; # some code that creates the scene tree; # ... root.init(). for i in range(number_of_steps):; root.simulationStep(dt); updateConvergencePlot(root). analysis = complexCalculsOnMatrices(root); saveResults(root, analysis); ```. You could even make your own runSofa.py that launches the runSofa GUI (a more complete python runSofa script can be found in an example file provided by this PR) :. ```#!/usr/bin/python2.7. from libSofaPython import Sofa. sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim). root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(). sofa_prefix = ""/home/jnbrunet/sources/sofa/build""; Sofa.GUIManager.setSofaPrefix(sofa_prefix); Sofa.GUIManager.setConfigDirectoryPath(sofa_prefix + ""/config""); Sofa.GUIManager.setScreenshotDirectoryPath(sofa_prefix + ""/screenshots""). Sofa.GUIManager.init(""qglviewer""); Sofa.GUIManager.createGUI(); Sofa.GUIManager.setDimension(800, 600); Sofa.GUIManager.setScene(root). Sofa.GUIManager.MainLoop(root). Sofa.GUIManager.closeGUI(); ```; ### What else this PR brings. **Plugin manager**; One of the problem arising from this feature is the duplicated loading of the python plugin: when issuing the `import Sofa` command in the python script the interpreter loads the library (SofaPython.so). If the script explicitly calls the `Sofa.loadPlugin(""SofaPython"")` command, Sofa's PluginManager will load again the same library. Example of a faulty script:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in th",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:2013,config,config,2013,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['config'],['config']
Modifiability,"as been removed. The package still exists for; compatibility but is empty. Eigen classes were moved to Sofa.LinearAlgebra; and SVDLinearSolver to SofaDenseSolver.; Call Stack (most recent call first):; /media/maxim/big-500/sofa/build/v21.12/lib/cmake/SofaBaseConfig.cmake:35 (find_package); /media/maxim/big-500/sofa/build/v21.12/lib/cmake/SofaGeneralDeformableConfig.cmake:34 (find_package); modules/SofaGeneralDeformable/SofaGeneralDeformable_test/CMakeLists.txt:12 (find_package). Adding plugin SofaGeneralEngine; Adding plugin SofaGeneralExplicitOdeSolver; Adding plugin SofaGeneralImplicitOdeSolver; Adding plugin SofaGeneralLinearSolver; Adding plugin SofaGeneralRigid; Adding plugin SofaGeneralObjectInteraction; Adding plugin SofaGeneralSimpleFem; Adding plugin SofaGeneralTopology; Adding plugin SofaTopologyMapping; Adding plugin SofaUserInteraction; Adding plugin SofaConstraint; Adding plugin SofaGeneralLoader; Adding plugin SofaExporter; Adding plugin SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding plugin SofaPreconditioner; Adding plugin SofaHaptics; Adding plugin SofaValidation; Adding plugin SofaDenseSolver; Adding plugin SofaNonUniformFem; Adding plugin SofaOpenglVisual; Adding plugin SofaMiscTopology; Adding plugin SofaMiscExtra; Adding plugin SofaMiscForceField; Adding plugin SofaMiscEngine; Adding plugin SofaMiscSolver; Adding plugin SofaMiscFem; Adding plugin SofaMiscMapping; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; CMake Error at /usr/share/cmake-3.15/Modules/FetchContent.cmake:903 (message):; CMake step for cxxopts failed: No such file or directory; Call Stack (most recent call first):; /usr/share/cmake-3.15/Modules/FetchContent.cmake:1006 (__FetchContent_directPopulate); modules/SofaGuiCommon/CMakeLists.txt:18 (FetchContent_Populate). Configuring incomplete, errors occurred!; See also ""/media/maxim/big-500/sofa/build/v21.12/CMakeFiles/CMakeOutput.log"".; See also ""/media/maxim/big-500/s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3184:2001,plugin,plugin,2001,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3184,28,['plugin'],['plugin']
Modifiability,"as said by Damien the wise in PR #407 . ""Module are systematically compiled which have a sensible impact to Sofa.; I'm moving that into plugin to allow dev to conditionnally activate/deactivate the plugin they; don't need."". This PR is about putting SofaMiscForceField in a plugin.; It implied conditional activation of some unit tests to build properly when the plugin is switched off. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/408:136,plugin,plugin,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/408,4,['plugin'],['plugin']
Modifiability,ase/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:5282,Plugin,PluginManager,5282,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"aseLoader.h>; #include <sofa/core/objectmodel/Event.h>. class Sequence : MultiLink {} ;. Sequence<sofa::core::BehaviorModel> behaviorModel;; Sequence<sofa::core::BaseMapping> mapping;. Sequence<sofa::core::behavior::OdeSolver> solver;; Sequence<sofa::core::behavior::ConstraintSolver> constraintSolver;; Sequence<sofa::core::behavior::BaseLinearSolver> linearSolver;. Single<sofa::core::topology::Topology> topology;; Single<sofa::core::topology::BaseMeshTopology> meshTopology;; Sequence<sofa::core::topology::BaseTopologyObject> topologyObject;. Single<sofa::core::BaseState> state;; Single<sofa::core::behavior::BaseMechanicalState> mechanicalState;; Single<sofa::core::BaseMapping> mechanicalMapping;; Single<sofa::core::behavior::BaseMass> mass;; Sequence<sofa::core::behavior::BaseForceField> forceField;; Sequence<sofa::core::behavior::BaseInteractionForceField> interactionForceField;; Sequence<sofa::core::behavior::BaseProjectiveConstraintSet> projectiveConstraintSet;; Sequence<sofa::core::behavior::BaseConstraintSet> constraintSet;; Sequence<sofa::core::objectmodel::ContextObject> contextObject;; Sequence<sofa::core::objectmodel::ConfigurationSetting> configurationSetting;. Sequence<sofa::core::visual::Shader> shaders;; Sequence<sofa::core::visual::VisualModel> visualModel;; Sequence<sofa::core::visual::VisualManager> visualManager;; ```. This is why I'm searching for a way to fix SingleLink/MultiLink to make it forward declaration friendly. . More fundamentally the Link implementation is interesting but it is also very complex. This complexity and its consequence in term of maintainability (very few of the sofa developpers can understand it easily) and compilation cost make me wonder if we shouldn't investigate/consider simpler approach. . So to anyone @JeremieA, @bcarrez , @maxime-tournier , @matthieu-nesme, @hugtalbot , @StephaneCotin, @guparan , @ErwanDouaille ... if you have idea for a simpler and/or forward declaration friendly approach help would be appreciated.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/436#issuecomment-334378104:2829,maintainab,maintainability,2829,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/436#issuecomment-334378104,1,['maintainab'],['maintainability']
Modifiability,"ash; #################; --- sys.version ---; 3.8.10 (default, Jul 29 2024, 17:02:10) ; [GCC 9.4.0]; --- PATH ---; /home/sofa/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2059,Plugin,Plugin,2059,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['Plugin'],['Plugin']
Modifiability,"assertion was using an undeclared variable so the debug build was failing. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2989:34,variab,variable,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2989,1,['variab'],['variable']
Modifiability,"aste the following lines at the begining of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBruteForceBroadPhase, ParallelBVHNarrowPhase, ]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [LCPConstraintSolver, FreeMotionAnimationLoop, UncoupledConstraintCorrection, ]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver, ]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader, ]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [TriangleCollisionModel, LineCollisionModel, PointCollisionModel, ]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, SpotLight, OglModel, ]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [LineCollisionModel, PointCollisionModel, TriangleCollisionModel]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [Light",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2111:1435,plugin,plugins,1435,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111,2,['plugin'],['plugins']
Modifiability,atch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/s,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:2311,Plugin,PluginManager,2311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ationLoop"",; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ""Sofa.Component.Collision.Response.Contact"",; ""Sofa.Component.Constraint.Lagrangian.Solver"",; ""Sofa.Component.Visual"",; ""Sofa.Component.Collision.Geometry"",; ""Sofa.Component.Constraint.Projective"",; ""Sofa.Component.LinearSolver.Iterative"",; ""Sofa.Component.Mapping.NonLinear"",; ""Sofa.Component.Mass"",; ""Sofa.Component.ODESolver.Backward"",; ""Sofa.Component.StateContainer"",; ""Sofa.GL.Component.Rendering3D"",; ""Sofa.Component.Constraint.Lagrangian.Correction"",; ""Sofa.Component.Topology.Container.Dynamic"",; ""MultiThreading"",; ""Sofa.Component.SolidMechanics.FEM.NonUniform"",; ""Sofa.Component.Topology.Container.Grid"",; ""Sofa.Component.IO.Mesh"",; ""Sofa.Component.LinearSolver.Direct"",; ""Sofa.Component.Mapping.Linear"",; ""Sofa.Component.Topology.Container.Constant"",; ]. def createScene(root: Sofa.Core.Node):. plugin_set = set(PLUGINS); for plugin in plugin_set:; root.addObject(""RequiredPlugin"", name=plugin). root.gravity = [0.0, 0.0, -9.81]; root.dt = 0.02. root.addObject(""FreeMotionAnimationLoop""); root.addObject(; ""VisualStyle"",; displayFlags=[; ""showVisual"",; ""showForceFields"",; ""showBehaviorModels"",; ],; ). root.addObject(""CollisionPipeline"", depth=6, verbose=False, draw=False); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""MinProximityIntersection"", name=""Proximity"", alarmDistance=0.5, contactDistance=0.3); root.addObject(""CollisionResponse"", response=""FrictionContactConstraint""); root.addObject(""GenericConstraintSolver""). scene_node = root.addChild(""scene""). composite_node = scene_node.addChild(""composite""). mesh_files = [; ""mesh/liver.obj"",; ]. composite_node.addObject(; ""SparseGridMultipleTopology"",; n=[6, 6, 6],; fileTopology=mesh_files[0],; fileTopologies=mesh_files,; nbVirtualFinerLevels=2,; finestConnectivity=False,; stiffnessCoefs=[1] * len(mesh_files),; massCoefs=[1] * len(mesh_files),; ). composite_node.addObje",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838:8886,plugin,plugin,8886,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838,1,['plugin'],['plugin']
Modifiability,"ations/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/. && /usr/bin/cmake -D verbose:BOOL=OFF -D build_configuration:STRING=Release -D generated_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o -D generated_cubin_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.cubin.txt -P /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake; /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(1251): warning: variable ""threads2"" was declared but never referenced. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(360): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_deriveSPKTensor"" is undefined; detected during instantiation of ""void StandardTetrahedralFEMForceFieldCuda_addForce_kernel(int, real *, real *, const real *, __nv_bool, const real *, float, float) [with real=float]"" ; (1248): here. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(587): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_ElasticityTensor"" is undefined; detected during instantiation of ""void StandardTetrahedralFEMForceFieldCuda_addDForce_kernel(int, real *, real *, real, real, real *) [with real=float]"" ; (1266): here. 2 errors detected in the compilation of ""/tmp/tmpxft_0000044c_00000000-6_CudaStandardTetrahedralFEMForceField.cpp1.ii"".; CMake Error at SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake:275 (message)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057:1996,plugin,plugins,1996,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057,1,['plugin'],['plugins']
Modifiability,"ator delete mismatch; - CatmullRomSplineMapping: fix applyJ compilation; - ConstantForceField: fix avoid crashes in draw when trying to apply a constantforcefield to a non existing point; - DistanceGrid: fix incorrect use of serr; - GeneralConstraintSolver: fix incorrect parent class in SOFA_CLASS macro; - IndicesFromValues: fix use getTemplateName to avoid problems of links with other data; - EulerImplicitSolver: fix Disable calls to solveConstraint from EulerImplicitSolver by default as it is not needed unless an very specific solver is added and it currently crashes in other cases + wrong argument order in calls to `AdvancedTimer::stepNext()`; - FixedConstraint and PartialFixedConstraint: fix ""fixed FixedConstraint & PartialFixedConstraint for size-varying mechanical objects"".; - MechanicalObject: fix crash in debug with null pointer; - Mass: fix remove error logging in Mass method that are inherited from Forcefield API and that are not relevant for Mass; - MechanicalMatrixVisitor and MechanicalOperations: fix if using a Linear Solver, projective constraints were wrongly applied when a force field is in a child node; - Mesh2PointMechanicalMapping: fix constraints ApplyJT; - Metis(gk_arch.h): fix compilation with Visual Studio 2015; - ParticlesRepulsionForceField and RepulsiveSpringForceField: fix avoid division by 0 on repulsion force fields; - PersistentContactBarycentricMapping: fix init variables in constructor; - RestShapeSpringsForceField: fix Runtime stiffness tunning was not working + optimisation and cleaning; - SkinningMapping: fix compilation of SofaRigid; - SofaViewer: fix crashes when current camera of pick-handler is NULL; - SurfacePressureForceField: fix volume computation formula; - TaitSurfacePressureForceField: fix contribution to the stiffness matrix for the second component df = P+dN in TaitSurfacePressureForceField; - TopologicalMapping: fix display error messages when a TopologicalMapping failed to be created; - TriangularFEMForceFieldOptim: ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218:1420,inherit,inherited,1420,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218,1,['inherit'],['inherited']
Modifiability,"ave some problems regarding some external libraries that are embedded in SOFA code. ; Here is a try to sum up all of these embedded libraries:; | Lib name | Type | Location in code | License | Status |; | --- | --- | --- | --- | --- |; | difflib | header-only | `extlibs` | MIT | OK |; | json nlohmann | header-only | `extlibs` | MIT ~~**(should be in a separate file)**~~ | OK. Fixed in #4272 |; | stb | header-only | `extlibs` | MIT | OK |; | TinyXML | static | `extlibs` | zlib **(should be in a separate file)** | Externalize tinyxml dependency: #4240 (waiting for merge) |; | miniFlowVR | static | `applications/plugins/SofaDistanceGrid/extlibs` | LGPL (version ?) **(should be in a separate file)** | Not built by default. TODO: plugin to be externalized (#1442 ) |; | newmat | static | `applications/plugins/SofaNewmat/extlibs` | type inconnu | Not built by default. TODO: plugin to be externalized (#1442 ) |; | CImg | header-only | `applications/plugins/CImgPlugin/extlibs` | CeCILL-C / CeCILL | OK |; | csparse | static | `Sofa/Component/LinearSolver/Direct/extlibs` | **no license file** | Plugin to be externalized. WIP : #4258 |; | metis | static | `Sofa/Component/LinearSolver/Direct/extlibs` | Apache v2 | Externalize metis dependency : #4266 (waiting for merge) |; | gtest | shared | `Sofa/framework/Testing/extlibs` | BSD-3-Clause | Externalize ? |; | cxxopts | header-only | `Sofa/GUI/Common (fetched from GitHub)` | MIT | Add to possibility to use external dependency and prevent from fetching: Fixed in #4273 |; | libQGLViewer | shared | `Sofa/GUI/Qt` | GPL | Find or use embedded code (find module being fixed in #4290) |. The actions we should take to make our code compatible for the conda package on conda-forge are:; 1. Fix the missing licenses files (points in bold); 2. Avoid all static libraries. For point 2, we are not concerned by miniFlowVR and newmat, as we do not compile the corresponding plugins for the conda package, at least for now. Before considering any acti",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4221:1019,plugin,plugin,1019,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4221,3,"['Plugin', 'plugin']","['Plugin', 'plugin', 'plugins']"
Modifiability,b0a1fff libvMisc.dylib (760.40.6) <9D11FCFC-6C30-32B6-864B-9CC3ED7D1143> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib; 0x7fff2b0a2000 - 0x7fff2b13afff libate.dylib (3.0.4) <42707DFB-86A4-3F56-A5AF-E6DAA7E49DC7> /usr/lib/libate.dylib; 0x7fff2b13b000 - 0x7fff2b142fff libIOReport.dylib (64) <8DEEA01D-B715-340A-900E-B448AB22720E> /usr/lib/libIOReport.dylib; 0x7fff2b143000 - 0x7fff2b171fff com.apple.CrashReporterSupport (10.13 - 15047.1) <EA306EDB-2A02-3FB6-8812-F5EAA337AEE6> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport; 0x7fff2b189000 - 0x7fff2b209fff com.apple.CVNLP (1.0 - 119) <01312979-649E-3869-801B-C4CF70DA1236> /System/Library/PrivateFrameworks/CVNLP.framework/Versions/A/CVNLP; 0x7fff2b228000 - 0x7fff2b25dfff com.apple.pluginkit.framework (1.0 - 1) <343BA2F7-C204-3C30-BAC1-C85CC0A8DCFF> /System/Library/PrivateFrameworks/PlugInKit.framework/Versions/A/PlugInKit; 0x7fff2b25e000 - 0x7fff2b265fff libMatch.1.dylib (38) <DE8B7844-BFB2-3E3E-9FD0-1C9AD1DC1736> /usr/lib/libMatch.1.dylib; 0x7fff2b266000 - 0x7fff2b2f1fff libCoreStorage.dylib (554) <044E6815-6340-31D5-BEE9-760C354E92A3> /usr/lib/libCoreStorage.dylib; 0x7fff2b2f2000 - 0x7fff2b345fff com.apple.AppleVAFramework (6.1.3 - 6.1.3) <E3BE877B-1C78-3ABF-8C41-66FE9B6971C7> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA; 0x7fff2b346000 - 0x7fff2b35ffff libexpat.1.dylib (26) <1D978F91-674E-3A44-8A93-773C7E3E513C> /usr/lib/libexpat.1.dylib; 0x7fff2b360000 - 0x7fff2b369fff libheimdal-asn1.dylib (597.80.1) <8F6CD867-FB45-375D-82C1-E0AE79558C8C> /usr/lib/libheimdal-asn1.dylib; 0x7fff2b36a000 - 0x7fff2b37efff com.apple.IconFoundation (479.3 - 479.3) <3563C4B4-ABF6-3DE0-8381-D3667DFE2B80> /System/Library/PrivateFrameworks/IconFoundation.framework/Versions/A/IconFoundation; 0x7fff2b37f000 - 0x7fff2b3ecfff com.apple.IconServices (479.3 - 479.3) <B6859735-701D-307E-8061-298BA2296E47> /Syste,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:48537,PlugIn,PlugInKit,48537,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['PlugIn'],['PlugInKit']
Modifiability,"bSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugin ""wayland"" in """". (process:29694): Gtk-WARNING **: 22:14:09.328: Locale not supported by C library.; 	Using the fallback 'C' locale.; Gtk-Message: 22:14:09.408: Failed to load module ""canberra-gtk-module""; Gtk-Message: 22:14:09.409: Failed to load module ""canberra-gtk-module""; [INFO] [SofaPluginManager] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:11609,Plugin,PluginManager,11609,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugins']"
Modifiability,"based on:; - #2813 (which is itself based on #2790 ). All OBB/Capsule code-related into its own plugin.; Has kind of the same file structure as Sofa.Component.Collision. Tests were adapted as well. [ci-depends-on https://github.com/sofa-framework/THMPGSpatialHashing/pull/1]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2820:96,plugin,plugin,96,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2820,2,"['adapt', 'plugin']","['adapted', 'plugin']"
Modifiability,"be parsed as a Sofa parameter"". . This approach has several advantages:; - it does not requires to have a lot of ""hard-coded"" test into the createObject function. ; - it does not mess with the existing str() function and there is no risk to break existing scenes or applications and we haven't to worry about backward compatibility. ; - it makes things very explicit, because people that want to have their object used in createObject have to implement it instead of ""assuming"" that by default any object's str function will produce a string parsable as a Sofa parameter. ; - it is extensible as it allows users to provide their own conversion for their object. ; - it returns a clear warning helping user to locate problems and teach them how to fix their scenes. . As you said Maxime, ""In python semantic of str is to provide a concise representation of an object as a string, which is exactly what BaseObject.getLinkPath does. "" . A ""concise representation"" is a very flexible/weak semantic with a lot of different meaning that will change depending on the context.; For matthieu (and the Anatoscope fork), a concise representation could be ""5.0""; For you it seems to be ""@/myObject.param"" ; For me it should be ""@/myObject.param=5.0"" ; For others it could be ""Sofa.Data: @/myObject.param=5.0"" . These options are more or less adequate depending on the context...but they are all fully valid description because they match the clearly defined and accepted semantic. This is why I think solution 2 is clearly not the way to go because it change this well defined semantic for something narrower in which the str() function should return something that can be parsed as an argument in the createObject function. Doing so is like forcing anyone passing an object to createObject to modify their str() function to make it work with createObject. . I personally think that as the python specification for str() is very weak it is only a way to generate string to be read by human (that can cope with the",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/286#issuecomment-308062575:3100,flexible,flexible,3100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/286#issuecomment-308062575,1,['flexible'],['flexible']
Modifiability,bility-identifier-naming](https://clang.llvm.org/extra/clang-tidy/checks/readability-identifier-naming.html) |; | [google-explicit-constructor](https://clang.llvm.org/extra/clang-tidy/checks/google-explicit-constructor.html) | [readability-implicit-bool-conversion](https://clang.llvm.org/extra/clang-tidy/checks/readability-implicit-bool-conversion.html) |; | [google-global-names-in-headers](https://clang.llvm.org/extra/clang-tidy/checks/google-global-names-in-headers.html) | [readability-inconsistent-declaration-parameter-name](https://clang.llvm.org/extra/clang-tidy/checks/readability-inconsistent-declaration-parameter-name.html) |; | [google-objc-avoid-throwing-exception](https://clang.llvm.org/extra/clang-tidy/checks/google-objc-avoid-throwing-exception.html) | [readability-misleading-indentation](https://clang.llvm.org/extra/clang-tidy/checks/readability-misleading-indentation.html) |; | [google-objc-global-variable-declaration](https://clang.llvm.org/extra/clang-tidy/checks/google-objc-global-variable-declaration.html) | [readability-misplaced-array-index](https://clang.llvm.org/extra/clang-tidy/checks/readability-misplaced-array-index.html) |; | [google-readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-braces-around-statements.html) | [readability-named-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-named-parameter.html) |; | [google-readability-casting](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-casting.html) | [readability-non-const-parameter](https://clang.llvm.org/extra/clang-tidy/checks/readability-non-const-parameter.html) |; | [google-readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/google-readability-function-size.html) | [readability-redundant-control-flow](https://clang.llvm.org/extra/clang-tidy/checks/readability-redundant-control-flow.html) |; | [google-readability-namespace-comments](https://clang.llvm.org/extra/clang-tidy/c,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:27440,variab,variable-declaration,27440,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['variab'],['variable-declaration']
Modifiability,bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginMan,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:5966,Plugin,PluginManager,5966,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:10904,Plugin,PluginManager,10904,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8084,Plugin,PluginManager,8084,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"bject('MechanicalObject', position=position, template='Rigid3'); rigid.addObject('UniformMass', totalMass=1e-3); rigid.addObject('RestShapeSpringsForceField', stiffness=1e0). articulation = o.addChild('Articulation'); articulation.addObject('MechanicalObject', template='Vec1', rest_position=[1]); articulation.addObject('ArticulatedHierarchyContainer'); articulation.addObject('RestShapeSpringsForceField', points=[0], stiffness=1e2) # HERE: Change this stiffness. parts = articulation.addChild('RigidParts'); rigid.addChild(parts); parts.addObject('MechanicalObject', template='Rigid3', showObject=True, showObjectScale=1,; position=[[0, 0, 0, 0, 0, 0, 1]] * 2); parts.addObject('ArticulatedSystemMapping', container=articulation.ArticulatedHierarchyContainer.getLinkPath(),; indexInput2=0,; input1=articulation.MechanicalObject.getLinkPath(),; input2=rigid.MechanicalObject.getLinkPath(),; output=parts.MechanicalObject.getLinkPath()). center = articulation.addChild('ArticulationCenter'); center.addObject('ArticulationCenter', parentIndex=0, childIndex=1, posOnChild=[0, 2, 0]); centerchild = center.addChild('Articulation'); centerchild.addObject('Articulation', rotation=True). def createScene(rootnode):. rootnode.addObject('VisualStyle', displayFlags=['showBehavior']); rootnode.addObject('RequiredPlugin', pluginName='ArticulatedSystemPlugin'); rootnode.gravity = [0, -9810, 0]. simulation = rootnode.addChild('Simulation'); simulation.addObject('EulerImplicitSolver'); simulation.addObject('SparseLDLSolver'). for i in range(3):; # HERE: Try with separated systems; # simulation = rootnode.addChild('Simulation'+str(i)); # simulation.addObject('EulerImplicitSolver'); # simulation.addObject('SparseLDLSolver'). o = simulation.addChild('Object'+str(i)); addObject(o, [i * 3, 0, 0, 0, 0, 0, 1]); ```. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 22.04; - Version of SOFA: master commit 7778db427bbed1acbc2ee2074a76bbc4b855e85e; - State: build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3246:2149,plugin,pluginName,2149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3246,1,['plugin'],['pluginName']
Modifiability,"boost::filesystem is the last dependency on a (compiled) boost library.; However, SOFA is still dependent on header-only boost libraries (for graph, stable_vector and intrusive_ptr especially); (config of the target Boost::boost is in Sofa.Type). The change is really easy. just replace boost::filesystem with std::filesystem.; The only non trivial 1-1 replacement was for managing unicode path (not sure on the change actually). This is finally possible because minimum requirement is ubuntu 20.04 (with an updated version of gcc supporting std::filesystem instead of std::experimental::filesystem) and macOS 10.15 (same with its clang version/mac SDK). [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/177]; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2342:195,config,config,195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2342,1,['config'],['config']
Modifiability,"btw, maybe one VM of each OS should do a make install to test the cpack config.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/194#issuecomment-284471982:72,config,config,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/194#issuecomment-284471982,1,['config'],['config']
Modifiability,"c2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugin ""wayland"" in """". (process:29694): Gtk-WARNING **: 22:14:09.328: Locale not supported by C library.; 	Using the fallback 'C' locale.; Gtk-Message: 22:14:09.408: Failed to load module ""canberra-gtk-module""; Gtk-Message: 22:14:09.409: Failed to load module ""canberra-gtk-module""; [INFO] [SofaPluginManager] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::Compatibility",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:12531,config,config,12531,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['config'],['config']
Modifiability,"c\applications\plugins\VolumetricRendering\examples/share/shaders/tetra.frag; [ERROR] [GLSLShader] 0(8) : warning C7555: 'varying' is deprecated, use 'in/out' instead; 0(16) : error C7616: global variable gl_Color is removed after version 140; 0(35) : warning C7533: global variable gl_FragColor is deprecated after version 120. [ERROR] [GLSLShader] ERROR: Compilation of Vertex shader failed:; [ERROR] [GLSLShader] From File: C:\Users\Alex\Dev\sofa1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra.vert; [ERROR] [GLSLShader] 0(20) : error C7616: global variable gl_ModelViewProjectionMatrix is removed after version 140; 0(23) : error C7616: global variable gl_ClipVertex is removed after version 140; 0(23) : error C7616: global variable gl_ModelViewMatrix is removed after version 140; 0(23) : error C7616: global variable gl_Vertex is removed after version 140. [ERROR] [GLSLShader] ERROR: Compilation of Geometry shader failed:; [ERROR] [GLSLShader] From File: C:\Users\Alex\Dev\sofa1\src\applications\plugins\VolumetricRendering\examples/share/shaders/tetra_triangles.geo; [ERROR] [GLSLShader] 0(45) : warning C7533: global variable gl_FrontColor is deprecated after version 120; 0(46) : error C7616: global variable gl_ClipVertex is removed after version 140. [ERROR] [GLSLShader] SHADER compilation failed.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] Variable ""a_vertexColor"" NOT FOUND in shader ""[ 'share/shaders/tetra.vert' ]""; [ERROR] [Node()] Object 'OglFloat4Attribute1' already has a node (/OglFloat4Attribute1). Please remove it from this node before adding it to a new one.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] TopologyData: value already has a TopologyDataHandler. createTopologyHandler should only be called once at init of the TopologyData.; [ERROR] [OglFloat4Attribute(OglFloat4Attribute1)] Variable ""a_vertexColor"" NOT FOUND in shader ""[ 'share/shaders/tetra.vert' ]""; ```. I guess the shaders needs to be updated for version >= 140",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4398#issuecomment-1867351181:1365,variab,variable,1365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4398#issuecomment-1867351181,4,"['Variab', 'variab']","['Variable', 'variable']"
Modifiability,"cd /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda && /usr/bin/cmake -E make_directory /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/. && /usr/bin/cmake -D verbose:BOOL=OFF -D build_configuration:STRING=Release -D generated_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o -D generated_cubin_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.cubin.txt -P /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake; /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(1251): warning: variable ""threads2"" was declared but never referenced. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(360): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_deriveSPKTensor"" is undefined; detected during instantiation of ""void StandardTetrahedralFEMForceFieldCuda_addForce_kernel(int, real *, real *, const real *, __nv_bool, const real *, float, float) [with real=float]"" ; (1248): here. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(587): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_ElasticityTensor"" is undefined; detected during instantiation of ""void StandardTetrahedralFEMForceFieldCuda_addDForce_kernel(int, real *, real *, real, real, real *) [with real=float]"" ; (1266): here. 2 errors detected in the ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057:1800,plugin,plugins,1800,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057,1,['plugin'],['plugins']
Modifiability,ce/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8354,Plugin,PluginManager,8354,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ce/ubuntu_gcc-4.8_options/src/applications/plugins/Flexible/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaPython.so; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/Example.py; [ OK ] Batch/Python_scene_test.sofa_python_scene_tests/0 (2544 ms); [ RUN ] Batch/Python_scene_test.sofa_python_scene_tests/1; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/LambdaPropagation.py; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant.so; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant_gui.so; [DEPRECATED] [Compliant.Vec] Compliant's Vec.py is now deprecated (and will be deleted soon), please use numpy instead; [ERROR] [SofaPython] createObject: component 'compliance' of type 'UniformCompliance' in node 'joint'; [ERROR] [SofaPython] Object type UniformCompliance<Vec1d> creation failed; [FATAL] [SofaPython] SP_CALL_MODULEFUNC; Traceback (most recent call last):; File ""LambdaPropagation.py"", line 90,",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:1374,plugin,plugins,1374,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,1,['plugin'],['plugins']
Modifiability,"char>::get_resize(int, int, int, int, int, unsigned int, float, float, float, float) const (sofa/applications/plugins/CImgPlugin/src/CImgPlugin/ImageCImg.cpp); 1797 ms: _GLOBAL__sub_I_PlaneForceField_test.cpp (sofa/modules/SofaBoundaryCondition/SofaBoundaryCondition_test/PlaneForceField_test.cpp); 1679 ms: sofa::component::engine::GenerateSphere<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3ul, double>, sofa::d... (sofa/modules/SofaGeneralEngine/GenerateSphere.cpp); 1584 ms: sofa::component::engine::GenerateCylinder<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3ul, double>, sofa:... (sofa/modules/SofaGeneralEngine/GenerateCylinder.cpp); 1373 ms: sofa::component::misc::MeshTetraStuffing::init() (sofa/modules/SofaMiscExtra/MeshTetraStuffing.cpp); 1282 ms: cimg_library::CImgList<unsigned char>::_load_cimg(_IO_FILE*, char const*) (sofa/applications/plugins/CImgPlugin/src/CImgPlugin/ImageCImg.cpp); 1222 ms: cimg_library::CImg<unsigned char>::_load_pandore(_IO_FILE*, char const*) (sofa/applications/plugins/CImgPlugin/src/CImgPlugin/ImageCImg.cpp); 1196 ms: sofa::component::odesolver::VariationalSymplecticSolver::solve(sofa::core::ExecParams const*, double, sofa::core::TMul... (sofa/modules/SofaGeneralImplicitOdeSolver/VariationalSymplecticSolver.cpp); 1158 ms: sofa::component::topology::TetrahedronSetGeometryAlgorithms<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<1... (sofa/SofaKernel/modules/SofaBaseTopology/TetrahedronSetGeometryAlgorithms.cpp); 1131 ms: sofa::Mapping_test<sofa::component::mapping::RigidMapping<sofa::defaulttype::StdRigidTypes<3ul, double>, sofa::default... (sofa/SofaKernel/modules/SofaRigid/SofaRigid_test/RigidMapping_test.cpp); 1125 ms: sofa::component::topology::TriangleSetGeometryAlgorithms<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3ul,... (sofa/SofaKernel/modules/SofaBaseTopology/TriangleSetGeometryAlgorithms.cpp); 1125 ms: sofa::Mapping_test<sofa::component::mapping::RigidMapping<sofa::defaulttype:",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:16802,plugin,plugins,16802,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['plugin'],['plugins']
Modifiability,cing](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-slicing.html) | [performance-unnecessary-value-param](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-value-param.html) |; | [cppcoreguidelines-special-member-functions](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-special-member-functions.html) | [readability-avoid-const-params-in-decls](https://clang.llvm.org/extra/clang-tidy/checks/readability-avoid-const-params-in-decls.html) |; | [fuchsia-default-arguments](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-default-arguments.html) | [readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/readability-braces-around-statements.html) |; | [fuchsia-overloaded-operator](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-overloaded-operator.html) | [readability-container-size-empty](https://clang.llvm.org/extra/clang-tidy/checks/readability-container-size-empty.html) |; | [fuchsia-virtual-inheritance](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-virtual-inheritance.html) | [readability-delete-null-pointer](https://clang.llvm.org/extra/clang-tidy/checks/readability-delete-null-pointer.html) |; | [google-build-explicit-make-pair](https://clang.llvm.org/extra/clang-tidy/checks/google-build-explicit-make-pair.html) | [readability-deleted-default](https://clang.llvm.org/extra/clang-tidy/checks/readability-deleted-default.html) |; | [google-build-namespaces](https://clang.llvm.org/extra/clang-tidy/checks/google-build-namespaces.html) | [readability-else-after-return](https://clang.llvm.org/extra/clang-tidy/checks/readability-else-after-return.html) |; | [google-build-using-namespace](https://clang.llvm.org/extra/clang-tidy/checks/google-build-using-namespace.html) | [readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/readability-function-size.html) |; | [google-default-arguments](https://clang.llvm.org/extra/clang-tidy/checks/google-default-ar,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:25405,inherit,inheritance,25405,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['inherit'],['inheritance']
Modifiability,conda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7637,Plugin,PluginManager,7637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"conditioner for ShewchukPCGLinearSolver; - `examples/Components/linearsolver/preconditioner/FEMBAR-ShewchukPCGLinearSolver-NoPreconditioner.scn`: ShewchukPCGLinearSolver with no preconditioner. Similar to the classical CG. Can be used for comparison.; - `examples/Components/linearsolver/preconditioner/FEMBAR-ShewchukPCGLinearSolver-WarpedAsyncSparseLDLSolver.scn`: AsyncSparseLDLSolver used as a preconditioner for ShewchukPCGLinearSolver. When the matrix has not been assembled, it is warped using a RotationFinder. This is done using an intermediate component: WarpPreconditioner. All the other scenes from the `examples/Components/linearsolver` folder have been modified so it is easy to change the resolution of the deformable beam. `totalMass` instead of `vertexMass`, and `BoxROI` instead of raw indices. In WarpPreconditioner, an additional Data is introduced to request matrix assembly at a given frequency. This is to minimize the cost of matrix assembly. Instead of assembling the matrix, the old one is used, taking into account the rotations compared to the previous time step. The same mechanism exists in ShewchukPCGLinearSolver. There are some refactoring in SparseLDLSolver to make more elegant code (without duplicated code) in AsyncSparseLDLSolver, but no changes are introduced.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2661:1778,refactor,refactoring,1778,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2661,1,['refactor'],['refactoring']
Modifiability,"config.h must be included before ObjectFactory. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4740:0,config,config,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4740,2,['config'],['config']
Modifiability,"contains #2534 . Just restore from old repository and update the files to compile with up to date master branch. ; No optimization or cleaning done yet. In term of performances, simulation of a Beam of 3645 Hexahedra:; - CPU: ~42.2 fps; - CUDA: ~180 fps. Using those scenes : ; sofa-src/applications/plugins/SofaCUDA/examples/beam10x10x46-hexafem-implicit-CPU.scn; sofa-src/applications/plugins/SofaCUDA/examples/beam10x10x46-hexafem-implicit-CUDA.scn. ![image](https://user-images.githubusercontent.com/21199245/145564675-5c399ecc-93ab-4fee-8135-b4c1b5459e2d.png). NB: simulations were performed without rendering the forcefield.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2535:300,plugin,plugins,300,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2535,2,['plugin'],['plugins']
Modifiability,"ctory"", ""Install directory"" >; > ; > **Command called**; > ; > ```; > (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; > Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; > [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > >>> import Sofa; > ---------------------------------------; > Checking SOFA_ROOT and SOFAPYTHON3_ROOT; > Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; > ---------------------------------------; > Traceback (most recent call last):; > File ""<stdin>"", line 1, in <module>; > File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; > import Sofa.Helper; > ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')), '/System/Volumes/Preboot/Cryptexes/OS/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (no such file), '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')); > >>> ; > ```; > ; > **Env vars**; > ; > ```shell; > python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PA",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179:1876,plugin,plugins,1876,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179,1,['plugin'],['plugins']
Modifiability,"cts when basically you write a unit test which relies on; a scene file that uses a `RequiredPlugin`... that shortcoming was somewhat hidden by having all tests relying on `SofaGTest`, whose sole reason of being is to actually amend c5a19fe by populating the PluginRepository with the current working dir. Some additional functionalities are added to `RequiredPlugin` by this PR, namely the ability to specify other suffixes ( or no suffix at all ) to prepend when attemtping to load a plugin with a name hint. . # CHANGELOG ; FIX; [SofaHelper]; - Restore the `SOFA_LIBSUFFIX` behavior with msvc; - `PluginRepository` is initialized to contain the current working directory. CHANGE; [SofaHelper] ; - `PluginManager` : keep only a single version of the `loadPlugin` method. Also the method returns true; even if the plugin is already loaded. Returning false is kept only for real failures, whereby the library could ; not be loaded. If it is important to check wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ; It also gives some more advanced options to extend the plugin search. # Remarks. I do not know which version of the GUI is still in use. However I believe that the widget that can add/remove plugins to the `PluginManager` should be removed since there is no valid reason to ; keep it. I am really not sure about the current state of SofaGTestMain. It is hidden somewhere in the folder hierarchy (inside tools directory), and its existence seems to imply that you cannot write a unit test inside sofa without relying on it to ""initialise Sofa"" which is absolutely not the case. See PR #471; Instead having a library which depends on gtest and SofaCore which ; - factorize some initialisation methods when they are actually required in the test `SetUp()` method; - provide some useful abstractions",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:1771,plugin,plugin,1771,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,2,['plugin'],"['plugin', 'pluginIsLoaded']"
Modifiability,"cuda/mycuda.cu:385:39: warning: 'cudaError_t cudaGLUnregisterBufferObject(GLuint)' is deprecated [-Wdeprecated-declarations]; 385 | cudaCheck(cudaGLUnregisterBufferObject((GLuint)id),""cudaGLUnregisterBufferObject"");; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~; /usr/local/cuda/include/cuda_gl_interop.h:410:46: note: declared here; 410 | extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaGLUnregisterBufferObject(GLuint bufObj);; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu: In function 'void sofa::gpu::cuda::mycudaGLMapBufferObject(void**, int)':; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu:390:32: warning: 'cudaError_t cudaGLMapBufferObject(void**, GLuint)' is deprecated [-Wdeprecated-declarations]; 390 | cudaCheck(cudaGLMapBufferObject(ptr, (GLuint)id),""cudaGLMapBufferObject"");; | ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~; /usr/local/cuda/include/cuda_gl_interop.h:362:46: note: declared here; 362 | extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaGLMapBufferObject(void **devPtr, GLuint bufObj);; | ^~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu: In function 'void sofa::gpu::cuda::mycudaGLUnmapBufferObject(int)':; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu:395:34: warning: 'cudaError_t cudaGLUnmapBufferObject(GLuint)' is deprecated [-Wdeprecated-declarations]; 395 | cudaCheck(cudaGLUnmapBufferObject((GLuint)id),""cudaGLUnmapBufferObject"");; | ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~; /usr/local/cuda/include/cuda_gl_interop.h:388:46: note: declared here; 388 | extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaGLUnmapBufferObject(GLuint bufObj);; | ^~~~~~~~~~~~~~~~~~~~~~~; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4871:2420,plugin,plugins,2420,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4871,2,['plugin'],['plugins']
Modifiability,"cy and suppress this warning.; Call Stack (most recent call first):; SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cmake:112 (cmake_dependent_option); SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cmake:141 (sofa_add_generic); modules/CMakeLists.txt:38 (sofa_add_plugin); This warning is for project developers. Use -Wno-dev to suppress it. Adding plugin SofaOpenglVisual; Adding plugin SofaMiscTopology; Adding plugin SofaMiscExtra; Adding plugin SofaMiscForceField; Adding plugin SofaMiscEngine; Adding plugin SofaMiscSolver; Adding plugin SofaMiscFem; Adding plugin SofaMiscMapping; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") found components: program_options ; -- SofaGuiCommon: Sofa.GL dependent features enabled.; SofaGuiQt: will use Qt5; Adding collection SofaComponentAll; J:/GitHub/sofa/src/applications/plugins/SofaHighOrder does not exist and will be ignored.; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; Python:; Version: 3.9.7; Executable: D:/11631/miniconda3/python.exe; Headers: D:/11631/miniconda3/include; Libraries: D:/11631/miniconda3/libs/python39.lib; User site: C:\Users\11631\AppData\Roaming\Python\Python39\site-packages; pybind11:; Version: 2.8.1; Config: E:/GitHub/vcpkg/installed/x64-windows/share/pybind11/pybind11Config.cmake; Adding plugin LMConstraint; SofaDistanceGrid not found: DistanceLM codes will not be compiled; Adding application runSofa; Write Plugin list at J:/GitHub/sofa/build/bin/plugin_list.conf.default; Configuring incomplete, errors occurred!; See also ""J:/GitHub/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""J:/GitHub/sofa/build/CMakeFiles/CMakeError.log"". how can i solve this problem，thank you",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2814:4145,plugin,plugin,4145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2814,6,"['Config', 'Plugin', 'plugin']","['Config', 'Configuring', 'Plugin', 'plugin']"
Modifiability,"d by this massive move? I would like to know because that's the number-one time-waster on our end for merges/history tracking). So I would like to know if those considerations were understood before doing this once again ?. And as a counter-proposal, for discussion, that you are free to ignore, I would suggest a 3 steps approach :. 1. First only change the CMake scripts / per-lib main header/cpp to convert them to plugins WITHOUT moving the actual source files; 2. Document the proposed new directory hierarchy, propose it and wait for feedback from enough community members; 3. Once there is an agreement on the hierarchy, apply it via a commit that does not change anything else (changes in cmake scripts should be done as a separate commit, to ease solving later merge/conflict issues). And regarding point 2, instead of moving everything in `applications/plugins` that is only there because of a bad decision 10 years ago (it was simpler as we had to release the main directories as separate archives for licensing reason so we packed the couple of plugins we had together with the executables), I would propose to use the following:; - _Sofa root directory_; - SofaPlugins; - SofaMiscForceField; _..._; - SofaPluginsDeprecated; - SofaVRPNClient _any plugin we no longer support but still keep around if someone else want to pick it up_; - SofaPluginsGPL; - SceneCreator; - SofaPML; ... _any plugins with a GPL licence_; - SofaPlugins(.*) _any other licences or additional private ones in other repos_. Note: as an alternative, for the libs that are currently modules, instead of moving to a generic uninformative ""SofaPlugins"" directory, we could instead move them to the SofaGeneral/SofaAdvanced/SofaMisc directory that already exists and host their main cmake file. 4 advantages to this instead of everything is `applications/plugins`:; 1. one less directory to browse to in order to get to the actual source files; 2. it discourage any assumption that all plugins are/must be in the same ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/482:1910,plugin,plugins,1910,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/482,2,['plugin'],['plugins']
Modifiability,d plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/li,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8890,Plugin,PluginManager,8890,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,d plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Com,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8757,Plugin,PluginManager,8757,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"d plugins; rootNode.addObject('RequiredPlugin', name='Sofa.Component.IO.Mesh') # Needed to use components [MeshSTLLoader]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Mapping.Linear') # Needed to use components [IdentityMapping]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Mass') # Needed to use components [UniformMass]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.StateContainer') # Needed to use components [MechanicalObject]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Visual') # Needed to use components [VisualStyle]; rootNode.addObject('RequiredPlugin', name='Sofa.GL.Component.Rendering3D') # Needed to use components [OglModel]; rootNode.addObject('VisualStyle', displayFlags='showForceFields showBehaviorModels'); ; rootNode.addObject('DefaultAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'). # Setting the timestep in seconds; rootNode.dt = 0.01; rootNode.addObject('RequiredPlugin',; pluginName='SoftRobots SofaPython3'); ; # Load the mesh file of the actuator and the plane.; rootNode.addObject('MeshSTLLoader', name='loader_actuator', filename='STL/Actuador.stl'); rootNode.addObject('MeshSTLLoader', name='loader_plane', filename='STL/plane.stl'). # Basic mechanical modelling of the actuator; actuator = rootNode.addChild('MechanicalModel'); actuator.addObject('MechanicalObject', name='actuator',; translation=[0,0,0],; showObject=True, showObjectScale=1.0,; rotation=[0.0, 0.0, 0.0]); actuator.addObject('UniformMass'). # Visual object for actuator; visual_actuator = rootNode.addChild('VisualModelActuator'); visual_actuator.addObject('OglModel', name='renderer_actuator',; src=rootNode.loader_actuator.getLinkPath(),; color=[1.0, 1.0, 1.0, 0.5]); visual_actuator.addObject('IdentityMapping',; input=actuator.actuator.getLinkPath(),; output=visual_actuator.renderer_actuator.getLinkPath()); ; ; ; # Basic mechanical modelling of the plane; plane = rootNode.addChild('MechanicalModelPlane'); plane.addObject('",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5084:1892,plugin,pluginName,1892,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5084,1,['plugin'],['pluginName']
Modifiability,"d with link @ now allow the use of src="""". Topologies container associated to src="""" are supposed to be filled by following topological mapping. Using src=""@"" to avoid link warning drove to an autolink where the loader refers on container itself. Modification of implicated scenes and xml accordingly.; - WorkerThread maintains a list of stealable tasks as well as a list of higher priority thread specific tasks. Remove ThreadSpecificTask (not used and redundant with new thread-specific task queues). Update Task logging.; - Adapted MultiThreading plugin to the new build system.; - SetDirectory no longer changes the system current directory (shared by all threads in the process), but uses a global variable to record the current directory to be used within Sofa. But changing to the current file's directory is needed to load Python scene. For the moment, python loader is not use with multithreading, changing directory in the loader is a temporary solution. The functioning of python scene loader need to be adapted in the futur. ### Cleans; - Streamline calls to createResponse in case no groupManager is used; - Clean warnings in Task and TaskSchedulerBoost for Multithreading plugin. ### Bugfixes; - Fix crash with multithreaded collision detection. Call `TriangleModel::getTriangleFlag` method for all triangles of the topology to force the initialization of adjacency.information in the topology before some actual collision detection code is executed.; - DDGNode should never be copied to ensure thread safe. Add private copy constructor that gives compilation error to ensure that.; - Compilation fixes for compatibility with boost 1_55. Corrected also the copyright notice.; - Fix execution freeze bug due to simultaneous and reciprocal task stealing between 2 threads (WorkerThread).; - Fix data race at startup, WorkerThread:mTaskScheduler was set by the main thread while being read by the worker thread. ______________________________________________________; <!--- Please leave th",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:3089,adapt,adapted,3089,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,1,['adapt'],['adapted']
Modifiability,"d',nx=60, ny=1, nz=1,xmin=0.0, xmax=1.0,ymin=0, ymax=0,zmin=1, zmax=1); InstrumentCombined.addObject('MechanicalObject',template='Rigid3d',name='DOFs',showIndices='0',ry=-90); InstrumentCombined.addObject('WireBeamInterpolation',name='InterpolCatheter',WireRestShape='@../topoLines_cath/catheterRestShape',radius=1,printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField',interpolation='@InterpolCatheter',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolGuide', WireRestShape='@../topoLines_guide/GuideRestShape', radius=0.9, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='GuideForceField',interpolation='@InterpolGuide',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolCoils', WireRestShape='@../topoLines_coils/CoilRestShape', radius=0.1, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass', name='CoilsForceField', interpolation='@InterpolCoils', massDensity=0.000021); InstrumentCombined.addObject('InterventionalRadiologyController',name='m_ircontroller',template='Rigid3d',printLog='0',instruments='InterpolCatheter InterpolGuide InterpolCoils',startingPos=[0, 0 ,0 ,0 ,-0.7071068, 0, 0.7071068],xtip=[1 ,0 ,0] ,rotationInstrument=[0, 0, 0 ],controlledInstrument=0,step=3,speed=2 ); InstrumentCombined.addObject('LinearSolverConstraintCorrection',printLog='false',wire_optimization='true'); InstrumentCombined.addObject('FixedConstraint',name='FixedConstraint',indices='0'); InstrumentCombined.addObject('RestShapeSpringsForceField',points='@m_ircontroller.indexFirstNode',stiffness=1e8,angularStiffness=1e8). Collis = InstrumentCombined.addChild('Collis'); Collis.activated= True; Collis.addObject('EdgeSetTopologyContainer', name='collisEdgeSet'); Collis.addObject('EdgeSetTopologyModifier',name='colliseEdgeModifier'); Collis.addObject('MechanicalObject',name='CollisionDOFs'); Collis.addObject('Mul",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:4561,Adapt,AdaptiveBeamForceFieldAndMass,4561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243,1,['Adapt'],['AdaptiveBeamForceFieldAndMass']
Modifiability,"d/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [Re",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9206,Plugin,PluginManager,9206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,d/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/User,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6179,Plugin,PluginManager,6179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"dStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; ---------------------------------------; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; import Sofa.Helper; ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')), '/System/Volumes/Preboot/Cryptexes/OS/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (no such file), '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')); >>> . ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. --- sys.version ---; 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ]; --- PATH ---; /usr/local/opt/python@3.8",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:2331,plugin,plugins,2331,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,1,['plugin'],['plugins']
Modifiability,"d_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [WARNING] [ObjectFactory] Class already registered: TopologicalChangeProcessor; [WARNING] [ObjectFactory] Class already registered: TopologyChecker; [WARNING] [ObjectFactory] Default template for class TopologyBoundingTrasher already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:32909,Plugin,PluginManager,32909,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"de(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) DAGSimulati; on.cpp:78; #10 0x13a45aa79 in sofa::simulation::Node::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) Node.cpp:972 ; #11 0x14a8a7f43 in sofa::simulation::SceneLoaderPY::loadSceneWithArguments(char const*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allo; cator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, boost::intrusive_ptr<sofa::simulation::Node>*) S; ceneLoaderPY.cpp:128; #12 0x14a8a6287 in sofa::simulation::SceneLoaderPY::load(char const*) SceneLoaderPY.cpp:88; #13 0x13a76cdee in sofa::simulation::Simulation::load(char const*) Simulation.cpp:472; #14 0x10f83fc80 in main Main.cpp:388; #15 0x7fffa5650234 in start (libdyld.dylib:x86_64+0x5234). 0x00013d5e5ee3 is located 0 bytes to the right of global variable '<string literal>' defined in '/Users/krasin/src/github.com/sofa-framework/sofa/src/SofaKernel/framework/sofa/core/; objectmodel/Context.cpp:37:37' (0x13d5e5ee0) of size 3; '<string literal>' is ascii string 'dt'; SUMMARY: AddressSanitizer: global-buffer-overflow Base.cpp:128 in sofa::core::objectmodel::Base::initData0(sofa::core::objectmodel::BaseData*, sofa::core::objectmodel::BaseData::BaseInitData&, char const*, char const*, unsigned int); ```. The code to blame (as pointed in the first message) is Base.cpp:128:. ```; uint32_t prefix = *(uint32_t*)name;. if (prefix == draw_prefix || prefix == show_prefix); res.group = ""Visualization"";; ```. I propose to fix it in a simple, though, not very elegant way:. ```; if (strlen(name) >= 3) {; uint32_t prefix = *(uint32_t*)name;. if (prefix == draw_prefix || prefix == show_prefix); res.group = ""Visualization"";; }; ```. Shall I create a PR like that?. I am currently tracking down some real issue with SOFA crashing on a VTU input, and hav",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/528#issuecomment-366422566:3269,variab,variable,3269,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/528#issuecomment-366422566,1,['variab'],['variable']
Modifiability,"de.addObject(""CGLinearSolver"", iterations=100, tolerance=1e-5, threshold=1e-5). ball_node.addObject(""MechanicalObject"", template=""Rigid3d"", position=[0, 5, 0, 0, 0, 0, 1], showObject=True, showObjectScale=2.0); ball_node.addObject(""UniformMass"", totalMass=10000.0); ball_node.addObject(""SphereCollisionModel"", radius=0.5, group=1); ball_node.addObject(""UncoupledConstraintCorrection""); ```. As a side question: Am I even using the right components? How would you model this scene of a liver with an embedded tumor? I also tested the Heterogeneous-TetrahedronFEMForceField.scn example, but that is even more unstable. When you interact with the object through the mouse, it applies a huge force in the opposite direction. <video src=""https://github.com/sofa-framework/sofa/assets/29635054/dc863ba3-7e55-48e1-8b5d-30d078fd5b88; "" width=""200"" height=""auto"">. I also simplified the liver scene to just the SOFA liver. Same problem with the instability. ```python; import Sofa; import Sofa.Core. PLUGINS = [; ""Sofa.Component.AnimationLoop"",; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ""Sofa.Component.Collision.Response.Contact"",; ""Sofa.Component.Constraint.Lagrangian.Solver"",; ""Sofa.Component.Visual"",; ""Sofa.Component.Collision.Geometry"",; ""Sofa.Component.Constraint.Projective"",; ""Sofa.Component.LinearSolver.Iterative"",; ""Sofa.Component.Mapping.NonLinear"",; ""Sofa.Component.Mass"",; ""Sofa.Component.ODESolver.Backward"",; ""Sofa.Component.StateContainer"",; ""Sofa.GL.Component.Rendering3D"",; ""Sofa.Component.Constraint.Lagrangian.Correction"",; ""Sofa.Component.Topology.Container.Dynamic"",; ""MultiThreading"",; ""Sofa.Component.SolidMechanics.FEM.NonUniform"",; ""Sofa.Component.Topology.Container.Grid"",; ""Sofa.Component.IO.Mesh"",; ""Sofa.Component.LinearSolver.Direct"",; ""Sofa.Component.Mapping.Linear"",; ""Sofa.Component.Topology.Container.Constant"",; ]. def createScene(root: Sofa.Core.Node):. plugin_set = set(PLUGINS); for plugin in plugin_set:; r",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838:7840,PLUGIN,PLUGINS,7840,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838,1,['PLUGIN'],['PLUGINS']
Modifiability,"de/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/runSofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded pl",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:2411,variab,variable,2411,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin', 'variab']","['PluginManager', 'plugin', 'variable']"
Modifiability,"de::execute (this=0x555555dabc80, p=0x7fffffffc430, ; precomputedOrder=false) at /home/alex/Documents/sofa/Sofa/framework/Simulation/Core/src/sofa/simulation/Node.h:197; #52 0x00007fffea5a3ae0 in sofa::component::animationloop::FreeMotionAnimationLoop::computeFreeMotion (; this=0x555555e33ff0, params=0x555555e65700, cparams=..., dt=0.01, pos=..., freePos=..., freeVel=..., ; mop=0x7fffffffcaa0); at /home/alex/Documents/sofa/Sofa/Component/AnimationLoop/src/sofa/component/animationloop/FreeMotionAnimationLoop.cpp:388; #53 0x00007fffea5a3362 in sofa::component::animationloop::FreeMotionAnimationLoop::computeFreeMotionAndCollisionDetection (this=0x555555e33ff0, params=0x555555e65700, cparams=..., dt=0.01, pos=..., freePos=..., freeVel=..., ; mop=0x7fffffffcaa0); at /home/alex/Documents/sofa/Sofa/Component/AnimationLoop/src/sofa/component/animationloop/FreeMotionAnimationLoop.cpp:328; #54 0x00007fffea5a1f77 in sofa::component::animationloop::FreeMotionAnimationLoop::step (this=0x555555e33ff0, ; params=0x555555e65700, dt=0.01); at /home/alex/Documents/sofa/Sofa/Component/AnimationLoop/src/sofa/component/animationloop/FreeMotionAnimationLoop.cpp:254; #55 0x00007ffff7568933 in sofa::simulation::node::animate (root=0x555555dabc80, dt=0); at /home/alex/Documents/sofa/Sofa/framework/Simulation/Core/src/sofa/simulation/Simulation.cpp:221; #56 0x00007ffff7ea5e4e in sofa::gui::batch::BatchGUI::mainLoop (this=0x555555637050); at /home/alex/Documents/sofa/Sofa/GUI/Batch/src/sofa/gui/batch/BatchGUI.cpp:72; #57 0x00007ffff795ae2e in sofa::gui::common::GUIManager::MainLoop (groot=..., ; filename=0x555555dab770 ""../../sofa/applications/plugins/SoftRobots/examples/tutorials/Tripod/details/step4-3.py""); at /home/alex/Documents/sofa/Sofa/GUI/Common/src/sofa/gui/common/GUIManager.cpp:288; --Type <RET> for more, q to quit, c to continue without paging--; #58 0x00005555555c6bb5 in main (argc=6, argv=0x7fffffffdf28); at /home/alex/Documents/sofa/applications/projects/runSofa/Main.cpp:526; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:31229,plugin,plugins,31229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['plugin'],['plugins']
Modifiability,"declaring its Inputs, Outputs (I/Os) and its behavior using Python alone. It has some similarities with the ""PythonScriptController"" (PSC). The two main differences are:. - PSDE-objects are not triggered by events (not conceptually at least). Rather, the functionality should be implemented in the update() function of the associated script, which is called once per simulation frame. ; - I/Os can be added directly to the object inside the parse() function of the PSDE-object. Linking using the '@'-syntax also works. Therefore, the PSDE-object behaves like any other object that has I/Os (or Data in general). Inside the script these newly defined I/Os can be accessed as members of the object, providing an easy syntax. You can think of the PSDE as a possibility of subclassing the Sofa 'DataEngine' in a scripted way. In the second example provided it is shown how a versatile ROI functionality can be implemented with the help of the PSDE. Two examples with some documentation are provided in: ; applications/plugins/SofaPython/examples/PSDEExamples/. Example of use (01-basic/PSDEBasic.pyscn):; ```python; #!/usr/bin/env python; # -*- coding: utf-8 -*-; import Sofa; import os. path = os.path.dirname(os.path.abspath(__file__))+'/../../../../../../share/mesh/'; ; def createScene(rootNode):; rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename=path+'liver.vtk'); rootNode.createObject('PythonScriptDataEngine', name='PSDE', filename=""DataEngine.py"", classname=""MyDataEngine"")	 . ```; Example for DataEngine class in Python (01-basic/DataEngine.py):. ```python; class MyDataEngine(Sofa.PythonScriptDataEngine): ; ; def parse(self): ; # this is the correct place to define inputs and outputs! (linking will not work in init() for instance); self.addNewInput('Positions',datatype='p',value='@loader.position') ; self.addNewOutput('NumPoints',datatype='d', value='0') . def init(self):; 	pass. def update(self): ; self.NumPoints = len(self.Positions); ```. What it does NOT provide: A ne",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/583:1130,plugin,plugins,1130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/583,1,['plugin'],['plugins']
Modifiability,ded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/l,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8576,Plugin,PluginManager,8576,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,ded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8416,Plugin,PluginManager,8416,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"ded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugin ""wayland"" in """". (process:29694): Gtk-WARNING **: 22:14:09.328: Locale not supported by C library.; 	Using the fallback 'C' locale.; Gtk-Message: 22:14:09.408: Failed to load module ""canberra-gtk-module""; Gtk-Message: 22:14:09.409: Failed to load module ""canberra-gtk-module""; [INFO] [SofaPluginManager] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [INFO] [PluginManage",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:11560,plugin,plugins,11560,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['plugin'],['plugins']
Modifiability,ded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/g,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4442,Plugin,PluginManager,4442,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:7417,Plugin,PluginManager,7417,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ded to use components [UniformMass] ; rootNode.addObject('RequiredPlugin', name='Sofa.Component.ODESolver.Backward') # Needed to use components [EulerImplicitSolver]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.SolidMechanics.FEM.Elastic') # Needed to use components [TetrahedronFEMForceField]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.SolidMechanics.Spring') # Needed to use components [RestShapeSpringsForceField]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.StateContainer') # Needed to use components [MechanicalObject]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Topology.Container.Constant') # Needed to use components [MeshTopology]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Topology.Container.Dynamic') # Needed to use components [TetrahedronSetTopologyContainer,TriangleSetTopologyContainer]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Visual') # Needed to use components [VisualStyle] ; ; MainHeader(rootNode,; plugins=['SofaPython3', 'SoftRobots'],; gravity=[0.0, -9810, 0.0]). ContactHeader(rootNode,; alarmDistance=5,; contactDistance=1,; frictionCoef=0.6). rootNode.VisualStyle.displayFlags = ""showBehaviors showCollisionModels"". Floor(rootNode, **floorParam). cube = Cube(rootNode, **cubeParam); cube.addObject('UncoupledConstraintCorrection'). for i in range(len(fingersParameters)):; finger = ElasticMaterialObject(attachedTo=rootNode,; volumeMeshFileName=fingersVolumeMesh,; name=fingersParameters[i]['name'],; rotation=fingersParameters[i]['rotation'],; translation=fingersParameters[i]['translation'],; surfaceMeshFileName=fingersSurfaceAndCollisionMesh,; collisionMesh=fingersSurfaceAndCollisionMesh,; withConstrain=True,; surfaceColor=fingersColor,; poissonRatio=poissonRatioFingers,; youngModulus=youngModulusFingers,; totalMass=fingersMass). finger.dofs.name = 'tetras'; rootNode.addChild(finger). finger.integration.rayleighStiffness = 0.1; finger.integration.rayleighMass = 0.1. fing",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5060:3964,plugin,plugins,3964,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5060,1,['plugin'],['plugins']
Modifiability,"del]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.Engine.Select"", # [BoxROI]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.MechanicalLoad"", # [PlaneForceField]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.FEM.Elastic"", # [FastTetrahedralCorotationalForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [HexahedronSetTopologyContainer, HexahedronSetTopologyModifier, TetraheopologyModifier]; ""Sofa.Component.Topology.Container.Grid"", # [RegularGridTopology]; ""Sofa.Component.Topology.Mapping"", # [Hexa2TetraTopologicalMapping, Quad2TriangleTopologicalMapping]; ""Sofa.Component.Visual"", # [VisualStyle]; ""Sofa.GL.Component.Rendering3D"", # [OglModel]; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""DefaultAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showBehaviorModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""DefaultContactManager"", response=""PenalityContactForceField""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=3.0,; contactDistance=1.1,; ). root_node.gravity = [0.0, -98.1, 0.0]. scene_node = root_node.addChild(""scene""). ###################; # Topology Creation; ###################; topology_node = scene_node.addChild(""topologies""); grid_node = topology_node.addChild(""grid""); grid = grid_node.addObject(""RegularGridTopology"", nx=12, ny=20, nz=2, xmin=-30.0, xmax=30.0, ymin=0.0, ymax=100.0, zmin=0.0, zmax=2.0); grid_node.init(). hexahedra_nod",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3202:2091,plugin,pluginName,2091,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3202,3,['plugin'],"['plugin', 'pluginName']"
Modifiability,der.20.12.01.dylib; 0x11226d000 - 0x11232cfff +libSofaMeshCollision.20.12.01.dylib (0) <F6C0C139-F230-35C9-8301-FAF420509104> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMeshCollision/lib/libSofaMeshCollision.20.12.01.dylib; 0x112530000 - 0x1125abfff +libSofaBaseCollision.20.12.01.dylib (0) <95C00576-DD6A-322D-882E-161945B8AA44> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseCollision.20.12.01.dylib; 0x112691000 - 0x1126a4fff +libSofaObjectInteraction.20.12.01.dylib (0) <BE8051D6-EEAC-3A32-83F0-87F10449D957> /Applications/runSofa.app/Contents/MacOS/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.20.12.01.dylib; 0x1126d7000 - 0x112782fff +libSofaDeformable.20.12.01.dylib (0) <1D2109A8-B58B-3019-9C2F-6475AD697D95> /Applications/runSofa.app/Contents/MacOS/plugins/SofaDeformable/lib/libSofaDeformable.20.12.01.dylib; 0x1128d7000 - 0x112926fff +libSofaRigid.20.12.01.dylib (0) <D9F873DE-3B1D-33A6-B173-DB2F0E0AE833> /Applications/runSofa.app/Contents/MacOS/plugins/SofaRigid/lib/libSofaRigid.20.12.01.dylib; 0x1129c5000 - 0x112bc4fff +libSofaBaseMechanics.20.12.01.dylib (0) <28F9C6C1-AE2D-365E-ACB7-5CED017A9BD6> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseMechanics.20.12.01.dylib; 0x112fe1000 - 0x113004fff +libSofaEigen2Solver.20.12.01.dylib (0) <B6AD28C5-05ED-3A21-89EC-23F18F1E568D> /Applications/runSofa.app/Contents/MacOS/lib/libSofaEigen2Solver.20.12.01.dylib; 0x11303b000 - 0x11310efff +libSofaBaseLinearSolver.20.12.01.dylib (0) <363874FF-A623-3C38-A6F4-B53605330E4E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseLinearSolver.20.12.01.dylib; 0x11330d000 - 0x113490fff +libSofaBaseTopology.20.12.01.dylib (0) <C995D463-CCEF-337F-B896-B6289F75EF4B> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseTopology.20.12.01.dylib; 0x11369e000 - 0x113715fff +libSofaGeneralLoader.20.12.01.dylib (0) <1A886A0C-F187-3E49-A3A9-5EFBF7D5D475> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.20.12,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:9578,plugin,plugins,9578,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['plugins']
Modifiability,"device_list’; dhdComUSB-libusb.cpp:(.text+0xed)：undefined reference to ‘libusb_get_device_descriptor’; dhdComUSB-libusb.cpp:(.text+0x120)：undefined reference to ‘libusb_free_device_list’; dhdComUSB-libusb.cpp:(.text+0x141)：undefined reference to ‘libusb_exit’; /home/dell/raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)：in function‘dhdUSBGetDeviceCountList(int*, int*, int*, int)’：; dhdComUSB-libusb.cpp:(.text+0x215)：undefined reference to ‘libusb_init’; dhdComUSB-libusb.cpp:(.text+0x24e)：undefined reference to ‘libusb_get_device_list’; dhdComUSB-libusb.cpp:(.text+0x297)：undefined reference to ‘libusb_get_device_descriptor’; dhdComUSB-libusb.cpp:(.text+0x2eb)：undefined reference to ‘libusb_free_device_list’; dhdComUSB-libusb.cpp:(.text+0x30c)：undefined reference to ‘libusb_exit’; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:1596,plugin,plugin,1596,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,2,['plugin'],['plugin']
Modifiability,"did you fix all the ` unused-but-set-variable` warnings @fredroy ?; if yes, then we could keep the commit. If it's just a partial fix, I would vote for reverting it",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1424757631:37,variab,variable,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3627#issuecomment-1424757631,1,['variab'],['variable']
Modifiability,ditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginMana,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:5230,Plugin,PluginManager,5230,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,doudou@ubuntu:~/ext_plugin_repo$ git clone https://github.com/sofa-framework/sofa/tree/master/applications/plugins/CGALPlugin.git; Klone nach 'CGALPlugin' ...; fatal: repository 'https://github.com/sofa-framework/sofa/tree/master/applications/plugins/CGALPlugin.git/' not found. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1290:107,plugin,plugins,107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1290,2,['plugin'],['plugins']
Modifiability,dy registered: ProjectDirectionConstraint<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: CubeTopology; [WARNING] [ObjectFactory] Class already registered: CylinderGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereGridTopology; [WARNI,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:24937,Plugin,PluginManager,24937,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"e STC : . **First strategy :** Model the Data accesses using ORWL's concepts + high level task parallelism (coarse grain parallelism); - use abstract Data accesses stored in FIFOs to extract parallelism : thread safe data accesses allowing concurrent reads.; - ensures that the semantic of the program is preserved.; - tasks defined at Visitor level : a Task is defined as the execution of a Visitor on a component.; - this strategy should apply to all visitors and components, as it does not depend on the nature of the component. **Issues :** ; - We wanted to use the Data class, since all accesses to a data object in sofa should be done using this class. Problem : this is not true, some components use vectors directly, or use Data methods / ReadAccessor / WriteAccessor not as intended (this is possible since for now some methods such as Data::endEdit do nothing) -> we would need to look at all sofa components to make sure that the Data are properly used; - To properly model the data accesses using ORWL's concepts we need to slightly modify the API of the Data class; - sofa Engine mecanisms are complex to handle using FIFOs; - it is difficult to predict the data dependencies as the Visitors are launched dynamically and can launch Visitors -> we can't predict the data accesses in a preprocessing phase, so we need to adapt ORWL.; - This approach would not induce significant performance gains on simulations with only 1 object or with 1 ""main"" object since all the computationally intensive tasks inside a given object access the same Data object (Write access) and thus are inherently sequential. **Conclusion :** the potential speedup is not good enough to invest more time on this strategy given the difficulty. **Second strategy :** finer-grain parallelization; To extract parallelism from highly data-dependent tasks we need to divide these tasks into less-dependent subtasks.; To achieve that, we are currently implementing parallel vectors to allow some kind of domain decomposit",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-304903792:1386,adapt,adapt,1386,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-304903792,1,['adapt'],['adapt']
Modifiability,"e difference between `MatrixLinearSolver<...,...,NoThreadManager>` and `MatrixLinearSolver<...,...,AsyncThreadManager>` is only in the class implementation. This template mechanism means that it is possible to explicitly instantiate any linear solver as an asynchronous solver. In that case, it will use `MatrixLinearSolver<AsyncThreadManager>` as its base class. On the contrary, `AsyncSparseLDLSolver` introduced in this PR is not generic. It derives from `SparseLDLSolver`. It is specific to `SparseLDLSolver`.; - Because of the previous point, in SofaAsyncSolvers, asynchronous solver components are differentiated only by the template name prefix `Async`. For example, in XML, it is declared as `<SparseLDLSolver template=""AsyncCompressedRowSparseMatrixMat3x3d""/>`, compared to the synchronous solver `<SparseLDLSolver template=""CompressedRowSparseMatrixMat3x3d""/>`. In this PR, `AsyncSparseLDLSolver` is a different component than `SparseLDLSolver` and must use the usual templates: `<AsyncSparseLDLSolver template=""CompressedRowSparseMatrixMat3x3d""/>`.; - `AsyncSparseLDLSolver` uses `std::async`, while `MatrixLinearSolver<AsyncThreadManager>` uses `boost::thread`, hence a dependency to boost. `std::async` may use a thread pool. In that case, it is guaranteed that threads waiting asynchronous tasks are not busy just waiting. I am not sure it is the case in SofaAsyncSolvers.; - In SofaAsyncSolvers, there are some references to an asynchronous matrix assembly. I don't know for sure that it is really used. Code refers to `ThreadSafeForceField`, and I don't know where those forces fields are. `AsyncSparseLDLSolver` assembles the matrix synchronously. In SofaAsyncSolvers, only `SparseLDLSolver` and `SSORPreconditioner` are specialized to be asynchronous. But I guess there must be other private plugins specializing solvers. For now, I only wanted a basic asynchronous LDL solver. Therefore I did not feel that it was necessary to have a generic base class for any asynchronous solver.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2661#issuecomment-1046728613:2258,plugin,plugins,2258,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2661#issuecomment-1046728613,1,['plugin'],['plugins']
Modifiability,"e https://github.com/sofa-framework/sofa/issues/160 or PR https://github.com/sofa-framework/sofa/pull/106 and others.... . The general goal of this Issue is to finally have only one system all around sofa to increase both code consistency and user interface behavior. ; ; Things to do to make that happen: ; - [x] implementing a per component logging system on top of the msg_api to prove we can replace the existing error logging system. (Done in PR https://github.com/sofa-framework/sofa/pull/106). - [x] replace the existing logging of error it should contains:; - removing the filling of the messages in sout.; - removing the old string based buffer (API BREAK).; - removing all the uses of the old message buffers and replace them with the new one (API BREAK).; - updating the gui to use the new msghandler buffers. - [ ] update sofaQtQuick (but there is no API break). - [x] update runSofa to the buffer API break, at least make it compile/run. - [x] clean the way we handle the printLog (see Issue https://github.com/sofa-framework/sofa/issues/160); - remove/rename the printLog data and implement backward compatibility ; - a replacement solution has to be implement to control the printing.; - a replacement solution has to be implement to control the messages based on a per-component selection of the printed messages. - [ ] extending/unifying the sout/serr with more sdebug/swarning. This must be discussed seriously during a meeting because I currently made a lot of attempts to this but didn't managed to implement a working solution without the sever flawn sout/serr have. If you have ideas on that please make a branch with working proposal so that we have sounded discussion (see Issue https://github.com/sofa-framework/sofa/issues/160). - [x] implementing the improvement of the msg_* API discussed in #160. . If like me you think this should be fixed...please join this discussion and share the workload. ; I'm working in https://github.com/SofaDefrost/sofa/tree/improve-messageapi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/179:1541,extend,extending,1541,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/179,1,['extend'],['extending']
Modifiability,"e import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2607,Plugin,PluginManager,2607,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,2,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability,"e the following:; - _Sofa root directory_; - SofaPlugins; - SofaMiscForceField; _..._; - SofaPluginsDeprecated; - SofaVRPNClient _any plugin we no longer support but still keep around if someone else want to pick it up_; - SofaPluginsGPL; - SceneCreator; - SofaPML; ... _any plugins with a GPL licence_; - SofaPlugins(.*) _any other licences or additional private ones in other repos_. Note: as an alternative, for the libs that are currently modules, instead of moving to a generic uninformative ""SofaPlugins"" directory, we could instead move them to the SofaGeneral/SofaAdvanced/SofaMisc directory that already exists and host their main cmake file. 4 advantages to this instead of everything is `applications/plugins`:; 1. one less directory to browse to in order to get to the actual source files; 2. it discourage any assumption that all plugins are/must be in the same directory; 3. clear separation of the different licences, so that we can be sure that a LGPL-only app does not actually include GPL-licenced headers (because of the useful convention to include plugins/lib classes with `MyPlugin/MyClass.h`, all codes must be compiled with options to add to the compiler path the parent of a plugin directory, currently because it is the same parent as plugins with different licences it is difficult to be sure unwanted code is not included); 4. it fits with the way of organizing all codes around collections of libraries, which was the original intent behind Helper/Core/DefaultType within SofaFramework, Simulation* within SofaSimulation, Base* within SofaBase, ..., but which unfortunately was not agreed to with everyone so stuck in years-long discussions and is now broken by adding a ""SofaKernel"" level. As a reminder of the key points of this way of organizing codes, the idea was to make it consistent where the code/targets are found (always within a sub-subdirectory) while allowing to share common scripts/docs/packaging/... at the ""collection"" level instead of copy/pasted withi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/482:3241,plugin,plugins,3241,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/482,1,['plugin'],['plugins']
Modifiability,"e to ‘libusb_init’; dhdComUSB-libusb.cpp:(.text+0x24e)：undefined reference to ‘libusb_get_device_list’; dhdComUSB-libusb.cpp:(.text+0x297)：undefined reference to ‘libusb_get_device_descriptor’; dhdComUSB-libusb.cpp:(.text+0x2eb)：undefined reference to ‘libusb_free_device_list’; dhdComUSB-libusb.cpp:(.text+0x30c)：undefined reference to ‘libusb_exit’; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] T",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2057,Plugin,Plugin,2057,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,1,['Plugin'],['Plugin']
Modifiability,"e. This assumption was problematic as it favor the testing of code paths that does not generate warning or errors instead of testing all the possible paths. To favor both valid and invalid paths this implicit behavior was remove and and made explicit using the ExpectMessage and MessageAsTestFailure raii's. In the process the old behavior of generating failure on errors was lost. . The PR mix the two and: ; - restores this old behavior by default so a test that specify nothing will fail on warning and error.; - but in addition, each tests class/function/bloc can now specify how a specific bloc can react to a message. This can be done using a new syntax taken inspired mimicking the one from gtest. ; - improve the way test failures about warning and error are reported:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5074/testReport/junit/(root)/RigidRigidMappingTest_0/test_translation/; . Example: ; ```cpp; class MyTest : public Sofa_test<>; ; /// This test will fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:1172,inherit,inherit,1172,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['inherit'],['inherit']
Modifiability,"e. def createScene(; root_node: Sofa.Core.Node,; ) -> Sofa.Core.Node:. plugin_list = [; ""Sofa.Component.Collision.Detection.Algorithm"", # [BVHNarrowPhase, BruteForceBroadPhase, DefaultPipeline]; ""Sofa.Component.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""DefaultAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showBehaviorModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""DefaultContactManager"", response=""PenalityContactForceField""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=3.0,; contactDistance=0.5,; ). root_node.gravity = [0.0, -918, 0.0]. scene_node = root_node.addChild(""scene""); #############; # Cutting Sphere; #############; cutting_sphere_node = scene_node.addChild(""cutting_sphere""); cutting_sphere_node.addObject(""CGLinearSolver""); cutting_sphere_node.addObject(""EulerImplicitSolver""); cutting_sphere_node.addObject(""PointSetTopologyContainer""); cutt",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251:1080,plugin,plugin,1080,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1224323251,1,['plugin'],['plugin']
Modifiability,"e... which I was not sure we agreed at this point. ; - the existing mecanism to define the target in ObjectFactory.h is buggy because two identical ObjectFactory::register<XX> compiled in different compilation units produces different getTarget() functions. There was an agreement we should remove it, so this PR was a good opporunity to trying such a thing. . Hope this clarify things. EDIT:; I just found a funny bug related to the automatic registration. Because it rely on the use of a backward macro expansion. There is currently more than 20 components that does not have their target properly set.; Eg: DataDisplay.cpp the code is like that:; ```cpp; #include <sofa/core/ObjectFactory.h>; #include <sofa/defaulttype/VecTypes.h>. #include <SofaOpenglVisual/config.h>; #include <SofaOpenglVisual/DataDisplay.h>; #include <sofa/core/visual/VisualParams.h>. namespace sofa::component::visual::model; {; int DataDisplayClass = core::RegisterObject(""Rendering of meshes colored by data""); .add< DataDisplay >();; }; ```. The problem is that the ```SOFA_TARGET``` macro is used in ```ObjetFactory``` but is actually initialized in ```<SofaOpenglVisual/config.h>```; To fix the code it is needed to move the inclusion of the config.h before the one of ObjectFactory so that RegisterObject behave as expected. ; ```cpp; #include <SofaOpenglVisual/config.h>; #include <sofa/core/ObjectFactory.h>; #include <sofa/defaulttype/VecTypes.h>. #include <SofaOpenglVisual/DataDisplay.h>; #include <sofa/core/visual/VisualParams.h>; ```. Given all that, I'm wonder if going for things like ; ```cpp; int DataDisplayClass = core::RegisterObject(""Rendering of meshes colored by data""); .add< DataDisplay >();; .addTargetName(""SofaOpenglVisual""); ``` ; or even:; ```cpp; int DataDisplayClass = core::RegisterObject(); .setClassName(""DataDisplay""), ; .setTargetName(""SofaOpenglVisual""), ; .setDocString(""Rendering of meshes colored by data""); .addCreator<DataDisplay>();; ``` ; Would not make things much more clear.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-982527615:1599,config,config,1599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-982527615,3,['config'],['config']
Modifiability,e/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/Sofa,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:6830,Plugin,PluginManager,6830,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,e/sofa-framework/master/mac_clang-3.5_default_release/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaSparseSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPreconditioner.dylib; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPython.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaMiscCollision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaAllCommonComponents.dylib; Using python: /usr/local/opt/python@2/bin/python2.7; **** sys.path ****. /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python; /usr/local/lib/python2.7/site-packages; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:3231,Plugin,PluginManager,3231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"eAnimationLoop.h>; #include <sofa/core/visual/VisualLoop.h>; #include <sofa/core/collision/Pipeline.h>; #include <sofa/core/loader/BaseLoader.h>; #include <sofa/core/objectmodel/Event.h>. class Sequence : MultiLink {} ;. Sequence<sofa::core::BehaviorModel> behaviorModel;; Sequence<sofa::core::BaseMapping> mapping;. Sequence<sofa::core::behavior::OdeSolver> solver;; Sequence<sofa::core::behavior::ConstraintSolver> constraintSolver;; Sequence<sofa::core::behavior::BaseLinearSolver> linearSolver;. Single<sofa::core::topology::Topology> topology;; Single<sofa::core::topology::BaseMeshTopology> meshTopology;; Sequence<sofa::core::topology::BaseTopologyObject> topologyObject;. Single<sofa::core::BaseState> state;; Single<sofa::core::behavior::BaseMechanicalState> mechanicalState;; Single<sofa::core::BaseMapping> mechanicalMapping;; Single<sofa::core::behavior::BaseMass> mass;; Sequence<sofa::core::behavior::BaseForceField> forceField;; Sequence<sofa::core::behavior::BaseInteractionForceField> interactionForceField;; Sequence<sofa::core::behavior::BaseProjectiveConstraintSet> projectiveConstraintSet;; Sequence<sofa::core::behavior::BaseConstraintSet> constraintSet;; Sequence<sofa::core::objectmodel::ContextObject> contextObject;; Sequence<sofa::core::objectmodel::ConfigurationSetting> configurationSetting;. Sequence<sofa::core::visual::Shader> shaders;; Sequence<sofa::core::visual::VisualModel> visualModel;; Sequence<sofa::core::visual::VisualManager> visualManager;; ```. This is why I'm searching for a way to fix SingleLink/MultiLink to make it forward declaration friendly. . More fundamentally the Link implementation is interesting but it is also very complex. This complexity and its consequence in term of maintainability (very few of the sofa developpers can understand it easily) and compilation cost make me wonder if we shouldn't investigate/consider simpler approach. . So to anyone @JeremieA, @bcarrez , @maxime-tournier , @matthieu-nesme, @hugtalbot , @StephaneCotin, ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/436#issuecomment-334378104:2375,Config,ConfigurationSetting,2375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/436#issuecomment-334378104,2,"['Config', 'config']","['ConfigurationSetting', 'configurationSetting']"
Modifiability,"eDetection` is two components at once: a broad phase and a narrow phase. I extracted the broad phase code from `BruteForceDetection` and put it in `BruteForceBroadPhase`. `BruteForceBroadPhase` is only a broad phase. There is no narrow phase code inside. The broad phase code extracted from `BruteForceDetection` is taken in #1999. Looking at `RayTraceDetection`, it is also a mix of a broad phase and narrow phase. In this component, the broad phase is actually a brute force broad phase. The broad phase in `RayTraceDetection` did exactly the same thing than the broad phase in `BruteForceDetection`. It means duplicated code. With `BruteForceBroadPhase` we have an opportunity to factorize the broad phase by inheriting from `BruteForceBroadPhase` instead of `BroadPhaseDetection`. This is what I did in `RayTraceDetection`. Doing that, I could remove all the broad phase code from `RayTraceDetection`. # What comes next. It is also my intention to inherit from `BruteForceBroadPhase` in `BruteForceDetection`, and remove all the broad phase code from `BruteForceDetection`. The broad phase code from `BruteForceDetection` and `RayTraceDetection` would be shared from `BruteForceBroadPhase`. However, I expect complex conflicts because of #1999. I'll do that if #1999 is accepted and merged. It is also my intention to extract the narrow phase from `BruteForceDetection` and put it in another component which would inherit from `NarrowPhaseDetection`. The narrow phase in `BruteForceDetection` is not brute force, and should be named with a clearer and more meaningful name. It will be the case with the new component. I also believe SAP can be implemented as a broad phase only component. We would have the choice between `BruteForceBroadPhase` and `SAPBroadPhase`. Any narrow phase would work with both broad phases (`BruteForceBroadPhase` and `SAPBroadPhase`). Finally, with all those changes, we can consider more modularity on the collision detection and choose any combination of broad phase ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2010:1102,inherit,inherit,1102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2010,1,['inherit'],['inherit']
Modifiability,e_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7314,Plugin,PluginManager,7314,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,eated directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/a,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1931,Plugin,PluginManager,1931,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"echanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4460,Plugin,Plugin,4460,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,"ect object (the PSDE) it is only necessary to set the owner, I think. Finally, linking is done by using setParent(). In this way the user can program freely in C++ without worrying about whether his newly defined compound type needs to be made available in the factory. - Regarding the question of linking and automatic deriving of data-types for Outputs my ideas are not as concrete, but maybe helpful. For me there exist two cases:. 1) The Output of the PSDE is connected to an Input of a sofa-object that has static datas, e.g., sofa-objects whose code is written in C++. An example for such an object would be MechanicalObject (MO) that always has the same data (position, velocity, force, …). 2) The Output of the PSDE is connected to a scripted sofa-object, like another PSDE or similar. For case 1.:. It could be possible to define a special BaseData with a name but vacant type. This is a kind of “forward declaration” for the Output. Then, by extending the linking mechanism one could think of the following: At the time of parsing, a sofa-object (e.g. MO) will establish the link between one of its Inputs to the Output of a PSDE (i.e. PSDE->MO). Since the type of the Input is clear (we have static sofa-object whose BaseData doesn’t change) one could at this time create the clone and replace the BaseData with vacant type at the PSDE with the desired one. After that, this BaseData for the Output is valid and can be linked to in a normal way. . I don’t think this is especially dangerous, because this would not be allowed after parsing(). This also handles the problem that the sofa-objects involved would need to be created before the PSDE is created. In this way they can be created after the PSDE. This doesn’t cause confusion for the user neither, because he is aware of the types of the datas. Yet, overall this solution is a little bit complicated because it relies on changing the behavior of linking. Linking has to be extended to detect whether the Output that is being linked ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-392689416:2061,extend,extending,2061,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-392689416,1,['extend'],['extending']
Modifiability,ectFactory] Class already registered: RayTraceDetection; [WARNING] [ObjectFactory] Class already registered: SleepController; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [WARNING] [ObjectFactory] Class already registered: ReadState; [WARNING] [ObjectFactory] Class already registered: ReadTopology; [WARNING] [ObjectFactory] Class already registered: GIDMeshLoader; [WARNING] [ObjectFactory] Class already registered: GridMeshCreator; [WARNING] [ObjectFactory] Class already registered: InputEventReader; [WARNING] [ObjectFactory] Class already registered: MeshGmshLoader; [WARNING] [ObjectFactory] Class already registered: MeshOffLoader; [WARNING] [ObjectFactory] Class already registered: MeshSTLLoader; [WARNING] [ObjectFactory] Class already registered: MeshTrianLoader; [WARNING] [ObjectFactory] Class already registered: MeshXspLoader; [WARNING] [ObjectFactory] Class already registered: OffSequenceLoader; [WARNING] [ObjectFactory] Class already registered: SphereLoader; [WARNING] [ObjectFactory] Class already registered: StringMeshCreator; [WARNING] [ObjectFactory] Class already registered: VoxelGridLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPrecondit,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:29517,Plugin,PluginManager,29517,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"ed is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaNonUniformFem. CMake Deprecation Warning at SofaMisc/CMakeLists.txt:21 (message):; SofaMisc is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaMiscExtra;SofaMiscEngine;SofaMiscFem;SofaMiscForceField;SofaMiscMapping;SofaMiscSolver;SofaMiscTopology""; warning is appearing. however, without crashing it get configured and generates the files. I have build the system on Visual Studio 2019 and it complies without any errors. However, when loading the RunSofa ""SofaPython"" and ""SofaExporter"" modules are not loading. I tried using the plugin manager and it reports erros that .dll file is not there. but it is there in the bin and could not add to the plugin manager. So my questions are as follows.; (1)I want to know whether do I have to change any configuration to avoid deprecation warning messages?; (2) loading the sofaphython to runSofa application ; My Cmake out put is as follows. Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19041.; Install prefix: C:/SOFA/build/master/install; Adding module SofaGeneralVisual; Adding module SofaGraphComponent; Adding module SofaGeneralMeshCollision; Adding module SofaBoundaryCondition; Adding module SofaGeneralAnimationLoop; Adding module SofaGeneralDeformable; Adding module SofaGeneralEngine; Adding module SofaGeneralExplicitOdeSolver; Adding module SofaGeneralImplicitOdeSolver; Adding module SofaGeneralLinearSolver; Adding module SofaGeneralRigid; Adding module SofaGeneralObjectInteraction; Adding module SofaGeneralSimpleFem; Adding module SofaGeneralTopology; Adding module SofaTopologyMapping; Adding module SofaUserInteraction; Adding module SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding module SofaPreconditioner; Adding module SofaHaptics; Adding module SofaValidation; Adding module S",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1623:1163,config,configuration,1163,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1623,1,['config'],['configuration']
Modifiability,efault; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfu,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2199,Plugin,PluginManager,2199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"eiklP/sofa_env/issues/31; **Steps to reproduce**; Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. **Expected behavior**. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: v23.06.00 binaries"". **Command called**. ```txt; python3 /home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py. ```. **Env vars**. ```bash; #################; --- sys.version ---; 3.8.10 (default, Jul 29 2024, 17:02:10) ; [GCC 9.4.0]; --- PATH ---; /home/sofa/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:1407,plugin,plugins,1407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['plugin'],['plugins']
Modifiability,"eld; - [CMake] FIX install on MacOS: differentiate SOFA_BUILD_RELEASE_PACKAGE and SOFA_BUILD_APP_BUNDLE; - [SofaMacros] ADD backward compatibility for INCLUDE_INSTALL_DIR; - [SofaMacros] ADD EXAMPLE_INSTALL_DIR to sofa_create_package; - [SofaMacros] Improve sofa_set_python_directory macro; - [SofaPython] Wider dir search for env loading; - [SofaGuiQt] Remove VSync message; - [package.cmake] Do not force CMAKE_BUILD_TYPE + Enable more plugins. ### [[DiffusionSolver] MOVE from image/extlibs to a real plugin](https://github.com/sofa-framework/sofa/commit/54f49d039aadaffd57a1d7f8ebab3af82e407674); I see no reason not to do that. Dependencies to DiffusionSolver are simpler this way. ### [[CImgPlugin] CLEAN include directory](https://github.com/sofa-framework/sofa/commit/1a617d5350f74ac4a816255960d92638a26cba1b); Sources moved to `src`. No more `../` horror in CImgPlugin include directories. ## Other changes. - [SofaHelper] FIX DynamicLibrary altered search path (Windows only) ; Needed to prefer `bin` libraries over neighboor libraries; - [SofaFramework] FIX typo in config.h.in; - [runSofa] Check if plugins dir exists before adding to PluginRepository; - [SofaTest] FIX SofaPython finding in *Config.cmake.in; - [plugins] ADD missing *Config.cmake.in files; Needed to use them as real plugins; - [All] Improve sofa_copy_libraries and sofa_install_libraries macros; Make them easier to use; - [CMake] Rename sofa_set_python_directory into sofa_install_pythonscripts; Clearer name in my opinion + using CMake multiValueArgs; - [CMake] Update package.cmake to enable plugins; Prepare package.cmake to produce binaries with all plugins from ""options"" configuration.; - [SofaImplicitField] FIX tests enabling; - [CMake] CLEAN package.cmake; - [SofaSimulationCore] Handle reload differently in SceneLoader::Listener; Needed to disable scene checks on reload.; - [SofaGraphComponent] Disable scene checks on reload; Needed by live editor (which reloads the scene every time the file is changed).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:3873,config,config,3873,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['config'],['config']
Modifiability,"elease/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [WARNING] [ObjectFactory] Class already registered: TopologicalChangeProcessor; [WARNING] [ObjectFactory] Class already registered: TopologyChecker; [WARNING] [ObjectFactory] Default template for class TopologyBoundingTrasher already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollisi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:33392,Plugin,PluginManager,33392,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"elists.txt); - **One question remains**: is extlibs/SuiteSparse needed?. ### [[CMake] Install includes in package subdirs](https://github.com/sofa-framework/sofa/commit/68bef4fec16a410007163c5720a5b2ce003ac478); Install module headers in a subdirectory named after their package (SofaGeneral, SofaMisc, SofaFramework, ...). This permits to have clean include directories and thus prevents `find_package` from giving access to unwanted foreign headers.; e.g. doing `find_package(SofaFramework)` will NOT be sufficient to `#include <SofaSomething/anything.h>` (you will get a file not found error).; I think it is way easier to understand that a `find_package` is missing when `#include` fails with ""file not found"" error (at write time if you have a good IDE, at build time otherwise) than with link error (at build time).; Moreover, it will be easier to understand what package is needed for a module by navigating in the include directory.; More details in commit message. ### [[CMake] Make plugins relocatable](https://github.com/sofa-framework/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**. See the RELOCATABLE parameter of sofa_generate_package.; When building and installing SOFA with plugins - internal (in applications/plugins) or external (included with SOFA_EXTERNAL_DIRECTORIES) - the plugins will not be mixed with SOFA anymore.; Instead, they will be installed in their own directory under `<install_prefix>/plugins`.; More importantly, they will be relocatable which means they will behave like if they were built out-of-SOFA.; Principal advantage: we will be able to get redistributable plugin binaries through a classic SOFA build. . ### [Defrost binaries changes for a better install, specifically on MacOS](https://github.com/sofa-framework/sofa/commit/22f3c14a25bf879143fb58403a34d569e8ab727f); - [CMake] FIX install: SofaMiscCollision, SofaDistanceGrid, SofaImplicitField; - [CMake] FIX install on MacOS: differentiate SOFA_BUILD_RELEASE_PACKAG",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:1863,plugin,plugins,1863,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['plugin'],['plugins']
Modifiability,elledar; - Version of SOFA: mast branch; - State: Build Directory. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >; `➜ bin ./runSofa ; [INFO] [runSofa] PluginRepository paths = /Users/hemingshan/Code/sofa/build/plugins:/Users/hemingshan/Code/sofa/build/collections:/Users/hemingshan/Code/sofa/build/lib; [INFO] [runSofa] DataRepository paths = /Users/hemingshan/Code/sofa/src/share:/Users/hemingshan/Code/sofa/src/examples:/Users/hemingshan/Code/sofa/build:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] GuiDataRepository paths = /Users/hemingshan/Code/sofa/src/applications/projects/runSofa/resources:/Users/hemingshan/Code/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.G,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:1308,Plugin,PluginManager,1308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,elopment/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugi,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:4766,Plugin,PluginManager,4766,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,em.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o; [ 12%] Building CXX object Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileRepository.cpp:34:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:733: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileRepository.cpp.o] Error 1; make[2]: *** Waiting for unfinished jobs....; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4527:3706,Plugin,PluginManager,3706,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527,1,['Plugin'],['PluginManager']
Modifiability,emingshan/Code/sofa/build:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] GuiDataRepository paths = /Users/hemingshan/Code/sofa/src/applications/projects/runSofa/resources:/Users/hemingshan/Code/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/l,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:1752,Plugin,PluginManager,1752,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ent.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceback (most recent call last):; File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 435, in; env.reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:5086,Plugin,Plugin,5086,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,"ent.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.It",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2981,Plugin,Plugin,2981,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,"eption:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. Result of the command above is unapplicable, since it is a Windows system. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaNonUniformFem.dll; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaMiscForceField.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/STLIB.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SoftRobots.dll; [WARNING] [UniformMass(uniformMass1)] Unused Attribute: ""massDensity"" with value: ""0.1""; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - MeshOBJLoader: 6 created with alias ""MeshObjLoader""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. **Content of build_dir/CMakeCache.txt**. Installed with the binary, so CMake wasn't used. ---------------------------------------------. PS: Please do inform me if any other in",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2651:1964,Plugin,PluginManager,1964,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2651,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"equiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""];",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1566,Plugin,Plugin,1566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,"er hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compare",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:4404,Plugin,PluginManager,4404,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['Plugin'],['PluginManager']
Modifiability,"er name='ContainerGuide' />; 			<QuadSetTopologyModifier name='Modifier' />; 			<QuadSetGeometryAlgorithms name='GeomAlgo' template='Vec3d' />; 			<Edge2QuadTopologicalMapping nbPointsOnEachCircle='10' radius='1' input='@../../topoLines_guide/meshLinesGuide' output='@ContainerGuide' flipNormals='true' listening='true'/> ; 			<AdaptiveBeamMapping name='visuMapGuide' useCurvAbs='1' printLog='0' interpolation='@../InterpolGuide' input='@../DOFs' output='@Quads' isMechanical='false' />; 			<Node name='VisuOgl'>; 				<OglModel name='Visual' color='0.2 0.2 0.8' material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20' quads='@../ContainerGuide.quads'/>; 				<IdentityMapping input='@../Quads' output='@Visual'/>; 			</Node>		; 		</Node> ; 	 ; 		<Node name='VisuCoils' activated='true'>; 			<MechanicalObject name='Quads'/>; 			<QuadSetTopologyContainer name='ContainerCoils' />; 			<QuadSetTopologyModifier name='Modifier' />; 			<QuadSetGeometryAlgorithms name='GeomAlgo' template='Vec3d' />; 			<Edge2QuadTopologicalMapping nbPointsOnEachCircle='10' radius='0.3' input='@../../topoLines_coils/meshLinesCoils' output='@ContainerCoils' flipNormals='true' listening='true' /> ; 			<AdaptiveBeamMapping name='visuMapCoils' useCurvAbs='1' printLog='0' interpolation='@../InterpolCoils' input='@../DOFs' output='@Quads' isMechanical='false' />; 			<Node name='VisuOgl'>; 				<OglModel name='Visual' color='0.2 0.8 0.2' material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20' quads='@../ContainerCoils.quads'/>; 				<IdentityMapping input='@../Quads' output='@Visual'/>; 			</Node>; 		</Node>; 	</Node>; 	; </Node>; ```. I am using SOFA v23.12.0 and BeamAdapter v23.12.; Is there any additional line I should modify in order to add the third section? @epernod , @hugtalbot do you have any idea?. Thanks a lot for your help!. </div>",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4833:12389,Adapt,AdaptiveBeamMapping,12389,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4833,1,['Adapt'],['AdaptiveBeamMapping']
Modifiability,er.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spri,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:3177,Plugin,PluginManager,3177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"er/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o -D generated_cubin_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.cubin.txt -P /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake; /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(1251): warning: variable ""threads2"" was declared but never referenced. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(360): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_deriveSPKTensor"" is undefined; detected during instantiation of ""void StandardTetrahedralFEMForceFieldCuda_addForce_kernel(int, real *, real *, const real *, __nv_bool, const real *, float, float) [with real=float]"" ; (1248): here. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(587): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_ElasticityTensor"" is undefined; detected during instantiation of ""void StandardTetrahedralFEMForceFieldCuda_addDForce_kernel(int, real *, real *, real, real, real *) [with real=float]"" ; (1266): here. 2 errors detected in the compilation of ""/tmp/tmpxft_0000044c_00000000-6_CudaStandardTetrahedralFEMForceField.cpp1.ii"".; CMake Error at SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake:275 (message):; Error generating file; /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o. ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057:2430,plugin,plugins,2430,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057,2,['plugin'],['plugins']
Modifiability,er; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [WARNING] [ObjectFactory] Class already registered: RecordedCamera; [WARNING] [ObjectFactory] Class already registered: VisualTransform; [WARNING] [ObjectFactory] Class already registered: Visual3DText; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [WARNING] [ObjectFactory] Class already registered: AddFrameButtonSetting; [WARNING] [ObjectFactory] Class already registered: AddRecordedCameraButtonSetting; [WARNING] [ObjectFactory] Class already registered: StartNavigationButtonSetting; [WARNING] [ObjectFactory] Class already registered: AttachBodyButtonSetting; [WARNING] [ObjectFactory] Class already registered: FixPickedParticleButtonSetting; [WARNING] [ObjectFactory] Class already registered: Gravity; [WARNING] [ObjectFactory] Class already registered: PauseAnimationOnEvent; [WARNING] [ObjectFactory] Class already registered: SofaDefaultPathSetting; [WARNING] [ObjectFactory] Class already registered: StatsSetting; [WARNING] [ObjectFactory] Class already registered: ViewerSetting; [WARNING] [ObjectFactory] Class already registered: APIVersion; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [WARNING] [ObjectFactory] Class already registered: DirectSAP; [WARNING] [ObjectFactory] Class already registered: DirectSAPNarrowPhase; [WARNING] [ObjectFactory] Class already registered: IncrSAP; [WARNING] [ObjectFactory] Class already registered: RayTraceNarrowPhase; [WARNING] [ObjectFactory] Class already registered: TriangleOctreeModel; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCol,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:14345,Plugin,PluginManager,14345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,er] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Load,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:7180,Plugin,PluginManager,7180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,er] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:4618,Plugin,PluginManager,4618,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,er] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/So,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8096,Plugin,PluginManager,8096,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,er] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/li,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8736,Plugin,PluginManager,8736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,er] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:4286,Plugin,PluginManager,4286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"er] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithD",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8616,Plugin,PluginManager,8616,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"eral pieces that could be optionally compiled. Is this still on the radar ?. Hervé. Le 05/10/2016 à 15:27, thomas-lemaire a écrit :. > yet an other option is to conditionnaly compile HighOrderTopology code ; > in Flexible based on whether the HighOrderTopology plugin is existing ; > or not (in cmakelists package_require(HighOrderTopology) if ; > (HighOrderTopology_FOUND) ... ):; > - each plugin can live in its own repository; > - no need for a third plugin; > - should work whether all the plugins are compiled in the same cmake ; > build project or are compiled/installed separately (well ; > HighOrderTopology must be available when compiling Flexible); > ; > thomas; > ; > ----- Mail original -----; > ; > > De: ""Matthieu Nesme"" notifications@github.com; > > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > > ; > > Hi Hervé,; > > ; > > In general, I think it is a good idea to have a repo per plugin, ; > > even if it; > > becomes more difficult to update them when the sofa core is modified.; > > But in this specific case, it would be great to add this plugin to this; > > github repo, so Flexible can still benefit from your code.; > > ; > > Another solution, could be to add a third plugin in your independent; > > repository, that would link with both SOFA-HighOrderTopology and ; > > Flexible,; > > and that would contain the high order shape functions.; > > ; > > What do you think?; > > ; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub , or mute the thread .; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub ; > https://github.com/sofa-framework/sofa/pull/16#issuecomment-251673936, ; > or mute the thread ; > https://github.com/notifications/unsubscribe-auth/ASgmq2nsUCIg4ENi5aade6s7Ah995OVBks5qw6XNgaJpZM4JwvD8.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251716233:1463,plugin,plugin,1463,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251716233,4,"['Flexible', 'plugin']","['Flexible', 'plugin']"
Modifiability,eralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:6146,Plugin,PluginManager,6146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,eralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: CubeTopology; [WARNING] [ObjectFactory] Class already registered: CylinderGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereQuadTopology; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [WARNING] [ObjectFactory] Class already registered: CenterPointTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Edge2QuadTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Hexa2QuadTopologicalMapping; [WARNING] [ObjectFactory] Class already r,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:25455,Plugin,PluginManager,25455,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,ergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [WARNING] [ObjectFactory] Class already registered: PenalityContactForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [WARNING] [ObjectFactory] Class already registered: LineCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PointCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TriangleCollisionModel<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [WARNING] [ObjectFactory] Class already registered: MeshOBJLoader; [WARNING] [ObjectFactory] Class already registered: MeshVTKLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [WARNING] [ObjectFactory] Class already registered: RecordedCamera; [WARNING] [ObjectFactory] Class already registered: VisualTransform; [WARNING] [ObjectFactory] Class already registered: Visual3DText; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [WARNING] [ObjectFactory] Class already registered: AddFrameButtonSetting; [WARNING] [ObjectFa,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:12547,Plugin,PluginManager,12547,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,ergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_c,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:4264,Plugin,PluginManager,4264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"erits from StiffSpringForceField); - [x] PenalityContactForceField (#3974); - [x] QuadBendingSprings (nothing to do as it inherits from StiffSpringForceField); - [x] SpringForceField (#3970); - [x] StiffSpringForceField (#2777); - [x] TriangleBendingSprings (nothing to do as it inherits from StiffSpringForceField); - [ ] PolynomialSpringsForceField (#4301); - [ ] FrameSpringForceField \*\*; - [ ] GearSpringForceField \*\*; - [ ] InteractionEllipsoidForceField \*\*; - [ ] JointSpringForceField \*\*; - [ ] RegularGridSpringForceField \*\*; - [ ] RepulsiveSpringForceField \*\*; - [ ] VectorSpringForceField \*\*. # Masses. The new function is `buildMassMatrix` (replaces `addMToMatrix`). But since masses are also force fields, they must also implement `buildStiffnessMatrix` and `buildDampingMatrix`. - [x] DiagonalMass (#2777); - [x] MeshMatrixMass (#2777); - [x] UniformMass (#2777); - [ ] HexahedralFEMForceFieldAndMass; - [ ] HexahedronCompositeFEMForceFieldAndMass; - [ ] HexahedronFEMForceFieldAndMass; - [ ] NonUniformHexahedralFEMForceFieldAndMass; - [ ] NonUniformHexahedronFEMForceFieldAndMass. # Projective constraints. The new function is `applyConstraint(ZeroDirichletCondition*)`; - [x] FixedConstraint (#2777); - [x] FixedPlaneConstraint (#3925); - [x] LinearMovementConstraint (#4144); - [x] PartialFixedConstraint (#2777); - [ ] AffineMovementConstraint; - [ ] AttachConstraint; - [ ] FixedRotationConstraint; - [ ] FixedTranslationConstraint; - [ ] HermiteSplineConstraint; - [ ] LinearVelocityConstraint; - [ ] OscillatorConstraint; - [ ] ParabolicConstraint; - [ ] PartialLinearMovementConstraint; - [ ] ParticleSink; - [ ] ParticleSource; - [ ] ProjectDirectionConstraint; - [ ] ProjectToLineConstraint; - [ ] ProjectToPlaneConstraint; - [ ] ProjectToPointConstraint; - [ ] SkeletalMotionConstraint \*\*; - [ ] PositionBasedDynamicsConstraint \*\*; - [ ] PatchTestMovementConstraint \*\*. # Plugins. ## ShapeMatchingPlugin. - [ ] ShapeMatchingForceField. \*\* = to pluginize",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3967:4051,Plugin,Plugins,4051,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3967,2,"['Plugin', 'plugin']","['Plugins', 'pluginize']"
Modifiability,"error: Plugin not found:""SofaMiscForceFieldDev""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/307:7,Plugin,Plugin,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/307,1,['Plugin'],['Plugin']
Modifiability,ers/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:5490,Plugin,PluginManager,5490,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"es inside the volume as TetrahedralCorotationalFEMForceField and behaves on the surface as TriangularBendingSprings i.e. as the Glisson capsule.; be able to apply 3 generic forces: 1 compression 1 traction 1 cut binding the entire posterior part of the liver. ```python; import Sofa; import numpy as np; from scipy import sparse; from scipy import linalg; import numpy as np; from matplotlib import pyplot as plt. USE_GUI = True; exportCSV = True; showImage = False. def main():; import SofaRuntime; import Sofa.Gui. root = Sofa.Core.Node(""root""); createScene(root); Sofa.Simulation.init(root). if not USE_GUI:; for iteration in range(10):; Sofa.Simulation.animate(root, root.dt.value); else:; Sofa.Gui.GUIManager.Init(""myscene"", ""qglviewer""); Sofa.Gui.GUIManager.createGUI(root, __file__); Sofa.Gui.GUIManager.SetDimension(1080, 1080); Sofa.Gui.GUIManager.MainLoop(root); Sofa.Gui.GUIManager.closeGUI(). def createScene(root):; root.gravity=[0, -9.81, 0]; root.dt=0.02. root.addObject(""RequiredPlugin"", pluginName=[; 'Sofa.Component.Collision.Detection.Algorithm',; 'Sofa.Component.Collision.Detection.Intersection',; 'Sofa.Component.Collision.Geometry',; 'Sofa.Component.Collision.Response.Contact',; 'Sofa.Component.Constraint.Projective',; 'Sofa.Component.IO.Mesh',; 'Sofa.Component.LinearSolver.Iterative',; 'Sofa.Component.Mapping.Linear',; 'Sofa.Component.Mass',; 'Sofa.Component.ODESolver.Backward',; 'Sofa.Component.SolidMechanics.FEM.Elastic',; 'Sofa.Component.StateContainer',; 'Sofa.Component.Topology.Container.Dynamic',; 'Sofa.Component.Visual',; 'Sofa.GL.Component.Rendering3D',; 'Sofa.Component.SolidMechanics.Spring',; 'Sofa.Component.MechanicalLoad',; 'Sofa.Component.Topology.Container.Constant'; ]). root.addObject('DefaultAnimationLoop'). root.addObject('VisualStyle', displayFlags=""showCollisionModels""); root.addObject('CollisionPipeline', name=""CollisionPipeline""); root.addObject('BruteForceBroadPhase', name=""BroadPhase""); root.addObject('BVHNarrowPhase', name=""NarrowPhase""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4861:1856,plugin,pluginName,1856,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4861,1,['plugin'],['pluginName']
Modifiability,"es of changes can be very painful for everyone looking at file histories and/or not working exclusively on master:""; You are totally correct. ""So I would like to know if those considerations were understood before doing this once again ?""; As you ask the question, yes, these considerations were understood and discussed. The problem we have is that when people taking part in discussions are sharing similar concern they can agree on changes that does not fit others needs. This is why we value and regularly ask your feedback (using @JeremieA or @fjourdes). Since we are on github nothing have been ever merged without a minimal shared approval (and this is a keystone for me to contribute to Sofa). So on my side I see no problem in withdrawing or updating the changes made of this is too cumbersome for your workflow. In our workflow we try to stay as close as possible to master and among all the problem we see in the current sofa code base (eg: no being able to deprecate things, too long compilation time because of code coupling, in-coherent and hard to understand file scheme organization) keeping a traceable file history, despite important, was set to a low priority. ""And as a counter-proposal, for discussion, that you are free to ignore, I would suggest a 3 steps approach :""; Impossible, I'm totally opposed to ignoring people contributions (as I'm oposed about endless discussion :)). ; Step 1 and 2 actually fit our needs so we can do that (and actually contribute by PR to make this happens)... About step 3...I have a:; - rather positive opinion on having a SofaPlugin/SofaPluginDeprecated; - moderated opinion on SofaPluginGPL; - negative opinion about using SofaGeneral/SofaAdvanced/SofaMisc because it is extremely confusing. To explaine why...I bet a coffee that, if we take 100 sofa components and ask 10 developers where the component should be we will end up with totally different results (because what is advanced for someone is basic to another) so I fear that opening t",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/482#issuecomment-338700994:1155,coupling,coupling,1155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/482#issuecomment-338700994,1,['coupling'],['coupling']
Modifiability,"eshXspLoader; [WARNING] [ObjectFactory] Class already registered: OffSequenceLoader; [WARNING] [ObjectFactory] Class already registered: SphereLoader; [WARNING] [ObjectFactory] Class already registered: StringMeshCreator; [WARNING] [ObjectFactory] Class already registered: VoxelGridLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [WARNING] [ObjectFactory] Class already registered: CompareState; [WARNING] [ObjectFactory] Class already registered: CompareTopology; [WARNING] [ObjectFactory] Class already registered: DataController; [WARNING] [ObjectFactory] Class already registered: DataMonitor; [WARNING] [ObjectFactory] Class already registered: DevAngleCollisionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DevMonitorManager; [WARNING] [ObjectFactory] Class already registered: DevTensionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: EvalPointsDistance<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: EvalPointsDistance<Vec3d>; [WARNING] [ObjectFactory] Class already registered: EvalSurfaceDistance<Vec3d>; [WARNING] [ObjectFactory] Default template for class ExtraMonitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already reg",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:30155,Plugin,PluginManager,30155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,esponse.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so;,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:9515,Plugin,PluginManager,9515,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,et/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/PluginManager.cpp:30:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileMonitor_linux.cpp:48:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:1013: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileMonitor_linux.cpp.o] Error 1; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:649: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/PluginManager.cpp.o] Error 1; /bd_targaryen/users/kleelakunwet/sofa/src/Sofa/framework/Helper/src/sofa/helper/system/FileSystem.cpp:26:10: fatal error: filesystem: No such file or directory; #include <filesystem>; ^~~~~~~~~~~~; compilation terminated.; Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/build.make:607: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o' failed; make[2]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/src/sofa/helper/system/FileSystem.cpp.o] Error 1; CMakeFiles/Makefile2:3837: recipe for target 'Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all' failed; make[1]: *** [Sofa/framework/Helper/CMakeFiles/Sofa.Helper.dir/all] Error 2; Makefile:135: recipe for target 'all' failed; make: *** [all] Error 2. ```. **Content of build_dir/CMakeCache.txt**. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/14392233/CMakeCache.txt). ---------------------------------------------; Thank you,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4527:4656,Plugin,PluginManager,4656,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4527,1,['Plugin'],['PluginManager']
Modifiability,ev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.IO.Mesh; Sofa.Component.LinearSolver.Iterative; Sofa.Com,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:2566,Plugin,PluginManager,2566,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; Mecha,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:1942,Plugin,PluginManager,1942,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,external plugin build,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3440:9,plugin,plugin,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3440,1,['plugin'],['plugin']
Modifiability,"f third-party dependencies). It’s also hard to make a pull request for this issues as it is something that the SOFA devs have to decide. 1. BulletCollisionDetection; – getModuleLicence() returns “Private”; – text file with information “LICENCE: Private”; – initBulletCollisionDetection.cpp has LGPL 2.1 header; – other source files don’t have a license header; – depends on BulletPhysics, which is licensed under zlib (with exceptions!). 2. ExternalBehaviorModel; – getModuleLicence() returns “???”; – source files have LGPL 2.1 header. 3. Haption; – getModuleLicence() not defined; – text file with information “LICENCE: None”; – source files have LGPL 2.1 header. 4. ManifoldTopologies; – getModuleLicence() returns “?”; – text file with information “LICENCE: ??”. 5. OpenCTMPlugin; – getModuleLicence() returns “Licence ZLIB”; – text file with information “LICENCE: OpenCTM library is an Open source, with a very liberal license (zlib/libpng license).”; – source files have LGPL 2.1 header. 6. Registration; – getModuleLicence() returns “QPL”; – has a file LICENCE.txt (should be LICENSE.txt), which states QPL; – Source files have LGPL 2.1 header. 7. SofaHAPI; – getModuleLicence() returns “GPL”; – text file with information “LICENCE: GPL”; – source files have LGPL 2.1 header. 8. SofaPML; – getModuleLicence() returns empty string; – no text file with license information; – source files have both (!) LGPL 2.1 and GPL 2 headers each. General notes:; – I would expect that every plugin provides a getModuleLicense() function and that this function returns a non-empty string with a valid license; – I would expect getModuleLicense() to return the license version as well if it applies (e.g. LGPL, GPL); – I would expect getModuleLicense() to follow a common scheme, e.g., the official license title like “zlib” instead of “License ZLIB”; – Search/replace “licence/Licence/LICENCE” to “license/License/LICENSE” would help searching for license information (including filenames and file contents)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/139#issuecomment-275395368:2088,plugin,plugin,2088,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/139#issuecomment-275395368,1,['plugin'],['plugin']
Modifiability,fSpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: PolynomialSpringsForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [WARNING] [ObjectFactory] Class already registered: PenalityContactForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [WARNING] [ObjectFactory] Class already registered: LineCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PointCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TriangleCollisionModel<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [WARNING] [ObjectFactory] Class already registered: MeshOBJLoader; [WARNING] [ObjectFactory] Class already registered: MeshVTKLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [WARNING] [ObjectFactory] Class already registered: RecordedCamera; [WARNING] [ObjectFactory] Class already registered: VisualTransform; [WARNING] [ObjectFactory] Class already registered: Visual3DText; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_releas,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:12399,Plugin,PluginManager,12399,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,fa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/p,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:10685,Plugin,PluginManager,10685,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,fa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginMana,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:10302,Plugin,PluginManager,10302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"fa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:11111,plugin,plugins,11111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['plugin'],['plugins']
Modifiability,fa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Rel,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8079,Plugin,PluginManager,8079,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,fa/build/plugins;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/collections;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release; [INFO] [runSofa] DataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/share;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/examples;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [runSofa] GuiDataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/applications/projects/runSofa/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Compone,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1144,plugin,plugin,1144,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['plugin'],['plugin']
Modifiability,fa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1805,Plugin,PluginManager,1805,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"fa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicit",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6118,Plugin,PluginManager,6118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"fa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float> >::setModels(sofa::component::container::MechanicalObject<sofa::defaulttype::StdRigidTypes<3, double> >*, sofa::component::visualmodel::OglModel*)’; visualNode[i].mapping->setModels(rigidDOF.get(), visualNode[i].visu.get());; ^; In file included from /home/franc/sofa/src/SofaKernel/framework/sofa/helper/../../sofa/simulation/Node.h:51:0,; from /home/franc/sofa/src/SofaKernel/framework/sofa/helper/../../sofa/simulation/Simulation.h:25,; from /home/franc/sofa/src/SofaKernel/framework/sofa/helper/../../sofa/helper/AdvancedTimer.h:25,; from /home/franc/sofa/src/SofaKernel/SofaCommon/../modules/SofaBaseTopology/TopologyEngine.inl:29,; from /home/franc/sofa/src/SofaKernel/SofaCommon/../modules/SofaBaseTopology/TopologyData.inl:26,; from /home/franc/sofa/src/SofaKernel/SofaCommon/../modules/SofaBaseVisual/VisualModelImpl.h:34,; from /home/franc/sofa/src/SofaGeneral/../modules/SofaOpenglVisual/OglModel.h:34,; from /home/franc/sofa/src/applications/plugins/Geomagic/src/GeomagicDriver.h:33,; from /home/franc/sofa/src/applications/plugins/Geomagic/src/GeomagicDriver.cpp:23:. /home/franc/sofa/src/SofaKernel/framework/sofa/helper/../../sofa/core/Mapping.h:88:18: note: candidate: void sofa::core::Mapping<TIn, TOut>::setModels(sofa::core::State<DataTypes>*, sofa::core::State<TOut>*) [with TIn = sofa::defaulttype::StdRigidTypes<3, double>; TOut = sofa::defaulttype::ExtVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float>]; virtual void setModels(State< In > * from, State< Out >* to);; ^~~~~~~~~; /home/franc/sofa/src/SofaKernel/framework/sofa/helper/../../sofa/core/Mapping.h:88:18: note: no known conversion for argument 2 from ‘sofa::component::visualmodel::OglModel*’ to ‘sofa::core::State<sofa::defaulttype::ExtVectorTypes<sofa::defaulttype::Vec<3, float>, sofa::defaulttype::Vec<3, float>, float> >*’; ```. ______________________________________________________. Suggested labels:",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/892:1546,plugin,plugins,1546,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/892,2,['plugin'],['plugins']
Modifiability,"fa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2366,Plugin,Plugin,2366,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['Plugin'],['Plugin']
Modifiability,"faGeneral, SofaMisc, SofaFramework, ...). This permits to have clean include directories and thus prevents `find_package` from giving access to unwanted foreign headers.; e.g. doing `find_package(SofaFramework)` will NOT be sufficient to `#include <SofaSomething/anything.h>` (you will get a file not found error).; I think it is way easier to understand that a `find_package` is missing when `#include` fails with ""file not found"" error (at write time if you have a good IDE, at build time otherwise) than with link error (at build time).; Moreover, it will be easier to understand what package is needed for a module by navigating in the include directory.; More details in commit message. ### [[CMake] Make plugins relocatable](https://github.com/sofa-framework/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**. See the RELOCATABLE parameter of sofa_generate_package.; When building and installing SOFA with plugins - internal (in applications/plugins) or external (included with SOFA_EXTERNAL_DIRECTORIES) - the plugins will not be mixed with SOFA anymore.; Instead, they will be installed in their own directory under `<install_prefix>/plugins`.; More importantly, they will be relocatable which means they will behave like if they were built out-of-SOFA.; Principal advantage: we will be able to get redistributable plugin binaries through a classic SOFA build. . ### [Defrost binaries changes for a better install, specifically on MacOS](https://github.com/sofa-framework/sofa/commit/22f3c14a25bf879143fb58403a34d569e8ab727f); - [CMake] FIX install: SofaMiscCollision, SofaDistanceGrid, SofaImplicitField; - [CMake] FIX install on MacOS: differentiate SOFA_BUILD_RELEASE_PACKAGE and SOFA_BUILD_APP_BUNDLE; - [SofaMacros] ADD backward compatibility for INCLUDE_INSTALL_DIR; - [SofaMacros] ADD EXAMPLE_INSTALL_DIR to sofa_create_package; - [SofaMacros] Improve sofa_set_python_directory macro; - [SofaPython] Wider dir search for env loading; - [SofaGuiQt] Rem",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:2099,plugin,plugins,2099,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,3,['plugin'],['plugins']
Modifiability,"faKernel/modules/SofaHelper/src/sofa/helper/vector.h (included 156 times, avg 133 ms), included via:; MeshGmsh.cpp.o MeshGmsh.h Mesh.h (492 ms); MeshTopologyLoader.cpp.o MeshTopologyLoader.h Mesh.h (402 ms); Image.cpp.o Factory.inl (384 ms); SVector.cpp.o SVector.h (379 ms); GenerateRigid.cpp.o GenerateRigid.h Mesh.h (373 ms); TestMessageHandler.cpp.o TestMessageHandler.h (346 ms); ... 19960 ms: /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/pstl/glue_algorithm_defs.h (included 157 times, avg 127 ms), included via:; qglviewer.h camera.h QMap qmap.h qiterator.h qglobal.h algorithm (348 ms); manipulatedCameraFrame.h manipulatedFrame.h frame.h QObject qobject.h qobjectdefs.h qnamespace.h qglobal.h algorithm (345 ms); gtest-typed-test.h gtest-port.h algorithm (299 ms); mouseGrabber.h config.h qglobal.h algorithm (299 ms); VRender.h config.h qglobal.h algorithm (296 ms); cmake_pch.hxx Base.h BoundingBox.h Vec.h fixed_array.h algorithm (271 ms); ... 19494 ms: sofa/applications/plugins/SofaTest/../SofaTest/Mapping_test.h (included 6 times, avg 3249 ms), included via:; DistanceMapping_test.cpp.o (3500 ms); QuaternionIntegration_test.cpp.o (3407 ms); RigidRigidMapping_test.cpp.o (3280 ms); SquareMapping_test.cpp.o (3239 ms); RigidMapping_test.cpp.o (3089 ms); SquareDistanceMapping_test.cpp.o (2976 ms); ... 19187 ms: sofa/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/MechanicalVisitor.h (included 100 times, avg 191 ms), included via:; initSofaDenseSolver.cpp.o MatrixLinearSolver.inl MatrixLinearSolver.h (440 ms); StaticSolver.cpp.o StaticSolver.h MechanicalMatrixVisitor.h (427 ms); NewMatCGLinearSolver.cpp.o CGLinearSolver.inl CGLinearSolver.h MatrixLinearSolver.h (404 ms); DefaultMultiMatrixAccessor.cpp.o DefaultMultiMatrixAccessor.h (388 ms); PrecomputedLinearSolver.cpp.o PrecomputedLinearSolver.inl PrecomputedLinearSolver.h MatrixLinearSolver.h (367 ms); MatrixLinearSolver.cpp.o MatrixLinearSolver.inl MatrixLinearSolver.h (350 m",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:36562,plugin,plugins,36562,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['plugin'],['plugins']
Modifiability,"fa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaMatrix.dll; [INFO] [PluginManager] 72 plugins have been loaded from C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneChe",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10981,Plugin,PluginManager,10981,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"fix shadow variable. Fix #2431 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2435:11,variab,variable,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2435,1,['variab'],['variable']
Modifiability,fix to include debug plugin on msvc,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/15:21,plugin,plugin,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/15,1,['plugin'],['plugin']
Modifiability,"flakes and the `nix` command are not mandatory and not perfect enough yet, so for now you can either:; - run those commands with the extra flag: `nix --extra-experimental-features ""nix-command flakes"" build`; - or add the line `experimental-features = nix-command flakes` in your `~/.config/nix/nix.conf`; - or add the line `experimental-features = nix-command flakes` in your `/etc/nix/nix.conf` and restart nix-daemon",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417343135:284,config,config,284,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417343135,1,['config'],['config']
Modifiability,"fo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INF",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:7003,Plugin,PluginManager,7003,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,4,"['Plugin', 'plugin']","['Plugin', 'PluginManager', 'plugin']"
Modifiability,"following topological mapping. Using src=""@"" to avoid link warning drove to an autolink where the loader refers on container itself. Modification of implicated scenes and xml accordingly.; - WorkerThread maintains a list of stealable tasks as well as a list of higher priority thread specific tasks. Remove ThreadSpecificTask (not used and redundant with new thread-specific task queues). Update Task logging.; - Adapted MultiThreading plugin to the new build system.; - SetDirectory no longer changes the system current directory (shared by all threads in the process), but uses a global variable to record the current directory to be used within Sofa. But changing to the current file's directory is needed to load Python scene. For the moment, python loader is not use with multithreading, changing directory in the loader is a temporary solution. The functioning of python scene loader need to be adapted in the futur. ### Cleans; - Streamline calls to createResponse in case no groupManager is used; - Clean warnings in Task and TaskSchedulerBoost for Multithreading plugin. ### Bugfixes; - Fix crash with multithreaded collision detection. Call `TriangleModel::getTriangleFlag` method for all triangles of the topology to force the initialization of adjacency.information in the topology before some actual collision detection code is executed.; - DDGNode should never be copied to ensure thread safe. Add private copy constructor that gives compilation error to ensure that.; - Compilation fixes for compatibility with boost 1_55. Corrected also the copyright notice.; - Fix execution freeze bug due to simultaneous and reciprocal task stealing between 2 threads (WorkerThread).; - Fix data race at startup, WorkerThread:mTaskScheduler was set by the main thread while being read by the worker thread. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does no",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:3260,plugin,plugin,3260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,1,['plugin'],['plugin']
Modifiability,"following-up #3550 ; (PR coming from https://github.com/sofa-framework/SofaPython3/pull/330). Among other thing, the different variables (SOFA_HAVE_BLABLA) were not set anymore (set previously by sofa_find_package() ); And it did reflect the fact that setting Sofa.GUI means setting common/component/batch/qt mandatory (contrary to the Sofa.Gui module from the former days where everything was implicit). Notable exception is HeadlessRecorder which is still optional... (but I don't even know if it still works🤔). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3595:127,variab,variables,127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3595,1,['variab'],['variables']
Modifiability,"for the plugins I know:; BulletCollisionDetection: LGPL; ExternalBehaviorModel: LGPL; Registration: QPL; SofaPML: obsolete, PML is GPL. regarding the versions of LGPL and GPL pick the ones you prefer :p I've got no idea of their subtle differences. +1 for license (vs licence)!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/139#issuecomment-275402615:8,plugin,plugins,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/139#issuecomment-275402615,1,['plugin'],['plugins']
Modifiability,"formEngine_test.cpp.o Sofa_test.h (846 ms); SparseGridTopology_test.cpp.o Sofa_test.h (775 ms); BaseContext_test.cpp.o BaseSimulationTest.h (745 ms); PathResolver_test.cpp.o (740 ms); TetrahedronNumericalIntegration_test.cpp.o Sofa_test.h (734 ms); ... 62158 ms: sofa/SofaKernel/modules/SofaHelper/../SofaDefaultType/src/sofa/defaulttype/Vec.h (included 143 times, avg 434 ms), included via:; cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (936 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (850 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (831 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (825 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (806 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (792 ms); ... 54486 ms: /opt/Qt/5.15.0/gcc_64/include/QtWidgets/qwidget.h (included 94 times, avg 579 ms), included via:; QSofaStatWidget.h QLabel qlabel.h qframe.h (1332 ms); QTabulationModifyObject.h QWidget (1308 ms); VRender.h config.h QOpenGLWidget qopenglwidget.h QWidget (1240 ms); QSofaStatWidget.h QLabel qlabel.h qframe.h (1237 ms); mouseGrabber.h config.h QOpenGLWidget qopenglwidget.h QWidget (1159 ms); VRender.h config.h QOpenGLWidget qopenglwidget.h QWidget (1153 ms); ... 50534 ms: sofa/SofaKernel/modules/SofaHelper/src/sofa/helper/logging/Messaging.h (included 122 times, avg 414 ms), included via:; cmake_pch.hxx.json cmake_pch.hxx (1185 ms); cmake_pch.hxx.json cmake_pch.hxx (1155 ms); cmake_pch.hxx.json cmake_pch.hxx (1143 ms); cmake_pch.hxx.json cmake_pch.hxx (1029 ms); cmake_pch.hxx.json cmake_pch.hxx (1017 ms); cmake_pch.hxx.json cmake_pch.hxx (995 ms); ... 48975 ms: sofa/applications/plugins/SofaTest/../SofaTest/Sofa_test.h (included 83 times, avg 590 ms), included via:; VariationalSymplecticImplicitSolverNonLinearForceDynamic_test.cpp.o Elasticity_test_deprecated.h Elasticity_test.h (913 ms); TransformEngine_test.cpp.o (891 ms); SparseGridTopology_test.cpp.o (805 ms); TetrahedronNumericalIntegratio",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:31699,config,config,31699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['config'],['config']
Modifiability,"framework.org/community/doc/getting-started/build/linux/ make the same structure as described & clone `git clone -b v21.12 https://github.com/sofa-framework/sofa.git sofa/src`.; After configure cmake gui I got error:. ```; -- Precompiled headers: disabled (SOFA_BUILD_WITH_PCH_ENABLED is OFF or CMake < 3.16).; Install prefix: /media/maxim/big-500/sofa/build/v21.12/install; CMake Deprecation Warning at SofaKernel/modules/Sofa.Config/CMakeLists.txt:80 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). Using legacy headers is enabled.; Headers from v21.06 are usable, but it is advised to change your code to use the new headers introduced in v21.12.; Adding module Sofa.GL; Adding plugin SofaSimpleFem; Adding plugin SofaRigid; Adding plugin SofaDeformable; Adding plugin SofaObjectInteraction; Adding plugin SofaMeshCollision; Adding plugin SofaEngine; Adding plugin SofaExplicitOdeSolver; Adding plugin SofaImplicitOdeSolver; Adding plugin SofaLoader; Adding plugin SofaGeneralVisual; Adding plugin SofaGraphComponent; Adding plugin SofaGeneralMeshCollision; Adding plugin SofaBoundaryCondition; Adding plugin SofaGeneralAnimationLoop; Adding plugin SofaGeneralDeformable; CMake Warning at /media/maxim/big-500/sofa/build/v21.12/lib/cmake/SofaEigen2SolverConfig.cmake:36 (message):; SofaEigen2Solver has been removed. The package still exists for; compatibility but is empty. Eigen classes were moved to Sofa.LinearAlgebra; and SVDLinearSolver to SofaDenseSolver.; Call Stack (most recent call first):; /media/maxim/big-500/sofa/build/v21.12/lib/cmake/SofaBaseConfig.cmake:35 (find_package); /media/maxim/big-500/sofa/build/v21.12/lib/cmake/SofaGeneralDeformableConfig.cmake:34 (find_package); modules/SofaGeneralDeformable/SofaGeneralDeformable_test/CMakeLists.txt:12 (find_package). Adding plugin SofaGeneralEngine; Adding plugin SofaGeneralExplicitOdeSolver; Adding plugin SofaGeneralImplicitOdeSolver; Adding plugin SofaGeneralLinearSolver; Ad",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3184:888,plugin,plugin,888,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3184,15,['plugin'],['plugin']
Modifiability,"function warning for user & deprecation for devs; - [x] assess again performances; - direct; - Diagonal-buildMassMatrix = 0.57%; - MeshMM-buildMassMatrix = 0.57%; - iterative; - Diagonal-addMDx = 0.45%; - MeshMM-addMDx = 0.70% -- 0.47% without the if condition for graph plotting; - TORUS Fall scene over 10 000 steps; - DiagonalMass; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 9 	 2.54	 1 	 0.01	 0.12	 0.01	 0 	 0.01	 0.19	.........DM-buildMassMatrix; - MeshMatrixMass lumped; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 9 	 2.44	 1 	 **0.0**	 **0.04**	 0.01	 0 	 0.01	 **0.18**	.........MMM-buildMassMatrix; - [ ] update all scenes ( `<DiagonalMass` :arrow_right: `<MeshMatrixMass lumping=""1""` ). **TODO (after this PR)**; - deprecate XspLoaders (see #4003). **NOTE** ; Rigid cases previously handled by the DiagonalMass are not anymore, therefore breaking.; Regarding the absence of use of xs3 formats for rigid bodies and the starting project coupling Pinocchio which should bring a more robust description/handling of rigid bodies, I would advocate to :; - deprecated associated components (XspLoader, MeshXspLoader and their impact on RigidMapping, SpringFF, VectorSpringFF) ; - take this opportunity to clean and replace OldTutorials coming with it with new ones. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3912:1660,coupling,coupling,1660,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912,1,['coupling'],['coupling']
Modifiability,"further to https://github.com/sofa-framework/BeamAdapter/pull/50; ""rewrite the thread pool is needed"" @alxbilger",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2049#issuecomment-1225487343:67,rewrite,rewrite,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2049#issuecomment-1225487343,1,['rewrite'],['rewrite']
Modifiability,g collection SofaRigid; Adding collection SofaDeformable; Adding collection SofaObjectInteraction; Adding collection SofaMeshCollision; Adding collection SofaEngine; Adding collection SofaExplicitOdeSolver; Adding collection SofaImplicitOdeSolver; Adding collection SofaLoader; Adding collection SofaGeneralVisual; Adding collection SofaGraphComponent; Adding collection SofaGeneralMeshCollision; Adding collection SofaBoundaryCondition; Adding collection SofaGeneralAnimationLoop; Adding collection SofaGeneralDeformable; Adding collection SofaGeneralEngine; Adding collection SofaGeneralExplicitOdeSolver; Adding collection SofaGeneralImplicitOdeSolver; Adding collection SofaGeneralLinearSolver; Adding collection SofaGeneralRigid; Adding collection SofaGeneralSimpleFem; Adding collection SofaGeneralTopology; Adding collection SofaTopologyMapping; Adding collection SofaUserInteraction; Adding collection SofaConstraint; Adding collection SofaGeneralLoader; Adding collection SofaExporter; Adding collection SofaSparseSolver; Adding collection SofaPreconditioner; Adding collection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; SofaPython3 is compiled as a subproject to the external project 'Sofa'.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062:6344,plugin,plugin,6344,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1486548062,4,['plugin'],['plugin']
Modifiability,"g='0',xtip=[1, 0 ,0], step=3,rotationInstrument=[0, 0 ,0],controlledInstrument='0',startingPos=[0 ,0 ,0 ,0, -0.7071068, 0, 0.7071068],speed=2,instruments='InterpolCatheter'); CatheterMechanics.addObject('FixedConstraint',name='FixedConstraint',indices=0); CatheterMechanics.addObject('RestShapeSpringsForceField',points='@m_ircontroller.indexFirstNode',stiffness=1e8,angularStiffness=1e8). VisuCatheter = CatheterModel.addChild('VisuCatheter'); VisuCatheter.activated = True; VisuCatheter.addObject('MechanicalObject',name='Quads'); VisuCatheter.addObject('QuadSetTopologyContainer',name='ContainerCath'); VisuCatheter.addObject('QuadSetTopologyModifier',name='Modifier'); VisuCatheter.addObject('QuadSetGeometryAlgorithms',name='GeomAlgo', template='Vec3d'); VisuCatheter.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius='2',input='@../../topoLines_cath/meshLinesCath',output='@ContainerCath',flipNormals='true'); VisuCatheter.addObject('AdaptiveBeamMapping', name='VisuMapCath',useCurvAbs='1',printLog='0',interpolation='@../InterpolCatheter',input='@../DOFs',output='@Quads', isMechanical='false' ). VisuOgl = VisuCatheter.addChild('VisuOgl'); VisuOgl.addObject('OglModel',name='Visual',color='0.7 0.7 0.7', quads='@../ContainerCath.quads',material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20'); VisuOgl.addObject('IdentityMapping',input='@../Quads',output='@Visual'). return rootNode. ######### SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::dump; sofa::helper::BackTrace::sig; seh_filter_exe; seh_filter_exe; _C_specific_handler; _chkstk; RtlRaiseException; KiUserExceptionDispatcher; sofa::component::engine::_wirerestshape_::WireRestShape<sofa::defaulttype::StdRigidTypes<3,double> >::getClass; sofa::component::fem::_wirebeaminterpolation_::WireBeamInterpolation<sofa::defaulttype::StdRigidTypes<3,double> >::bwdInit; sofa::core::ObjectFactory::createObject; sofa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3483:3036,Adapt,AdaptiveBeamMapping,3036,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483,1,['Adapt'],['AdaptiveBeamMapping']
Modifiability,ger] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscF,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7940,Plugin,PluginManager,7940,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,ger] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.C,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:8965,Plugin,PluginManager,8965,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ger] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:4680,Plugin,PluginManager,4680,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ger] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Comp,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8896,Plugin,PluginManager,8896,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ger] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_sour,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3467,Plugin,PluginManager,3467,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ger] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/s,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3756,Plugin,PluginManager,3756,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ger] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; The object is not in the factory.; This component has been PLUGINIZED since SOFA v20.06. To continue using this component you need to update you scene and add <RequiredPlugin name='SofaNonUniformFem'/>. [ERROR] [SceneLoaderXML] Node initialization failed. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedNam",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9792,Plugin,PluginManager,9792,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ges', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2668,Plugin,Plugin,2668,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['Plugin'],['Plugin']
Modifiability,"ges:; --- sys.path ---; ['', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/path/to/SofaPython3/lib/python3/site-packages', '/opt/anaconda3/envs/sofarl/lib/python38.zip', '/opt/anaconda3/envs/sofarl/lib/python3.8', '/opt/anaconda3/envs/sofarl/lib/python3.8/lib-dynload', '/opt/anaconda3/envs/sofarl/lib/python3.8/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import Sofa; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; ---------------------------------------; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; import Sofa.Helper; ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')), '/System/Volumes/Preboot/Cryptexes/OS/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:5210,variab,variable,5210,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,1,['variab'],['variable']
Modifiability,"gin SofaGeneralObjectInteraction; Adding plugin SofaGeneralSimpleFem; Adding plugin SofaGeneralTopology; Adding plugin SofaTopologyMapping; Adding plugin SofaUserInteraction; Adding plugin SofaConstraint; Adding plugin SofaGeneralLoader; Adding plugin SofaExporter; Adding plugin SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding plugin SofaPreconditioner; Adding plugin SofaHaptics; Adding plugin SofaValidation; Adding plugin SofaDenseSolver; Adding plugin SofaNonUniformFem; CMake Warning (dev) at D:/Program Files/CMake/share/cmake-3.22/Modules/CMakeDependentOption.cmake:84 (message):; Policy CMP0127 is not set: cmake_dependent_option() supports full Condition; Syntax. Run ""cmake --help-policy CMP0127"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning.; Call Stack (most recent call first):; SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cmake:112 (cmake_dependent_option); SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cmake:141 (sofa_add_generic); modules/CMakeLists.txt:38 (sofa_add_plugin); This warning is for project developers. Use -Wno-dev to suppress it. Adding plugin SofaOpenglVisual; Adding plugin SofaMiscTopology; Adding plugin SofaMiscExtra; Adding plugin SofaMiscForceField; Adding plugin SofaMiscEngine; Adding plugin SofaMiscSolver; Adding plugin SofaMiscFem; Adding plugin SofaMiscMapping; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") found components: program_options ; -- SofaGuiCommon: Sofa.GL dependent features enabled.; SofaGuiQt: will use Qt5; Adding collection SofaComponentAll; J:/GitHub/sofa/src/applications/plugins/SofaHighOrder does not exist and will be ignored.; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; SofaPython3 is compiled as a subprojec",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2814:3301,Config,Config,3301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2814,1,['Config'],['Config']
Modifiability,"gin, config, sofa prefix) there. If this complicate too much the python script, than making optional python util scripts that set all of this for the user could be a clean option. But I don't think the library should do this in the user's back without transparency. > you need to handle the case where the loaded scene already has python scripts, and let the PythonEnvironment know the interpreter is being run from the outside when initializing (and maybe deal with all the sys.path / __file__ abuses down there). The PythonEnvironment will create an interpreter if there isn't one (like when launching for a binary executable), or use the one already defined. In this case, PythonEnvironment will use the interpreter that called the script (ex python runSofaPython.py). No new python interpreter nor python thread a created (I've just checked to be sure). > probably have a good fight with the GIL down the road. The current GIL usage in the plugin seems to align correctly with this feature since we ""attach"" the PythonEnvironment to an interpreter instead of initialising a new one. No new threads are created. > how should this feature integrate with existing python scenes? Should it be possible to load scenes from within python scenes?. Yes, it seems to work so far. However:. - Loading the SofaPlugin library from within a python script that already imported it should be avoid for now since I'm not sure what side effects this will bring. Right now doing it seems not so bad as, again, we only attach the environment to the already created python environment. ; - A ScriptController will need to be added in order to trigger script events so that the python scene's functions (initGraph, onBeginAnimationStep, etc) are called. The createScene function is called by the SceneLoaderPY so this one is fine. > (I would probably put your feature in a module separate from Sofa for this reason). I think this should be entirely a part of the SofaPython plugin in order to keep what is related to ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525:1668,plugin,plugin,1668,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525,1,['plugin'],['plugin']
Modifiability,gin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/b,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:5613,Plugin,PluginManager,5613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,gin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3946,Plugin,PluginManager,3946,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"gin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; fo",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:11023,Plugin,PluginManager,11023,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,gin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Com,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8619,Plugin,PluginManager,8619,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Co,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6199,Plugin,PluginManager,6199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDeb",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8718,Plugin,PluginManager,8718,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,gin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:2446,Plugin,PluginManager,2446,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,gine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_relea,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:6330,Plugin,PluginManager,6330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,gine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: CubeTopology; [WARNING] [ObjectFactory] Class already registered: CylinderGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereQuadTopology; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [WARNING] [ObjectFactory] Class already registered: CenterPointTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Edge2QuadTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Hexa2QuadTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Hexa2TetraTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: IdentityTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Mes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:25639,Plugin,PluginManager,25639,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,gins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [WARNING] [ObjectFactory] Class already registered: MeshOBJLoader; [WARNING] [ObjectFactory] Class already registered: MeshVTKLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [WARNING] [ObjectFactory] Class already registered: RecordedCamera; [WARNING] [ObjectFactory] Class already registered: VisualTransform; [WARNING] [ObjectFactory] Class already registered: Visual3DText; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [WARNING] [ObjectFactory] Class already registered: AddFrameButtonSetting; [WARNING] [ObjectFactory] Class already registered: AddRecordedCameraButtonSetting; [WARNING] [ObjectFactory] Class already registered: StartNavigationButtonSetting; [WARNING] [ObjectFactory] Class already registered: AttachBodyButtonSetting; [WARNING] [ObjectFactory] Class already registered: FixPickedParticleButtonSetting; [WARNING] [ObjectFactory] Class already registered: Gravity; [WARNING] [ObjectFactory] Class already registered: PauseAnimationOnEvent; [WARNING] [ObjectFactory] Class already registered: SofaDefaultPathSetting; [WARNING] [ObjectFactory] Class already registered: StatsSetting; [WARNING] [ObjectFactory] Class already registered: ViewerSetting; [WARNING] [ObjectFactory] Class already registered: APIVersion; [IN,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:13372,Plugin,PluginManager,13372,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"good, I like the direction it takes . I think if we (you ?-) add additionnal sXyz component stream (like at least sdebug, or a new component API to match the existing msg_Xyz API), we could then have the printLog data deprecated and replaced by msgLevel and start the transition. . The removal of the per component ""message buffer"" has to be done in // in the gui and can be viewed as a separate problem. This would be the responsibility of the GUI to create those per component buffers . thomas . ----- Mail original -----. > De: ""Damien Marchal"" <notifications@github.com>; > À: ""sofa-framework/sofa"" <sofa@noreply.github.com>; > Cc: ""thomas-lemaire"" <thomas.lemaire@inria.fr>, ""Mention""; > <mention@noreply.github.com>; > Envoyé: Mercredi 1 Février 2017 20:34:25; > Objet: Re: [sofa-framework/sofa] [SofaKernel] Add; > PerComponentLoggingMessageHandler to keep and history of messages. (#106). > @matthieu-nesme. > I looked back to the PR and I will remove the three Data field because:. > * controlling the queue size view a Data is not crucial. I will replace it; > with an attribute and get/set or an environment variable.; > * the msgLevel is un-used and was there to rise discussion on whether or not; > controlling the level of messages emitted by an object make sense (eg when; > debugging).; > * the logLevel'one is un-used yet but should one day override the behavior of; > the mis-used f_printLog. > Thanks again to pointing that. > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276931767:1119,variab,variable,1119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276931767,1,['variab'],['variable']
Modifiability,"gorithms name='GeomAlgo' template='Rigid3d' />; 		<MechanicalObject template='Rigid3d' name='dofTopo3' />; 	</Node>; 	. 	<Node name='InstrumentCombined'>; 		<EulerImplicitSolver rayleighStiffness='0.2' rayleighMass='0.1' printLog='false' />; 		<BTDLinearSolver subpartSolve='0' verification='0' verbose='0'/>; 		<RegularGridTopology name='meshLinesCombined'; nx='180' ny='1' nz='1'; xmin='0.0' xmax='1.0'; ymin='0' ymax='0'; zmin='1' zmax='1'; 		/>; 		<MechanicalObject template='Rigid3d' name='DOFs' showIndices='0' ry='-90'/> . 		<WireBeamInterpolation name='InterpolCatheter' WireRestShape='@../topoLines_cath/catheterRestShape' radius='1' printLog='0'/> ; 		<AdaptiveBeamForceFieldAndMass name='CatheterForceField' interpolation='@InterpolCatheter' massDensity='0.00000155'/> <!--stiff silicone E = 10000 MPa // 1550 Kg/m3-->	. 		<WireBeamInterpolation name='InterpolGuide' WireRestShape='@../topoLines_guide/GuideRestShape' radius='0.9' printLog='0'/> ; 		<AdaptiveBeamForceFieldAndMass name='GuideForceField' interpolation='@InterpolGuide' massDensity='0.00000155'/> 	. 		<WireBeamInterpolation name='InterpolCoils' WireRestShape='@../topoLines_coils/CoilRestShape' radius='0.1' printLog='0'/> ; 		<AdaptiveBeamForceFieldAndMass name='CoilsForceField' interpolation='@InterpolCoils' massDensity='0.000021'/> <!-- platine E = 168000 MPa // 21000 Kg/m3-->	. <BeamAdapterActionController name=""AController"" interventionController=""@IRController"" writeMode=""0""; timeSteps=""9.1 17.1 17.55 18.05 18.6 19.05 19.55 20.05 20.5 21 21.45 21.9 22.65 23.1 23.55 24.05 24.55 25 25.45 25.95 26.4 27.1 27.55 28.05 28.55 29 29.5 29.95 30.4 30.9 31.4 31.85 32.35 33.05 33.5 34 34.45 34.9 35.4 35.85 36.35 36.8 37.25 37.7 38.2 38.65 39.4 39.85 40.3 40.7 41.2 41.65 42.1 42.55 43 43.4 44.1 44.55 45 45.45 45.9 46.3 46.75 47.2 47.65 48.1 48.55 49 49.65 50.1 50.5 50.9 51.35 51.75 52.2 52.6 53.05 53.5 53.95 54.4 54.85 55.5 55.9 59.1 66.15 66.6 67.05 67.45 67.9 68.35 68.8 69.25 69.65 70.1 70.55 71.2 71.6 72.05 72.5",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4833:5910,Adapt,AdaptiveBeamForceFieldAndMass,5910,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4833,1,['Adapt'],['AdaptiveBeamForceFieldAndMass']
Modifiability,great news this new plugin :); Flexible will need to be updated before merging this PR.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/220#issuecomment-289693393:20,plugin,plugin,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/220#issuecomment-289693393,2,"['Flexible', 'plugin']","['Flexible', 'plugin']"
Modifiability,"gs. **Full output**. ```txt. [WARNING] [SofaEigen2Solver] SofaEigen2Solver is deprecated; Eigen classes are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = D:/github-clones/sofa/build/bin;D:/github-clones/sofa/build/plugins;D:/github-clones/sofa/build/bin/RelWithDebInfo; [INFO] [runSofa] DataRepository paths = D:/github-clones/sofa/src/share;D:/github-clones/sofa/src/examples;D:/github-clones/sofa/build;D:/github-clones/sofa/build; [INFO] [runSofa] GuiDataRepository paths = D:/github-clones/sofa/src/applications/projects/runSofa/resources;D:/github-clones/sofa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaG",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:5376,Plugin,PluginManager,5376,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,gshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:8192,Plugin,PluginManager,8192,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,gy.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechan,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:3420,Plugin,PluginManager,3420,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"hDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; The object is not in the factory.; This component has been PLUGINIZED since SOFA v20.06. To continue using this component you need to update you scene and add <RequiredPlugin name='SofaNonUniformFem'/>. [ERROR] [SceneLoaderXML] Node initialization failed. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove th",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:10278,Plugin,Plugin,10278,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Plugin'],['Plugin']
Modifiability,"hDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; The object is not in the factory.; This component has been PLUGINIZED since SOFA v20.06. To continue using this component you need to update you scene and add <RequiredPlugin name='SofaNonUniformFem'/>. [ERROR] [SceneLoaderXML] Node initialization failed. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning; [ERROR] [HexahedronFEMForceField(FEM)] No topology component found at path: , nor in current context: Snake. Object must have a MeshTopology.; [ERROR] [BarycentricMapping(barycentricMap1)] No input topology found. Consider setting the 'input_topology' attribut",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:10547,PLUGIN,PLUGINIZED,10547,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['PLUGIN'],['PLUGINIZED']
Modifiability,"hat #include <SofaVolumetricData/> still work for a transitional period) ; - refactor & rename some classes but use 'using OldName = NewName' to provide API compatibility ; and use the Factory to continue exposing the same component names to the sofa users or warning message to indicate the something have changed. After a transitional period this should be removed. . The current WIP is in the following branch:; https://github.com/sofa-framework/sofa/compare/master...SofaDefrost:splitSofaVolumetricDataSquashed. The result is to have:; ```; plugins/SofaDistanceGrid/; - components/collision/BarycentricPenalty, DistanceGridCollision, FFDDistanceGrid, RigidDistanceGird; - components/forcefield/DistanceGridForceFIeld. plugins/SofaImplicitField/ ; - components/geometry/ScalarField (base class); - components/geometry/DiscreteGridField (inherit from ScalarField); - components/geometry/SphericalField (inherit from ScalarField); - components/geometry/otherToComeFromDefrost; - components/mapping/ImplictSurfaceMapping; - deprecated/ImplicitSurfaceContainer (override) components/geometry/DiscreteGridField ; - deprecated/InterpolatedImplicitSurface (override) components/geometry/DiscreteGridField; - deprecated/SphereSurface (override) component/geometry/SphericalField; ```. ...of course we need to add test to all these classes & refactor the MHD loading parts....etc... . Please have a quick look at it and provide feedback on the general way to manage this kind of changes (eg do we really need to keep the SofaVolumetricData transitional plugin or do we allow a more breaking approach and directly remove the SofaVolumetricData with a ChangeLog entry ?). I would be very happy to have opinion & help to be sure to take the right direction resulting PR that match everyone's needs...@jeremieAllard, @fjourdes, @hugtalbot , @guparan , @thomas-lemaire , @matthieu-nesme, @maxime-tournier, @bruno-marques, @bcarrez, @EulalieCoevoet . DM. EDIT: If you are curious about the feature we are adding.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/388:1541,plugin,plugins,1541,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/388,3,"['inherit', 'plugin']","['inherit', 'plugins']"
Modifiability,"hat are created in the same directories in other branches/PRs, you have to be expert in all the rename match heuristics within git in order to be able to use merge with 10s of commits with mismatching file hierarchies (and there is none that I know of that will work well enough to be always used); - the history of all affected files will be polluted by this move. Example: it is tricky to know the history of all the SofaKernel files before May 2016 [(example)](https://github.com/sofa-framework/sofa/commits/master/SofaKernel/framework/sofa/core/BaseState.h) (can someone remind me what we gained by this massive move? I would like to know because that's the number-one time-waster on our end for merges/history tracking). So I would like to know if those considerations were understood before doing this once again ?. And as a counter-proposal, for discussion, that you are free to ignore, I would suggest a 3 steps approach :. 1. First only change the CMake scripts / per-lib main header/cpp to convert them to plugins WITHOUT moving the actual source files; 2. Document the proposed new directory hierarchy, propose it and wait for feedback from enough community members; 3. Once there is an agreement on the hierarchy, apply it via a commit that does not change anything else (changes in cmake scripts should be done as a separate commit, to ease solving later merge/conflict issues). And regarding point 2, instead of moving everything in `applications/plugins` that is only there because of a bad decision 10 years ago (it was simpler as we had to release the main directories as separate archives for licensing reason so we packed the couple of plugins we had together with the executables), I would propose to use the following:; - _Sofa root directory_; - SofaPlugins; - SofaMiscForceField; _..._; - SofaPluginsDeprecated; - SofaVRPNClient _any plugin we no longer support but still keep around if someone else want to pick it up_; - SofaPluginsGPL; - SceneCreator; - SofaPML; ... _any pl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/482:1465,plugin,plugins,1465,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/482,1,['plugin'],['plugins']
Modifiability,"he implementation of BaseObject::init() will not change. . This kind of pattern can be replace with the ""delegate pattern"" (not sure this is its official name). Which leads to:; ```cpp; class BaseObject; {; public:; void init(); { ; checksDataFields(); ; doBaseObjectInit();; setComponentStateOnError();; }; ; void draw(); {; if(componentState != valid); return; doBaseObjectDraw(); ; }; private:; virtual void doBaseObjectInit() {}; virtual void doBaseObjectDraw() {}; };. class MyObject : public BaseObject; {; public:; void doBaseObjectInit() override final; {; /// do here the object specific initialization without bothering of what your parent is doing. ; }; ; void doBaseObjectDraw() override final; {; /// do here the object specific drawing without bothering of what your parent is doing. ; }; }; ```; The latter pattern allows to implement a general behavior in a parent class and be sure this behavior is never broken up by ; the child. . In the PR i tried it to see what would be the change have a look at.; The change in BaseObject is at commit https://github.com/sofa-framework/sofa/commit/5dd2761c7920775e81672cc9a5a12bcaf27b9ee2. Suggestion and improvement welcom :) . EDIT: yes I'm perfectly aware this is a radical refactoring if we are going to deploy it on the whole code base ;); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3317:2214,refactor,refactoring,2214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3317,1,['refactor'],['refactoring']
Modifiability,"her licences or additional private ones in other repos_. Note: as an alternative, for the libs that are currently modules, instead of moving to a generic uninformative ""SofaPlugins"" directory, we could instead move them to the SofaGeneral/SofaAdvanced/SofaMisc directory that already exists and host their main cmake file. 4 advantages to this instead of everything is `applications/plugins`:; 1. one less directory to browse to in order to get to the actual source files; 2. it discourage any assumption that all plugins are/must be in the same directory; 3. clear separation of the different licences, so that we can be sure that a LGPL-only app does not actually include GPL-licenced headers (because of the useful convention to include plugins/lib classes with `MyPlugin/MyClass.h`, all codes must be compiled with options to add to the compiler path the parent of a plugin directory, currently because it is the same parent as plugins with different licences it is difficult to be sure unwanted code is not included); 4. it fits with the way of organizing all codes around collections of libraries, which was the original intent behind Helper/Core/DefaultType within SofaFramework, Simulation* within SofaSimulation, Base* within SofaBase, ..., but which unfortunately was not agreed to with everyone so stuck in years-long discussions and is now broken by adding a ""SofaKernel"" level. As a reminder of the key points of this way of organizing codes, the idea was to make it consistent where the code/targets are found (always within a sub-subdirectory) while allowing to share common scripts/docs/packaging/... at the ""collection"" level instead of copy/pasted within each plugin/library. 2 disadvantages that I see:; 1. it would be useful to also move the other plugins to this new hierarchy (so more files would need to be moved in the end), but this can be done later, plugin-by-plugin, depending on the main maintainers of each; 2. we might get stuck in an endless debate/discussion again...",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/482:4179,plugin,plugin,4179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/482,3,['plugin'],"['plugin', 'plugin-by-plugin', 'plugins']"
Modifiability,"here here to cope for topological changes; - In StiffSpringFF, along with the inherited data from SpringFF, lied the indices lists and a single data for stiffness and damping. . In order to be as conservative as possible, I tried in this PR to only do the merge while keeping every current features enabled. This leads in a double representation of the spring list: the list `d_springs` and the tuple `d_springsIndices[0], d_springsIndices[1], d_ks, d_kd, d_lengths, d_elongationOnly, d_enabled` that needs to be kept coherent constantly through call back. This is cumbersome because we cannot have a circular dependency, and has thus been solved by implicitly defining a hierarchy between the two representation : the tuple representation is the master one, and the spring list follows it. This would be better if we could have a read only data so that the user cannot access the spring list. . The spring list is still useful for three things :; 1. the CUDA implementation (but not mandatory, removing it would require a significant refactoring); 2. the huge number of existing example scenes using SpringForceField that uses this representation in the scene; 3. the extensive use of this representation in the python bindings (especially the linearSpring that has no other purpose that this API). Other than that, it has no real superiority over the proposed parallel representation using a single vector for each spring parameter except for the fact that we don't need to keep coherency over all of the vectors... ; Although the tuple enable more versatile scene description. For example, the input indices can now come from other component while no difficult assembling is needed to build the spring list, we only need to link the data and specify one stiffness that will be generalized to all the springs. . So this is a **_first step_**. It can totally be merged for me. But we still have work to do. It could be done in this PR but I don't know how much time I'll be able to dedicate to it in ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4649#issuecomment-2252777879:2643,refactor,refactoring,2643,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4649#issuecomment-2252777879,1,['refactor'],['refactoring']
Modifiability,hey @damienmarchal could this[ forum topic ](https://www.sofa-framework.org/community/forum/topic/cgal-plugin-install/#post-9114)be related to your PR ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/264#issuecomment-300833513:103,plugin,plugin-install,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/264#issuecomment-300833513,1,['plugin'],['plugin-install']
Modifiability,"hey @guparan @alxbilger ; after investigation, the problem is the same than the one identified in #2927; the lib is generated in _build/applications/plugins/BeamAdapter/lib/_ and no example from BeamAdapter is also available ; moreover, when I do `ninja install` only BeamAdapter get installed in its own location (_build/applications/plugins/BeamAdapter/linstall/_). do you have any idea what's going on @guparan ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1132599183:149,plugin,plugins,149,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2890#issuecomment-1132599183,2,['plugin'],['plugins']
Modifiability,hmm compilation error .. :thinking: ; ```; /usr/bin/ld: applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicEmulator.cpp.o:(.bss+0x4): multiple definition of `sofa::component::io::mesh::MeshObjLoader'; applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicDriver.cpp.o:(.bss+0x4): first defined here; /usr/bin/ld: applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicVisualModel.cpp.o:(.bss+0x0): multiple definition of `sofa::component::io::mesh::MeshObjLoader'; applications/plugins/Geomagic/CMakeFiles/Geomagic.dir/src/Geomagic/GeomagicDriver.cpp.o:(.bss+0x4): first defined here; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3534#issuecomment-1373861836:69,plugin,plugins,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3534#issuecomment-1373861836,4,['plugin'],['plugins']
Modifiability,"hon310\\DLLs', 'C:\\Python310\\lib', 'C:\\Python310', 'C:\\Users\\Manas\\AppData\\Roaming\\Python\\Python310\\site-packages', 'C:\\Python310\\lib\\site-packages', 'C:\\Python310\\lib\\site-packages\\win32', 'C:\\Python310\\lib\\site-packages\\win32\\lib', 'C:\\Python310\\lib\\site-packages\\Pythonwin']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [WARNING] [SofaEigen2Solver] SofaEigen2Solver is deprecated; Eigen classes are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = D:/github-clones/sofa/build/bin;D:/github-clones/sofa/build/plugins;D:/github-clones/sofa/build/bin/RelWithDebInfo; [INFO] [runSofa] DataRepository paths = D:/github-clones/sofa/src/share;D:/github-clones/sofa/src/examples;D:/github-clones/sofa/build;D:/github-clones/sofa/build; [INFO] [runSofa] GuiDataRepository paths = D:/github-clones/sofa/src/applications/projects/runSofa/resources;D:/github-clones/sofa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plug",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:4728,Plugin,PluginRepository,4728,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,3,"['Plugin', 'plugin']","['PluginRepository', 'plugin', 'plugins']"
Modifiability,hon@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload; /usr/local/lib/python2.7/site-packages; ******************; *** PYTHONPATH ***; /usr/local/lib/python2.7/site-packages. ******************; Numpy found: /usr/local/lib/python2.7/site-packages/numpy/__init__.pyc; ```. When I run it with runSofa (and thus SofaPython):; ```; sofamacbuilder:mac_clang-3.5_default_release sofa$ ./build/bin/runSofa -g batch test.py; [INFO] [runSofa] Loading automatically plugin list in /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaSparseSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPreconditioner.dylib; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPython.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plu,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:2374,Plugin,PluginManager,2374,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"hon_scene_tests/0; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/image/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Flexible/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaPython.so; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/Example.py; [ OK ] Batch/Python_scene_test.sofa_python_scene_tests/0 (2544 ms); [ RUN ] Batch/Python_scene_test.sofa_python_scene_tests/1; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/LambdaPropagation.py; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant.so; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant_gui.so; [DEPRECATED] [Compliant.Vec] Compliant's Vec.py is now deprecated (and will be deleted soon), please use numpy instead; [ERROR] [SofaPython] createObject: component 'compliance' of type 'UniformCompliance' in",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:1152,Plugin,PluginManager,1152,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,hs = /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/runSofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/qt; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:1652,Plugin,PluginManager,1652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded ,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:6392,Plugin,PluginManager,6392,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:6255,Plugin,PluginManager,6255,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugin ""wayland"" in """". (process:29694): Gtk-WARNING **: 22:14:09.328: Locale not supported by C library.; 	Using the fallback 'C' locale.; Gtk-Message: 22:14:09.408: Failed to load module ""canberra-gtk-module""; Gtk-Message: 22:14:09.409",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:11327,Plugin,PluginManager,11327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,https://github.com/alxbilger/PluginFinder,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5072#issuecomment-2434849144:29,Plugin,PluginFinder,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5072#issuecomment-2434849144,1,['Plugin'],['PluginFinder']
Modifiability,https://github.com/guparan/sofa/blob/cmake_ng_use_standard_macros/Sofa/GUI/src/sofa/gui/init.cpp should not be a plugin,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1182993626:113,plugin,plugin,113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3120#issuecomment-1182993626,1,['plugin'],['plugin']
Modifiability,https://github.com/jnbrunet/caribou. TODOs:; - Ensure in-tree and out-of-tree builds and tests are passing; - Use SOFA macros in the plugin part (SofaCaribou); - Ensure proper relocatable installation for integration in future SOFA binaries (see SofaPython3 as example),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2129:133,plugin,plugin,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2129,1,['plugin'],['plugin']
Modifiability,"https://github.com/sofa-framework/sofa/blob/18149f4407fd78359eead7b64ae23470687c40c4/applications/plugins/ArticulatedSystemPlugin/src/ArticulatedSystemPlugin/ArticulatedSystemMapping.inl#L527; I encountered a situation where `indexT` can be out of `xto`'s bounds. Can it be checked at init? If detected, what to do?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3750:98,plugin,plugins,98,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3750,1,['plugin'],['plugins']
Modifiability,https://github.com/sofa-framework/sofa/blob/2e94336d0568aa90583633344137974e3e2172c7/SofaKernel/modules/Sofa.Config/src/sofa/config.h.in#L126. List of deprecated macros,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2082#issuecomment-843932646:109,Config,Config,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2082#issuecomment-843932646,2,"['Config', 'config']","['Config', 'config']"
Modifiability,"https://github.com/sofa-framework/sofa/blob/c10f280c9909b0c6b283e8b9c5d94fbeee93edc4/modules/CMakeLists.txt#L15. I have a problem with the configuration here while the option sofaNonUnformFEM is OFF by default, which should be ON; @guparan",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1486:139,config,configuration,139,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1486,1,['config'],['configuration']
Modifiability,"https://github.com/sofa-framework/sofa/issues/1527. based on; - #2679 . Deprecates SofaOpenglVisual; Deprecates partially SofaGeneralEngine. This PR creates an independent plugin, with all the OpenGL-related components + API (previous Sofa.GL module in SofaKernel).; So it comes with the Sofa.GL library (API, utilities, etc) and 3 loadable module:; - ~~Model~~ **Rendering3D**: components drawing stuff in the 3D world; - ~~OnScreen~~ **Rendering2D**: utility components to draw stuff on screen, usual debugging or informations; - ~~Rendering~~ **Shader** : components involves with shadering; - **Engine**: engine doing stuff with OpenGL (only one for now). As it (should?) be considered as a plugin, it put it in applications/plugins but this is a matter of discussion. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2709:172,plugin,plugin,172,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2709,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"https://github.com/sofa-framework/sofa/issues/1637. All in all, removes everything related to the ForceMask, which had been disabled (SOFA_ENABLE_MASK) for a long time.; It was also cauing bugs apparently to a lot of people. [ci-depends-on https://github.com/sofa-framework/Flexible/pull/1]; [ci-depends-on https://github.com/sofa-framework/Compliant/pull/1]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2316:274,Flexible,Flexible,274,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2316,1,['Flexible'],['Flexible']
Modifiability,i forgot to say that i fetched sofapython3 using the variable sofa_fetch_sofapython3 in cmake,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1785422090:53,variab,variable,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1785422090,1,['variab'],['variable']
Modifiability,i managed to solve it using 'conda install -c conda-forge gym==0.21.0'. But it tells me it needs python3.9 to work but i used python3.8. Does sofa need python3.8 to use python plugin or i can use python3.9 as well?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757861144:176,plugin,plugin,176,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1757861144,1,['plugin'],['plugin']
Modifiability,i/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3140,Plugin,PluginManager,3140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"i/Source_code/Sofa_development/SofaPython3/build_release/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: JointSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid2d,Vec2d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: RigidRigidMapping<Rigid3d,Rigid3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [WARNING] [ObjectFactory] Class already registered: AngularSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PolynomialRestShapeSpringsForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: SpringForceFiel",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:9861,Plugin,PluginManager,9861,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"ializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/image/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Flexible/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Compliant/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/python3/site-packages' to sys.path; [INFO] [PluginManager] Loaded plugin: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/libSofaPython3.so; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Components/Components.py ; ModuleNotFoundError: No module named 'Sofa.Components'. At:; Components.py(4): <module>; <frozen importlib._bootstrap>(219):",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:1388,plugin,plugins,1388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,2,"['Flexible', 'plugin']","['Flexible', 'plugins']"
Modifiability,ib/libSofaGuiCommon.20.12.01.dylib; 0x107ef7000 - 0x107efefff +libSofaBase.20.12.01.dylib (0) <1205B822-EBCE-3080-A504-279C805EA8D8> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBase.20.12.01.dylib; 0x107f08000 - 0x107f67fff +libSofaUserInteraction.20.12.01.dylib (0) <BE44029E-7778-3A49-88DE-C2B749FC8B02> /Applications/runSofa.app/Contents/MacOS/plugins/SofaUserInteraction/lib/libSofaUserInteraction.20.12.01.dylib; 0x108050000 - 0x10807bfff +libSofaGraphComponent.20.12.01.dylib (0) <E287C3F6-BA9B-3659-A9EB-38E2A3A80B8A> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGraphComponent/lib/libSofaGraphComponent.20.12.01.dylib; 0x1080d7000 - 0x1080f2fff +libSofaBaseUtils.20.12.01.dylib (0) <581FCEED-99DD-3642-AC19-1EFB56334375> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseUtils.20.12.01.dylib; 0x108130000 - 0x108167fff +libSofaGeneralMeshCollision.20.12.01.dylib (0) <BFA69B16-EFE2-3F2D-843D-38EA209DB60B> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.20.12.01.dylib; 0x1081d4000 - 0x1081f7fff +libSofaGeneralVisual.20.12.01.dylib (0) <2801711D-11F2-342D-9659-A6760DB8B489> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.20.12.01.dylib; 0x108235000 - 0x1082a8fff +libSofaTopologyMapping.20.12.01.dylib (0) <25291751-E35F-3A44-B167-CB54D1C86B40> /Applications/runSofa.app/Contents/MacOS/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.20.12.01.dylib; 0x10834c000 - 0x1083dbfff +libSofaGeneralSimpleFem.20.12.01.dylib (0) <4787B69F-1093-3E5B-8414-BE5EA23432F5> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.20.12.01.dylib; 0x108544000 - 0x10859ffff +libSofaSimpleFem.20.12.01.dylib (0) <39F60B90-A0EE-3992-9391-A0CF20CB95DE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaSimpleFem/lib/libSofaSimpleFem.20.12.01.dylib; 0x10862d000 - 0x10868cfff +libSofaBaseVisual.20.12.01.dylib (0) <3FF1BCE6-2796-3533,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:3458,plugin,plugins,3458,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['plugins']
Modifiability,ibSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:10434,Plugin,PluginManager,10434,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ibSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingsha,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:3753,Plugin,PluginManager,3753,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"igid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Compon",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3485,Plugin,Plugin,3485,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,"ignored scene: DistanceGridForceField-liver.scn. This way, the scene has to remain ignored to build the plugin in default mode (we need it for SofaImplicitField, which is needed for a bunch of examples). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/594:104,plugin,plugin,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/594,1,['plugin'],['plugin']
Modifiability,"ild/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9310,Plugin,PluginManager,9310,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ild/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gf,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6777,Plugin,PluginManager,6777,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ild/install/bin/SceneCreator.dll; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetAssembledSizeVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/GetVectorVisitor.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneCreator.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/SceneUtils.h; 1>-- Up-to-date: C:/projects/sofa-build/install/include/SceneCreator/config.h; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorTargets-release.cmake; 1>-- Up-to-date: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfigVersion.cmake; 1>-- Installing: C:/projects/sofa-build/install/lib/cmake/SceneCreator/SceneCreatorConfig.cmake; 1>CMake Error at applications/plugins/CImgPlugin/cmake_install.cmake:38 (file):; 1> file cannot create directory:; 1> C:/projects/sofa-build/$C:/projects/sofa-build/install/plugins/CImgPlugin/bin.; 1> Maybe need administrative privileges.; 1>Call Stack (most recent call first):; 1> applications/plugins/cmake_install.cmake:37 (include); 1> cmake_install.cmake:88 (include); 1>; 1>; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: The command ""setlocal; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: ""C:\Program Files\CMake\bin\cmake.exe"" -DBUILD_TYPE=Release -P cmake_install.cmake; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: if %errorlevel% neq 0 goto :cmEnd; 1>C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\Common7\IDE\VC\VCTargets\Microsoft.CppCommon.targets(133,5): error MSB3073: :cmEnd; 1>C:\Program Files (x86)\Microsoft Vi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1117:2070,plugin,plugins,2070,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1117,1,['plugin'],['plugins']
Modifiability,ilds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Compone,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:2210,Plugin,PluginManager,2210,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,iles.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/So,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:2994,Plugin,PluginManager,2994,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"image plugin had the choice at one moment to compile just its classes with a subset of image type (Byte, etc); The macro was always activated right now, so there was no choice but to compile always ALL the image types, and the image plugin was really long to compile. This PR restores this behavior, with a third choice: to not compile any instanciations.; Some people would like to use some headers (especially CImgData.h) for other plugin, without dragging the whole compilation. Anyway this PR introduces a new cmake option called PLUGIN_IMAGE_COMPILATION_SET restrained to 3 values (a combo box in cmake-gui actually); - standard: a few selected types of image is chosen; - full: all the the instanciations will be compiled; - none: no instanciation, so you will only compile initImage.cpp effectively. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2340:6,plugin,plugin,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2340,3,['plugin'],['plugin']
Modifiability,"img src=""https://user-images.githubusercontent.com/11028016/106575725-ae33b700-653c-11eb-89e3-4bdeae912a94.png"" width=""350"" >. 2. Other modules (SofaGeneral, etc); - clean deps (useless includes, use lower level objects, etc), linked with the following NG2 actually. SOFA modules dependency (library link) graph: https://www.sofa-framework.org/graph/. *clang tools?*; *include-what-you-need?*. ### NG2: Pluginize all SOFA modules; Pluginizing a module = making it a [CMake Package](https://cmake.org/cmake/help/latest/manual/cmake-packages.7.html) that can be enabled/disabled in SOFA CMake options.; Pluginizing **does not mean** moving files (it did in the past). The module stays in place, only the CMake files change. The Components within the module stay in place too. Done module pluginizations: https://github.com/sofa-framework/sofa/issues?q=is%3Amerged+label%3A%22NG2%3A+pluginization%22. Quick schematics on the current state and what will be achieved:. <img src=""https://www.sofa-framework.org/wp-content/uploads/2020/10/stc9_overview_v20.06.png"" width=""40%"" height=""auto"" /> &nbsp; <img src=""https://www.sofa-framework.org/wp-content/uploads/2020/10/stc9_modularization_plan.png"" width=""40%"" height=""auto"" />. [SOFA Modules' plan](https://drive.google.com/file/d/14H2YRu0z8usiqTpGQuxcnel1uf1Hna1I/view?usp=sharing). ### NG3: Reorganize SOFA modules towards new architecture; ~~Latest architecture proposal: https://annuel2.framapad.org/p/sofang-v7~~; Latest architecture proposal: https://annuel2.framapad.org/p/sofang-v8. *Continue using recipes with https://github.com/guparan/sofa2ng ?*. ### NG4: Cleaning the applications/plugins repository; Following the [planning](https://docs.google.com/spreadsheets/d/1FVQN4rghI1SSYuhT1Y3L5fUZdL7XXPETgQ1GQ28KlD8/edit#gid=0) we built at our previous STC, we should start moving out these plugins in new github.com/sofa-framework/ repositories. ______________________________________; @sofa-framework/consortium-staff: Feel free to edit this post.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1527:3105,plugin,plugins,3105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1527,2,['plugin'],['plugins']
Modifiability,"import sys; import Sofa. def createScene(rootNode):; rootNode.addObject('RequiredPlugin',; pluginName='BeamAdapter SofaDeformable SofaImplicitOdeSolver SofaGeneralLinearSolver SofaLoader SofaOpenglVisual SofaTopologyMapping SofaBoundaryCondition SofaConstraint '); rootNode.addObject('VisualStyle',; displayFlags='showVisualModels showBehaviorModels showCollisionModels hideMappings hideForceFields'). rootNode.addObject('DefaultAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'). topoLines_cath = rootNode.addChild('EdgeTopology'); topoLines_cath.addObject('WireRestShape',name='catheterRestShape',; straightLength=600.0, length=1000.0,; numEdges=200, youngModulus=12000,; spireDiameter=1000, numEdgesCollis=[50, 10],; printLog=True, template='Rigid3d', spireHeight=0.0,; densityOfBeams=[30, 10], youngModulusExtremity=12000); topoLines_cath.addObject('EdgeSetTopologyContainer', name='meshLinesCath'); topoLines_cath.addObject('EdgeSetTopologyModifier', name='meshLinesModifier'); topoLines_cath.addObject('EdgeSetGeometryAlgorithms', name='GeomAlgo', template='Rigid3d'); topoLines_cath.addObject('MechanicalObject', template='Rigid3d', name='dofTopo'). CatheterMechanics = rootNode.addChild('CatheterModel'); CatheterMechanics.addObject('EulerImplicitSolver',rayleighStiffness=0.2,rayleighMass=0.1,printLog='false'); CatheterMechanics.addObject('BTDLinearSolver',subpartSolve='0',verification='0',verbose='0'); CatheterMechanics.addObject('RegularGridTopology',name='meshLines',nx=60,ny=1,nz=1,xmin=0.0,xmax=1.0,ymin=0, ymax=0,zmin=1,zmax=1); CatheterMechanics.addObject('MechanicalObject',template='Rigid3d',name='DOFs',showIndices=0,ry=-90); CatheterMechanics.addObject('WireBeamInterpolation',name='InterpolCatheter',WireRestShape='@../topoLines_cath/catheterRestShape',radius=1,printLog='0'); CatheterMechanics.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField', interpolation='@InterpolCatheter', massDensity=0.00000155); CatheterMechanics.addObject('Interventio",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3483:91,plugin,pluginName,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483,1,['plugin'],['pluginName']
Modifiability,"in DataExchange component, add exchanges of image data types (ImageUC, ImageUS, ImageF), requiring a depedency with the image plugin; + add a simple example passing an image from an ImageContainer (Thread 1) to an ImageViewer (Thread 2); + fix OpenGL issues in the draw() function in the Kinect component in the image plugin. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/769:126,plugin,plugin,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/769,2,['plugin'],['plugin']
Modifiability,"in loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternalModule` function's pointer or plugin's name as another already loaded plugin; - A plublic `PluginManager::addPlugin` that adds a plugin to the register without loading it (it must be loaded in the memory beforehand) is now available. **Supplementary python bindings**; Since me and @vmagno used this PR extensively during the past 2 months for our simulations, we added a couple of python bindings useful to us. I think this wraps up a lot of things, let me know what you guys think. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:5610,Plugin,PluginManager,5610,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,7,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"in manager**; One of the problem arising from this feature is the duplicated loading of the python plugin: when issuing the `import Sofa` command in the python script the interpreter loads the library (SofaPython.so). If the script explicitly calls the `Sofa.loadPlugin(""SofaPython"")` command, Sofa's PluginManager will load again the same library. Example of a faulty script:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager wa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:3309,plugin,plugin,3309,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['plugin'],['plugin']
Modifiability,"in order to better handle code lifecycle. ### NG1: Simplify headers dependency graph by removing un-needed includes. 1. SofaKernel; - clean/rewrite/reorganize SofaHelper and SofaDefaulttype #1521 ; - remove completely useless files. <img src=""https://user-images.githubusercontent.com/11028016/106575747-b3910180-653c-11eb-8f43-6ec65390ce2f.png"" width=""350"" > &nbsp; <img src=""https://user-images.githubusercontent.com/11028016/106575725-ae33b700-653c-11eb-89e3-4bdeae912a94.png"" width=""350"" >. 2. Other modules (SofaGeneral, etc); - clean deps (useless includes, use lower level objects, etc), linked with the following NG2 actually. SOFA modules dependency (library link) graph: https://www.sofa-framework.org/graph/. *clang tools?*; *include-what-you-need?*. ### NG2: Pluginize all SOFA modules; Pluginizing a module = making it a [CMake Package](https://cmake.org/cmake/help/latest/manual/cmake-packages.7.html) that can be enabled/disabled in SOFA CMake options.; Pluginizing **does not mean** moving files (it did in the past). The module stays in place, only the CMake files change. The Components within the module stay in place too. Done module pluginizations: https://github.com/sofa-framework/sofa/issues?q=is%3Amerged+label%3A%22NG2%3A+pluginization%22. Quick schematics on the current state and what will be achieved:. <img src=""https://www.sofa-framework.org/wp-content/uploads/2020/10/stc9_overview_v20.06.png"" width=""40%"" height=""auto"" /> &nbsp; <img src=""https://www.sofa-framework.org/wp-content/uploads/2020/10/stc9_modularization_plan.png"" width=""40%"" height=""auto"" />. [SOFA Modules' plan](https://drive.google.com/file/d/14H2YRu0z8usiqTpGQuxcnel1uf1Hna1I/view?usp=sharing). ### NG3: Reorganize SOFA modules towards new architecture; ~~Latest architecture proposal: https://annuel2.framapad.org/p/sofang-v7~~; Latest architecture proposal: https://annuel2.framapad.org/p/sofang-v8. *Continue using recipes with https://github.com/guparan/sofa2ng ?*. ### NG4: Cleaning the applica",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1527:2068,Plugin,Pluginizing,2068,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1527,1,['Plugin'],['Pluginizing']
Modifiability,"in segfault when solving constraints in velocity mode. . [SofaConstraint]; - `GenericConstraintSolver` accumulates the constraint lambdas towards independant dofs, so that non linear mappings can compute the geometric stiffness induced by the constraint forces from the previous time step.; - `FreeMotionAnimationLoop` assembles mapping geometric stiffness when possible. It also uses a single mapping linearisation within the time step. The solving step becomes very similar to the one explained in the ""Stable Constraints"" paper, when the compliance of the constraint is equal to zero.; - `BilateralConstraintResolutionNDofs` uses Eigen library to factorize a constraint block of arbitrary size using LDLT decomposition.; - `ConstraintAnimationLoop` minor changes introduced to reflect API changes. [SofaMiscMapping]; - `DistanceMapping` implements the `applyJT` method for `MatrixDeriv` types using the utility methods provided in #452 . [SofaGeneralAnimationLoop]; - `MultiStepAnimationLoop` and `MultiTagAnimationLoop` : adapted code to reflect API change. ADD. [SofaConstraint]; - `MappingGeometricStiffnessForceField` can assemble the geometric stiffness of a mapping.; - `UniformConstraint` defines a constraint with a uniform direction in the contact space, internally it represents an identity matrix. It computes the right hand side of constraint equations in velocity mode as `rhs = phi / dt + dvfree`, following the same calculus notation and derivation as the one explained in the ""Stable Constraints"" paper. In position mode the constraint rhs differs from the constraint rhs in velocity mode by a `dt` factor. `rhs = phi + dvfree * dt` which gives `rhs = dxfree` which is similar to what was done by the previous implementation. ; - `ConstraintStoreLambdaVisitor` which is used by the `GenericConstraintSolver` to store the lambda resulting from the constraint solving step into a specific location ( by default `VecId::externalForce()`, but a dynamic `VecId` can be used also). [Examp",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459:5471,adapt,adapted,5471,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459,1,['adapt'],['adapted']
Modifiability,"in their own directory under `<install_prefix>/plugins`.; More importantly, they will be relocatable which means they will behave like if they were built out-of-SOFA.; Principal advantage: we will be able to get redistributable plugin binaries through a classic SOFA build. . ### [Defrost binaries changes for a better install, specifically on MacOS](https://github.com/sofa-framework/sofa/commit/22f3c14a25bf879143fb58403a34d569e8ab727f); - [CMake] FIX install: SofaMiscCollision, SofaDistanceGrid, SofaImplicitField; - [CMake] FIX install on MacOS: differentiate SOFA_BUILD_RELEASE_PACKAGE and SOFA_BUILD_APP_BUNDLE; - [SofaMacros] ADD backward compatibility for INCLUDE_INSTALL_DIR; - [SofaMacros] ADD EXAMPLE_INSTALL_DIR to sofa_create_package; - [SofaMacros] Improve sofa_set_python_directory macro; - [SofaPython] Wider dir search for env loading; - [SofaGuiQt] Remove VSync message; - [package.cmake] Do not force CMAKE_BUILD_TYPE + Enable more plugins. ### [[DiffusionSolver] MOVE from image/extlibs to a real plugin](https://github.com/sofa-framework/sofa/commit/54f49d039aadaffd57a1d7f8ebab3af82e407674); I see no reason not to do that. Dependencies to DiffusionSolver are simpler this way. ### [[CImgPlugin] CLEAN include directory](https://github.com/sofa-framework/sofa/commit/1a617d5350f74ac4a816255960d92638a26cba1b); Sources moved to `src`. No more `../` horror in CImgPlugin include directories. ## Other changes. - [SofaHelper] FIX DynamicLibrary altered search path (Windows only) ; Needed to prefer `bin` libraries over neighboor libraries; - [SofaFramework] FIX typo in config.h.in; - [runSofa] Check if plugins dir exists before adding to PluginRepository; - [SofaTest] FIX SofaPython finding in *Config.cmake.in; - [plugins] ADD missing *Config.cmake.in files; Needed to use them as real plugins; - [All] Improve sofa_copy_libraries and sofa_install_libraries macros; Make them easier to use; - [CMake] Rename sofa_set_python_directory into sofa_install_pythonscripts; Clearer n",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:3300,plugin,plugin,3300,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['plugin'],['plugin']
Modifiability,in/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaco,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6487,Plugin,PluginManager,6487,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,in: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:3171,Plugin,PluginManager,3171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,inManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.E,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6464,Plugin,PluginManager,6464,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] P",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2646,Plugin,Plugin,2646,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,"ine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9966,Plugin,PluginManager,9966,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"iner""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Comp",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2826,Plugin,Plugin,2826,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,"ing for pthread.h; -- Looking for pthread.h - found; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD; -- Performing Test CMAKE_HAVE_LIBC_PTHREAD - Failed; -- Check if compiler accepts -pthread; -- Check if compiler accepts -pthread - yes; -- Found Threads: TRUE ; CMake Deprecation Warning at CMakeLists.txt:225 (message):; Deprecated components are activated (SOFA_WITH_DEPRECATED_COMPONENTS; variable is ON). -- Found Eigen3: /usr/include/eigen3 (Required is at least version ""2.91.0"") ; **CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Boost (missing: system filesystem program_options) (found; version ""1.71.0"")**; Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindBoost.cmake:2179 (find_package_handle_standard_args); SofaKernel/SofaFramework/SofaMacros.cmake:526 (find_package); SofaKernel/modules/SofaHelper/CMakeLists.txt:6 (sofa_find_package). -- Configuring incomplete, errors occurred!; See also ""/home/thebigone/projects/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/thebigone/projects/sofa/build/CMakeFiles/CMakeError.log"". ``; $ sudo apt install libboost-dev; ``; Reading package lists... Done; Building dependency tree ; Reading state information... Done; **libboost-dev is already the newest version (1.71.0.0ubuntu2).**; The following packages were automatically installed and are no longer required:; libdrm2:i386 libexpat1:i386 libglapi-mesa:i386 libglvnd0:i386 libx11-xcb1:i386 libxcb-dri2-0:i386 libxcb-dri3-0:i386 libxcb-glx0:i386 libxcb-present0:i386 libxcb-sync1:i386 libxdamage1:i386 libxfixes3:i386; libxshmfence1:i386 libxxf86vm1:i386; Use 'sudo apt autoremove' to remove them.; 0 upgraded, 0 newly installed, 0 to remove and 107 not upgraded. Alban. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1462:2124,Config,Configuring,2124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1462,1,['Config'],['Configuring']
Modifiability,"ing from the constraint solving step into a specific location ( by default `VecId::externalForce()`, but a dynamic `VecId` can be used also). [Examples] ; - `InextensiblePendulum.scn` shows the benefits of the linearisation of the constraint force. # Remarks ; - `MappingGeometricStiffnessForceField` suffers the same limitation as any other forcefield, ie the mapping must be directly connected to the independant dofs, otherwise it would require an additional unsupported computation to project the mapped stiffness matrix into the space of the independant degrees of freedom. Multimappings support is not there, since it would probably require some adapatation in the API, so that it is easy to retrieve the stiffness block associated with each of the mapping parent dofs. - ContactMappers : It is (very) questionable to let contact mappers propagate the unconstrained dynamics solution vector towards contact dofs by calling `updateXfree()` since it will induce inconsistencies in mapping linearisation if the contact mappers are non linear, since contact mappings will therefore be linearised around the free motion configuration, and the rest being linearised around the configuration at the beginning of the time step. This PR does not address this problem which is left for future work. It arises only with non linear contact mappers (like the `RigidContactMapper` for instance), but this should be kept in mind. - LinearSolver API : As a general note, I believe the LinearSolver API is a bloated with virtual methods which are difficult to understand since they are not directly related to the computation / factorisation of a positive definite matrix, and are mostly optional especially for non assembled solver like CG. Most of the methods should reside in the ConstraintCorrection API, and concrete instance of ConstraintCorrection should be templated on the type of LinearSolver in my opinion, since it is the only objects that actually make use of these methods, and really what you wan",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459:7419,config,configuration,7419,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459,2,['config'],['configuration']
Modifiability,init__.pyc; ```. When I run it with runSofa (and thus SofaPython):; ```; sofamacbuilder:mac_clang-3.5_default_release sofa$ ./build/bin/runSofa -g batch test.py; [INFO] [runSofa] Loading automatically plugin list in /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaSparseSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPreconditioner.dylib; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPython.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaMiscCollision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaAllCommonComponents.dylib; Using python: /usr/local/opt/python@2/bin/python2.7; **** sys.path ****. /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_de,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:3022,plugin,plugins,3022,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,1,['plugin'],['plugins']
Modifiability,"ins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternalModule` function's pointer or plugin's name as another already loaded plugin; - A plublic `PluginM",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:4828,Plugin,Plugin,4828,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,2,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability,"ins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias];",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1645,Plugin,PluginManager,1645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ions/runSofa.app/Contents/MacOS/plugins/SofaRigid/lib/libSofaRigid.20.12.01.dylib; 0x1129c5000 - 0x112bc4fff +libSofaBaseMechanics.20.12.01.dylib (0) <28F9C6C1-AE2D-365E-ACB7-5CED017A9BD6> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseMechanics.20.12.01.dylib; 0x112fe1000 - 0x113004fff +libSofaEigen2Solver.20.12.01.dylib (0) <B6AD28C5-05ED-3A21-89EC-23F18F1E568D> /Applications/runSofa.app/Contents/MacOS/lib/libSofaEigen2Solver.20.12.01.dylib; 0x11303b000 - 0x11310efff +libSofaBaseLinearSolver.20.12.01.dylib (0) <363874FF-A623-3C38-A6F4-B53605330E4E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseLinearSolver.20.12.01.dylib; 0x11330d000 - 0x113490fff +libSofaBaseTopology.20.12.01.dylib (0) <C995D463-CCEF-337F-B896-B6289F75EF4B> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseTopology.20.12.01.dylib; 0x11369e000 - 0x113715fff +libSofaGeneralLoader.20.12.01.dylib (0) <1A886A0C-F187-3E49-A3A9-5EFBF7D5D475> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.20.12.01.dylib; 0x1137f0000 - 0x11380ffff +libSofaSimulationTree.20.12.01.dylib (0) <66249FEB-F9A5-3BAB-B6DD-EC862C66D9BF> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationTree.20.12.01.dylib; 0x11384e000 - 0x113865fff +libSofaSimulationCommon.20.12.01.dylib (0) <3DD51569-5199-342A-A8DF-B58CBD4C110D> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationCommon.20.12.01.dylib; 0x11388d000 - 0x113908fff +libSofaSimulationCore.20.12.01.dylib (0) <56D15C80-6C1E-38FD-902F-994337A904B7> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationCore.20.12.01.dylib; 0x1139e8000 - 0x113c3bfff +libSofaCore.20.12.01.dylib (0) <23FB6ED2-EA8E-33AC-AD18-E3E9848B2A7E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaCore.20.12.01.dylib; 0x114211000 - 0x114348fff +libSofaDefaultType.20.12.01.dylib (0) <02C0E05A-F9B8-3B94-B15C-3FDE65EF636D> /Applications/runSofa.app/Contents/MacOS/lib/libSofaDefaultType.20.12.01.dylib; 0x1143a1000 - 0x1143d,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:10530,plugin,plugins,10530,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['plugins']
Modifiability,ions/runSofa.app/Contents/MacOS/plugins/SofaValidation/lib/libSofaValidation.20.12.01.dylib; 0x107a7e000 - 0x107bf1fff +libSofaGuiQt.20.12.01.dylib (0) <FDAD8B23-63EB-36B8-8FA5-4A4BE5727F8F> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiQt.20.12.01.dylib; 0x107ead000 - 0x107eccfff +libSofaGuiCommon.20.12.01.dylib (0) <79318879-EFF8-36D2-8F09-F3AB9C184736> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiCommon.20.12.01.dylib; 0x107ef7000 - 0x107efefff +libSofaBase.20.12.01.dylib (0) <1205B822-EBCE-3080-A504-279C805EA8D8> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBase.20.12.01.dylib; 0x107f08000 - 0x107f67fff +libSofaUserInteraction.20.12.01.dylib (0) <BE44029E-7778-3A49-88DE-C2B749FC8B02> /Applications/runSofa.app/Contents/MacOS/plugins/SofaUserInteraction/lib/libSofaUserInteraction.20.12.01.dylib; 0x108050000 - 0x10807bfff +libSofaGraphComponent.20.12.01.dylib (0) <E287C3F6-BA9B-3659-A9EB-38E2A3A80B8A> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGraphComponent/lib/libSofaGraphComponent.20.12.01.dylib; 0x1080d7000 - 0x1080f2fff +libSofaBaseUtils.20.12.01.dylib (0) <581FCEED-99DD-3642-AC19-1EFB56334375> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseUtils.20.12.01.dylib; 0x108130000 - 0x108167fff +libSofaGeneralMeshCollision.20.12.01.dylib (0) <BFA69B16-EFE2-3F2D-843D-38EA209DB60B> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.20.12.01.dylib; 0x1081d4000 - 0x1081f7fff +libSofaGeneralVisual.20.12.01.dylib (0) <2801711D-11F2-342D-9659-A6760DB8B489> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.20.12.01.dylib; 0x108235000 - 0x1082a8fff +libSofaTopologyMapping.20.12.01.dylib (0) <25291751-E35F-3A44-B167-CB54D1C86B40> /Applications/runSofa.app/Contents/MacOS/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.20.12.01.dylib; 0x10834c000 - 0x1083dbfff +libSofaGeneralSimpleFem.20.12.01.dylib (0) <4787B69F-1093-3E5B-8414-BE5E,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:3055,plugin,plugins,3055,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['plugins']
Modifiability,"ir<const sofa::core::VecType, std::basic_string<char>>, std::allocator<std... (527 times, avg 25 ms); 9245 ms: std::__detail::_Insert_base<sofa::core::VecType, std::pair<const sofa::core::VecType, std::basic_string<char>>, std::a... (527 times, avg 17 ms); 9002 ms: std::_Hashtable<sofa::core::VecType, std::pair<const sofa::core::VecType, std::basic_string<char>>, std::allocator<std... (527 times, avg 17 ms); 8232 ms: std::_Hashtable<sofa::core::VecType, std::pair<const sofa::core::VecType, std::basic_string<char>>, std::allocator<std... (527 times, avg 15 ms); ... after; ...; 6836 ms: std::_Hashtable<int, std::pair<const int, int>, std::allocator<std::pair<const int, int>>, std::__detail::_Select1st, ... (844 times, avg 8 ms); 5064 ms: std::_Hashtable<std::basic_string<char>, std::pair<const std::basic_string<char>, unsigned int>, std::allocator<std::p... (679 times, avg 7 ms); 4954 ms: std::unordered_map<sofa::core::VecType, std::basic_string<char>> (527 times, avg 9 ms); 4075 ms: std::_Hashtable<sofa::core::VecType, std::pair<const sofa::core::VecType, std::basic_string<char>>, std::allocator<std... (527 times, avg 7 ms). (limited output so the others are lower); ```. In practical, on the same config/setup, compilation time was shorter of about ~15sec (not that much but still). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3401:1728,config,config,1728,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401,1,['config'],['config']
Modifiability,ission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:1925,Plugin,PluginManager,1925,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"issofa_multithreading is a few commits behind our public integrated branch. ; Almost all the commits are directly related to the `Multithreading` plugin, see https://github.com/InSimo/sofa/commits/issofa_integration_2017/applications/plugins/MultiThreading. There is also one particular fix related to the concurrent call to `DDGNode::update` method ; https://github.com/InSimo/sofa/commit/2e8d6f33b597ff6dbd568c67dfac7715850f8015",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-292126228:146,plugin,plugin,146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-292126228,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"issue sofa-framework/sofa#2 Fix compilation when option SOFA_FLOATING_POINT_TYPE in CMake selected as float. The problem arising when trying to compile with float was due to missing declaration from newmat external library.; The library has been modified for sofa to use a #define SOFA_FLOAT in include.h; However the SOFA_FLOAT was never defined for the extlib since the current procedure is to set CMake variable SOFA_FLOAT and SOFA_DOUBLE to 1. This was done anyway AFTER processing the cmake of the extlibs. Therefore, this pr moves the option for floating point type in sofa in the root CMakeLists and adds the #define for the newmat library to actually create the float type functions. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old (or has fast-merge label).; - [x] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/262:406,variab,variable,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/262,1,['variab'],['variable']
Modifiability,"issue with the config.h / macro _API I guess : ; ``` bash; error LNK2019: unresolved external symbol ""__declspec(dllimport) public: __cdecl sofa::core::future::ObjectFactoryInstance::ObjectCreator<class sofa::simulation::DefaultAnimationLoop>::ObjectCreator<class sofa::simulation::DefaultAnimationLoop>(void)"" ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2712#issuecomment-1056779082:15,config,config,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2712#issuecomment-1056779082,1,['config'],['config']
Modifiability,"istered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec6d>; [WARNING] [ObjectFactory] Default template for class Monitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: Monitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec6d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [WARNING] [ObjectFactory] Class already registered: TopologicalChangeProcessor; [WARNING] [ObjectFactory] Class already registered: TopologyChecker; [WARNING] [ObjectFactory] Default template for class TopologyBoundingTrasher already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringFor",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:32051,Plugin,PluginManager,32051,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"it is difficult to spot quickly which plugin is externalized or not in the centralized plugin folder. So this PR gathers all of these into a same folder (namely `external_plugins`) and are added to the cmake configure process after the `plugins/` one. This implies that plugins in `plugins/` does not depend on things from `external_plugins/`, which should be normal as externalized plugins are supposed to be less a priority than the `plugins`. EXCEPT **SofaPython3** 🤔. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4505:38,plugin,plugin,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4505,8,"['config', 'plugin']","['configure', 'plugin', 'plugins']"
Modifiability,it seems some plugins are still using serr/sendl....,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1171787534:14,plugin,plugins,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3090#issuecomment-1171787534,1,['plugin'],['plugins']
Modifiability,itory.h; │   │   │   └── Submodule_System.h; │   │   ├── Simulation; │   │   │   └── Submodule_Simulation_doc.h; │   │   └── Types; │   │   └── Binding_BoundingBox.h; │   ├── SofaBaseTopology; │   │   ├── Binding_RegularGridTopology_doc.h; │   │   ├── Binding_RegularGridTopology.h; │   │   ├── Binding_SparseGridTopology_doc.h; │   │   └── Binding_SparseGridTopology.h; │   ├── SofaDeformable; │   │   ├── Binding_LinearSpring_doc.h; │   │   ├── Binding_LinearSpring.h; │   │   ├── Binding_SpringForceField_doc.h; │   │   └── Binding_SpringForceField.h; │   ├── SofaGui; │   │   ├── Binding_BaseGui.h; │   │   └── Binding_GUIManager.h; │   ├── SofaRuntime; │   │   └── Timer; │   │   ├── Submodule_Timer_doc.h; │   │   └── Submodule_Timer.h; │   └── SofaTypes; │   ├── Binding_Mat.h; │   ├── Binding_Quat.h; │   └── Binding_Vec.h; ├── lib; │   ├── cmake; │   │   └── SofaPython3; │   │   ├── BindingsConfig.cmake; │   │   ├── BindingsTargets.cmake; │   │   ├── BindingsTargets-debug.cmake; │   │   ├── PluginConfig.cmake; │   │   ├── PluginTargets.cmake; │   │   ├── PluginTargets-debug.cmake; │   │   ├── SofaPython3Config.cmake; │   │   └── SofaPython3ConfigVersion.cmake; │   ├── libSofaPython3.so; │   └── python3; │   └── site-packages; │   ├── Sofa; │   │   ├── Components.cpython-39-x86_64-linux-gnu.so; │   │   ├── constants; │   │   │   ├── __init__.py; │   │   │   ├── KeyCode.py; │   │   │   └── Key.py; │   │   ├── Core.cpython-39-x86_64-linux-gnu.so; │   │   ├── Gui.cpython-39-x86_64-linux-gnu.so; │   │   ├── Helper.cpython-39-x86_64-linux-gnu.so; │   │   ├── __init__.py; │   │   ├── livecoding.py; │   │   ├── prefab.py; │   │   ├── PyTypes; │   │   │   ├── __init__.py; │   │   │   ├── RGBAColor.py; │   │   │   └── Vec3.py; │   │   ├── Simulation.cpython-39-x86_64-linux-gnu.so; │   │   ├── SofaBaseTopology.cpython-39-x86_64-linux-gnu.so; │   │   ├── SofaDeformable.cpython-39-x86_64-linux-gnu.so; │   │   ├── test.py; │   │   └── Types.cpython-39-x86_64-linux-gnu.so; │   ├── So,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-756112592:4264,Plugin,PluginConfig,4264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-756112592,1,['Plugin'],['PluginConfig']
Modifiability,"its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternalModule` function's pointer or plugin's name as another already loaded plugin; - A plublic `PluginManager::addPlugin` that adds a plugin to the register without loading it (it m",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:4932,Plugin,PluginManager,4932,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['Plugin'],['PluginManager']
Modifiability,"ity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). Start: 'Visual'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). KeyNotFoundException: The given key '4' was not present in the dictionary.; System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item (TKey key) (at <eef08f56e2e042f1b3027eca477293d9>:0); SofaUnityAPI.SofaContextAPI.loadScene (System.String filename) (at Assets/SofaUnity/Plugins/SofaUnityAPI/SofaContextAPI.cs:189); SofaUnity.SofaContext.ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:486); SofaUnity.SofaContext.Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext.StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext.Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr, Boolean&). Start: 'VisualEye'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'VisualCornea'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Render",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:6721,Plugin,Plugins,6721,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['Plugin'],['Plugins']
Modifiability,"ive"",; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ""Sofa.Component.Collision.Response.Contact"",; ""Sofa.Component.Setting"",; ""Sofa.Component.AnimationLoop"",; ""Sofa.Component.Collision.Geometry"",; ""Sofa.Component.Constraint.Lagrangian.Correction"",; ""Sofa.Component.LinearSolver.Iterative"",; ""Sofa.Component.Constraint.Lagrangian.Solver"",; ""Sofa.Component.Topology.Container.Constant""]. rootNode.findData('gravity').value=[0,0,-10];; rootNode.findData('dt').value=0.01; ; # Plugin loading; rootNode.addObject('RequiredPlugin', pluginName=pluginNameList, ; printLog='0'). # Rootnode attributes; rootNode.addObject('FreeMotionAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('GenericConstraintSolver', maxIterations='2000', tolerance='1e-9') ; rootNode.addObject('BackgroundSetting', color='0 0.168627 0.211765'). # Scene settings; confignode = rootNode.addChild(""Config""); confignode.addObject(""OglGrid"", nbSubdiv=10, size=1000); confignode.addObject('OglSceneFrame', style=""Arrows"", ; alignment=""TopRight""). # Collision component; rootNode.addObject('DefaultPipeline'); rootNode.addObject('BruteForceBroadPhase'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance', name='Proximity', alarmDistance=""1"", contactDistance=""0.5""); rootNode.addObject('DefaultContactManager', name=""Response"", response=""PenalityContactForceField""). ; # Membrane; membrane=rootNode.addChild(""Membrane""). membrane.addObject(""EulerImplicitSolver""); membrane.addObject(""CGLinearSolver"", iterations='2000', tolerance='1e-9', threshold='1e-9'). membrane.addObject('MeshGmshLoader', name='membraneCoarse', ; filename='FossaOvalisV2.msh'); ; membrane.addObject('TetrahedronSetTopologyContainer', ; name='membraneTopo', src='@membraneCoarse'); membrane.addObject('TetrahedronSetTopologyModifier'); membrane.addObject('TetrahedronSetGeometryAlgorithms',; name='membraneAlgo'). membrane.addObject('MechanicalObject', nam",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3810:2083,config,confignode,2083,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3810,1,['config'],['confignode']
Modifiability,ix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/l,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:8832,Plugin,PluginManager,8832,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [P,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:5814,Plugin,PluginManager,5814,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/collections:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib; [INFO] [runSofa] DataRepository paths = /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/examples:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/runSofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/qt; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs6,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:1069,config,config,1069,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['config'],['config']
Modifiability,k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded pl,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:7269,Plugin,PluginManager,7269,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"kages', '/opt/anaconda3/envs/sofarl/lib/python38.zip', '/opt/anaconda3/envs/sofarl/lib/python3.8', '/opt/anaconda3/envs/sofarl/lib/python3.8/lib-dynload', '/opt/anaconda3/envs/sofarl/lib/python3.8/site-packages']; > #################; > ```; > ; > ### Logs; > **Full output**; > ; > ```; > (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; > Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; > [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > >>> import Sofa; > ---------------------------------------; > Checking SOFA_ROOT and SOFAPYTHON3_ROOT; > Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; > ---------------------------------------; > Traceback (most recent call last):; > File ""<stdin>"", line 1, in <module>; > File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; > import Sofa.Helper; > ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')), '/System/Volumes/Preboot/Cryptexes/OS/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (no such file), '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (ha",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179:5598,plugin,plugins,5598,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179,1,['plugin'],['plugins']
Modifiability,"kefile, SofaHelper CMakefile.; Moreover, a lot of compiler options are not set by **target** (CMake notion), so those are to added EVERYTIME for each projet/plugin (see SofaPython3): c++17, MSVC special flags, etc. # Solution; This PR regroups all CMake config code and SofaFramework is no more the ""bootstrapper"" or whatever it was not.; If you linking against anything from SOFA (most likely at least SofaHelper), the configuration will spread into your project automatically.; This module will be the lowest in the depencency chain (was a bastard mix of SofaFramework/SofaHelper before). # WIP; * ~~Some CMake file to clean~~. * ~~Add no-attribute flags from #1682~~. * Some variables are still not linked to Sofa.Config like Sofa_VERSION: it was in the root CMakefile before, so all the projects know this variable.; For now, Sofa.Config set those global variables **PARENT_SCOPE** but this is ugly in my opinion, and not ""Modern CMake""; One solution is to link this variable to a property of Sofa.Config, and retrieve this property when needed. But it seems a bit bothersome.; ```; get_target_property(Sofa_VERSION ${TARGET} Sofa_VERSION_PROPERTY); ```; Any opinion ?. * I guess there will other things to do later like removing all the tests related code/config into an eventual Sofa.Test, etc; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1674:1392,Config,Config,1392,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1674,2,"['Config', 'config']","['Config', 'config']"
Modifiability,"ks to @fredroy we now have at least 1 engineer working on this project every day :+1:; This issue is meant to be the main follow-up of the project, complementary to #543 (still a good read). ## Objectives. The final objective of SOFA-NG is to refactorize the current (non-core) modules and components by moving them into plugins. It will permit to:; - compile and load only the modules we want; - clean all dependencies in SOFA; - help focusing the work of validation/verification/doc/test on specific codes; - improve the packaging of codes; - ease understanding the API of SOFA for new users; - cleaning the applications/plugins repository. ## Tasks. Here are the main steps of the project.; Tasks NG1 and NG2 can be done in parallel if we work ""bottom->top"" in NG1 and ""top->bottom"" in NG2.; Task NG3 can also be started in parallel. We need to iterate on the architecture proposal to refine it as much as possible before steps NG1 and NG2 are over.; Task NG4 cleaning the applications/plugins repository in order to better handle code lifecycle. ### NG1: Simplify headers dependency graph by removing un-needed includes. 1. SofaKernel; - clean/rewrite/reorganize SofaHelper and SofaDefaulttype #1521 ; - remove completely useless files. <img src=""https://user-images.githubusercontent.com/11028016/106575747-b3910180-653c-11eb-8f43-6ec65390ce2f.png"" width=""350"" > &nbsp; <img src=""https://user-images.githubusercontent.com/11028016/106575725-ae33b700-653c-11eb-89e3-4bdeae912a94.png"" width=""350"" >. 2. Other modules (SofaGeneral, etc); - clean deps (useless includes, use lower level objects, etc), linked with the following NG2 actually. SOFA modules dependency (library link) graph: https://www.sofa-framework.org/graph/. *clang tools?*; *include-what-you-need?*. ### NG2: Pluginize all SOFA modules; Pluginizing a module = making it a [CMake Package](https://cmake.org/cmake/help/latest/manual/cmake-packages.7.html) that can be enabled/disabled in SOFA CMake options.; Pluginizing **does not m",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1527:1080,plugin,plugins,1080,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1527,1,['plugin'],['plugins']
Modifiability,"ks, those objects and containers can change. In particular, adding an element to a container invalidates the iterators. It is a problem if a visitor was in the middle of a loop over the container. This problem can occur even if the visitor was not design to work on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will m",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1962:1922,variab,variables,1922,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962,1,['variab'],['variables']
Modifiability,kspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaSparseSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPreconditioner.dylib; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPython.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaMiscCollision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaAllCommonComponents.dylib; Using python: /usr/local/opt/python@2/bin/python2.7; **** sys.path ****. /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python; /usr/local/lib/python2.7/site-packages; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python27.zip; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7; /usr/local/Cellar/python@2/2.7.15_1/Fra,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:3394,Plugin,PluginManager,3394,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"l in practice, especially for explicit time integrator. It allows one to solve `a = M^{-1} f` by simply computing `a[i] = f[i]/m[i]`. The fact that you didn't find any usage is quite surprising, and made me look around a little bit:; > ; > 1. The [EulerExplicitSolver](https://github.com/sofa-framework/sofa/blob/99b600aa2a002e9464b0d53d6eb959b5d0b0fcd0/SofaKernel/modules/SofaExplicitOdeSolver/src/SofaExplicitOdeSolver/EulerSolver.h#L35) has in fact a data argument `optimizedForDiagonalMatrix`, and therefore completely ignores `Mass::isDiagonal`.; > ; > 2. The [CentralDifferenceSolver](https://github.com/sofa-framework/sofa/blob/6b475afc63841f10e4990b56c7b837892fb735dd/modules/SofaGeneralExplicitOdeSolver/src/SofaGeneralExplicitOdeSolver/CentralDifferenceSolver.h#L36) simply **assumes** that the mass is diagonal. Hence using this component with non-diagonal mass will result in wrong simulations.; > ; > 3. Implicit solver could use the knowledge of a diagonal mass to efficiently compute `m M + b B + k K`, but they do not...; > ; > ; > This is an important topic that I think should be included into the current discussions to refactor the way SOFA construct its system matrices.; > ; > Also related: can we detect if a diagonal mass remains diagonal if it gets mass contribution via mappings? Does mapped mass even work in SOFA?; > ; > CC: @hugtalbot , @ChristianDuriez , @fjourdes. Thanks @jnbrunet for having looked on this issue. I rephrase your findings as a list of tasks to improve SOFA efficiency and accuracy:. - [ ] Remove EulerExplicitSolver::d_optimizedForDiagonalMatrix and replace it by fetching the result of Mass::isDiagonal; - [ ] CentralDifferenceSolver must be adapted to work with any type of mass matrix; - [ ] Implicit solvers must read the result of Mass::isDiagonal to speed up computations in case mass is diagonal. If we do that, we can assume in this PR that Mass::isDiagonal must not be removed. If you all agree with this list of tasks, I can open the issues.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-799313001:1302,refactor,refactor,1302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-799313001,2,"['adapt', 'refactor']","['adapted', 'refactor']"
Modifiability,"l'). VisuCoils = InstrumentCombined.addChild('VisuCoils'); VisuCoils.activated= True; VisuCoils.addObject('MechanicalObject',name='Quads'); VisuCoils.addObject('QuadSetTopologyContainer',name='ContainerCoils'); VisuCoils.addObject('QuadSetTopologyModifier',name='Modifier' ); VisuCoils.addObject('QuadSetGeometryAlgorithms', name='GeomAlgo',template='Vec3d'); VisuCoils.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=0.3, input='@../../topoLines_coils/meshLinesCoils',output='@ContainerCoils', flipNormals=True,listening=True); VisuCoils.addObject('AdaptiveBeamMapping', name='visuMapCoils',useCurvAbs='1',printLog='0',interpolation='@../InterpolCoils',input='@../DOFs',output='@Quads',isMechanical='false'); VisuOgl = VisuCoils.addChild('VisuOgl'); VisuOgl.activated = True; VisuOgl.addObject('OglModel',name='Visual', color='0.2 0.8 0.2', material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20',quads='@../ContainerCoils.quads'); VisuOgl.addObject('IdentityMapping',input='@../Quads',output='@Visual'). CollisionModel = InstrumentCombined.addChild('CollisionModel'); CollisionModel.addObject('MeshObjLoader',name='meshLoader',filename='D:/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/plugins/BeamAdapter/examples/mesh/phantom.obj',triangulate='true',flipNormals='1'); CollisionModel.addObject('MeshTopology', position='@meshLoader.position', triangles='@meshLoader.triangles'); CollisionModel.addObject('MechanicalObject', name='DOFs1', position=[0, 0 ,400], scale='3',ry='90'); CollisionModel.addObject('TriangleCollisionModel', simulated='0', moving='0'); CollisionModel.addObject('LineCollisionModel', simulated='0', moving='0'); CollisionModel.addObject('PointCollisionModel', simulated='0', moving='0'); CollisionModel.addObject('OglModel',name='Visual',src='@meshLoader',color='1 0 0 0.3',scale='3',ry='90'). return rootNode",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:9419,plugin,plugins,9419,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243,1,['plugin'],['plugins']
Modifiability,"l-library/. Although it does not tell what version of CGAL to use, or boost as well. Finally, I have been successful to build with the following versions of dependencies.; **Environment:**; Visual Studio 2017 vc 14.1; Sofa Master: commit 9d9100aa1b0acb9363c8ec7c9b5e4b470821bfc1; Boost: 1.71.0; CGAL: CGAL-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module co",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1238,Plugin,PluginManager,1238,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"l/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Componen",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2220,Plugin,Plugin,2220,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['Plugin'],['Plugin']
Modifiability,"l; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; The object is not in the factory.; This component has been PLUGINIZED since SOFA v20.06. To continue using this component you need to update you scene and add <RequiredPlugin name='SofaNonUniformFem'/>. [ERROR] [SceneLoaderXML] Node initialization failed. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning; [ERROR] [HexahedronFEMForceField(FEM)] No topology component found at path: , nor in current context: Snake. Object must have a MeshTopology.; [ERROR] [BarycentricMapping(barycentricMap1)] No input topology found. Consider setting the 'input_topology' attribute.; [ERROR] [BarycentricMapping(barycentricMap2)] No input topology found. Consider setting the 'input_topology' attribute.; [ERROR] [BarycentricMapping(barycentricMap3)] No input topology found. Consider setting the 'input_topology' attribute.; [ERROR] [BarycentricMapping(barycentricMap4)] No input topology found. Consider setting the 'inp",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:10997,Plugin,Plugin,10997,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Plugin'],['Plugin']
Modifiability,"lang 14.0.6 ] :: Anaconda, Inc. on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > >>> import Sofa; > ---------------------------------------; > Checking SOFA_ROOT and SOFAPYTHON3_ROOT; > Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; > ---------------------------------------; > Traceback (most recent call last):; > File ""<stdin>"", line 1, in <module>; > File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; > import Sofa.Helper; > ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')), '/System/Volumes/Preboot/Cryptexes/OS/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (no such file), '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')); > >>> ; > ```; > ; > **Env vars**; > ; > ```shell; > python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH -",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179:2062,plugin,plugins,2062,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179,1,['plugin'],['plugins']
Modifiability,"lassname only causing collision when two component have the same name/template. To avoid this, the PR add the plugin name as a prefix for the Factory'key. As an exemple, a component created with *<OglModel>* in the past is now referenced as *<SofaOpenglVisual.OglModel>*. Backward compatbility is possible by adding into the factory registration an alias mapping between ; new names and old name;; Eg:; ```; ""OglModel"" => ""SofaOpenglVisual.OglModel""; ```. 2) **Importing plugin and component *à la* python**; A new component called *FromComponent* is added to handle the loading of plugin and the import of object. . Examples of use:; ```; 	 # To make only <OglModel> accessible in the scene; 	<From plugin=""SofaOpenglVisual"" import=""OglModel""/>; 	<OglModel/>. 	# To add ""custom"" name in a scene ; 	<From plugin=""SofaOpenglVisual"" import=""OglModel"" as=""RenderingModel""/>; 	<RenderingModel/>. 	# To be a super lazy man and import everything; 	<From plugin=""SofaOpenglVisual"" import=""*""/>; ```. I didn't implemented multiple object imports so currently it is necessary to do ; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel""/>; <From plugin=""SofaOpenglVisual"" import=""GlslShader""/>; ```; But we could as in python with:; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel, GlslShader""/>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512:1423,plugin,plugin,1423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512,3,['plugin'],['plugin']
Modifiability,"lationTest.h (745 ms); PathResolver_test.cpp.o (740 ms); TetrahedronNumericalIntegration_test.cpp.o Sofa_test.h (734 ms); ... 62158 ms: sofa/SofaKernel/modules/SofaHelper/../SofaDefaultType/src/sofa/defaulttype/Vec.h (included 143 times, avg 434 ms), included via:; cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (936 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (850 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (831 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (825 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (806 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (792 ms); ... 54486 ms: /opt/Qt/5.15.0/gcc_64/include/QtWidgets/qwidget.h (included 94 times, avg 579 ms), included via:; QSofaStatWidget.h QLabel qlabel.h qframe.h (1332 ms); QTabulationModifyObject.h QWidget (1308 ms); VRender.h config.h QOpenGLWidget qopenglwidget.h QWidget (1240 ms); QSofaStatWidget.h QLabel qlabel.h qframe.h (1237 ms); mouseGrabber.h config.h QOpenGLWidget qopenglwidget.h QWidget (1159 ms); VRender.h config.h QOpenGLWidget qopenglwidget.h QWidget (1153 ms); ... 50534 ms: sofa/SofaKernel/modules/SofaHelper/src/sofa/helper/logging/Messaging.h (included 122 times, avg 414 ms), included via:; cmake_pch.hxx.json cmake_pch.hxx (1185 ms); cmake_pch.hxx.json cmake_pch.hxx (1155 ms); cmake_pch.hxx.json cmake_pch.hxx (1143 ms); cmake_pch.hxx.json cmake_pch.hxx (1029 ms); cmake_pch.hxx.json cmake_pch.hxx (1017 ms); cmake_pch.hxx.json cmake_pch.hxx (995 ms); ... 48975 ms: sofa/applications/plugins/SofaTest/../SofaTest/Sofa_test.h (included 83 times, avg 590 ms), included via:; VariationalSymplecticImplicitSolverNonLinearForceDynamic_test.cpp.o Elasticity_test_deprecated.h Elasticity_test.h (913 ms); TransformEngine_test.cpp.o (891 ms); SparseGridTopology_test.cpp.o (805 ms); TetrahedronNumericalIntegration_test.cpp.o (779 ms); AffineMovementConstraint_test.cpp.o Elasticity_test.h (767 ms); MeshROI_test.cpp.o (755 ms); ... 38428 m",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:31826,config,config,31826,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['config'],['config']
Modifiability,"ld/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9099,Plugin,PluginManager,9099,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,le_System.h; │   │   ├── Simulation; │   │   │   └── Submodule_Simulation_doc.h; │   │   └── Types; │   │   └── Binding_BoundingBox.h; │   ├── SofaBaseTopology; │   │   ├── Binding_RegularGridTopology_doc.h; │   │   ├── Binding_RegularGridTopology.h; │   │   ├── Binding_SparseGridTopology_doc.h; │   │   └── Binding_SparseGridTopology.h; │   ├── SofaDeformable; │   │   ├── Binding_LinearSpring_doc.h; │   │   ├── Binding_LinearSpring.h; │   │   ├── Binding_SpringForceField_doc.h; │   │   └── Binding_SpringForceField.h; │   ├── SofaGui; │   │   ├── Binding_BaseGui.h; │   │   └── Binding_GUIManager.h; │   ├── SofaRuntime; │   │   └── Timer; │   │   ├── Submodule_Timer_doc.h; │   │   └── Submodule_Timer.h; │   └── SofaTypes; │   ├── Binding_Mat.h; │   ├── Binding_Quat.h; │   └── Binding_Vec.h; ├── lib; │   ├── cmake; │   │   └── SofaPython3; │   │   ├── BindingsConfig.cmake; │   │   ├── BindingsTargets.cmake; │   │   ├── BindingsTargets-debug.cmake; │   │   ├── PluginConfig.cmake; │   │   ├── PluginTargets.cmake; │   │   ├── PluginTargets-debug.cmake; │   │   ├── SofaPython3Config.cmake; │   │   └── SofaPython3ConfigVersion.cmake; │   ├── libSofaPython3.so; │   └── python3; │   └── site-packages; │   ├── Sofa; │   │   ├── Components.cpython-39-x86_64-linux-gnu.so; │   │   ├── constants; │   │   │   ├── __init__.py; │   │   │   ├── KeyCode.py; │   │   │   └── Key.py; │   │   ├── Core.cpython-39-x86_64-linux-gnu.so; │   │   ├── Gui.cpython-39-x86_64-linux-gnu.so; │   │   ├── Helper.cpython-39-x86_64-linux-gnu.so; │   │   ├── __init__.py; │   │   ├── livecoding.py; │   │   ├── prefab.py; │   │   ├── PyTypes; │   │   │   ├── __init__.py; │   │   │   ├── RGBAColor.py; │   │   │   └── Vec3.py; │   │   ├── Simulation.cpython-39-x86_64-linux-gnu.so; │   │   ├── SofaBaseTopology.cpython-39-x86_64-linux-gnu.so; │   │   ├── SofaDeformable.cpython-39-x86_64-linux-gnu.so; │   │   ├── test.py; │   │   └── Types.cpython-39-x86_64-linux-gnu.so; │   ├── SofaRuntime; │   │   ├── __init__.p,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-756112592:4296,Plugin,PluginTargets,4296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-756112592,1,['Plugin'],['PluginTargets']
Modifiability,"lection SofaDenseSolver; Adding collection SofaNonUniformFem; Adding collection SofaOpenglVisual; Adding collection SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configur",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8320,Config,Config,8320,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815,1,['Config'],['Config']
Modifiability,lex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificatio,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:2078,Plugin,PluginManager,2078,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,lex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; So,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:2325,Plugin,PluginManager,2325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,lex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:2448,Plugin,PluginManager,2448,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,lib; 0x10834c000 - 0x1083dbfff +libSofaGeneralSimpleFem.20.12.01.dylib (0) <4787B69F-1093-3E5B-8414-BE5EA23432F5> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.20.12.01.dylib; 0x108544000 - 0x10859ffff +libSofaSimpleFem.20.12.01.dylib (0) <39F60B90-A0EE-3992-9391-A0CF20CB95DE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaSimpleFem/lib/libSofaSimpleFem.20.12.01.dylib; 0x10862d000 - 0x10868cfff +libSofaBaseVisual.20.12.01.dylib (0) <3FF1BCE6-2796-3533-B23D-8440A29E1F9E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseVisual.20.12.01.dylib; 0x10873d000 - 0x10879cfff +libSofaMiscForceField.20.12.01.dylib (0) <DFAD70EA-9BF9-3F8F-9767-866C72E011B4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscForceField/lib/libSofaMiscForceField.20.12.01.dylib; 0x108863000 - 0x108b0efff +libSofaBoundaryCondition.20.12.01.dylib (0) <D5451810-3AED-3A0F-8AE8-3D042D7B6DA2> /Applications/runSofa.app/Contents/MacOS/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.20.12.01.dylib; 0x1090ef000 - 0x109112fff +libSofaMiscTopology.20.12.01.dylib (0) <8E135C36-4169-3687-92F7-BFD9FA319BA4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscTopology/lib/libSofaMiscTopology.20.12.01.dylib; 0x109144000 - 0x10916ffff +libSofaGeneralTopology.20.12.01.dylib (0) <DD8C86BC-EB7F-36EA-B833-B26EA0032E54> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.20.12.01.dylib; 0x1091d7000 - 0x1092adfff +org.qt-project.QtCharts (5.12 - 5.12.6) <01C0EF28-7969-3700-8E90-CE4CC9C4CBA5> /Applications/runSofa.app/Contents/Frameworks/QtCharts.framework/Versions/5/QtCharts; 0x109358000 - 0x109384fff +org.qt-project.QtWebEngine (5.12 - 5.12.6) <AD3B4770-81C6-3308-8F28-3DAB15DC68F1> /Applications/runSofa.app/Contents/Frameworks/QtWebEngine.framework/Versions/5/QtWebEngine; 0x1093ba000 - 0x1093d9fff +org.qt-project.QtWebEngineWidgets (5.12 - 5.12.6) <C415A86C-6293-326D-AE05-0FD9087D5FD9> /Appl,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:4948,plugin,plugins,4948,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['plugins']
Modifiability,"libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugin ""wayland"" in """". (process:29694): Gtk-WARNING **: 22:14:09.328: Locale not supported by C library.; 	Using the fallback 'C' locale.; Gtk-Message: 22:14:09.408: Failed to load module ""canberra-gtk-module""; Gtk-Message: 22:14:09.409: Failed to load module ""canberra-gtk-module""; [INFO] [SofaPluginManager] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFor",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:12458,plugin,plugin,12458,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['plugin'],['plugin']
Modifiability,"lines, I wont share if not needed. . ```FAILED: bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o; /usr/bin/c++ -DBOOST_ALL_NO_LIB -DBOOST_FILESYSTEM_DYN_LINK -DBOOST_PROGRAM_OPTIONS_DYN_LINK -DBOOST_SYSTEM_DYN_LINK -DBOOST_THREAD_DYN_LINK -DBindings_SofaRuntime_EXPORTS -DNDEBUG -DSOFA_HAVE_SOFAPYTHON3 -I/mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/SofaRuntime/src -I/mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/Plugin/src -I/mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/Sofa/src -isystem /usr/include/python3.8 -isystem /usr/local/include/SofaSimulation -isystem /usr/local/include/SofaFramework -isystem /usr/local/include/extlibs/json -isystem /usr/local/include/eigen3 -isystem /usr/local/include/SofaBase -fPIC -fvisibility=hidden -std=c++17 -flto -fno-fat-lto-objects -Dregister= -fvisibility=hidden -std=c++17 -MD -MT bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o -MF bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o.d -o bindings/SofaRuntime/CMakeFiles/Bindings.SofaRuntime.dir/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp.o -c /mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/SofaRuntime/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp; In file included from /usr/local/include/SofaFramework/sofa/simulation/Node.h:59,; from /usr/local/include/SofaFramework/sofa/simulation/Simulation.h:25,; from /usr/local/include/SofaFramework/sofa/helper/AdvancedTimer.h:25,; from /mnt/D/jjcasmar/libs/srcs/plugin.SofaPython3/bindings/SofaRuntime/src/SofaPython3/SofaRuntime/Timer/Submodule_Timer.cpp:28:; /usr/local/include/SofaFramework/sofa/simulation/MutationListener.h:37:32: error: variable ‘sofa::simulation::SOFA_SIMULATION_CORE_API sofa::simulation::MutationListener’ has initializer but incomplete type; 37 | class SOFA_SIMULATION_CORE_API MutationListener; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1429:1420,plugin,plugin,1420,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1429,3,"['plugin', 'variab']","['plugin', 'variable']"
Modifiability,"lision.Geometry"", # [LineCollisionModel, PointCollisionModel, TriangleCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.Engine.Select"", # [BoxROI]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.MechanicalLoad"", # [PlaneForceField]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.FEM.Elastic"", # [FastTetrahedralCorotationalForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [HexahedronSetTopologyContainer, HexahedronSetTopologyModifier, TetraheopologyModifier]; ""Sofa.Component.Topology.Container.Grid"", # [RegularGridTopology]; ""Sofa.Component.Topology.Mapping"", # [Hexa2TetraTopologicalMapping, Quad2TriangleTopologicalMapping]; ""Sofa.Component.Visual"", # [VisualStyle]; ""Sofa.GL.Component.Rendering3D"", # [OglModel]; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""DefaultAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showBehaviorModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""DefaultContactManager"", response=""PenalityContactForceField""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=3.0,; contactDistance=1.1,; ). root_node.gravity = [0.0, -98.1, 0.0]. scene_node = root_node.addChild(""scene""). ###################; # Topology Creation; ###################; topology_node = scene_node.addChild(""topologies""); grid_node = topology_node.addChild(""grid""); grid = grid_node.addObject(""RegularGridTopology"", nx=12, ny=20, nz=2, xmin=-30.0, xmax",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3202:2012,Plugin,Plugins,2012,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3202,1,['Plugin'],['Plugins']
Modifiability,ll file is not there. but it is there in the bin and could not add to the plugin manager. So my questions are as follows.; (1)I want to know whether do I have to change any configuration to avoid deprecation warning messages?; (2) loading the sofaphython to runSofa application ; My Cmake out put is as follows. Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19041.; Install prefix: C:/SOFA/build/master/install; Adding module SofaGeneralVisual; Adding module SofaGraphComponent; Adding module SofaGeneralMeshCollision; Adding module SofaBoundaryCondition; Adding module SofaGeneralAnimationLoop; Adding module SofaGeneralDeformable; Adding module SofaGeneralEngine; Adding module SofaGeneralExplicitOdeSolver; Adding module SofaGeneralImplicitOdeSolver; Adding module SofaGeneralLinearSolver; Adding module SofaGeneralRigid; Adding module SofaGeneralObjectInteraction; Adding module SofaGeneralSimpleFem; Adding module SofaGeneralTopology; Adding module SofaTopologyMapping; Adding module SofaUserInteraction; Adding module SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding module SofaPreconditioner; Adding module SofaHaptics; Adding module SofaValidation; Adding module SofaDenseSolver; Adding module SofaNonUniformFem; Adding module SofaOpenglVisual; Adding module SofaMiscTopology; Adding module SofaMiscExtra; Adding module SofaMiscForceField; Adding module SofaMiscEngine; Adding module SofaMiscSolver; Adding module SofaMiscFem; Adding module SofaMiscMapping; Adding plugin SofaPython; Adding module SofaExporter; CMake Deprecation Warning at SofaAdvanced/CMakeLists.txt:15 (message):; SofaAdvanced is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaNonUniformFem. CMake Deprecation Warning at SofaMisc/CMakeLists.txt:21 (message):; SofaMisc is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaMi,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1623:2507,plugin,plugin,2507,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1623,1,['plugin'],['plugin']
Modifiability,"ll/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [WARNING] [ObjectFactory] Class already registered: CompareState; [WARNING] [ObjectFactory] Class already registered: CompareTopology; [WARNING] [ObjectFactory] Class already registered: DataController; [WARNING] [ObjectFactory] Class already registered: DataMonitor; [WARNING] [ObjectFactory] Class already registered: DevAngleCollisionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DevMonitorManager; [WARNING] [ObjectFactory] Class already registered: DevTensionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: EvalPointsDistance<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: EvalPointsDistance<Vec3d>; [WARNING] [ObjectFactory] Class already registered: EvalSurfaceDistance<Vec3d>; [WARNING] [ObjectFactory] Default template for class ExtraMonitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec6d>; [WARNING] [ObjectFactory] Default template for class Monitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: Monitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec6d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:31737,Plugin,PluginManager,31737,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,llableReturnedFromNonnull](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-nullability.NullableReturnedFromNonnull.html) | [modernize-loop-convert](https://clang.llvm.org/extra/clang-tidy/checks/modernize-loop-convert.html) |; | [clang-analyzer-optin.cplusplus.VirtualCall](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.cplusplus.VirtualCall.html) | [modernize-make-shared](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-shared.html) |; | [clang-analyzer-optin.mpi.MPI-Checker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.mpi.MPI-Checker.html) | [modernize-make-unique](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-unique.html) |; | [clang-analyzer-optin.performance.Padding](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.performance.Padding.html) | [modernize-pass-by-value](https://clang.llvm.org/extra/clang-tidy/checks/modernize-pass-by-value.html) |; | [clang-analyzer-optin.portability.UnixAPI](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.portability.UnixAPI.html) | [modernize-raw-string-literal](https://clang.llvm.org/extra/clang-tidy/checks/modernize-raw-string-literal.html) |; | [clang-analyzer-security.FloatLoopCounter](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.FloatLoopCounter.html) | [modernize-redundant-void-arg](https://clang.llvm.org/extra/clang-tidy/checks/modernize-redundant-void-arg.html) |; | [clang-analyzer-security.insecureAPI.UncheckedReturn](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.UncheckedReturn.html) | [modernize-replace-auto-ptr](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-auto-ptr.html) |; | [clang-analyzer-security.insecureAPI.getpw](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.getpw.html) | [modernize-replace-random-shuffle](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replac,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:15507,portab,portability,15507,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['portab'],['portability']
Modifiability,llision.20.12.01.dylib (0) <BFA69B16-EFE2-3F2D-843D-38EA209DB60B> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.20.12.01.dylib; 0x1081d4000 - 0x1081f7fff +libSofaGeneralVisual.20.12.01.dylib (0) <2801711D-11F2-342D-9659-A6760DB8B489> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.20.12.01.dylib; 0x108235000 - 0x1082a8fff +libSofaTopologyMapping.20.12.01.dylib (0) <25291751-E35F-3A44-B167-CB54D1C86B40> /Applications/runSofa.app/Contents/MacOS/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.20.12.01.dylib; 0x10834c000 - 0x1083dbfff +libSofaGeneralSimpleFem.20.12.01.dylib (0) <4787B69F-1093-3E5B-8414-BE5EA23432F5> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.20.12.01.dylib; 0x108544000 - 0x10859ffff +libSofaSimpleFem.20.12.01.dylib (0) <39F60B90-A0EE-3992-9391-A0CF20CB95DE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaSimpleFem/lib/libSofaSimpleFem.20.12.01.dylib; 0x10862d000 - 0x10868cfff +libSofaBaseVisual.20.12.01.dylib (0) <3FF1BCE6-2796-3533-B23D-8440A29E1F9E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseVisual.20.12.01.dylib; 0x10873d000 - 0x10879cfff +libSofaMiscForceField.20.12.01.dylib (0) <DFAD70EA-9BF9-3F8F-9767-866C72E011B4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscForceField/lib/libSofaMiscForceField.20.12.01.dylib; 0x108863000 - 0x108b0efff +libSofaBoundaryCondition.20.12.01.dylib (0) <D5451810-3AED-3A0F-8AE8-3D042D7B6DA2> /Applications/runSofa.app/Contents/MacOS/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.20.12.01.dylib; 0x1090ef000 - 0x109112fff +libSofaMiscTopology.20.12.01.dylib (0) <8E135C36-4169-3687-92F7-BFD9FA319BA4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMiscTopology/lib/libSofaMiscTopology.20.12.01.dylib; 0x109144000 - 0x10916ffff +libSofaGeneralTopology.20.12.01.dylib (0) <DD8C86BC-EB7F-36EA-B833-B26EA0032E54> /Applicat,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:4339,plugin,plugins,4339,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['plugins']
Modifiability,lp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-s,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:8280,Plugin,PluginManager,8280,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"lugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load:",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3789,Plugin,Plugin,3789,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,lugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:4865,Plugin,PluginManager,4865,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,lugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEx,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7790,Plugin,PluginManager,7790,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"lugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8400,Plugin,PluginManager,8400,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,luginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:2891,Plugin,PluginManager,2891,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"lugins WITHOUT moving the actual source files; 2. Document the proposed new directory hierarchy, propose it and wait for feedback from enough community members; 3. Once there is an agreement on the hierarchy, apply it via a commit that does not change anything else (changes in cmake scripts should be done as a separate commit, to ease solving later merge/conflict issues). And regarding point 2, instead of moving everything in `applications/plugins` that is only there because of a bad decision 10 years ago (it was simpler as we had to release the main directories as separate archives for licensing reason so we packed the couple of plugins we had together with the executables), I would propose to use the following:; - _Sofa root directory_; - SofaPlugins; - SofaMiscForceField; _..._; - SofaPluginsDeprecated; - SofaVRPNClient _any plugin we no longer support but still keep around if someone else want to pick it up_; - SofaPluginsGPL; - SceneCreator; - SofaPML; ... _any plugins with a GPL licence_; - SofaPlugins(.*) _any other licences or additional private ones in other repos_. Note: as an alternative, for the libs that are currently modules, instead of moving to a generic uninformative ""SofaPlugins"" directory, we could instead move them to the SofaGeneral/SofaAdvanced/SofaMisc directory that already exists and host their main cmake file. 4 advantages to this instead of everything is `applications/plugins`:; 1. one less directory to browse to in order to get to the actual source files; 2. it discourage any assumption that all plugins are/must be in the same directory; 3. clear separation of the different licences, so that we can be sure that a LGPL-only app does not actually include GPL-licenced headers (because of the useful convention to include plugins/lib classes with `MyPlugin/MyClass.h`, all codes must be compiled with options to add to the compiler path the parent of a plugin directory, currently because it is the same parent as plugins with different licences i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/482:2447,plugin,plugins,2447,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/482,1,['plugin'],['plugins']
Modifiability,"lugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugin ""wayland"" in """". (process:29694): Gtk-WARNING **: 22:14:09.328: Locale not supported by C library.; 	Using the fallback 'C' locale.; Gtk-Message: 22:14:09.408: Failed to load module ""canberra-gtk-module""; Gtk-Message: 22:14:09.409: Failed to load module ""canberra-gtk-module""; [INFO] [SofaPluginManager] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::Compatibility",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:12125,plugin,plugin,12125,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['plugin'],['plugin']
Modifiability,"m/spreadsheets/d/1dxP7Rsyl1oCr0lfTwQESeeZQTt315CIFih5QpJp5OZY/edit?usp=sharing. ## Clean dependency management in CMakeLists; - SofaFramework; - Moved to SofaHelper: Boost, OpenGL, GLEW, GTest, Eigen, JSON, FFMPEG_exec ; - Removed (not needed by any SofaFramework module): TinyXML, ZLIB ; - SofaMisc; - Added to SofaMiscTopology: ZLIB; - Added to SofaMiscFem: Newmat; - SofaGeneral; - Added to SofaDenseSolver: Newmat; - Added to SofaGeneralLoader: ZLIB; - SofaGui; - Moved to SofaGuiQt: Qt + lots of options about QtViewer, QGLViewer, VSync, ...; - Modularized modules (oh yeah); - SofaPreconditioner: removed Newmat, added SofaSparseSolver; - SofaExporter: added ZLIB; - Plugins; - SofaMiscCollision: added SofaDistanceGrid; - SofaImplicitField: added SofaPython; - Registration: removed SofaOpenglVisual; - image: added ZLIB; - Flexible: added SofaPython. ## Rework all YYY_HAVE_XXX variables to reduce their scope. This is important for future global modularization of SOFA. - Variables are now named upon their module. . - Whenever you need to use the YYY_HAVE_XXX of another module, you surely should declare your own MYMODULE_HAVE_XXX instead. - All those new YYY_HAVE_XXX variables are booleans, so they can be used in CMake with `if(YYY_HAVE_XXX)` and in C++ (if correcly propagated via a config.h.in file) with `#if YYY_HAVE_XX` or `if(YYY_HAVE_XXX)`. - Add sofa_find_package and sofa_set_bool macros to auto create YYY_HAVE_XXX variables. - Edit sofa_install_targets to call `configure_file()` on any *.h.in found in target sources (the sources that are given to `add_library()`). :warning: Here is a quick tuto about [how to correctly add and propagate a dependency](https://gist.github.com/guparan/0b0ed00ad60b740f85b794cdff255229). ## Rework #1121 to avoid nested projects. - Use SOFA_NO_OPENGL to build an OpenGL-free version of SofaGuiQt. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1137:1132,Variab,Variables,1132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1137,1,['Variab'],['Variables']
Modifiability,"main directories as separate archives for licensing reason so we packed the couple of plugins we had together with the executables), I would propose to use the following:; - _Sofa root directory_; - SofaPlugins; - SofaMiscForceField; _..._; - SofaPluginsDeprecated; - SofaVRPNClient _any plugin we no longer support but still keep around if someone else want to pick it up_; - SofaPluginsGPL; - SceneCreator; - SofaPML; ... _any plugins with a GPL licence_; - SofaPlugins(.*) _any other licences or additional private ones in other repos_. Note: as an alternative, for the libs that are currently modules, instead of moving to a generic uninformative ""SofaPlugins"" directory, we could instead move them to the SofaGeneral/SofaAdvanced/SofaMisc directory that already exists and host their main cmake file. 4 advantages to this instead of everything is `applications/plugins`:; 1. one less directory to browse to in order to get to the actual source files; 2. it discourage any assumption that all plugins are/must be in the same directory; 3. clear separation of the different licences, so that we can be sure that a LGPL-only app does not actually include GPL-licenced headers (because of the useful convention to include plugins/lib classes with `MyPlugin/MyClass.h`, all codes must be compiled with options to add to the compiler path the parent of a plugin directory, currently because it is the same parent as plugins with different licences it is difficult to be sure unwanted code is not included); 4. it fits with the way of organizing all codes around collections of libraries, which was the original intent behind Helper/Core/DefaultType within SofaFramework, Simulation* within SofaSimulation, Base* within SofaBase, ..., but which unfortunately was not agreed to with everyone so stuck in years-long discussions and is now broken by adding a ""SofaKernel"" level. As a reminder of the key points of this way of organizing codes, the idea was to make it consistent where the code/targets are",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/482:3015,plugin,plugins,3015,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/482,1,['plugin'],['plugins']
Modifiability,"miniFlowVR, an extlib of Sofa, is used for ; - managing a file format for DistanceGrid (component of plugin SofaDistanceGrid); - as a dependency for meshconv, a commandline utility for meshes and used mainly to create the previous file format for DistanceGrid. So as it seems all was related to DistanceGrid:; - miniFlowVR was moved into SofaDistanceGrid (and thus depolluting the main tree of Sofa with the extlib thing); - as a small consequence, move meshconv into SofaDistanceGrid. It is deemed OK as:; - it seems not a lof of people uses meshconv as it is (I remember fixing the compilation ages ago and nobody said anything). Moreover, even its CMakefile was quite ill-formed. ; - meshconv was originally a part of FlowVR itself apparently, so it makes sense to regroup of all of these codes. Additionnally, SofaDistanceGrid was cleanup (reorganizing files like the template, cleaner CMake etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1616:101,plugin,plugin,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1616,1,['plugin'],['plugin']
Modifiability,"mmand in the python script the interpreter loads the library (SofaPython.so). If the script explicitly calls the `Sofa.loadPlugin(""SofaPython"")` command, Sofa's PluginManager will load again the same library. Example of a faulty script:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and a",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:3434,plugin,plugin,3434,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['plugin'],['plugin']
Modifiability,"mplate='Rigid3d'). xtip=[1, 0, 0]; instruments=['guide']; step=0.5; listening=True; startingPos=[0, 0, 0, 1, 0, 0, 0]; rotationInstrument=[0, 0, 0]; speed=0; controlledInstrument=0; InstrumentCombined = root.addChild('InstrumentCombined'); InstrumentCombined.addObject('EulerImplicitSolver', rayleighStiffness=0.2, ; printLog=False, rayleighMass=0.1); InstrumentCombined.addObject('BTDLinearSolver', verification=False, ; subpartSolve=False, verbose=False); InstrumentCombined.addObject('RegularGridTopology', name='meshLinesCombined', ; zmax=1, zmin=1, nx=60, ny=1, nz=1, ; xmax=1.0, xmin=0.0, ymin=0, ymax=0); InstrumentCombined.addObject('MechanicalObject', showIndices=False, name='DOFs', template='Rigid3d', ry=-90); for i in range(len(instruments)):; InstrumentCombined.addObject('WireBeamInterpolation', WireRestShape='@../topoLines_'+instruments[i]+'/'+instruments[i]+'RestShape', ; radius=0.15, printLog=False, name='Interpol'+instruments[i]); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass', massDensity=0.00000155, ; name=instruments[i]+'ForceField', interpolation='@Interpol'+instruments[i]); InstrumentCombined.addObject('InterventionalRadiologyController', xtip=xtip, name='m_ircontroller', ; instruments=['Interpol'+instruments[i] for i in range(len(instruments))], ; step=step, printLog=True, ; listening=listening, template='Rigid3d', startingPos=startingPos, ; rotationInstrument=rotationInstrument, speed=speed, ; controlledInstrument=controlledInstrument); InstrumentCombined.addObject('LinearSolverConstraintCorrection', wire_optimization='true', printLog=False); InstrumentCombined.addObject('FixedConstraint', indices=0, name='FixedConstraint'); InstrumentCombined.addObject('RestShapeSpringsForceField', points='@m_ircontroller.indexFirstNode', ; angularStiffness=1e8, stiffness=1e8); # Collision model; Collis = InstrumentCombined.addChild('Collis'); #Collis.activated = 'true'; Collis.addObject('EdgeSetTopologyContainer', name='collisEdgeSet'); Collis.addObject",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4636:14808,Adapt,AdaptiveBeamForceFieldAndMass,14808,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4636,1,['Adapt'],['AdaptiveBeamForceFieldAndMass']
Modifiability,"mples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: JointSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid2d,Vec2d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: RigidRigidMapping<Rigid3d,Rigid3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [WARNING] [ObjectFactory] Class already registered: AngularSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class a",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:9251,plugin,plugin,9251,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['plugin'],['plugin']
Modifiability,mponent.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:1444,Plugin,PluginManager,1444,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,mponent.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plu,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:4354,Plugin,PluginManager,4354,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"mponent.Rendering3D"",; ""Sofa.GUI.Component"",; ""Sofa.Component.Constraint.Projective"",; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ""Sofa.Component.Collision.Response.Contact"",; ""Sofa.Component.Setting"",; ""Sofa.Component.AnimationLoop"",; ""Sofa.Component.Collision.Geometry"",; ""Sofa.Component.Constraint.Lagrangian.Correction"",; ""Sofa.Component.LinearSolver.Iterative"",; ""Sofa.Component.Constraint.Lagrangian.Solver"",; ""Sofa.Component.Topology.Container.Constant""]. rootNode.findData('gravity').value=[0,0,-10];; rootNode.findData('dt').value=0.01; ; # Plugin loading; rootNode.addObject('RequiredPlugin', pluginName=pluginNameList, ; printLog='0'). # Rootnode attributes; rootNode.addObject('FreeMotionAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('GenericConstraintSolver', maxIterations='2000', tolerance='1e-9') ; rootNode.addObject('BackgroundSetting', color='0 0.168627 0.211765'). # Scene settings; confignode = rootNode.addChild(""Config""); confignode.addObject(""OglGrid"", nbSubdiv=10, size=1000); confignode.addObject('OglSceneFrame', style=""Arrows"", ; alignment=""TopRight""). # Collision component; rootNode.addObject('DefaultPipeline'); rootNode.addObject('BruteForceBroadPhase'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance', name='Proximity', alarmDistance=""1"", contactDistance=""0.5""); rootNode.addObject('DefaultContactManager', name=""Response"", response=""PenalityContactForceField""). ; # Membrane; membrane=rootNode.addChild(""Membrane""). membrane.addObject(""EulerImplicitSolver""); membrane.addObject(""CGLinearSolver"", iterations='2000', tolerance='1e-9', threshold='1e-9'). membrane.addObject('MeshGmshLoader', name='membraneCoarse', ; filename='FossaOvalisV2.msh'); ; membrane.addObject('TetrahedronSetTopologyContainer', ; name='membraneTopo', src='@membraneCoarse'); membrane.addObject('TetrahedronSetTopologyModifier'); membrane.addObject('TetrahedronSetGeomet",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3810:1984,config,confignode,1984,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3810,1,['config'],['confignode']
Modifiability,mponent.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/li,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:3526,Plugin,PluginManager,3526,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,mponent.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/h,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:3872,Plugin,PluginManager,3872,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"mport Sofa.Core. PLUGINS = [; ""Sofa.Component.AnimationLoop"",; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ""Sofa.Component.Collision.Response.Contact"",; ""Sofa.Component.Constraint.Lagrangian.Solver"",; ""Sofa.Component.Visual"",; ""Sofa.Component.Collision.Geometry"",; ""Sofa.Component.Constraint.Projective"",; ""Sofa.Component.LinearSolver.Iterative"",; ""Sofa.Component.Mapping.NonLinear"",; ""Sofa.Component.Mass"",; ""Sofa.Component.ODESolver.Backward"",; ""Sofa.Component.StateContainer"",; ""Sofa.GL.Component.Rendering3D"",; ""Sofa.Component.Constraint.Lagrangian.Correction"",; ""Sofa.Component.Topology.Container.Dynamic"",; ""MultiThreading"",; ""Sofa.Component.SolidMechanics.FEM.NonUniform"",; ""Sofa.Component.Topology.Container.Grid"",; ""Sofa.Component.IO.Mesh"",; ""Sofa.Component.LinearSolver.Direct"",; ""Sofa.Component.Mapping.Linear"",; ""Sofa.Component.Topology.Container.Constant"",; ]. def createScene(root: Sofa.Core.Node):. plugin_set = set(PLUGINS); for plugin in plugin_set:; root.addObject(""RequiredPlugin"", name=plugin). root.gravity = [0.0, 0.0, -9.81]; root.dt = 0.02. root.addObject(""FreeMotionAnimationLoop""); root.addObject(; ""VisualStyle"",; displayFlags=[; ""showVisual"",; ""showForceFields"",; ""showBehaviorModels"",; ],; ). root.addObject(""CollisionPipeline"", depth=6, verbose=False, draw=False); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""MinProximityIntersection"", name=""Proximity"", alarmDistance=0.5, contactDistance=0.3); root.addObject(""CollisionResponse"", response=""FrictionContactConstraint""); root.addObject(""GenericConstraintSolver""). scene_node = root.addChild(""scene""). composite_node = scene_node.addChild(""composite""). mesh_files = [; ""mesh/liver.obj"",; ]. composite_node.addObject(; ""SparseGridMultipleTopology"",; n=[6, 6, 6],; fileTopology=mesh_files[0],; fileTopologies=mesh_files,; nbVirtualFinerLevels=2,; finestConnectivity=False,; stiffnessCoefs=[1] * len(mesh_files),; massCoef",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838:8811,PLUGIN,PLUGINS,8811,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838,2,"['PLUGIN', 'plugin']","['PLUGINS', 'plugin']"
Modifiability,"n A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; https://github.com/sofa-framework/sofa/blob/1e0df59953a085785a45bf97e182e01efea0c354/Sofa/framework/Helper/src/sofa/helper/system/DynamicLibrary.cpp#L78; would fix the bug, but it is still showing the ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4462:1241,Plugin,PluginManager,1241,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462,1,['Plugin'],['PluginManager']
Modifiability,"n failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help me！. Thanks so much！",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2831,Plugin,Plugin,2831,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,4,"['Plugin', 'plugin']","['Plugin', 'plugin', 'plugins']"
Modifiability,"n issue (I think) is integrating the several repositories in a single continuous integration platform, not a big deal, but it has to be done . thomas . ----- Mail original -----. > De: ""hdeling"" notifications@github.com; > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > Cc: ""thomas-lemaire"" thomas.lemaire@inria.fr, ""Comment""; > comment@noreply.github.com; > Envoyé: Mercredi 5 Octobre 2016 17:52:58; > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > ; > OK I agree that this allows to compile Flexible without the SOFA-HighOrder.; > ; > Before moving SOFA-HighOrder to the gitHub repo, do any of you know if; > there are plans to move those plugins outside of github ?; > ; > My understanding is that at some point SOFA was going to be cut into; > several pieces that could be optionally compiled.; > ; > Is this still on the radar ?; > ; > Hervé; > ; > Le 05/10/2016 à 15:27, thomas-lemaire a écrit :; > ; > > yet an other option is to conditionnaly compile HighOrderTopology code; > > in Flexible based on whether the HighOrderTopology plugin is existing; > > or not (in cmakelists package_require(HighOrderTopology) if; > > (HighOrderTopology_FOUND) ... ):; > > - each plugin can live in its own repository; > > - no need for a third plugin; > > - should work whether all the plugins are compiled in the same cmake; > > build project or are compiled/installed separately (well; > > HighOrderTopology must be available when compiling Flexible); > > ; > > thomas; > > ; > > ----- Mail original -----; > > ; > > > De: ""Matthieu Nesme"" notifications@github.com; > > > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > > > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > > > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > > > ; > > > Hi Hervé,; > > > ; > > > In general, I think it is a good idea to have a repo per plugin,; > > > even if it; > > > becomes more difficult to update them when the sofa core is modified.; > > > But in this specific case, it woul",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251917225:1180,Flexible,Flexible,1180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251917225,2,"['Flexible', 'plugin']","['Flexible', 'plugin']"
Modifiability,n successful to build with the following versions of dependencies.; **Environment:**; Visual Studio 2017 vc 14.1; Sofa Master: commit 9d9100aa1b0acb9363c8ec7c9b5e4b470821bfc1; Boost: 1.71.0; CGAL: CGAL-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the gl,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1341,Plugin,PluginManager,1341,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"n.dll` are both in the same directory; - the `../lib` directory for other platforms like linux, where the plugins are usually stored in a `lib` sub folder of the parent directory where the application reside. For example from the directory where the `runSofa` executable is, you can look for the directory where `SofaPython.lib` is located by doing `cd ../lib`. These paths are relative and are compatible both with a build tree and an install tree. Prior to f93e2b9 the PluginRepository was empty by default, leaving all the executables the responsibility to fill it with these values. Behavior which was changed multiple times compared to ca0402d for a reason yet to be explained. The side effect this change introduced was the requirement to have every unit test executable which attempts to load a plugin to explicitly fill the PluginRepository with the paths where the libraries are located with respect to the executable. This requirement was covered by having most of the unit tests depend on SofaGTest which initialize these default paths for you, so that test scenes that use a ` RequiredPlugin` component do not utterly fail. ; Unless a **valid** argument is raised, the aforementioned paths should be the default ones to use to initialize the `PluginRepository` global object. ; I strongly believe that would these paths have been properly restored by f93e2b9 (my bad), this PR would have never existed on the first place. I mean how much time has been lost already in fixes, and discussions because of this ! Just to in the end roll back to the implementation that was done 5 years ago which was **just working**. The other thing I mentionned in the comment https://github.com/sofa-framework/sofa/pull/502#issuecomment-340518769 is that there should be only one place to store the paths for possible plugin locations so either the method `Utils::getPluginDirectory()` should use internally of the `PluginRepository` global object, or the method should be removed entirely for consistency.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/502#issuecomment-342557659:1584,Plugin,PluginRepository,1584,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/502#issuecomment-342557659,3,"['Plugin', 'plugin']","['PluginRepository', 'plugin']"
Modifiability,n/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPlugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:8308,Plugin,PluginManager,8308,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,n6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [Plugin,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:6107,Plugin,PluginManager,6107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,n: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] L,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6960,Plugin,PluginManager,6960,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,n: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2789,Plugin,PluginManager,2789,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"n: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning:",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8930,Plugin,PluginManager,8930,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,4,"['Plugin', 'plugin']","['Plugin', 'PluginManager', 'plugin']"
Modifiability,"nConstraint doesn't work for me anymore when I upgraded to sofa v21.06. **Steps to reproduce**; v21.06 builds well on my pc.; In the demo/caduceus.scn I set the Mouse left button to “attach object using Bilateral constraint” but I can not grasp the snake using the mouse. (see screenshot attached); ![bilateral_notworking_snake](https://user-images.githubusercontent.com/14253725/142281753-285ebe01-e481-4f43-87d7-51e181d3368e.png). Another example is in my scene i attached the gallbladder model to the fatty tissue behind it using Bilateral constraint, i checked the rendering interactions, which visualize the Bilateral constraint contact pairs using Pink dots. Based on the screenshot, the contact points are correctly visualized but they can still move apart as if no constraints at all. (see screenshot attached). ![bilateral_notworking](https://user-images.githubusercontent.com/14253725/142281781-13222f7d-7843-4a38-b7c2-9e93a40dc6a9.png). **Expected behavior**; In our plugins we have used the following to establish the bilaterial constraints.; _sofa::component::constraintset::BilateralInteractionConstraint<DataTypes>::SPtr ; toolState.m_constraints->addContact(c.normal, c.point[0], c.point[1], distance, index1, index2, c.point[0], c.point[1], 1, c.id);_. The same codes and scene files worked well in sofa **v19.12**, where the bilateral constraints worked as constraining the distances between the contact pairs. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: branch v21.06.00; - State: Build directory. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\nt",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486:1027,plugin,plugins,1027,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486,1,['plugin'],['plugins']
Modifiability,"nManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n p",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:8838,Plugin,PluginManager,8838,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,nManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.C,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:9102,Plugin,PluginManager,9102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,nSetting; [WARNING] [ObjectFactory] Class already registered: AttachBodyButtonSetting; [WARNING] [ObjectFactory] Class already registered: FixPickedParticleButtonSetting; [WARNING] [ObjectFactory] Class already registered: Gravity; [WARNING] [ObjectFactory] Class already registered: PauseAnimationOnEvent; [WARNING] [ObjectFactory] Class already registered: SofaDefaultPathSetting; [WARNING] [ObjectFactory] Class already registered: StatsSetting; [WARNING] [ObjectFactory] Class already registered: ViewerSetting; [WARNING] [ObjectFactory] Class already registered: APIVersion; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [WARNING] [ObjectFactory] Class already registered: DirectSAP; [WARNING] [ObjectFactory] Class already registered: DirectSAPNarrowPhase; [WARNING] [ObjectFactory] Class already registered: IncrSAP; [WARNING] [ObjectFactory] Class already registered: RayTraceNarrowPhase; [WARNING] [ObjectFactory] Class already registered: TriangleOctreeModel; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [WARNING] [ObjectFactory] Class already registered: AffineMovementConstraint<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: AffineMovementConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ConicalForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ConstantForceField<Rigid2d>; [WARNING] [ObjectFactory] Class already registered: ConstantForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: ConstantForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: ConstantForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ConstantForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ConstantForceField<Vec6d>; [WARNING,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:14853,Plugin,PluginManager,14853,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"nabled.; Headers from v20.12 are usable, but it is advised to change your code to use the new headers introduced in v21.06.; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") ; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") found components: filesystem thread chrono atomic ; Adding module Sofa.GL; Adding plugin SofaSimpleFem; Adding plugin SofaRigid; Adding plugin SofaDeformable; Adding plugin SofaObjectInteraction; Adding plugin SofaMeshCollision; Adding plugin SofaEngine; Adding plugin SofaExplicitOdeSolver; Adding plugin SofaImplicitOdeSolver; Adding plugin SofaLoader; Adding plugin SofaGeneralVisual; Adding plugin SofaGraphComponent; Adding plugin SofaGeneralMeshCollision; Adding plugin SofaBoundaryCondition; Adding plugin SofaGeneralAnimationLoop; Adding plugin SofaGeneralDeformable; Adding plugin SofaGeneralEngine; Adding plugin SofaGeneralExplicitOdeSolver; Adding plugin SofaGeneralImplicitOdeSolver; Adding plugin SofaGeneralLinearSolver; Adding plugin SofaGeneralRigid; Adding plugin SofaGeneralObjectInteraction; Adding plugin SofaGeneralSimpleFem; Adding plugin SofaGeneralTopology; Adding plugin SofaTopologyMapping; Adding plugin SofaUserInteraction; Adding plugin SofaConstraint; Adding plugin SofaGeneralLoader; Adding plugin SofaExporter; Adding plugin SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding plugin SofaPreconditioner; Adding plugin SofaHaptics; Adding plugin SofaValidation; Adding plugin SofaDenseSolver; Adding plugin SofaNonUniformFem; CMake Warning (dev) at D:/Program Files/CMake/share/cmake-3.22/Modules/CMakeDependentOption.cmake:84 (message):; Policy CMP0127 is not set: cmake_dependent_option() supports full Condition; Syntax. Run ""cmake --help-policy CMP0127"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning.; Call Stack (most recent call first):; SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cma",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2814:1621,plugin,plugin,1621,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2814,34,['plugin'],['plugin']
Modifiability,naconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7780,Plugin,PluginManager,7780,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"nager.setConfigDirectoryPath(sofa_prefix + ""/config""); Sofa.GUIManager.setScreenshotDirectoryPath(sofa_prefix + ""/screenshots""). Sofa.GUIManager.init(""qglviewer""); Sofa.GUIManager.createGUI(); Sofa.GUIManager.setDimension(800, 600); Sofa.GUIManager.setScene(root). Sofa.GUIManager.MainLoop(root). Sofa.GUIManager.closeGUI(); ```; ### What else this PR brings. **Plugin manager**; One of the problem arising from this feature is the duplicated loading of the python plugin: when issuing the `import Sofa` command in the python script the interpreter loads the library (SofaPython.so). If the script explicitly calls the `Sofa.loadPlugin(""SofaPython"")` command, Sofa's PluginManager will load again the same library. Example of a faulty script:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:2957,plugin,plugin,2957,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['plugin'],['plugin']
Modifiability,"nager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::forcefield::TetrahedronFEMForceField<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::init(); sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9836,Plugin,PluginManager,9836,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"nager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [WARNING] [SparseLDLSolver(SparseLDLSolver)] Template is empty; By default SparseLDLSolver uses blocks with a single double (to handle all cases of simulations).; If you are using only 3D DOFs, you may consider using blocks of Matrix3 to speedup the calculations.; If it is the case, add template=""CompressedRowSparseMatrixMat3x3d"" to this object in your scene; Otherwise, if you want to disable this message, add template=""CompressedRowSparseMatrixd"" .; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneChec",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:34338,Plugin,PluginManager,34338,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"nager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; The object is not in the factory.; This component has been PLUGINIZED since SOFA v20.06. To continue using this component you need to update you scene and add <RequiredPlugin name='SofaNonUniformFem'/>. [ERROR] [SceneLoaderXML] Node initi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9686,Plugin,PluginManager,9686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"nalysis = complexCalculsOnMatrices(root); saveResults(root, analysis); ```. You could even make your own runSofa.py that launches the runSofa GUI (a more complete python runSofa script can be found in an example file provided by this PR) :. ```#!/usr/bin/python2.7. from libSofaPython import Sofa. sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim). root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(). sofa_prefix = ""/home/jnbrunet/sources/sofa/build""; Sofa.GUIManager.setSofaPrefix(sofa_prefix); Sofa.GUIManager.setConfigDirectoryPath(sofa_prefix + ""/config""); Sofa.GUIManager.setScreenshotDirectoryPath(sofa_prefix + ""/screenshots""). Sofa.GUIManager.init(""qglviewer""); Sofa.GUIManager.createGUI(); Sofa.GUIManager.setDimension(800, 600); Sofa.GUIManager.setScene(root). Sofa.GUIManager.MainLoop(root). Sofa.GUIManager.closeGUI(); ```; ### What else this PR brings. **Plugin manager**; One of the problem arising from this feature is the duplicated loading of the python plugin: when issuing the `import Sofa` command in the python script the interpreter loads the library (SofaPython.so). If the script explicitly calls the `Sofa.loadPlugin(""SofaPython"")` command, Sofa's PluginManager will load again the same library. Example of a faulty script:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:2330,Plugin,Plugin,2330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,2,"['Plugin', 'plugin']","['Plugin', 'plugin']"
Modifiability,"nd: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceback (most recent call last):; File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 435, in; env.reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 380, in reset; super().reset(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/base.py"", line 147, in reset; self._init_sim(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py"", line 216, in _init_sim; super()._init_sim(); File ""/home/sofa/SOFA/v22.06.00/bin/lapgym/sofa_env/sofa_",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:5468,Plugin,Plugin,5468,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,nda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginMan,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7186,Plugin,PluginManager,7186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ndings.Sofa.Tests` tests are failing?. The output:; ```text; Running unit-tests Bindings.Sofa.Tests; Calling: bash -c ""/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Bindings.Sofa.Tests --gtest_output=xml:unit-tests/Bindings.Sofa.Tests/report.xml 2>&1"". [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/image/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Flexible/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Compliant/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/python3/site-packages' to sys.path; [INFO] [PluginManager] Loaded plugin: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/libSofaPython3.so; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:1072,plugin,plugins,1072,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['plugin'],['plugins']
Modifiability,ndition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/So,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:5812,Plugin,PluginManager,5812,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,ndition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: CubeTopology; [WARNING] [ObjectFactory] Class already registered: CylinderGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereQuadTopology; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:25121,Plugin,PluginManager,25121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,need to change this? https://github.com/sofa-framework/ci/blob/master/scripts/configure.sh,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1360#issuecomment-637648587:78,config,configure,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1360#issuecomment-637648587,1,['config'],['configure']
Modifiability,"nent.Collision.Detection.Intersection"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [LineCollisionModel, PointCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Setting"", # [BackgroundSetting]; ""Sofa.Component.Topology.Container.Dynamic"", # [HexahedronSetTopologyContainer, HexahedronSetTopologyModifier]; ""Sofa.Component.Topology.Container.Grid"", # [RegularGridTopology]; ""Sofa.Component.Visual"", # [VisualStyle]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.FEM.Elastic"", # [HexahedronFEMForceField]; ""Sofa.Component.Topology.Mapping"", # [Hexa2TetraTopologicalMapping]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""DefaultAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showBehaviorModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""DefaultContactManager"", response=""PenalityContactForceField""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=3.0,; contactDistance=1.1,; ). root_node.gravity = [0.0, -98.1, 0.0]. scene_node = root_node.addChild(""scene""). ######################; # Cuttable HEXA Object; ######################; if test_cutting == ""hexa"":; hexa_node = scene_node.addChild(""hexas""); topology_creation_node = scene_node.addChild(""topology_creation""). grid = topology_creation_node.addOb",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3201:2186,Plugin,Plugins,2186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3201,1,['Plugin'],['Plugins']
Modifiability,"nent.Collision.Geometry"", # [LineCollisionModel, PointCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Setting"", # [BackgroundSetting]; ""Sofa.Component.Topology.Container.Dynamic"", # [HexahedronSetTopologyContainer, HexahedronSetTopologyModifier]; ""Sofa.Component.Topology.Container.Grid"", # [RegularGridTopology]; ""Sofa.Component.Visual"", # [VisualStyle]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.FEM.Elastic"", # [HexahedronFEMForceField]; ""Sofa.Component.Topology.Mapping"", # [Hexa2TetraTopologicalMapping]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""DefaultAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showBehaviorModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""DefaultContactManager"", response=""PenalityContactForceField""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=3.0,; contactDistance=1.1,; ). root_node.gravity = [0.0, -98.1, 0.0]. scene_node = root_node.addChild(""scene""). ######################; # Cuttable HEXA Object; ######################; if test_cutting == ""hexa"":; hexa_node = scene_node.addChild(""hexas""); topology_creation_node = scene_node.addChild(""topology_creation""). grid = topology_creation_node.addObject(""RegularGridTopology"", nx=10, ny=2, nz=2, xmin=0.0, xmax=10.0, ymin=0.0, yma",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3201:2265,plugin,pluginName,2265,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3201,3,['plugin'],"['plugin', 'pluginName']"
Modifiability,"nerate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Load",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9833,Plugin,PluginManager,9833,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ng bothered with them). ; - it is bi-directionnal, so people can work in parallel either to move the components into ""stable"" or into ""deprecated"". So team looking for the ""future"" should put their time on making a good ""stable set""; - the approach also cares about users because until a component is removed from the deprecated set"" a Sofa version can still be compiled with the deprecated components. ; - it is reversible, and each time a component is put into the ""deprecated"" set users of the component are warned when loading their scene, and thus, they can complain to sofa-dev that we shouldn't have deprecated a specific component (or that they are going to invest themself to maintain it). ; - it is complementary to organizing component sharing functionalities into module or plugins or packages (group of plugins) which also help to reduce the compilation time of sofa. . @untereiner I think in the existing sofa we have used component grouping (with modules or plugins) to handle lifetime management & functionally grouping & level of quality, which are different concerns, with a single tool (the modules). ; As you are proposing I dream of a clear re-organization of the different modules/plugins but I this sound very ambitious to me and I remember of a meeting 2 years ago where this was already discussed...and nothing moved. My assumption is that this is because the step is so big that no-one can afford it. . This is why I'm trying to find less ambitious but more incremental approach. . Eg with the current approach if you have 1 hour time to offer you can: ; - locate the leaves of the #include graph (these are component that have low coupling and thus are easy to remove); - move the file to the deprecated set (if you think it should); - add the component into the scene-checker to warn users. ; - make a PR; - if the PR is accepted you can be proud of the result because you saved:; ```; 1 second (average compilation time per component); * 20 (number of sofa compilation per",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332339715:1951,plugin,plugins,1951,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332339715,1,['plugin'],['plugins']
Modifiability,ngshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:8419,Plugin,PluginManager,8419,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"nical=False); VisuOgl = VisuCatheter.addChild('VisuOgl'); VisuOgl.activated= True; VisuOgl.addObject('OglModel',name='Visual',color='0.7 0.7 0.7', quads='@../ContainerCath.quads',material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20'); VisuOgl.addObject('IdentityMapping',input='@../Quads',output='@Visual'). VisuGuide = InstrumentCombined.addChild('VisuGuide'); VisuGuide.activated= True; VisuGuide.addObject('MechanicalObject',name='Quads'); VisuGuide.addObject('QuadSetTopologyContainer',name='ContainerGuide'); VisuGuide.addObject('QuadSetTopologyModifier',name='Modifier'); VisuGuide.addObject('QuadSetGeometryAlgorithms',name='GeomAlgo', template='Vec3d'); VisuGuide.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=1,input='@../../topoLines_guide/meshLinesGuide',output='@ContainerGuide', flipNormals=True,listening=True); VisuGuide.addObject('AdaptiveBeamMapping',name='visuMapGuide',useCurvAbs='1',printLog='0',interpolation='@../InterpolGuide',input='@../DOFs',output='@Quads',isMechanical=False); VisuOgl = VisuGuide.addChild('VisuOgl'); VisuOgl.activated = True; VisuOgl.addObject('OglModel',name='Visual', color='0.2 0.2 0.8' , material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20', quads='@../ContainerGuide.quads'); VisuOgl.addObject('IdentityMapping', input='@../Quads', output='@Visual'). VisuCoils = InstrumentCombined.addChild('VisuCoils'); VisuCoils.activated= True; VisuCoils.addObject('MechanicalObject',name='Quads'); VisuCoils.addObject('QuadSetTopologyContainer',name='ContainerCoils'); VisuCoils.addObject('QuadSetTopologyModifier',name='Modifier' ); VisuCoils.addObject('QuadSetGeometryAlgorithms', name='GeomAlgo',template='Vec3d'); VisuCoils.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=0.3, input='@../../topoLines_coils/meshLinesCoils',outpu",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:7526,Adapt,AdaptiveBeamMapping,7526,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243,1,['Adapt'],['AdaptiveBeamMapping']
Modifiability,nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67n,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:8132,Plugin,PluginManager,8132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"nked to topology and coping for topological changes. There was no reason those two lists existed together. . Moreover, the topological change callback attached to the two `topologySubestIndices` lists was not working as expected. Springs were not removed correctly due to the fact that the `topologySubestIndices` data was not supposed to work with multiple occurrence of the same index. This was corrected in the following PR : https://github.com/sofa-framework/sofa/pull/4738 along with some modifications in the present one (for the callback on the forcefield side). . One of the major difficulties lies in the fact that the two components presented two representations of the spring list: one gather more information than the other, and the second one being less practical to work with especially in scene building.; - In SpringFF every spring is listed in a data list of LinearSpring. Along with this the two topologySubestIndices where here to cope for topological changes; - In StiffSpringFF, along with the inherited data from SpringFF, lied the indices lists and a single data for stiffness and damping. . In order to be as conservative as possible, I tried in this PR to only do the merge while keeping every current features enabled. This leads in a double representation of the spring list: the list `d_springs` and the tuple `d_springsIndices[0], d_springsIndices[1], d_ks, d_kd, d_lengths, d_elongationOnly, d_enabled` that needs to be kept coherent constantly through call back. This is cumbersome because we cannot have a circular dependency, and has thus been solved by implicitly defining a hierarchy between the two representation : the tuple representation is the master one, and the spring list follows it. This would be better if we could have a read only data so that the user cannot access the spring list. . The spring list is still useful for three things :; 1. the CUDA implementation (but not mandatory, removing it would require a significant refactoring); 2. the huge num",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4649#issuecomment-2252777879:1686,inherit,inherited,1686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4649#issuecomment-2252777879,1,['inherit'],['inherited']
Modifiability,"nment know the interpreter is being run from the outside when initializing (and maybe deal with all the sys.path / __file__ abuses down there). The PythonEnvironment will create an interpreter if there isn't one (like when launching for a binary executable), or use the one already defined. In this case, PythonEnvironment will use the interpreter that called the script (ex python runSofaPython.py). No new python interpreter nor python thread a created (I've just checked to be sure). > probably have a good fight with the GIL down the road. The current GIL usage in the plugin seems to align correctly with this feature since we ""attach"" the PythonEnvironment to an interpreter instead of initialising a new one. No new threads are created. > how should this feature integrate with existing python scenes? Should it be possible to load scenes from within python scenes?. Yes, it seems to work so far. However:. - Loading the SofaPlugin library from within a python script that already imported it should be avoid for now since I'm not sure what side effects this will bring. Right now doing it seems not so bad as, again, we only attach the environment to the already created python environment. ; - A ScriptController will need to be added in order to trigger script events so that the python scene's functions (initGraph, onBeginAnimationStep, etc) are called. The createScene function is called by the SceneLoaderPY so this one is fine. > (I would probably put your feature in a module separate from Sofa for this reason). I think this should be entirely a part of the SofaPython plugin in order to keep what is related to sofa in python there. > what happens when Sofa.cleanup() gets called but python objects still hold c++ objects that are to be destructed when python exits ?. This is a good question. PythonEnvironment::Release is called when python exits (called by the static raii destructor...). I'll have to check this. > But I am really all for it, so good luck with that :-). Thanks!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525:2681,plugin,plugin,2681,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525,1,['plugin'],['plugin']
Modifiability,nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/stor,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:7136,Plugin,PluginManager,7136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"node with amechanical state and a mapping ; if(stopAtMechanicalmapping(node.mapping)); return; fwdMechanicalMapping(node.mapping,);; fwdMappedMechanicalState(node.mstate); ; else; /// We are in a node with amechanical state but without a mapping ; fwdMechanicalState(node.mstate); ...; /// plenty of other scenarios..; ...; for(constraint : node.constraints); fwdConstraintSet(constriant); for(forcefield : node.forcefield); fwdForceField(forcefield); ....; ```; The general idea in this BaseMechanicalVisitor is to implement custom behavior that are triggered wen specific scene ""patterns"" are recognized. The custom behavior are the virtual function (eg: fwdMechanicalState). By default these functions do nothing. It is the responsability of the visitors in-heriting from BaseMechanicalVisitor to override them to match implement the behavior they needs. In the drafted code before... you can notice the line:; ```cpp; stopAtMechanicalmapping(node.mapping); ```; This is also a function implemented in BaseMechanicalVisitor that by default, check the data fields in the provided node.mapping to control if the mechanical action has to be done or stopped. . Let's narrow now down to the constraints. To process the constraints different visitors are used, these visitors inherits from BaseMechanicalVisitors without changing the processNodeTopDown() but instead overiding things in the method fwdConstraintSet(), ; - MechanicalGetConstraintResolutionVisitor ; - MechanicalGetConstraintInfoVisitor; - MechanicalGetConstraintViolationVisitor; - MechanicalAccumulateConstraint2; - MechanicalSetConstraint; - MechanicalAccumulateJacobian. These constraint specific methods are called at the end of the processNodeTopDown() these lines are reached only if the call to stopAtMechanicalMapping() returns false. To make that happens ; all these visitors are overriding stopAtMechanicalMapping() so it returns always false. . The storeLambda was the only one not doing that (which is now fixed with the PR).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/854#issuecomment-446583409:2296,inherit,inherits,2296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/854#issuecomment-446583409,1,['inherit'],['inherits']
Modifiability,"not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with conte",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:33556,Plugin,PluginManager,33556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"nt PR to clean Link/Data, one change in Node to remove template instanciation of Single & Sequence and precompiled header ). ```console; `Analyzing build trace from 'analyze5.data'...; **** Time summary:; Compilation (2459 times):; Parsing (frontend): 2552.4 s; Codegen & opts (backend): 2641.2 s. **** Files that took longest to parse (compiler frontend):; 6901 ms: clangbuild//SofaGui/SofaGuiQt/CMakeFiles/SofaGuiQt.dir/src/sofa/gui/qt/RealGUI.cpp.o; 6266 ms: clangbuild//SofaGeneral/SofaConstraint/CMakeFiles/SofaConstraint.dir/LMConstraintDirectSolver.cpp.o; 6259 ms: clangbuild//SofaGui/SofaGuiQt/CMakeFiles/SofaGuiQt.dir/src/sofa/gui/qt/PickHandlerCallBacks.cpp.o; 6060 ms: clangbuild//SofaGui/SofaGuiQt/CMakeFiles/SofaGuiQt.dir/src/sofa/gui/qt/TableDataWidget.cpp.o; 5918 ms: clangbuild//SofaGui/SofaGuiMain/CMakeFiles/SofaGuiMain.dir/src/sofa/gui/Main.cpp.o; 5803 ms: clangbuild//SofaGui/SofaGuiQt/CMakeFiles/SofaGuiQt.dir/src/sofa/gui/qt/moc_RealGUI.cpp.o; 5767 ms: clangbuild//applications/plugins/SofaTest/CMakeFiles/SofaTest.dir/Elasticity_test_deprecated.cpp.o; 5757 ms: clangbuild//SofaGui/SofaGuiQt/CMakeFiles/SofaGuiQt.dir/src/sofa/gui/qt/viewer/qgl/QtGLViewer.cpp.o; 5735 ms: clangbuild//SofaGui/SofaGuiQt/CMakeFiles/SofaGuiQt.dir/src/sofa/gui/qt/viewer/SofaViewer.cpp.o; 5640 ms: clangbuild//SofaGui/SofaGuiQt/CMakeFiles/SofaGuiQt.dir/src/sofa/gui/qt/panels/QDocBrowser.cpp.o; 5611 ms: clangbuild//SofaGui/SofaGuiQt/CMakeFiles/SofaGuiQt.dir/src/sofa/gui/qt/QSofaListView.cpp.o; 5585 ms: clangbuild//applications/plugins/SofaTest/CMakeFiles/SofaTest.dir/Elasticity_test.cpp.o; 5398 ms: clangbuild//SofaKernel/SofaBase/SofaBaseMechanics/CMakeFiles/SofaBaseMechanics.dir/MechanicalObject.cpp.o; 5301 ms: clangbuild//SofaKernel/SofaCommon/SofaRigid/SofaRigid_test/CMakeFiles/SofaRigid_test.dir/RigidMapping_test.cpp.o; 5242 ms: clangbuild//SofaKernel/SofaBase/SofaEigen2Solver/CMakeFiles/SofaEigen2Solver.dir/SVDLinearSolver.cpp.o; 5236 ms: clangbuild//SofaKernel/SofaCommon/SofaRigid/S",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:1114,plugin,plugins,1114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['plugin'],['plugins']
Modifiability,nt.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GU,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:9774,Plugin,PluginManager,9774,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,nt/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/ser,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:5112,Plugin,PluginManager,5112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,ntact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Compon,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:9376,Plugin,PluginManager,9376,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"nto a plugin named SofaVolumetricData ; - copy DistanceGrid specific elements from SofaVolumetricData into a new plugin named SofaDistanceGrid; - copy ImplicitField specific elements from SofaVolumetricData into a new plugin name SofaImplicitField; - remove *.cpp from SofaVolumetricData and forward the old *.h to the corresponding .h in SofaDistanceGrid & SofaImplicitField. (So that #include <SofaVolumetricData/> still work for a transitional period) ; - refactor & rename some classes but use 'using OldName = NewName' to provide API compatibility ; and use the Factory to continue exposing the same component names to the sofa users or warning message to indicate the something have changed. After a transitional period this should be removed. . The current WIP is in the following branch:; https://github.com/sofa-framework/sofa/compare/master...SofaDefrost:splitSofaVolumetricDataSquashed. The result is to have:; ```; plugins/SofaDistanceGrid/; - components/collision/BarycentricPenalty, DistanceGridCollision, FFDDistanceGrid, RigidDistanceGird; - components/forcefield/DistanceGridForceFIeld. plugins/SofaImplicitField/ ; - components/geometry/ScalarField (base class); - components/geometry/DiscreteGridField (inherit from ScalarField); - components/geometry/SphericalField (inherit from ScalarField); - components/geometry/otherToComeFromDefrost; - components/mapping/ImplictSurfaceMapping; - deprecated/ImplicitSurfaceContainer (override) components/geometry/DiscreteGridField ; - deprecated/InterpolatedImplicitSurface (override) components/geometry/DiscreteGridField; - deprecated/SphereSurface (override) component/geometry/SphericalField; ```. ...of course we need to add test to all these classes & refactor the MHD loading parts....etc... . Please have a quick look at it and provide feedback on the general way to manage this kind of changes (eg do we really need to keep the SofaVolumetricData transitional plugin or do we allow a more breaking approach and directly remove the ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/388:1364,plugin,plugins,1364,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/388,1,['plugin'],['plugins']
Modifiability,nullability.NullableReturnedFromNonnull.html) | [modernize-loop-convert](https://clang.llvm.org/extra/clang-tidy/checks/modernize-loop-convert.html) |; | [clang-analyzer-optin.cplusplus.VirtualCall](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.cplusplus.VirtualCall.html) | [modernize-make-shared](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-shared.html) |; | [clang-analyzer-optin.mpi.MPI-Checker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.mpi.MPI-Checker.html) | [modernize-make-unique](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-unique.html) |; | [clang-analyzer-optin.performance.Padding](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.performance.Padding.html) | [modernize-pass-by-value](https://clang.llvm.org/extra/clang-tidy/checks/modernize-pass-by-value.html) |; | [clang-analyzer-optin.portability.UnixAPI](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.portability.UnixAPI.html) | [modernize-raw-string-literal](https://clang.llvm.org/extra/clang-tidy/checks/modernize-raw-string-literal.html) |; | [clang-analyzer-security.FloatLoopCounter](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.FloatLoopCounter.html) | [modernize-redundant-void-arg](https://clang.llvm.org/extra/clang-tidy/checks/modernize-redundant-void-arg.html) |; | [clang-analyzer-security.insecureAPI.UncheckedReturn](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.UncheckedReturn.html) | [modernize-replace-auto-ptr](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-auto-ptr.html) |; | [clang-analyzer-security.insecureAPI.getpw](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.getpw.html) | [modernize-replace-random-shuffle](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-random-shuffle.html) |; | [clang-analyzer-security.insecureAPI.gets](https://clang.llvm,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:15596,portab,portability,15596,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['portab'],['portability']
Modifiability,"nv/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1383,Plugin,Plugin,1383,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['Plugin'],['Plugin']
Modifiability,"o ""stable"" or into ""deprecated"". So team looking for the ""future"" should put their time on making a good ""stable set""; - the approach also cares about users because until a component is removed from the deprecated set"" a Sofa version can still be compiled with the deprecated components. ; - it is reversible, and each time a component is put into the ""deprecated"" set users of the component are warned when loading their scene, and thus, they can complain to sofa-dev that we shouldn't have deprecated a specific component (or that they are going to invest themself to maintain it). ; - it is complementary to organizing component sharing functionalities into module or plugins or packages (group of plugins) which also help to reduce the compilation time of sofa. . @untereiner I think in the existing sofa we have used component grouping (with modules or plugins) to handle lifetime management & functionally grouping & level of quality, which are different concerns, with a single tool (the modules). ; As you are proposing I dream of a clear re-organization of the different modules/plugins but I this sound very ambitious to me and I remember of a meeting 2 years ago where this was already discussed...and nothing moved. My assumption is that this is because the step is so big that no-one can afford it. . This is why I'm trying to find less ambitious but more incremental approach. . Eg with the current approach if you have 1 hour time to offer you can: ; - locate the leaves of the #include graph (these are component that have low coupling and thus are easy to remove); - move the file to the deprecated set (if you think it should); - add the component into the scene-checker to warn users. ; - make a PR; - if the PR is accepted you can be proud of the result because you saved:; ```; 1 second (average compilation time per component); * 20 (number of sofa compilation per day); * 150 (number of sofa developpers); = 3000 seconds per day. ; ```; The return of investment is very high :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332339715:2181,plugin,plugins,2181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332339715,2,"['coupling', 'plugin']","['coupling', 'plugins']"
Modifiability,"o sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternalModule` function's pointer or plugin's name as another already loaded plugin; - A plublic `PluginManager::addPlugin` that adds a plugin to the register without loading it (it must be loaded in the memory beforehand) is now available. **Supplementary python bindings**; Since me and @vmagno used this PR extensively during the past 2 months for our simulations, we added a couple of python bindings useful to us. I think this wraps up a lot of things, let me know what you guys think. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; -",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:5321,plugin,plugins,5321,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,3,['plugin'],"['plugin', 'plugins']"
Modifiability,"o& v = s->getSelection(); ; ```. It is more common to have the client side in a PythonScriptController. To make that possible this module have a python binding which allows to write interesting editing interaction in python:; ```python; from SofaEditor import SofaEditor. def onDraw():; s = SofaEditor.getSelection(); drawSomethingSpecialForSelectedObject(s); ```. The python binding is different to the one we have yet into Sofa s it is made totally independently to SofaPython and is done using cython (http://cython.org/) ; (for which I'm curious to see how this will survive our CI). . Other notable things are that there is unittest either on the c++ side & python side and that the CMakeLists.txt are installing everything into a single the install location with the following structure: ; module/SofaEditor/SofaEditor.so; module/SofaEditor/python/SofaEditor/__init__.py; module/SofaEditor/python/SofaEditor/SofaEditor.so ; module/SofaEditor/examples; (I'm not sure it is a good idea but this is a kind of ""package"" but I think it is an interesting way to ship plugins). . I will open other PR to integrate this feature into runSofa and runSofa2. . For the records, I was hesitating between three designs. The first one consists in using the ""context/ExecParams"" to hold the editor state. As this context is passed to the components during the scenegraph traversal this would allows them to know the status of the editor. The second approach was using flexible messages/event transmitted through the scene graph. The third design was much simpler and simply consist of using a singleton so that it can be used everywhere there is a need to know the editor status. Between the three I made the decision to use the simplest approach (simpler to implement & simpler to use) despite he is more limited. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/735:1721,plugin,plugins,1721,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/735,1,['plugin'],['plugins']
Modifiability,oaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/b,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2647,Plugin,PluginManager,2647,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,oaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/en,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4304,Plugin,PluginManager,4304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"oaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:7864,Plugin,PluginManager,7864,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"oaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sof",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:7303,Plugin,PluginManager,7303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ocal/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/snap/bin; --- SOFA_ROOT ---; --- PYTHONPATH ---; --- sys.path ---; ['', '/usr/lib/python310.zip', '/usr/lib/python3.10', '/usr/lib/python3.10/lib-dynload', '/home/create/.local/lib/python3.10/site-packages', '/usr/local/lib/python3.10/dist-packages', '/usr/lib/python3/dist-packages']; #################; create@create-AMX-X57. ```. ---------------------------------------------. ### Logs. **Output from make**. ```; ...; [ 89%] Linking CXX shared library ../../../lib/libSofaCUDA.so; /usr/bin/ld: CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/CudaHexahedronFEMForceField.cpp.o: in function `sofa::component::solidmechanics::fem::elastic::HexahedronFEMForceField<sofa::gpu::cuda::CudaVectorTypes<sofa::gpu::cuda::Vec3r1<float>, sofa::gpu::cuda::Vec3r1<float>, float> >::HexahedronFEMForceField()':; CudaHexahedronFEMForceField.cpp:(.text._ZN4sofa9component14solidmechanics3fem7elastic23HexahedronFEMForceFieldINS_3gpu4cuda15CudaVectorTypesINS6_6Vec3r1IfEES9_fEEEC1Ev[_ZN4sofa9component14solidmechanics3fem7elastic23HexahedronFEMForceFieldINS_3gpu4cuda15CudaVectorTypesINS6_6Vec3r1IfEES9_fEEEC1Ev]+0x269): undefined reference to `sofa::core::behavior::ForceField<sofa::gpu::cuda::CudaVectorTypes<sofa::gpu::cuda::Vec3r1<float>, sofa::gpu::cuda::Vec3r1<float>, float> >::ForceField(sofa::core::behavior::MechanicalState<sofa::gpu::cuda::CudaVectorTypes<sofa::gpu::cuda::Vec3r1<float>, sofa::gpu::cuda::Vec3r1<float>, float> >*)'; collect2: error: ld returned 1 exit status; make[2]: *** [applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/build.make:9130: lib/libSofaCUDA.so.0.1] Error 1; make[1]: *** [CMakeFiles/Makefile2:18762: applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/all] Error 2; make: *** [Makefile:156: all] Error 2. ```. **Content of build_dir/CMakeCache.txt**; ------------; [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/10970149/CMakeCache.txt); ------------",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3726:2304,plugin,plugins,2304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3726,2,['plugin'],['plugins']
Modifiability,"of a definitive list of components that have to be keep. We can already, small step after small step, moving the ones for which there is a agreement into the right set (and people not using the set will stop being bothered with them). ; - it is bi-directionnal, so people can work in parallel either to move the components into ""stable"" or into ""deprecated"". So team looking for the ""future"" should put their time on making a good ""stable set""; - the approach also cares about users because until a component is removed from the deprecated set"" a Sofa version can still be compiled with the deprecated components. ; - it is reversible, and each time a component is put into the ""deprecated"" set users of the component are warned when loading their scene, and thus, they can complain to sofa-dev that we shouldn't have deprecated a specific component (or that they are going to invest themself to maintain it). ; - it is complementary to organizing component sharing functionalities into module or plugins or packages (group of plugins) which also help to reduce the compilation time of sofa. . @untereiner I think in the existing sofa we have used component grouping (with modules or plugins) to handle lifetime management & functionally grouping & level of quality, which are different concerns, with a single tool (the modules). ; As you are proposing I dream of a clear re-organization of the different modules/plugins but I this sound very ambitious to me and I remember of a meeting 2 years ago where this was already discussed...and nothing moved. My assumption is that this is because the step is so big that no-one can afford it. . This is why I'm trying to find less ambitious but more incremental approach. . Eg with the current approach if you have 1 hour time to offer you can: ; - locate the leaves of the #include graph (these are component that have low coupling and thus are easy to remove); - move the file to the deprecated set (if you think it should); - add the component into the",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332339715:1764,plugin,plugins,1764,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/346#issuecomment-332339715,2,['plugin'],['plugins']
Modifiability,"ofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2167,Plugin,Plugin,2167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,"ofa.loadPlugin(""SofaPython"")` command, Sofa's PluginManager will load again the same library. Example of a faulty script:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded a",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:3583,plugin,plugin,3583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['plugin'],['plugin']
Modifiability,"ofa/build_release/install/bin/runSofa -l /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so /home/sergei/Source_code/test_scene/test_scene.py ; [WARNING] [SofaEigen2Solver] SofaEigen2Solver is deprecated; Eigen classes are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = /home/sergei/Source_code/Sofa_development/Optimus/build_release:/home/sergei/Source_code/Sofa_development/SofaAuxiliaryComponents/build_release:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib; [INFO] [runSofa] DataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/runSofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYT",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:859,Plugin,PluginRepository,859,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,2,"['Plugin', 'plugin']","['PluginRepository', 'plugins']"
Modifiability,"ofa/gpu/cuda && /usr/bin/cmake -E make_directory /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/. && /usr/bin/cmake -D verbose:BOOL=OFF -D build_configuration:STRING=Release -D generated_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o -D generated_cubin_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.cubin.txt -P /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake; /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(1251): warning: variable ""threads2"" was declared but never referenced. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(360): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_deriveSPKTensor"" is undefined; detected during instantiation of ""void StandardTetrahedralFEMForceFieldCuda_addForce_kernel(int, real *, real *, const real *, __nv_bool, const real *, float, float) [with real=float]"" ; (1248): here. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(587): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_ElasticityTensor"" is undefined; detected during instantiation of ""void StandardTetrahedralFEMForceFieldCuda_addDForce_kernel(int, real *, real *, real, real, real *) [with real=float]"" ; (1266): here. 2 errors detected in the compilation of ""/tmp/tmpxft_0000044c_00000000-6_CudaStandardTetrahedralFEMForceField.cpp1.ii"".; CMake",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057:1887,variab,variable,1887,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057,1,['variab'],['variable']
Modifiability,"ofaKernel/SofaSimulation/../modules -I../SofaKernel/framework/sofa/core/../.. -I../SofaKernel/framework/sofa/helper/../.. -F/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks -I../SofaKernel/extlibs/eigen-3.2.7 -ISofaKernel/SofaFramework -I../SofaKernel/extlibs/tinyxml -I../SofaKernel/framework/sofa/defaulttype/../.. -I../SofaMisc/../modules -I../SofaKernel/SofaCommon/../modules -isystem=/opt/local/include/Qt -Wall -W -O3 -DNDEBUG -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk -mmacosx-version-min=10.11 -fPIC -DSOFA_MULTITHREADING_PLUGIN -std=gnu++11 -MD -MT applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o -MF applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o.d -o applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o -c ../applications/plugins/MultiThreading/src/TaskSchedulerBoost.cpp; ../applications/plugins/MultiThreading/src/TaskSchedulerBoost.cpp:192:18: error: overload resolution selected deleted operator '='; mTaskMutex.v_ = 0L;; ~~~~~~~~~~~~~ ^ ~~; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/atomic:1654:18: note: candidate function has been explicitly deleted; atomic_flag& operator=(const atomic_flag&) = delete;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/atomic:1655:18: note: candidate function has been explicitly deleted; atomic_flag& operator=(const atomic_flag&) volatile = delete;; ^; 1 error generated.; ```. This plugin should either be updated with the new boost API, or get rid of boost dependency.; I don't know this plugin enough... ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/316:1441,plugin,plugins,1441,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/316,4,['plugin'],"['plugin', 'plugins']"
Modifiability,"ofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaPython.so; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/Example.py; [ OK ] Batch/Python_scene_test.sofa_python_scene_tests/0 (2544 ms); [ RUN ] Batch/Python_scene_test.sofa_python_scene_tests/1; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/LambdaPropagation.py; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant.so; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant_gui.so; [DEPRECATED] [Compliant.Vec] Compliant's Vec.py is now deprecated (and will be deleted soon), please use numpy instead; [ERROR] [SofaPython] createObject: component 'compliance' of type 'UniformCompliance' in node 'joint'; [ERROR] [SofaPython] Object type UniformCompliance<Vec1d> creation failed; [FATAL] [SofaPython] SP_CALL_MODULEFUNC; Traceback (most recent call last):; File ""LambdaPropagation.py"", line 90, in createScene; joint = StructuralAPI.FixedRigidJoint( ""joint"", ground.node, rigid.node ); File ""/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python/Compliant/StructuralAPI.py"", line 634, in __init__; self.compliance = self.node.createObject('UniformCompliance', name='compliance', compliance=compliance); TypeError: bad argument type for built-in operation; Build timed out (after 30 minutes). Marking the build as aborted.; Build was aborted; [File exi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:1852,Plugin,PluginManager,1852,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7929,Plugin,PluginManager,7929,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ojects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. This dll is actually present. Please see the snapshot below.; Directory view:; ![image](https://user-images.githubusercontent.com/5296582/83347021-63272b80-a33f-11ea-9cda-e2c209b1be80.png). I am not able to understand what is the issue? Please suggest. Thanks; ______________________________________________________. Suggested labels: <!--",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:2051,Plugin,PluginManager,2051,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ok looking at the CI, only tests from plugin are failing because the scene are still requesting to load plugin with old plugin name. I can fix that quickly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1263227559:38,plugin,plugin,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3301#issuecomment-1263227559,3,['plugin'],['plugin']
Modifiability,"ok so if I understand well, adding the template instantiations only in the cpp return empty string by `getTarget`; Stange... from what I remembered there are several collision classes that are instantiate the same way in the plugin....",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4714#issuecomment-2092550808:225,plugin,plugin,225,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4714#issuecomment-2092550808,1,['plugin'],['plugin']
Modifiability,"ok, it works if I don't build cgal, so in header only (only execute cgal-setup.exe, no visual build after this step); Otherwise it fails at compilation: error: cannot open input file 'CGal.lib' when building plugin.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/958#issuecomment-476729206:208,plugin,plugin,208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/958#issuecomment-476729206,1,['plugin'],['plugin']
Modifiability,"oking into github actions, trying to get it to do what I want... not yet really successfully, but I've got a proof of concept. Currently, I run the checks on a slave on ci.inria.fr, and the current POC does a minimalist build / install / run tests workflow. But I think it would be worth asking ourselves what the perfect CI/CD pipeline could be for SOFA & it's plugins. In my mind, I'd like this:. SOFA:; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent (consistent build environment); - generate standalone binaries, zip & upload on github pages / website (SOFA-latest / sofa-nightly build...). PLUGINS:; - load docker image, or wget binaries generated by SOFA; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent; - generate binaries, zip & upload on github pages / website; ; ADVANTAGES of github actions vs JK2:; - ALL CI/CD config centralized in a .github folder in the git repository; - NO separate tool but Github's interface; - SUPER DUPER KICKASS interface design from github, gives direct access to all logs, checks, status badges etc. for each workflow / job / step in the Github checks processes. ![plop2](https://user-images.githubusercontent.com/13734391/69730387-3e4fc280-1128-11ea-8f91-20eeb660d233.png). DISADVANTAGES:; - Still in beta (some bugs noticed, especially when running in self-hosted slaves...); - A lot to recode given what @guparan did in JK2; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.;",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1225:1106,config,config,1106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1225,1,['config'],['config']
Modifiability,oller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9557,Plugin,PluginManager,9557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"olver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; T",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9420,Plugin,PluginManager,9420,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,4,"['Plugin', 'plugin']","['Plugin', 'PluginManager', 'plugin']"
Modifiability,"olver; Adding module SofaGeneralImplicitOdeSolver; Adding module SofaGeneralLinearSolver; Adding module SofaGeneralRigid; Adding module SofaGeneralObjectInteraction; Adding module SofaGeneralSimpleFem; Adding module SofaGeneralTopology; Adding module SofaTopologyMapping; Adding module SofaUserInteraction; Adding module SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding module SofaPreconditioner; Adding module SofaHaptics; Adding module SofaValidation; Adding module SofaDenseSolver; Adding module SofaNonUniformFem; Adding module SofaOpenglVisual; Adding module SofaMiscTopology; Adding module SofaMiscExtra; Adding module SofaMiscForceField; Adding module SofaMiscEngine; Adding module SofaMiscSolver; Adding module SofaMiscFem; Adding module SofaMiscMapping; Adding plugin SofaPython; Adding module SofaExporter; CMake Deprecation Warning at SofaAdvanced/CMakeLists.txt:15 (message):; SofaAdvanced is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaNonUniformFem. CMake Deprecation Warning at SofaMisc/CMakeLists.txt:21 (message):; SofaMisc is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaMiscExtra;SofaMiscEngine;SofaMiscFem;SofaMiscForceField;SofaMiscMapping;SofaMiscSolver;SofaMiscTopology. Adding collection SofaComponentAll; SofaTest: optional dependency SofaPython found, Python_test will be built; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format disabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; SofaMiscCollision: optional dependency SofaSphFluid not found de-activing: <SpatialGridPointModel>; Adding application getDeprecatedComponents; Adding application runSofa; Write Plugin list at C:/SOFA/build/master/bin/plugin_list.conf.default; Configuring done; Generating done",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1623:3212,plugin,plugin,3212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1623,4,"['Config', 'Plugin', 'plugin']","['Configuring', 'Plugin', 'plugin']"
Modifiability,ome/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopol,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7626,Plugin,PluginManager,7626,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"ommand, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternalModule` function's pointer or plugin's name as another already loaded plugin; - A plublic `PluginManager::addPlugin` that adds a plugin to the register without loading it (it must be loaded in the memory beforehand) is now available. **Supplementary python bindings**; Since me and @vmagno used this PR extensively during the past 2 months for our simulations, we added a co",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:5104,Plugin,Plugin,5104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,2,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability,"ompile-time, and it is not possible to use runtime polymorphism. Therefore, it was not possible to uncouple the solver itself from the ordering method. To comply with the new design, I introduced a factory that can be enriched in the new Metis plugin. This factory is able to register types and use runtime polymorphism using a few C++ tricks. The only concern is that the solvers in the factory will not use the algorithms from the `BaseOrderingMethod`. Instead, they use a simple string (defined in a `BaseOrderingMethod`), and its mapping to a type. This has to be registered in the initialization of the module. I tried hard to use the intelligence of the component instead of relying on a string and a factory, but the design of Eigen is not compatible. In order to not force the users to add an ordering method in their scenes, a default one is created automatically by the linear solver. It instantiates `MetisOrderingMethod` if it can find it, otherwise it's `AMDOrderingMethod`. Here are the tasks in a future PR:. 1. Create a plugin for Metis; 2. Move `MetisOrderingMethod` into this plugin; 3. Move some unit tests in this plugin; 4. Update the regression references; 5. Update `FillReducingOrdering`; 6. Remove METIS dependency in `LinearSolver.Direct`; 7. Create a new plugin for Scotch. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4477:1806,plugin,plugin,1806,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4477,4,['plugin'],['plugin']
Modifiability,omponent.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:4103,Plugin,PluginManager,4103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"on.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SceneCheck",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:6421,plugin,plugins,6421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,1,['plugin'],['plugins']
Modifiability,"on.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:4910,plugin,plugins,4910,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,1,['plugin'],['plugins']
Modifiability,on.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:1321,Plugin,PluginManager,1321,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"on]; ""Sofa.Component.Constraint.Lagrangian.Solver"", # [GenericConstraintSolver]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.IO.Mesh"", # [MeshOBJLoader]; ""Sofa.Component.LinearSolver.Direct"", # [SparseLDLSolver]; ""Sofa.Component.Mapping.Linear"", # [BarycentricMapping]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.FEM.Elastic"", # [HexahedronFEMForceField]; ""Sofa.Component.StateContainer"", # [MechanicalObject]; ""Sofa.Component.Topology.Container.Constant"", # [MeshTopology]; ""Sofa.Component.Topology.Container.Dynamic"", # [DynamicSparseGridGeometryAlgorithms,DynamicSparseGridTopologyContainer,Dyna; ""Sofa.Component.Topology.Container.Grid"", # [SparseGridTopology]; ""Sofa.Component.Visual"", # [VisualStyle]; ""Sofa.GL.Component.Rendering3D"", # [OglModel]; ]. def createScene(root: Sofa.Core.Node):; plugin_set = set(PLUGINS); for plugin in plugin_set:; root.addObject(""RequiredPlugin"", name=plugin). root.gravity = [0.0, 0.0, -9.81 * 100.0]; root.dt = 0.01. root.addObject(""FreeMotionAnimationLoop""); root.addObject(; ""VisualStyle"",; displayFlags=[; ""showVisual"",; ""showForceFields"",; ""showBehaviorModels"",; ],; ). root.addObject(""CollisionPipeline"", depth=6, verbose=False, draw=False); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""MinProximityIntersection"", name=""Proximity"", alarmDistance=0.5, contactDistance=0.3); root.addObject(""CollisionResponse"", response=""FrictionContactConstraint""); root.addObject(""GenericConstraintSolver""). scene_node = root.addChild(""scene""); helper_topo = scene_node.addObject(; ""SparseGridTopology"",; n=[4, 6, 4],; fileTopology=""mesh/liver.obj"",; ). liver_node = scene_node.addChild(""liver""); liver_node.addObject(""DynamicSparseGridTopologyContainer"", src=helper_topo.getLinkPath()); liver_node.addObject(""DynamicSparseGridTopologyModifier""); liver_node.addObject(""DynamicSparseGridGeometryAlgorithms""",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4796:2330,plugin,plugin,2330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4796,1,['plugin'],['plugin']
Modifiability,onda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_sourc,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3069,Plugin,PluginManager,3069,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"onda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaMatrix.dll; [INFO] [PluginManager] 72 plugins have been loaded from C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckCollisionResponse, SceneCheckDeprecatedComponents, SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneChe",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:11102,Plugin,PluginManager,11102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"onent.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constrai",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4307,Plugin,Plugin,4307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,"onent.Collision.Geometry"", # [SphereCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ""Sofa.Component.LinearSolver.Direct"", # [SparseLDLSolver]; ""Sofa.Component.AnimationLoop"", # [FreeMotionAnimationLoop]; ""Sofa.Component.Constraint.Lagrangian.Correction"", # [LinearSolverConstraintCorrection, UncoupledConstraintCorrection]; ""Sofa.Component.Constraint.Lagrangian.Solver"", # [GenericConstraintSolver]; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""FreeMotionAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""GenericConstraintSolver""); root_node.addObject(""DefaultContactManager"", response=""FrictionContactConstraint""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=1.0,; contactDistance=0.2,; ). root_node.gravity = [0.0, -918, 0.0]. scene_node = root_node.addChild(""scene""). cutting_sphere_node = scene_node.addChild(""cutting_sphere""); cutting_sphere_node.addObject(""CGLinearSolver""); cutting_sphere_node.addObject(""EulerImplicitSolver""); cutting_sphere_node.addObject(""PointSetTopologyConta",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528:1613,Plugin,Plugins,1613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528,1,['Plugin'],['Plugins']
Modifiability,"onent.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not f",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3146,Plugin,Plugin,3146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,onent.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Compone,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:2358,Plugin,PluginManager,2358,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,onent.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mas,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:2478,Plugin,PluginManager,2478,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"onent.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagr",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3939,Plugin,Plugin,3939,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,"onment. **Context**. - System: Mac OS X 14.4.1 (23E224) ; - Version of SOFA:[SOFA_v23.06.00_MacOS.zip](https://github.com/sofa-framework/sofa/releases/download/v23.06.00/SOFA_v23.06.00_MacOS.zip); - State: < BUILD OR INSTALL DIRECTORY - e.g: ""Build directory"", ""Install directory"" >. **Command called**. ```txt. (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import Sofa; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; ---------------------------------------; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; import Sofa.Helper; ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')), '/System/Volumes/Preboot/Cryptexes/OS/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (no such file), '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have '",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:1628,plugin,plugins,1628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,1,['plugin'],['plugins']
Modifiability,"ore::objectmodel::IdleEvent ie;; sofa::simulation::PropagateEventVisitor v(; sofa::core::ExecParams::defaultInstance(), &ie);; this->getContext()->getRootContext()->executeVisitor(&v);; }; ``` . This allows for a complete and instant refresh of all components taking as an input the dirty outputs without calling the previous components in the pipeline again.; Limitations are that those following components have to be initialized AFTER (in terms of scene graph, so either in subnodes, or after the current engine, in the same node). Another feature that I don't like much but that was requested by someone who was supposed to use and contribute to my plugin but never did, is the ""autolink"" feature:. <MySofaORComponent name=""mycomp"" autolink=""true"" />. This field allows you to *implicitely* link your data, so that you could avoid setting dozens of fields in your scene description file. The way if works is quite basic:; If autolink is true, then when calling addInput, the internal code checks if the variable has been set. If it has been it doesn't do anything, but if it has:; a previous ImplicitDataEngine in the graph is searched for and if it contains a matching variable with a similar name, it binds them together by calling setParent() on the data. If not, the next engine is searched backwards and the same operation is done, recursively until reaching the first engine in the current node. If AUTOLINK is set to true, then a big fat msg_advice() is printed in the console, warning the user that this implicit binding can potentially do things they do not expect...; Limitations are, again, that:; - It is not possible to bind implicitely datas that aren't in the same node, or datas that are declared AFTER the current engine (regarding the scene graph); - The data field name has to be EXACTLY as expected (a input named ""points"" will only be bound to an output named EXACTLY ""points_out""... . So that's it, It's not perfect but does the job with the way datas are handled in SOFA :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367473816:3769,variab,variable,3769,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367473816,1,['variab'],['variable']
Modifiability,"ot done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer deterministic (because of #2047). . Conclusion: #2047 revealed this crash, but was not the cause. It means that a non-deterministic simulation is not a source of crash. ## Fix; The crash is fixed also by updating the values of the map, similarly to the freeze fix. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-cer",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2076:2536,plugin,plugins,2536,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076,1,['plugin'],['plugins']
Modifiability,"other procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternalModule` function's pointer or plugin's name as another already loaded plugin; - A plublic `PluginManager::addPlugin` that adds a plugin to the register without loading it (it must be loaded in the memory beforehand) is now available. **Supplementary python bindings**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:4983,Plugin,Plugin,4983,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,4,"['Plugin', 'plugin']","['Plugin', 'PluginManager', 'plugins']"
Modifiability,"output**; > ; > ```; > (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; > Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; > [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > >>> import Sofa; > ---------------------------------------; > Checking SOFA_ROOT and SOFAPYTHON3_ROOT; > Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; > ---------------------------------------; > Traceback (most recent call last):; > File ""<stdin>"", line 1, in <module>; > File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; > import Sofa.Helper; > ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')), '/System/Volumes/Preboot/Cryptexes/OS/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (no such file), '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')); > >>> ; > ```; > ; > **Content of build_dir/CMakeCache.txt**; > ; > < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >; > ; > Thank you for your report. Have you been able to solve it cause I am also facing similar issue on my M3 pro",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179:6005,plugin,plugins,6005,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179,3,['plugin'],['plugins']
Modifiability,"path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. --- sys.version ---; 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ]; --- PATH ---; /usr/local/opt/python@3.8/bin/:/opt/anaconda3/envs/sofarl/bin:/opt/anaconda3/condabin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/usr/local/share/dotnet:~/.dotnet/tools; --- SOFA_ROOT ---; /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; --- PYTHONPATH ---; /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages:/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages:/path/to/SofaPython3/lib/python3/site-packages:; --- sys.path ---; ['', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/path/to/SofaPython3/lib/python3/site-packages', '/opt/anaconda3/envs/sofarl/lib/python38.zip', '/opt/anaconda3/envs/sofarl/lib/python3.8', '/opt/anaconda3/envs/sofarl/lib/python3.8/lib-dynload', '/opt/anaconda3/envs/sofarl/lib/python3.8/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import Sofa; ---------------------------------------; Checki",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:4110,plugin,plugins,4110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,1,['plugin'],['plugins']
Modifiability,"path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Flexible/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Compliant/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/python3/site-packages' to sys.path; [INFO] [PluginManager] Loaded plugin: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/libSofaPython3.so; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Components/Components.py ; ModuleNotFoundError: No module named 'Sofa.Components'. At:; Components.py(4): <module>; <frozen importlib._bootstrap>(219): _call_with_frames_removed; <frozen importlib._bootstrap_external>(783): exec_module; <frozen importlib._bootstrap>(686): _load_unlocked; <frozen importlib._bootstrap>(702): _load; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(171): load_source; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_opti",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:1736,Plugin,PluginManager,1736,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"pch.hxx Base.h BoundingBox.h (806 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h (792 ms); ... 54486 ms: /opt/Qt/5.15.0/gcc_64/include/QtWidgets/qwidget.h (included 94 times, avg 579 ms), included via:; QSofaStatWidget.h QLabel qlabel.h qframe.h (1332 ms); QTabulationModifyObject.h QWidget (1308 ms); VRender.h config.h QOpenGLWidget qopenglwidget.h QWidget (1240 ms); QSofaStatWidget.h QLabel qlabel.h qframe.h (1237 ms); mouseGrabber.h config.h QOpenGLWidget qopenglwidget.h QWidget (1159 ms); VRender.h config.h QOpenGLWidget qopenglwidget.h QWidget (1153 ms); ... 50534 ms: sofa/SofaKernel/modules/SofaHelper/src/sofa/helper/logging/Messaging.h (included 122 times, avg 414 ms), included via:; cmake_pch.hxx.json cmake_pch.hxx (1185 ms); cmake_pch.hxx.json cmake_pch.hxx (1155 ms); cmake_pch.hxx.json cmake_pch.hxx (1143 ms); cmake_pch.hxx.json cmake_pch.hxx (1029 ms); cmake_pch.hxx.json cmake_pch.hxx (1017 ms); cmake_pch.hxx.json cmake_pch.hxx (995 ms); ... 48975 ms: sofa/applications/plugins/SofaTest/../SofaTest/Sofa_test.h (included 83 times, avg 590 ms), included via:; VariationalSymplecticImplicitSolverNonLinearForceDynamic_test.cpp.o Elasticity_test_deprecated.h Elasticity_test.h (913 ms); TransformEngine_test.cpp.o (891 ms); SparseGridTopology_test.cpp.o (805 ms); TetrahedronNumericalIntegration_test.cpp.o (779 ms); AffineMovementConstraint_test.cpp.o Elasticity_test.h (767 ms); MeshROI_test.cpp.o (755 ms); ... 38428 ms: sofa/SofaKernel/modules/SofaHelper/src/sofa/helper/fixed_array.h (included 162 times, avg 237 ms), included via:; cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h Vec.h (517 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h Vec.h (500 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h Vec.h (488 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h Vec.h (465 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h Vec.h (456 ms); cmake_pch.hxx.json cmake_pch.hxx Base.h BoundingBox.h Vec.h (446 ms); ... 35740 ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:32381,plugin,plugins,32381,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['plugin'],['plugins']
Modifiability,"pendencies management in SOFA. ## Better understand SOFA dependencies; Here is a summary: https://docs.google.com/spreadsheets/d/1dxP7Rsyl1oCr0lfTwQESeeZQTt315CIFih5QpJp5OZY/edit?usp=sharing. ## Clean dependency management in CMakeLists; - SofaFramework; - Moved to SofaHelper: Boost, OpenGL, GLEW, GTest, Eigen, JSON, FFMPEG_exec ; - Removed (not needed by any SofaFramework module): TinyXML, ZLIB ; - SofaMisc; - Added to SofaMiscTopology: ZLIB; - Added to SofaMiscFem: Newmat; - SofaGeneral; - Added to SofaDenseSolver: Newmat; - Added to SofaGeneralLoader: ZLIB; - SofaGui; - Moved to SofaGuiQt: Qt + lots of options about QtViewer, QGLViewer, VSync, ...; - Modularized modules (oh yeah); - SofaPreconditioner: removed Newmat, added SofaSparseSolver; - SofaExporter: added ZLIB; - Plugins; - SofaMiscCollision: added SofaDistanceGrid; - SofaImplicitField: added SofaPython; - Registration: removed SofaOpenglVisual; - image: added ZLIB; - Flexible: added SofaPython. ## Rework all YYY_HAVE_XXX variables to reduce their scope. This is important for future global modularization of SOFA. - Variables are now named upon their module. . - Whenever you need to use the YYY_HAVE_XXX of another module, you surely should declare your own MYMODULE_HAVE_XXX instead. - All those new YYY_HAVE_XXX variables are booleans, so they can be used in CMake with `if(YYY_HAVE_XXX)` and in C++ (if correcly propagated via a config.h.in file) with `#if YYY_HAVE_XX` or `if(YYY_HAVE_XXX)`. - Add sofa_find_package and sofa_set_bool macros to auto create YYY_HAVE_XXX variables. - Edit sofa_install_targets to call `configure_file()` on any *.h.in found in target sources (the sources that are given to `add_library()`). :warning: Here is a quick tuto about [how to correctly add and propagate a dependency](https://gist.github.com/guparan/0b0ed00ad60b740f85b794cdff255229). ## Rework #1121 to avoid nested projects. - Use SOFA_NO_OPENGL to build an OpenGL-free version of SofaGuiQt. _________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1137:1037,variab,variables,1037,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1137,1,['variab'],['variables']
Modifiability,"pendicular to the local surface around each vertex (should be straight perpendicular to a planar surface around the center and around 45 degrees in the borders, since the vertices touch two different faces there). ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: v20.12 branch at commit ee7664e, v20.12.00 binaries; - State: build directory. **Command called (to copy in a .scn/xml file)**. ```txt. <?xml version=""1.0"" ?>. <Node name=""root"" dt=""0.1"" gravity=""0 0 0"">. 	<VisualStyle displayFlags=""showBehavior hideVisual hideCollision"" />. 	<EulerImplicit name=""cg_odesolver"" printLog=""false"" />; 	<CGLinearSolver iterations=""25"" name=""linear solver"" tolerance=""1.0e-9"" threshold=""1.0e-9"" />; 	; 	<RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; 	<RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->; 	<RequiredPlugin pluginName='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver, ]-->; 	<RequiredPlugin pluginName='SofaOpenglVisual'/> <!-- Needed to use components [OglModel, ]-->; 	; 	; 	<!-- The object to export -->; 	<Node name=""MyRegularGrid"">. 		<MechanicalObject name=""mo""/> ; 		<UniformMass vertexMass=""0.2"" />; 		<RegularGrid name=""hexaGrid"" nx=""6"" ny=""6"" nz=""4"" xmin=""-10.0"" xmax=""10.0"" ymin=""-10.0"" ymax=""10.0"" zmin=""0"" zmax=""0.50""/>; 		<HexahedronSetTopologyContainer name=""Topo"" src=""@hexaGrid"" />		; 		<HexahedralFEMForceField name=""FEM"" youngModulus=""1e13"" poissonRatio=""0.3"" method=""large"" />; 		; 		<!-- Visual node to allow the exportation -->; 		<Node name=""VisualNode"" >; 			<OglModel name=""Visual"" color=""green"" />; 			<IdentityMapping input=""@.."" output=""@Visual"" /> ; 		</Node>; 		; 		<OBJExporter name=""export_OBJ"" filename=""C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/regularGrid5x5"" exportAtBegin=""true"" exportEveryNumberOfSteps=""0"" />; 		; 	</Node>; 	. </",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:2154,plugin,pluginName,2154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,4,['plugin'],['pluginName']
Modifiability,"piled binary file:; `./SOFA_v21.12.00_Linux.run`; after that I run:; `./runSofa-21.12.00`; And I got the errors; ```; ./runSofa-21.12.00 ; ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/libSofa.Helper.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/libSofa.SimulationCore.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../plugins/SofaValidation/lib/../../../lib/libSofa.Type.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/../lib/libSofaBaseMechanics.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/../plugins/SofaUserInteraction/lib/../../../plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so.21.12.00); ./runSofa-21.12.00: /lib/x86_64-linux-gnu/libm.so.6: version `GLIBC_2.29' not found (required by /home/maxim/SOFA/v21.12.00/bin/../lib/../plugins/SofaUserInteraction/lib/../../../plugins/SofaDeformable/lib/libSofaDeformable.so.21.12.00); ```; **Expected behavior**; I think It should work, at least. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 18.04""; - Version of SOFA: SOFA_v21.12.00. **Command called**. ```; gcc --version; gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0; Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```. What you think, probably is better solution to build the Sofa-framework from source (github)? Or there exist some approach to use prexompiled binaries on the Ubuntu 18.04.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3169:1288,plugin,plugins,1288,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3169,4,['plugin'],['plugins']
Modifiability,"piler. ; - The default behavior of the global `PluginRepository`, was changed by c5a19fe for absolutely no good reasons.; It breaks a very basic functionaliy ( you can always load a library that is in your working directory ), also this change had some **interesting** side effects when basically you write a unit test which relies on; a scene file that uses a `RequiredPlugin`... that shortcoming was somewhat hidden by having all tests relying on `SofaGTest`, whose sole reason of being is to actually amend c5a19fe by populating the PluginRepository with the current working dir. Some additional functionalities are added to `RequiredPlugin` by this PR, namely the ability to specify other suffixes ( or no suffix at all ) to prepend when attemtping to load a plugin with a name hint. . # CHANGELOG ; FIX; [SofaHelper]; - Restore the `SOFA_LIBSUFFIX` behavior with msvc; - `PluginRepository` is initialized to contain the current working directory. CHANGE; [SofaHelper] ; - `PluginManager` : keep only a single version of the `loadPlugin` method. Also the method returns true; even if the plugin is already loaded. Returning false is kept only for real failures, whereby the library could ; not be loaded. If it is important to check wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ; It also gives some more advanced options to extend the plugin search. # Remarks. I do not know which version of the GUI is still in use. However I believe that the widget that can add/remove plugins to the `PluginManager` should be removed since there is no valid reason to ; keep it. I am really not sure about the current state of SofaGTestMain. It is hidden somewhere in the folder hierarchy (inside tools directory), and its existence seems to imply that you cannot write a unit test inside sofa without relying ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:1496,Plugin,PluginManager,1496,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,1,['Plugin'],['PluginManager']
Modifiability,plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [Plugi,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6840,Plugin,PluginManager,6840,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plug,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:7071,Plugin,PluginManager,7071,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [WARNING] [SparseLDLSolver(SparseLDLSolver)] Template is empty; By default SparseLDLSolver uses blocks with a single double (to handle all cases of simulations).; If you are using only 3D DOFs, you may consider u",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:33868,Plugin,PluginManager,33868,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with ch",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9210,Plugin,PluginManager,9210,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/sto,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:7835,Plugin,PluginManager,7835,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithD",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:7643,Plugin,PluginManager,7643,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/Re",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:7524,Plugin,PluginManager,7524,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelW",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6775,Plugin,PluginManager,6775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,pment/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plug,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:4936,Plugin,PluginManager,4936,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"pology; [WARNING] [ObjectFactory] Class already registered: SphereGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereQuadTopology; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [WARNING] [ObjectFactory] Class already registered: CenterPointTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Edge2QuadTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Hexa2QuadTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Hexa2TetraTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: IdentityTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Mesh2PointMechanicalMapping<Vec3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: Mesh2PointTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Quad2TriangleTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: SimpleTesselatedHexaTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: SimpleTesselatedTetraMechanicalMapping<Vec3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: SimpleTesselatedTetraTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: SubsetTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Tetra2TriangleTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Triangle2EdgeTopologicalMapping; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MechanicalStateController<Ri",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:27464,Plugin,PluginManager,27464,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"ponent"",; ""Sofa.Component.Constraint.Projective"",; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ""Sofa.Component.Collision.Response.Contact"",; ""Sofa.Component.Setting"",; ""Sofa.Component.AnimationLoop"",; ""Sofa.Component.Collision.Geometry"",; ""Sofa.Component.Constraint.Lagrangian.Correction"",; ""Sofa.Component.LinearSolver.Iterative"",; ""Sofa.Component.Constraint.Lagrangian.Solver"",; ""Sofa.Component.Topology.Container.Constant""]. rootNode.findData('gravity').value=[0,0,-10];; rootNode.findData('dt').value=0.01; ; # Plugin loading; rootNode.addObject('RequiredPlugin', pluginName=pluginNameList, ; printLog='0'). # Rootnode attributes; rootNode.addObject('FreeMotionAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('GenericConstraintSolver', maxIterations='2000', tolerance='1e-9') ; rootNode.addObject('BackgroundSetting', color='0 0.168627 0.211765'). # Scene settings; confignode = rootNode.addChild(""Config""); confignode.addObject(""OglGrid"", nbSubdiv=10, size=1000); confignode.addObject('OglSceneFrame', style=""Arrows"", ; alignment=""TopRight""). # Collision component; rootNode.addObject('DefaultPipeline'); rootNode.addObject('BruteForceBroadPhase'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance', name='Proximity', alarmDistance=""1"", contactDistance=""0.5""); rootNode.addObject('DefaultContactManager', name=""Response"", response=""PenalityContactForceField""). ; # Membrane; membrane=rootNode.addChild(""Membrane""). membrane.addObject(""EulerImplicitSolver""); membrane.addObject(""CGLinearSolver"", iterations='2000', tolerance='1e-9', threshold='1e-9'). membrane.addObject('MeshGmshLoader', name='membraneCoarse', ; filename='FossaOvalisV2.msh'); ; membrane.addObject('TetrahedronSetTopologyContainer', ; name='membraneTopo', src='@membraneCoarse'); membrane.addObject('TetrahedronSetTopologyModifier'); membrane.addObject('TetrahedronSetGeometryAlgorithms',; name='membraneAlgo')",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3810:2016,Config,Config,2016,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3810,2,"['Config', 'config']","['Config', 'confignode']"
Modifiability,ponent.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6b,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:10033,Plugin,PluginManager,10033,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ponent.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:10170,Plugin,PluginManager,10170,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ponent.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:4226,Plugin,PluginManager,4226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,pository paths = /Users/hemingshan/Code/sofa/src/share:/Users/hemingshan/Code/sofa/src/examples:/Users/hemingshan/Code/sofa/build:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] GuiDataRepository paths = /Users/hemingshan/Code/sofa/src/applications/projects/runSofa/resources:/Users/hemingshan/Code/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Compone,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:1648,Plugin,PluginManager,1648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"project is huge and still requires a lot of iterations to get the best refactoring process but we are going in the right direction :+1: . ## Discussions; It was decided to push all NG changes to [a specific NG branch](https://github.com/sofa-framework/sofa/tree/ng) on sofa-framework.; Still, all the developments will go through the PR process. Reminder: your feedback is VERY important, we need it to adapt our work and minimize future rollbacks. **Do not hesitate to put any comment in the pull-requests.**. ## Refactoring and adapting SPM for Sofa.Component.Utils. SPM is the set of scripts we use to make our work easily reproducible. You can check it out [here](https://github.com/guparan/sofa2ng). This work made me realize that it will be very hard, if not impossible, to anticipate every subtle change needed by the refactoring.; - Do we want SPM to be an all inclusive script to refactor completely SOFA? ; every refactoring is unique and needs to change SPM ; -> namespace handling ; -> includes refactoring; - Or should we prefer it to be an easy-to-use script to **bootstrap** any refactoring? ; -> very specific changes will have to be done by hand. I propose to go for solution 2 and to provide a git patch covering the work done after SPM job (fixing includes, fixing namespaces, ...). The progress of this task is **85%** since I now have to create the patch and to provide everything in the PR. ## Moving on with Sofa.Helper.Bvh; Following [the latest iteration on NG architecture](https://annuel2.framapad.org/p/sofang-v3) and Damien's first draft in his [cleanTheMessStep1](https://github.com/SofaDefrost/sofa/tree/cleanTheMessStep1/ng) branch, I started refactoring SofaFramework with Sofa.Helper.Bvh. This task needed me to heavily change/adapt SPM. It contributed to make me prefer solution 2 above. The progress of this task is **60%**. TODO:; - update the recipe with latest SPM changes (namespace handling); - adapt SPM output for smooth transition from SOFA; - create the p",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-385973811:971,refactor,refactor,971,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-385973811,4,['refactor'],"['refactor', 'refactoring']"
Modifiability,"r INCLUDE_INSTALL_DIR; - [SofaMacros] ADD EXAMPLE_INSTALL_DIR to sofa_create_package; - [SofaMacros] Improve sofa_set_python_directory macro; - [SofaPython] Wider dir search for env loading; - [SofaGuiQt] Remove VSync message; - [package.cmake] Do not force CMAKE_BUILD_TYPE + Enable more plugins. ### [[DiffusionSolver] MOVE from image/extlibs to a real plugin](https://github.com/sofa-framework/sofa/commit/54f49d039aadaffd57a1d7f8ebab3af82e407674); I see no reason not to do that. Dependencies to DiffusionSolver are simpler this way. ### [[CImgPlugin] CLEAN include directory](https://github.com/sofa-framework/sofa/commit/1a617d5350f74ac4a816255960d92638a26cba1b); Sources moved to `src`. No more `../` horror in CImgPlugin include directories. ## Other changes. - [SofaHelper] FIX DynamicLibrary altered search path (Windows only) ; Needed to prefer `bin` libraries over neighboor libraries; - [SofaFramework] FIX typo in config.h.in; - [runSofa] Check if plugins dir exists before adding to PluginRepository; - [SofaTest] FIX SofaPython finding in *Config.cmake.in; - [plugins] ADD missing *Config.cmake.in files; Needed to use them as real plugins; - [All] Improve sofa_copy_libraries and sofa_install_libraries macros; Make them easier to use; - [CMake] Rename sofa_set_python_directory into sofa_install_pythonscripts; Clearer name in my opinion + using CMake multiValueArgs; - [CMake] Update package.cmake to enable plugins; Prepare package.cmake to produce binaries with all plugins from ""options"" configuration.; - [SofaImplicitField] FIX tests enabling; - [CMake] CLEAN package.cmake; - [SofaSimulationCore] Handle reload differently in SceneLoader::Listener; Needed to disable scene checks on reload.; - [SofaGraphComponent] Disable scene checks on reload; Needed by live editor (which reloads the scene every time the file is changed).; - [plugins] Remove commented lines in CMakeFiles. ______________________________________________________; <!--- Please leave this at the end of you",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:3907,plugin,plugins,3907,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,3,"['Config', 'Plugin', 'plugin']","['Config', 'PluginRepository', 'plugins']"
Modifiability,"r a successful build, I have the following trace when running:. ```; [INFO] [runSofa] PluginRepository paths = /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/collections:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib; [INFO] [runSofa] DataRepository paths = /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/examples:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/runSofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/qt; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:948,config,config,948,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['config'],['config']
Modifiability,"r for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/image/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Flexible/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Compliant/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/python3/site-packages' to sys.path; [INFO] [PluginManager] Loaded plugin: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/libSofaPython3.so; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Components/Components.py ; ModuleNotFoundError: No module named 'Sofa.Components'. At:; Components.py(4): <module>; <frozen importlib._bootstrap>(219): _call_with_frames_removed; <frozen importlib._bootstrap_external>(783): exec_module; <frozen importlib._bootstrap>(686): _load_unlocked; <frozen importlib",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:1543,plugin,plugins,1543,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['plugin'],['plugins']
Modifiability,"r log. I am trying to run lapgym repo implementation , reach environment. Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1206,Plugin,Plugin,1206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['Plugin'],['Plugin']
Modifiability,"r sofa]$ /home/sergei/Source_code/Sofa_development/sofa/build_release/bin/runSofa -l /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/libSofaPython3.so /home/sergei/Optimus_test/test_scene.py ; [ERROR] [FileSystem::isDirectory()] /home/sergei/Source_code/Sofa_development/sofa/build_release/share/sofa/gui/runSofa: No such file or directory; [WARNING] [SofaEigen2Solver] SofaEigen2Solver is deprecated; Eigen classes are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = /home/sergei/Source_code/Sofa_development/Optimus/build_release:/home/sergei/Source_code/Sofa_development/SofaAuxiliaryComponents/build_release:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib; [INFO] [runSofa] DataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager]",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:7756,Plugin,PluginRepository,7756,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,2,"['Plugin', 'plugin']","['PluginRepository', 'plugins']"
Modifiability,r.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elasti,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:3306,Plugin,PluginManager,3306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"rSolver` API ; - rename `applyContactForce` API method into `applyConstraintForce`. This method is no longer responsible for applying the corrective motion, but just to compute it. ; - `buildComplianceMatrix` API method needs to be passed a `ConstraintParams` so that concrete instances of `LinearSolver` can retrieve the `MatrixDerivId` that points to the constraint jacobian.; ; FIX. [SofaConstraint]; - `GenericConstraintSolver` block gauss seidel can support arbitrary size of blocks. The previous implementation had an hard coded limit of 6 for the block size. UPDATES. [SofaSimulationCore]; - Adapted `AnimateVisitor`, `MechanicalGetConstraintJacobianVisitor` and `MechanicalResetConstraintVisitor` to the changes introduced in `BaseMechanicalState` API. [SofaBaseMechanics] ; - `MechanicalObject` dynamically allocated state vectors are given a name and a owner like any other Data. As a result, these dynamic state vectors can be displayed by the GUI. Also adapted the code to the API changes introduced in `BaseMechanicalState` API. [SofaMeshCollision]; - Some contact mappers `updateXfree()` method were not calling `applyJ` and therefore were not propagating the free velocity towards contact dofs, resulting in segfault when solving constraints in velocity mode. . [SofaConstraint]; - `GenericConstraintSolver` accumulates the constraint lambdas towards independant dofs, so that non linear mappings can compute the geometric stiffness induced by the constraint forces from the previous time step.; - `FreeMotionAnimationLoop` assembles mapping geometric stiffness when possible. It also uses a single mapping linearisation within the time step. The solving step becomes very similar to the one explained in the ""Stable Constraints"" paper, when the compliance of the constraint is equal to zero.; - `BilateralConstraintResolutionNDofs` uses Eigen library to factorize a constraint block of arbitrary size using LDLT decomposition.; - `ConstraintAnimationLoop` minor changes introduced to ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459:4190,adapt,adapted,4190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459,1,['adapt'],['adapted']
Modifiability,r] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/he,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6079,Plugin,PluginManager,6079,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,r] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Use,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:5963,Plugin,PluginManager,5963,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,r] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:3032,Plugin,PluginManager,3032,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"r] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWith",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6548,Plugin,PluginManager,6548,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configuring incomplete, errors occurred!; See also ""/home/giang/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/home/giang/sofa/build/CMakeFiles/CMakeError.log"".; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8561,plugin,plugins,8561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815,4,"['Config', 'plugin']","['Configuring', 'plugin', 'plugins']"
Modifiability,"rackOnly, new Callback(this, callback)); ```. When reinit is called on the component, all callbacks are called and the update class is called (maybe it's a mistake, maybe only the callbacks should be called..). Then outputs are set to dirty, and an IdleEvent visitor is propagated:; ```; void ImplicitDataEngine::reinit(); {; cleanTrackers();; update();; setDirtyOutputs();; sofa::core::objectmodel::IdleEvent ie;; sofa::simulation::PropagateEventVisitor v(; sofa::core::ExecParams::defaultInstance(), &ie);; this->getContext()->getRootContext()->executeVisitor(&v);; }; ``` . This allows for a complete and instant refresh of all components taking as an input the dirty outputs without calling the previous components in the pipeline again.; Limitations are that those following components have to be initialized AFTER (in terms of scene graph, so either in subnodes, or after the current engine, in the same node). Another feature that I don't like much but that was requested by someone who was supposed to use and contribute to my plugin but never did, is the ""autolink"" feature:. <MySofaORComponent name=""mycomp"" autolink=""true"" />. This field allows you to *implicitely* link your data, so that you could avoid setting dozens of fields in your scene description file. The way if works is quite basic:; If autolink is true, then when calling addInput, the internal code checks if the variable has been set. If it has been it doesn't do anything, but if it has:; a previous ImplicitDataEngine in the graph is searched for and if it contains a matching variable with a similar name, it binds them together by calling setParent() on the data. If not, the next engine is searched backwards and the same operation is done, recursively until reaching the first engine in the current node. If AUTOLINK is set to true, then a big fat msg_advice() is printed in the console, warning the user that this implicit binding can potentially do things they do not expect...; Limitations are, again, that:; - It ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367473816:3248,plugin,plugin,3248,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367473816,1,['plugin'],['plugin']
Modifiability,"raid/hx/sigma7_hx/sdk-3.14.0/lib/release/lin-x86_64-gcc/libdhd.a(dhdComUSB-libusb.o)：in function‘dhdUSBGetDeviceCountList(int*, int*, int*, int)’：; dhdComUSB-libusb.cpp:(.text+0x215)：undefined reference to ‘libusb_init’; dhdComUSB-libusb.cpp:(.text+0x24e)：undefined reference to ‘libusb_get_device_list’; dhdComUSB-libusb.cpp:(.text+0x297)：undefined reference to ‘libusb_get_device_descriptor’; dhdComUSB-libusb.cpp:(.text+0x2eb)：undefined reference to ‘libusb_free_device_list’; dhdComUSB-libusb.cpp:(.text+0x30c)：undefined reference to ‘libusb_exit’; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:1832,Plugin,PluginManager,1832,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,2,['Plugin'],"['Plugin', 'PluginManager']"
Modifiability,"raintCorrection with `rotations=""true""` now **requires** to have a RotationFinder. PrecomputedConstraintCorrection has a hard dependency on TetrahedronFEMForceField, to get rotations.; (hence calling a a function of TetraFEM); It can also get rotations if it detects a component implemented RotationFinder<T>.; But TetrahedronFEMForceField is already implementing BaseRotationFinder taking a BaseMatrix*.; RotationFinder<T> inherits BaseRotationFinder, so I made TetrahedronFEMForceField implementing RotationFinder<T> instead. (which adds an other method to implement); Finally, PrecomputedConstraintCorrection only needs RotationFinder<T> now. IMO, ; - BaseRotationFinder implemented in TetrahedronFEM & HexahedronFEM only and used in WarpPreconditioner;; - RotationFinder<T> (implemented by nobody in the sofacode base but apparently by one external plugin @pedroperrusi) and used by PrecomputedConstraintCorrection, WarpPreconditioner and PrecomputedWarpPreconditioner;. would really need a refactoring or some re-working.; Those two were defined more or less in the same time, in 2006 (!) in the early days of SOFA. Some cleaning in PrecomputedConstraintCorrection as well; and this PR made me wonder the never-defined preprocessor definition NEW_METHOD_UNBUILT in PrecomputedConstraintCorrection (@ChristianDuriez ?). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2250:1157,refactor,refactoring,1157,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2250,1,['refactor'],['refactoring']
Modifiability,"rangian.Correction"", # [LinearSolverConstraintCorrection]; ""Sofa.Component.Constraint.Lagrangian.Solver"", # [GenericConstraintSolver]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.IO.Mesh"", # [MeshOBJLoader]; ""Sofa.Component.LinearSolver.Direct"", # [SparseLDLSolver]; ""Sofa.Component.Mapping.Linear"", # [BarycentricMapping]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.FEM.Elastic"", # [HexahedronFEMForceField]; ""Sofa.Component.StateContainer"", # [MechanicalObject]; ""Sofa.Component.Topology.Container.Constant"", # [MeshTopology]; ""Sofa.Component.Topology.Container.Dynamic"", # [DynamicSparseGridGeometryAlgorithms,DynamicSparseGridTopologyContainer,Dyna; ""Sofa.Component.Topology.Container.Grid"", # [SparseGridTopology]; ""Sofa.Component.Visual"", # [VisualStyle]; ""Sofa.GL.Component.Rendering3D"", # [OglModel]; ]. def createScene(root: Sofa.Core.Node):; plugin_set = set(PLUGINS); for plugin in plugin_set:; root.addObject(""RequiredPlugin"", name=plugin). root.gravity = [0.0, 0.0, -9.81 * 100.0]; root.dt = 0.01. root.addObject(""FreeMotionAnimationLoop""); root.addObject(; ""VisualStyle"",; displayFlags=[; ""showVisual"",; ""showForceFields"",; ""showBehaviorModels"",; ],; ). root.addObject(""CollisionPipeline"", depth=6, verbose=False, draw=False); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""MinProximityIntersection"", name=""Proximity"", alarmDistance=0.5, contactDistance=0.3); root.addObject(""CollisionResponse"", response=""FrictionContactConstraint""); root.addObject(""GenericConstraintSolver""). scene_node = root.addChild(""scene""); helper_topo = scene_node.addObject(; ""SparseGridTopology"",; n=[4, 6, 4],; fileTopology=""mesh/liver.obj"",; ). liver_node = scene_node.addChild(""liver""); liver_node.addObject(""DynamicSparseGridTopologyContainer"", src=helper_topo.getLinkPath()); liver_node.addObject(""DynamicSparseGridTopologyModifier""); live",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4796:2255,PLUGIN,PLUGINS,2255,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4796,2,"['PLUGIN', 'plugin']","['PLUGINS', 'plugin']"
Modifiability,"ransitional period this should be removed. . The current WIP is in the following branch:; https://github.com/sofa-framework/sofa/compare/master...SofaDefrost:splitSofaVolumetricDataSquashed. The result is to have:; ```; plugins/SofaDistanceGrid/; - components/collision/BarycentricPenalty, DistanceGridCollision, FFDDistanceGrid, RigidDistanceGird; - components/forcefield/DistanceGridForceFIeld. plugins/SofaImplicitField/ ; - components/geometry/ScalarField (base class); - components/geometry/DiscreteGridField (inherit from ScalarField); - components/geometry/SphericalField (inherit from ScalarField); - components/geometry/otherToComeFromDefrost; - components/mapping/ImplictSurfaceMapping; - deprecated/ImplicitSurfaceContainer (override) components/geometry/DiscreteGridField ; - deprecated/InterpolatedImplicitSurface (override) components/geometry/DiscreteGridField; - deprecated/SphereSurface (override) component/geometry/SphericalField; ```. ...of course we need to add test to all these classes & refactor the MHD loading parts....etc... . Please have a quick look at it and provide feedback on the general way to manage this kind of changes (eg do we really need to keep the SofaVolumetricData transitional plugin or do we allow a more breaking approach and directly remove the SofaVolumetricData with a ChangeLog entry ?). I would be very happy to have opinion & help to be sure to take the right direction resulting PR that match everyone's needs...@jeremieAllard, @fjourdes, @hugtalbot , @guparan , @thomas-lemaire , @matthieu-nesme, @maxime-tournier, @bruno-marques, @bcarrez, @EulalieCoevoet . DM. EDIT: If you are curious about the feature we are adding... it is about having a tetrahedralMesh with CGAL straight out of an implicit function provided in python (and cython if you care about performances)...more on that later. . EDIT2: I changed the url of the branch; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-fra",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/388:2155,refactor,refactor,2155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/388,1,['refactor'],['refactor']
Modifiability,"raph entries. This is why the initial design was that there is no ""path"" concept at this level.; > ; > My current approach to handle this kind of scenario was to implement an easing function like that:; > ; > ```c++; > std::string sofa::helper::objectmodel::getPathName(Base* o); > {; > BaseNode *node = dynamic_cast<BaseNode>(o);; > if(node); > return node->getPathName();; > BaseObject *object = dynamic_cast<BaseNode>(o);; > if(object); > return object->getPathName();; > ...; > }; > ```; > ; > To avoid having if/else and dynamic cast at every call and thus easing the readability on the caller's.; > But I agree with your that factoring them out in Base would make sense. Actually some refactoring of BaseNode/Node/DAGNode/BaseContext would also make sense given how hard these are interleaved and unclear to most of the developpers. Let's get rid of BaseContext! ;); More seriously, I was also using easing functions before, but I noticed that I was often just duplicating the code whenever I needed it, and felt like having it in Base made more sense, but I must say that I would have preferred a virtual pure method there.. your alternative (adding in SofaCore an easing function in the sofa::core::objectmodel or sofa::helper::objectmodel scope) makes sense to me, solves the problem of having an extra function to override when inheriting Base.; Do you know if there is an improvement in perfs when using toBaseNode() / toBaseObject() instead of a dynamic_cast here?. I would not bet too much on performance improvement without making small benchmark. But in a function that basically returns strings build by concatenating ... I would say this is probably very small. . In addition it has to be noted that using a getPathName() explingn function with if/else has a linear complexity in the amount of possible types (number of if/else) while a virtual getPathName in Base has a constant cost. But again...the calling costs is probably very small compared to what the function actually do :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1455#issuecomment-678138769:1486,inherit,inheriting,1486,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1455#issuecomment-678138769,1,['inherit'],['inheriting']
Modifiability,"rc/sofa/core/objectmodel/Link.h:302: warning: bitwise operation between different enumeration types ‘sofa::core::objectmodel::TLink<sofa::core::objectmodel::BaseObject, sofa::core::objectmodel::BaseObject, 7>::<unnamed enum>’ and ‘sofa::core::objectmodel::BaseLink::LinkFlagsEnum’ is deprecated [-Wdeprecated-enum-enum-conversion]; /linuxdata/sofa/src/current/Sofa/framework/Core/src/sofa/core/objectmodel/Link.h:302:37: warning: bitwise operation between different enumeration types ‘sofa::core::objectmodel::TLink<sofa::core::objectmodel::BaseObject, sofa::core::objectmodel::BaseObject, 7>::<unnamed enum>’ and ‘sofa::core::objectmodel::BaseLink::LinkFlagsEnum’ is deprecated [-Wdeprecated-enum-enum-conversion]; 302 | #define ACTIVEFLAG(f) ((ActiveFlags & (f)) != 0); | ~~~~~~~~~~~~~^~~~~~; /linuxdata/sofa/src/current/Sofa/framework/Core/src/sofa/core/objectmodel/Link.h:305:81: note: in expansion of macro ‘ACTIVEFLAG’; 305 | typedef LinkTraitsValueType<DestType, DestPtr, ACTIVEFLAG(FLAG_STRONGLINK), ACTIVEFLAG(FLAG_STOREPATH)> TraitsValueType;; | ^~~~~~~~~~; ```; (I dont know why it was only appearing only for the plugin compilation, maybe some warnings flags are added by an external cmake target); Anyway the macro to enable flags was quite dirty to me so I have changed it a little bit. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3714:1337,plugin,plugin,1337,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3714,1,['plugin'],['plugin']
Modifiability,reading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o ; /usr/local/bin/ccache clang++ -Qunused-arguments -Wno-deprecated-declarations -DMultiThreading_EXPORTS -Iinclude -I../applications/plugins/MultiThreading/.. -isystem /usr/local/include -I../SofaKernel/SofaBase/../modules -I../SofaKernel/SofaSimulation/../modules -I../SofaKernel/framework/sofa/core/../.. -I../SofaKernel/framework/sofa/helper/../.. -F/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks -I../SofaKernel/extlibs/eigen-3.2.7 -ISofaKernel/SofaFramework -I../SofaKernel/extlibs/tinyxml -I../SofaKernel/framework/sofa/defaulttype/../.. -I../SofaMisc/../modules -I../SofaKernel/SofaCommon/../modules -isystem=/opt/local/include/Qt -Wall -W -O3 -DNDEBUG -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk -mmacosx-version-min=10.11 -fPIC -DSOFA_MULTITHREADING_PLUGIN -std=gnu++11 -MD -MT applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o -MF applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o.d -o applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o -c ../applications/plugins/MultiThreading/src/TaskSchedulerBoost.cpp; ../applications/plugins/MultiThreading/src/TaskSchedulerBoost.cpp:192:18: error: overload resolution selected deleted operator '='; mTaskMutex.v_ = 0L;; ~~~~~~~~~~~~~ ^ ~~; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/atomic:1654:18: note: candidate function has been explicitly deleted; atomic_flag& operator=(const atomic_flag&) = delete;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/atomic:1655:18: note: candidate function has been explicitly deleted; atomic_flag& operator=(const atomic_flag&) volatile = dele,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/316:1141,plugin,plugins,1141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/316,1,['plugin'],['plugins']
Modifiability,"reate a CMake project that depends on the latest SOFA release on MacOS. The following error happen:; ```cmake; CMake Error at /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake:91 (message):; The imported target ""runSofa"" references the file. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/bin/runSofa-22.06.00"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake"". but not all the files it references. Call Stack (most recent call first):; /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiConfig.cmake:55 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/Bindings.SofaGuiConfig.cmake:36 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/BindingsConfig.cmake:34 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); CMakeLists.txt:5 (find_package); ```. **Steps to reproduce**; 1. Unzip the latest SOFA release for MacOS inside `$SOFA_ROOT`; 2. Create an empty c++ project with the following CMakeLists.txt:; ```cmake; cmake_minimum_required(VERSION 3.20); project(test). find_package(SofaFramework); find_package(SofaPython3). ```; 3. Call cmake using `cmake -DCMAKE_PREFIX_PATH=$SOFA_ROOT .`. **Expected behavior**; No cmake error. ---------------------------------------------. ### Environment. **Context**. - System: MacOS; - Version of SOFA: release 22.06.00.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3485:1134,plugin,plugins,1134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3485,1,['plugin'],['plugins']
Modifiability,rebase (to clear the previous failing scenes) +; ignore scene from the Geomatic plugin,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2115#issuecomment-853025370:80,plugin,plugin,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2115#issuecomment-853025370,1,['plugin'],['plugin']
Modifiability,"recated-declarations -DMultiThreading_EXPORTS -Iinclude -I../applications/plugins/MultiThreading/.. -isystem /usr/local/include -I../SofaKernel/SofaBase/../modules -I../SofaKernel/SofaSimulation/../modules -I../SofaKernel/framework/sofa/core/../.. -I../SofaKernel/framework/sofa/helper/../.. -F/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk/System/Library/Frameworks -I../SofaKernel/extlibs/eigen-3.2.7 -ISofaKernel/SofaFramework -I../SofaKernel/extlibs/tinyxml -I../SofaKernel/framework/sofa/defaulttype/../.. -I../SofaMisc/../modules -I../SofaKernel/SofaCommon/../modules -isystem=/opt/local/include/Qt -Wall -W -O3 -DNDEBUG -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.12.sdk -mmacosx-version-min=10.11 -fPIC -DSOFA_MULTITHREADING_PLUGIN -std=gnu++11 -MD -MT applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o -MF applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o.d -o applications/plugins/MultiThreading/CMakeFiles/MultiThreading.dir/src/TaskSchedulerBoost.cpp.o -c ../applications/plugins/MultiThreading/src/TaskSchedulerBoost.cpp; ../applications/plugins/MultiThreading/src/TaskSchedulerBoost.cpp:192:18: error: overload resolution selected deleted operator '='; mTaskMutex.v_ = 0L;; ~~~~~~~~~~~~~ ^ ~~; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/atomic:1654:18: note: candidate function has been explicitly deleted; atomic_flag& operator=(const atomic_flag&) = delete;; ^; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/atomic:1655:18: note: candidate function has been explicitly deleted; atomic_flag& operator=(const atomic_flag&) volatile = delete;; ^; 1 error generated.; ```. This plugin should either be updated with the new boost API, or get rid of boost dependency.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/316:1240,plugin,plugins,1240,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/316,1,['plugin'],['plugins']
Modifiability,"rectory ( hence the ""./"" ) of the applications since on windows platform. By default, on windows the dlls are located in the same directory as the application. For example `runSofa` and `SofaPython.dll` are both in the same directory; - the `../lib` directory for other platforms like linux, where the plugins are usually stored in a `lib` sub folder of the parent directory where the application reside. For example from the directory where the `runSofa` executable is, you can look for the directory where `SofaPython.lib` is located by doing `cd ../lib`. These paths are relative and are compatible both with a build tree and an install tree. Prior to f93e2b9 the PluginRepository was empty by default, leaving all the executables the responsibility to fill it with these values. Behavior which was changed multiple times compared to ca0402d for a reason yet to be explained. The side effect this change introduced was the requirement to have every unit test executable which attempts to load a plugin to explicitly fill the PluginRepository with the paths where the libraries are located with respect to the executable. This requirement was covered by having most of the unit tests depend on SofaGTest which initialize these default paths for you, so that test scenes that use a ` RequiredPlugin` component do not utterly fail. ; Unless a **valid** argument is raised, the aforementioned paths should be the default ones to use to initialize the `PluginRepository` global object. ; I strongly believe that would these paths have been properly restored by f93e2b9 (my bad), this PR would have never existed on the first place. I mean how much time has been lost already in fixes, and discussions because of this ! Just to in the end roll back to the implementation that was done 5 years ago which was **just working**. The other thing I mentionned in the comment https://github.com/sofa-framework/sofa/pull/502#issuecomment-340518769 is that there should be only one place to store the paths for po",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/502#issuecomment-342557659:1131,plugin,plugin,1131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/502#issuecomment-342557659,2,"['Plugin', 'plugin']","['PluginRepository', 'plugin']"
Modifiability,"redPlugin name=""Sofa.Component.LinearSolver.Iterative""/> <!-- Needed to use components [CGLinearSolver] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [DiagonalMass] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/> <!-- Needed to use components [TetrahedronSetGeometryAlgorithms TetrahedronSetTopologyContainer TetrahedronSetTopologyModifier] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Topology.Mapping""/> <!-- Needed to use components [Hexa2TetraTopologicalMapping] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->; ...; </Node>; ```. Should be refactored into. ```xml; <Node name=""root"" dt=""0.0001"" gravity=""0 0 0"" >; <Node name=""plugins"">; <RequiredPlugin name=""Sofa.Component.Collision.Geometry""/> <!-- Needed to use components [TriangleCollisionModel] -->; <RequiredPlugin name=""Sofa.Component.Constraint.Projective""/> <!-- Needed to use components [FixedConstraint LinearMovementConstraint] -->; <RequiredPlugin name=""Sofa.Component.Diffusion""/> <!-- Needed to use components [TetrahedronDiffusionFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.Engine.Select""/> <!-- Needed to use components [BoxROI] -->; <RequiredPlugin name=""Sofa.Component.IO.Mesh""/> <!-- Needed to use components [MeshOBJLoader] -->; <RequiredPlugin name=""Sofa.Component.LinearSolver.Iterative""/> <!-- Needed to use components [CGLinearSolver] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [DiagonalMass] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <Re",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3379:1648,refactor,refactored,1648,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3379,1,['refactor'],['refactored']
Modifiability,"release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: CubeTopology; [WARNING] [ObjectFactory] Class already registered: CylinderGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereQuadTopology; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [WARNING] [ObjectFactory] Class already registered: CenterPointTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Edge2QuadTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Hexa2QuadTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Hexa2TetraTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: IdentityTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Mesh2PointMechanicalMapping<Vec3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: Mesh2PointTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Quad2TriangleTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: SimpleTesselatedHexaTopologicalMapping; [WARNING] [",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:26091,Plugin,PluginManager,26091,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"release/install/share/sofa/gui/qt:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/l",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:2718,plugin,plugin,2718,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['plugin'],['plugin']
Modifiability,remove ownerClass and update number in config.h ; EDIT: done.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3279#issuecomment-1253426985:39,config,config,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3279#issuecomment-1253426985,1,['config'],['config']
Modifiability,"remove shadow variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2091:14,variab,variable,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2091,1,['variab'],['variable']
Modifiability,"rename variable. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1874:7,variab,variable,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1874,2,['variab'],['variable']
Modifiability,"res PR #456. This value can be used later on to discover the stiffness coming from the non linear mapping that result from it.; - `BaseMechanicalState` `resetConstraint` and `getConstraintJacobian` methods need to be given a `ConstraintParams` to be able to retrieve the `MatrixDerivId` containing the constraint jacobian. ; - `LinearSolver` API ; - rename `applyContactForce` API method into `applyConstraintForce`. This method is no longer responsible for applying the corrective motion, but just to compute it. ; - `buildComplianceMatrix` API method needs to be passed a `ConstraintParams` so that concrete instances of `LinearSolver` can retrieve the `MatrixDerivId` that points to the constraint jacobian.; ; FIX. [SofaConstraint]; - `GenericConstraintSolver` block gauss seidel can support arbitrary size of blocks. The previous implementation had an hard coded limit of 6 for the block size. UPDATES. [SofaSimulationCore]; - Adapted `AnimateVisitor`, `MechanicalGetConstraintJacobianVisitor` and `MechanicalResetConstraintVisitor` to the changes introduced in `BaseMechanicalState` API. [SofaBaseMechanics] ; - `MechanicalObject` dynamically allocated state vectors are given a name and a owner like any other Data. As a result, these dynamic state vectors can be displayed by the GUI. Also adapted the code to the API changes introduced in `BaseMechanicalState` API. [SofaMeshCollision]; - Some contact mappers `updateXfree()` method were not calling `applyJ` and therefore were not propagating the free velocity towards contact dofs, resulting in segfault when solving constraints in velocity mode. . [SofaConstraint]; - `GenericConstraintSolver` accumulates the constraint lambdas towards independant dofs, so that non linear mappings can compute the geometric stiffness induced by the constraint forces from the previous time step.; - `FreeMotionAnimationLoop` assembles mapping geometric stiffness when possible. It also uses a single mapping linearisation within the time step. The solvi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/459:3824,Adapt,Adapted,3824,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/459,1,['Adapt'],['Adapted']
Modifiability,rgei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_develo,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:4116,Plugin,PluginManager,4116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,rgei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/se,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:4590,Plugin,PluginManager,4590,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"ript:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:3707,plugin,pluginManager,3707,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,2,['plugin'],"['plugin', 'pluginManager']"
Modifiability,rk/Versions/A/QtCore; 0x11202d000 - 0x1120d0fff +libSofaLoader.20.12.01.dylib (0) <DE5355F4-9BB5-3D22-8F91-9A1A725AA3C4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaLoader/lib/libSofaLoader.20.12.01.dylib; 0x11226d000 - 0x11232cfff +libSofaMeshCollision.20.12.01.dylib (0) <F6C0C139-F230-35C9-8301-FAF420509104> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMeshCollision/lib/libSofaMeshCollision.20.12.01.dylib; 0x112530000 - 0x1125abfff +libSofaBaseCollision.20.12.01.dylib (0) <95C00576-DD6A-322D-882E-161945B8AA44> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseCollision.20.12.01.dylib; 0x112691000 - 0x1126a4fff +libSofaObjectInteraction.20.12.01.dylib (0) <BE8051D6-EEAC-3A32-83F0-87F10449D957> /Applications/runSofa.app/Contents/MacOS/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.20.12.01.dylib; 0x1126d7000 - 0x112782fff +libSofaDeformable.20.12.01.dylib (0) <1D2109A8-B58B-3019-9C2F-6475AD697D95> /Applications/runSofa.app/Contents/MacOS/plugins/SofaDeformable/lib/libSofaDeformable.20.12.01.dylib; 0x1128d7000 - 0x112926fff +libSofaRigid.20.12.01.dylib (0) <D9F873DE-3B1D-33A6-B173-DB2F0E0AE833> /Applications/runSofa.app/Contents/MacOS/plugins/SofaRigid/lib/libSofaRigid.20.12.01.dylib; 0x1129c5000 - 0x112bc4fff +libSofaBaseMechanics.20.12.01.dylib (0) <28F9C6C1-AE2D-365E-ACB7-5CED017A9BD6> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseMechanics.20.12.01.dylib; 0x112fe1000 - 0x113004fff +libSofaEigen2Solver.20.12.01.dylib (0) <B6AD28C5-05ED-3A21-89EC-23F18F1E568D> /Applications/runSofa.app/Contents/MacOS/lib/libSofaEigen2Solver.20.12.01.dylib; 0x11303b000 - 0x11310efff +libSofaBaseLinearSolver.20.12.01.dylib (0) <363874FF-A623-3C38-A6F4-B53605330E4E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseLinearSolver.20.12.01.dylib; 0x11330d000 - 0x113490fff +libSofaBaseTopology.20.12.01.dylib (0) <C995D463-CCEF-337F-B896-B6289F75EF4B> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseTopology.20.12.01.dylib; 0x11369e,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:9378,plugin,plugins,9378,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['plugins']
Modifiability,roject.QtWidgets (6.0 - 6.0.2) <3D939EAB-26B6-36B6-AB17-F4D0BF952EC0> /usr/local/Cellar/qt/6.0.2/lib/QtWidgets.framework/Versions/A/QtWidgets; 0x11130c000 - 0x1118a7fff +org.qt-project.QtGui (6.0 - 6.0.2) <E8A9B9CD-A135-383A-B29E-51DD6C04AB18> /usr/local/Cellar/qt/6.0.2/lib/QtGui.framework/Versions/A/QtGui; 0x111a91000 - 0x111aacfff +org.qt-project.QtXml (6.0 - 6.0.2) <626DB273-B152-3E4E-B317-A513D81BD92E> /usr/local/Cellar/qt/6.0.2/lib/QtXml.framework/Versions/A/QtXml; 0x111ac8000 - 0x111ed3fff +org.qt-project.QtCore (6.0 - 6.0.2) <626D1C7B-2DDB-300D-B5DD-5FB170D3C5A0> /usr/local/Cellar/qt/6.0.2/lib/QtCore.framework/Versions/A/QtCore; 0x11202d000 - 0x1120d0fff +libSofaLoader.20.12.01.dylib (0) <DE5355F4-9BB5-3D22-8F91-9A1A725AA3C4> /Applications/runSofa.app/Contents/MacOS/plugins/SofaLoader/lib/libSofaLoader.20.12.01.dylib; 0x11226d000 - 0x11232cfff +libSofaMeshCollision.20.12.01.dylib (0) <F6C0C139-F230-35C9-8301-FAF420509104> /Applications/runSofa.app/Contents/MacOS/plugins/SofaMeshCollision/lib/libSofaMeshCollision.20.12.01.dylib; 0x112530000 - 0x1125abfff +libSofaBaseCollision.20.12.01.dylib (0) <95C00576-DD6A-322D-882E-161945B8AA44> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseCollision.20.12.01.dylib; 0x112691000 - 0x1126a4fff +libSofaObjectInteraction.20.12.01.dylib (0) <BE8051D6-EEAC-3A32-83F0-87F10449D957> /Applications/runSofa.app/Contents/MacOS/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.20.12.01.dylib; 0x1126d7000 - 0x112782fff +libSofaDeformable.20.12.01.dylib (0) <1D2109A8-B58B-3019-9C2F-6475AD697D95> /Applications/runSofa.app/Contents/MacOS/plugins/SofaDeformable/lib/libSofaDeformable.20.12.01.dylib; 0x1128d7000 - 0x112926fff +libSofaRigid.20.12.01.dylib (0) <D9F873DE-3B1D-33A6-B173-DB2F0E0AE833> /Applications/runSofa.app/Contents/MacOS/plugins/SofaRigid/lib/libSofaRigid.20.12.01.dylib; 0x1129c5000 - 0x112bc4fff +libSofaBaseMechanics.20.12.01.dylib (0) <28F9C6C1-AE2D-365E-ACB7-5CED017A9BD6> /Applications/runSofa.app/Contents,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:8753,plugin,plugins,8753,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['plugins']
Modifiability,"rror happen:; ```cmake; CMake Error at /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake:91 (message):; The imported target ""runSofa"" references the file. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/bin/runSofa-22.06.00"". but this file does not exist. Possible reasons include:. * The file was deleted, renamed, or moved to another location. * An install or uninstall procedure did not complete successfully. * The installation package was faulty and contained. ""/Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiTargets.cmake"". but not all the files it references. Call Stack (most recent call first):; /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/collections/SofaGui/lib/cmake/SofaGui/SofaGuiConfig.cmake:55 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/Bindings.SofaGuiConfig.cmake:36 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/BindingsConfig.cmake:34 (find_package); /Users/jnbrunet/Downloads/SOFA_v22.06.00_MacOS/plugins/SofaPython3/lib/cmake/SofaPython3/SofaPython3Config.cmake:86 (include); CMakeLists.txt:5 (find_package); ```. **Steps to reproduce**; 1. Unzip the latest SOFA release for MacOS inside `$SOFA_ROOT`; 2. Create an empty c++ project with the following CMakeLists.txt:; ```cmake; cmake_minimum_required(VERSION 3.20); project(test). find_package(SofaFramework); find_package(SofaPython3). ```; 3. Call cmake using `cmake -DCMAKE_PREFIX_PATH=$SOFA_ROOT .`. **Expected behavior**; No cmake error. ---------------------------------------------. ### Environment. **Context**. - System: MacOS; - Version of SOFA: release 22.06.00. [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/10013148/CMakeCache.txt)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3485:1271,plugin,plugins,1271,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3485,3,['plugin'],['plugins']
Modifiability,rs/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loa,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7328,Plugin,PluginManager,7328,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"rstand that a `find_package` is missing when `#include` fails with ""file not found"" error (at write time if you have a good IDE, at build time otherwise) than with link error (at build time).; Moreover, it will be easier to understand what package is needed for a module by navigating in the include directory.; More details in commit message. ### [[CMake] Make plugins relocatable](https://github.com/sofa-framework/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**. See the RELOCATABLE parameter of sofa_generate_package.; When building and installing SOFA with plugins - internal (in applications/plugins) or external (included with SOFA_EXTERNAL_DIRECTORIES) - the plugins will not be mixed with SOFA anymore.; Instead, they will be installed in their own directory under `<install_prefix>/plugins`.; More importantly, they will be relocatable which means they will behave like if they were built out-of-SOFA.; Principal advantage: we will be able to get redistributable plugin binaries through a classic SOFA build. . ### [Defrost binaries changes for a better install, specifically on MacOS](https://github.com/sofa-framework/sofa/commit/22f3c14a25bf879143fb58403a34d569e8ab727f); - [CMake] FIX install: SofaMiscCollision, SofaDistanceGrid, SofaImplicitField; - [CMake] FIX install on MacOS: differentiate SOFA_BUILD_RELEASE_PACKAGE and SOFA_BUILD_APP_BUNDLE; - [SofaMacros] ADD backward compatibility for INCLUDE_INSTALL_DIR; - [SofaMacros] ADD EXAMPLE_INSTALL_DIR to sofa_create_package; - [SofaMacros] Improve sofa_set_python_directory macro; - [SofaPython] Wider dir search for env loading; - [SofaGuiQt] Remove VSync message; - [package.cmake] Do not force CMAKE_BUILD_TYPE + Enable more plugins. ### [[DiffusionSolver] MOVE from image/extlibs to a real plugin](https://github.com/sofa-framework/sofa/commit/54f49d039aadaffd57a1d7f8ebab3af82e407674); I see no reason not to do that. Dependencies to DiffusionSolver are simpler this way. ### [[CImgPlugin] C",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:2510,plugin,plugin,2510,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['plugin'],['plugin']
Modifiability,"rumentCombined'); InstrumentCombined.addObject('EulerImplicitSolver',rayleighStiffness=0.2,rayleighMass=0.1,printLog='false'); InstrumentCombined.addObject('BTDLinearSolver',subpartSolve='0',verification='0',verbose='0'); InstrumentCombined.addObject('RegularGridTopology',name='meshLinesCombined',nx=60, ny=1, nz=1,xmin=0.0, xmax=1.0,ymin=0, ymax=0,zmin=1, zmax=1); InstrumentCombined.addObject('MechanicalObject',template='Rigid3d',name='DOFs',showIndices='0',ry=-90); InstrumentCombined.addObject('WireBeamInterpolation',name='InterpolCatheter',WireRestShape='@../topoLines_cath/catheterRestShape',radius=1,printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField',interpolation='@InterpolCatheter',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolGuide', WireRestShape='@../topoLines_guide/GuideRestShape', radius=0.9, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='GuideForceField',interpolation='@InterpolGuide',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolCoils', WireRestShape='@../topoLines_coils/CoilRestShape', radius=0.1, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass', name='CoilsForceField', interpolation='@InterpolCoils', massDensity=0.000021); InstrumentCombined.addObject('InterventionalRadiologyController',name='m_ircontroller',template='Rigid3d',printLog='0',instruments='InterpolCatheter InterpolGuide InterpolCoils',startingPos=[0, 0 ,0 ,0 ,-0.7071068, 0, 0.7071068],xtip=[1 ,0 ,0] ,rotationInstrument=[0, 0, 0 ],controlledInstrument=0,step=3,speed=2 ); InstrumentCombined.addObject('LinearSolverConstraintCorrection',printLog='false',wire_optimization='true'); InstrumentCombined.addObject('FixedConstraint',name='FixedConstraint',indices='0'); InstrumentCombined.addObject('RestShapeSpringsForceField',points='@m_ircontroller.indexFirstNode',stiffness=1e8,angularStiffness=1e",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:4267,Adapt,AdaptiveBeamForceFieldAndMass,4267,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243,1,['Adapt'],['AdaptiveBeamForceFieldAndMass']
Modifiability,runSofa should look into system repo for plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1337:41,plugin,plugins,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1337,1,['plugin'],['plugins']
Modifiability,ry] Class already registered: ProjectToLineConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPlaneConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPlaneConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec1d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec6d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plug,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:24245,Plugin,PluginManager,24245,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,ry] Class already registered: ProjectToPointConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec6d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:24591,Plugin,PluginManager,24591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"ryptexd/codex.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/usr/local/share/dotnet:~/.dotnet/tools; --- SOFA_ROOT ---; /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; --- PYTHONPATH ---; /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages:/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages:/path/to/SofaPython3/lib/python3/site-packages:; --- sys.path ---; ['', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/path/to/SofaPython3/lib/python3/site-packages', '/opt/anaconda3/envs/sofarl/lib/python38.zip', '/opt/anaconda3/envs/sofarl/lib/python3.8', '/opt/anaconda3/envs/sofarl/lib/python3.8/lib-dynload', '/opt/anaconda3/envs/sofarl/lib/python3.8/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import Sofa; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; ---------------------------------------; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.0",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:4456,plugin,plugins,4456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,1,['plugin'],['plugins']
Modifiability,"s already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [WARNING] [SparseLDLSolver(SparseLDLSolver)] Template is empty; By default SparseLDLSolver uses blocks with a single double (to handle all cases of simulations).; If you are using only 3D DOFs, you may consider using blocks of Matrix3 to speedup the calculations.; If it is the case, add template=""CompressedRowSparseMatrixMat3x3d"" to this object in your scene; Othe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:34018,Plugin,PluginManager,34018,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"s always a trade-off between abstraction and usability and the overhead of modularization. But yes, there is always an interest in being able to build prefab from other prefab to make complex systems. . - definition of current prefabs, e.g. ElasticObject using a UniformMass?; Prefab just means you have an ""all-in-one"" object. There is no more constraint except from that. So it the choice of the one that make a prefab to decide prefabricating ""what"". That's said it is highly desirable to have set of prefabs that shares common structures and idioms so they are interoperable in the same scene. . Additional point:; - the prefabs implementation in SofaPython3 is only partially working and some fix are required; - there is a far too much limited support for prefab in our user interface, if we are going for generalize their use then additional support should be added.(eg: right-click navigating itno prefab should be implemented, dedicated icons in the scene graph, docbrowser linking the the prefab documentation => so updating the prefab documentation now we managed to fix the sofapython3 one) . - there is also non trivial issues related to design practices, especially on re-usability through inheritance, composition or prototypes. . - there is an issue smoothing transition from a scene to a prefab (visible in the two way by which you can define a prefab, with the python decorator or by in-heriting from Sofa.Prefab). - there is also issues related to the fact that Sofa is relying on the scenegraph to do the simulation, this has the consequence that currently some useful scene-patterns are not easy to make through prefab. I think the work from @alxbilger on refactoring the animation loop and solving relax these constraints... I'm not sure it is at the point there is no more contraint so we can freely move on that. . Probably there is many more on that... but I can for sure make a clear summary of all that are missing before having prefab first class citizen in SofaPython3 :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4206#issuecomment-1740442279:2291,inherit,inheritance,2291,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4206#issuecomment-1740442279,2,"['inherit', 'refactor']","['inheritance', 'refactoring']"
Modifiability,"s should be removed. . The current WIP is in the following branch:; https://github.com/sofa-framework/sofa/compare/master...SofaDefrost:splitSofaVolumetricDataSquashed. The result is to have:; ```; plugins/SofaDistanceGrid/; - components/collision/BarycentricPenalty, DistanceGridCollision, FFDDistanceGrid, RigidDistanceGird; - components/forcefield/DistanceGridForceFIeld. plugins/SofaImplicitField/ ; - components/geometry/ScalarField (base class); - components/geometry/DiscreteGridField (inherit from ScalarField); - components/geometry/SphericalField (inherit from ScalarField); - components/geometry/otherToComeFromDefrost; - components/mapping/ImplictSurfaceMapping; - deprecated/ImplicitSurfaceContainer (override) components/geometry/DiscreteGridField ; - deprecated/InterpolatedImplicitSurface (override) components/geometry/DiscreteGridField; - deprecated/SphereSurface (override) component/geometry/SphericalField; ```. ...of course we need to add test to all these classes & refactor the MHD loading parts....etc... . Please have a quick look at it and provide feedback on the general way to manage this kind of changes (eg do we really need to keep the SofaVolumetricData transitional plugin or do we allow a more breaking approach and directly remove the SofaVolumetricData with a ChangeLog entry ?). I would be very happy to have opinion & help to be sure to take the right direction resulting PR that match everyone's needs...@jeremieAllard, @fjourdes, @hugtalbot , @guparan , @thomas-lemaire , @matthieu-nesme, @maxime-tournier, @bruno-marques, @bcarrez, @EulalieCoevoet . DM. EDIT: If you are curious about the feature we are adding... it is about having a tetrahedralMesh with CGAL straight out of an implicit function provided in python (and cython if you care about performances)...more on that later. . EDIT2: I changed the url of the branch; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/388:2366,plugin,plugin,2366,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/388,1,['plugin'],['plugin']
Modifiability,"s with the group manager. In the group manager, it supposes all the objects in contacts are associated with an ODE solver (since they cannot be stationary). Actually, the collision pipeline check if an object is stationary based on the value of `isSimulated()`. It means it's up to the user to set this Data. If it not done, the object is considered moving and goes to the group manager. The ODE solver is not found, so it is skipped:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L91; And collision response is not created.; In this PR, this case is not skipped and a collision response is created. A scene test has been added to check collision is working with a stationary object. # Fix freeze; This freeze happened before #2047.; It is due to an infinite loop here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L235; This happened because a map was not updated after some merge operations. And we relied on the value in the map, for example here:; https://github.com/sofa-framework/sofa/blob/477747e21ae520fba08cb08f7b66e6f4250a91f8/applications/plugins/SofaMiscCollision/src/SofaMiscCollision/DefaultCollisionGroupManager.cpp#L137. # Fix crash detected in #2047. ## Before #2047; The scene freezes always at the same time. In #2067 I explain that the simulation is deterministic. Now that the freeze is fixed, we can notice a crash still occurs, but after the time step of the freeze. ## After #2047 ; A crash occurs, but not always at the same time step. This is because the simulation is no longer deterministic (because of #2047). . Conclusion: #2047 revealed this crash, but was not the cause. It means that a non-deterministic simulation is not a source of crash. ## Fix; The crash is fixed also by updating the values of",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2076:2220,plugin,plugins,2220,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2076,1,['plugin'],['plugins']
Modifiability,s/2.7/lib/python2.7/lib-tk; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload; /usr/local/lib/python2.7/site-packages; ******************; *** PYTHONPATH ***; /usr/local/lib/python2.7/site-packages. ******************; Numpy found: /usr/local/lib/python2.7/site-packages/numpy/__init__.pyc; ```. When I run it with runSofa (and thus SofaPython):; ```; sofamacbuilder:mac_clang-3.5_default_release sofa$ ./build/bin/runSofa -g batch test.py; [INFO] [runSofa] Loading automatically plugin list in /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaSparseSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPreconditioner.dylib; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPython.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaMiscCollision.dylib; [INFO] [PluginManager] Loaded plu,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:2543,Plugin,PluginManager,2543,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,s/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugi,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:1557,Plugin,PluginManager,1557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,s/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; Barycent,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:1684,Plugin,PluginManager,1684,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,s/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; H,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:1819,Plugin,PluginManager,1819,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,s/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/g,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7481,Plugin,PluginManager,7481,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,s/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. #,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:8530,Plugin,PluginManager,8530,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,s/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/buil,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:8076,Plugin,PluginManager,8076,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,s/sofa_source/sofa/src/examples;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [runSofa] GuiDataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/applications/projects/runSofa/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Releas,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1399,Plugin,PluginManager,1399,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,s67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/st,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:6992,Plugin,PluginManager,6992,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"s; ```. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=False. ```; [INFO] [BatchGUI] 1000 iterations done in 11.3896 s ( 87.799 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.82 1 7.71 510.45 9.73 15.92 9.73 87.39 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True. ```; [INFO] [BatchGUI] 1000 iterations done in 4.48981 s ( 222.726 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.75 1 2.31 522.09 3.32 16.42 3.32 72.50 ......projectMappedMatrices; ```; Note that the timer includes the first iteration which is very very slow. It alters the average. ### Conclusion. We can observe that the parallelism is necessary to take advantage of the constant sparsity pattern. The fastest configuration is now `ConstantSparsityProjectionMethod + areJacobiansConstant=True + parallelProduct=True` compared to `MatrixProjectionMethod + areJacobiansConstant=True` before this PR. It's a speed up of x1.8. For the records, at the beginning of this series of enhancement (https://github.com/sofa-framework/sofa/pull/4443), the reduced diamond run at 44 FPS. Now it is 222 FPS = speed up x5. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merg",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4552:1925,config,configuration,1925,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4552,1,['config'],['configuration']
Modifiability,"sCoils'); topoLines_coils.addObject('EdgeSetTopologyModifier',name='Modifier'); topoLines_coils.addObject('EdgeSetGeometryAlgorithms',name='GeomAlgo', template='Rigid3d'); topoLines_coils.addObject('MechanicalObject',template='Rigid3d',name='dofTopo3'). InstrumentCombined = rootNode.addChild('InstrumentCombined'); InstrumentCombined.addObject('EulerImplicitSolver',rayleighStiffness=0.2,rayleighMass=0.1,printLog='false'); InstrumentCombined.addObject('BTDLinearSolver',subpartSolve='0',verification='0',verbose='0'); InstrumentCombined.addObject('RegularGridTopology',name='meshLinesCombined',nx=60, ny=1, nz=1,xmin=0.0, xmax=1.0,ymin=0, ymax=0,zmin=1, zmax=1); InstrumentCombined.addObject('MechanicalObject',template='Rigid3d',name='DOFs',showIndices='0',ry=-90); InstrumentCombined.addObject('WireBeamInterpolation',name='InterpolCatheter',WireRestShape='@../topoLines_cath/catheterRestShape',radius=1,printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='CatheterForceField',interpolation='@InterpolCatheter',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolGuide', WireRestShape='@../topoLines_guide/GuideRestShape', radius=0.9, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass',name='GuideForceField',interpolation='@InterpolGuide',massDensity=0.00000155); InstrumentCombined.addObject('WireBeamInterpolation', name='InterpolCoils', WireRestShape='@../topoLines_coils/CoilRestShape', radius=0.1, printLog='0'); InstrumentCombined.addObject('AdaptiveBeamForceFieldAndMass', name='CoilsForceField', interpolation='@InterpolCoils', massDensity=0.000021); InstrumentCombined.addObject('InterventionalRadiologyController',name='m_ircontroller',template='Rigid3d',printLog='0',instruments='InterpolCatheter InterpolGuide InterpolCoils',startingPos=[0, 0 ,0 ,0 ,-0.7071068, 0, 0.7071068],xtip=[1 ,0 ,0] ,rotationInstrument=[0, 0, 0 ],controlledInstrument=0,step=3,speed=2 ); InstrumentCombined.addObj",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:3966,Adapt,AdaptiveBeamForceFieldAndMass,3966,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243,1,['Adapt'],['AdaptiveBeamForceFieldAndMass']
Modifiability,"sGPL; - SceneCreator; - SofaPML; ... _any plugins with a GPL licence_; - SofaPlugins(.*) _any other licences or additional private ones in other repos_. Note: as an alternative, for the libs that are currently modules, instead of moving to a generic uninformative ""SofaPlugins"" directory, we could instead move them to the SofaGeneral/SofaAdvanced/SofaMisc directory that already exists and host their main cmake file. 4 advantages to this instead of everything is `applications/plugins`:; 1. one less directory to browse to in order to get to the actual source files; 2. it discourage any assumption that all plugins are/must be in the same directory; 3. clear separation of the different licences, so that we can be sure that a LGPL-only app does not actually include GPL-licenced headers (because of the useful convention to include plugins/lib classes with `MyPlugin/MyClass.h`, all codes must be compiled with options to add to the compiler path the parent of a plugin directory, currently because it is the same parent as plugins with different licences it is difficult to be sure unwanted code is not included); 4. it fits with the way of organizing all codes around collections of libraries, which was the original intent behind Helper/Core/DefaultType within SofaFramework, Simulation* within SofaSimulation, Base* within SofaBase, ..., but which unfortunately was not agreed to with everyone so stuck in years-long discussions and is now broken by adding a ""SofaKernel"" level. As a reminder of the key points of this way of organizing codes, the idea was to make it consistent where the code/targets are found (always within a sub-subdirectory) while allowing to share common scripts/docs/packaging/... at the ""collection"" level instead of copy/pasted within each plugin/library. 2 disadvantages that I see:; 1. it would be useful to also move the other plugins to this new hierarchy (so more files would need to be moved in the end), but this can be done later, plugin-by-plugin, depending",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/482:3372,plugin,plugin,3372,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/482,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"s_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/Compliant/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/Flexible/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/image/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/build/lib/libSofaPython.dylib; [INFO] [Python_scene_test] running /Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py; ERROR: wrong number of arguments; [ERROR] [PythonScript] IndexError: list index out of range; File ""/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py"", line 15, in <module>; DAMPING_COEF = float( sys.argv[1] ). [ERROR] [SofaPython] Script (file:damping) import error; [ERROR] [PythonScriptController(PythonScriptController)] load error (file '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py' not parsable); ../applications/plugins/SofaTest/Python_test.cpp:263: Failure; Failed; python error; [ FAILED ] Batch/Python_scene_test.sofa_python_scene_tests/0, where GetParam() = 48-byte obje",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264176:1167,Plugin,PluginManager,1167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264176,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:6588,plugin,pluginName,6588,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,2,['plugin'],['pluginName']
Modifiability,"scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneC",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:5077,plugin,pluginName,5077,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,2,['plugin'],['pluginName']
Modifiability,"scovered a memory leak that seems to be connected to the collision detection pipeline / models. The scene contains 2 nodes with `MechanicalObject` and `PointCollisionModel`.; I repeatedly load and unload the scene, first with no collision models, then one collision model, and then two collision models.; -> each graph has 3 segments. ```python; import Sofa; import Sofa.Core; import Sofa.Simulation; from enum import Enum. class TestCase(Enum):; ONE_MODEL = 0; TWO_MODELS = 1; NONE = 2. class SimulationHandler:; def __init__(self):. self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, TestCase.NONE); Sofa.Simulation.init(self.root_node). def step(self):; Sofa.Simulation.animate(self.root_node, self.root_node.getDt()). def reload(self, case: TestCase = TestCase.NONE):. Sofa.Simulation.unload(self.root_node); self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, case); Sofa.Simulation.init(self.root_node). def createScene(root, case: TestCase):; plugins = [; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ]; for plugin in plugins:; root.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root.addObject(""DefaultAnimationLoop""); root.addObject(""DefaultPipeline""); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""DefaultContactManager""); root.addObject(; ""LocalMinDistance"",; alarmDistance=5.0,; contactDistance=0.5,; ). node_1 = root.addChild(""child_1""); node_1.addObject(""MechanicalObject"", position=[0, 0, 0] * 5). node_2 = root.addChild(""child_2""); node_2.addObject(""MechanicalObject"", position=[1, 1, 1] * 5). if case == TestCase.ONE_MODEL:; node_1.addObject(""PointCollisionModel""); elif case == TestCase.TWO_MODELS:; node_1.addObject(""PointCollisionModel""); node_2.addObject(""PointCollisionModel""); elif case == TestCase.NONE:; pass. return node_1, node_2. if __name__ == ""__main__"":; simulation = SimulationHandler(). for i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318:1033,plugin,plugins,1033,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318,1,['plugin'],['plugins']
Modifiability,"se arises mostly because of running runSofa from a build directory but you set SOFA_ROOT. It will then tried to load plugins from the install afterwards, etc..., leading to stuff like:. ```; [WARNING] [ObjectFactory] Default template for class DynamicSparseGridGeometryAlgorithms already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec2d>; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec3d>; ....; ```. or with a cryptic error message if you try to use the PluginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, I ackn",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:888,plugin,plugins,888,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"se); VisuOgl = VisuGuide.addChild('VisuOgl'); VisuOgl.activated = True; VisuOgl.addObject('OglModel',name='Visual', color='0.2 0.2 0.8' , material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20', quads='@../ContainerGuide.quads'); VisuOgl.addObject('IdentityMapping', input='@../Quads', output='@Visual'). VisuCoils = InstrumentCombined.addChild('VisuCoils'); VisuCoils.activated= True; VisuCoils.addObject('MechanicalObject',name='Quads'); VisuCoils.addObject('QuadSetTopologyContainer',name='ContainerCoils'); VisuCoils.addObject('QuadSetTopologyModifier',name='Modifier' ); VisuCoils.addObject('QuadSetGeometryAlgorithms', name='GeomAlgo',template='Vec3d'); VisuCoils.addObject('Edge2QuadTopologicalMapping',nbPointsOnEachCircle='10',radius=0.3, input='@../../topoLines_coils/meshLinesCoils',output='@ContainerCoils', flipNormals=True,listening=True); VisuCoils.addObject('AdaptiveBeamMapping', name='visuMapCoils',useCurvAbs='1',printLog='0',interpolation='@../InterpolCoils',input='@../DOFs',output='@Quads',isMechanical='false'); VisuOgl = VisuCoils.addChild('VisuOgl'); VisuOgl.activated = True; VisuOgl.addObject('OglModel',name='Visual', color='0.2 0.8 0.2', material='texture Ambient 1 0.2 0.2 0.2 0.0 Diffuse 1 1.0 1.0 1.0 1.0 Specular 1 1.0 1.0 1.0 1.0 Emissive 0 0.15 0.05 0.05 0.0 Shininess 1 20',quads='@../ContainerCoils.quads'); VisuOgl.addObject('IdentityMapping',input='@../Quads',output='@Visual'). CollisionModel = InstrumentCombined.addChild('CollisionModel'); CollisionModel.addObject('MeshObjLoader',name='meshLoader',filename='D:/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/plugins/BeamAdapter/examples/mesh/phantom.obj',triangulate='true',flipNormals='1'); CollisionModel.addObject('MeshTopology', position='@meshLoader.position', triangles='@meshLoader.triangles'); CollisionModel.addObject('MechanicalObject', name='DOFs1', positi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243:8640,Adapt,AdaptiveBeamMapping,8640,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3483#issuecomment-1345193243,1,['Adapt'],['AdaptiveBeamMapping']
Modifiability,"se/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfur",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10352,Plugin,PluginManager,10352,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"section"", # [NewProximityIntersection]; ""Sofa.Component.Collision.Geometry"", # [LineCollisionModel, PointCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Setting"", # [BackgroundSetting]; ""Sofa.Component.Topology.Container.Dynamic"", # [HexahedronSetTopologyContainer, HexahedronSetTopologyModifier]; ""Sofa.Component.Topology.Container.Grid"", # [RegularGridTopology]; ""Sofa.Component.Visual"", # [VisualStyle]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.FEM.Elastic"", # [HexahedronFEMForceField]; ""Sofa.Component.Topology.Mapping"", # [Hexa2TetraTopologicalMapping]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""DefaultAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showBehaviorModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""DefaultContactManager"", response=""PenalityContactForceField""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=3.0,; contactDistance=1.1,; ). root_node.gravity = [0.0, -98.1, 0.0]. scene_node = root_node.addChild(""scene""). ######################; # Cuttable HEXA Object; ######################; if test_cutting == ""hexa"":; hexa_node = scene_node.addChild(""hexas""); topology_creation_node = scene_node.addChild(""topology_creation""). grid = topology_creation_node.addObject(""RegularGridTopology"", nx=",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3201:2201,plugin,plugin,2201,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3201,1,['plugin'],['plugin']
Modifiability,"sentation in the scene; 3. the extensive use of this representation in the python bindings (especially the linearSpring that has no other purpose that this API). Other than that, it has no real superiority over the proposed parallel representation using a single vector for each spring parameter except for the fact that we don't need to keep coherency over all of the vectors... ; Although the tuple enable more versatile scene description. For example, the input indices can now come from other component while no difficult assembling is needed to build the spring list, we only need to link the data and specify one stiffness that will be generalized to all the springs. . So this is a **_first step_**. It can totally be merged for me. But we still have work to do. It could be done in this PR but I don't know how much time I'll be able to dedicate to it in the near future, and I don't want this work to get lost. Those are the two remaining tasks I've identified :; - [ ] Clean the API by removing one of the two representation. I would prefer to remove the `d_springs` data which would require a refactoring of the CUDA code and of the scenes.; - [ ] Clean classes that originally inherited from the StiffSpringFF (QuadBendingSprings, RegularGridSpringFF & TriangularBendingSprings) because until then, they were only considering a constant value of stiffness and damping for all their springs, turning a blind eye on the d_spring data. Now that we don't have a single attribute for stiffness and damping (as it was the case in the stiffSpringFF) but a vector of them, they should also be cleaned, along with their associated scenes. If those two points have not been addressed in this PR, it is because I think it is better to have the opinion of the @sofa-framework/reviewers on whether we only want to keep one representation and if so which one ?. PS: I've added a scene test for the CUDA spring implementation because it was never tested, I don't know if it was really working until here",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4649#issuecomment-2252777879:3850,refactor,refactoring,3850,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4649#issuecomment-2252777879,2,"['inherit', 'refactor']","['inherited', 'refactoring']"
Modifiability,"sequent modules.; It allows to spread efficiently all the flags/config/whatever to the cmake modules using it. # Description; A lot of CMake configuration/flags are spread everywhere in the code base: root CMakefile, Soframework CMakefile, SofaHelper CMakefile.; Moreover, a lot of compiler options are not set by **target** (CMake notion), so those are to added EVERYTIME for each projet/plugin (see SofaPython3): c++17, MSVC special flags, etc. # Solution; This PR regroups all CMake config code and SofaFramework is no more the ""bootstrapper"" or whatever it was not.; If you linking against anything from SOFA (most likely at least SofaHelper), the configuration will spread into your project automatically.; This module will be the lowest in the depencency chain (was a bastard mix of SofaFramework/SofaHelper before). # WIP; * ~~Some CMake file to clean~~. * ~~Add no-attribute flags from #1682~~. * Some variables are still not linked to Sofa.Config like Sofa_VERSION: it was in the root CMakefile before, so all the projects know this variable.; For now, Sofa.Config set those global variables **PARENT_SCOPE** but this is ugly in my opinion, and not ""Modern CMake""; One solution is to link this variable to a property of Sofa.Config, and retrieve this property when needed. But it seems a bit bothersome.; ```; get_target_property(Sofa_VERSION ${TARGET} Sofa_VERSION_PROPERTY); ```; Any opinion ?. * I guess there will other things to do later like removing all the tests related code/config into an eventual Sofa.Test, etc; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1674:1107,Config,Config,1107,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1674,2,"['Config', 'variab']","['Config', 'variable']"
Modifiability,sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglV,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7466,Plugin,PluginManager,7466,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"sers/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; import Sofa.Helper; ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')), '/System/Volumes/Preboot/Cryptexes/OS/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (no such file), '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')); >>> . ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. --- sys.version ---; 3.8.19 (default, Mar 20 2024, 15:27:52) ; [Clang 14.0.6 ]; --- PATH ---; /usr/local/opt/python@3.8/bin/:/opt/anaconda3/envs/sofarl/bin:/opt/anaconda3/condabin:/usr/local/bin:/System/Cryptexes/App/usr/bin:/usr/bin:/bin:/usr/sbin:/sbin:/var/run/com.apple.security.cryptexd/codex.system/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690:2517,plugin,plugins,2517,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690,1,['plugin'],['plugins']
Modifiability,shadow variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1855:7,variab,variable,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1855,2,['variab'],['variable']
Modifiability,"sing one or more mechanical states, in order to access state variables, such as position, force etc. They all manage their own way to store, find and manage their link to one or more mechanical states. Instead, I suggest to factorize this access using intermediate classes. It comes with the following features:. - All components inherit from `StateAccessor`, which contains a dynamic list of `BaseMechanicalState`; - Components having access to only one mechanical state inherit from `SingleStateAccessor`. It is templated on `DataTypes`, with a link to a `MechanicalState<DataTypes>`.; - Components having access to 2 mechanical states inherit from `PairStateAccessor`. It is templated on `DataTypes1` and `DataTypes2`, with a link to a `MechanicalState<DataTypes1>` and a second link to a `MechanicalState<DataTypes2>`.; - Components inheriting from `SingleStateAccessor` or `PairStateAccessor` fill the dynamic list contained in the `StateAccessor` implementation.; - It does not break the previous accesses, variable names etc. The goal is that all the components accessing a `BaseMechanicalState` can provide a list of them in a generic way. For example, `BaseInteractionForceField` supposed only 2 mechanical states. Since it inherits now from `StateAccessor`, it can have links to more than 2 (note that none of the interaction force field I found work with more than 2). Another example: `BaseForceField` did not have any reference to a mechanical state, but all the force fields inherits from `ForceField` which has a link to a mechanical state. Therefore, we couldn't have access to a mechanical state from a `BaseForceField`. I also cleaned the files:; - Concatenate nested namespaces; - Use `#pragma once`; - Some private and non-defined copy constructors and `operator=` are marked `delete`.; - Move methods in cpp; - Removed unnecessary `init()` implementations. They only called their base class `init()`.; - `Constraint ` has a link to the mechanical state instead of a raw pointer.;",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2438:1073,variab,variable,1073,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2438,1,['variab'],['variable']
Modifiability,sion.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plug,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:7525,Plugin,PluginManager,7525,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"sionModel, PointCollisionModel, TriangleCollisionModel]; ""Sofa.Component.Collision.Response.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.Engine.Select"", # [BoxROI]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.MechanicalLoad"", # [PlaneForceField]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.FEM.Elastic"", # [FastTetrahedralCorotationalForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [HexahedronSetTopologyContainer, HexahedronSetTopologyModifier, TetraheopologyModifier]; ""Sofa.Component.Topology.Container.Grid"", # [RegularGridTopology]; ""Sofa.Component.Topology.Mapping"", # [Hexa2TetraTopologicalMapping, Quad2TriangleTopologicalMapping]; ""Sofa.Component.Visual"", # [VisualStyle]; ""Sofa.GL.Component.Rendering3D"", # [OglModel]; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""DefaultAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showBehaviorModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""DefaultContactManager"", response=""PenalityContactForceField""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=3.0,; contactDistance=1.1,; ). root_node.gravity = [0.0, -98.1, 0.0]. scene_node = root_node.addChild(""scene""). ###################; # Topology Creation; ###################; topology_node = scene_node.addChild(""topologies""); grid_node = topology_node.addChild(""grid""); grid = grid_node.addObject(""RegularGridTopology"", nx=12, ny=20, nz=2, xmin=-30.0, xmax=30.0, ymin=0.0, ymax=100.0, zm",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3202:2027,plugin,plugin,2027,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3202,1,['plugin'],['plugin']
Modifiability,so external plugins are introducing new modules into Sofa? 🦄,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/732#issuecomment-409131441:12,plugin,plugins,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/732#issuecomment-409131441,1,['plugin'],['plugins']
Modifiability,"sofa for my simulation work. When I try to configure SOFA master with Cmake a ""CMake Deprecation Warning at SofaAdvanced/CMakeLists.txt:15 (message):; SofaAdvanced is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaNonUniformFem. CMake Deprecation Warning at SofaMisc/CMakeLists.txt:21 (message):; SofaMisc is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaMiscExtra;SofaMiscEngine;SofaMiscFem;SofaMiscForceField;SofaMiscMapping;SofaMiscSolver;SofaMiscTopology""; warning is appearing. however, without crashing it get configured and generates the files. I have build the system on Visual Studio 2019 and it complies without any errors. However, when loading the RunSofa ""SofaPython"" and ""SofaExporter"" modules are not loading. I tried using the plugin manager and it reports erros that .dll file is not there. but it is there in the bin and could not add to the plugin manager. So my questions are as follows.; (1)I want to know whether do I have to change any configuration to avoid deprecation warning messages?; (2) loading the sofaphython to runSofa application ; My Cmake out put is as follows. Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19041.; Install prefix: C:/SOFA/build/master/install; Adding module SofaGeneralVisual; Adding module SofaGraphComponent; Adding module SofaGeneralMeshCollision; Adding module SofaBoundaryCondition; Adding module SofaGeneralAnimationLoop; Adding module SofaGeneralDeformable; Adding module SofaGeneralEngine; Adding module SofaGeneralExplicitOdeSolver; Adding module SofaGeneralImplicitOdeSolver; Adding module SofaGeneralLinearSolver; Adding module SofaGeneralRigid; Adding module SofaGeneralObjectInteraction; Adding module SofaGeneralSimpleFem; Adding module SofaGeneralTopology; Adding module SofaTopologyMapping; Adding module SofaUserInteraction; Adding module SofaSparseS",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1623:1064,plugin,plugin,1064,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1623,1,['plugin'],['plugin']
Modifiability,"sofa-master/applications/plugins/image/ImageFilter.h line 645; code:; if(updateImage); {; unsigned int axis=0; if(p.size()) axis=(unsigned int)p[0];; if(axis==0) cimglist_for(img,l) img(l)=inimg(l).get_mirror ('x');; else if(axis==0) cimglist_for(img,l) img(l)=inimg(l).get_mirror ('y'); // <- identical; else cimglist_for(img,l) img(l)=inimg(l).get_mirror ('z');; }",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2080:25,plugin,plugins,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2080,1,['plugin'],['plugins']
Modifiability,sofa/build/bin/RelWithDebInfo; [INFO] [runSofa] DataRepository paths = D:/github-clones/sofa/src/share;D:/github-clones/sofa/src/examples;D:/github-clones/sofa/build;D:/github-clones/sofa/build; [INFO] [runSofa] GuiDataRepository paths = D:/github-clones/sofa/src/applications/projects/runSofa/resources;D:/github-clones/sofa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/R,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:5797,Plugin,PluginManager,5797,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,sofa/gui/qt/resources:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:1976,Plugin,PluginManager,1976,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,sofa\applications\plugins\SofaHAPI\CMakeList.txt; Line 81: endif(); Error: ; endif An ENDIF command was found outside of a proper IF ENDIF structure.; Or its arguments did not match the opening IF command. I believe we should remore this line. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1074:18,plugin,plugins,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1074,1,['plugin'],['plugins']
Modifiability,"sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaMatrix.dll; [INFO] [PluginManager] 72 plugins have been loaded from C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10572,Plugin,PluginManager,10572,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,sofapython3 plugins problems,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252:12,plugin,plugins,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252,1,['plugin'],['plugins']
Modifiability,"some other `#include ""config.h""` in UniformMass,ConstantFF and MeshMatrixMass 😅",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1422#issuecomment-644614341:22,config,config,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1422#issuecomment-644614341,1,['config'],['config']
Modifiability,"sorry @simogasp this is coming from my recent changes and went through our CI.; I did more change in the SPH plugin, do not hesitate to contact me if this impact your project.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1188#issuecomment-542678895:109,plugin,plugin,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1188#issuecomment-542678895,1,['plugin'],['plugin']
Modifiability,"sout/serr (and sendl) were wrappers for std::cout & std::cerr to get access to the streams for the GUIs initially. After the introduction of the Messaging system, it was deemed deprecated (there is even a compat layer, redirecting sout/serr to msg_info(), msg_warning(), etc), but never enforced and never publicized actually. This PR officially deprecates it by still being able to use it but will warn at compilation time if anybody uses the stream operators with serr/sendl. (you can see that on the CI log for the soon-to-be-dropped plugin like Flexible or Compliant). This PR also (should) remove all those serr/sout/sendl in SOFA itself and the supported plugins. EDIT: Adding ""breaking"" label because serr was throwing ""WARNING"" before (yeah makes sense), so it cannot be replaced 1-on-1 with msg_error( could be msg_warning as well). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2292:537,plugin,plugin,537,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2292,3,"['Flexible', 'plugin']","['Flexible', 'plugin', 'plugins']"
Modifiability,space/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPreconditioner.dylib; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPython.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaMiscCollision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaAllCommonComponents.dylib; Using python: /usr/local/opt/python@2/bin/python2.7; **** sys.path ****. /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python; /usr/local/lib/python2.7/site-packages; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python27.zip; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac; /usr,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:3564,Plugin,PluginManager,3564,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"sponse.Contact"", # [DefaultContactManager]; ""Sofa.Component.Constraint.Projective"", # [FixedConstraint]; ""Sofa.Component.LinearSolver.Iterative"", # [CGLinearSolver]; ""Sofa.Component.Mass"", # [UniformMass]; ""Sofa.Component.ODESolver.Backward"", # [EulerImplicitSolver]; ""Sofa.Component.SolidMechanics.Spring"", # [StiffSpringForceField]; ""Sofa.Component.Topology.Container.Dynamic"", # [EdgeSetTopologyContainer, EdgeSetTopologyModifier]; ""Sofa.Component.Visual"", # [VisualStyle]; ""SofaCarving"", # [CarvingManager]; ""Sofa.Component.StateContainer"", # [MechanicalObject; ""Sofa.Component.LinearSolver.Direct"", # [SparseLDLSolver]; ""Sofa.Component.AnimationLoop"", # [FreeMotionAnimationLoop]; ""Sofa.Component.Constraint.Lagrangian.Correction"", # [LinearSolverConstraintCorrection, UncoupledConstraintCorrection]; ""Sofa.Component.Constraint.Lagrangian.Solver"", # [GenericConstraintSolver]; ]. plugin_node = root_node.addChild(""Plugins""). for plugin in plugin_list:; plugin_node.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root_node.addObject(""FreeMotionAnimationLoop""); root_node.addObject(""DefaultVisualManagerLoop""); root_node.addObject(; ""VisualStyle"",; displayFlags=[""showVisual"", ""showForceFields"", ""showCollisionModels"", ""showInteractionForceFields""],; ). root_node.addObject(""DefaultPipeline""); root_node.addObject(""BruteForceBroadPhase""); root_node.addObject(""BVHNarrowPhase""); root_node.addObject(""GenericConstraintSolver""); root_node.addObject(""DefaultContactManager"", response=""FrictionContactConstraint""). root_node.addObject(; ""NewProximityIntersection"",; alarmDistance=1.0,; contactDistance=0.2,; ). root_node.gravity = [0.0, -918, 0.0]. scene_node = root_node.addChild(""scene""). cutting_sphere_node = scene_node.addChild(""cutting_sphere""); cutting_sphere_node.addObject(""CGLinearSolver""); cutting_sphere_node.addObject(""EulerImplicitSolver""); cutting_sphere_node.addObject(""PointSetTopologyContainer""); position = [6.0, 5.0, 0.0, 0.0, 0.0, 0.0, 1.0]; cutting_sphere_node.addOb",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528:1692,plugin,pluginName,1692,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3269#issuecomment-1255376528,3,['plugin'],"['plugin', 'pluginName']"
Modifiability,"src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. This dll is actually present. Please see the snapshot below.; Directory view:; ![image](https://user-images.githubusercontent.com/5296582/8",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1851,Plugin,PluginManager,1851,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ss already registered: LineCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PointCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TriangleCollisionModel<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [WARNING] [ObjectFactory] Class already registered: MeshOBJLoader; [WARNING] [ObjectFactory] Class already registered: MeshVTKLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [WARNING] [ObjectFactory] Class already registered: RecordedCamera; [WARNING] [ObjectFactory] Class already registered: VisualTransform; [WARNING] [ObjectFactory] Class already registered: Visual3DText; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [WARNING] [ObjectFactory] Class already registered: AddFrameButtonSetting; [WARNING] [ObjectFactory] Class already registered: AddRecordedCameraButtonSetting; [WARNING] [ObjectFactory] Class already registered: StartNavigationButtonSetting; [WARNING] [ObjectFactory] Class already registered: AttachBodyButtonSetting; [WARNING] [ObjectFactory] Class already registered: FixPickedParticleButtonSetting; [WARNING] [ObjectFactory] Class already registered: Gravity; [WARNING] [ObjectFactory] C,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:13021,Plugin,PluginManager,13021,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"st-part.cc.o gtest-test-part.h gtest-internal.h (463 ms); gtest-filepath.cc.o gtest-filepath.h gtest-string.h (456 ms); gtest.cc.o gtest.h gtest-internal.h (246 ms); ... 20903 ms: sofa/SofaKernel/modules/SofaHelper/src/sofa/helper/vector.h (included 156 times, avg 133 ms), included via:; MeshGmsh.cpp.o MeshGmsh.h Mesh.h (492 ms); MeshTopologyLoader.cpp.o MeshTopologyLoader.h Mesh.h (402 ms); Image.cpp.o Factory.inl (384 ms); SVector.cpp.o SVector.h (379 ms); GenerateRigid.cpp.o GenerateRigid.h Mesh.h (373 ms); TestMessageHandler.cpp.o TestMessageHandler.h (346 ms); ... 19960 ms: /usr/bin/../lib/gcc/x86_64-linux-gnu/10/../../../../include/c++/10/pstl/glue_algorithm_defs.h (included 157 times, avg 127 ms), included via:; qglviewer.h camera.h QMap qmap.h qiterator.h qglobal.h algorithm (348 ms); manipulatedCameraFrame.h manipulatedFrame.h frame.h QObject qobject.h qobjectdefs.h qnamespace.h qglobal.h algorithm (345 ms); gtest-typed-test.h gtest-port.h algorithm (299 ms); mouseGrabber.h config.h qglobal.h algorithm (299 ms); VRender.h config.h qglobal.h algorithm (296 ms); cmake_pch.hxx Base.h BoundingBox.h Vec.h fixed_array.h algorithm (271 ms); ... 19494 ms: sofa/applications/plugins/SofaTest/../SofaTest/Mapping_test.h (included 6 times, avg 3249 ms), included via:; DistanceMapping_test.cpp.o (3500 ms); QuaternionIntegration_test.cpp.o (3407 ms); RigidRigidMapping_test.cpp.o (3280 ms); SquareMapping_test.cpp.o (3239 ms); RigidMapping_test.cpp.o (3089 ms); SquareDistanceMapping_test.cpp.o (2976 ms); ... 19187 ms: sofa/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src/sofa/simulation/MechanicalVisitor.h (included 100 times, avg 191 ms), included via:; initSofaDenseSolver.cpp.o MatrixLinearSolver.inl MatrixLinearSolver.h (440 ms); StaticSolver.cpp.o StaticSolver.h MechanicalMatrixVisitor.h (427 ms); NewMatCGLinearSolver.cpp.o CGLinearSolver.inl CGLinearSolver.h MatrixLinearSolver.h (404 ms); DefaultMultiMatrixAccessor.cpp.o DefaultMultiMatrixAccessor.h (388 ms); Pre",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:36367,config,config,36367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['config'],['config']
Modifiability,store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginM,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:7542,Plugin,PluginManager,7542,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,switching Debug/Release mode is not well handle by PluginManager,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/713:51,Plugin,PluginManager,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/713,1,['Plugin'],['PluginManager']
Modifiability,"t that. On my setup, the compilation does not works regardless of the SOFACUDA_DOUBLE option. I'm a bit surprized it works on your side. Here are information on my setup:; OS => Fedora 29; NVCC version => V10.1.105; CMake variable SOFACUDA_ARCH=sm_60; CMake variable CUDA_VERSION=10.1. And here are the output errors from ninja:. ```; [1/96] Building NVCC (Device) object applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o; FAILED: applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o ; cd /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda && /usr/bin/cmake -E make_directory /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/. && /usr/bin/cmake -D verbose:BOOL=OFF -D build_configuration:STRING=Release -D generated_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o -D generated_cubin_file:STRING=/home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/./SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.cubin.txt -P /home/abernard/Workspace/sofa/build_master/applications/plugins/SofaCUDA/CMakeFiles/SofaCUDA.dir/sofa/gpu/cuda/SofaCUDA_generated_CudaStandardTetrahedralFEMForceField.cu.o.Release.cmake; /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(1251): warning: variable ""threads2"" was declared but never referenced. /home/abernard/Workspace/sofa/src_master/applications/plugins/SofaCUDA/sofa/gpu/cuda/CudaStandardTetrahedralFEMForceField.cu(360): error: identifier ""StandardTetrahedralFEMForceFieldCuda_BoyceAndArruda_deriveSPKTensor"" is",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057:1223,plugin,plugins,1223,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/991#issuecomment-484158057,1,['plugin'],['plugins']
Modifiability,"t-in metis library; Adding plugin SofaPreconditioner; Adding plugin SofaHaptics; Adding plugin SofaValidation; Adding plugin SofaDenseSolver; Adding plugin SofaNonUniformFem; CMake Warning (dev) at D:/Program Files/CMake/share/cmake-3.22/Modules/CMakeDependentOption.cmake:84 (message):; Policy CMP0127 is not set: cmake_dependent_option() supports full Condition; Syntax. Run ""cmake --help-policy CMP0127"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning.; Call Stack (most recent call first):; SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cmake:112 (cmake_dependent_option); SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cmake:141 (sofa_add_generic); modules/CMakeLists.txt:38 (sofa_add_plugin); This warning is for project developers. Use -Wno-dev to suppress it. Adding plugin SofaOpenglVisual; Adding plugin SofaMiscTopology; Adding plugin SofaMiscExtra; Adding plugin SofaMiscForceField; Adding plugin SofaMiscEngine; Adding plugin SofaMiscSolver; Adding plugin SofaMiscFem; Adding plugin SofaMiscMapping; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") found components: program_options ; -- SofaGuiCommon: Sofa.GL dependent features enabled.; SofaGuiQt: will use Qt5; Adding collection SofaComponentAll; J:/GitHub/sofa/src/applications/plugins/SofaHighOrder does not exist and will be ignored.; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; Python:; Version: 3.9.7; Executable: D:/11631/miniconda3/python.exe; Headers: D:/11631/miniconda3/include; Libraries: D:/11631/miniconda3/libs/python39.lib; User site: C:\Users\11631\AppData\Roaming\Python\Python39\site-packages; pybind11:; Version: 2.8.1; Config",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2814:3485,plugin,plugin,3485,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2814,9,['plugin'],['plugin']
Modifiability,t.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] L,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:1190,Plugin,PluginManager,1190,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"t.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"".",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2344,Plugin,Plugin,2344,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['Plugin'],['Plugin']
Modifiability,"t.Engine.Select"",; ""Sofa.Component.IO.Mesh"",; ""Sofa.Component.LinearSolver.Direct"",; ""Sofa.Component.Mass"",; ""Sofa.Component.ODESolver.Backward"",; ""Sofa.Component.SolidMechanics.FEM.Elastic"",; ""Sofa.Component.SolidMechanics.Spring"",; ""Sofa.Component.StateContainer"",; ""Sofa.Component.Topology.Container.Dynamic"",; ""Sofa.Component.Visual"",; ""Sofa.Component.Engine.Select"",; ""Sofa.GL.Component.Rendering3D"",; ""Sofa.GUI.Component"",; ""Sofa.Component.Constraint.Projective"",; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ""Sofa.Component.Collision.Response.Contact"",; ""Sofa.Component.Setting"",; ""Sofa.Component.AnimationLoop"",; ""Sofa.Component.Collision.Geometry"",; ""Sofa.Component.Constraint.Lagrangian.Correction"",; ""Sofa.Component.LinearSolver.Iterative"",; ""Sofa.Component.Constraint.Lagrangian.Solver"",; ""Sofa.Component.Topology.Container.Constant""]. rootNode.findData('gravity').value=[0,0,-10];; rootNode.findData('dt').value=0.01; ; # Plugin loading; rootNode.addObject('RequiredPlugin', pluginName=pluginNameList, ; printLog='0'). # Rootnode attributes; rootNode.addObject('FreeMotionAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('GenericConstraintSolver', maxIterations='2000', tolerance='1e-9') ; rootNode.addObject('BackgroundSetting', color='0 0.168627 0.211765'). # Scene settings; confignode = rootNode.addChild(""Config""); confignode.addObject(""OglGrid"", nbSubdiv=10, size=1000); confignode.addObject('OglSceneFrame', style=""Arrows"", ; alignment=""TopRight""). # Collision component; rootNode.addObject('DefaultPipeline'); rootNode.addObject('BruteForceBroadPhase'); rootNode.addObject('BVHNarrowPhase'); rootNode.addObject('LocalMinDistance', name='Proximity', alarmDistance=""1"", contactDistance=""0.5""); rootNode.addObject('DefaultContactManager', name=""Response"", response=""PenalityContactForceField""). ; # Membrane; membrane=rootNode.addChild(""Membrane""). membrane.addObject(""EulerImplicitSolver"");",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3810:1593,Plugin,Plugin,1593,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3810,1,['Plugin'],['Plugin']
Modifiability,tOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plug,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:6498,Plugin,PluginManager,6498,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"tOdeSolver; Adding plugin SofaGeneralLinearSolver; Adding plugin SofaGeneralRigid; Adding plugin SofaGeneralObjectInteraction; Adding plugin SofaGeneralSimpleFem; Adding plugin SofaGeneralTopology; Adding plugin SofaTopologyMapping; Adding plugin SofaUserInteraction; Adding plugin SofaConstraint; Adding plugin SofaGeneralLoader; Adding plugin SofaExporter; Adding plugin SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding plugin SofaPreconditioner; Adding plugin SofaHaptics; Adding plugin SofaValidation; Adding plugin SofaDenseSolver; Adding plugin SofaNonUniformFem; CMake Warning (dev) at D:/Program Files/CMake/share/cmake-3.22/Modules/CMakeDependentOption.cmake:84 (message):; Policy CMP0127 is not set: cmake_dependent_option() supports full Condition; Syntax. Run ""cmake --help-policy CMP0127"" for policy details. Use the; cmake_policy command to set the policy and suppress this warning.; Call Stack (most recent call first):; SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cmake:112 (cmake_dependent_option); SofaKernel/modules/Sofa.Config/cmake/SofaMacrosConfigure.cmake:141 (sofa_add_generic); modules/CMakeLists.txt:38 (sofa_add_plugin); This warning is for project developers. Use -Wno-dev to suppress it. Adding plugin SofaOpenglVisual; Adding plugin SofaMiscTopology; Adding plugin SofaMiscExtra; Adding plugin SofaMiscForceField; Adding plugin SofaMiscEngine; Adding plugin SofaMiscSolver; Adding plugin SofaMiscFem; Adding plugin SofaMiscMapping; Adding plugin SofaMiscCollision; SofaMiscModule: build all maintained sofa components.; Found Boost: E:/GitHub/vcpkg/installed/x64-windows/include (found version ""1.77.0"") found components: program_options ; -- SofaGuiCommon: Sofa.GL dependent features enabled.; SofaGuiQt: will use Qt5; Adding collection SofaComponentAll; J:/GitHub/sofa/src/applications/plugins/SofaHighOrder does not exist and will be ignored.; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2814:3208,Config,Config,3208,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2814,1,['Config'],['Config']
Modifiability,"tView, in applications/sofa/gui/qt. The current implementation stores a pointer to every registered listeners in every node in the scene graph. Instead, the implementation proposed in this PR registers the listeners in the root node and child nodes forward the notifications to it. Also, the overloads are currently relying on the call super (the child class reimplements the method, then calls its base class implementation) This approach is [known to be error prone](https://en.wikipedia.org/wiki/Call_super) and can be reimplemented using delegates instead. Finally, this PR also adds extra delegates in the Nodes listeners notifications system and in the MutationListener, called *AFTER* the graph's edition. those are used in SofaQtQuick to be notified that the graph has indeed been updated. . Here are 2 quick UML diagrams showing the 2 architecture's differences. This one is the current implementation in sofa:; ![code_smell](https://user-images.githubusercontent.com/13734391/52288894-5245f000-296d-11e9-83b6-12f6ce1385f9.png). And this one is what this PR does:; ![code_clean](https://user-images.githubusercontent.com/13734391/52288978-730e4580-296d-11e9-9057-451922e971c8.png). Also, if someone could tell me what the master / slave relationship between BaseObjects are, I'd be curious to know if it is still in use in SOFA. It doesn't seem to be used in Listeners.. maybe added for Compliant / Flexible?. __This PR could potentially be breaking for plugins & projects implementing their own MutationListeners__. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/917:1753,Flexible,Flexible,1753,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/917,2,"['Flexible', 'plugin']","['Flexible', 'plugins']"
Modifiability,"tate inherit from `SingleStateAccessor`. It is templated on `DataTypes`, with a link to a `MechanicalState<DataTypes>`.; - Components having access to 2 mechanical states inherit from `PairStateAccessor`. It is templated on `DataTypes1` and `DataTypes2`, with a link to a `MechanicalState<DataTypes1>` and a second link to a `MechanicalState<DataTypes2>`.; - Components inheriting from `SingleStateAccessor` or `PairStateAccessor` fill the dynamic list contained in the `StateAccessor` implementation.; - It does not break the previous accesses, variable names etc. The goal is that all the components accessing a `BaseMechanicalState` can provide a list of them in a generic way. For example, `BaseInteractionForceField` supposed only 2 mechanical states. Since it inherits now from `StateAccessor`, it can have links to more than 2 (note that none of the interaction force field I found work with more than 2). Another example: `BaseForceField` did not have any reference to a mechanical state, but all the force fields inherits from `ForceField` which has a link to a mechanical state. Therefore, we couldn't have access to a mechanical state from a `BaseForceField`. I also cleaned the files:; - Concatenate nested namespaces; - Use `#pragma once`; - Some private and non-defined copy constructors and `operator=` are marked `delete`.; - Move methods in cpp; - Removed unnecessary `init()` implementations. They only called their base class `init()`.; - `Constraint ` has a link to the mechanical state instead of a raw pointer.; - Some constructors marked `explicit`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds w",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2438:1549,inherit,inherits,1549,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2438,1,['inherit'],['inherits']
Modifiability,"te::getSize ; * BaseMapping::applyJT; * BaseMapping::applyDJT; * Data::getCounter ; * Data::isDirty; * Node::getMass; * Node::getForceField; * STLExporter; * Sofa.unload; * Sofa.path; * Sofa.getAvailableComponents; * VisualModel::updateVisual; * VisualModel::initVisual; * add in PythonEnvironment::getPythonCallingPointAsFileInfo() a function that return a string with the ; python file/line info to add report them in msg_* ; * adds 'override' keyword when needed (more info => http://en.cppreference.com/w/cpp/language/override); * adds tests on PythonScriptController; * adds tests on SofaModule; * adds a exception handler in python so that the un-catched exceptions are sended as msg_error instead of being printed on the console. ; * cosmetic changes like replacing 'using namespace a;' with the precise 'using a:TheClass', removing in-consistant line spacing. ; * replace ""extern C"" with static. - [Flexible/python] Fix the examples & the tests to take into account the changes in SofaPython; - [Compliant/python] Fix the examples & the tests to take into account the changes in SofaPython. To simplify the submitter's life (and don't waste their time) some extras (read not really relevant) changes are also added to the PR:; - remove a virtual in-heritance on BaseController and plugin/optitracknet. ; - adds a << operator to Message.h to handle file:line information (now in PR: #314 ) ; - made some changes in STLExporter to stay consistant with Sofa guidelines. . There is still some work todo (if you have free time to offer):; Eg: ; in Compliant there is still patterns like:; ```cpp; SP_MESSAGE_ERROR( ""_Compliant_getAssembledImplicitMatrix: wrong arguments"" );; return NULL;; ```; The SP_MESSAGE_ERROR is probably not needed as it duplicate the one provided by the python exception. . While in ; ```cpp; SP_MESSAGE_ERROR( ""_Compliant_getAssembledImplicitMatrix: first argument is not a BaseNode"" );; PyErr_BadArgument();; return NULL;; ```; PyExc_SetString() should replace the messag",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/304:2546,Flexible,Flexible,2546,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/304,1,['Flexible'],['Flexible']
Modifiability,"ted in parallel. We need to iterate on the architecture proposal to refine it as much as possible before steps NG1 and NG2 are over.; Task NG4 cleaning the applications/plugins repository in order to better handle code lifecycle. ### NG1: Simplify headers dependency graph by removing un-needed includes. 1. SofaKernel; - clean/rewrite/reorganize SofaHelper and SofaDefaulttype #1521 ; - remove completely useless files. <img src=""https://user-images.githubusercontent.com/11028016/106575747-b3910180-653c-11eb-8f43-6ec65390ce2f.png"" width=""350"" > &nbsp; <img src=""https://user-images.githubusercontent.com/11028016/106575725-ae33b700-653c-11eb-89e3-4bdeae912a94.png"" width=""350"" >. 2. Other modules (SofaGeneral, etc); - clean deps (useless includes, use lower level objects, etc), linked with the following NG2 actually. SOFA modules dependency (library link) graph: https://www.sofa-framework.org/graph/. *clang tools?*; *include-what-you-need?*. ### NG2: Pluginize all SOFA modules; Pluginizing a module = making it a [CMake Package](https://cmake.org/cmake/help/latest/manual/cmake-packages.7.html) that can be enabled/disabled in SOFA CMake options.; Pluginizing **does not mean** moving files (it did in the past). The module stays in place, only the CMake files change. The Components within the module stay in place too. Done module pluginizations: https://github.com/sofa-framework/sofa/issues?q=is%3Amerged+label%3A%22NG2%3A+pluginization%22. Quick schematics on the current state and what will be achieved:. <img src=""https://www.sofa-framework.org/wp-content/uploads/2020/10/stc9_overview_v20.06.png"" width=""40%"" height=""auto"" /> &nbsp; <img src=""https://www.sofa-framework.org/wp-content/uploads/2020/10/stc9_modularization_plan.png"" width=""40%"" height=""auto"" />. [SOFA Modules' plan](https://drive.google.com/file/d/14H2YRu0z8usiqTpGQuxcnel1uf1Hna1I/view?usp=sharing). ### NG3: Reorganize SOFA modules towards new architecture; ~~Latest architecture proposal: https://annuel2.framapad.o",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1527:1870,Plugin,Pluginize,1870,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1527,2,['Plugin'],"['Pluginize', 'Pluginizing']"
Modifiability,"ted when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, ple",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:4207,plugin,pluginManager,4207,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,2,['plugin'],"['plugin', 'pluginManager']"
Modifiability,tersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loade,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:7408,Plugin,PluginManager,7408,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"test.sofa_python_scene_tests/0; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/Compliant/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/Flexible/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/image/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/build/lib/libSofaPython.dylib; [INFO] [Python_scene_test] running /Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py; ERROR: wrong number of arguments; [ERROR] [PythonScript] IndexError: list index out of range; File ""/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py"", line 15, in <module>; DAMPING_COEF = float( sys.argv[1] ). [ERROR] [SofaPython] Script (file:damping) import error; [ERROR] [PythonScriptController(PythonScriptController)] load error (file '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py' not parsable); ../applications/plugins/SofaTest/Python_test.cpp:263: Failure; Failed; python error; [ FAILED ] Batch",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264176:1121,plugin,plugins,1121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264176,1,['plugin'],['plugins']
Modifiability,"text.cs:251); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). SofaContext::OnDestroy stop now.; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:OnDestroy () (at Assets/SofaUnity/Scripts/SofaContext.cs:256); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). KeyNotFoundException: The given key '4' was not present in the dictionary.; System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item (TKey key) (at <eef08f56e2e042f1b3027eca477293d9>:0); SofaUnityAPI.SofaContextAPI.loadScene (System.String filename) (at Assets/SofaUnity/Plugins/SofaUnityAPI/SofaContextAPI.cs:189); SofaUnity.SofaContext.ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:486); SofaUnity.SofaContext.Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext.StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext.Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr, Boolean&). Start: 'VisualEye'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'VisualCornea'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Render",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:1387,Plugin,Plugins,1387,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['Plugin'],['Plugins']
Modifiability,thanks a lot all for your feedback all!; @EulalieCoevoet would be great to have that example added.; @ChristianDuriez definitely a big thumb up :+1: for the URDF support. Maud Marchal stressed out the importance of this aspect as well !. Let's create a dedicated plugin @fredroy as you proposed,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2684#issuecomment-1056667710:263,plugin,plugin,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2684#issuecomment-1056667710,1,['plugin'],['plugin']
Modifiability,the best ref on the topic I found so far: http://arctrix.com/nas/python/gc/; besides the official doc: https://docs.python.org/2/extending/newtypes.html#supporting-cyclic-garbage-collection,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/201#issuecomment-305830119:129,extend,extending,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/201#issuecomment-305830119,1,['extend'],['extending']
Modifiability,the new factors/parameters were set arbitrary using qualitative tests as we still don't have automatic test on this plugin.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1435#issuecomment-672826026:116,plugin,plugin,116,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1435#issuecomment-672826026,1,['plugin'],['plugin']
Modifiability,"then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; https://github.com/sofa-framework/sofa/blob/1e0df59953a085785a45bf97e182e01efea0c354/Sofa/framework/Helper/src/sofa/helper/system/DynamicLibrary.cpp#L78; would fix the bug, but it is still showing the same behavior 😓",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4462:1850,plugin,plugins,1850,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462,1,['plugin'],['plugins']
Modifiability,"thing to make sure the compiler compile this"" << std::endl;; }; }; private:; Data<VecCoord> d_position;; };; ```. The consequence will be that the MO object position vector won't be updated later on during time steps. However, if the same scene is run with a GUI, the problem disappears. The following scene can be taken as an example where a random displacement is imposed on a node before the time step, and the node position is printed afterwards. ```python; class Controller(Sofa.Core.Controller):; def __init__(self, MO):; super().__init__(); self.MO = MO. def onAnimateBeginEvent(self, _):; print(""\n\nonAnimateBeginEvent""); random_disp = np.random.normal(0, 1e-2, self.MO.position.value.shape); self.MO.position.value = self.MO.rest_position.value + random_disp; print(f""{random_disp[0]=}""); print(f""{self.MO.position.value[0]=}""). def onAnimateEndEvent(self, _):; print(""onAnimateEndEvent""); print(f""{self.MO.position.value[0]=}""). def createScene(root):; root.addObject('RequiredPlugin', pluginName=['BugPosition']); root.addObject(""MechanicalObject"", name=""MO"", template=""Vec3d"", position=[1, 0, 0]); root.addObject(""TestComponent"", position=""@MO.position""); root.addObject(Controller(root.MO)); ```. **Steps to reproduce**; I've put everything needed to reproduce the issue here https://github.com/jnbrunet/BugPosition. Hence, the following steps can be taken (the SOFA installation path must be changed, and SofaPython3 plugin must be installed alongside SOFA):; ```bash; export SOFA_ROOT=/opt/sofa; export PYTHONPATH=$PYTHONPATH:$SOFA_ROOT/plugins/SofaPython3/lib/python3/site-packages; ```; Then, compile and launch the scene; ```bash; git clone git@github.com:jnbrunet/BugPosition.git; cmake -DCMAKE_PREFIX_PATH=$SOFA_ROOT/lib/cmake -S BugPosition -B BugPosition/build -DCMAKE_BUILD_TYPE=Release; cmake --build BugPosition/build; python3 BugPosition/scene.py; ```; which should produce the erroneous results (random displacement isn't taken into account).; ```; (...); onAnimateBeginEv",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2761:2226,plugin,pluginName,2226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2761,1,['plugin'],['pluginName']
Modifiability,thon3/site-packages/...` . Here is the installation tree that we would need for SofaPython3:; ```; .; ├── bin; │   ├── Bindings.Modules.Tests; │   ├── Bindings.SofaRuntime.Tests; │   ├── Bindings.Sofa.Tests; │   ├── Bindings.SofaTypes.Tests; │   ├── Components; │   │   └── Components.py; │   ├── Core; │   │   ├── BaseData.py; │   │   ├── BaseLink.py; │   │   ├── BaseObject.py; │   │   ├── Base.py; │   │   ├── Controller.py; │   │   ├── DataEngine.py; │   │   ├── ForceField.py; │   │   ├── ForceField.py.orig; │   │   ├── MyRestShapeForceField.py; │   │   └── PythonRestShapeForceField.py; │   ├── Helper; │   │   ├── FileRepository.py; │   │   └── Message.py; │   ├── pyfiles; │   │   └── vector_test.py; │   ├── Simulation; │   │   ├── Node.py; │   │   └── Simulation.py; │   ├── SofaDeformable; │   │   ├── LinearSpring.py; │   │   └── SpringForceField.py; │   ├── tests; │   │   └── Base.py; │   └── Types; │   ├── BoundingBox.py; │   ├── RGBAColor.py; │   └── Vec3.py; ├── include; │   └── SofaPython3; │   ├── config.h; │   ├── DataCache.h; │   ├── DataHelper.h; │   ├── initModule.h; │   ├── Prefab.h; │   ├── PythonEnvironment.h; │   ├── PythonFactory.h; │   ├── PythonTestExtractor.h; │   ├── PythonTest.h; │   ├── SceneLoaderPY3.h; │   ├── Sofa; │   │   ├── Components; │   │   │   └── Submodule_Components.h; │   │   ├── Core; │   │   │   ├── Binding_BaseCamera_doc.h; │   │   │   ├── Binding_BaseCamera.h; │   │   │   ├── Binding_BaseContext.h; │   │   │   ├── Binding_BaseData_doc.h; │   │   │   ├── Binding_BaseData.h; │   │   │   ├── Binding_Base_doc.h; │   │   │   ├── Binding_Base.h; │   │   │   ├── Binding_BaseLink_doc.h; │   │   │   ├── Binding_BaseLink.h; │   │   │   ├── Binding_BaseObject_doc.h; │   │   │   ├── Binding_BaseObject.h; │   │   │   ├── Binding_ContactListener_doc.h; │   │   │   ├── Binding_ContactListener.h; │   │   │   ├── Binding_Context.h; │   │   │   ├── Binding_Controller_doc.h; │   │   │   ├── Binding_Controller.h; │   │   │   ├── Binding_DataDict_do,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-756112592:1299,config,config,1299,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1671#issuecomment-756112592,1,['config'],['config']
Modifiability,"thon3/site-packages:; > --- sys.path ---; > ['', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/path/to/SofaPython3/lib/python3/site-packages', '/opt/anaconda3/envs/sofarl/lib/python38.zip', '/opt/anaconda3/envs/sofarl/lib/python3.8', '/opt/anaconda3/envs/sofarl/lib/python3.8/lib-dynload', '/opt/anaconda3/envs/sofarl/lib/python3.8/site-packages']; > #################; > ```; > ; > ### Logs; > **Full output**; > ; > ```; > (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; > Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; > [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > >>> import Sofa; > ---------------------------------------; > Checking SOFA_ROOT and SOFAPYTHON3_ROOT; > Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; > ---------------------------------------; > Traceback (most recent call last):; > File ""<stdin>"", line 1, in <module>; > File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/__init__.py"", line 140, in <module>; > import Sofa.Helper; > ImportError: dlopen(/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so, 0x0002): tried: '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages/Sofa/Helper.cpython-38-darwin.so' (mach-o file, but is an incompatible architecture (have 'x86_64', need 'arm64e' or 'arm64')), '/System/Volumes/Preboot/Cryptexes/OS/Users/bemore/Library/CloudStorage/OneDr",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179:5271,variab,variable,5271,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179,1,['variab'],['variable']
Modifiability,"thon_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/LambdaPropagation.py; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant.so; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant_gui.so; [DEPRECATED] [Compliant.Vec] Compliant's Vec.py is now deprecated (and will be deleted soon), please use numpy instead; [ERROR] [SofaPython] createObject: component 'compliance' of type 'UniformCompliance' in node 'joint'; [ERROR] [SofaPython] Object type UniformCompliance<Vec1d> creation failed; [FATAL] [SofaPython] SP_CALL_MODULEFUNC; Traceback (most recent call last):; File ""LambdaPropagation.py"", line 90, in createScene; joint = StructuralAPI.FixedRigidJoint( ""joint"", ground.node, rigid.node ); File ""/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python/Compliant/StructuralAPI.py"", line 634, in __init__; self.compliance = self.node.createObject('UniformCompliance', name='compliance', compliance=compliance); TypeError: bad argument type for built-in operation; Build timed out (after 30 minutes). Marking the build as aborted.; Build was aborted; [File exists] check if file exists [builds/pr/all/build-finished]; Run condition [And] preventing perform for step [[Scan for compiler warnings]]; [File exists] check if file exists [builds/pr/all/build-finished]; Run condition [And] preventing perform for step [[Scan for compiler warnings]]; Recording test results. ########## SIG 15 - SIGTERM: a termination request was sent to the program ##########; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaHelper.so.17.dev.0(sofa::helper::BackTrace::dump()+0x23) [0x7f6585f9be63]; -> /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaHelper.so.17.dev.0(sofa::helper::BackTrace::sig(in",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:2552,plugin,plugins,2552,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,1,['plugin'],['plugins']
Modifiability,"tion SofaMiscTopology; Adding collection SofaMiscExtra; Adding collection SofaMiscForceField; Adding collection SofaMiscEngine; Adding collection SofaMiscSolver; Adding collection SofaMiscFem; Adding collection SofaMiscMapping; Adding collection SofaMiscCollision; Adding collection SofaHaptics; Adding plugin SofaValidation; Adding collection SofaGeneralObjectInteraction; Adding collection SofaCommon; Adding collection SofaGeneral; Adding collection SofaAdvanced; Adding collection SofaMisc; Adding collection SofaComponentAll; Adding plugin SceneCreator; Adding plugin CImgPlugin; CImgPlugin: TIFF Image Format enabled; CImgPlugin: JPEG Image Format enabled; CImgPlugin: PNG Image Format enabled; Adding plugin ArticulatedSystemPlugin; CMake Error: File /home/giang/sofa/src/applications/plugins/SofaPython/ExternalProjectConfig.cmake.in does not exist.; CMake Error at Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:266 (configure_file):; configure_file Problem configuring file; Call Stack (most recent call first):; Sofa/framework/Config/cmake/SofaMacrosConfigure.cmake:295 (sofa_add_generic_external); applications/plugins/CMakeLists.txt:22 (sofa_add_subdirectory). SofaPython3 is compiled as a subproject to the external project 'Sofa'.; Adding plugin SofaPython3; CMake Error at /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:146 (message):; Could NOT find Python (missing: Python_LIBRARIES Python_INCLUDE_DIRS; Development) (found suitable version ""3.9.5"", minimum required is ""3.7""); Call Stack (most recent call first):; /usr/share/cmake-3.16/Modules/FindPackageHandleStandardArgs.cmake:393 (_FPHSA_FAILURE_MESSAGE); /usr/share/cmake-3.16/Modules/FindPython/Support.cmake:2214 (find_package_handle_standard_args); /usr/share/cmake-3.16/Modules/FindPython.cmake:304 (include); applications/plugins/SofaPython3/CMakeLists.txt:86 (find_package). Configuring incomplete, errors occurred!; See also ""/home/giang/sofa/build/CMakeFiles/CMakeOutput.log"".; See also ""/ho",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815:8405,config,configuring,8405,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3752#issuecomment-1489430815,2,"['Config', 'config']","['Config', 'configuring']"
Modifiability,"tion/flags are spread everywhere in the code base: root CMakefile, Soframework CMakefile, SofaHelper CMakefile.; Moreover, a lot of compiler options are not set by **target** (CMake notion), so those are to added EVERYTIME for each projet/plugin (see SofaPython3): c++17, MSVC special flags, etc. # Solution; This PR regroups all CMake config code and SofaFramework is no more the ""bootstrapper"" or whatever it was not.; If you linking against anything from SOFA (most likely at least SofaHelper), the configuration will spread into your project automatically.; This module will be the lowest in the depencency chain (was a bastard mix of SofaFramework/SofaHelper before). # WIP; * ~~Some CMake file to clean~~. * ~~Add no-attribute flags from #1682~~. * Some variables are still not linked to Sofa.Config like Sofa_VERSION: it was in the root CMakefile before, so all the projects know this variable.; For now, Sofa.Config set those global variables **PARENT_SCOPE** but this is ugly in my opinion, and not ""Modern CMake""; One solution is to link this variable to a property of Sofa.Config, and retrieve this property when needed. But it seems a bit bothersome.; ```; get_target_property(Sofa_VERSION ${TARGET} Sofa_VERSION_PROPERTY); ```; Any opinion ?. * I guess there will other things to do later like removing all the tests related code/config into an eventual Sofa.Test, etc; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1674:1225,Config,Config,1225,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1674,3,"['Config', 'variab']","['Config', 'variable', 'variables']"
Modifiability,to avoid breaking external plugins. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/870:27,plugin,plugins,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/870,1,['plugin'],['plugins']
Modifiability,"to fix the compilation error. ## How to use them. Create a new deprecation macro specifying the deprecation topic you are tackling.; This way, you won't have dates everywhere in your code. ## Example. ### Deprecate. I want to rename something that will break my API. ; To ease the transition for my users, I will propose a deprecation period with a fine message by using a deprecation macro.; Latest release is v20.06, next release (currently under development) is v20.12, after that will come the v21.06. In my config.h.in; ```cpp; #define SOFA_ATTRIBUTE_DEPRECATED__MYDEPRECATIONTOPIC() \; SOFA_ATTRIBUTE_DEPRECATED( \; ""v20.12 (PR#12345)"", ""v21.06"", \; ""XXX must be renamed into YYY.""); ```. In my code; ```cpp; SOFA_ATTRIBUTE_DEPRECATED__MYDEPRECATIONTOPIC(); void myDeprecatedMethod();; ```. Anyone using myDeprecatedMethod will get this **warning**: ; ```text; warning: 'myDeprecatedMethod' is deprecated: It is still usable but has been DEPRECATED since v20.12 (PR#12345). You have until v21.06 to fix your code. XXX must be renamed into YYY.; ```. ### Disable. Now forward in time ...; Latest release is v20.12, next release (currently under development) is v21.06, after that will come the v21.12.; It is time to stop the deprecation period. To provide a clear message to my users, I will not just remove my deprecated method but I will disable it with `= delete` and use a deprecation macro. In my config.h.in; ```cpp; #define SOFA_ATTRIBUTE_DISABLED__MYDEPRECATIONTOPIC() \; SOFA_ATTRIBUTE_DISABLED( \; ""v20.12 (PR#12345)"", ""v21.06 (PR#45678)"", \; ""XXX must be renamed into YYY.""); ```. In my code; ```cpp; SOFA_ATTRIBUTE_DISABLED__MYDEPRECATIONTOPIC(); void myDeprecatedMethod() = delete;; ```. Anyone using myDeprecatedMethod will get an **error** right after this warning: ; ```text; warning: 'myDeprecatedMethod' is deprecated: It is not usable anymore because it has been DISABLED since v21.06 (PR#45678) after being deprecated on v20.12 (PR#12345). XXX must be renamed into YYY.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1793#issuecomment-785801249:2271,config,config,2271,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1793#issuecomment-785801249,1,['config'],['config']
Modifiability,"to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/image/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/build/lib/libSofaPython.dylib; [INFO] [Python_scene_test] running /Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py; ERROR: wrong number of arguments; [ERROR] [PythonScript] IndexError: list index out of range; File ""/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py"", line 15, in <module>; DAMPING_COEF = float( sys.argv[1] ). [ERROR] [SofaPython] Script (file:damping) import error; [ERROR] [PythonScriptController(PythonScriptController)] load error (file '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py' not parsable); ../applications/plugins/SofaTest/Python_test.cpp:263: Failure; Failed; python error; [ FAILED ] Batch/Python_scene_test.sofa_python_scene_tests/0, where GetParam() = 48-byte object <81-00 00-00 00-00 00-00 7E-00 00-00 00-00 00-00 00-4D 60-FA C4-7F 00-00 80-4D 60-FA C4-7F 00-00 10-4E 60-FA C4-7F 00-00 10-4E 60-FA C4-7F 00-00> (1051 ms); [----------] 1 test from Batch/Python_scene_test (1051 ms total); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264176:1634,plugin,plugins,1634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264176,3,['plugin'],['plugins']
Modifiability,"tory] Class already registered: MappingGeometricStiffnessForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PrecomputedConstraintCorrection<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: PrecomputedConstraintCorrection<Vec1d>; [WARNING] [ObjectFactory] Class already registered: PrecomputedConstraintCorrection<Vec3d>; [WARNING] [ObjectFactory] Default template for class SlidingConstraint already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: SlidingConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: StopperConstraint<Vec1d>; [WARNING] [ObjectFactory] Class already registered: UncoupledConstraintCorrection<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: UncoupledConstraintCorrection<Vec1d>; [WARNING] [ObjectFactory] Class already registered: UncoupledConstraintCorrection<Vec2d>; [WARNING] [ObjectFactory] Class already registered: UncoupledConstraintCorrection<Vec3d>; [WARNING] [ObjectFactory] Class already registered: UniformConstraint<Vec1d>; [WARNING] [ObjectFactory] Class already registered: UnilateralInteractionConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: DOFBlockerLMConstraint<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DOFBlockerLMConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: FixedLMConstraint<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: FixedLMConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: DistanceLMContactConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: DistanceLMConstraint<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DistanceLMConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: LMConstraintSolver; [WARNING] [ObjectFactory] Class already registered: LMConstraintDirectSolver; [INFO] [PluginManager] Loaded plugin: /home/jnbrunet/sources/sofa/build/lib/libSofaConstraint.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1652:5946,Plugin,PluginManager,5946,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1652,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"tryAlgorithms<Vec3d>; ....; ```. or with a cryptic error message if you try to use the PluginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it d",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:1478,plugin,plugin,1478,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,2,['plugin'],['plugin']
Modifiability,"ts [CGLinearSolver] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [DiagonalMass] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Dynamic""/> <!-- Needed to use components [TetrahedronSetGeometryAlgorithms TetrahedronSetTopologyContainer TetrahedronSetTopologyModifier] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Topology.Mapping""/> <!-- Needed to use components [Hexa2TetraTopologicalMapping] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->; ...; </Node>; ```. Should be refactored into. ```xml; <Node name=""root"" dt=""0.0001"" gravity=""0 0 0"" >; <Node name=""plugins"">; <RequiredPlugin name=""Sofa.Component.Collision.Geometry""/> <!-- Needed to use components [TriangleCollisionModel] -->; <RequiredPlugin name=""Sofa.Component.Constraint.Projective""/> <!-- Needed to use components [FixedConstraint LinearMovementConstraint] -->; <RequiredPlugin name=""Sofa.Component.Diffusion""/> <!-- Needed to use components [TetrahedronDiffusionFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.Engine.Select""/> <!-- Needed to use components [BoxROI] -->; <RequiredPlugin name=""Sofa.Component.IO.Mesh""/> <!-- Needed to use components [MeshOBJLoader] -->; <RequiredPlugin name=""Sofa.Component.LinearSolver.Iterative""/> <!-- Needed to use components [CGLinearSolver] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [DiagonalMass] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [M",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3379:1734,plugin,plugins,1734,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3379,1,['plugin'],['plugins']
Modifiability,"ts from Batch/Python_scene_test; [ RUN ] Batch/Python_scene_test.sofa_python_scene_tests/0; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/image/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Flexible/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaPython.so; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/Example.py; [ OK ] Batch/Python_scene_test.sofa_python_scene_tests/0 (2544 ms); [ RUN ] Batch/Python_scene_test.sofa_python_scene_tests/1; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/LambdaPropagation.py; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant.so; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant_gui.so; [DEPRECATED] [Compliant.Vec] Compliant's Vec.py is now deprecated (and will be deleted soon), please use numpy instead; [ERROR] [SofaPy",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:1105,plugin,plugins,1105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,1,['plugin'],['plugins']
Modifiability,"ttps://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. **Expected behavior**. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: v23.06.00 binaries"". **Command called**. ```txt; python3 /home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py. ```. **Env vars**. ```bash; #################; --- sys.version ---; 3.8.10 (default, Jul 29 2024, 17:02:10) ; [GCC 9.4.0]; --- PATH ---; /home/sofa/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.Non",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:1504,plugin,plugins,1504,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['plugin'],['plugins']
Modifiability,tu. ---------------------------------------------. ### Environment; MAC with M1 Process; **Context**. - System: MAC OS Celledar; - Version of SOFA: mast branch; - State: Build Directory. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >; `➜ bin ./runSofa ; [INFO] [runSofa] PluginRepository paths = /Users/hemingshan/Code/sofa/build/plugins:/Users/hemingshan/Code/sofa/build/collections:/Users/hemingshan/Code/sofa/build/lib; [INFO] [runSofa] DataRepository paths = /Users/hemingshan/Code/sofa/src/share:/Users/hemingshan/Code/sofa/src/examples:/Users/hemingshan/Code/sofa/build:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] GuiDataRepository paths = /Users/hemingshan/Code/sofa/src/applications/projects/runSofa/resources:/Users/hemingshan/Code/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.d,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:1189,Plugin,PluginManager,1189,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"u/cmake/CGAL; CGAL_CONFIG_LOADED = TRUE; CGAL_CONSIDERED_CONFIGS = /usr/lib/x86_64-linux-gnu/cmake/CGAL/CGALConfig.cmake; CGAL_CONSIDERED_VERSIONS = 4.11.1000; CGAL_CXX_FLAGS_DEBUG_INIT = -g; CGAL_CXX_FLAGS_INIT = -g -O2 -fdebug-prefix-map=/build/cgal-ZyilPF/cgal-4.11=. -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -frounding-math; CGAL_CXX_FLAGS_RELEASE_INIT = -O3 -DNDEBUG; CGAL_DIR = /usr/lib/x86_64-linux-gnu/cmake/CGAL; CGAL_DISABLE_GMP = ; CGAL_ENABLE_PRECONFIG = OFF; CGAL_ESSENTIAL_3RD_PARTY_LIBRARIES = GMP;MPFR;GMPXX; CGAL_EXT_LIB_Coin3D_PREFIX = COIN3D; CGAL_EXT_LIB_Eigen3_PREFIX = EIGEN3; CGAL_EXT_LIB_QGLViewer_PREFIX = QGLVIEWER; CGAL_EXT_LIB_Qt5_PREFIX = QT; CGAL_FOUND = 1; CGAL_GIT_SHA1 = ; CGAL_GRAPHICSVIEW_PACKAGE_DIR = /usr//include/CGAL/; CGAL_HEADER_ONLY = OFF; CGAL_INCLUDE_DIRS = /usr//include; CGAL_INSTALL_PREFIX = /usr/; CGAL_ImageIO_USE_ZLIB = ON; CGAL_LIB = CGAL; CGAL_LIBRARIES_DIR = /usr//lib/x86_64-linux-gnu; CGAL_LIBRARY = /usr/lib/x86_64-linux-gnu/libCGAL.so.13.0.1; CGAL_MAJOR_VERSION = 4; CGAL_MINOR_VERSION = 11; CGAL_MODULES_DIR = /usr//lib/x86_64-linux-gnu/cmake/CGAL; CGAL_MODULE_LINKER_FLAGS_DEBUG_INIT = ; CGAL_MODULE_LINKER_FLAGS_INIT = -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -Wl,--as-needed; CGAL_MODULE_LINKER_FLAGS_RELEASE_INIT = ; CGAL_SCM_BRANCH_NAME = ; CGAL_SHARED_LINKER_FLAGS_DEBUG_INIT = ; CGAL_SHARED_LINKER_FLAGS_INIT = -Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -Wl,--as-needed; CGAL_SHARED_LINKER_FLAGS_RELEASE_INIT = ; CGAL_SUPPORTING_3RD_PARTY_LIBRARIES = GMP;GMPXX;MPFR;ZLIB;OpenGL;LEDA;MPFI;RS;RS3;OpenNL;Eigen3;BLAS;LAPACK;QGLViewer;ESBTL;Coin3D;NTL;IPE; CGAL_USE_FILE = /usr//lib/x86_64-linux-gnu/cmake/CGAL/UseCGAL.cmake; CGAL_VERSION = 4.11.0; CGAL_VERSION_COUNT = 3; CGAL_VERSION_MAJOR = 4; CGAL_VERSION_MINOR = 11; CGAL_VERSION_PATCH = 1000; CGAL_VERSION_TWEAK = 0; -- Configuring done; -- Generating done; -- Build files have been written to: /root/project/build; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-611416421:2918,Config,Configuring,2918,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1308#issuecomment-611416421,1,['Config'],['Configuring']
Modifiability,"uffixes ( or no suffix at all ) to prepend when attemtping to load a plugin with a name hint. . # CHANGELOG ; FIX; [SofaHelper]; - Restore the `SOFA_LIBSUFFIX` behavior with msvc; - `PluginRepository` is initialized to contain the current working directory. CHANGE; [SofaHelper] ; - `PluginManager` : keep only a single version of the `loadPlugin` method. Also the method returns true; even if the plugin is already loaded. Returning false is kept only for real failures, whereby the library could ; not be loaded. If it is important to check wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ; It also gives some more advanced options to extend the plugin search. # Remarks. I do not know which version of the GUI is still in use. However I believe that the widget that can add/remove plugins to the `PluginManager` should be removed since there is no valid reason to ; keep it. I am really not sure about the current state of SofaGTestMain. It is hidden somewhere in the folder hierarchy (inside tools directory), and its existence seems to imply that you cannot write a unit test inside sofa without relying on it to ""initialise Sofa"" which is absolutely not the case. See PR #471; Instead having a library which depends on gtest and SofaCore which ; - factorize some initialisation methods when they are actually required in the test `SetUp()` method; - provide some useful abstractions when you want to test some important concepts of a component, like what SofaTest wanted to do, but without the dependency bloat. A potential non exhaustive list of abstactions such a library could provide ; - Mapping ; - linearisation, ; - applyJ applyJT equivalence ; - ForceField; - linearisation; - addDForce addKToMatrix equivalence ; - addKToMatrix must give a SPD matrix (well actually in Sofa convention I t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:2193,plugin,plugins,2193,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,2,"['Plugin', 'plugin']","['PluginManager', 'plugins']"
Modifiability,ugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env v,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:8634,Plugin,PluginManager,8634,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/C,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:5097,Plugin,PluginManager,5097,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,ugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with conte,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9054,Plugin,PluginManager,9054,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,ugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3331,Plugin,PluginManager,3331,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithD",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8507,Plugin,PluginManager,8507,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,uginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6585,Plugin,PluginManager,6585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"uginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:9045,Plugin,PluginManager,9045,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,uginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/sto,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:4817,Plugin,PluginManager,4817,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"uginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugin ""wayland"" in """". (process:29694): Gtk-WARNING **: 22:14:09.328: Locale not supported by C library.; 	Using the fallback 'C' locale.; Gtk-Message: 22:14:09.408: Failed to load module ""canberra-gtk-module""; Gtk-Message: 22:14:09.409: Failed to load module ""canberra-gtk-module""; [INFO] [SofaPluginManager] ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:11415,plugin,plugins,11415,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['plugin'],['plugins']
Modifiability,uginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2500,Plugin,PluginManager,2500,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,uidelines-slicing.html) | [performance-unnecessary-value-param](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-value-param.html) |; | [cppcoreguidelines-special-member-functions](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-special-member-functions.html) | [readability-avoid-const-params-in-decls](https://clang.llvm.org/extra/clang-tidy/checks/readability-avoid-const-params-in-decls.html) |; | [fuchsia-default-arguments](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-default-arguments.html) | [readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/readability-braces-around-statements.html) |; | [fuchsia-overloaded-operator](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-overloaded-operator.html) | [readability-container-size-empty](https://clang.llvm.org/extra/clang-tidy/checks/readability-container-size-empty.html) |; | [fuchsia-virtual-inheritance](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-virtual-inheritance.html) | [readability-delete-null-pointer](https://clang.llvm.org/extra/clang-tidy/checks/readability-delete-null-pointer.html) |; | [google-build-explicit-make-pair](https://clang.llvm.org/extra/clang-tidy/checks/google-build-explicit-make-pair.html) | [readability-deleted-default](https://clang.llvm.org/extra/clang-tidy/checks/readability-deleted-default.html) |; | [google-build-namespaces](https://clang.llvm.org/extra/clang-tidy/checks/google-build-namespaces.html) | [readability-else-after-return](https://clang.llvm.org/extra/clang-tidy/checks/readability-else-after-return.html) |; | [google-build-using-namespace](https://clang.llvm.org/extra/clang-tidy/checks/google-build-using-namespace.html) | [readability-function-size](https://clang.llvm.org/extra/clang-tidy/checks/readability-function-size.html) |; | [google-default-arguments](https://clang.llvm.org/extra/clang-tidy/checks/google-default-arguments.html) | [readability-identifier-naming](https://clan,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:25481,inherit,inheritance,25481,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['inherit'],['inheritance']
Modifiability,uild/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Relea,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8221,Plugin,PluginManager,8221,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,uild/bin/Release; [INFO] [runSofa] DataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/share;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/examples;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [runSofa] GuiDataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/applications/projects/runSofa/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.C,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1258,Plugin,PluginManager,1258,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"uld suggest a 3 steps approach :. 1. First only change the CMake scripts / per-lib main header/cpp to convert them to plugins WITHOUT moving the actual source files; 2. Document the proposed new directory hierarchy, propose it and wait for feedback from enough community members; 3. Once there is an agreement on the hierarchy, apply it via a commit that does not change anything else (changes in cmake scripts should be done as a separate commit, to ease solving later merge/conflict issues). And regarding point 2, instead of moving everything in `applications/plugins` that is only there because of a bad decision 10 years ago (it was simpler as we had to release the main directories as separate archives for licensing reason so we packed the couple of plugins we had together with the executables), I would propose to use the following:; - _Sofa root directory_; - SofaPlugins; - SofaMiscForceField; _..._; - SofaPluginsDeprecated; - SofaVRPNClient _any plugin we no longer support but still keep around if someone else want to pick it up_; - SofaPluginsGPL; - SceneCreator; - SofaPML; ... _any plugins with a GPL licence_; - SofaPlugins(.*) _any other licences or additional private ones in other repos_. Note: as an alternative, for the libs that are currently modules, instead of moving to a generic uninformative ""SofaPlugins"" directory, we could instead move them to the SofaGeneral/SofaAdvanced/SofaMisc directory that already exists and host their main cmake file. 4 advantages to this instead of everything is `applications/plugins`:; 1. one less directory to browse to in order to get to the actual source files; 2. it discourage any assumption that all plugins are/must be in the same directory; 3. clear separation of the different licences, so that we can be sure that a LGPL-only app does not actually include GPL-licenced headers (because of the useful convention to include plugins/lib classes with `MyPlugin/MyClass.h`, all codes must be compiled with options to add to the compil",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/482:2306,plugin,plugin,2306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/482,1,['plugin'],['plugin']
Modifiability,uninitialized variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1133:14,variab,variable,14,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1133,1,['variab'],['variable']
Modifiability,"unload() function of PluginManager was just removing the entry of the plugin in its map, but this one was effectively still loaded in the process memory. (on Windows, you could still see it using ProcessExplorer) ; This PR fixes it (i.e really unloads from memory). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1274:21,Plugin,PluginManager,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1274,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,unused variable,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1746:7,variab,variable,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1746,2,['variab'],['variable']
Modifiability,"uous. It was ""fixed"" later by adding directly inside the PluginManager code a condition to add the ""_d"" suffix by checking the compiler. ; - The default behavior of the global `PluginRepository`, was changed by c5a19fe for absolutely no good reasons.; It breaks a very basic functionaliy ( you can always load a library that is in your working directory ), also this change had some **interesting** side effects when basically you write a unit test which relies on; a scene file that uses a `RequiredPlugin`... that shortcoming was somewhat hidden by having all tests relying on `SofaGTest`, whose sole reason of being is to actually amend c5a19fe by populating the PluginRepository with the current working dir. Some additional functionalities are added to `RequiredPlugin` by this PR, namely the ability to specify other suffixes ( or no suffix at all ) to prepend when attemtping to load a plugin with a name hint. . # CHANGELOG ; FIX; [SofaHelper]; - Restore the `SOFA_LIBSUFFIX` behavior with msvc; - `PluginRepository` is initialized to contain the current working directory. CHANGE; [SofaHelper] ; - `PluginManager` : keep only a single version of the `loadPlugin` method. Also the method returns true; even if the plugin is already loaded. Returning false is kept only for real failures, whereby the library could ; not be loaded. If it is important to check wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ; It also gives some more advanced options to extend the plugin search. # Remarks. I do not know which version of the GUI is still in use. However I believe that the widget that can add/remove plugins to the `PluginManager` should be removed since there is no valid reason to ; keep it. I am really not sure about the current state of SofaGTestMain. It is hidden somewhere in the folder h",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:1395,Plugin,PluginRepository,1395,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,1,['Plugin'],['PluginRepository']
Modifiability,urn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_s,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2929,Plugin,PluginManager,2929,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"using cmake-gui, I have now activated the plugin sofa cuda: . here is the output of cmake-gui:; `````; Found CUDA: /usr/local/cuda-11.2 (found version ""11.2"") ; SofaCUDA: Plugin VolumetricRendering was not enabled/found, therefore CudaTetrahedralVisualModel will not be compiled.; SofaCUDA: SofaDistanceGrid was not enabled, therefore CudaDistanceGridCollisionModel will not be compiled.; SofaCUDA: optional dependency SofaSphFluid not enabled. ; Autodetected CUDA architecture(s): 7.5; SofaCUDA: nvcc flags: -gencode;arch=compute_75,code=sm_75;-Xcompiler -fPIC; `````. I'm compling sofa on my laptop that has a decent graphical card (a Quadro T2000) but that maybe not inadequate in GPU memory or precision for sofa. Double precision is not activated for instance. Anyway, the same error occurs even if I delete all files from previous compilation adn regenerate the cmake files. `````; 1121/1599] Building CXX object modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglShaderVisualModel.cpp.o; FAILED: modules/SofaOpenglVisual/CMakeFiles/SofaOpenglVisual.dir/src/SofaOpenglVisual/OglShaderVisualModel.cpp.o ; /usr/bin/clang++ -DNDEBUG -DSOFA_BUILD_OPENGL_VISUAL -DSOFA_BUILD_SOFAOPENGLVISUAL -DSofaOpenglVisual_EXPORTS -I/home/vozenne/Dev/sofa/src/modules/SofaOpenglVisual/src -Iinclude/SofaOpenglVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseVisual/src -Iinclude/SofaBaseVisual -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaBaseTopology/src -Iinclude/SofaBaseTopology -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaSimulationCommon/.. -Iinclude/SofaSimulation -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaCore/src -Iinclude/SofaFramework -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaSimulationCore/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../SofaDefaultType/src -I/home/vozenne/Dev/sofa/src/SofaKernel/modules/SofaHelper/../Sofa",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1864#issuecomment-786521312:42,plugin,plugin,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1864#issuecomment-786521312,2,"['Plugin', 'plugin']","['Plugin', 'plugin']"
Modifiability,"utomatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGen",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6230,Plugin,PluginManager,6230,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"ved (not needed by any SofaFramework module): TinyXML, ZLIB ; - SofaMisc; - Added to SofaMiscTopology: ZLIB; - Added to SofaMiscFem: Newmat; - SofaGeneral; - Added to SofaDenseSolver: Newmat; - Added to SofaGeneralLoader: ZLIB; - SofaGui; - Moved to SofaGuiQt: Qt + lots of options about QtViewer, QGLViewer, VSync, ...; - Modularized modules (oh yeah); - SofaPreconditioner: removed Newmat, added SofaSparseSolver; - SofaExporter: added ZLIB; - Plugins; - SofaMiscCollision: added SofaDistanceGrid; - SofaImplicitField: added SofaPython; - Registration: removed SofaOpenglVisual; - image: added ZLIB; - Flexible: added SofaPython. ## Rework all YYY_HAVE_XXX variables to reduce their scope. This is important for future global modularization of SOFA. - Variables are now named upon their module. . - Whenever you need to use the YYY_HAVE_XXX of another module, you surely should declare your own MYMODULE_HAVE_XXX instead. - All those new YYY_HAVE_XXX variables are booleans, so they can be used in CMake with `if(YYY_HAVE_XXX)` and in C++ (if correcly propagated via a config.h.in file) with `#if YYY_HAVE_XX` or `if(YYY_HAVE_XXX)`. - Add sofa_find_package and sofa_set_bool macros to auto create YYY_HAVE_XXX variables. - Edit sofa_install_targets to call `configure_file()` on any *.h.in found in target sources (the sources that are given to `add_library()`). :warning: Here is a quick tuto about [how to correctly add and propagate a dependency](https://gist.github.com/guparan/0b0ed00ad60b740f85b794cdff255229). ## Rework #1121 to avoid nested projects. - Use SOFA_NO_OPENGL to build an OpenGL-free version of SofaGuiQt. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1137:1331,variab,variables,1331,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1137,2,"['config', 'variab']","['config', 'variables']"
Modifiability,"virtual calls. The back_inserter of the default type could decompose all the chunks in scalars, while implementations dedicated to 3x3 chunks could push them in vector<Triplet<Mat3x3>>. Pr. Francois Faure; https://team.inria.fr/imagine/francois-faure/. > Le 6 avr. 2017 à 19:30, Maxime Tournier <notifications@github.com> a écrit :; > ; > ; > The biggest issue with sparse matrices is that there is no silver bullet representation that covers everyone's needs: some people like it compressed (row/column), others like to have small dense chunks instead of single floating points, and so on.; > ; > In particular, I see two major orthogonal uses of sparse matrices:; > ; > getting matrix data out of components; > working with sparse matrices (linear algebra, factorization, assembly); > It is not at all obvious that the two operations should use the same representation, and in fact I would argue against it. For instance in the Compliant plugin, we use Eigen sparse matrices for everything, and end up doing a lot of work in order to shift matrix blocks around which is tedious and costly.; > ; > I've been toying around with alternate designs, and the simplest I found so far is to use a plain old vector of triplets (row, column, value) for fetching matrix data. More precisely, mappings/forcefields directly push_back matrix data into a std::vector<Eigen::Triplet<SReal> > through a std::back_insert_iterator.; > ; > With this design the caller is then responsible for structuring the sparse data further (sorting/converting to CSR, shifting rows/columns, handing over to another library, etc) Of course this approach is tailored for our needs and might not fit others, and performance-wise it needs thorough benchmarking anyways, but I think that using separate data structures for getting the data and working with the data instead of a single structure is the way to go.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292785399:1644,plugin,plugin,1644,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292785399,1,['plugin'],['plugin']
Modifiability,"visitor was not design to work on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added two groups of function in `BaseMechanicalVisitor`:; - `processNodeTopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just have to call `processNodeTopDown_fwdMechanicalState_impl`. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Benefit from inheritance and avoid runtime checks compared to PR #1962 . ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to derive more functions. This PR is not to merge yet. It is suggested as an alternative to PR #1962 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; __",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1963:2131,inherit,inherits,2131,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963,1,['inherit'],['inherits']
Modifiability,"void handleEvent(sofa::core::objectmodel::Event* event); {; using namespace sofa::helper;; using namespace sofa::core::objectmodel;; using namespace sofa::core::behavior;. if (simulation::AnimateBeginEvent::checkEventType(event)); {; std::cout << ""onAnimateBeginEvent"" << std::endl;; auto moValue = sofa::helper::getWriteAccessor(*m_mo->write(core::VecCoordId::position()));; std::cout << moValue[0] << std::endl;; moValue[0] = moValue[0] + type::Vec3{ 1.0, 2.0, 3.0 };; std::cout << moValue[0] << std::endl;; }. if (simulation::AnimateEndEvent::checkEventType(event)); {; std::cout << ""onAnimateEndEvent"" << std::endl;; auto moValue = sofa::helper::getReadAccessor(*m_mo->read(core::VecCoordId::position()));; std::cout << moValue[0] << std::endl;; }; }. };; ```. ```c++; Simulation::SPtr simu = createSimulation(""DAG"");; Node::SPtr root = createRootNode(simu, ""root"");; sofa::component::initSofaBaseUtils();. simpleapi::createObject(root, ""RequiredPlugin"", { { ""pluginName"", ""SofaBaseMechanics""} });; simpleapi::createObject(root, ""RequiredPlugin"", { { ""pluginName"", ""PluginExample""} });. auto meca = createObject(root, ""MechanicalObject"", {; {""name"", ""MO""},; {""template"", ""Vec3d""},; {""position"", ""1 0 0""}; });; ; using MechaObjVec3 = sofa::component::container::MechanicalObject<defaulttype::Vec3Types>;; MechaObjVec3* mecaobj = dynamic_cast<MechaObjVec3*>(meca.get());; ; auto tcom = createObject(root, ""MyTestComponent"", {; {""position"", ""@MO.position""},; });. //auto cont = createObject(root, ""MyTestController"", {; // {""MO"", ""@MO""},; // }); . sofa::component::behaviormodel::MyTestController::SPtr cont = sofa::core::objectmodel::New<sofa::component::behaviormodel::MyTestController>(mecaobj);; root->addObject(cont);; ; sofa::simulation::getSimulation()->init(root.get());. sofa::simulation::getSimulation()->animate(root.get(), 0.01);; ```. ```; onAnimateBeginEvent; 1 0 0; 2 2 3; onAnimateEndEvent; 2 2 3; ```. (the controller just adding {1,2,3} to the mecha.position[0]). With both cases (",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2761#issuecomment-1063030017:1661,plugin,pluginName,1661,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2761#issuecomment-1063030017,3,"['Plugin', 'plugin']","['PluginExample', 'pluginName']"
Modifiability,vs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginMa,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5741,Plugin,PluginManager,5741,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"w():; s = SofaEditor.getSelection(); drawSomethingSpecialForSelectedObject(s); ```. The python binding is different to the one we have yet into Sofa s it is made totally independently to SofaPython and is done using cython (http://cython.org/) ; (for which I'm curious to see how this will survive our CI). . Other notable things are that there is unittest either on the c++ side & python side and that the CMakeLists.txt are installing everything into a single the install location with the following structure: ; module/SofaEditor/SofaEditor.so; module/SofaEditor/python/SofaEditor/__init__.py; module/SofaEditor/python/SofaEditor/SofaEditor.so ; module/SofaEditor/examples; (I'm not sure it is a good idea but this is a kind of ""package"" but I think it is an interesting way to ship plugins). . I will open other PR to integrate this feature into runSofa and runSofa2. . For the records, I was hesitating between three designs. The first one consists in using the ""context/ExecParams"" to hold the editor state. As this context is passed to the components during the scenegraph traversal this would allows them to know the status of the editor. The second approach was using flexible messages/event transmitted through the scene graph. The third design was much simpler and simply consist of using a singleton so that it can be used everywhere there is a need to know the editor status. Between the three I made the decision to use the simplest approach (simpler to implement & simpler to use) despite he is more limited. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/735:2112,flexible,flexible,2112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/735,1,['flexible'],['flexible']
Modifiability,what is the goal here in fact? to put all exporter as a plugin in a next PR?; I don't understand the class move from modules/SofaExporter/ to modules/SofaExporter/src/SofaExporter/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/915#issuecomment-460073639:56,plugin,plugin,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/915#issuecomment-460073639,1,['plugin'],['plugin']
Modifiability,"what was going wrong with this test, I can see only message refactoring in the diff.; No info in the PR description.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1097#issuecomment-509993235:60,refactor,refactoring,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1097#issuecomment-509993235,1,['refactor'],['refactoring']
Modifiability,"will be done in a future PR). -------------------------. More importantly, this PR introduces a new API for targets and packages management, following this scheme:. ```cmake; sofa_create_package_with_targets() # replacing sofa_generate_package. sofa_create_package() # replacing sofa_write_package_config_files. sofa_add_targets_to_package() # replacing sofa_install_targets; if(AUTO_SET_TARGET_PROPERTIES); sofa_auto_set_target_properties() # from a part of sofa_install_targets; endif(); sofa_install_targets_in_package() # from a part of sofa_install_targets; ; if(RELOCATABLE); sofa_set_target_install_relocatable() # replacing sofa_set_install_relocatable; endif(); ```. You can now use only what you need. ; The mega-master-calling-all-the-others macro is sofa_create_package_with_targets (replacing sofa_generate_package). ## Usual examples. To create a ""plugin"" package like SofaExporter:; ```cmake; sofa_create_package_with_targets(; PACKAGE_NAME SofaExporter; PACKAGE_VERSION ${SofaExporter_VERSION}; TARGETS SofaExporter AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SofaExporter""; RELOCATABLE ""plugins""; ); ```. To create a ""legacy meta-module"" package like SofaGeneral:; ```cmake; sofa_create_package_with_targets(; PACKAGE_NAME SofaGui; PACKAGE_VERSION ${Sofa_VERSION}; TARGETS SofaGui AUTO_SET_TARGET_PROPERTIES; INCLUDE_SOURCE_DIR ""src""; INCLUDE_INSTALL_DIR ""SofaGui""; ); ```. To register a ""legacy module"" target like SofaGeneralEngine:; ```cmake; sofa_add_targets_to_package(; PACKAGE_NAME SofaGeneral; TARGETS SofaGeneralEngine AUTO_SET_TARGET_PROPERTIES; ); ``` . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1433:1083,plugin,plugin,1083,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1433,2,['plugin'],"['plugin', 'plugins']"
Modifiability,"will not be mixed with SOFA anymore.; Instead, they will be installed in their own directory under `<install_prefix>/plugins`.; More importantly, they will be relocatable which means they will behave like if they were built out-of-SOFA.; Principal advantage: we will be able to get redistributable plugin binaries through a classic SOFA build. . ### [Defrost binaries changes for a better install, specifically on MacOS](https://github.com/sofa-framework/sofa/commit/22f3c14a25bf879143fb58403a34d569e8ab727f); - [CMake] FIX install: SofaMiscCollision, SofaDistanceGrid, SofaImplicitField; - [CMake] FIX install on MacOS: differentiate SOFA_BUILD_RELEASE_PACKAGE and SOFA_BUILD_APP_BUNDLE; - [SofaMacros] ADD backward compatibility for INCLUDE_INSTALL_DIR; - [SofaMacros] ADD EXAMPLE_INSTALL_DIR to sofa_create_package; - [SofaMacros] Improve sofa_set_python_directory macro; - [SofaPython] Wider dir search for env loading; - [SofaGuiQt] Remove VSync message; - [package.cmake] Do not force CMAKE_BUILD_TYPE + Enable more plugins. ### [[DiffusionSolver] MOVE from image/extlibs to a real plugin](https://github.com/sofa-framework/sofa/commit/54f49d039aadaffd57a1d7f8ebab3af82e407674); I see no reason not to do that. Dependencies to DiffusionSolver are simpler this way. ### [[CImgPlugin] CLEAN include directory](https://github.com/sofa-framework/sofa/commit/1a617d5350f74ac4a816255960d92638a26cba1b); Sources moved to `src`. No more `../` horror in CImgPlugin include directories. ## Other changes. - [SofaHelper] FIX DynamicLibrary altered search path (Windows only) ; Needed to prefer `bin` libraries over neighboor libraries; - [SofaFramework] FIX typo in config.h.in; - [runSofa] Check if plugins dir exists before adding to PluginRepository; - [SofaTest] FIX SofaPython finding in *Config.cmake.in; - [plugins] ADD missing *Config.cmake.in files; Needed to use them as real plugins; - [All] Improve sofa_copy_libraries and sofa_install_libraries macros; Make them easier to use; - [CMake] Renam",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:3234,plugin,plugins,3234,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['plugin'],['plugins']
Modifiability,with normal installation there was problem in the configuring step where we choose unix /ninja and assign C & C++ compilers. it was not able to locate the compilers even though I browsed that. I also tried with gcc/g++. ; which procedure should I follow? I am frustrated. ; Is Unbuntu 18.04 causing problem?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315531153:50,config,configuring,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486#issuecomment-1315531153,1,['config'],['configuring']
Modifiability,"with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolve",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:2840,Plugin,PluginManager,2840,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"work/sofa.git; cd sofa/src; git checkout master; mkdir build-master; cd build-master; cmake [options] ..; make; ```. To be clear, build directory is: `/home/emdash00/Apps/git-apps/sofa/src/build-master`. Edit: updated `cmake-log.txt`. Last one was the wrong configuration by accident. I tried remaking the config, though it might not be 100% accurate. I used cmake-gui for the options, so here's the [CMakeCache.txt](https://github.com/sofa-framework/sofa/files/4777146/CMakeCache.txt).; Here's the configuration process log of the `cmake [options] ..` command: [cmake-log.txt](https://github.com/sofa-framework/sofa/files/4777183/cmake-log.txt). Output is very long so I've attached it in this text file [log.txt](https://github.com/sofa-framework/sofa/files/4777142/log.txt). Probably the most notably part is on log.txt:385, which I'll post here. Note: I spaced it to make it visually easier to read. The original is all on a single line of course.; ```; /home/emdash00/Apps/git-apps/sofa/src/applications/plugins/SofaOpenCL/OpenCLIdentityMapping.cpp:71:16: error: duplicate explicit instantiation of; ‘class sofa::component::mapping::IdentityMapping<sofa::gpu::opencl::OpenCLVectorTypes<sofa::defaulttype::Vec<3, float>, ; 													 	 sofa::defaulttype::Vec<3, float>, float>,; 									 				 sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3, float>, ; 													 	 sofa::defaulttype::Vec<3, float>, float> >’ [-fpermissive]; ```. I'm unsure of where the original instantiation is. I'm just trying to use the library since Ubuntu 19.10 doesn't have prebuilt packages yet. I don't think this is part of the issue; however, I'm using OpenCL for an Intel GPU. I wasn't sure how computationally intensive this library would be, but I thought might as well try to utilize my Intel HD Graphics Unit. . Here's an attachment of all relevant system specs using linux commands: [sysinfo.txt](https://github.com/sofa-framework/sofa/files/4777150/sysinfo.txt); In case of any discrepancy, her",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1419:1089,plugin,plugins,1089,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1419,1,['plugin'],['plugins']
Modifiability,"workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu: In function 'void sofa::gpu::cuda::mycudaGLUnregisterBufferObject(int)':; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu:385:39: warning: 'cudaError_t cudaGLUnregisterBufferObject(GLuint)' is deprecated [-Wdeprecated-declarations]; 385 | cudaCheck(cudaGLUnregisterBufferObject((GLuint)id),""cudaGLUnregisterBufferObject"");; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~; /usr/local/cuda/include/cuda_gl_interop.h:410:46: note: declared here; 410 | extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaGLUnregisterBufferObject(GLuint bufObj);; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu: In function 'void sofa::gpu::cuda::mycudaGLMapBufferObject(void**, int)':; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu:390:32: warning: 'cudaError_t cudaGLMapBufferObject(void**, GLuint)' is deprecated [-Wdeprecated-declarations]; 390 | cudaCheck(cudaGLMapBufferObject(ptr, (GLuint)id),""cudaGLMapBufferObject"");; | ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~; /usr/local/cuda/include/cuda_gl_interop.h:362:46: note: declared here; 362 | extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaGLMapBufferObject(void **devPtr, GLuint bufObj);; | ^~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu: In function 'void sofa::gpu::cuda::mycudaGLUnmapBufferObject(int)':; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu:395:34: warning: 'cudaError_t cudaGLUnmapBufferObject(GLuint)' is deprecated [-Wdeprecated-declarations]; 395 | cudaCheck(cuda",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4871:1846,plugin,plugins,1846,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4871,1,['plugin'],['plugins']
Modifiability,would there be a way to separate the cleaning and the changes actually related to the PR?; is it not a problem to add a new class (an interface) to inherit from? does it not make the inheritance tree heavier? This second point is just a remark but obviously not blocking at all,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2438#issuecomment-958802655:148,inherit,inherit,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2438#issuecomment-958802655,2,['inherit'],"['inherit', 'inheritance']"
Modifiability,"x.system/bootstrap/usr/local/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin:/var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin:/usr/local/share/dotnet:~/.dotnet/tools; > --- SOFA_ROOT ---; > /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; > --- PYTHONPATH ---; > /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages:/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages:/path/to/SofaPython3/lib/python3/site-packages:; > --- sys.path ---; > ['', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.12.01_MacOS/plugins/SofaPython3/lib/python3/site-packages', '/path/to/SofaPython3/lib/python3/site-packages', '/opt/anaconda3/envs/sofarl/lib/python38.zip', '/opt/anaconda3/envs/sofarl/lib/python3.8', '/opt/anaconda3/envs/sofarl/lib/python3.8/lib-dynload', '/opt/anaconda3/envs/sofarl/lib/python3.8/site-packages']; > #################; > ```; > ; > ### Logs; > **Full output**; > ; > ```; > (sofarl) bemore@BeMores-MacBook-Pro site-packages % python ; > Python 3.8.19 (default, Mar 20 2024, 15:27:52) ; > [Clang 14.0.6 ] :: Anaconda, Inc. on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > >>> import Sofa; > ---------------------------------------; > Checking SOFA_ROOT and SOFAPYTHON3_ROOT; > Using environment variable SOFA_ROOT: /Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS; > ---------------------------------------; > Traceback (most recent call last):; > File ""<stdin>"", line 1, in <module>; > File ""/Users/bemore/Library/CloudStorage/OneDrive-Personal/DEV/SOFA_study/SOFA_v23.06.00_MacOS/",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179:4533,plugin,plugins,4533,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2254322179,1,['plugin'],['plugins']
Modifiability,x/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:7990,Plugin,PluginManager,7990,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,x107f67fff +libSofaUserInteraction.20.12.01.dylib (0) <BE44029E-7778-3A49-88DE-C2B749FC8B02> /Applications/runSofa.app/Contents/MacOS/plugins/SofaUserInteraction/lib/libSofaUserInteraction.20.12.01.dylib; 0x108050000 - 0x10807bfff +libSofaGraphComponent.20.12.01.dylib (0) <E287C3F6-BA9B-3659-A9EB-38E2A3A80B8A> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGraphComponent/lib/libSofaGraphComponent.20.12.01.dylib; 0x1080d7000 - 0x1080f2fff +libSofaBaseUtils.20.12.01.dylib (0) <581FCEED-99DD-3642-AC19-1EFB56334375> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseUtils.20.12.01.dylib; 0x108130000 - 0x108167fff +libSofaGeneralMeshCollision.20.12.01.dylib (0) <BFA69B16-EFE2-3F2D-843D-38EA209DB60B> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.20.12.01.dylib; 0x1081d4000 - 0x1081f7fff +libSofaGeneralVisual.20.12.01.dylib (0) <2801711D-11F2-342D-9659-A6760DB8B489> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.20.12.01.dylib; 0x108235000 - 0x1082a8fff +libSofaTopologyMapping.20.12.01.dylib (0) <25291751-E35F-3A44-B167-CB54D1C86B40> /Applications/runSofa.app/Contents/MacOS/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.20.12.01.dylib; 0x10834c000 - 0x1083dbfff +libSofaGeneralSimpleFem.20.12.01.dylib (0) <4787B69F-1093-3E5B-8414-BE5EA23432F5> /Applications/runSofa.app/Contents/MacOS/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.20.12.01.dylib; 0x108544000 - 0x10859ffff +libSofaSimpleFem.20.12.01.dylib (0) <39F60B90-A0EE-3992-9391-A0CF20CB95DE> /Applications/runSofa.app/Contents/MacOS/plugins/SofaSimpleFem/lib/libSofaSimpleFem.20.12.01.dylib; 0x10862d000 - 0x10868cfff +libSofaBaseVisual.20.12.01.dylib (0) <3FF1BCE6-2796-3533-B23D-8440A29E1F9E> /Applications/runSofa.app/Contents/MacOS/lib/libSofaBaseVisual.20.12.01.dylib; 0x10873d000 - 0x10879cfff +libSofaMiscForceField.20.12.01.dylib (0) <DFAD70EA-9BF9-3F8F-9767-866C72E011B4> /Applications/r,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:3686,plugin,plugins,3686,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['plugins']
Modifiability,x7fff2afe2fff libChineseTokenizer.dylib (37) <718400BF-9911-3CB6-8CCE-4C2D7C35D80A> /usr/lib/libChineseTokenizer.dylib; 0x7fff2afe3000 - 0x7fff2b0a1fff libvMisc.dylib (760.40.6) <9D11FCFC-6C30-32B6-864B-9CC3ED7D1143> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib; 0x7fff2b0a2000 - 0x7fff2b13afff libate.dylib (3.0.4) <42707DFB-86A4-3F56-A5AF-E6DAA7E49DC7> /usr/lib/libate.dylib; 0x7fff2b13b000 - 0x7fff2b142fff libIOReport.dylib (64) <8DEEA01D-B715-340A-900E-B448AB22720E> /usr/lib/libIOReport.dylib; 0x7fff2b143000 - 0x7fff2b171fff com.apple.CrashReporterSupport (10.13 - 15047.1) <EA306EDB-2A02-3FB6-8812-F5EAA337AEE6> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport; 0x7fff2b189000 - 0x7fff2b209fff com.apple.CVNLP (1.0 - 119) <01312979-649E-3869-801B-C4CF70DA1236> /System/Library/PrivateFrameworks/CVNLP.framework/Versions/A/CVNLP; 0x7fff2b228000 - 0x7fff2b25dfff com.apple.pluginkit.framework (1.0 - 1) <343BA2F7-C204-3C30-BAC1-C85CC0A8DCFF> /System/Library/PrivateFrameworks/PlugInKit.framework/Versions/A/PlugInKit; 0x7fff2b25e000 - 0x7fff2b265fff libMatch.1.dylib (38) <DE8B7844-BFB2-3E3E-9FD0-1C9AD1DC1736> /usr/lib/libMatch.1.dylib; 0x7fff2b266000 - 0x7fff2b2f1fff libCoreStorage.dylib (554) <044E6815-6340-31D5-BEE9-760C354E92A3> /usr/lib/libCoreStorage.dylib; 0x7fff2b2f2000 - 0x7fff2b345fff com.apple.AppleVAFramework (6.1.3 - 6.1.3) <E3BE877B-1C78-3ABF-8C41-66FE9B6971C7> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA; 0x7fff2b346000 - 0x7fff2b35ffff libexpat.1.dylib (26) <1D978F91-674E-3A44-8A93-773C7E3E513C> /usr/lib/libexpat.1.dylib; 0x7fff2b360000 - 0x7fff2b369fff libheimdal-asn1.dylib (597.80.1) <8F6CD867-FB45-375D-82C1-E0AE79558C8C> /usr/lib/libheimdal-asn1.dylib; 0x7fff2b36a000 - 0x7fff2b37efff com.apple.IconFoundation (479.3 - 479.3) <3563C4B4-ABF6-3DE0-8381-D3667DFE2B80> /System/Library/PrivateFrameworks/IconFoundation.framewor,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:48403,plugin,pluginkit,48403,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['plugin'],['pluginkit']
Modifiability,"xible/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/image/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/build/lib/libSofaPython.dylib; [INFO] [Python_scene_test] running /Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py; ERROR: wrong number of arguments; [ERROR] [PythonScript] IndexError: list index out of range; File ""/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py"", line 15, in <module>; DAMPING_COEF = float( sys.argv[1] ). [ERROR] [SofaPython] Script (file:damping) import error; [ERROR] [PythonScriptController(PythonScriptController)] load error (file '/Users/sofa/jenkins_2/workspace/mac_clang-3.4_options_pr2/pr/all/applications/plugins/SofaTest/SofaTest_test/scenes/damping.py' not parsable); ../applications/plugins/SofaTest/Python_test.cpp:263: Failure; Failed; python error; [ FAILED ] Batch/Python_scene_test.sofa_python_scene_tests/0, where GetParam() = 48-byte object <81-00 00-00 00-00 00-00 7E-00 00-00 00-00 00-00 00-4D 60-FA C4-7F 00-00 80-4D 60-FA C4-7F 00-00 10-4E 60-FA C4-7F 00-00 10-4E 60-FA C4-7F 00-00> (1051 ms); [----------] 1 test from Batch/Python_scene_test (1051 ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264176:1406,plugin,plugins,1406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/656#issuecomment-391264176,1,['plugin'],['plugins']
Modifiability,"y registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec2d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Default template for class SlidingConstraint already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec2d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [INFO] [PluginManager] Loaded plugin: /home/jnbrunet/sources/sofa/build/lib/libSofaConstraint.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1652:2562,Plugin,PluginManager,2562,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1652,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,yContactForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [WARNING] [ObjectFactory] Class already registered: LineCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PointCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TriangleCollisionModel<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [WARNING] [ObjectFactory] Class already registered: MeshOBJLoader; [WARNING] [ObjectFactory] Class already registered: MeshVTKLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [WARNING] [ObjectFactory] Class already registered: RecordedCamera; [WARNING] [ObjectFactory] Class already registered: VisualTransform; [WARNING] [ObjectFactory] Class already registered: Visual3DText; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [WARNING] [ObjectFactory] Class already registered: AddFrameButtonSetting; [WARNING] [ObjectFactory] Class already registered: AddRecordedCameraButtonSetting; [WARNING] [ObjectFactory] Class already registered: StartNavigationButtonSetting; [WARNING] [ObjectFactor,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:12717,Plugin,PluginManager,12717,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,3,"['Plugin', 'plugin']","['PluginManager', 'plugin', 'plugins']"
Modifiability,"yes and it is ""funny"" because I had the same issue in https://github.com/sofa-framework/sofa/pull/3368; this is just because Grid inherite from MeshTopology which doesn't define the TopoogyType as Hexahedron. ![](https://www.melty.fr/wp-content/uploads/meltyfr/2019/10/media-9.gif)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3339#issuecomment-1301364991:130,inherit,inherite,130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3339#issuecomment-1301364991,1,['inherit'],['inherite']
Modifiability,yes but it ends in the same discussion as all the other typedefs that are in sofa::core::topology::Topology {}; You need to inherite or at least include that class to be able to use Topology::InvalidID ... ; Maybe a more generic one in sofa::defaultTypes ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/866#issuecomment-448620464:124,inherit,inherite,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/866#issuecomment-448620464,1,['inherit'],['inherite']
Modifiability,"yes, private inheritance requires some changes. But I wonder if inheritance is really necessary at all. If it's only to get the bounds checking in debug, there are compilation options for some compilers.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4180#issuecomment-1724991040:13,inherit,inheritance,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4180#issuecomment-1724991040,2,['inherit'],['inheritance']
Modifiability,"yet an other option is to conditionnaly compile HighOrderTopology code in Flexible based on whether the HighOrderTopology plugin is existing or not (in cmakelists package_require(HighOrderTopology) if (HighOrderTopology_FOUND) ... ): ; - each plugin can live in its own repository ; - no need for a third plugin ; - should work whether all the plugins are compiled in the same cmake build project or are compiled/installed separately (well HighOrderTopology must be available when compiling Flexible) . thomas . ----- Mail original -----. > De: ""Matthieu Nesme"" notifications@github.com; > À: ""sofa-framework/sofa"" sofa@noreply.github.com; > Envoyé: Mercredi 5 Octobre 2016 13:55:09; > Objet: Re: [sofa-framework/sofa] Remove bezier high order (#16); > ; > Hi Hervé,; > ; > In general, I think it is a good idea to have a repo per plugin, even if it; > becomes more difficult to update them when the sofa core is modified.; > But in this specific case, it would be great to add this plugin to this; > github repo, so Flexible can still benefit from your code.; > ; > Another solution, could be to add a third plugin in your independent; > repository, that would link with both SOFA-HighOrderTopology and Flexible,; > and that would contain the high order shape functions.; > ; > What do you think?; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251673936:74,Flexible,Flexible,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/16#issuecomment-251673936,11,"['Flexible', 'plugin']","['Flexible', 'plugin', 'plugins']"
Modifiability,ylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mappi,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:2932,Plugin,PluginManager,2932,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Plugin', 'plugin']","['PluginManager', 'plugin']"
Modifiability,"you still include gl.h, which does nothing.; This is quite nonsensical.; Moreover, if the macro is not well handled in CMake, you may have some weird things happening. # Solution; This PR regroups all OpenGL related code in the core in a single package, needing only SofaHelper and SofaDefaulttype.; If you wish to be able to call OpenGL things, just find_package() it and link it to your library; ```; find_package(Sofa.GL REQUIRED); ...; target_add_library(${Target} PUBLIC .... Sofa.GL); ```. You can even conditionnally test if OpenGL is present or not with ; ```; if(Sofa.GL_FOUND); ...; endif(); ```; if needed (to compile specific components in your module for example). And even more, if you want to compile specific parts of your code with OpenGL (not a good idea but still), you can use this like an external dependency.; Example with **ColourPickingVisitor** in **SofaGuiCommon**.; CMakeLists.txt:; ```; sofa_find_package(Sofa.GL) # create the cmake var SOFAGUICOMMON.GL_HAVE_SOFA.GL; ```; config.h.in; ```; #define SOFAGUICOMMON_HAVE_SOFA_GL @SOFAGUICOMMON_HAVE_SOFA.GL@; ```; ColourPickingVisitor.cpp; ```; void ColourPickingVisitor::processTriangleModel(simulation::Node * node, sofa::component::collision::TriangleCollisionModel<sofa::defaulttype::Vec3Types> * tmodel); {; #ifdef SOFAGUICOMMON_HAVE_SOFA_GL; using namespace sofa::core::collision;; using namespace sofa::defaulttype;; glDisable(GL_LIGHTING);; ....; #endif // SOFAGUICOMMON_HAVE_SOFA_GL; ```; # Compatibility with actual code and breaking things; This new module follows the new targeted architecture for Sofa(NG), hence the Sofa.GL syntax.; All classes/functions are now in the namespace sofa::gl and in the folder sofa/gl; e.g Texture, ; **sofa/gl/Texture.h**; ```; namespace sofa::gl; {; 	class Texture {...}; }; ```. To avoid breaking (a lot of) code, a compatibility layer has been implemented, so the existing code still works:; ```; #include <sofa/helper/gl/Texture.h; ...; sofa::helper::gl::Texture = ....;; ```;",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1649:1734,config,config,1734,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1649,1,['config'],['config']
Modifiability,you turn SofaCUDA plugin to on by my fault? :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2440#issuecomment-948595593:18,plugin,plugin,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2440#issuecomment-948595593,1,['plugin'],['plugin']
Modifiability,"ython version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Components/Components.py ; ModuleNotFoundError: No module named 'Sofa.Components'. At:; Components.py(4): <module>; <frozen importlib._bootstrap>(219): _call_with_frames_removed; <frozen importlib._bootstrap_external>(783): exec_module; <frozen importlib._bootstrap>(686): _load_unlocked; <frozen importlib._bootstrap>(702): _load; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(171): load_source; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:2925,inherit,inherits,2925,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['inherit'],['inherits']
Modifiability,"~~Last one (?) 🤔~~. #1527 . based on:; - #2813 . Deprecates _**SofaBaseVisual**_, ; Deprecates partially **SofaUserInteraction** and **_SofaGraphComponent_**. Gathers ""general"" configuration settings component in **Sofa.Component.Setting**; and Controller related things in **Sofa.Component.Controller**. The rest of configuration setting was originally present as well, plus the ""performer"" (inciseperformer, addcameraperformer...) but those will be added in a separate Sofa.GUI family modules). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2843:177,config,configuration,177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2843,2,['config'],['configuration']
Modifiability,"~~[DEMO]~~. First step for an unified testing system. This module gathers:; - helper/testing files: utilitary to write new tests; - gtest: API Google test (all tests are based on it); - SofaGTestMain (force-load SofaSimulationGraph): template of Main to centralize test-related things. This module needs to be compiled AFTER SofaSimulation, as SofaGTestMain needs SofaSimulationGraph. Unfortunately, there is still the mess with the plugin SofaTest, which needs to be solved as well.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1834:433,plugin,plugin,433,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1834,1,['plugin'],['plugin']
Modifiability,"~~_This PR should wait #1990, #2000 and he is more a ""preview"" PR for showing the ALIAS system._~~. Ref: #1521, #1527. ## What; SofaHelper, SofaDefaulttype, SofaCore and SofaSimulationCore does not respect the new naming convention (following namespace, etc). So this PR renames those 4 modules:; - SofaHelper ▶ Sofa.Helper; - SofaDefaulttype ▶ Sofa.Defaulttype; - SofaCore ▶ Sofa.Core; - SofaSimulationCore ▶ Sofa.SimulationCore (this one will need more work for the namespaces etc). This PR does not rename physically the folders, I preferred split the renaming in two steps (and have a less chaotic git history). ## Breaking?; Nope, thanks to the Alias system in CMake (I would have not bet on that at the beginning 😗); I could compile SofaPy3 out-of-tree without changing anything. I added some compatibility for the previous cmake macro/variables in the config.h (e.g SOFAHELPER_HAVE_BOOST instead of the new variable SOFA_HELPER_HAVE_BOOST).; These variables are not used at all in the code base of SOFA but some users might use them in their external plugins?. Actually, it could break projects using directly SofaHelper(&co) directly, i.e not handling CMake target but library names directly. (but people should not do that 🤥). Tested with an out-of-tree build of SofaPy3. ## After; Once everything is done, and once things are calming down in the SofaFramework, the folders themselves can be renamed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2001:842,variab,variables,842,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2001,3,"['config', 'variab']","['config', 'variable', 'variables']"
Modifiability,"~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~; /usr/local/cuda/include/cuda_gl_interop.h:333:46: note: declared here; 333 | extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaGLRegisterBufferObject(GLuint bufObj);; | ^~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu: In function 'void sofa::gpu::cuda::mycudaGLUnregisterBufferObject(int)':; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu:385:39: warning: 'cudaError_t cudaGLUnregisterBufferObject(GLuint)' is deprecated [-Wdeprecated-declarations]; 385 | cudaCheck(cudaGLUnregisterBufferObject((GLuint)id),""cudaGLUnregisterBufferObject"");; | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~; /usr/local/cuda/include/cuda_gl_interop.h:410:46: note: declared here; 410 | extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaGLUnregisterBufferObject(GLuint bufObj);; | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu: In function 'void sofa::gpu::cuda::mycudaGLMapBufferObject(void**, int)':; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu:390:32: warning: 'cudaError_t cudaGLMapBufferObject(void**, GLuint)' is deprecated [-Wdeprecated-declarations]; 390 | cudaCheck(cudaGLMapBufferObject(ptr, (GLuint)id),""cudaGLMapBufferObject"");; | ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~; /usr/local/cuda/include/cuda_gl_interop.h:362:46: note: declared here; 362 | extern __CUDA_DEPRECATED __host__ cudaError_t CUDARTAPI cudaGLMapBufferObject(void **devPtr, GLuint bufObj);; | ^~~~~~~~~~~~~~~~~~~~~; /builds/workspace/sofa-framework/PR-4852/ubuntu_gcc_options_release/src/applications/plugins/SofaCUDA/sofa/gpu/cuda/mycuda.cu: In function 'void sofa::gpu::cuda::mycudaGLUnmapBufferObject(int)':; /bui",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4871:1644,plugin,plugins,1644,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4871,1,['plugin'],['plugins']
Modifiability,"… into a dedicated plugin. Replaces https://github.com/sofa-framework/sofa/pull/4395. The new PR now complies with the conclusion on the architecture of a plugin, described [in the doc](https://www.sofa-framework.org/community/doc/programming-with-sofa/create-your-plugin/#plugin-architecture). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4487:19,plugin,plugin,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4487,4,['plugin'],"['plugin', 'plugin-architecture']"
Modifiability,"… into a dedicated plugin. The plugin VolumetricRendering needed a bit of cleaning too. The new folder hierarchy is the following:. - SofaCUDA; - VolumetricRendering; - VolumetricRendering; - VolumetricRendering.CUDA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4395:19,plugin,plugin,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4395,2,['plugin'],['plugin']
Modifiability,"⚠! Uber PR incoming! ⚠; (Will basically conflict every time a branch is merged 🤪) . This PR generalizes the use of the Sofa.Type module (with things formerly in SofaHelper, SofaDefaulttype and SofaCore).; E.g:; - helper::fixed_array becomes type::fixed_array; - defaulttype::Vec becomes type::Vec; - defaulttype::Quat and helper::Quater becomes type::Quat (and typedef *Quaternion* is removed); - helper::types::RGBAColor becomes type::RGBAColor; - and many more; More info in #1521 . These renames was handled in Sofa.Compat to be the less problematic possible while converting.; Now for the release of v21.06, it is logical to use the correct namespaces/headers. Big Warning though: the Sofa.Compat is still here for the external plugins, but as the headers/file inclusions changes, it is highly probable that they will break at compilation: a lot of people does not ""include what they use"" and what relying on the previous inclusions. Later TODO: add a cmake option to make the use of Sofa.Compat optional. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2179:732,plugin,plugins,732,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2179,1,['plugin'],['plugins']
Modifiability,"⚠️ DO NOT MERGE ! ⚠️ . The CI only compiles in debug for one configuration and only when a commit is done on the master.; AND a lot of failures just happen because of timeouts. So the readings are uncomfortable, to say the least. So This PR simply enable assertions in release mode (overriding the flags) and should show where the assertions happen,. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4496:61,config,configuration,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4496,1,['config'],['configuration']
Modifiability,"👍 for removing sofa::helper::io::Mesh*. There is however an issue that the support for loading texture coordinates was removed from MeshObjLoader, so the OglModel version on the master can only have textures when using these deprecated loaders. In our latest integration branch we reverted this removal of texcoords support and fixed it to have the same level of support using MeshObjLoader+OglModel as when loading the file directly in OglModel (most notably handling of ""seams"" where a single vertex has multiple texture coordinates). The relevant commits are:; - https://github.com/InSimo/sofa/commit/915ee46368efe140b242759a0110682f71200dc1; - https://github.com/InSimo/sofa/commit/08493b9ab5c8ea376ba9a7f9a2cea3e81f513511; - https://github.com/InSimo/sofa/commit/e6bec10562ab797963027003c2282cbc24a53bb9; - https://github.com/InSimo/sofa/commit/1925b381b7d8cb939d250ab24e92fb28df918c0b. To be merged to the master the first commit need to be done in a cleaner way than a full revert, which removed later refactorings like apparently the introduction of a File class.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/42#issuecomment-298865553:1009,refactor,refactorings,1009,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/42#issuecomment-298865553,1,['refactor'],['refactorings']
Modifiability,🥹; ```; Test Result (2 failures / +1); SceneTests.applications/plugins/SoftRobots/examples/tutorials/Tripod/myproject.elasticbody.py; SceneTests.applications/plugins/SoftRobots/examples/tutorials/Tripod/myproject.step6.py; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1630092082:63,plugin,plugins,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3882#issuecomment-1630092082,2,['plugin'],['plugins']
Performance," ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [Required",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3842,load,load,3842,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance," - Remove ClassInfo, deprecated in favor of BaseClass, and make sure all static instances are initialized while registering objects in the factory, to FIX ""pure virtual call"" crashes with visual c++ in multi-threaded contexts; - Replace `Creator<Contact::Factory,` with `sofa::core::collision::ContactCreator<` to improve thread safety of contact creation.; - AnimateBeginEvent and AnimateEndEvent can now receive an optional pointer to a TaskStatus ( in a form of a void pointer ). When using SofaMultithreading, this taksStatus pointer can be used to spawn the AnimateBeginEvent method in a separate thread. It is the reponsibility of the component to decide whether or not its AnimateBeginEvent method is thread safe.; - Change BaseObject argument parsing. When parsing, ensures if src attribute is used with link @ now allow the use of src="""". Topologies container associated to src="""" are supposed to be filled by following topological mapping. Using src=""@"" to avoid link warning drove to an autolink where the loader refers on container itself. Modification of implicated scenes and xml accordingly.; - WorkerThread maintains a list of stealable tasks as well as a list of higher priority thread specific tasks. Remove ThreadSpecificTask (not used and redundant with new thread-specific task queues). Update Task logging.; - Adapted MultiThreading plugin to the new build system.; - SetDirectory no longer changes the system current directory (shared by all threads in the process), but uses a global variable to record the current directory to be used within Sofa. But changing to the current file's directory is needed to load Python scene. For the moment, python loader is not use with multithreading, changing directory in the loader is a temporary solution. The functioning of python scene loader need to be adapted in the futur. ### Cleans; - Streamline calls to createResponse in case no groupManager is used; - Clean warnings in Task and TaskSchedulerBoost for Multithreading plugin. #",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:2286,load,loader,2286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,1,['load'],['loader']
Performance," ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However, I don't know how crucial it is to have this kind of map with a dedicated comparator. Is this feature necessary? If not, I am in favour of using `std::unordered_map` wherever `sofa::helper::map_ptr_stable_compare` is used, for performances reasons. Overall, we won't get a huge gain of fps, but still it has an impact on the peformances of `NarrowPhaseDetection`. Initially, I wondered why `NarrowPhaseDetection` took so much time for so simple instructions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2047:2912,perform,performances,2912,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047,1,['perform'],['performances']
Performance," /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [WARNING] [SparseLDLSolver(SparseLDLSolver)] Template is em",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:33727,Load,Loaded,33727,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance," /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugin ""wayland"" in """". (process:29694): Gtk-WARNING **: 22:14:09.328: Loc",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:11179,Load,Loaded,11179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance," 985 ms: sofa::component::topology::TriangleSetGeometryAlgorithms<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<1ul,... (sofa/SofaKernel/modules/SofaBaseTopology/TriangleSetGeometryAlgorithms.cpp); 959 ms: sofa::component::engine::MeshROI<sofa::defaulttype::StdRigidTypes<3ul, double> >::MeshROI() (sofa/modules/SofaGeneralEngine/MeshROI.cpp); 950 ms: sofa::component::container::MechanicalObject<sofa::defaulttype::StdRigidTypes<2ul, double> >::MechanicalObject() (sofa/SofaKernel/modules/SofaBaseMechanics/MechanicalObject.cpp); 920 ms: sofa::component::container::MechanicalObject<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<1ul, double>, so... (sofa/SofaKernel/modules/SofaBaseMechanics/MechanicalObject.cpp); 910 ms: sofa::component::engine::boxroi::BoxROI<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3ul, double>, sofa::d... (sofa/SofaKernel/modules/SofaEngine/BoxROI.cpp); 902 ms: sofa::component::loader::MeshObjLoader::readOBJ(std::basic_ifstream<char, std::char_traits<char> >&, char const*) (sofa/SofaKernel/modules/SofaLoader/MeshObjLoader.cpp); 879 ms: sofa::component::forcefield::TetrahedronFEMForceField<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3ul, do... (sofa/SofaKernel/modules/SofaSimpleFem/TetrahedronFEMForceField.cpp); 878 ms: _GLOBAL__sub_I_Matrix_test.cpp (sofa/SofaKernel/modules/SofaBaseLinearSolver/SofaBaseLinearSolver_test/Matrix_test.cpp); 874 ms: sofa::component::container::MechanicalObject<sofa::defaulttype::StdRigidTypes<3ul, double> >::MechanicalObject() (sofa/SofaKernel/modules/SofaBaseMechanics/MechanicalObject.cpp); 856 ms: sofa::component::container::MechanicalObject<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<3ul, double>, so... (sofa/SofaKernel/modules/SofaBaseMechanics/MechanicalObject.cpp); 850 ms: sofa::component::container::MechanicalObject<sofa::defaulttype::StdVectorTypes<sofa::defaulttype::Vec<6ul, double>, so... (sofa/SofaKernel/modules/SofaBaseMechanics/MechanicalObject.cpp",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1523:21624,load,loader,21624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1523,1,['load'],['loader']
Performance," :** Model the Data accesses using ORWL's concepts + high level task parallelism (coarse grain parallelism); - use abstract Data accesses stored in FIFOs to extract parallelism : thread safe data accesses allowing concurrent reads.; - ensures that the semantic of the program is preserved.; - tasks defined at Visitor level : a Task is defined as the execution of a Visitor on a component.; - this strategy should apply to all visitors and components, as it does not depend on the nature of the component. **Issues :** ; - We wanted to use the Data class, since all accesses to a data object in sofa should be done using this class. Problem : this is not true, some components use vectors directly, or use Data methods / ReadAccessor / WriteAccessor not as intended (this is possible since for now some methods such as Data::endEdit do nothing) -> we would need to look at all sofa components to make sure that the Data are properly used; - To properly model the data accesses using ORWL's concepts we need to slightly modify the API of the Data class; - sofa Engine mecanisms are complex to handle using FIFOs; - it is difficult to predict the data dependencies as the Visitors are launched dynamically and can launch Visitors -> we can't predict the data accesses in a preprocessing phase, so we need to adapt ORWL.; - This approach would not induce significant performance gains on simulations with only 1 object or with 1 ""main"" object since all the computationally intensive tasks inside a given object access the same Data object (Write access) and thus are inherently sequential. **Conclusion :** the potential speedup is not good enough to invest more time on this strategy given the difficulty. **Second strategy :** finer-grain parallelization; To extract parallelism from highly data-dependent tasks we need to divide these tasks into less-dependent subtasks.; To achieve that, we are currently implementing parallel vectors to allow some kind of domain decomposition.; Work in progress...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-304903792:1444,perform,performance,1444,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-304903792,1,['perform'],['performance']
Performance," But I don't think the library should do this in the user's back without transparency. > you need to handle the case where the loaded scene already has python scripts, and let the PythonEnvironment know the interpreter is being run from the outside when initializing (and maybe deal with all the sys.path / __file__ abuses down there). The PythonEnvironment will create an interpreter if there isn't one (like when launching for a binary executable), or use the one already defined. In this case, PythonEnvironment will use the interpreter that called the script (ex python runSofaPython.py). No new python interpreter nor python thread a created (I've just checked to be sure). > probably have a good fight with the GIL down the road. The current GIL usage in the plugin seems to align correctly with this feature since we ""attach"" the PythonEnvironment to an interpreter instead of initialising a new one. No new threads are created. > how should this feature integrate with existing python scenes? Should it be possible to load scenes from within python scenes?. Yes, it seems to work so far. However:. - Loading the SofaPlugin library from within a python script that already imported it should be avoid for now since I'm not sure what side effects this will bring. Right now doing it seems not so bad as, again, we only attach the environment to the already created python environment. ; - A ScriptController will need to be added in order to trigger script events so that the python scene's functions (initGraph, onBeginAnimationStep, etc) are called. The createScene function is called by the SceneLoaderPY so this one is fine. > (I would probably put your feature in a module separate from Sofa for this reason). I think this should be entirely a part of the SofaPython plugin in order to keep what is related to sofa in python there. > what happens when Sofa.cleanup() gets called but python objects still hold c++ objects that are to be destructed when python exits ?. This is a good questi",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525:1929,load,load,1929,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525,1,['load'],['load']
Performance," Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [WARNING] [SparseLDLSolver(SparseLDLSolver)] Template is empty; By default SparseLDLSolver uses blocks with a single double (to handle all cases of simulations).; If you are using only 3D DOFs, you may consider using blocks of Matrix3 to speedup the calculations.; If it is the case, add template=""CompressedRowSparseMatrixMat3x3d"" to this object in your scene; Otherwise, if you want to disable this message, add template=""CompressedRowSparseMatrixd"" .; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [Scene",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:34191,Load,Loaded,34191,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance, Class already registered: ProjectToPointConstraint<Vec6d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [WARNING] [ObjectFactory] Class al,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:24768,Load,Loaded,24768,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance," CompressedRowSparseMatrix . I renamed all the **bloc** words to **block** as well. The previous CRSMatrix could be used as a BaseMatrix (solvers), ConstraintMatrix (iterations) and as a pure CRS itself.; This new CRSMatrix is decomposed in several types:; - CRSGeneric (name to be changed maybe): the pure CRS structure; - CRSMechanical: inheriting/implementing BaseMatrix; - (in a next PR) CRSConstraintMatrix, with the same API as the old CRSMatrix used for ConstraintMatrices (for iterating). Different purposes need different traits (some case would prefer autocompression, etc), so a lot of compile-time options are present. They are called policy.; I needed to change some flags from the Insimo's version to have the same behavior for the tests. So in the future, it could be interesting to see if those changes should be integrated later for more performance (but the tests would need to be changed). For compatibility reasons, the old ""CRSMatrix"" type is an alias on CRSMechanical. In this PR, no change of performance is noted (neither regression or upgrade). Tested on caduceus, TorusFall, solvers scenes and BeamAdapter's 3instruments_collis.scn. Ref:; - https://github.com/InSimo/ISSofa/blob/issofa/framework/sofa/defaulttype/CompressedRowSparseMatrix.h. Courtesy of Insimo (@fjourdes ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3515:1477,perform,performance,1477,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3515,1,['perform'],['performance']
Performance," GuiDataRepository paths = D:/github-clones/sofa/src/applications/projects/runSofa/resources;D:/github-clones/sofa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6021,Load,Loaded,6021,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance, HERE >; `➜ bin ./runSofa ; [INFO] [runSofa] PluginRepository paths = /Users/hemingshan/Code/sofa/build/plugins:/Users/hemingshan/Code/sofa/build/collections:/Users/hemingshan/Code/sofa/build/lib; [INFO] [runSofa] DataRepository paths = /Users/hemingshan/Code/sofa/src/share:/Users/hemingshan/Code/sofa/src/examples:/Users/hemingshan/Code/sofa/build:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] GuiDataRepository paths = /Users/hemingshan/Code/sofa/src/applications/projects/runSofa/resources:/Users/hemingshan/Code/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Contai,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:1443,Load,Loaded,1443,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance, Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: ,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4742,Load,Loaded,4742,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance," Sofa. I followed the page here: https://www.sofa-framework.org/community/doc/plugins/usual-plugins/cgal-library/. Although it does not tell what version of CGAL to use, or boost as well. Finally, I have been successful to build with the following versions of dependencies.; **Environment:**; Visual Studio 2017 vc 14.1; Sofa Master: commit 9d9100aa1b0acb9363c8ec7c9b5e4b470821bfc1; Boost: 1.71.0; CGAL: CGAL-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1154,Load,Loaded,1154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Load'],['Loaded']
Performance," TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ RUN ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData; ----------------------------------------------------------------------; Ran 1 test in 0.000s. OK; [ OK ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData (2 ms); [ RUN ] SofaPython3/Sofa.all_tests/1_Sofa_Core_Base_test_addKeywordProtected; ----------------------------------------------------------------------; Ran 1 test in 0.001s. OK; [ OK ] SofaPython3/Sofa.all_tes",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3928,load,loaded,3928,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['load'],['loaded']
Performance, [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:4502,Load,Loaded,4502,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance," [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:9178,load,loaded,9178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['load'],['loaded']
Performance," [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. This dll is actually present. Please see the snapshot below.; Directory view:; ![image](https://user-images.githubusercontent.com/5296582/83347021-63272b80-a33f-11ea-9cda-e2c209b1be80.png). I am not able to understand what is the issue? Pl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1969,Load,Loaded,1969,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Load'],['Loaded']
Performance, [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [Plug,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:5526,Load,Loaded,5526,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance, [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plug,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:4972,Load,Loaded,4972,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance," [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; The object is not in the factory.; This component has been PLUGINIZED since SOFA v20.06. To continue using this component you need to update you scene and add <RequiredPlugin name='SofaNonUniformFem'/>. [ERROR] [SceneLoaderXML] Node initialization failed. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning; [ERROR] [HexahedronFEMForceField(FEM)] No topology component found at path: , nor in current context: Snake. Object must have a Mesh",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:10327,load,load,10327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['load'],['load']
Performance," [WARNING] [ObjectFactory] Class already registered: SimpleTesselatedTetraMechanicalMapping<Vec3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: SimpleTesselatedTetraTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: SubsetTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Tetra2TriangleTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Triangle2EdgeTopologicalMapping; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MechanicalStateController<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MechanicalStateController<Vec1d>; [WARNING] [ObjectFactory] Class already registered: RayCollisionModel; [WARNING] [ObjectFactory] Class already registered: RayTraceDetection; [WARNING] [ObjectFactory] Class already registered: SleepController; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [WARNING] [ObjectFactory] Class already registered: ReadState; [WARNING] [ObjectFactory] Class already registered: ReadTopology; [WARNING] [ObjectFactory] Class already registered: GIDMeshLoader; [WARNING] [ObjectFactory] Class already registered: GridMeshCreator; [WARNING] [ObjectFactory] Class already registered: InputEventReader; [WARNING] [ObjectFactory] Class already registered: MeshGmshLoader; [WARNING] [ObjectFactory] Class already registe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:28260,Load,Loaded,28260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance, [objc-avoid-spinlock](https://clang.llvm.org/extra/clang-tidy/checks/objc-avoid-spinlock.html) |; | [cppcoreguidelines-interfaces-global-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-interfaces-global-init.html) | [objc-forbidden-subclassing](https://clang.llvm.org/extra/clang-tidy/checks/objc-forbidden-subclassing.html) |; | [cppcoreguidelines-no-malloc](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-no-malloc.html) | [objc-property-declaration](https://clang.llvm.org/extra/clang-tidy/checks/objc-property-declaration.html) |; | [cppcoreguidelines-owning-memory](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-owning-memory.html) | [performance-faster-string-find](https://clang.llvm.org/extra/clang-tidy/checks/performance-faster-string-find.html) |; | [cppcoreguidelines-pro-bounds-array-to-pointer-decay](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-array-to-pointer-decay.html) | [performance-for-range-copy](https://clang.llvm.org/extra/clang-tidy/checks/performance-for-range-copy.html) |; | [cppcoreguidelines-pro-bounds-constant-array-index](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-constant-array-index.html) | [performance-implicit-conversion-in-loop](https://clang.llvm.org/extra/clang-tidy/checks/performance-implicit-conversion-in-loop.html) |; | [cppcoreguidelines-pro-bounds-pointer-arithmetic](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-pointer-arithmetic.html) | [performance-inefficient-algorithm](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-algorithm.html) |; | [cppcoreguidelines-pro-type-const-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-const-cast.html) | [performance-inefficient-string-concatenation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-string-concatenation.html) |; | [cppcoreguidelines-pro-type-cstyle-cast](ht,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:21774,perform,performance-for-range-copy,21774,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-for-range-copy']
Performance," activate the informations message with printLog=""1"". ; Run the scene... you should see for the visual_snale_body:; ```console; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does n",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2201:1105,Load,Loading,1105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201,1,['Load'],['Loading']
Performance," already registered: ExtraMonitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec6d>; [WARNING] [ObjectFactory] Default template for class Monitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: Monitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec6d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [WARNING] [ObjectFactory] Class already registered: TopologicalChangeProcessor; [WARNING] [ObjectFactory] Class already registered: TopologyChecker; [WARNING] [ObjectFactory] Default template for class TopologyBoundingTrasher already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatri",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:32228,Load,Loaded,32228,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance," an example file provided by this PR) :. ```#!/usr/bin/python2.7. from libSofaPython import Sofa. sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim). root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(). sofa_prefix = ""/home/jnbrunet/sources/sofa/build""; Sofa.GUIManager.setSofaPrefix(sofa_prefix); Sofa.GUIManager.setConfigDirectoryPath(sofa_prefix + ""/config""); Sofa.GUIManager.setScreenshotDirectoryPath(sofa_prefix + ""/screenshots""). Sofa.GUIManager.init(""qglviewer""); Sofa.GUIManager.createGUI(); Sofa.GUIManager.setDimension(800, 600); Sofa.GUIManager.setScene(root). Sofa.GUIManager.MainLoop(root). Sofa.GUIManager.closeGUI(); ```; ### What else this PR brings. **Plugin manager**; One of the problem arising from this feature is the duplicated loading of the python plugin: when issuing the `import Sofa` command in the python script the interpreter loads the library (SofaPython.so). If the script explicitly calls the `Sofa.loadPlugin(""SofaPython"")` command, Sofa's PluginManager will load again the same library. Example of a faulty script:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:2593,load,loadPlugin,2593,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,2,['load'],"['load', 'loadPlugin']"
Performance," clear, there are 2 optimizations in this solver: 1) optimization for diagonal masses, 2) multiop optimization.; I did not touch anything in the non-optimized multiop code. I changed the velocity input in the position update in the optimized multiop code. # Non-optimized multiop code. I did not change this code. ## Symplectic. ```; newVel = vec + acc * dt; newPos = pos + newVel * dt; ```. ## Non-Symplectic. ```; newPos = pos + vel * dt; newVel = vel + acc * dt; ```. # Optimized multiop code. ```cpp; ops_vel.second.emplace_back(vel.id(), 1.0);; ops_vel.second.emplace_back(acc.id(), dt);; ops_pos.second.emplace_back(pos.id(), 1.0);; ops_pos.second.emplace_back(d_symplectic.getValue() ? newVel.id() : vel.id(), dt);; ```; `ops_vel` is executed first if symplectic. `ops_pos` is executed first if non-symplectic. If I translate this code to formulas:. ## Symplectic. ```; newVel = vel + acc * dt; newPos = pos + newVel * dt; ```. ## Non-symplectic. ```; newPos = pos + vel * dt; newVel = vel + acc * dt; ```. This is exactly the same formulas than for the non-optimized code!; My change was on the line:; `ops_pos.second.emplace_back(d_symplectic.getValue() ? newVel.id() : vel.id(), dt);`; Before it was:; `ops_pos.second.emplace_back(vel.id(), dt);`. It would translate to:. ## Symplectic. ```; newVel = vel + acc * dt; newPos = pos + vel * dt <-- difference here with the non-optimized code; ```. ## Non-symplectic. ```; newPos = pos + vel * dt; newVel = vel + acc * dt; ```. # Conclusion. I believe that I fixed the multiop optimized symplectic version. Both optimized and non-optimized codes are now consistent. Note that this makes a difference only for the FreeMotion animation loops. @jnbrunet Regarding your math problem, I don't understand it. I don't see where you see a difference with SOFA. If you agree, I think we can merge this PR because it does not change the behavior (except for the fix). If there are some maths problems, it can probably be tackled later. What do you think?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2163#issuecomment-867677866:1080,optimiz,optimized,1080,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163#issuecomment-867677866,5,['optimiz'],['optimized']
Performance, com.apple.vImage (8.1 - 544.2) <3EBF95E1-30EB-3162-A9D4-B97BE581B69F> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage; 0x7fff26e94000 - 0x7fff2715efff com.apple.QuartzCore (1.11 - 926.8) <04D8759B-1119-3E37-B922-32BDECB7C5D2> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore; 0x7fff2715f000 - 0x7fff271a0fff libFontRegistry.dylib (309) <9E9329F6-7384-3C7F-83E7-D52CD7FFBC09> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib; 0x7fff271a1000 - 0x7fff272e2fff com.apple.coreui (2.1 - 690) <6DB427BB-44CA-3002-A3FF-77F0FEFC2A51> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI; 0x7fff272e3000 - 0x7fff273cefff com.apple.ViewBridge (551.3 - 551.3) <9F31CEDB-5B8A-3BAE-A638-E9F352EF4E87> /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge; 0x7fff273cf000 - 0x7fff273dafff com.apple.PerformanceAnalysis (1.275 - 275) <2E5E666D-EE93-3949-8C76-692FA748D129> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis; 0x7fff273db000 - 0x7fff273eafff com.apple.OpenDirectory (11.2 - 230.40.1) <333A7F2E-0F3E-37F1-9E1B-69996F5084D2> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory; 0x7fff273eb000 - 0x7fff2740afff com.apple.CFOpenDirectory (11.2 - 230.40.1) <25F138F8-9E55-3749-8271-0FDB275C3E2C> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory; 0x7fff2740b000 - 0x7fff27413fff com.apple.CoreServices.FSEvents (1290.40.2 - 1290.40.2) <6B70B98B-BCC5-3FBE-A6B5-CD0696AA055A> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents; 0x7fff27414000 - 0x7fff27438fff com.apple.coreservices.SharedFileList (144 - 144) <C861FAD6-D3A5-302C-88AE-B2813F7201A7> /System/Library/Frameworks/CoreServices.framework/V,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:29047,Perform,PerformanceAnalysis,29047,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['Perform'],['PerformanceAnalysis']
Performance," def __init__(self, ctx, name, positions):; self.name = name; self.addNewInput('positions', datatype=""vector<Vec3d>"", value=positions, help=""test""); self.addNewOutput('average', datatype=""Vec3d"", help=""average""); ; def parse(self, arg):; pass; ; def init(self):; 	pass; ; def update(self):; value = [0, 0, 0]; for pos in self.positions:; value[0] += pos[0]; value[1] += pos[1]; value[2] += pos[2]; value[0] /= len(self.positions); value[1] /= len(self.positions); value[2] /= len(self.positions); self.cleanDirty(); self.average = [[-value[0],-value[1],-value[2]]]; pass. def createScene(rootNode):; loader = rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename='mesh/liver.vtk'); psde = PyEng(rootNode, name=""PSDE"", positions=loader.findData('position').getLinkPath()); rootNode.createObject('TransformEngine', name='TE', input_position=""@loader.position"", translation=psde.findData('average').getLinkPath()); rootNode.createObject('OglModel', name=""visu"", position=""@TE.output_position"", triangles=""@loader.triangles"",; color=""1 0 0 1""); ```. With this syntax, I can create my engines definition once, and create as many as I want, on the fly, with any parameter I want for my input fields. It's actually even better, because:; - I don't have to create inputs with the fields I pass to the constructor. It could be simple data (addNewData vs addNewInput); - Construction of datafields is more explicit, thus less error-prone; - No need to go search for a decorator function somewhere in SofaPython, or to declare a dictionary of default arguments, everything is performed in the constructor. So, yeah, this PR is now virtually useless.; There's one thing I don't like with this syntax though, it's that the creation of the object is performed at the same time as it is assigned to the scene graph, which, in my opinion is not always desirable.; Something closer to this would be neat:; ```py; rootNode.addObject(PyEng(name='PSDE', positions=loader.findData('position').getLinkPath()); ```.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/743#issuecomment-417366442:1207,load,loader,1207,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/743#issuecomment-417366442,1,['load'],['loader']
Performance," embed the state setting mechanisms inside the simulation:. - **setDirtyValue()** on a data sets the dirty state on its owner; - **cleanDirty()** on a data looks at all its owner's data fields and if they're all clean, sets the Valid state on it; - **initVisitor() / init / bwdInit python binding** uses the MessageHandler API to verify that no msg_error has been triggered, and sets either the Valid or Invalid state on the component; - **reinit pythonBinding / the Qt GUI's ModifyObject** calls reinit, and that call is wrapped the same MessageHandling mechanism to set or unset the Valid / Invalid flag. _**LIMITATIONS**_; There is a weak link in this approach:; reinit() will NOT unset the Invalid flag from a component if it is called from elsewhere than the GUI's ModifyObject api. This can happen often: when calling reinit from a c++ program that doesn't use runSofa's GUI for instance.; In order to guarantee that the state is set properly on reinit(), reinit should be a delegate method nested in a method performing the check on the msg_error, and setting the Valid / Invalid flag appropriately. This would be a **VERY** breaking, and time consuming task. calling the state updating mechanisms from the python bindings, visitors & GUI is kind of QuickNDirty but should reveal all components that aren't implementing properly their init / reinit / bwdInit methods properly, and show at the component level a hint at how often components stay in a ""Dirty' state. TODO: ; - Create a StateCheckerVisitor and run it at the end of the DefaultAnimationLoop's step function; - Use the StateCheckerVisitor to either ; - show a warning message if a component is in an Invalid / Unspecified state; - run init() / reinit() on the components whose states are invalid or unspecified; - display a warning icon in runSofa's Scene graph to reflect the component's state. @damienmarchal do you see a non-intrusive solution to the reinit() problem...? ; ______________________________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/823:2168,perform,performing,2168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/823,1,['perform'],['performing']
Performance," found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1783,load,load,1783,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance," load all the available plugins. Loading a library in the process memory will have several side effects which are difficult to anticipate before hand. The major one is the evaluation of all the global variables, which will result in populating the `ObjectFactory` with all the components that this library contains. I would suggest something different for this kind of having a list of default plugins that are loaded directly with your application ( here `runSofa` ). - derive a sort of sofa plugin manifest file, which can be generated as a post-build step. This should be an easy to parse file which could contain the various informations exposed by the `getModuleName()`, `getModuleVersion()`... without having to load the library in the process memory. This manifest file must be stored in an easy to find location in your build tree, an be installed properly ( they need also to be bundled when you deploy your application ). That means they should be located with a similar relative path with respect to the application ( `runSofa` ) when in the build tree or in the install tree. There should be a proposal about that to define : ; - the manifest file type ( ie how are we going to parse it ? json xml text ? ); - the manifest file content itself. - any application could then define the list of predefined plugin it wants to load using a simple configuration file. A default configuration can be provided, but it could be easily overriden. With this mechanism, no recompilation is required when you want to change the list of default plugins, you just change the config file. NB : a bit unrelated but there is a small code ""snippet"" that can be used to recover all the components attached to a library in two lines ; ```cpp; const char* getModuleComponentList(); {; /// string containing the names of the classes provided by the plugin; static std::string classes = sofa::core::ObjectFactory::getInstance()->listClassesFromTarget(sofa_tostring(SOFA_TARGET));; return classes.c_str();; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253#issuecomment-296982188:1682,load,load,1682,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253#issuecomment-296982188,1,['load'],['load']
Performance," of a visitor function on a component. Therefore a parallel section is decomposed in an ordered list of tasks.; Each task accesses a given set of vectors (read or write accesses), and a given set of locations in these vectors. We can split the tasks in **phases** such that each phase accesses a subset of the vector locations. To facilitate this, we decompose the vectors into **blocks**, and we look at the vector blocks accessed by each task phase.; Then we can have phases of different tasks that do not accesses the same locations, and so are independent and can run in parallel.; Then we model the dependencies between the tasks phases, and we use the dependency graph to schedule the parallel executions of the phases, keeping the sequential order of the operations. . All the user should have to do is to flag visitors that can be launched in parallel on the components : use a parallel version of Visitor::for_each / for_each_r to enable parallel execution of the components. **Steps performed at runtime:**. 1. Creation of « parallel visitors » using a parallel version of Visitor::for_each functions; - parallel version of for_each starts a parallel section, and creates tasks; - a task is defined as the execution of the visitor function on a component; 2. Execute the first time step sequentially, logging/profiling all accesses to vectors; - create parallel sections and tasks; - in each task, log all accesses to vectors using and overloaded helper::vector::operator[]; 3. During the second time step, we launch a parallel thread that ; - splits each task in phase each phase doing a (statically) given number of vector accesses.; - for each phase, identify the blocks of vectors accessed; - for each parallel section, build a dependency graph between task phases; - for each parallel section, schedule the parallel execution of the different task phases so that we keep the order of the operations and independent phases can run in parallel; 4. When the scheduling is computed, we run ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289:1785,perform,performed,1785,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289,1,['perform'],['performed']
Performance," of objects with static storage duration is undefined across translation units. This is the first reason why I introduced the `init()` functions: to make initialization deterministic and reliable. And this is the same reason why it's better to call those functions explicitely, at the _right_ time: the program will work correctly by design, not by coincidence;. * **readability** (or something like that): calling the initialization function ""manually"" makes programs more readable: you can just start from the `main()` function and understand what code is going to run without actually running the code inside a debugger (or reading the entirety of SOFA's source code);. * **choice** (or whatever): with an explicit call to `init()`, an application writer gets to decide both *whether* and *when* to initialize SOFA. ### Now... In the end, I didn't actually bother to search for any single piece of initialization code in SOFA and move it into the appropriate init() function, so the init() functions are pretty light, but the setup is there. Also, the static-dynamic-initialization trick is used all over the place in SOFA, and what happens in the init() functions is ridiculous compared to all the code that probably runs when SOFA is loaded, so here again it is a drop in the ocean, but, I think, a step in the right direction. ### Anyway... > What I don't understand is why the above code snipped does not simply cleanup() the library in the destructor, since the latter is being called while the library unloads and this is the last chance to actually clean things up, instead of (trying to) emit a warning while the whole program is being terminated. @maxime-tournier The CleanupCheck thingy is disposable; it's a just safeguard, a way to tell developpers about the `init()` and `cleanup()` function. You're right, this is almost the last chance to call cleanup(), but no _guarantee_ of correctness. Hope this helps,; Marc Legendre. --. > trying to call `std::exit` in some plugin. _Sweating_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280028946:1796,load,loaded,1796,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280028946,1,['load'],['loaded']
Performance," on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginM",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:4462,load,loaded,4462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,2,['load'],"['loadPlugin', 'loaded']"
Performance," p1, ..., pn]| |p: [p0, p1, ..., pm]|; |r: [r0, r1, ..., rn]| |r: [r0, r1, ..., rm]|; |q: [q0, q1, ..., qn]| |q: [q0, q1, ..., qm]|; +--------------------+ +----------+---------+; |; mapping1 | mapping2; +--------------+-------------+; | |; +----------+---------+ +----------+---------+; | MO3 | | MO4 |; +--------------------+ +--------------------+; |x: [x0, x1, ..., xl]| |x: [x0, x1, ..., xo]|; |p: [p0, p1, ..., pl]| |p: [p0, p1, ..., po]|; |r: [r0, r1, ..., rl]| |r: [r0, r1, ..., ro]|; |q: [q0, q1, ..., ql]| |q: [q0, q1, ..., qo]|; +--------------------+ +--------------------+; ```. Version 1 will do:; 1. Launch a visitor in the CG's subgraph (`x.peq(p,alpha);`); **MO 1** : x = x + alpha p; **M0 2** : x = x + alpha p; **MO 3** : x = x + alpha p; **MO 4** : x = x + alpha p; 2. Launch a visitor in the CG's subgraph (`r.peq(q,-alpha); `); **MO 1** : r = r - alpha q; **M0 2** : r = r - alpha q; **MO 3** : r = r - alpha q; **MO 4** : r = r - alpha q. Version 2 will do:; 1. Launch a visitor in the CG's subgraph; **MO 1** :; x = x + alpha p; r = r - alpha q; **MO 2** :; x = x + alpha p; r = r - alpha q; **MO 3** :; x = x + alpha p; r = r - alpha q; **MO 4** :; x = x + alpha p; r = r - alpha q. Unless I'm missing something, the optimized version only removes one subgraph visit and allows the compilator to *\***maybe**\** optimize two subsequent operations on vectors. However, I don't think the compiler will actually do something here as the `MechanicalState::vMultiOp` simply makes two calls to `MechanicalState::vOp` which, well, is a virtual function and can't be inlined. To the question to whether or not we should keep one or the other, I guess we would have to benchmark it (use a scene with multiple top level mechanical object's, and multiple mapping levels). If the optimized version do not brings a lot of speed (which would be my guess since the cost of a visit isn't very big, but I may be wrong), I would remove the optimization as it is quite confusing for the reader.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1263#issuecomment-592412191:2478,optimiz,optimized,2478,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1263#issuecomment-592412191,4,['optimiz'],"['optimization', 'optimize', 'optimized']"
Performance, plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] L,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:7698,Load,Loaded,7698,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance, plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Releas,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3922,Load,Loaded,3922,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance," plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/S",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:7769,Load,Loaded,7769,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance," plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/R",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6678,Load,Loaded,6678,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance," reasons other the past years, namely; - SOFA_LIBSUFFIX which should be set as ""_d"" during a debug build is broken under msvc since c89da68 which as the commit name says is indeed monstruous. It was ""fixed"" later by adding directly inside the PluginManager code a condition to add the ""_d"" suffix by checking the compiler. ; - The default behavior of the global `PluginRepository`, was changed by c5a19fe for absolutely no good reasons.; It breaks a very basic functionaliy ( you can always load a library that is in your working directory ), also this change had some **interesting** side effects when basically you write a unit test which relies on; a scene file that uses a `RequiredPlugin`... that shortcoming was somewhat hidden by having all tests relying on `SofaGTest`, whose sole reason of being is to actually amend c5a19fe by populating the PluginRepository with the current working dir. Some additional functionalities are added to `RequiredPlugin` by this PR, namely the ability to specify other suffixes ( or no suffix at all ) to prepend when attemtping to load a plugin with a name hint. . # CHANGELOG ; FIX; [SofaHelper]; - Restore the `SOFA_LIBSUFFIX` behavior with msvc; - `PluginRepository` is initialized to contain the current working directory. CHANGE; [SofaHelper] ; - `PluginManager` : keep only a single version of the `loadPlugin` method. Also the method returns true; even if the plugin is already loaded. Returning false is kept only for real failures, whereby the library could ; not be loaded. If it is important to check wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ; It also gives some more advanced options to extend the plugin search. # Remarks. I do not know which version of the GUI is still in use. However I believe that the widget that can add/remove plugins to",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:1274,load,load,1274,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,1,['load'],['load']
Performance," std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::Simulation::initNode(sofa::simulation::Node*); sofa::simulation::Simulation::init(sofa::simulation::Node*); __libc_start_main; Segmentation fault (core dumped). **Expected behavior**; the scene has to run (When I replace dataset with dataset1 which I declared as:. diff --git a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp; index 2f00fe62dc..782ce854ce 100644; --- a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp; +++ b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp; @@ -72,6 +72,7 @@ MeshLoader::MeshLoader() : BaseLoader(); , d_rotation(initData(&d_rotation, Vec3(), ""rotation"", ""Rotation of the DOFs"")); , d_scale(initData(&d_scale, Vec3(1.0, 1.0, 1.0), ""scale3d"", ""Scale of the DOFs in 3 dimensions"")); , d_transformation(initData(&d_transformation, type::Matrix4::s_identity, ""transformation"", ""4x4 Homogeneous matrix to transform the DOFs (when present replace any)"")); + , d_dataset1(initData(&d_dataset1, ""dataset1"", ""Data from dataset"")); , d_previousTransformation(type::Matrix4::s_identity ); {; addAlias(&d_tetrahedra, ""tetras"");; @@ -184,6 +185,8 @@ void MeshLoader::clearBuffers(); getWriteOnlyAccessor(d_pyramidsGroups).clear();; getWriteOnlyAccessor(d_polygonsGroups).clear();; ; + getWriteOnlyAccessor(d_dataset1).clear();; +; doClearBuffers();; }; ; diff --git a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h; index d972c27d75..5",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:2734,load,loader,2734,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['load'],['loader']
Performance," the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternal",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:4732,load,loaded,4732,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,2,['load'],"['loadPlugin', 'loaded']"
Performance," to clean it and speed it up. The algorithm stays the same but:; - Cost of data access has been reduced by caching it at the beginning of the algorithm; - Containers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1917:1171,cache,cache,1171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917,1,['cache'],['cache']
Performance," trivial, I'm starting to see it now. Here is what I observed during my tests (I'm working part time on this, it is entirely possible that I come back later to correct those statements of mine :) ). > you need to properly initialize/finalize sofa and core modules (see Main.cpp in the runSofa application). Yes. I'm usually leaning towards making most of the functions available and let the script use what it need. So if I'm writing a _runSofa_ like application in python, I should be able to init the components there, create/set the simulation, add the needed message handlers to the MessageDispatcher, and set the paths (plugin, config, sofa prefix) there. If this complicate too much the python script, than making optional python util scripts that set all of this for the user could be a clean option. But I don't think the library should do this in the user's back without transparency. > you need to handle the case where the loaded scene already has python scripts, and let the PythonEnvironment know the interpreter is being run from the outside when initializing (and maybe deal with all the sys.path / __file__ abuses down there). The PythonEnvironment will create an interpreter if there isn't one (like when launching for a binary executable), or use the one already defined. In this case, PythonEnvironment will use the interpreter that called the script (ex python runSofaPython.py). No new python interpreter nor python thread a created (I've just checked to be sure). > probably have a good fight with the GIL down the road. The current GIL usage in the plugin seems to align correctly with this feature since we ""attach"" the PythonEnvironment to an interpreter instead of initialising a new one. No new threads are created. > how should this feature integrate with existing python scenes? Should it be possible to load scenes from within python scenes?. Yes, it seems to work so far. However:. - Loading the SofaPlugin library from within a python script that already imported it s",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525:1030,load,loaded,1030,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339630525,1,['load'],['loaded']
Performance,"""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [E",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3553,load,load,3553,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,"""odesolver"" rayleighStiffness=""0.1"" rayleighMass=""0.1"" />. <ConstantSparsityPatternSystem template=""CompressedRowSparseMatrix""/>; <SparseLDLSolver template=""CompressedRowSparseMatrix""/>. <TetrahedronSetTopologyContainer name=""Container"" src=""@../grid/tetras/Container""/>; <TetrahedronSetTopologyModifier name=""Modifier"" />; <TetrahedronSetGeometryAlgorithms template=""Vec3"" name=""GeomAlgo"" />. <MechanicalObject name=""mechObj""/>; <MeshMatrixMass totalMass=""10""/>; <LinearSolverConstraintCorrection/>. <Node name=""material1"">; <BoxROI name=""materialBox"" box=""-0.1 -0.1 -0.1 1.1 1.1 1.36"" position=""@../Container.position"" tetrahedra=""@../Container.tetrahedra""/>. <TetrahedronSetTopologyContainer name=""Container"" position=""@../Container.position""; tetrahedra=""@materialBox.tetrahedraInROI""/>; <TetrahedronSetTopologyModifier name=""Modifier"" />; <TetrahedronSetGeometryAlgorithms template=""Vec3"" name=""GeomAlgo"" />. <TetrahedronHyperelasticityFEMForceField name=""FEM"" topology=""@Container""; ParameterSet=""3448.2759 31034.483"" materialName=""StableNeoHookean""/>. </Node>. <Node name=""material2"">; <BoxROI name=""materialBox"" box=""-0.1 -0.1 1.34 1.1 1.1 2.8"" position=""@../Container.position"" tetrahedra=""@../Container.tetrahedra""/>. <TetrahedronSetTopologyContainer name=""Container"" position=""@../Container.position""; tetrahedra=""@materialBox.tetrahedraInROI""/>; <TetrahedronSetTopologyModifier name=""Modifier"" />; <TetrahedronSetGeometryAlgorithms template=""Vec3"" name=""GeomAlgo"" />. <TetrahedronHyperelasticityFEMForceField name=""FEM""; ParameterSet=""5000 7000 10"" materialName=""MooneyRivlin""/>; </Node>. <BoxROI name=""box"" drawBoxes=""true"" box=""0 0 0 1 1 0.05""/>; <FixedProjectiveConstraint indices=""@box.indices""/>; </Node>. </Node>; ```. I'm not 100% sure what was the problem in your version but I suspect a conflict between the grid and the topology containers.; In a general way I suggest to always init the grid and topolgy in a another node (as you will do for a loader) from the simulated model.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4706#issuecomment-2112008399:5048,load,loader,5048,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4706#issuecomment-2112008399,1,['load'],['loader']
Performance,"# Example 1; Steps to reproduce:; 1. run `runSofa` and load `examples/Demos/caduceus.scn`; 2. `File` -> `Save as...`; 3. Save a new file; 4. Notice that some Data are missing from objects. # Example 2; Steps to reproduce:; 1. run `runSofa` and load `examples/Components/collision/RayTraceCollision.scn`; 2. Click on `Step` (this performs a time step. The graph structure is then modified); 2. `File` -> `Save as...`; 3. Save a new file; 4. Notice that some Data are missing from objects, even for the field `name`. # Hint; All Data are visited and there is a condition to write it or not:; https://github.com/sofa-framework/sofa/blob/5ce03e67e2b31ee1e53277ac33cb35e7598944ac/SofaKernel/modules/SofaCore/src/sofa/core/objectmodel/Base.cpp#L627. This condition filters too many Data. If I remove the condition `field->isPersistent()`, too much Data are written (for example including the positions loaded from a mesh file). A more clever condition must be found.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2071:55,load,load,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2071,4,"['load', 'perform']","['load', 'loaded', 'performs']"
Performance,"# Problem; The configure step (and the generating step as well) became awfully slow on Windows.; After finding how to profile with CMake, we can find 3 slowing down parts with the vanilla set-up:. ![cmake0](https://user-images.githubusercontent.com/11028016/108479329-e30e7080-7295-11eb-9440-4571b63c3341.PNG); (trace after running the cmake process with a already populated CMakeCache). - CPack analysis at the end; - All modules does a awful lot of find_package() even if it is packages already found before; - (On windows only?) the sofa_install_lib at the beginning. # (Proposal of) Solution. Not an expert of CMake at all but this PR:; - Set an option if you really want to use CPack (this is only used when packing) -> **harmless**; - Modify sofa_find_package to test if the desired packages/target is already imported/loaded , use it everywhere -> **I may have missed something here**; - remove the recursiveness in sofa_install_package -> **seems OK on Windows but I suspect it was made for Linux actually**. Here is the trace after applying the modifications:; ![cmake1](https://user-images.githubusercontent.com/11028016/108480054-c292e600-7296-11eb-913c-7f3ad5a85adf.PNG). It takes only around 8sec instead of around 38 sec initially, on Windows (without counting generating apparently); In my Ubuntu VM, it takes around 2 sec for the whole process ! (configure + generating); But I have no doubt I may have introduce bugs etc. 🤨 so feel free to react. Unfortunately, I dont know for now how to reduce the generating step time 😥. # Nota Bene; For those interested on how to trace/profile the cmake processing time: #1838. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Revie",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1837:825,load,loaded,825,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1837,1,['load'],['loaded']
Performance,"## Main discussions. Stéphane: building matrices, vectors, to work with SciPy; Matthieu: Numpy is able to access the memory directly (there are examples). There are some Python modules in Compliant with examples to assemble matrices, etc. Components in Python (Stéphane); ""Trash"" code, not clean, way to go to C++. Forcefield. Need to put breakpoints to interact with the scene from Python console. Our Python needs:; - Create scene easily; - Prototype components; - Matlab aspect. Matthieu: 90% of Datas are binded in Python, special cases need a binding. To sum up, we already have what we need, we just don't know how to work with everything. Besides technical aspects, what we need is a step to step tutorial and more examples. . --> Update online documentation to add Numpy; --> Add a doc for newcomers: right now it is very hard to enter in SOFA with Python (no doc). Start with step by step tutorials and create a Python version of each step. ## Other discussions: performances. ### Pypy. x100 perf but big big cost (recode everything: plugin, bindings, ...). ### Cython. ability to code in Python and get C++ code generation; we can keep the current plugin but we wont gain perf; optimizes some small algos; ability to manually release the GIL (lock); ability to connect to the current VM; adds a step of compilation using ""CIMPORT"" but it must have compilo + headers and libs Sofa. ### Problem of version 2.7 vs 3. Current plugin renamed SofaPython27; SofaPython passes python 3.0. ### How do you get to use Python?. Stéphane: Making XML optional?; Matthieu: python is not just a loader, there is a binding too; As said before, we have to use more Python in the tutorials (doc, website ...). ____________________________________. Referee:; @bcarrez . Interested people:; @matthieu-nesme ; @damienmarchal ; @etienneschmitt ; @bruno-marques ; @chpaulus . If you are interested please tell it.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/23:972,perform,performances,972,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/23,3,"['load', 'optimiz', 'perform']","['loader', 'optimizes', 'performances']"
Performance,"### ALL THIS CHANGES MAINLY AFFECT SOFA INSTALL; (basically nothing changes for you if you never do `make install`). Nothing is breaking BUT dependency problems may arise.; Using package subdirs and relocatable plugins will force us to define dependencies correctly because there will be no more magically accessible parts of SOFA. You will no longer be able to `#include` a file from a package not loaded with `find_package`. ## Important changes. ### [[All] CLEAN extlibs integration and install](https://github.com/sofa-framework/sofa/commit/40669c610100a67f46b1405a972b39fe13291eba); - extlib headers are now installed in include/extlibs; - Windows dependency pack headers are now installed in include/WinDepPack; - SOFA now always tries to `find_package` an extlib before using the embedded one; - header-only extlibs too are now easier to override (see extlibs/CMakelists.txt); - **One question remains**: is extlibs/SuiteSparse needed?. ### [[CMake] Install includes in package subdirs](https://github.com/sofa-framework/sofa/commit/68bef4fec16a410007163c5720a5b2ce003ac478); Install module headers in a subdirectory named after their package (SofaGeneral, SofaMisc, SofaFramework, ...). This permits to have clean include directories and thus prevents `find_package` from giving access to unwanted foreign headers.; e.g. doing `find_package(SofaFramework)` will NOT be sufficient to `#include <SofaSomething/anything.h>` (you will get a file not found error).; I think it is way easier to understand that a `find_package` is missing when `#include` fails with ""file not found"" error (at write time if you have a good IDE, at build time otherwise) than with link error (at build time).; Moreover, it will be easier to understand what package is needed for a module by navigating in the include directory.; More details in commit message. ### [[CMake] Make plugins relocatable](https://github.com/sofa-framework/sofa/commit/5b0585f9ad2884cb5462884dffd711ae4d6f2266); **THIS FEATURE IS OPTIONAL**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1018:399,load,loaded,399,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1018,1,['load'],['loaded']
Performance,"### Context. All instances of the derived classes of `BaseMechanicalVisitor` execute the same functions `processNodeTopDown` and `processNodeBottomUp`, defined in the base class, and are generally **not** overriden. In the functions `processNodeTopDown` and `processNodeBottomUp`, a set of other functions are executed. They have a prefix _fwd_ if they are executed in `processNodeTopDown` and _bwd_ if executed in `processNodeBottomUp`. The functions _fwd_* and _bwd_* are generally overriden, but not all of them. By default, they do nothing. In the functions `processNodeTopDown` and `processNodeBottomUp`, the functions _fwd_* and _bwd_* are surrounded by boilerplate code which is executed even if the functions _fwd_* and _bwd_* are not overriden, i.e. even if they do nothing. Moreover, all the _fwd_* and _bwd_* functions act on objects or containers, stored in a Node. However, in the context of concurrent tasks, those objects and containers can change. In particular, adding an element to a container invalidates the iterators. It is a problem if a visitor was in the middle of a loop over the container. This problem can occur even if the visitor was not design to work on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived cla",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1962:905,concurren,concurrent,905,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962,1,['concurren'],['concurrent']
Performance,"### Context. All instances of the derived classes of `BaseMechanicalVisitor` execute the same functions `processNodeTopDown` and `processNodeBottomUp`, defined in the base class, and are generally **not** overriden. In the functions `processNodeTopDown` and `processNodeBottomUp`, a set of other functions are executed. They have a prefix _fwd_ if they are executed in `processNodeTopDown` and _bwd_ if executed in `processNodeBottomUp`. The functions _fwd_* and _bwd_* are generally overriden, but not all of them. By default, they do nothing. In the functions `processNodeTopDown` and `processNodeBottomUp`, the functions _fwd_* and _bwd_* are surrounded by boilerplate code which is executed even if the functions _fwd_* and _bwd_* are not overriden, i.e. even if they do nothing. Moreover, all the _fwd_* and _bwd_* functions act on objects or containers, stored in a Node. However, in the context of concurrent tasks, those objects and containers can change. In particular, adding an element to a container invalidates the iterators. It is a problem if a visitor was in the middle of a loop over the container. This problem can occur even if the visitor was not design to work on this specific container through the override of _fwd_* and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added two groups of function in `BaseMechanicalVisitor`:; - `processNodeTopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can c",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1963:905,concurren,concurrent,905,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963,1,['concurren'],['concurrent']
Performance,"### Premises:; - plugin B is a dependency of plugin A (i.e A links dynamically against B); - plugin B implements `entrypoint()` but plugin A does not implement it; - PluginManger is set to load plugin A (which will then implicitly load plugin B). Then PluginManger, when trying to check if plugin A does implement `entrypoint()` will find `B::entrypoint()`, instead of returning a nullptr (indicating that the plugin is supposed to not implement it). Obviously this is not the desired outcome 🐛 . My reasoning would be that as the plugin B is direct dependency of A, when loaded by `dlopen()` (unix), is seen as an integral part of plugin A from a system-call point of view. This has been tested with Ubuntu. Did not test on MacOS but should be the same, as it uses dlopen too.; It seems this behavior is not present on Windows, the following demo does not show the bogus behavior. ---. ### Demo:; - adding `getModuleLicense()` which is supposed to be not implemented in Sofa.Component.StateContainer; - StateContainer is a dependency for some other Sofa.Component libraries. ```; extern ""C"" SOFA_EXPORT_DYNAMIC_LIBRARY const char* getModuleLicense();; const char* getModuleLicense(); {; return ""StateContainer License"";; }; ```; Result (Qt PluginManager windows calls `getModuleLicense()` if entry is supposed to be found). <img src='https://github.com/sofa-framework/sofa/assets/11028016/4b50f96f-d914-45ca-8dad-dbdaa0a90752' width='200'>. We can see the cascading wrong call to `getModuleLicense()`, as Collision has a dependency on Collision.Contact which has a dependency on StateContainer.; Moreover in this image, we can even see the `LGPL` which has been leaking from the recently added S.C LinearSystem to several other components. ---. ### Workaround; The workaround would be to implement obviously all the potential entrypoints in all the plugins, but the problem will arise again if a new entrypoint is added in the future....; At first glance, I thought that setting `RTLD_LOCAL` here; ht",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4462:189,load,load,189,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4462,3,['load'],"['load', 'loaded']"
Performance,"### Problem. **Description**; I have compiled sofa successfully with `make`; and I run ./runSofa, I will get the error occurs. **Steps to reproduce**; `./runSofa`. **Expected behavior**; I get the correct GUI with Ubuntu. ---------------------------------------------. ### Environment; MAC with M1 Process; **Context**. - System: MAC OS Celledar; - Version of SOFA: mast branch; - State: Build Directory. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >; `➜ bin ./runSofa ; [INFO] [runSofa] PluginRepository paths = /Users/hemingshan/Code/sofa/build/plugins:/Users/hemingshan/Code/sofa/build/collections:/Users/hemingshan/Code/sofa/build/lib; [INFO] [runSofa] DataRepository paths = /Users/hemingshan/Code/sofa/src/share:/Users/hemingshan/Code/sofa/src/examples:/Users/hemingshan/Code/sofa/build:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] GuiDataRepository paths = /Users/hemingshan/Code/sofa/src/applications/projects/runSofa/resources:/Users/hemingshan/Code/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:1080,Load,Loading,1080,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loading']
Performance,### Problem. **Description**; I've just tried to install last SOFA version with binaries. **Steps to reproduce**; Install SOFA with the .run files and add SofaPython3 plugin. **Expected behavior**; There is an error when I tried to add the plugin. ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 22.04.1 LTS; - Version of SOFA: 23.06.00. ### Logs. ```txt. Plugin loading failed (/home/pchaillo/SOFA/v23.06.00/plugins/SofaPython3/lib/libSofaPython3.so): libpython3.8.so.1.0: cannot open shared object file: No such file or directory. ```; **Content of build_dir/CMakeCache.txt**. < DRAG AND DROP YOUR CMAKECACHE.TXT HERE >. ---------------------------------------------. Thank you for your report.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4159:409,load,loading,409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4159,1,['load'],['loading']
Performance,### Problem. **Description**; The MeshGmshLoader does not seem to handle latest gmsh format. Associated Forum post: https://www.sofa-framework.org/community/forum/topic/unable-to-load-mesh/. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10 + Ubuntu 18.04; - Version of SOFA: master branch + v21.06.00 binaries. **Command called**. ```txt. runSofa examples/Components/loader/MeshGmshLoader.scn. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [ERROR] [MeshGmshLoader(GmshLoader)] File 'sq.msh' finally appears not to be a Gmsh file. ```. File to test:; [sq.zip](https://github.com/sofa-framework/sofa/files/7372243/sq.zip),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2433:179,load,load-mesh,179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2433,2,['load'],"['load-mesh', 'loader']"
Performance,"### Problem. Running `runSofa` in `RelWithDebInfo` configuration in VS 2022 loads the scene properly but leads to nullptr access in `HexahedronFEMForceField::getIndexedElements`. Running `.\runSofa -a` in powershell gives the same crash. ![image](https://user-images.githubusercontent.com/43549821/177644004-c4a691f5-c890-4f66-bf17-5881922af648.png). The scene loads fine and only crashes when one of these 2 buttons are pressed. ![image](https://user-images.githubusercontent.com/43549821/177643932-820290b2-8caa-4b64-b171-8bf1fdeff4ef.png). **Steps to reproduce**; Running the command below.; Everything is configured exactly as shown in the windows building tutorial, except I'm using msvc2019 libraries for qt 5.15.2as msvc2022 libraries are not available. **Expected behavior**; Should not crash. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10 build 21390.2025; - Version of SOFA: commit d300cc9af550afbd5c2167470676a5a7d47381a1 (HEAD -> v21.12, tag: v21.12.00, origin/v21.12_beta, origin/v21.12); - State: Build directory. **Command called**. ```txt. PS D:\github-clones\sofa\build\bin\RelWithDebInfo> .\runSofa.exe -a. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. #################; --- sys.version ---; 3.10.0 (tags/v3.10.0:b494f59, Oct 4 2021, 19:00:18) [MSC v.1929 64 bit (AMD64)]; --- PATH ---; D:\Program Files\OpenSSH;C:\ProgramData\Oracle\Java\javapath;C:\Python310\Scripts\;C:\Python310\;D:\Python27\;D:\Python27\Scripts;D:\Program Files\Oc",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:76,load,loads,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,2,['load'],['loads']
Performance,"### Problem; Hi,; I discovered a memory leak that seems to be connected to the collision detection pipeline / models. The scene contains 2 nodes with `MechanicalObject` and `PointCollisionModel`.; I repeatedly load and unload the scene, first with no collision models, then one collision model, and then two collision models.; -> each graph has 3 segments. ```python; import Sofa; import Sofa.Core; import Sofa.Simulation; from enum import Enum. class TestCase(Enum):; ONE_MODEL = 0; TWO_MODELS = 1; NONE = 2. class SimulationHandler:; def __init__(self):. self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, TestCase.NONE); Sofa.Simulation.init(self.root_node). def step(self):; Sofa.Simulation.animate(self.root_node, self.root_node.getDt()). def reload(self, case: TestCase = TestCase.NONE):. Sofa.Simulation.unload(self.root_node); self.root_node = Sofa.Core.Node(""root""); self.nodes = createScene(self.root_node, case); Sofa.Simulation.init(self.root_node). def createScene(root, case: TestCase):; plugins = [; ""Sofa.Component.Collision.Detection.Algorithm"",; ""Sofa.Component.Collision.Detection.Intersection"",; ]; for plugin in plugins:; root.addObject(""RequiredPlugin"", pluginName=plugin, name=plugin). root.addObject(""DefaultAnimationLoop""); root.addObject(""DefaultPipeline""); root.addObject(""BruteForceBroadPhase""); root.addObject(""BVHNarrowPhase""); root.addObject(""DefaultContactManager""); root.addObject(; ""LocalMinDistance"",; alarmDistance=5.0,; contactDistance=0.5,; ). node_1 = root.addChild(""child_1""); node_1.addObject(""MechanicalObject"", position=[0, 0, 0] * 5). node_2 = root.addChild(""child_2""); node_2.addObject(""MechanicalObject"", position=[1, 1, 1] * 5). if case == TestCase.ONE_MODEL:; node_1.addObject(""PointCollisionModel""); elif case == TestCase.TWO_MODELS:; node_1.addObject(""PointCollisionModel""); node_2.addObject(""PointCollisionModel""); elif case == TestCase.NONE:; pass. return node_1, node_2. if __name__ == ""__main__"":; simulation = Simul",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318:210,load,load,210,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318,1,['load'],['load']
Performance,"### Problem; I want to use SofaPython3, and refer to the [page](https://sofapython3.readthedocs.io/en/latest/content/Installation.html) to install. However, I have met some problems: /ERROR] H� Win32 �(nager] Plugin loading failed (D:/SOFA/v23.06.00/bin/SofaPython3.dll): %1; I can't load the .ddl via PluginManager (in the GUI). Please help me...; **Description**; < DESCRIBE YOUR PROBLEM HERE >; ![image](https://github.com/user-attachments/assets/2e24c376-cd2e-4c64-b3f1-a83b2709132e); The system path is shown below:; ![image](https://github.com/user-attachments/assets/54a24f35-3752-47cd-8ae1-8c7c4b5f9997). ---------------------------------------------. ### Environment. **Context**. - System: ""Windows 11""; - CPU: 13th Gen Intel(R) Core(TM) i7-13700; - Version of SOFA: ""v23.06.00 binaries""; - Pybind11 2.9.1; - Python 3.8.19. **Command called**. ```; runSofa -l SofaPython3 . ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4914:216,load,loading,216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4914,2,['load'],"['load', 'loading']"
Performance,"### Problem; When passing an `.obj` file and texture `.png` to `OglModel`, they are correctly loaded and mapped. ```; visual_node.addObject(; ""OglModel"",; filename=""mesh.obj"",; texturename=""texture.png"",; ); ```; ![image](https://user-images.githubusercontent.com/29635054/172361782-e1d53384-a84e-4d83-bed1-8fe5eb5d3aa5.png). For the MeshOBJLoader the UV coordinates are ignored. ```. loader = visual_node.addObject(; ""MeshOBJLoader"",; filename=""mesh.obj"",; handleSeams=True,; ). visual_node.addObject(; ""OglModel"",; texcoords=loader.texcoords,; texturename=""texture.png"",; ); ```. ![image](https://user-images.githubusercontent.com/29635054/172362364-2533e6fc-7226-452e-88f0-a6bdcf93dbf7.png). ---------------------------------------------. ### Environment. **Context**. - System: Ubuntu 20.04; - Version of SOFA: master branch at commit 06899d457fb46db82313fe3f136664d7b22e7bc9; - State: Install directory",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3012:94,load,loaded,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3012,3,['load'],"['loaded', 'loader']"
Performance,"### Problem; running failing due to loading of plugins ; **Description**; Hi, tried both SOFA v22.06.00 and v23.06.00 versions, but not able to load Sofa.Component.UserInterface.ConfigurationSetting plugin, which is causing failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Can also track the conversation in original repo : https://github.com/ScheiklP/sofa_env/issues/31; **Steps to reproduce**; Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. **Expected behavior**. ---------------------------------------------. ### Environment. **Context**. - System: ""Ubuntu 20.04""; - Version of SOFA: v23.06.00 binaries"". **Command called**. ```txt; python3 /home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env/sofa_env/scenes/reach/reach_env.py. ```. **Env vars**. ```bash; #################; --- sys.version ---; 3.8.10 (default, Jul 29 2024, 17:02:10) ; [GCC 9.4.0]; --- PATH ---; /home/sofa/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:36,load,loading,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,4,['load'],"['load', 'loaded', 'loading']"
Performance,"### Win/MSVC; I was exploring the performance profiler in MSVC on the caduceus, and I noticed that the default constructor of sofa::type::fixed_array was taking a **whole 1% of all the running time**, which was weird to me. ![Capture](https://user-images.githubusercontent.com/11028016/157214662-809a58b4-d153-44ad-9e13-df817896b8dc.PNG); Even taking more time than the FEM.... Moreover, in the bench:; ```; BM_FixedArray_defaultconstruct<stdarray3f>/32768 30.7 us 30.5 us ; BM_FixedArray_defaultconstruct<sofatypefixedarray3f>/32768 60.6 us 60.0 us; ```; `fixed_array` should have the same perf than `std::array`. After some tries, the change to ""empty statement {}"" instead of `=default` for the default constructor did the trick. ```; BM_FixedArray_defaultconstruct<stdarray3f>/32768 38.0 us 38.5 us; BM_FixedArray_defaultconstruct<sofatypefixedarray3f>/32768 38.1 us 38.5 us ; ```. I dont really know why (after spending lots of time on cppreference, stackoverflow, etc) as both of them should not have any initialization on the C-array inside. It seems with the `=default`, MSVC does default-initialization or something like that.; This behavior can be seen with vec3() and vec3(NOINIT). ```; BM_FixedArray_defaultconstruct<stdarray3f>/32768 32.5 us 33.0 us ; BM_FixedArray_defaultconstruct<sofatypefixedarray3f>/32768 32.7 us 32.2 us ; BM_FixedArray_defaultconstruct<sofa::type::Vec3f>/32768 73.3 us 73.2 us ; BM_FixedArray_defaultconstruct_vec3noinit/32768 33.0 us 33.0 us ; ```; Bench on caduceus (10k steps); - before : `10000 iterations done in 23.5033 s ( 425.471 FPS)`; - after: : `10000 iterations done in 21.5335 s ( 464.393 FPS)`. Nice 10% speedup for a really trivial change. ### Ubuntu/gcc; Actually on Ubuntu/gcc, the change does nothing as std::array/fixed_array/vec as the same timing (which is good); ```; BM_FixedArray_defaultconstruct<stdarray3f>/32768 15.6 us 15.6 us ; BM_FixedArray_defaultconstruct<sofatypefixedarray3f>/32768 15.2 us 15.2 us ; BM_FixedArray_defaultconstruct",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2764:34,perform,performance,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2764,1,['perform'],['performance']
Performance,"### runSofa crash . **Description**; runSofa crash when a texture file is not found by OglModel. **Steps to reproduce**; put a wrong filename or path into a textureName:; `<OglModel name=""VisualBody"" src=""@loader"" texturename=""../Material/textures/colorTest.jpg"" />`. **Expected behavior**; Error message and do not use the texture but normal default material rendering. ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: master; - State: build version. ### Logs. ```; [ERROR] [OglModel(VisualBody)] Texture ""C:\projects\UnrealEngine\SOFA_test2\Plugins\SofaUE5\Content/Material/textures/colorTest.jpg"" not found; [ERROR] [Image] File C:\projects\UnrealEngine\SOFA_test2\Plugins\SofaUE5\Content/Material/textures/colorTest.jpg not found. ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::dump; sofa::helper::BackTrace::sig; seh_filter_exe; seh_filter_exe; _C_specific_handler; _chkstk; RtlRaiseException; KiUserExceptionDispatcher; sofa::gl::Texture::update; sofa::gl::Texture::init; sofa::gl::component::rendering3d::OglModel::initVisual; sofa::component::visual::VisualModelImpl::drawVisual; sofa::simulation::VisualDrawVisitor::processVisualModel; sofa::simulation::VisualVisitor::processNodeTopDown; sofa::simulation::VisualDrawVisitor::processNodeTopDown; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal; sofa::simulation::graph::DAGNode::executeVisitorTreeTraversal; sofa::simulation::graph::DAGNode::doExecuteVisitor; sofa::simulation::DefaultVisualManagerLoop::drawStep; sofa::simulation::Simulation::draw; sofa::gui::qt::viewer::qgl::QtGLViewer::DisplayOBJs; sofa::gui::qt::viewer::qgl::QtGLViewer::drawScene; sofa::gui::qt::viewer::qgl::QtGLViewer::draw. ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3567:206,load,loader,206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3567,1,['load'],['loader']
Performance,"#1527 . based on:; - #2717 (for one file moved in core). Deprecates partially _SofaBoundaryCondition_. Gathers all other forcefields which applies **external** force on mechanical objects. (torsion, compression, etc). https://mechanicalengineering.blog/types-of-loads/. I chose `MechanicalLoad` because of (https://en.wikipedia.org/wiki/Mechanical_load) and it seems an official term but I was hesitating also with `ExternalForce` (because these components set external forces on objects) ; Could have been simply `Load` as well, but there are other type of Load: electrical load for example. EDIT: create a new sub module for FEM, called **FEM.Damping**, which gathers DampingFF; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2783:262,load,loads,262,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2783,4,"['Load', 'load']","['Load', 'load', 'loads']"
Performance,"#1527 . based on:; - #2843 . Deprecates the rest of **SofaGraphComponent** and **SofaUserInteraction**. Create a GUI (out of Sofa.Component) module, with:; - **Common** (definition of GUIs); - GUIs themselves: **Batch**, **Qt** and **Headlessrecorder**; - **Component**, with components only used for GUI (settings linked to performers). Metamodule SofaGui is still used for runSofa (so with a kind of conditional factory, depending of the compilation option at cmake) but I think we should move this ""conditional"" compilation directly in runSofa. [~~ci-depends-on https://github.com/sofa-framework/SofaGLFW/pull/31~~]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2895:325,perform,performers,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2895,1,['perform'],['performers']
Performance,"#1527; Based on ; - #2571 . Creating the module **Sofa.Component.IO**, where all the components linked to loading or exporting a mesh(.Mesh)~~/stuff(.Misc)~~ are contained.; Read/Writing stuff to repeat identical simulations (ReadState/Topology,etc) has been moved to a new category, namely **Sofa.Component.Playback**; Deprecates **SofaLoader**, **SofaGeneralLoader** and **SofaExporter**. Good module to test the compatibility of installation process, as the plugin Python3 has a dependency on the former SofaExporter. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2582:106,load,loading,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2582,1,['load'],['loading']
Performance,"#1527; based on ; - #2582. ~~It was supposed to be called Utils, but I did not really like this name (plural+shorten name) and Utility was more appealing...~~; EDIT: called `SceneUtility` now. Deprecates partially *SofaBaseUtils* and *SofaGraphComponent*. Questions:; ### RequiredPlugin; is needed to be implcitely loaded somewhere if a scene wants to load stuff.; Should it be moved in SofaCore (thus always available) or force load Sofa.Component.Utility somewhere; ### SceneChecker; SceneChecker stuff is in SofaBaseUtils but they are not component tho so it does not make sense to move them into Sofa.Component. Should they move somewhere (in the framework like SimulationCore) ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2605:315,load,loaded,315,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2605,3,['load'],"['load', 'loaded']"
Performance,"#1927 is suspected to causes crashes in multi-threaded scenes on Jenkins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2017:40,multi-thread,multi-threaded,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2017,1,['multi-thread'],['multi-threaded']
Performance,"&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::Simulation::initNode(sofa::simulation::Node*); sofa::simulation::Simulation::init(sofa::simulation::Node*); __libc_start_main; Segmentation fault (core dumped). **Expected behavior**; the scene has to run (When I replace dataset with dataset1 which I declared as:. diff --git a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp; index 2f00fe62dc..782ce854ce 100644; --- a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp; +++ b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp; @@ -72,6 +72,7 @@ MeshLoader::MeshLoader() : BaseLoader(); , d_rotation(initData(&d_rotation, Vec3(), ""rotation"", ""Rotation of the DOFs"")); , d_scale(initData(&d_scale, Vec3(1.0, 1.0, 1.0), ""scale3d"", ""Scale of the DOFs in 3 dimensions"")); , d_transformation(initData(&d_transformation, type::Matrix4::s_identity, ""transformation"", ""4x4 Homogeneous matrix to transform the DOFs (when present replace any)"")); + , d_dataset1(initData(&d_dataset1, ""dataset1"", ""Data from dataset"")); , d_previousTransformation(type::Matrix4::s_identity ); {; addAlias(&d_tetrahedra, ""tetras"");; @@ -184,6 +185,8 @@ void MeshLoader::clearBuffers(); getWriteOnlyAccessor(d_pyramidsGroups).clear();; getWriteOnlyAccessor(d_polygonsGroups).clear();; ; + getWriteOnlyAccessor(d_dataset1).clear();; +; doClea",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:2555,load,loader,2555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['load'],['loader']
Performance,"'--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. Result of the command above is unapplicable, since it is a Windows system. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaNonUniformFem.dll; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaMiscForceField.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/STLIB.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SoftRobots.dll; [WARNING] [UniformMass(uniformMass1)] Unused Attribute: ""massDensity"" with value: ""0.1""; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - MeshOBJLoader: 6 created with alias ""MeshObjLoader""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. **Content of build_dir/CMakeCache.txt**. Installed with the binary, so CMake wasn't used. ---------------------------------------------. PS: Please do inform me if any other information is required.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2651:2076,Load,Loaded,2076,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2651,2,['Load'],['Loaded']
Performance,"'MechanicalObject', name='DOFs', template='Vec3d', src='@loader'); self.static.addObject('StaticSolver', name='ODE', newton_iterations=""10"", printLog=True); self.static.addObject('SparseLDLSolver', name='LDL', template=""CompressedRowSparseMatrixMat3x3d""); # self.static.addObject('CGLinearSolver', name='linear solver', iterations=200, tolerance=1e-08, threshold=1e-08); self.static.addObject('TriangularFEMForceFieldOptim', youngModulus='200', poissonRatio='0.3'); self.static.addObject('BoxROI', name='ROI', box='-0.2 -0.2 -0.2 0.2 0.2 0.2'); self.static.addObject('FixedConstraint', indices='118 119'); self.static.addObject('BoxROI', name='ROI2', box='0.9 -0.2 -0.1 1.1 0.2 0.1'); self.CFF_static = self.static.addObject('ConstantForceField', indices=""@ROI2.indices"", force=""0 0 0"", showArrowSize=0.05). self.dynamic = rootNode.addChild('DynamicBeam', activated=True); self.dynamic.addObject('MeshGmshLoader', name='loader', filename='circle.msh'); self.dynamic.addObject('MeshTopology', name='TriangleTopo', src='@loader'); self.MO_dynamic = self.dynamic.addObject('MechanicalObject', name='DOFs', template='Vec3d', src='@loader'); self.dynamic.addObject('UniformMass', name='mass', totalMass = 0.000001); self.dynamic.addObject('EulerImplicitSolver', name='ODE'); self.dynamic.addObject('SparseLDLSolver', name='LDL', template=""CompressedRowSparseMatrixMat3x3d""); self.dynamic.addObject('TriangularFEMForceFieldOptim', youngModulus='200', poissonRatio='0.3' ); self.dynamic.addObject('BoxROI', name='ROI', box='-0.2 -0.2 -0.2 0.2 0.2 0.2'); self.dynamic.addObject('FixedConstraint', indices='@ROI.indices'); self.dynamic.addObject('BoxROI', name='ROI2', box='0.9 -0.2 -0.1 1.1 0.2 0.1'); self.CFF_dynamic = self.dynamic.addObject('ConstantForceField', indices=""@ROI2.indices"", force=""0 0 0"", showArrowSize=0.05). def onAnimateBeginEvent(self, event):; if (abs(self.forceMagnitude) < 3.5) :; self.forceMagnitude = self.forceMagnitude + 0.05; if (self.static.activated.value == True):; self.CFF_s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4051:2123,load,loader,2123,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4051,1,['load'],['loader']
Performance,"(EDIT: THIS PR WAS NOT CLEANED SO I MADE A VERSION 2 in PR #329). Currently in Sofa there is only rudimentary way to handle component evolution (change of implementation, change of parameters, deprecation) and report the change to our users. . In this PR I implemented a mecanism to do that. ; The basic idea is to have in scene a component that specify for which version of Sofa the scene have been tested. Here is how it looks in the scene:; ```xml; <APIVersion level='17.06'/>; ```; If the scene does not have this component the level is automatically set to 17.06 so existing scene will just work as they should. Now what happens if a scene with a given level is loaded in a sofa that have a different level (eg: '17.12'). In this case dedicated messages are printed to warn user things may go wrong. . Here is an example of what happen when loading a scene at level '17.06' on runSofa at level '17.12' (our master branch) with a BoxStiffSpringForceField (that could behave differently because of PR #290); ```; [INFO] [SceneChecker] The 'APIVersion' directive is missing in the current scene. ; Switching to the APIVersion level '17.06' ; [INFO] [SceneChecker] Validating a scene: ; - APIVersion checking: 1 ; - RequiredPlugin checking: 1; [WARNING] [BoxStiffSpringForceField(Spring)] BoxStiffSpringForceField have changed since 17.06. To use the old behavior you need to set parameter 'forceOldBehavior=true'; ```. The nice thing with the approach is that we can write custom condition to rise those messages. Here is a simple example (to handle PR315 & an imaginary deprecation of a component):; ```cpp; addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""RestShapeSpringsForceField"" && o->findData(""external_rest_shape"")->isSet()); msg_warning(o) << ""RestShapeSpringsForceField have changed since 17.06. The parameter 'external_rest_shape' is now a Link. To fix your scene you need to add and '@' in front of the provided path. See PR#315"" ;; }) ;. addHookInChangeSet(""17.06"", [",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/322:667,load,loaded,667,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/322,2,['load'],"['loaded', 'loading']"
Performance,"(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sof",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2065,load,load,2065,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,"(THIS WAS PR 322). Currently in Sofa there is only rudimentary way to handle component evolution (change of implementation, change of parameters, deprecation) and report the change to our users. . In this PR I implemented a mecanism to do that. ; The basic idea is to have in scene a component that specify for which version of Sofa the scene have been tested. Here is how it looks in the scene:; ```xml; <APIVersion level='17.06'/>; ```; If the scene does not have this component the level is automatically set to 17.06 so existing scene will just work as they should. Now what happens if a scene with a given level is loaded in a sofa that have a different level (eg: '17.12'). In this case dedicated messages are printed to warn user things may go wrong. . Here is an example of what happen when loading a scene at level '17.06' on runSofa at level '17.12' (our master branch) with a BoxStiffSpringForceField (that could behave differently because of PR #290); ```; [INFO] [SceneChecker] The 'APIVersion' directive is missing in the current scene. ; Switching to the APIVersion level '17.06' ; [INFO] [SceneChecker] Validating a scene: ; - APIVersion checking: 1 ; - RequiredPlugin checking: 1; [WARNING] [BoxStiffSpringForceField(Spring)] BoxStiffSpringForceField have changed since 17.06. To use the old behavior you need to set parameter 'forceOldBehavior=true'; ```. The nice thing with the approach is that we can write custom condition to rise those messages. Here is a simple example (to handle PR315 & an imaginary deprecation of a component):; ```cpp; addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""RestShapeSpringsForceField"" && o->findData(""external_rest_shape"")->isSet()); msg_warning(o) << ""RestShapeSpringsForceField have changed since 17.06. The parameter 'external_rest_shape' is now a Link. To fix your scene you need to add and '@' in front of the provided path. See PR#315"" ;; }) ;. addHookInChangeSet(""17.06"", [](Base* o){; if(o->getClassName() == ""TheCompon",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/329:620,load,loaded,620,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/329,2,['load'],"['loaded', 'loading']"
Performance,(https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-member-init.html) | [performance-move-const-arg](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-const-arg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [performance-move-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [performance-noexcept-move-constructor](https://clang.llvm.org/extra/clang-tidy/checks/performance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [performance-type-promotion-in-math-fn](https://clang.llvm.org/extra/clang-tidy/checks/performance-type-promotion-in-math-fn.html) |; | [cppcoreguidelines-pro-type-vararg](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-vararg.html) | [performance-unnecessary-copy-initialization](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-copy-initialization.html) |; | [cppcoreguidelines-slicing](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-slicing.html) | [performance-unnecessary-value-param](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-value-param.html) |; | [cppcoreguidelines-special-member-functions](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-special-member-functions.html) | [readability-avoid-const-params-in-decls](https://clang.llvm.org/extra/clang-tidy/checks/readability-avoid-const-params-in-decls.html) |; | [fuchsia-default-arguments](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-default-arguments.html) | [readability-braces-around-statements](https://cla,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:24060,perform,performance-type-promotion-in-math-fn,24060,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-type-promotion-in-math-fn']
Performance,"(merely a refreshed version of #2455 ); Waiting for ; - ~~https://github.com/sofa-framework/sofa/pull/2565~~. Kickstart of the implementation of SOFA-NG, as in defined #1527 (https://annuel2.framapad.org/p/sofang-v8). - Move files into a new file hierarchy (Sofa.Component.Stuff.Foo.Bar); - Change the namespace according to the path (sofa::component::stuff::foo::Bar); - Add compatibility layer (header path + aliases); - Deprecated modules redirect/load the new ones (e.g SofaExplicitSolver loads explicitely Sofa.Component.ODE.Forward). Tests show that the compat layer is working well for the moment (no warning/error for regression/scene tests) and only one unit test was complaining, as it was explicitly testing on the old name). Deprecates **SofaExplicitSolver**, **SofaImplicitSolver**, **SofaGeneralExplicitSolver**, **SofaGeneralImplicitSolver** and **SofaMiscSolver**. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2571:451,load,load,451,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2571,2,['load'],"['load', 'loads']"
Performance,"(without the tests....). Main problem is the linear solvers using CSPARSE, which only handles double.; Actually, SparseCholesky was using buffers of float with pointers of double (which obviously causes a crash).; SparseLU is more convenient, it tried to use SReal, and make the compilation failing directly. There were at least two way to solve this problem:; - disable in the CMakeLists directly (if floating_point is float); - do not compile the instance templated on float (effectivement does not compile the two solvers). I chose the latter to keep them visible in the base code, but I totally agree with the former solution (but requires to access to the Cmake variable SOFA_FLOATING_POINT from Sofa.Config in the CMakefile of S.C.LS.Direct). An other thing is that preconditionner wants to use SparseCholesky as well so there is a conditional compilation happening here unfortunately. I dont know if it is possible to just use an other direct solver (probably). This was needed to test the performance tests for ; - #2856. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2907:997,perform,performance,997,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2907,1,['perform'],['performance']
Performance,) |; | [cppcoreguidelines-pro-bounds-pointer-arithmetic](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-pointer-arithmetic.html) | [performance-inefficient-algorithm](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-algorithm.html) |; | [cppcoreguidelines-pro-type-const-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-const-cast.html) | [performance-inefficient-string-concatenation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-string-concatenation.html) |; | [cppcoreguidelines-pro-type-cstyle-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-cstyle-cast.html) | [performance-inefficient-vector-operation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-member-init.html) | [performance-move-const-arg](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-const-arg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [performance-move-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [performance-noexcept-move-constructor](https://clang.llvm.org/extra/clang-tidy/checks/performance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [performance-type-promotion-in-math-fn](https://clang.llvm.org/extra/clang-tidy/checks/performance-type-promotion-in-math-fn.html) |; | [cppcoreguidelines-pro-type-vararg](https://clang.llvm.org/extra/clan,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:23161,perform,performance-move-const-arg,23161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-move-const-arg']
Performance,")：undefined reference to ‘libusb_free_device_list’; dhdComUSB-libusb.cpp:(.text+0x30c)：undefined reference to ‘libusb_exit’; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2237,load,load,2237,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,1,['load'],['load']
Performance,"**Description**. Performing mouse picking and removing element using mouse interactor make runSofa crash.; Same problem as the one identified in issue #3202 . **Steps to reproduce**; Very easy using scene examples/TriangleSurfaceCutting.scn ; 1. use pick handler (shift + mouse left); 2. remove element using shift + mouse right; 3. crash as soon as one vertex is removed, see movie . https://user-images.githubusercontent.com/21199245/194725514-40441983-5fdb-43f1-9bd2-054bdd9aaa5b.mp4. ### Environment. **Context**. - System: any, windows or linux; - Version of SOFA: master. ### Logs. ```; Sofa.Component.Topology.Container.Dynamic.dll!sofa::component::topology::container::dynamic::PointSetTopologyContainer::setPointTopologyToDirty() Line 177	C++; 	Sofa.Component.Topology.Container.Dynamic.dll!sofa::component::topology::container::dynamic::PointSetTopologyModifier::removePointsWarning(sofa::type::vector<unsigned int,sofa::type::CPUMemoryManager<unsigned int>> & indices, const bool removeDOF) Line 378	C++; 	Sofa.Component.Topology.Container.Dynamic.dll!sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::removeTrianglesProcess(const sofa::type::vector<unsigned int,sofa::type::CPUMemoryManager<unsigned int>> & indices, const bool removeIsolatedEdges, const bool removeIsolatedPoints) Line 471	C++; 	Sofa.Component.Topology.Container.Dynamic.dll!sofa::component::topology::container::dynamic::TriangleSetTopologyModifier::removeTriangles(const sofa::type::vector<unsigned int,sofa::type::CPUMemoryManager<unsigned int>> & triangleIds, const bool removeIsolatedEdges, const bool removeIsolatedPoints) Line 332	C++; 	Sofa.GUI.Component.dll!sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromTriangleModel(sofa::component::collision::geometry::TriangleCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3,double>,sofa::type::Vec<3,double>,double>> * model, const sofa::type::vector<unsigned int,sofa::type::CPUMemoryManager<unsigned",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3370:17,Perform,Performing,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3370,1,['Perform'],['Performing']
Performance,"**[Only Windows/MSVC]**. I cannot explain at all 👺. On MSVC2022(17.7.4) and Release mode, a crash happens with `examples/Demos/fallingBeamLagrangianCollision.scn` when a collision occurs. It crashes when trying to insert values in the triplets vector (suspecting a memory error somewhere). Weirdly, it does not crash in RelWithDebug mode 🤐. ; *And* it does not crash as well on MSVC2019, as the CI (jenkins) uses it in release mode while testing the scene. At the code generation time (compiler?optimizer?) it does throw a warning like:; `1>C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.37.32822\include\vector(398): warning C4789: buffer 'triplets' of size 16 bytes will be overrun; 8 bytes will be written starting at offset 16`; only in Release mode. --. Two fixes possible (found by trial-and-error 🤡); - using std::vector instead of sofa::type::vector; - using a struct instead of the tuple; ; I used the std::vector one as it was the simplest. I suspect there is a bug(???)/issue with the optimizer/vectorizer of MSVC , or the allocator but i cannot prove anything 🙊. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4180:495,optimiz,optimizer,495,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4180,2,['optimiz'],['optimizer']
Performance,"+1 for tracing compiler's time (and thus template instanciation and .h parsing) and fixing things. ; 15 sec of compiler time on a 8 core machine is actually (8*15 sec)), this is quite significant :) . Could you verify that the change didn't not decrease the performances (maybe we should have for each .h tp .cpp of core class a small benchmark to asses the performacne difference). On my side I'm still very surprised that all the move we are doing in removing code from .h to put them into dedicated translation unit has so limited impact on performances. To me either the compiler's are very good nowaydays (thanks to GO/IPO/LTO) or a lot of code was not optimized because of our code architecture (eg: no final keyworkd in overriden method preventing optimization).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1285131009:258,perform,performances,258,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1285131009,5,"['optimiz', 'perform']","['optimization', 'optimized', 'performacne', 'performances']"
Performance,", which is called once per simulation frame. ; - I/Os can be added directly to the object inside the parse() function of the PSDE-object. Linking using the '@'-syntax also works. Therefore, the PSDE-object behaves like any other object that has I/Os (or Data in general). Inside the script these newly defined I/Os can be accessed as members of the object, providing an easy syntax. You can think of the PSDE as a possibility of subclassing the Sofa 'DataEngine' in a scripted way. In the second example provided it is shown how a versatile ROI functionality can be implemented with the help of the PSDE. Two examples with some documentation are provided in: ; applications/plugins/SofaPython/examples/PSDEExamples/. Example of use (01-basic/PSDEBasic.pyscn):; ```python; #!/usr/bin/env python; # -*- coding: utf-8 -*-; import Sofa; import os. path = os.path.dirname(os.path.abspath(__file__))+'/../../../../../../share/mesh/'; ; def createScene(rootNode):; rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename=path+'liver.vtk'); rootNode.createObject('PythonScriptDataEngine', name='PSDE', filename=""DataEngine.py"", classname=""MyDataEngine"")	 . ```; Example for DataEngine class in Python (01-basic/DataEngine.py):. ```python; class MyDataEngine(Sofa.PythonScriptDataEngine): ; ; def parse(self): ; # this is the correct place to define inputs and outputs! (linking will not work in init() for instance); self.addNewInput('Positions',datatype='p',value='@loader.position') ; self.addNewOutput('NumPoints',datatype='d', value='0') . def init(self):; 	pass. def update(self): ; self.NumPoints = len(self.Positions); ```. What it does NOT provide: A new form of parsing from Python data to Sofa data. It uses the available mechanism that uses string conversion and parsing. Also, the type of the Data has to be declared/selected with a parameter in Python, because there is no logic to automatically derive the type desired by the user (could be future work). ________________________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/583:1459,load,loader,1459,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/583,1,['load'],['loader']
Performance,",` with `sofa::core::collision::ContactCreator<` to improve thread safety of contact creation.; - AnimateBeginEvent and AnimateEndEvent can now receive an optional pointer to a TaskStatus ( in a form of a void pointer ). When using SofaMultithreading, this taksStatus pointer can be used to spawn the AnimateBeginEvent method in a separate thread. It is the reponsibility of the component to decide whether or not its AnimateBeginEvent method is thread safe.; - Change BaseObject argument parsing. When parsing, ensures if src attribute is used with link @ now allow the use of src="""". Topologies container associated to src="""" are supposed to be filled by following topological mapping. Using src=""@"" to avoid link warning drove to an autolink where the loader refers on container itself. Modification of implicated scenes and xml accordingly.; - WorkerThread maintains a list of stealable tasks as well as a list of higher priority thread specific tasks. Remove ThreadSpecificTask (not used and redundant with new thread-specific task queues). Update Task logging.; - Adapted MultiThreading plugin to the new build system.; - SetDirectory no longer changes the system current directory (shared by all threads in the process), but uses a global variable to record the current directory to be used within Sofa. But changing to the current file's directory is needed to load Python scene. For the moment, python loader is not use with multithreading, changing directory in the loader is a temporary solution. The functioning of python scene loader need to be adapted in the futur. ### Cleans; - Streamline calls to createResponse in case no groupManager is used; - Clean warnings in Task and TaskSchedulerBoost for Multithreading plugin. ### Bugfixes; - Fix crash with multithreaded collision detection. Call `TriangleModel::getTriangleFlag` method for all triangles of the topology to force the initialization of adjacency.information in the topology before some actual collision detection code is exe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:2568,queue,queues,2568,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,1,['queue'],['queues']
Performance,"- Add getter; - Add tests; - Update init mechanism to match Triangular and Triangle FEM. Add a lot of comment to describe the optimization of this component and try to solve the small difference comprare to TriangleFEM but changing the code slow down its convergence for unknown reason... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2284:126,optimiz,optimization,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2284,1,['optimiz'],['optimization']
Performance,"- Add performances benchmarks for gpu vs cpu in SofaCUDA/scenes/benchmarks/; - TetrahedronFEMForceField_beam10x10x40_cpu.scn (~23.5 fps); - TetrahedronFEMForceField_beam10x10x40_gpu.scn (~158 fps); - TetrahedronFEMForceField_beam16x16x76_cpu.scn (~8 fps); - TetrahedronFEMForceField_beam16x16x76_gpu.scn (~148 fps). - HexahedronFEMForceField_beam10x10x40_cpu.scn (~30 fps); - HexahedronFEMForceField_beam10x10x40_gpu.scn (~102 fps); - HexahedronFEMForceField_beam16x16x76_cpu.scn (~9.5 fps); - HexahedronFEMForceField_beam16x16x76_gpu.scn (~42 fps). - Add cpu-gpu validations scenes in SofaCUDA/scenes/cpu-gpu_validation/ with green beam for gpu and red for cpu; - CudaTetrahedronFEMForceField_beam10x10x40_implicit.scn; - CudaTetrahedronFEMForceField_beam10x10x40_rk4.scn; ; - CudaHexahedronFEMForceField_beam10x10x40_implicit.scn; - CudaHexahedronFEMForceField_beam10x10x40_rk4.scn. - Remove all old scenes for hexa and tetra fem in SofaCUDA/examples/; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2561:6,perform,performances,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2561,1,['perform'],['performances']
Performance,- Add support to load VTK polylines in legacy formated files; - used the new astyle formating onto the three files. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/576:17,load,load,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/576,1,['load'],['load']
Performance,"- Avoid trailing comma; - Consistent indentation; - Typo 'begining' -> 'beginning'; - Sort by name (bonus). # Before; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBruteForceBroadPhase, ParallelBVHNarrowPhase, ]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [LCPConstraintSolver, FreeMotionAnimationLoop, UncoupledConstraintCorrection, ]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver, ]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader, ]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [TriangleCollisionModel, LineCollisionModel, PointCollisionModel, ]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, SpotLight, OglModel, ]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <Req",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2111:326,load,loaded,326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111,1,['load'],['loaded']
Performance,"- Fix compilation and CMakeLists of the plugin before moving it out from SOFA repository. OpenCTM seems not to be supported anymore but some project are still using it. ; I will move that plugin into my github repo embedding directly OpenCTM lib. ; Unless you think it is of any use on sofa-framework repository. FYI: OpenCTM — the Open Compressed Triangle Mesh file format — is a file format, a software library and a tool set for compression of 3D triangle meshes. The geometry is compressed to a fraction of comparable file formats (3DS, STL, VRML, COLLADA...), and the format is easily accessible through a simple, portable API. http://openctm.sourceforge.net/. I was using it for WebGL as this format is slim and quick to load.; See for example here:; https://alteredqualia.com/three/examples/webgl_loader_ctm_materials.html. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1359:727,load,load,727,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1359,1,['load'],['load']
Performance,"- Fix link issues because of missing *_API; - Follow naming guidelines + depreciation of old variables; - OglGrid uses a cached list of vertices; - Use of `saveLastState` and `restoreLastState`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3115:121,cache,cached,121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3115,1,['cache'],['cached']
Performance,"- Fix memory problem of #1178; - Add mecanism to load Data vector only when clicking on ""show values"". Fix #1178. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1181:49,load,load,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1181,1,['load'],['load']
Performance,"- Introduce visitor to know the number of non-diagonal mass matrices; - Use this new visitor in EulerExplicitSolver to apply the optimization based on diagonal matrices, or not. This PR is based on #2163 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2165:129,optimiz,optimization,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2165,1,['optimiz'],['optimization']
Performance,"- On Windows, Cmake was not copying the debug version of the libpng/zlib/libtiff DLLs, but was still linking with the debug library (lib) files. So it was not loading the CImgPlugin when required while running runSofa_d. + change the libsuffix with a newer version of add_definition() in debug mode in multiconfig mode (ouf); (https://cmake.org/cmake/help/v3.17/policy/CMP0043.html#policy:CMP0043) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1328:159,load,loading,159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1328,1,['load'],['loading']
Performance,"- Quad spring sphere scene has been fixed; - The scene has been renamed to follow the same convention than the benchmark folder; - The scene has been duplicated and converted to cpu to compare performances; - The scene has been duplicated and both cpu and gpu are superimposed to compare. They are not matching perfectly. Not matching:; ![image](https://user-images.githubusercontent.com/10572752/149406468-a5eae1e9-0278-4a03-8c9a-1c611fbcb0df.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2598:193,perform,performances,193,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2598,1,['perform'],['performances']
Performance,"- Rename variable ```lastElementIndex``` into ```m_lastElementIndex```; - Add accessor; - Update this counter during add/remove operation. This counter is mandatory when multiple remove events are queued. ; - Init the counter during topologyData connection with its topology buffer. api is converging but this PR might have some side effects... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2359:197,queue,queued,197,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2359,1,['queue'],['queued']
Performance,"- Task #3770 . Main goal is to remove the ObjectFactory singleton (later) ***and*** the implicit registration of objects while loading dynamic libraries (plugins). In this PR, the explicit registration is applied on components of `Sofa.Component.StateContainer`. The legacy RegisterObject mechanism is preserved and will warn the user at the compilation and at run-time. EDIT:. - add tests about plugins non-registering/registering implicitly/registering explicitly; - add deprecations/warnings in RequiredPlugin; - add a function registerPlugin in PluginManager. This function is simply an alias for loadPlugin() because loadPlugin() does much more than just loading a plugin by itself. In an eventual future, PluginManager should be refactored in a way that loadPlugin calls registerPlugin(). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4429:127,load,loading,127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4429,5,['load'],"['loadPlugin', 'loading']"
Performance,- Using Sofa (maybe it is only runSofa) in release with some plugins.; - Switching to Debug; - launch runSofa_d. ```; [INFO] [runSofa] Loading automatically plugin list in C:/projects/sofa-build/bin/Debug/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/projects/sofa-build/bin/Debug/SofaMiscCollision_d.dll; [INFO] [PluginManager] Loaded plugin: C:/projects/sofa-build/bin/Debug/SofaCarving_d.dll; [INFO] [PluginManager] Loaded plugin: C:/projects/sofa-build/bin/Debug/Geomagic_d.dll; [ERROR] [PluginManager] Plugin loading failed (C:/projects/sofa-build/bin/Release/Geomagic.dll): Le module sp▒cifi▒ est introuvable.; [ERROR] [PluginManager] Plugin loading failed (C:/projects/sofa-build/bin/Release/SofaCarving.dll): Le module sp▒cifi▒ est introuvable.; [ERROR] [PluginManager] Plugin loading failed (C:/projects/sofa-build/bin/Release/SofaMiscCollision.dll): Le module sp▒cifi▒ est introuvable.; ```. But this doesn't seems to be blocking.; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/713:135,Load,Loading,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/713,7,"['Load', 'load']","['Loaded', 'Loading', 'loading']"
Performance,"- `loadPlugin` and `loadPluginByPath` return an enum: more detailed than a boolean; - `readFromIniFile` returns the list of plugins that have been loaded; - The plugin manager GUI highlights which plugins have been loaded in the GUI initialization (not the autoload file). Black text is for plugins that have been loaded prior the GUI initialization, or after. Blue for plugins loaded during init. See screenshot; - More log messages. ![image](https://user-images.githubusercontent.com/10572752/177587029-83209468-2213-4601-8e30-5b39bd331a2e.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3109:3,load,loadPlugin,3,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3109,6,['load'],"['loadPlugin', 'loadPluginByPath', 'loaded']"
Performance,"- add computeBBox; - more expressive code; - formatting; - fix typos; - optimizations; - remove unused aliases; - better description. Based on #4776 to avoid conflicts. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4777:72,optimiz,optimizations,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4777,1,['optimiz'],['optimizations']
Performance,"- based on #4270 . Part of the task #4217 . This PR removes the inheritance on type::fixed_array and use std::array to store the elements. No performance change noticed on few scenes (caduceus, TorusFall, beamadapter scene) on Windows/msvc, linux/gcc and macos/clang. . ---; Benches: (Ubuntu, gcc); Unit:; https://ethercalc.net/jt9xe3yadxug. Mostly the same, except:; - zero-construct is faster; - mat<24> mult is slower but can be fixed easily (https://github.com/sofa-framework/sofa/blob/3fadc10492662a63eab725fa45894f2c5b3fe9bd/Sofa/framework/Type/src/sofa/type/Mat.h#L531C12-L531C12 may confuse the vectorizer).; EDIT: and apparently is mitigated by using LTO. Scenes :; caduceus:; - master: `10000 iterations done in 6.61867 s ( 1510.88 FPS)`; - pr: `10000 iterations done in 6.59469 s ( 1516.37 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.6086 s ( 320.336 FPS)`; - pr: `5000 iterations done in 15.6149 s ( 320.207 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.5179 s ( 163.838 FPS)`; - pr: `5000 iterations done in 30.2582 s ( 165.244 FPS)`. With LTO:; caduceus:; - master: `10000 iterations done in 6.55136 s ( 1526.4 FPS)`; - pr: `10000 iterations done in 6.49977 s ( 1538.52 FPS)`; ; TorusFall: ; - master: `5000 iterations done in 15.4835 s ( 322.925 FPS)`; - pr: `5000 iterations done in 14.8696 s ( 336.256 FPS)`. 3instruments_collis; - master: `5000 iterations done in 30.0172 s ( 166.571 FPS)`; - pr: `5000 iterations done in 29.9373 s ( 167.016 FPS)`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new wa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4296:142,perform,performance,142,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4296,1,['perform'],['performance']
Performance,"- clean (const, foreach loop); - optimize a little bit when initializing the normals vector; - if there is not index, use memset to clear all vectors at once; - if there are indices, just dont clear the new vectors as there are supposed to be 0 already. On a big mesh (315k vertices and 620k triangles) and mapped (to force the call to computeNormals); - before `1000 iterations done in 14.95 s ( 66.8896 FPS).`; - after `1000 iterations done in 14.075 s ( 71.048 FPS)`. The case is not really usual as it needs huge meshes to see the difference ; and mappings will certainly takes much more time. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3805:33,optimiz,optimize,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3805,1,['optimiz'],['optimize']
Performance,"- clean and optimize `StiffSpringForceField::addKToMatrix`; - Introduce simpler scene showing StiffSpringForceField. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2429:12,optimiz,optimize,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2429,1,['optimiz'],['optimize']
Performance,"- clean cuda classes and .cu code; - add cudaVec3d support using kernel template; - Add benchmark scene cpu vs gpu and performance scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2568:119,perform,performance,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2568,1,['perform'],['performance']
Performance,"----- Mail original -----. > De: ""Damien Marchal"" <notifications@github.com>; > À: ""sofa-framework/sofa"" <sofa@noreply.github.com>; > Cc: ""Subscribed"" <subscribed@noreply.github.com>; > Envoyé: Jeudi 5 Janvier 2017 17:45:25; > Objet: [sofa-framework/sofa] Cleaning VisualModelImpl (#118). > Hi,. > To fully support xml saving (see PR: #116 ) we need to clean; > VisualModelImpl::parse(). > I can do some stuff but is unclear to me how much VisualModelImpl requires; > cleaning and whether or not some part are deprecated (the loading stuff from; > file seems redundant with loader).; Yes, definitely redundant, the MeshXyzLoader components should be used for this task ; The same for BaseMeshTopology::load(filename) . thomas . > By the way...any suggestion/advice regarding the data attributes is more than; > welcome. I started a branch there for that:; > https://github.com/SofaDefrost/sofa/tree/cleaning_visualmodelimpl. > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub , or mute the thread .",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/118#issuecomment-271516850:526,load,loading,526,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/118#issuecomment-271516850,3,['load'],"['load', 'loader', 'loading']"
Performance,"--------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 18.4 us 18.4 us 36921; BM_NarrowPhaseDetection_getDetectionOutputs/16 54.1 us 54.1 us 12873; BM_NarrowPhaseDetection_getDetectionOutputs/32 177 us 177 us 3973; BM_NarrowPhaseDetection_getDetectionOutputs/64 631 us 631 us 1116; BM_NarrowPhaseDetection_getDetectionOutputs/128 2587 us 2587 us 268; BM_NarrowPhaseDetection_getDetectionOutputs/256 10649 us 10649 us 67; ```; ## `sofa::helper::map_ptr_stable_compare`; ```; ------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; ------------------------------------------------------------------------------------------; BM_NarrowPhaseDetection_getDetectionOutputs/8 38.3 us 38.3 us 18336; BM_NarrowPhaseDetection_getDetectionOutputs/16 234 us 234 us 3010; BM_NarrowPhaseDetection_getDetectionOutputs/32 1373 us 1373 us 506; BM_NarrowPhaseDetection_getDetectionOutputs/64 8055 us 8056 us 88; BM_NarrowPhaseDetection_getDetectionOutputs/128 45349 us 45348 us 15; BM_NarrowPhaseDetection_getDetectionOutputs/256 243190 us 243189 us 3; ```; The benchmarks were performed using https://github.com/alxbilger/SofaBenchmark.; `BM_NarrowPhaseDetection_getDetectionOutputs/n` corresponds to a map containing `n^2` pairs of `CollisionModel*`. ## Discussion. It is undeniable that `std::map` and `std::unordered_map` are faster than `sofa::helper::map_ptr_stable_compare`. However, I don't know how crucial it is to have this kind of map with a dedicated comparator. Is this feature necessary? If not, I am in favour of using `std::unordered_map` wherever `sofa::helper::map_ptr_stable_compare` is used, for performances reasons. Overall, we won't get a huge gain of fps, but still it has an impact on the peformances of `NarrowPhaseDetection`. Initially, I wondered why `NarrowPhaseDetection` took so much time for so simple instructions. ______________________________________________________.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2047:2373,perform,performed,2373,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2047,1,['perform'],['performed']
Performance,-----; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/So,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3481,Load,Loaded,3481,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node """,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1559,Load,Loaded,1559,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Load'],['Loaded']
Performance,-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [performance-noexcept-move-constructor](https://clang.llvm.org/extra/clang-tidy/checks/performance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [performance-type-promotion-in-math-fn](https://clang.llvm.org/extra/clang-tidy/checks/performance-type-promotion-in-math-fn.html) |; | [cppcoreguidelines-pro-type-vararg](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-vararg.html) | [performance-unnecessary-copy-initialization](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-copy-initialization.html) |; | [cppcoreguidelines-slicing](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-slicing.html) | [performance-unnecessary-value-param](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-value-param.html) |; | [cppcoreguidelines-special-member-functions](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-special-member-functions.html) | [readability-avoid-const-params-in-decls](https://clang.llvm.org/extra/clang-tidy/checks/readability-avoid-const-params-in-decls.html) |; | [fuchsia-default-arguments](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-default-arguments.html) | [readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/readability-braces-around-statements.html) |; | [fuchsia-overloaded-operator](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-overloaded-operator.html) | [readability-container-size-empty](https://clang.llvm.org/extra/clang-tidy/checks/readability-container-size-empty.html) |; | [fuchsia-virtual-inheritance](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-virtual-inheritance.html) | [readability,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:24492,perform,performance-unnecessary-value-param,24492,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-unnecessary-value-param']
Performance,"-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugin ""wayland"" in """". (process:29694): Gtk-WARNING **: 22:14:09.328: Locale not supported by C library.; 	Using the fallback 'C' locale.; Gtk-Message: 22:14:09.408: Failed to load module ""canberra-gtk-module""; Gtk-Message: 22:14:09.409: Failed to load module ""canberra-gtk-module""; [INFO] [SofaPluginManager] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:11487,Load,Loaded,11487,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,-sofa-24.06.00/share/sofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/runSofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/qt; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:1527,Load,Loaded,1527,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,-tidy/checks/cppcoreguidelines-pro-bounds-array-to-pointer-decay.html) | [performance-for-range-copy](https://clang.llvm.org/extra/clang-tidy/checks/performance-for-range-copy.html) |; | [cppcoreguidelines-pro-bounds-constant-array-index](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-constant-array-index.html) | [performance-implicit-conversion-in-loop](https://clang.llvm.org/extra/clang-tidy/checks/performance-implicit-conversion-in-loop.html) |; | [cppcoreguidelines-pro-bounds-pointer-arithmetic](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-pointer-arithmetic.html) | [performance-inefficient-algorithm](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-algorithm.html) |; | [cppcoreguidelines-pro-type-const-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-const-cast.html) | [performance-inefficient-string-concatenation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-string-concatenation.html) |; | [cppcoreguidelines-pro-type-cstyle-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-cstyle-cast.html) | [performance-inefficient-vector-operation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-member-init.html) | [performance-move-const-arg](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-const-arg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [performance-move-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:22692,perform,performance-inefficient-string-concatenation,22692,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-inefficient-string-concatenation']
Performance,-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-member-init.html) | [performance-move-const-arg](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-const-arg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [performance-move-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [performance-noexcept-move-constructor](https://clang.llvm.org/extra/clang-tidy/checks/performance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [performance-type-promotion-in-math-fn](https://clang.llvm.org/extra/clang-tidy/checks/performance-type-promotion-in-math-fn.html) |; | [cppcoreguidelines-pro-type-vararg](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-vararg.html) | [performance-unnecessary-copy-initialization](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-copy-initialization.html) |; | [cppcoreguidelines-slicing](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-slicing.html) | [performance-unnecessary-value-param](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-value-param.html) |; | [cppcoreguidelines-special-member-functions](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-special-member-functions.html) | [readability-avoid-const-params-in-decls](https://clang.llvm.org/extra/clang-tidy/checks/readability-avoid-const-params-in-decls.html) |; | [fuchsia-default-arguments](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-default,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:23974,perform,performance-type-promotion-in-math-fn,23974,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-type-promotion-in-math-fn']
Performance,"... because the CI cannot load SofaCUDA. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2893:26,load,load,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2893,1,['load'],['load']
Performance,"... with the current standard set of modules/plugins.; ## About; Since MSVC2019, VS proposes the choice to use the clang-cl toolchain (clang with msvc tools). Not possible to enable it with the latest(?) cmake-gui but possible to generate a solution with the commandline version: `cmake -G""Visual Studio 2019"" -T ClangCL ..`; ## This PR; - add necessary cmake config to allow compilation (and avoid 1e999 warnings); - fix few problems detected with clang (rightly so); - change the FixParticlePerformerFactory shenanigan to be cleaner. ## Results; It appears that clang is somewhat more clever than cl.exe and seems to produces more optimized binaries.; Results are not always good, and really depends on the situation/scene. Few cases where cl is slightly faster than clang-cl; Some bench:; - `caduceus.scn -g batch -n 10000`; - cl: `21.2541 s ( 470.498 FPS)`; - clang-cl: `19.6914 s ( 507.836 FPS)`; - MeshMatrixMass.scn with 4096 steps (from SofaBenchmark); - cl: `25504 ms`; - clang-cl: `18161 ms`; - `examples/Benchmark/Performance/benchmark_cubes.scn -g batch -n 1000`; - cl: `36.7404 s ( 27.218 FPS`; - clang-cl: ` 37.8146 s ( 26.4448 FPS)`; - `examples/Benchmark/Performance/TorusFall.scn -g batch -n 1000`; - cl: `8.63699 s ( 115.781 FPS)`; - clang-cl: ` 7.72771 s ( 129.404 FPS)`; - `applications/plugins/SofaCUDA/examples/beam16x16x76-fem-implicit-CPU.scn -g batch -n 1000`; - cl: ` 113.022 s ( 8.8478 FPS))`; - clang-cl: ` 100.645 s ( 9.93587 FPS)`; - SofaBenchmark, a lot shows only improvement around 10-15% but some are interesting:; - `BM_FixedArray_construct<sofa::type::Vec3f>/8192`; - cl: ` 10.5 us`; - clang-cl: ` 6.42 us`; - `BM_Matrix_typemat3x3f_assign/512` this one is weird (the same bench with eigenmat is much closer); - cl: ` 3.44 us`; - clang-cl: ` 1.18 us`. ## Warning; pybind is not compatible with clang-cl (and I am sure a lot of other libraries), even gtest as it is was not compatible. ______________________________________________________. By submitting this pull ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2563:633,optimiz,optimized,633,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2563,2,"['Perform', 'optimiz']","['Performance', 'optimized']"
Performance,"...instead of assign operator + defaultconstructor (which in fine do the same clear() function). Micro optimization but still 😗; (nice french idiom for that: ""ça ne mange pas de pain""). (on examples/Components/DiagonalMass.scn); Before:; ![Capture1](https://user-images.githubusercontent.com/11028016/144096997-260f4c68-2784-4b9a-a71b-869ad5536567.PNG); After:; ![Capture2](https://user-images.githubusercontent.com/11028016/144097259-7a1640be-2697-47d3-a94a-2fa73b84a002.PNG). _______________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2518:103,optimiz,optimization,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2518,1,['optimiz'],['optimization']
Performance,.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:7655,Load,Loaded,7655,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [I,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:9659,Load,Loaded,9659,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugi,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:9911,Load,Loaded,9911,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,".Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```; <img width=""686"" alt=""截屏2022-10-25 下午11 56 58"" src=""https://user-images.githubusercontent.com/56861752/197808646-732fe9ee-f7db-",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:9488,load,loaded,9488,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,['load'],"['loaded', 'loadedPlugins']"
Performance,.ComputeBBox: hexa2QuadTopologicalMapping2; 4 	 4.72	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: triangleCollisionModel2; 4 	 4.73	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel2; 4 	 4.73	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: pointCollisionModel2; 3 	 4.74	 1 	 0 	 0.02	 0 	 0 	 0 	 0.03	...BoundingBoxVisitor - ProcessTopDown: $1#!8!1#9127548; 3 	 4.74	 1 	 0 	 0 	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: %##3%#$117936%%; 3 	 4.74	 1 	 0 	 0.03	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 00%#@519$290#0%; 3 	 4.74	 1 	 0 	 0.01	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 622##7@15@10%4%; 3 	 4.74	 1 	 0 	 0.02	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 339#26%3085%754; 3 	 4.74	 1 	 0 	 0 	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 23%318!7@!0110$; 3 	 4.75	 1 	 0 	 0.03	 0 	 0 	 0 	 0.10	...BoundingBoxVisitor - ProcessTopDown: Floor; 4 	 4.75	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: loader; 4 	 4.75	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: meshTopology1; 4 	 4.75	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: mObject1; 4 	 4.75	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: triangleCollisionModel3; 4 	 4.75	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel3; 4 	 4.75	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: pointCollisionModel3; 3 	 4.75	 1 	 0 	 0.02	 0 	 0 	 0 	 0.03	...BoundingBoxVisitor - ProcessTopDown: 5$!%4942@362!91; 3 	 4.76	 1 	 0 	 0 	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: !%6#67064322$79; 3 	 4.76	 1 	 0 	 0.01	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 415253259$047%@; 3 	 4.76	 1 	 0 	 0.02	 0 	 0 	 0 	 0.03	...BoundingBoxVisitor - ProcessTopDown: 8595%691#!%4%%3; 3 	 4.76	 1 	 0 	 0.02	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 69477@%1#334733; 3 	 4.76	 1 	 0 	 0.01	 0 	 0 	 0 	 0.03	...BoundingBoxVisitor - ProcessTopDown: 5632%!$$3287602; 3 	 4.77	 1 	 0 	 0 	 0 	 0 	 0 	 0 	...Boun,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:9764,load,loader,9764,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,1,['load'],['loader']
Performance,".Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gf",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10114,Load,Loaded,10114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1h,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:2611,Load,Loaded,2611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,".LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Correction""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Geometry)] Plugin not found: ""Sofa.Component.Collision.Geometry"". Failed to load: [""Sofa.Component.Collision.Geometry""]; [ERROR] [SofaRuntime] ValueError: Object type BackgroundSetting<> was not created; The object is not in the factory.; This component has been MOVED from SofaBaseVisual to Sofa.Component.UserInterface.ConfigurationSetting since SOFA v22.06.; To continue using this component you may need to update your scene by adding. Traceback (most recent call last):; File ""/home/sofa/SOFA/v22.06.00/bin/lap",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4971,load,load,4971,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,.framework/Versions/2.7/lib/python2.7/plat-darwin; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload; /usr/local/lib/python2.7/site-packages; ******************; *** PYTHONPATH ***; /usr/local/lib/python2.7/site-packages. ******************; Numpy found: /usr/local/lib/python2.7/site-packages/numpy/__init__.pyc; ```. When I run it with runSofa (and thus SofaPython):; ```; sofamacbuilder:mac_clang-3.5_default_release sofa$ ./build/bin/runSofa -g batch test.py; [INFO] [runSofa] Loading automatically plugin list in /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaSparseSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPreconditioner.dylib; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPython.dylib; [INFO] [PluginManager],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:2199,Load,Loading,2199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,1,['Load'],['Loading']
Performance,".setDimension(800, 600); Sofa.GUIManager.setScene(root). Sofa.GUIManager.MainLoop(root). Sofa.GUIManager.closeGUI(); ```; ### What else this PR brings. **Plugin manager**; One of the problem arising from this feature is the duplicated loading of the python plugin: when issuing the `import Sofa` command in the python script the interpreter loads the library (SofaPython.so). If the script explicitly calls the `Sofa.loadPlugin(""SofaPython"")` command, Sofa's PluginManager will load again the same library. Example of a faulty script:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from t",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:3145,load,loadLibrary,3145,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,3,['load'],"['load', 'loadLibrary', 'loaded']"
Performance,.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-s,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:2760,Load,Loaded,2760,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"//github.com/SofaDefrost/sofa/commits/deprecating_components beheaded until 456d88343e210ce89d9f7436c290be92fe438313 and merged it with master.; ________________________________________________________________. It does:; - split the CMakeFile.txt in three sets to allow component deprecation/stabilization.; - implement a light C++ api in sofa::simpleapi::* to create component with a pythonic look & feel; - use the simpleapi to change the code of SceneCreator to cut the dependencies and to simplify the plugizniation of modules. ; - in SceneCreator, create SceneUtil.h where some function from SceneCreator are now. ; - remove the module/sofa/component/typedef/* (which seems to cause no real problem); - mute the SOFA_DECL_CLASS/SOFA_LINK_CLASS so maybe...as everything works in the CI we ca n probably remove those lines and stop using them in .cpp ; - remove c++ tutorials from CMakeList before real removal they are slow to compile, and induce big dependencies so it will slow down the deprecation. ; - add an InfoComponent in the loaded scene to indicate when an object failed to be created. . To avoid post-cleaning workload I merged:; - PR#422 Fix for SofaImplicitField and SofaVolumetricData plugin; - PR#407 [SofaSphFluid & SofaMiscCollision] Pluginizing the two modules; For the same reasons we may also merge #414 #424 and #425. Notes: ; - the SceneCreator refactoring is not fully working and generates few test failures but this can be fix easily. ; - removing the typedef & SOFA_DECl/SOFA_LINK seems to ok. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/453:1252,load,loaded,1252,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/453,1,['load'],['loaded']
Performance,/ERROR] H� Win32 �(nager] Plugin loading failed (D:/SOFA/v23.06.00/bin/SofaPython3.dll): %1 �,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4913:33,load,loading,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4913,2,['load'],['loading']
Performance,"/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). Start: 'Visual'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). KeyNotFoundException: The given key '4' was not present in the dictionary.; System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item (TKey key) (at <eef08f56e2e042f1b3027eca477293d9>:0); SofaUnityAPI.SofaContextAPI.loadScene (System.String filename) (at Assets/SofaUnity/Plugins/SofaUnityAPI/SofaContextAPI.cs:189); SofaUnity.SofaContext.ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:486); SofaUnity.SofaContext.Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext.StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext.Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr, Boolean&). Start: 'VisualEye'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'VisualCornea'; UnityEngine.Debug:Log (object); SofaVisualModel:Start ()",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:6665,load,loadScene,6665,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['load'],['loadScene']
Performance,/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1689,Load,Loaded,1689,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,/Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:5241,Load,Loaded,5241,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6647,Load,Loaded,6647,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7011,Load,Loaded,7011,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,/clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-nullability.NullablePassedToNonnull.html) | [modernize-deprecated-headers](https://clang.llvm.org/extra/clang-tidy/checks/modernize-deprecated-headers.html) |; | [clang-analyzer-nullability.NullableReturnedFromNonnull](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-nullability.NullableReturnedFromNonnull.html) | [modernize-loop-convert](https://clang.llvm.org/extra/clang-tidy/checks/modernize-loop-convert.html) |; | [clang-analyzer-optin.cplusplus.VirtualCall](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.cplusplus.VirtualCall.html) | [modernize-make-shared](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-shared.html) |; | [clang-analyzer-optin.mpi.MPI-Checker](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.mpi.MPI-Checker.html) | [modernize-make-unique](https://clang.llvm.org/extra/clang-tidy/checks/modernize-make-unique.html) |; | [clang-analyzer-optin.performance.Padding](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.performance.Padding.html) | [modernize-pass-by-value](https://clang.llvm.org/extra/clang-tidy/checks/modernize-pass-by-value.html) |; | [clang-analyzer-optin.portability.UnixAPI](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-optin.portability.UnixAPI.html) | [modernize-raw-string-literal](https://clang.llvm.org/extra/clang-tidy/checks/modernize-raw-string-literal.html) |; | [clang-analyzer-security.FloatLoopCounter](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.FloatLoopCounter.html) | [modernize-redundant-void-arg](https://clang.llvm.org/extra/clang-tidy/checks/modernize-redundant-void-arg.html) |; | [clang-analyzer-security.insecureAPI.UncheckedReturn](https://clang.llvm.org/extra/clang-tidy/checks/clang-analyzer-security.insecureAPI.UncheckedReturn.html) | [modernize-replace-auto-ptr](https://clang.llvm.org/extra/clang-tidy/checks/modernize-replace-auto-ptr.htm,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:15260,perform,performance,15260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance']
Performance,"/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plug",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8312,Load,Loaded,8312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/bui,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:5375,Load,Loaded,5375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,/hemingshan/Code/sofa/src/applications/projects/runSofa/resources:/Users/hemingshan/Code/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/l,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:1877,Load,Loaded,1877,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,/home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_co,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:4441,Load,Loaded,4441,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ RUN ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData; ----------------------------------------------------------------------; Ran 1 test in 0.000s. OK; [ OK ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3629,load,loaded,3629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['load'],['loaded']
Performance,/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:3456,Load,Loaded,3456,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plug,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:5459,Load,Loaded,5459,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"/python3.8/imp.py(171): load_source; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ RUN ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData; ----------------------",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3548,load,loaded,3548,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['load'],['loaded']
Performance,"/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded pl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8204,Load,Loaded,8204,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManag,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5614,Load,Loaded,5614,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:3325,Load,Loaded,3325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,00/share/sofa/gui/qt; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.0,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:1808,Load,Loaded,1808,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"05 ....UpdateVAndX. ```; ## Multi threaded; ```; 8.40483 s ( 118.979 FPS); LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.01 1 5.32 26.82 7.42 1.31 7.42 88.31 ...Mechanical; 4 0.02 1 0.22 0.88 0.32 0.07 0.32 3.80 ....ComputeForce; 4 0.34 1 0.19 0.70 0.28 0.06 0.28 3.29 ....ComputeRHTerm; 4 0.61 1 0 0.07 0.01 0 0.01 0.06 ....MBKBuild; 5 0.61 1 0 0.07 0 0 0 0.03 .....CG-setSystemMBKMatrix; 4 0.62 1 4.87 25.85 6.80 1.22 6.80 80.84 ....MBKSolve; 5 0.64 1 4.84 25.82 6.77 1.22 6.77 80.51 .....CG-Solve; 4 7.42 1 0.01 0.02 0.01 0 0.01 0.13 ....UpdateVAndX. ```. # Comments. - Code is in plugin MultiThreading because of the large amount of boilerplate code for the multi threading management, that would pollute the initial implementation in `HexahedronFemForceField`. I have some ideas to reduce this code, but it requires work on the task scheduler.; - A small part of the code is duplicated from `HexahedronFemForceField`.; - Initially, I wanted to accelerate the execution of the Conjugate Gradient for `GraphScattered` types. It is not possible to propose a generic multi-threaded acceleration for all force fields: for FEM, the most time consuming step in the CG is `ForceField::addDForce`. This is the method to accelerate. The downside is that it has to be done for every force field... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2177:1889,multi-thread,multi-threaded,1889,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177,1,['multi-thread'],['multi-threaded']
Performance,"1. `NonBuiltConstraintCorrection.scn` is fixed to really not build the lcp; 2. 2 scenes are added for performances benchmark; 3. Cubes scene does not build lcp. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2110:102,perform,performances,102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2110,1,['perform'],['performances']
Performance,17 vc 14.1; Sofa Master: commit 9d9100aa1b0acb9363c8ec7c9b5e4b470821bfc1; Boost: 1.71.0; CGAL: CGAL-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLForm,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1461,Load,Loaded,1461,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Load'],['Loaded']
Performance,1B69F> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage; 0x7fff26e94000 - 0x7fff2715efff com.apple.QuartzCore (1.11 - 926.8) <04D8759B-1119-3E37-B922-32BDECB7C5D2> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore; 0x7fff2715f000 - 0x7fff271a0fff libFontRegistry.dylib (309) <9E9329F6-7384-3C7F-83E7-D52CD7FFBC09> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib; 0x7fff271a1000 - 0x7fff272e2fff com.apple.coreui (2.1 - 690) <6DB427BB-44CA-3002-A3FF-77F0FEFC2A51> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI; 0x7fff272e3000 - 0x7fff273cefff com.apple.ViewBridge (551.3 - 551.3) <9F31CEDB-5B8A-3BAE-A638-E9F352EF4E87> /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge; 0x7fff273cf000 - 0x7fff273dafff com.apple.PerformanceAnalysis (1.275 - 275) <2E5E666D-EE93-3949-8C76-692FA748D129> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis; 0x7fff273db000 - 0x7fff273eafff com.apple.OpenDirectory (11.2 - 230.40.1) <333A7F2E-0F3E-37F1-9E1B-69996F5084D2> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory; 0x7fff273eb000 - 0x7fff2740afff com.apple.CFOpenDirectory (11.2 - 230.40.1) <25F138F8-9E55-3749-8271-0FDB275C3E2C> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory; 0x7fff2740b000 - 0x7fff27413fff com.apple.CoreServices.FSEvents (1290.40.2 - 1290.40.2) <6B70B98B-BCC5-3FBE-A6B5-CD0696AA055A> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents; 0x7fff27414000 - 0x7fff27438fff com.apple.coreservices.SharedFileList (144 - 144) <C861FAD6-D3A5-302C-88AE-B2813F7201A7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/Shared,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:29154,Perform,PerformanceAnalysis,29154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['Perform'],['PerformanceAnalysis']
Performance,1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:8444,Load,Loaded,8444,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"1st<std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > > >, std::less<sofa::core::behavior::BaseMechanicalState*>, std::allocator<std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > > > >::_M_erase (this=0x7fffffffabc8, __x=0x5555566c2750); at /usr/include/c++/13/bits/stl_tree.h:1936; #31 0x00007fffeaec4e58 in std::_Rb_tree<sofa::core::behavior::BaseMechanicalState*, std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > >, std::_Select1st<std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > > >, std::less<sofa::core::behavior::BaseMechanicalState*>, std::allocator<std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSM--Type <RET> for more, q to quit, c to continue without paging--; echanicalPolicy> > > > >::~_Rb_tree (this=0x7fffffffabc8, __in_chrg=<optimized out>); at /usr/include/c++/13/bits/stl_tree.h:986; #32 0x00007fffeaeb0f4e in std::map<sofa::core::behavior::BaseMechanicalState*, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> >, std::less<sofa::core::behavior::BaseMechanicalState*>, std::allocator<std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > > > >::~map (; this=0x7fffffffabc8, __in_chrg=<optimized out>) at /usr/include",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:22751,optimiz,optimized,22751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['optimiz'],['optimized']
Performance,"2- ADD tests; 3- CLEAN member variables name (BREAKING); 4- ADD an example of orientedBox dataField use; 5- Changed a bit the implementation from PlaneROI, for computation optimization purpose. Question:; I would like to reimplement PlaneROI so that it does what we expect from its name, and also print a ""deprecated message"" for those who still use PlaneROI as an OrientedBoxROI. Those users will be detected if they use a deprecated data field. What do you think?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/108:172,optimiz,optimization,172,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/108,1,['optimiz'],['optimization']
Performance,"238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugin ""wayland"" in """". (process:29694): Gtk-WARNING **: 22:14:09.328: Locale not supported by C library.; 	Using the fallback 'C' locale.; Gtk-Message: 22:14:09.408: Failed to load module ""canberra-gtk-module""; Gtk-Message: 22:14:09.409: Failed to load module ""canberra-gtk-module""; [INFO] [SofaPluginManager] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:12677,load,loadedPlugins,12677,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['load'],['loadedPlugins']
Performance,24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatr,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:10574,Load,Loaded,10574,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:6863,Load,Loaded,6863,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: JointSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid2d,Vec2d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: RigidRigidMapping<Rigid3d,Rigid3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [WARNING] [ObjectFactory] Class already registered: AngularSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Rigid3d>; [WARNING] [ObjectFa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:9388,Load,Loaded,9388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"3b34 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:150; #6 0x00007ffff52a3c67 in malloc_printerr (str=str@entry=0x7ffff53c6a20 ""double free or corruption (out)""); at ./malloc/malloc.c:5765; #7 0x00007ffff52a5c50 in _int_free_merge_chunk (av=0x7ffff53feca0 <main_arena>, p=0x5555567f2740, size=2619930050800); at ./malloc/malloc.c:4669; #8 0x00007ffff52a87f3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391; #9 0x00007ffff79b94db in std::__new_allocator<int>::deallocate (this=0x5555567f23c8, __p=0x5555567f2750, __n=57); at /usr/include/c++/13/bits/new_allocator.h:168; #10 0x00007ffff79ae098 in std::allocator_traits<std::allocator<int> >::deallocate (__n=57, __p=0x5555567f2750, ; __a=...) at /usr/include/c++/13/bits/alloc_traits.h:516; #11 std::_Vector_base<int, std::allocator<int> >::_M_deallocate (this=0x5555567f23c8, __p=0x5555567f2750, __n=57); at /usr/include/c++/13/bits/stl_vector.h:387; #12 0x00007ffff79a8bde in std::_Vector_base<int, std::allocator<int> >::~_Vector_base (this=0x5555567f23c8, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/stl_vector.h:366; #13 0x00007ffff79a4b8b in std::vector<int, std::allocator<int> >::~vector (this=0x5555567f23c8, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/stl_vector.h:735; #14 0x00007ffff5caf956 in sofa::type::vector<int, sofa::type::CPUMemoryManager<int> >::~vector (this=0x5555567f23c8, ; __in_chrg=<optimized out>) at /home/alex/Documents/sofa/Sofa/framework/Type/src/sofa/type/vector_T.h:55; #15 0x00007ffff3b58ba2 in sofa::linearalgebra::CompressedRowSparseMatrixGeneric<double, sofa::linearalgebra::CRSMechanicalPolicy>::~CompressedRowSparseMatrixGeneric (this=0x5555567f2310, __in_chrg=<optimized out>); at /home/alex/Documents/sofa/Sofa/framework/LinearAlgebra/src/sofa/linearalgebra/CompressedRowSparseMatrixGeneric.h:246; #16 0x00007ffff3b58fff in sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>::~CompressedRowSparseMatrixMechanical ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:14230,optimiz,optimized,14230,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['optimiz'],['optimized']
Performance,"3d as the default; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec2d>; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec3d>; ....; ```. or with a cryptic error message if you try to use the PluginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it bui",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:1340,load,loaded,1340,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,1,['load'],['loaded']
Performance,3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManag,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:7420,Load,Loaded,7420,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"4/sofa/v16.08/applications/projects/runSofa/Main.cpp:374; ```. I tried running some of the tutorial applications as well and it looks like the segfault occurs anytime the sofa simulation gets initialized with a ```DAGSimulation```. e.g. the ```chainHybrid``` tutorial application starts successfully (it uses a ```TreeSimulation```) while one ```oneParticle``` exhibits the segfault. Here's the backtrace from running ```oneParticle```:. ```; #0 0x00007ffff7b3b4d4 in sofa::core::objectmodel::LinkTraitsValueType<sofa::simulation::graph::DAGNode, sofa::simulation::graph::DAGNode*, false, true>::T::operator-> (this=0x8); at /media/nvme4/sofa/v16.08/SofaKernel/framework/sofa/core/../../sofa/core/objectmodel/Link.h:100; #1 0x00007ffff7b32104 in sofa::simulation::graph::DAGNode::detachFromGraph (this=0x9d1f80) at /media/nvme4/sofa/v16.08/SofaKernel/modules/SofaSimulationGraph/DAGNode.cpp:128; #2 0x00007ffff687257e in sofa::gui::PickHandler::init (this=0x948090, root=0x6e1300) at /media/nvme4/sofa/v16.08/applications/sofa/gui/PickHandler.cpp:164; #3 0x00007ffff686336e in sofa::gui::BaseViewer::load (this=0x801648) at /media/nvme4/sofa/v16.08/applications/sofa/gui/BaseViewer.cpp:283; #4 0x00007ffff71c9d61 in sofa::gui::qt::RealGUI::setScene (this=0x7384c0, root=..., filename=0x0, temporaryFile=false) at /media/nvme4/sofa/v16.08/applications/sofa/gui/qt/RealGUI.cpp:883; #5 0x00007ffff71c67cc in sofa::gui::qt::RealGUI::CreateGUI (name=0x7ffff783c7a5 ""qglviewer"", options=std::vector of length 0, capacity 0, root=..., filename=0x0) at /media/nvme4/sofa/v16.08/applications/sofa/gui/qt/RealGUI.cpp:170; #6 0x00007ffff687af1b in sofa::gui::GUIManager::createGUI (groot=..., filename=0x0) at /media/nvme4/sofa/v16.08/applications/sofa/gui/GUIManager.cpp:261; #7 0x0000000000409de7 in main (argc=1, argv=0x7fffffffa788) at /media/nvme4/sofa/v16.08/applications/tutorials/oneParticle/oneParticle.cpp:127; ```. I tried building with Clang 3.4.2 and observe the same issue. Any tips for resolving?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/127:2413,load,load,2413,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/127,1,['load'],['load']
Performance,504.13 22.56 15.26 22.56 40.40 ....MBKBuild; 5 1.15 1 20.28 495.02 21.66 15 21.66 38.78 .....MMM-addKToMatrix; 6 1.15 1 1.67 3.78 1.77 0.12 1.77 3.17 ......jacobian; 6 2.92 1 6.60 12.14 7.08 0.46 7.08 12.67 ......stiffness; 6 10 1 2.47 5.98 2.65 0.20 2.65 4.74 ......copyKToEigen; 7 10 1 2.47 5.97 2.64 0.20 2.64 4.73 .......KfromTriplets; 6 12.65 1 0.22 0.54 0.26 0.02 0.26 0.46 ......copyJ1J2ToEigen; 7 12.84 1 0.05 0.19 0.06 0.01 0.06 0.11 .......copyJ2ToEigen; 6 12.90 1 5.31 479.58 6.13 14.98 6.13 10.98 ......Multiplication; 7 12.90 1 3.08 469.90 3.68 14.75 3.68 6.60 .......J1tKJ1; 7 16.59 1 0.36 4.89 0.38 0.15 0.38 0.68 .......J2tKJ2; 7 16.97 1 1.52 4.10 1.71 0.13 1.71 3.06 .......J1tKJ2; 7 18.68 1 0.32 0.83 0.35 0.03 0.35 0.63 .......J2tKJ1; 6 19.04 1 2.50 5.50 2.66 0.20 2.66 4.77 ......J1tKJ1-copy; 6 21.70 1 0 0.01 0 0 0 0 ......J2tKJ2-copy; 6 21.71 1 0.01 0.05 0.01 0 0.01 0.03 ......J1tKJ2-copy; 6 21.72 1 0.01 0.07 0.02 0 0.02 0.04 ......J2tKJ1-copy. ```. and using the regular product (optimization is off):. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 56.59 84.98 59.59 2.15 59589.1 100 TOTAL; ...; 4 0.96 1 24.03 36.80 25.76 1.38 25.76 43.23 ....MBKBuild; 5 1.15 1 23.15 35.72 24.86 1.32 24.86 41.73 .....MMM-addKToMatrix; 6 1.15 1 1.67 4.50 1.83 0.18 1.83 3.06 ......jacobian; 6 2.98 1 6.67 12.18 7.13 0.38 7.13 11.97 ......stiffness; 6 10.11 1 2.48 5.59 2.69 0.22 2.69 4.51 ......copyKToEigen; 7 10.11 1 2.48 5.59 2.68 0.22 2.68 4.50 .......KfromTriplets; 6 12.80 1 0.24 0.59 0.28 0.04 0.28 0.46 ......copyJ1J2ToEigen; 7 13.01 1 0.05 0.28 0.06 0.01 0.06 0.10 .......copyJ2ToEigen; 6 13.07 1 8.17 14.53 9.14 0.76 9.14 15.33 ......Multiplication; 7 13.07 1 4.64 10.75 5.20 0.48 5.20 8.73 .......J1tKJ1; 7 18.28 1 0.39 1.26 0.43 0.06 0.43 0.72 .......J2tKJ2; 7 18.71 1 2.69 6.72 3.08 0.34 3.08 5.17 .......J1tKJ2; 7 21.79 1 0.39 1.20 0.42 0.06 0.42 0.71 .......J2tKJ1; 6 22.21 1 2.29 4.73 2.67 0.16 2.67 4.48 ......J1tKJ1-copy; 6 24.88 1 0 0.02 0 0 0 0 ......,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2394:2211,optimiz,optimization,2211,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2394,1,['optimiz'],['optimization']
Performance,7-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:6712,Load,Loaded,6712,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"71 1 2.69 6.72 3.08 0.34 3.08 5.17 .......J1tKJ2; 7 21.79 1 0.39 1.20 0.42 0.06 0.42 0.71 .......J2tKJ1; 6 22.21 1 2.29 4.73 2.67 0.16 2.67 4.48 ......J1tKJ1-copy; 6 24.88 1 0 0.02 0 0 0 0 ......J2tKJ2-copy; 6 24.88 1 0.01 0.04 0.01 0 0.01 0.02 ......J1tKJ2-copy; 6 24.90 1 0.01 0.07 0.02 0 0.02 0.04 ......J2tKJ1-copy; ```. The speed up is quite disappointing. But the benchmarks explain it. The speed up depends on the size of the matrix, the sparsity and overall on the size of the intersection.; Yet, there is a speedup. And compared to the reference timings before the series of optimizations (https://github.com/sofa-framework/sofa/pull/2362), `MechanicalMatrixMapper` is about twice faster (in the example). Some notes:. - I added a skeleton to also support product of `CompressedRowSparseMatrix`, but it is not implemented yet. In `MechanicalMatrixMapper`, a `CompressedRowSparseMatrix` is converted to Eigen to do the product. It is not clear yet if the copy to Eigen is required if we are able to perform the fast product on a `CompressedRowSparseMatrix`. So, an implementation of the fast product of `CompressedRowSparseMatrix` may be introduced in the future. Otherwise, I'll remove the files.; - This work has been started by @Esther-R during her internship; - Contrary to the regular product, the product using the intersection can be parallelized for more speed up.; - More speed up in `MechanicalMatrixMapper` using multithreading can be considered. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2394:4018,perform,perform,4018,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2394,1,['perform'],['perform']
Performance,7nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Geometry.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/li,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:8585,Load,Loaded,8585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,8bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Algorithm.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.Intersection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Detection.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Mapper.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/l,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:8717,Load,Loaded,8717,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"99% of the modules/plugins implements getModuleComponentList() with; ```; const char* getModuleComponentList(); {; /// string containing the names of the classes provided by the plugin; static std::string classes = core::ObjectFactory::getInstance()->listClassesFromTarget(MODULE_NAME);; return classes.c_str();; }; ```; And the rest either omitted to implement it, or just forgot to update the list. (e.g MultiThreading). IMO getModuleComponentList() does not have really a meaning anymore and one should just use `ObjectFactory::listClassesFromTarget()` directly.; AFAIK, the only piece of code in the SOFA codebase using this entrypoint is Gui.Qt widget, displaying the component list for each loaded plugin. This PR:; - removes all the entrypoints from Sofa.Component.* (+MultiThreading); - deprecates getModuleComponentList() calls; - Sofa.Gui.Qt: calls directly listClassesFromTarget(), but still tests if getModuleComponentList() needs to be called; - warns at runtime if one plugin do implement getModuleComponentList(); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4795:697,load,loaded,697,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4795,1,['load'],['loaded']
Performance,9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Projective.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.AnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.MechanicalLoad.so; [INFO] [PluginManager] Loaded plugin: /nix/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:6557,Load,Loaded,6557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/so,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:5751,Load,Loaded,5751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,": D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWith",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6905,Load,Loaded,6905,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,:/Users/hemingshan/Code/sofa/build/collections:/Users/hemingshan/Code/sofa/build/lib; [INFO] [runSofa] DataRepository paths = /Users/hemingshan/Code/sofa/src/share:/Users/hemingshan/Code/sofa/src/examples:/Users/hemingshan/Code/sofa/build:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] GuiDataRepository paths = /Users/hemingshan/Code/sofa/src/applications/projects/runSofa/resources:/Users/hemingshan/Code/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topolo,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:1554,Load,Loaded,1554,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,:/github-clones/sofa/src/examples;D:/github-clones/sofa/build;D:/github-clones/sofa/build; [INFO] [runSofa] GuiDataRepository paths = D:/github-clones/sofa/src/applications/projects/runSofa/resources;D:/github-clones/sofa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/b,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:5920,Load,Loaded,5920,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,"::PointSetTopologyContainer::setPointTopologyToDirty(); sofa::component::topology::container::dynamic::PointSetTopologyModifier::removePointsWarning(sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> >&, ; bool); sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::removeTetrahedraProcess(sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned; int> > const&, bool); sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::removeTetrahedra(sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> >; const&, bool); sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromTriangleModel(sofa::component::collision::geometry::TriangleCollisionModel<sofa::defaulttype::StdVe; ctorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> > const&) const; sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromCollisionModel(sofa::core::CollisionModel*, unsigned int const&) const; sofa::gui::component::performer::RemovePrimitivePerformer<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::execute(); sofa::gui::component::performer::BaseMouseInteractor::updatePosition(double); sofa::simulation::BehaviorUpdatePositionVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::gr; aph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std; ::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::executeVisito",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3202:6785,perform,performer,6785,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3202,1,['perform'],['performer']
Performance,":CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, std::allocator<void>, (__gnu_cxx::_Lock_policy)2>::_M_dispose (this=0x5555567f2300); at /usr/include/c++/13/bits/shared_ptr_base.h:613; #20 0x00005555555c9ad5 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x5555567f2300); at /usr/include/c++/13/bits/shared_ptr_base.h:346; #21 0x00005555555cb9f5 in std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x5555566c0330, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/shared_ptr_base.h:1071; #22 0x00007fffeaeb0346 in std::__shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x5555566c0328, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/shared_ptr_base.h:1524; #23 0x00007fffeaeb03ce in std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> >::~shared_ptr (this=0x5555566c0328, __in_chrg=<optimized out>); at /usr/include/c++/13/bits/shared_ptr.h:175; #24 0x00007fffeaf9492a in std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > >::~pair (; this=0x5555566c0320, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/stl_pair.h:187; #25 0x00007fffeaf63fa2 in std::__new_allocator<std::_Rb_tree_node<std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > > > >::destroy<std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > > > (; __p=0x5555566c0320, this=0x7fffffffabc8) at /usr/include/c++/13/bits/new_allocator.h:194; ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:17045,optimiz,optimized,17045,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['optimiz'],['optimized']
Performance,":VecType)0, (sofa::core::VecAccess)1>, sofa::core::TMultiVecId<(sofa::core::VecType)2, (sofa::core::VecAccess)1>, sofa::simulation::common::MechanicalOperations*); sofa::component::animationloop::FreeMotionAnimationLoop::step(sofa::core::ExecParams const*, double); sofa::simulation::node::animate(sofa::simulation::Node*, double); sofa::gui::batch::BatchGUI::mainLoop(); sofa::gui::common::GUIManager::MainLoop(boost::intrusive_ptr<sofa::simulation::Node>, char const*); __libc_start_main; ```. and with GDB:. ```; double free or corruption (out). Program received signal SIGABRT, Aborted.; __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44; Download failed: Invalid argument. Continuing without source file ./nptl/./nptl/pthread_kill.c. ; 44	./nptl/pthread_kill.c: No such file or directory.; (gdb) where; #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44; #1 __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78; #2 __GI___pthread_kill (threadid=<optimized out>, signo=signo@entry=6) at ./nptl/pthread_kill.c:89; #3 0x00007ffff5242866 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #4 0x00007ffff52268b7 in __GI_abort () at ./stdlib/abort.c:79; #5 0x00007ffff5227750 in __libc_message (fmt=fmt@entry=0x7ffff53c3b34 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:150; #6 0x00007ffff52a3c67 in malloc_printerr (str=str@entry=0x7ffff53c6a20 ""double free or corruption (out)""); at ./malloc/malloc.c:5765; #7 0x00007ffff52a5c50 in _int_free_merge_chunk (av=0x7ffff53feca0 <main_arena>, p=0x5555567f2740, size=2619930050800); at ./malloc/malloc.c:4669; #8 0x00007ffff52a87f3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391; #9 0x00007ffff79b94db in std::__new_allocator<int>::deallocate (this=0x5555567f23c8, __p=0x5555567f2750, __n=57); at /usr/include/c++/13/bits/new_allocator.h:168; #10 0x00007ffff79ae098 in std::allocator",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:12834,optimiz,optimized,12834,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['optimiz'],['optimized']
Performance,":deallocate (__n=57, __p=0x5555567f2750, ; __a=...) at /usr/include/c++/13/bits/alloc_traits.h:516; #11 std::_Vector_base<int, std::allocator<int> >::_M_deallocate (this=0x5555567f23c8, __p=0x5555567f2750, __n=57); at /usr/include/c++/13/bits/stl_vector.h:387; #12 0x00007ffff79a8bde in std::_Vector_base<int, std::allocator<int> >::~_Vector_base (this=0x5555567f23c8, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/stl_vector.h:366; #13 0x00007ffff79a4b8b in std::vector<int, std::allocator<int> >::~vector (this=0x5555567f23c8, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/stl_vector.h:735; #14 0x00007ffff5caf956 in sofa::type::vector<int, sofa::type::CPUMemoryManager<int> >::~vector (this=0x5555567f23c8, ; __in_chrg=<optimized out>) at /home/alex/Documents/sofa/Sofa/framework/Type/src/sofa/type/vector_T.h:55; #15 0x00007ffff3b58ba2 in sofa::linearalgebra::CompressedRowSparseMatrixGeneric<double, sofa::linearalgebra::CRSMechanicalPolicy>::~CompressedRowSparseMatrixGeneric (this=0x5555567f2310, __in_chrg=<optimized out>); at /home/alex/Documents/sofa/Sofa/framework/LinearAlgebra/src/sofa/linearalgebra/CompressedRowSparseMatrixGeneric.h:246; #16 0x00007ffff3b58fff in sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>::~CompressedRowSparseMatrixMechanical (this=0x5555567f2310, __in_chrg=<optimized out>); at /home/alex/Documents/sofa/Sofa/framework/LinearAlgebra/src/sofa/linearalgebra/CompressedRowSparseMatrixMechanical.h:51; #17 0x00007fffeafdc335 in std::_Destroy<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > (__pointer=0x5555567f2310) at /usr/include/c++/13/bits/stl_construct.h:151; --Type <RET> for more, q to quit, c to continue without paging--; #18 0x00007fffeafc247e in std::allocator_traits<std::allocator<void> >::destroy<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > (_",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:14885,optimiz,optimized,14885,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['optimiz'],['optimized']
Performance,"; --- sys.path ---; ['', '/home/sergei/Source_code/Sofa_development/SofaPyhton3/build_release/lib/pyhton3/site-packages', '/usr/lib/python310.zip', '/usr/lib/python3.10', '/usr/lib/python3.10/lib-dynload', '/home/sergei/.local/lib/python3.10/site-packages', '/usr/lib/python3.10/site-packages']; #################. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [sergei@sergei-20hd0000fr sofa]$ /home/sergei/Source_code/Sofa_development/sofa/build_release/bin/runSofa -l /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/libSofaPython3.so /home/sergei/Optimus_test/test_scene.py ; [ERROR] [FileSystem::isDirectory()] /home/sergei/Source_code/Sofa_development/sofa/build_release/share/sofa/gui/runSofa: No such file or directory; [WARNING] [SofaEigen2Solver] SofaEigen2Solver is deprecated; Eigen classes are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = /home/sergei/Source_code/Sofa_development/Optimus/build_release:/home/sergei/Source_code/Sofa_development/SofaAuxiliaryComponents/build_release:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib; [INFO] [runSofa] DataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:7708,load,load,7708,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['load'],['load']
Performance,"; index 2f00fe62dc..782ce854ce 100644; --- a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp; +++ b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp; @@ -72,6 +72,7 @@ MeshLoader::MeshLoader() : BaseLoader(); , d_rotation(initData(&d_rotation, Vec3(), ""rotation"", ""Rotation of the DOFs"")); , d_scale(initData(&d_scale, Vec3(1.0, 1.0, 1.0), ""scale3d"", ""Scale of the DOFs in 3 dimensions"")); , d_transformation(initData(&d_transformation, type::Matrix4::s_identity, ""transformation"", ""4x4 Homogeneous matrix to transform the DOFs (when present replace any)"")); + , d_dataset1(initData(&d_dataset1, ""dataset1"", ""Data from dataset"")); , d_previousTransformation(type::Matrix4::s_identity ); {; addAlias(&d_tetrahedra, ""tetras"");; @@ -184,6 +185,8 @@ void MeshLoader::clearBuffers(); getWriteOnlyAccessor(d_pyramidsGroups).clear();; getWriteOnlyAccessor(d_polygonsGroups).clear();; ; + getWriteOnlyAccessor(d_dataset1).clear();; +; doClearBuffers();; }; ; diff --git a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h; index d972c27d75..5fc1d75345 100644; --- a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h; +++ b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h; @@ -183,6 +183,7 @@ public:; Data< Vec3 > d_scale; ///< Scale of the DOFs in 3 dimensions; Data< type::Matrix4 > d_transformation; ///< 4x4 Homogeneous matrix to transform the DOFs (when present replace any); ; + Data< type::vector< SReal > > d_dataset1; ///< mesh dataset; ; virtual void updateMesh();; virtual void updateElements();; diff --git a/SofaKernel/modules/SofaLoader/src/SofaLoader/MeshVTKLoader.cpp b/SofaKernel/modules/SofaLoader/src/SofaLoader/MeshVTKLoader.cpp; index fcf73fb5f2..241067ea0b 100644; --- a/SofaKernel/modules/SofaLoader/src/SofaLoader/MeshVTKLoader.cpp; +++ b/SofaKernel/modules/SofaLoader/src/SofaLoader/MeshVTKLoader.cpp; @@ -504,6 +504,27 @@ bool MeshVTKLoader::setInpu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:3613,load,loader,3613,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['load'],['loader']
Performance,"<!-- Needed to use components [ParallelBruteForceBroadPhase, ParallelBVHNarrowPhase, ]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [LCPConstraintSolver, FreeMotionAnimationLoop, UncoupledConstraintCorrection, ]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver, ]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader, ]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [TriangleCollisionModel, LineCollisionModel, PointCollisionModel, ]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, SpotLight, OglModel, ]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFEMForceField, ]--> ; ```. # After; ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene (if it is a .scn): ; <RequiredPlugin name='MultiThreading'/> <!-- Needed to use components [ParallelBVHNarrowPhase, ParallelBruteForceBroadPhase]--> ; <RequiredPlugin name='SofaConstraint'/> <!-- Needed to use components [FreeMotionAnimationLoop, LCPConstraintSolver, UncoupledConstraintCorrection]--> ; <RequiredPlugin name='SofaImplicitOdeSolver'/> <!-- Needed to use components [EulerImplicitSolver]--> ; <RequiredPlugin name='SofaLoader'/> <!-- Needed to use components [MeshObjLoader]--> ; <RequiredPlugin name='SofaMeshCollision'/> <!-- Needed to use components [LineCollisionModel, PointCollisionModel, TriangleCollisionModel]--> ; <RequiredPlugin name='SofaOpenglVisual'/> <!-- Needed to use components [LightManager, OglModel, SpotLight]--> ; <RequiredPlugin name='SofaSimpleFem'/> <!-- Needed to use components [HexahedronFE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2111:1553,load,loaded,1553,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2111,1,['load'],['loaded']
Performance,"<frozen importlib._bootstrap>(702): _load; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(171): load_source; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ RUN ] SofaPython3/Sofa.all_tests/0",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3471,load,loaded,3471,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['load'],['loaded']
Performance,"> . > I just had a look on the implementation of `FullVector`. I notice the following differences between `operator[](Index i)` and `element(Index i)`:; > ; > * `element(Index i)` is virtual; > ; > * `element(Index i)` returns necessarily a `SReal` independent from the type of `FullVector`. It may lead to a type conversion therefore an impact on the performances. But usually, all the components are compiled with `SReal`, so I am not sure there is a conversion here. So it should not affect the performances.; > ; > ; > I am confused here, because I cannot believe that the speedup you get is only because of the virtual function. I guess you can try again your benchmark, but instead of using `operator[](Index i)`, use `FullVector<Real>::element(Index i)`. Note that I force the `element` function to be the one in `FullVector<Real>`. with `FullVector<Real>::element(Index i)`:; ` 5000 iterations done in 59.448 s ( 84.1071 FPS)` more or less same as with the operator[] then",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236824001:352,perform,performances,352,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236824001,2,['perform'],['performances']
Performance,"> ; > ; > > EDIT: I ran the performance monitor of VS and indeed it takes a lot of time in the resize() function of MechanicalObject; > ; > Indeed, this looks like a nice bug 😎; > ; > However, I'm not sure this is impacting the _simulation_ time. The same multivectors are used (x_rest, x, v, etc.) and the newly (and very wrongly) created vectors are simply, well, created...; > ; > But we must definitely fix this bug 😁. Agreed for the simulation time itself, but the created vectors are not only created; in the resize function, it tried to resize ALL the vectors every time step, so after a thousand steps for example, it tried to resize like 2000 vectors... Interestingly, the useless vectors are all V_DERIV so something related to the velocities?; ![Capture_collis2](https://user-images.githubusercontent.com/11028016/118618533-03ca6180-b7c4-11eb-9332-0ce4c316fc23.PNG)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842970198:28,perform,performance,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842970198,1,['perform'],['performance']
Performance,"> ; > ; > I am curious to know more about those two functions. In appearance, they do nothing. Can you explain how they work?. (Assumptions) ; In my opinion, the init() was done to force the compiler to need the library at linktime, thus forcing it to load it at runtime, thus initializing some static stuff (you can see that in the init file of SofaHelper, with the messageDispatcher thingy).; For the most libs in SofaFramework, it should not be necessary as it will always been loaded as everybody needs those I suppose.; But as for the cleanup(), it ***seems*** (emphasis 🧐) it is related with the order of destructions of things. But I am not really sure.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1987#issuecomment-815582876:252,load,load,252,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1987#issuecomment-815582876,2,['load'],"['load', 'loaded']"
Performance,"> ; > ; > Why is this one breaking if by default SofaBase are ""auto loaded"" ?. Breaking because I changed some functions signatures (int to Size/Index); Could be breaking for people overriding them",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1676#issuecomment-749420946:68,load,loaded,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1676#issuecomment-749420946,1,['load'],['loaded']
Performance,"> > However, this PR is also to discuss the utility of this function. I did not found any usage of it. Should we keep it?; > ; > This function should be very useful in practice, especially for explicit time integrator. It allows one to solve `a = M^{-1} f` by simply computing `a[i] = f[i]/m[i]`. The fact that you didn't find any usage is quite surprising, and made me look around a little bit:; > ; > 1. The [EulerExplicitSolver](https://github.com/sofa-framework/sofa/blob/99b600aa2a002e9464b0d53d6eb959b5d0b0fcd0/SofaKernel/modules/SofaExplicitOdeSolver/src/SofaExplicitOdeSolver/EulerSolver.h#L35) has in fact a data argument `optimizedForDiagonalMatrix`, and therefore completely ignores `Mass::isDiagonal`.; > ; > 2. The [CentralDifferenceSolver](https://github.com/sofa-framework/sofa/blob/6b475afc63841f10e4990b56c7b837892fb735dd/modules/SofaGeneralExplicitOdeSolver/src/SofaGeneralExplicitOdeSolver/CentralDifferenceSolver.h#L36) simply **assumes** that the mass is diagonal. Hence using this component with non-diagonal mass will result in wrong simulations.; > ; > 3. Implicit solver could use the knowledge of a diagonal mass to efficiently compute `m M + b B + k K`, but they do not...; > ; > ; > This is an important topic that I think should be included into the current discussions to refactor the way SOFA construct its system matrices.; > ; > Also related: can we detect if a diagonal mass remains diagonal if it gets mass contribution via mappings? Does mapped mass even work in SOFA?; > ; > CC: @hugtalbot , @ChristianDuriez , @fjourdes. Thanks @jnbrunet for having looked on this issue. I rephrase your findings as a list of tasks to improve SOFA efficiency and accuracy:. - [ ] Remove EulerExplicitSolver::d_optimizedForDiagonalMatrix and replace it by fetching the result of Mass::isDiagonal; - [ ] CentralDifferenceSolver must be adapted to work with any type of mass matrix; - [ ] Implicit solvers must read the result of Mass::isDiagonal to speed up computations in case mas",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-799313001:632,optimiz,optimizedForDiagonalMatrix,632,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-799313001,1,['optimiz'],['optimizedForDiagonalMatrix']
Performance,"> @fredroy I worked on this problem too, but my approach was to refactor texture references by using texture objects. It is not trivial. It's not working yet. I'll try again in the week, otherwise I suggest to simply remove the usage of textures. I'd use simply raw GPU pointers. This alternative is easier than the texture objects approach (but it may cost a bit of performances (perhaps negligible)). My point is, don't merge this PR right now, unless is super urgent. Of course, it would be much better to effectively fix the problem than to ignore it. This PR was just providing a quick but brainless solution for a (hopefully) temporary fix.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427168232:367,perform,performances,367,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427168232,1,['perform'],['performances']
Performance,"> @fredroy thanks to Jason Turner ;). It was more ""Thanks to the Performance Profiler ""😅",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3135#issuecomment-1187285489:65,Perform,Performance,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3135#issuecomment-1187285489,1,['Perform'],['Performance']
Performance,"> @fspadoni Is the task scheduler designed to have local schedulers? For example, can I have a task scheduler specific to a component? Is it restricted to have only one instance per derived type?. There is only one global instance of the task scheduler class and this is shared between all components. ; Any components can create and submit tasks to task scheduler. ; The tasks are queued and process by the worker threads.; The task scheduler manages the worker threads (only one per cpu core by default)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1927#issuecomment-801783837:382,queue,queued,382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1927#issuecomment-801783837,1,['queue'],['queued']
Performance,"> And why did it work before and not now?. Because with the ""binary"" dependencies, the registration was made implicitly when the system are loading the dll, unbeknownst to the pluginmanager . ; So for example when one is importing explicitly the plugin `Sofa.Component.Visual`, the OS is also loading the plugin (dyn.library) `Sofa.Component.Topology.Container.Grid` implicitly, and this triggered the registration of all `Grid` components because the registration is (was) automatic. But from the PluginManager point of view `Sofa.Component.Topology.Container.Grid` is/was not loaded.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5012#issuecomment-2375432898:140,load,loading,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5012#issuecomment-2375432898,3,['load'],"['loaded', 'loading']"
Performance,"> At first, I thought the compiler (msvc in my case) would be smart enough to do it by itself while optimizing, but apparently not. Maybe because `phi` isn't const",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3559#issuecomment-1369615492:100,optimiz,optimizing,100,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3559#issuecomment-1369615492,1,['optimiz'],['optimizing']
Performance,"> Could you verify that the change didn't not decrease the performances (maybe we should have for each .h tp .cpp of core class a small benchmark to asses the performacne difference). In this case, this is a just the map between vecid and string which is normally not really used in performance context (or hopefully not 😅) like in the GUI, but I can do a bench if it is really needed. > ; > On my side I'm still very surprised that all the move we are doing in removing code from .h to put them into dedicated translation unit has so limited impact on performances. To me either the compiler's are very good nowaydays (thanks to GO/IPO/LTO) or a lot of code was not optimized because of our code architecture (eg: no final keyworkd in overriden method preventing optimization). At least I can see quite a nice difference LTO/noLTO but I only really do my perf checks on MSVC.; I dont know about the current state of LTO for gcc/clang (ldd, gold, etc)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1286301742:59,perform,performances,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3401#issuecomment-1286301742,6,"['optimiz', 'perform']","['optimization', 'optimized', 'performacne', 'performance', 'performances']"
Performance,"> EDIT: I ran the performance monitor of VS and indeed it takes a lot of time in the resize() function of MechanicalObject. Indeed, this looks like a nice bug :sunglasses: . However, I'm not sure this is impacting the _simulation_ time. The same multivectors are used (x_rest, x, v, etc.) and the newly (and very wrongly) created vectors are simply, well, created... But we must definitely fix this bug :grin:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842965195:18,perform,performance,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842965195,1,['perform'],['performance']
Performance,"> Further to @fredroy 's request I added changes in CompressedRowSparseMatrixMechanical Could you check what I did @alxbilger , do you think this could affect performances?. Casting may introduce a performance cost. However, here the cast is on a constant, which means the compiler is probably able to cast it at compile-time. But the only way to be sure is to read the assembly code...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5054#issuecomment-2422589541:159,perform,performances,159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5054#issuecomment-2422589541,2,['perform'],"['performance', 'performances']"
Performance,"> Hey @alxbilger , just a small question, did you try it with large K and J? Does it makes you RAM sweat with all those triplets stored ?; > . Actually, I am not even sure that the performances are better in any case, specially for large K or J. I admit I did not benchmark for multiple mesh size. I'll put this PR back to WIP and consider your remark on the RAM (but I am confident it's OK). I'll need to revert this PR from #2411.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2399#issuecomment-948332404:181,perform,performances,181,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2399#issuecomment-948332404,1,['perform'],['performances']
Performance,"> Hi @sergeiNikolaev; > Sorry for the latency on this topic, tests can be made so that we create a simple scene in c++ imposing rest shape and an imposed displacement. Thus, the resulting force should be analytically defined.; > By the way do you have any latex file for the polynomial equations?. Thank you for your answer @hugtalbot.; Regarding your question, I do not, sorry.; I wrote these equations since for me it is easier to process the stuff like this with a ""writing memory"". And then I decided that it will be enough just to scan them and send to you.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-643263065:38,latency,latency,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-643263065,1,['latency'],['latency']
Performance,"> How bad is it to drop the support of DiagonalMass for rigids? Should we keep it anyway? Can MeshMatrixMass support rigids?. @alxbilger I actually hardy can reply .. I need Christian for this, I will ask tomorrow further to the team meeting, would you join?. > We should also have a look on performances. Already done by @fredroy, very very very close! Here: https://github.com/sofa-framework/sofa/issues/2452#issuecomment-982735834; But I do not know about the mesh size used for the test.. maybe to re-investigate",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3912#issuecomment-1576777259:292,perform,performances,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912#issuecomment-1576777259,1,['perform'],['performances']
Performance,"> However, this PR is also to discuss the utility of this function. I did not found any usage of it. Should we keep it?. This function should be very useful in practice, especially for explicit time integrator. It allows one to solve `a = M^{-1} f` by simply computing `a[i] = f[i]/m[i]`. The fact that you didn't find any usage is quite surprising, and made me look around a little bit:. 1. The [EulerExplicitSolver](https://github.com/sofa-framework/sofa/blob/99b600aa2a002e9464b0d53d6eb959b5d0b0fcd0/SofaKernel/modules/SofaExplicitOdeSolver/src/SofaExplicitOdeSolver/EulerSolver.h#L35) has in fact a data argument `optimizedForDiagonalMatrix`, and therefore completely ignores `Mass::isDiagonal`.; 2. The [CentralDifferenceSolver](https://github.com/sofa-framework/sofa/blob/6b475afc63841f10e4990b56c7b837892fb735dd/modules/SofaGeneralExplicitOdeSolver/src/SofaGeneralExplicitOdeSolver/CentralDifferenceSolver.h#L36) simply **assumes** that the mass is diagonal. Hence using this component with non-diagonal mass will result in wrong simulations.; 3. Implicit solver could use the knowledge of a diagonal mass to efficiently compute `m M + b B + k K`, but they do not... This is an important topic that I think should be included into the current discussions to refactor the way SOFA construct its system matrices. Also related: can we detect if a diagonal mass remains diagonal if it gets mass contribution via mappings? Does mapped mass even work in SOFA?. CC: @hugtalbot , @ChristianDuriez , @fjourdes",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-797326125:618,optimiz,optimizedForDiagonalMatrix,618,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1903#issuecomment-797326125,1,['optimiz'],['optimizedForDiagonalMatrix']
Performance,"> I did some benches on TorusFall.scn🤐 master `5000 iterations done in 41.7616 s ( 119.727 FPS)`; > ; > pr `5000 iterations done in 36.09 s ( 138.543 FPS)`. Thank you for the benchmark. In the PR, did you activated the parallel computation? I would like to know that there is no performance regression in the single-threaded implementation.; I did not parallelize the third loop: I would like to test that to speed up more.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1632077224:279,perform,performance,279,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1632077224,1,['perform'],['performance']
Performance,"> I took the liberty to retrieve the ArticulatedControllers (which were deprecated/removed some years ago) and put it back into it. Especially because I retrieved the ""man-walking"" example which is quite cool in my opinion. But the code was created by DigitalTrainers, I dont know if it could be bothersome license-wise. Are you sure ? If it's the case it's only the controller... because the code of the articulatedSystemMapping was done in the SHACRA team...; In any case we had a contract at that time with Digital Trainers on suture that said that the SOFA code developed in the project was open-source and that Inria keeps the property. . > ; > * ArticulatedSystem as an external repository which would be referenced in _applications/plugin_ (react with 🚀 ). I vote for a separate plugin to advertise it, as suggested by Eulalie. One of the thing that should be added to the plugin is the support of Unified Robot Description Format (URDF). ; We should add a loader for it.; This is the new standard format in the community (and compatible with ROS). Thanks !. Christian",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2684#issuecomment-1056530424:964,load,loader,964,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2684#issuecomment-1056530424,1,['load'],['loader']
Performance,"> I tried with the imgui GUI in a clean build. I confirm that `runSofa -l SofaImGui -g imgui` creates a file _lastUsedGUI.ini_, with `imgui` inside. Then, if I run `runSofa -l SofaImGui`, as expected, it loads the last used gui (found in the file). However, it does not work with `runSofa` (without the `-l SofaImGui`). Normal, since the plugin is not loaded. It would be the same situation with a double-click on the executable. But do you think this is a bad or good behavior?; In my opinion it's good. The only issue is with batch GUI, hence @hugtalbot's idea to never put ""batch"" in lastUsedGUI.ini but keep the mechanism for all other GUIs.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2979#issuecomment-1142177121:204,load,loads,204,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2979#issuecomment-1142177121,2,['load'],"['loaded', 'loads']"
Performance,"> I was wondering if there is a way to catch the missing symbols at compile-time and I found this: https://cmake.org/cmake/help/latest/module/CheckCXXSymbolExists.html#module:CheckCXXSymbolExists. It's configuration time but it could be helpful. I tried to play with it but I was not able to make it work. I added the check in the `sofa_create_package_with_targets` macro. It could be interesting to enforce that the necessary symbols are defined at configure-time yes 🤔 . EDIT: I did some tests and it is quite bothersome to set up, (the file itself needs to be compilable, the symbol need to be defined and not only declared, adding variable in cache, etc) And I think if we do that for all potential loadable libraries, it will slow down considerably the cmake configure process.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4466#issuecomment-1915860120:647,cache,cache,647,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466#issuecomment-1915860120,2,"['cache', 'load']","['cache', 'loadable']"
Performance,"> If I understood correctly, the group manager would help the performances compared to a single system. Here, we compare to two systems (one per cube). I'll add a third scene in this benchmark with a single system, to be more rigorous. I expect the same result from ""single system"" and ""two systems + group manager"". I expect better performances only in case the two cubes are not in contact, am I right?. Well, if I understood correctly, the group manager is doing just that: take two objects usually solved with their own solver, and merge them into one. So in this case, your third scene should produce the same result as the one with a group manager. Here is a screen shot of the advanced timer monitor for your two scenes:; ![image](https://user-images.githubusercontent.com/6951981/118618298-c239b680-b7c3-11eb-9f4d-aeaa23aaa916.png). See the mechanical nodes? In the scene with the group manager, the two mechanical nodes have been merged into one. > Can we say that the best practice would be to start the design of a simulation scene with a single system, without group manager? And if performances are poor, it can be improved with a group manager, knowing its drawbacks (such as hiding a selection of solver properties to the user). Again, one big system should be the same as what the group manager those. However, I do think it should be best practice to manually do it instead of relying on the group manager to do it...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842971418:62,perform,performances,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842971418,3,['perform'],['performances']
Performance,"> In that case, why bother with manual init/cleanup? Where is it done? . This is precisely why I asked for feedback before merging, because I have no idea. I don't quite know why it was not automatic in the first place since this is all c++98. > If manual init/cleanup are removed, s_initialized/s_cleanedUp become obsolete. agreed, but until we know exactly what's going on we don't want to get rid of it. > What does guarantee that libs are loaded in the right order? . nothing, but libraries could probably load their dependencies upon `init` (+ simple cycle detection strategy) to have it all automatic?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168#issuecomment-279743777:443,load,loaded,443,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168#issuecomment-279743777,2,['load'],"['load', 'loaded']"
Performance,"> It's really not a big feature. Granted, it's not *that* big, but still:; - you need to properly initialize/finalize sofa and core modules (see Main.cpp in the runSofa application); - you need to handle the case where the loaded scene already has python scripts, and let the `PythonEnvironment` know the interpreter is being run from the outside when initializing (and maybe deal with all the `sys.path` / `__file__` abuses down there); - probably have a good fight with the GIL down the road; - how should this feature integrate with existing python scenes? Should it be possible to load scenes from within python scenes? (I would probably put your feature in a module separate from `Sofa` for this reason); - what happens when `Sofa.cleanup()` gets called but python objects still hold c++ objects that are to be destructed when python exits ?. But I am really all for it, so good luck with that :-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339347741:223,load,loaded,223,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492#issuecomment-339347741,2,['load'],"['load', 'loaded']"
Performance,> Just to understand @alxbilger the objects from plugins were not properly loaded ? How could it have worked before your PR ?. Does people really load plugins using the Qt GUI (with the PluginManager widget) at run-time ? I doubt a bit... 🧐,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4872#issuecomment-2264259624:75,load,loaded,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4872#issuecomment-2264259624,2,['load'],"['load', 'loaded']"
Performance,"> Nobody reacted to my screenshot, but I suppose that a part of the slowdown comes from the fact that the mechanical object is resizing more and more vectors.... raised_eyebrow; > ; > EDIT: I ran the performance monitor of VS and indeed it takes a lot of time in the resize() function of MechanicalObject. Wow I did not notice the vector tabs in your screenshot! I'll have a look also.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842966190:200,perform,performance,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842966190,1,['perform'],['performance']
Performance,"> Sorry, my question was more, do you know why the index 5 was inserted multiple time?. Ah, yes, because of:; https://github.com/sofa-framework/sofa/blob/master/applications/plugins/SofaCarving/CarvingManager.cpp#L183-L194. We could change `elemsToRemove` from `vector` to `set` at the cost of a bit performance.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1244059611:300,perform,performance,300,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239#issuecomment-1244059611,1,['perform'],['performance']
Performance,"> TODO: decide if autoloading should off by default (and force the users to explicitly load their own necessary libs in their scenes). Even if autoloading is disabled, the Qt GUI loads its own list of plugins (the one saved by the plugin manager GUI).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3103#issuecomment-1177256086:87,load,load,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3103#issuecomment-1177256086,2,['load'],"['load', 'loads']"
Performance,"> Thanks @alxbilger !; > ; > Why not parallelize the matrix assembly (addKToMatrix)? Especially for a hexahedral forcefield since it can be quite expensive. It would than be very interesting to compare the multithreaded CG solver (thanks to your PR) performence against a multithreaded direct solver such as Pardiso LLT solver. I did not measure the performances, but I thought `addKToMatrix` was quick. Most of the time being taken by the linear solver itself. But I may be wrong... I'll have a look.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2177#issuecomment-868252454:250,perform,performence,250,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177#issuecomment-868252454,2,['perform'],"['performances', 'performence']"
Performance,"> Thanks @sergeiNikolaev for this contribution and making this nice effort of bringing back this work.; > ; > * Is any test available with these new classes?; > * is there any example scene?. @hugtalbot; Here is the test to verify polynomial springs (Python2 scripts). [polynomial_spring_test.zip](https://github.com/sofa-framework/sofa/files/4540453/polynomial_spring_test.zip). The test ""spring_verification.py"" depicts two points (p1, p2) connected with a spring. One point (p1) is fixed, another (p2) is moving in space. The external impact (f_external) to the system could be applied using LinearForceField (you need to make target_force as a Data<> object in order to collect its information, but I have this modification) or ControlPoint (third point (p_control), attached with a linear rest shape spring). In case of a second option, the external force is computed as (p_control - p2)*k_rest_shape_spring.; During the simulation process, the position ""p2"" and forces ""f2"" for point p2, and also the external force or the position of the control point are saved to data files.; The script ""spring_verification_draw_result.py"" loads all data. The strain for spring is computed as ; (norm(p2-p1) - l0) / l0 for PolynomialSpring or as norm(p2-p1) / l0 for RestShapePolynomialSpring.; I use static solver with many iterations to make spring force equal to external force, but I guess it is also possible to compute the spring force as difference f2 - f_external.; Based on this data, a force-strain relation is plotted and compared with polynomial values.; And this is the end of the test. NOTE: Please, keep in mind, that configuration parameters have to be the same for both scripts, in order to get a valid result.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-620055719:1133,load,loads,1133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-620055719,1,['load'],['loads']
Performance,"> That's a very popular library. I agree with this move.; > ; 17.5k ⭐ 😗 (one day, SOFA, one day...). but yes glfw+imgui+stb is a well-known triplet . > I don't understand in your PR how it replaces the need for CImgPlugin. Probably, because I don't know how images loading is managed. Image loading is managed through a factory (""png"" -> use this, ""bmp"" -> use that, etc) and this factory is populated at run-time. ; Before this PR, it was done by CImgPlugin (cimg was used because it can manage several file formats). But it was decided to be optional for some reason, so it was a plugin (and not a ""hard"" component in the framework).; Now that stb does not depend on any external library, no hassle with cmake/deps/dlls so thats why I put it in SofaHelper.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2551#issuecomment-997816638:265,load,loading,265,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2551#issuecomment-997816638,2,['load'],['loading']
Performance,"> You are clearly in a dev state, each time you push a commit it triggers a new build on the CI. I'll put the flag wip again until you tell me that you've finished your fixes to avoid loading the CI. All changes was minor and i think I'm not in dev state now. sorry for loading on CI",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2084605955:184,load,loading,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2084605955,2,['load'],['loading']
Performance,"> https://github.com/sofa-framework/sofa/blob/b66d9ad54731b35891645b131efa04eecada3467/SofaKernel/modules/SofaBaseMechanics/SofaBaseMechanics_test/CMakeLists.txt#L15-L19; > ; > ; > ; > @fredroy @guparan this shoud be removed right?. Yes, this test project cannot be loaded anymore by the way.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2955#issuecomment-1128321623:266,load,loaded,266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2955#issuecomment-1128321623,1,['load'],['loaded']
Performance,"> move generic addUpdateCallback inside MeshLoader parent class.; > ; > * position; > ; > * normals; > ; > * edges; > ; > * triangles; > ; > * quads; > etc.. see Data declared in MeshLoader. Hi @epernod ! After reviewing my code a bit more, I now remember why MeshLoader doesn't contain a ""generic"" update callback: there's no ""load"" method in MeshLoader, only a set of datafield definitions, then used by other components subclassing it. thus a callback function would not be able to perform any loading operation on input changes. I agree that it is sub-optimal to have to add a specific callback for each meshLoaders (although they have custom behaviors anyway) but as-is I don't see how to better the current system. Ideally, we could imagine having a pure virtual ""load"" method overridden in the subclasses, which would then be callable from a callbackEngine, but that would probably go out of the scope of this PR.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1408#issuecomment-643164248:328,load,load,328,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1408#issuecomment-643164248,4,"['load', 'perform']","['load', 'loading', 'perform']"
Performance,">. ```. **Env vars**. ```bash; echo ""SOFA_ROOT = C:\Users\jducr\Documents\Librairies\sofa\build\bin\Release""; echo ""PYTHONPATH = C:\Users\jducr\Documents\Librairies\Python\Python37""; echo ""python3 -V = Python 3.7.7""; ```. ```txt; The scene is working fine, just the normals are exported wrong. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use w",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:4256,load,load,4256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,1,['load'],['load']
Performance,">; [WARNING] [ObjectFactory] Class already registered: EvalSurfaceDistance<Vec3d>; [WARNING] [ObjectFactory] Default template for class ExtraMonitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ExtraMonitor<Vec6d>; [WARNING] [ObjectFactory] Default template for class Monitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: Monitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec6d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [WARNING] [ObjectFactory] Class already registered: TopologicalChangeProcessor; [WARNING] [ObjectFactory] Class already registered: TopologyChecker; [WARNING] [ObjectFactory] Default template for class TopologyBoundingTrasher already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_c",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:31908,Load,Loaded,31908,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"@ -72,6 +72,7 @@ MeshLoader::MeshLoader() : BaseLoader(); , d_rotation(initData(&d_rotation, Vec3(), ""rotation"", ""Rotation of the DOFs"")); , d_scale(initData(&d_scale, Vec3(1.0, 1.0, 1.0), ""scale3d"", ""Scale of the DOFs in 3 dimensions"")); , d_transformation(initData(&d_transformation, type::Matrix4::s_identity, ""transformation"", ""4x4 Homogeneous matrix to transform the DOFs (when present replace any)"")); + , d_dataset1(initData(&d_dataset1, ""dataset1"", ""Data from dataset"")); , d_previousTransformation(type::Matrix4::s_identity ); {; addAlias(&d_tetrahedra, ""tetras"");; @@ -184,6 +185,8 @@ void MeshLoader::clearBuffers(); getWriteOnlyAccessor(d_pyramidsGroups).clear();; getWriteOnlyAccessor(d_polygonsGroups).clear();; ; + getWriteOnlyAccessor(d_dataset1).clear();; +; doClearBuffers();; }; ; diff --git a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h; index d972c27d75..5fc1d75345 100644; --- a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h; +++ b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h; @@ -183,6 +183,7 @@ public:; Data< Vec3 > d_scale; ///< Scale of the DOFs in 3 dimensions; Data< type::Matrix4 > d_transformation; ///< 4x4 Homogeneous matrix to transform the DOFs (when present replace any); ; + Data< type::vector< SReal > > d_dataset1; ///< mesh dataset; ; virtual void updateMesh();; virtual void updateElements();; diff --git a/SofaKernel/modules/SofaLoader/src/SofaLoader/MeshVTKLoader.cpp b/SofaKernel/modules/SofaLoader/src/SofaLoader/MeshVTKLoader.cpp; index fcf73fb5f2..241067ea0b 100644; --- a/SofaKernel/modules/SofaLoader/src/SofaLoader/MeshVTKLoader.cpp; +++ b/SofaKernel/modules/SofaLoader/src/SofaLoader/MeshVTKLoader.cpp; @@ -504,6 +504,27 @@ bool MeshVTKLoader::setInputsMesh(); }; ; }; +; + // hack to fill dataset1; + static bool notread = true;; + if (notread && reader->inputCellDataVector.size() > 0) {; + auto dataset1 = getWriteOnlyAccessor(d_da",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:3783,load,loader,3783,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['load'],['loader']
Performance,"@ErwanDouaille , It's not exactly what I meant:. I would like to keep Sofa's GUI as is (not batch mode or anything like that.; What I would like to be able to do though, is grabbing only the scene of sofa.; An example might be more explicit: This picture is a screenshot of a Sofa scene where my component grabs the OpenGL viewport with glReadPixels() and then displays it back in Sofa's scene.; If everything would work as I want it to, this scene shouldn't do anything (the grabbed image would be the displayed image, so I would constantly have the classic black background with the SOFA logo. Instead though, I'm getting the whole UI on the left, the menu on top and runSofa's counter bar at the bottom.; ![screengrabber](https://user-images.githubusercontent.com/13734391/36718977-fcf8a99e-1ba3-11e8-8b62-ec2f9c9dc431.png). (In addition the framebuffer is flipped on the X axis but that's just a bug in my code... =); The purpose of this is to perform image processing directly on the scene that's generated in Sofa. In the case of the new GUI, you could imagine a scene that has multiple cameras, displaying in multiple widgets, and be interested in performing some post processing stages on these generated frames, so being able to retrive the framebuffer coming from those widgets could be useful.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/600#issuecomment-368793399:948,perform,perform,948,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/600#issuecomment-368793399,2,['perform'],"['perform', 'performing']"
Performance,"@EulalieCoevoet when you say it fix MeshGmshLoader, you mean only the ```getWriteOnlyAccessor``` or was this loader also loading too much point at start?; I'm using this loader a lot to work on topology and I didn't notice that problem.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1554#issuecomment-715222971:109,load,loader,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1554#issuecomment-715222971,3,['load'],"['loader', 'loading']"
Performance,"@bakpaul ; Can you tell me that what did you do to cause crash?; I can add component to scene and remove and apply link with save and load; I have only one crash in ""FixedConstraint"" component that I fixed it",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2099855195:134,load,load,134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2099855195,1,['load'],['load']
Performance,"@bakpaul I remember that I once tried to use std::fixed_array to implement sofa::type::Vec. If I remember correctly from that time, it was several years ago, it was easy to make the change but there was a performance drop. I have no idea if these two observations stills old nowaydays.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4263#issuecomment-1792125465:205,perform,performance,205,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4263#issuecomment-1792125465,1,['perform'],['performance']
Performance,"@bakpaul thanks for the benchmark. Yes, I would like your scene to investigate both the behavior and the performances (I am a bit disappointed so far).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1633694721:105,perform,performances,105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3986#issuecomment-1633694721,1,['perform'],['performances']
Performance,"@damienmarchal , discussions during the SOFA-dev meeting lead to a question over the developed design and your opinion is needed. . The problem was that some scenes tests where crashing at exit. This is due to the SofaPython3 cache (`s_objectcache` there https://github.com/sofa-framework/SofaPython3/blob/1b5d271aa21df06c4c5ab75599e364adb0c1e9be/Plugin/src/SofaPython3/DataHelper.cpp#L252C1-L252C73) . The problem was that this is a static object containing python objects and is thus cleaned at the very end of the program exit, after the python interpreter, which is not authorized. . To fix it, following [pybind11 suggestions](https://pybind11.readthedocs.io/en/stable/advanced/misc.html) I've added a member to the module Sofa.Core that insured that the cleanup is called while the interpreter is still alive (see the PR https://github.com/sofa-framework/SofaPython3/pull/425). But is was not enough because the interpreter is not cleaned correctly either : the static method ""Release"" of SofaPython3, in charge of cleaning up python and deleting the interpreter was never called when launching scene in runSofa. . This lead to the need of cleaning up *explicitly* the plugin before exiting the main function. This design was not liked by every dev, some wanting a Raii-like cleanup, in the destructor of some member, which is in my mind not possible because the interpreter instance is static in the SofaPython3 plugin and thus we have no guaranty that it would not be deleted before any other static member.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2233357216:226,cache,cache,226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828#issuecomment-2233357216,1,['cache'],['cache']
Performance,"@damienmarchal ; source code of base class for loader sounds right. Working on it :+1: . btw, i wondered why not use `if` and `cout()` than `msg_error()` and `msg_error_when()`. then came across #190 . It was very impressive. :+1:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/639#issuecomment-381933666:47,load,loader,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/639#issuecomment-381933666,1,['load'],['loader']
Performance,"@damienmarchal I added a `UnableToOpenFile()` function and modified ""MeshTrian.cpp"" accordingly, for now. Could you check if I am in right direction? If I am, I would follow up with changes in other loader and components. **Caution**: I couldn't test if it actually works! Because, a function `findfile(filename)` exists to check if file exists. So, to make `fopen()` purposely fail, even after supplying correct filename, I tried changing permissions with `chmod uga-r MeshTrian.cpp`, but it didn't report any error even with sofa's official master version. I tried couple other ways to purposely fail `fopen()` but they didn't work. Anyway, since the code looked fine, and to receive feedback, I will make a PR shortly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/197#issuecomment-381862958:199,load,loader,199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/197#issuecomment-381862958,1,['load'],['loader']
Performance,"@damienmarchal I think it really depends on how many of those libraries (code without components to register to the factory, or external modules to load) we expect to see in the future.; Since it's a one-time loading thing, It doesn't seem very costly to load and call the plugin interface in this case. but if we want to democratize this kind of modules, it might be worth modifying the API.; Also, even for a library, a getModuleDescription / getModuleName / license has some value",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/735#issuecomment-418057064:148,load,load,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/735#issuecomment-418057064,3,['load'],"['load', 'loading']"
Performance,"@epernod yes, these functions are the one used to queue in the object's message log all the msg_info/warnig/error/deprecation. ; basically this means that when an object receive a new message increment the component_state counter so we can detect ""something happened"". . On day we may wonder if, for msg_error() the component_state shouldn't be flipped to ""Invalid"", but for the moment the state counter is just ""incremented"" but not changed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2397#issuecomment-943187451:50,queue,queue,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2397#issuecomment-943187451,1,['queue'],['queue']
Performance,"@francoisfaure ; > E.g. Mat<3,3,SReal>. This just shifts the same issue to chunk types, then :-) . I probably misunderstood your proposal: you mentioned having the sparse matrix type passed as a template parameter for efficiency reasons. I was simply pointing out that this template type cannot be known outside of the component, and so cannot appear in the `back_insert_iterator` type which is part of the hypothetical API I hinted to. Maybe you had this in mind from the start and I did not get it. @fjourdes Maybe it would be preferable not to *return* a `std::vector`, but instead to push to an existing one like so:. ```c++; class BaseForceField; {; public: ; virtual void getMatrixChunks(std::vector<MatrixChunkType>& chunks) const = 0; ; };; ```. This way you make no assumption as to whom should manage the memory, and leave the opportunity to optimize memory allocations. . I assume the `MatrixChunkType` holds the type index, so you can `std::visit` it and dispatch using its actual type? Having a type index per chunk means having one dispatch per chunk, and I am afraid this would somewhat bring us back to the ""one virtual call per element"" issue :-/ But maybe the compiler would be clever enough to optimize this? . More problematic, each chunk would have the size of the largest element in the tagged union, unless we use an extra indirection. . I was more thinking of having one `std::vector` per chunk type in the chunk container like so: . ```c++. struct chunk_container {; // add more as needed; using chunk_vector = std::variant< std::vector< chunk<1, 1> >, ; std::vector< chunk<2, 2,> > >;; ; chunk_vector storage[2]; // size can be inferred automatically; ; template<int I, int J>; void push(chunk<I, J> c) {; static constexpr int index = chunk_index<I, J>(); // correct index in chunk_storage; std::get< std::vector<I, J> >(storage[index]).push_back(c);; }; };",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292914877:852,optimiz,optimize,852,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292914877,2,['optimiz'],['optimize']
Performance,"@fredroy I worked on this problem too, but my approach was to refactor texture references by using texture objects. It is not trivial. It's not working yet. I'll try again in the week, otherwise I suggest to simply remove the usage of textures. I'd use simply raw GPU pointers. This alternative is easier than the texture objects approach (but it may cost a bit of performances (perhaps negligible)).; My point is, don't merge this PR right now, unless is super urgent.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427103805:365,perform,performances,365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3640#issuecomment-1427103805,1,['perform'],['performances']
Performance,@fredroy This change seems to have a bad impact on the performances. I noticed that on the caduceus. Could you test it on your end?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2458#issuecomment-964167988:55,perform,performances,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2458#issuecomment-964167988,1,['perform'],['performances']
Performance,@fredroy a kind reminder to verify that this PR has a bad impact on the performances.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2458#issuecomment-967147858:72,perform,performances,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2458#issuecomment-967147858,1,['perform'],['performances']
Performance,"@fredroy what do you think about the feedback from @fjourdes and @JeremieA ? . This topic interests me because it is connected with a usability issue I would like to see solved one day. . Suppose you are using ""BeamAdapter"". After some time you stop using ""BeamAdapter"" and one year later you (or a collegue/successor) want to reload the scene. It will not work and the user has no idea why the scene is not working anymore (he forgot he is no compiling the plugin anymore). . There is no such problem when there is ```<RequirePlugin name=""BeamAdapter"" url=""http://www.experimental.com/BeamAdapter.html""/>``` but people forgot them too often because they are 'silently' loaded by runSofa. . In that view, the autoload system, by facilitating people not to write the ```<RequiredPlugin>``` does not seems very appealling to me making the situation worse. . This is why I suggest to add to add a mechanism that warns users each time a scene is loaded and this scene contains component based on either autoloaded (or loaded from a configuration file) plugins.; A gentle reminder like that would be great: ; ```; Warning(root): This scene is using components (Beam) from the plugin 'BeamAdapter' but ; the plugin is not indicated as required in your scene. ; Please fix your scene by cut&pasting the following line at the beggining. ; <RequiredPlugin name=""BeamAdapter"" url=""http://www.experimental.com/BeamAdapter.html""/> ; ```. To implement such warning we probably needs the kind of manifesto file @fjourdes is proposing.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253#issuecomment-299312257:670,load,loaded,670,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253#issuecomment-299312257,3,['load'],['loaded']
Performance,"@fredroy, @guparan In this PR just wanted to have the exception message related with the Image_test. Here it is: ; ```; unknown file; C++ exception with description ""[instance(0,0,0,0,0x0,non-shared)] CImg<unsigned char>::load(): Failed to recognize format of file '/Users/sofa/jenkins/workspace/mac_clang-3.4_options/pr/all/applications/plugins/image/image_test/scenes/lena.jpg'."" thrown in the test body.; ```. Any idea why ? Could it be the image CImg library compiled without jpg support or something like that ? . EDIT: Ok I fixed this one...it is because ImageMagick is not install on some machine and thus CImg does not handle jpg. @guparan (I have installed ImageMagick on sofa-centos). . EDIT2: I updated the mac. I remember that CImg need to install external tool on windows. But don't remember which one...maybe it was imagemagick also. @guparan would you have some time to dig into that ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335427052:222,load,load,222,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/460#issuecomment-335427052,1,['load'],['load']
Performance,"@guparan I though about that but if you switch from release to debug I'm not sure cmake will always clean the lib repository to remove the non suffixed version. This is why I choose the ordering of operation. In debug load the _d and fallback to the normal. . @fjourdes its a pity that all those nice PR are waiting unmerged. . EDIT: I don't see a lot of work to do to have a ready PR (add some unit tests on the features added in RequiredPlugin and on PluginManager, use the msg_ api). Two hours of work maybe. . EDIT2: @guparan about the InSimo PR... we should merge the easy PRs from InSimo and don't wait the hard ones to be merged.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/465#issuecomment-335823292:218,load,load,218,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/465#issuecomment-335823292,1,['load'],['load']
Performance,"@guparan In fact, calling `sofa::helper::ArgumentParser::extra_args()` from `SceneLoaderPY::doLoad` (line 89 of SceneLoaderPY.cpp) causes an inconvenient limitation: The python scene loader cannot be used correctly when using a different parser than `sofa::helper::ArgumentParser`. . And in SofaQtQuick, we precisely would like to use the class `SceneLoaderPY` but using `QCommandLineParser` (`sofa::helper::ArgumentParser` is not used at all in SofaQtQuick). In the suggested commit, I simply move the call of `sofa::helper::ArgumentParser::extra_args()` from `SceneLoaderPY::doLoad` into more high-level methods. But this change induces to add a second input parameter for `SceneLoaderPY::doLoad`, in order to forward sceneArgs. Knowing that `doLoad` is originally a pure virtual method defined in class SceneLoader (see file SceneLoaderFactory.h), the multiple method overrides of this one (so in each scene loader) have to take into account the sceneArgs parameter even if it does nothing with it, that's why I made the parameter optional (NULL by default).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/992#issuecomment-484164265:183,load,loader,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/992#issuecomment-484164265,2,['load'],['loader']
Performance,@guparan Thanks for the explanation. ; Some of the yesterday build failed were probably caused for the concurrent build. ; May I run one clean build today to be sure the build failed on mac_clang was not affected by that problem ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/792#issuecomment-429261484:103,concurren,concurrent,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/792#issuecomment-429261484,1,['concurren'],['concurrent']
Performance,"@guparan, @fredroy, @marques-bruno . I'm facing a problem here, all the scene are failing because of interaction between the library in this PR and the ""automatically loading plugin"" mechanism we have. . In this PR, a new module is added but as this does not contains sofa components there is no need for to implement the 'plugin' interface (the initExternalModule() and other functions). But, by default the build scripts are automatically adding all plugins&modules into the config file with the plugins to load by automatically including things that does not have components (and thus are ""simple shared libraries). . What do you think about:; - differentiate better the 'libraries' from the plugins. This may be by adding adding a ; sofa_add_library() ? ; - store the libraries in a different build location than the plugins/modules. ; - I can add the initSofaEditor.cpp with the missing function...it would work but as this does make sens I'm hesitating to such solution.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/735#issuecomment-418049429:167,load,loading,167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/735#issuecomment-418049429,2,['load'],"['load', 'loading']"
Performance,"@hugtalbot ; My guess is the following:; When loading the SofaCUDA plugin, the module check if it can detect a cuda device. If there is no such a device, it now triggers an error, whereas it was just a print before. In other words, the behavior does not change (loading of the plugin), but the log message is now counted as an error. ; I think it is a good thing. It helps to identify the scenes that cannot be executed on the CI. For the case of the failing scene. I'll just remove the `<RequiredPlugin name=""SofaCUDA""/>` which is even not required.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4430#issuecomment-1903663503:46,load,loading,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4430#issuecomment-1903663503,2,['load'],['loading']
Performance,"@hugtalbot ; Normally color scales for ""importance"" are always from green to red passing by yellow and orange. So blue is bad because it is just out of scale :); So yellow and orange are probably better ones as they convey ""importance"". But, now on the readability side, some colors are very visible on a dark theme but not at all on very poorly on white one. On that side cyan (the blue that was used) and yellow (you are suggesting in this PR) perform poorly. Some orange may work well in both cases. I found this which could help https://www.thoughtco.com/contrasting-foreground-background-colors-4061363 to find color scheme that work good enough.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3914#issuecomment-1576298426:446,perform,perform,446,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3914#issuecomment-1576298426,1,['perform'],['perform']
Performance,@hugtalbot I propose to open an issue on that particular problem for Loader in general and merge that PR. Is it ok for you?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-745213034:69,Load,Loader,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-745213034,1,['Load'],['Loader']
Performance,"@hugtalbot thanks for the suggestion of this PR. Unfortunately, it does not compile on the CI. How bad is it to drop the support of DiagonalMass for rigids? Should we keep it anyway? Can MeshMatrixMass support rigids?. We should also have a look on performances. How MeshMatrixMass compare to DiagonalMass? My guess is that the difference will be significant for highly-detailed meshes.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3912#issuecomment-1576139257:249,perform,performances,249,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912#issuecomment-1576139257,1,['perform'],['performances']
Performance,"@jnbrunet To be clear, there are 2 optimizations in this solver: 1) optimization for diagonal masses, 2) multiop optimization.; I did not touch anything in the non-optimized multiop code. I changed the velocity input in the position update in the optimized multiop code. # Non-optimized multiop code. I did not change this code. ## Symplectic. ```; newVel = vec + acc * dt; newPos = pos + newVel * dt; ```. ## Non-Symplectic. ```; newPos = pos + vel * dt; newVel = vel + acc * dt; ```. # Optimized multiop code. ```cpp; ops_vel.second.emplace_back(vel.id(), 1.0);; ops_vel.second.emplace_back(acc.id(), dt);; ops_pos.second.emplace_back(pos.id(), 1.0);; ops_pos.second.emplace_back(d_symplectic.getValue() ? newVel.id() : vel.id(), dt);; ```; `ops_vel` is executed first if symplectic. `ops_pos` is executed first if non-symplectic. If I translate this code to formulas:. ## Symplectic. ```; newVel = vel + acc * dt; newPos = pos + newVel * dt; ```. ## Non-symplectic. ```; newPos = pos + vel * dt; newVel = vel + acc * dt; ```. This is exactly the same formulas than for the non-optimized code!; My change was on the line:; `ops_pos.second.emplace_back(d_symplectic.getValue() ? newVel.id() : vel.id(), dt);`; Before it was:; `ops_pos.second.emplace_back(vel.id(), dt);`. It would translate to:. ## Symplectic. ```; newVel = vel + acc * dt; newPos = pos + vel * dt <-- difference here with the non-optimized code; ```. ## Non-symplectic. ```; newPos = pos + vel * dt; newVel = vel + acc * dt; ```. # Conclusion. I believe that I fixed the multiop optimized symplectic version. Both optimized and non-optimized codes are now consistent. Note that this makes a difference only for the FreeMotion animation loops. @jnbrunet Regarding your math problem, I don't understand it. I don't see where you see a difference with SOFA. If you agree, I think we can merge this PR because it does not change the behavior (except for the fix). If there are some maths problems, it can probably be tackled later. What",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2163#issuecomment-867677866:35,optimiz,optimizations,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163#issuecomment-867677866,7,"['Optimiz', 'optimiz']","['Optimized', 'optimization', 'optimizations', 'optimized']"
Performance,@matthieu-nesme . I looked back to the PR and I will remove the three Data field because:; - controlling the queue size with a Data is not crucial. I will replace it with an attribute and get/set or an environment variable. ; - the msgLevel is un-used and was there to rise discussion on whether or not controlling the level of messages emitted by an object make sense (eg when debugging). ; - the logLevel'one is un-used yet but should one day override the behavior of the mis-used f_printLog. ; ; Thanks again to pointing that.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276757536:109,queue,queue,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106#issuecomment-276757536,1,['queue'],['queue']
Performance,"@matthieu-nesme . The version is very simple...; In the constructor we:; - record the already loaded modules, ; - install a hook on the import function. . At each subsequent import we record in a second list the imported modules. ; Then when calling uninstall we remove from python module cache the one that are in this second list...(thus returning to the previous loading state). This force python to reload them next time it sees an import. About the re-init... ; Do you know how to be notified when the scene is going to be destructed and if there is no...is this something you could implement easily ? . EDIT: I cleaned the branch for a PR once the reinit stuff cleared.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/193#issuecomment-285083694:94,load,loaded,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/193#issuecomment-285083694,3,"['cache', 'load']","['cache', 'loaded', 'loading']"
Performance,@matthieu-nesme ; If have the check in getUnsignedNumber for two reason:; - the '-' sign can be in the string passed to the getUnsignedNumber function so I have to check it. ; Eg of string that cause that to happen -5-5 or 5--5 ; - I don't make the assumption that this function will only be called from read...I suppose I will need it in ; a lot of other different context so I prefer to have the function robust. . Now from a performance point of view it is better to check the single char '-' at the beginning of the string than parsing the whole number to detect is was not good.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302727731:428,perform,performance,428,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302727731,1,['perform'],['performance']
Performance,"@rgao15 Thanks a lot for the feedback!. I tried to reproduce your issue. On my end, I do have an error message:; ```; [ERROR] [MouseOperation] ConstraintAttachBody performer cannot be created with the picked model.; ```; Let us know if you have the same error message. I am also on Windows. Anyway, I tried to understand what's happening. Why ConstraintAttachBody cannot be created?; It is supposed to be added in a factory here : https://github.com/sofa-framework/sofa/blob/323e20e4168e1ab5b67352f4621d4f1b3fa39be9/modules/SofaConstraint/src/SofaConstraint/ConstraintAttachBodyPerformer.cpp#L38; Registration in the factory works BUT not in the right factory.; The factory in `modules/SofaGuiCommon/src/sofa/gui/MouseOperations.cpp` and in `modules/SofaConstraint/src/SofaConstraint/ConstraintAttachBodyPerformer.cpp` are different. The factory is a singleton but there are 2 different instances. I confirmed it by printing the factory address. I suspect it's because they are used in different libraries. The question is: how to solve it? And is it the same story for other factories? @fredroy @damienmarchal I would need your help",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-973088531:164,perform,performer,164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-973088531,1,['perform'],['performer']
Performance,"@sescaida Thanks for the review; The reason why I didn't add examples for this PR is because the current examples themselves, without any modification, demonstrate that it works as-is, thus showing that the call to update() in the handleEvent method was redundant with the default DDGNode's update mechanism. Basically, if your scene is well created (links are properly made between datafields & data are correctly accessed by components lower in the scene graph), everything should work just as well as before. The only difference I would say, is that the user has the hand over the cleanDirty() method, which allows him to fix use cases where a read acces is performed on an input, after setting an output's value has been set, in update(). as for whether it is a good idea to keep that system, I must say, that I agree with you, as we discussed before: Bringing the complexity of the DDGNode's mechanism in Python might be something we want to avoid.; Although, I think that the good approach to fight this issue would rather be to solve the problem on the C++ side (simplifying the Data-Update mechanism) than to diverge from it by simplifying the Python process.; I think @damienmarchal woul be the best placed to give us a feedback on this question, maybe? (When he'll be back from his holidays of course!)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751#issuecomment-413560022:661,perform,performed,661,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751#issuecomment-413560022,1,['perform'],['performed']
Performance,"@sescaida, I just discovered a syntax, that exists since, well ... ever, and makes this whole PR completely useless....:. ```py; import Sofa; import os. class PyEng(Sofa.PythonScriptDataEngine):; def __init__(self, ctx, name, positions):; self.name = name; self.addNewInput('positions', datatype=""vector<Vec3d>"", value=positions, help=""test""); self.addNewOutput('average', datatype=""Vec3d"", help=""average""); ; def parse(self, arg):; pass; ; def init(self):; 	pass; ; def update(self):; value = [0, 0, 0]; for pos in self.positions:; value[0] += pos[0]; value[1] += pos[1]; value[2] += pos[2]; value[0] /= len(self.positions); value[1] /= len(self.positions); value[2] /= len(self.positions); self.cleanDirty(); self.average = [[-value[0],-value[1],-value[2]]]; pass. def createScene(rootNode):; loader = rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename='mesh/liver.vtk'); psde = PyEng(rootNode, name=""PSDE"", positions=loader.findData('position').getLinkPath()); rootNode.createObject('TransformEngine', name='TE', input_position=""@loader.position"", translation=psde.findData('average').getLinkPath()); rootNode.createObject('OglModel', name=""visu"", position=""@TE.output_position"", triangles=""@loader.triangles"",; color=""1 0 0 1""); ```. With this syntax, I can create my engines definition once, and create as many as I want, on the fly, with any parameter I want for my input fields. It's actually even better, because:; - I don't have to create inputs with the fields I pass to the constructor. It could be simple data (addNewData vs addNewInput); - Construction of datafields is more explicit, thus less error-prone; - No need to go search for a decorator function somewhere in SofaPython, or to declare a dictionary of default arguments, everything is performed in the constructor. So, yeah, this PR is now virtually useless.; There's one thing I don't like with this syntax though, it's that the creation of the object is performed at the same time as it is assigned to the scene gra",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/743#issuecomment-417366442:795,load,loader,795,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/743#issuecomment-417366442,3,['load'],['loader']
Performance,"@sescaida, you can find [here](https://github.com/marques-bruno/snippets/blob/master/testDataEngine.cpp) a test code for Sofa showing what happens when cleanDirty is called at the wrong moment. After testing a little bit the engines, I noticed that the only case where it wouldn't work (to have all the data updates & cleanDirty() before calling the update() method would be in the very unlikely case where the update() method would fetch an earlier engine in the dependency graph through getContext, and set its output value. this is very unlikely, which means that, apart for some performance reasons, I don't see why it would be important to bind the cleanDirty() method in python. Since python is much slower anyway, I think this PR does not make much sense anymore. although, I still insist on removing the call to update() from handleEvent, since it is redundant with its normal on-demand calling mechanism. :) I'll update the PR soon!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/751#issuecomment-417357372:583,perform,performance,583,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/751#issuecomment-417357372,1,['perform'],['performance']
Performance,"@thomas-lemaire please be tatillon because it is a good question :) . Initially it was not part of the PR (have a look at the first commit to see what was my initial code) but on windows the static_asserts were causing compilation failure on V2015 and VS2013 builds. After some digging and request for discussions (in issue: https://github.com/sofa-framework/sofa/issues/130)) my conclusion was that the failure was not because of my code but because that somehow there was implicit instanciation of the function like Vec<4,float>::set(...,...,N...) with N!=4. And as they were instanciated this was causing the static_assert to reject the code when N==4. . I have the feeling that the static_assert in Vec was only working because of side effects on way compiler interleave optimization and instantiation of templates (but I may be totally wrong). Basically all the set(...,) function are present but they were removed because they were not used before the check by static_assert. . So I try to implement a corrected version of the expected behavior by using the enable_if feature of std::x11 which is generating the right function but not the others.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/119#issuecomment-279437317:775,optimiz,optimization,775,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/119#issuecomment-279437317,1,['optimiz'],['optimization']
Performance,"A bit of explanation about this PR:; When a attribute is passed to createObject, it is added to the BaseObjectDescription of the component. This means that, in cpp, the parse() method, that takes a BaseObjectDescription in parameter, has this information. The problem is, that in the PythonScriptDataEngine, the parse method calls the python version of the parse() method, which doesn't take this BaseObjectDescription in parameter (maybe that should change btw, since its mainly a simple key/value dictionnary after all...); The datafields could be added directly from the C++, but since most of the error handling in the creation of derived I/Os in #742 is performed in the bindings, it would mean recoding a lot of redundant code.; Since I didn't want to touch the parse() method, I created an additional method, that can (or not) be used in PSDEs, named ""datalinks"". This method is called right after the parse() binding, and takes a filtered version of the BaseObjectDescription as an argument (all datafields already created in the parse() method are removed from the dictionnary). The function then calls addNewInput() on each of the leftover fields. I'm certain there is a cleaner way of doing that.; - I was thinking maybe calling directly the python addNewInput() method from the cpp parse() method, to avoid the creation of this extra module function, but I am not sure I know how to do that. ; - Another idea would be to pass the BaseObjectDescription in the parse() method of the PSDE (as it should be done IMHO), and let the user decide whether or not he wants to loop over those fields to create inputs.. more error prone in my opinion. But you guys have good input on that ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/743#issuecomment-409859524:659,perform,performed,659,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/743#issuecomment-409859524,1,['perform'],['performed']
Performance,A clean version implementing a correct incremental loading and a correct Newton loop.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/224:51,load,loading,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/224,1,['load'],['loading']
Performance,A few minor change in matrix class to improve performance . FullMatrix: Restore fast matrix clear function; MatExpr: Remove console output in addTo function. Clear function in visual studio profiler. current: 0.51% inclusive samples; ![doubleForLoopClear](https://user-images.githubusercontent.com/3921764/63861622-85081200-c9ab-11e9-8192-e536e4c5b4eb.jpg). std::fill: 0.18% inclusive samples ; ![stdfillClear](https://user-images.githubusercontent.com/3921764/63861635-89ccc600-c9ab-11e9-9e87-2cac821888cf.jpg). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1128:46,perform,performance,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1128,1,['perform'],['performance']
Performance,"A link to an example scene : https://pastebin.com/iwCdMGBK. ```xml; <?xml version=""1.0""?>; <Node name=""Root"" dt=""0.02"" gravity=""0 -1 0"">; <VisualStyle name=""visualStyle1"" displayFlags=""showAll"" />; <RequiredPlugin name=""Cloth""/>; <DefaultPipeline name=""DefaultCollisionPipeline"" verbose=""0"" draw=""0"" depth=""6"" />; <BruteForceDetection name=""Detection"" />; <LocalMinDistance name=""Proximity"" alarmDistance=""1"" contactDistance=""0.5"" />; <DefaultContactManager name=""Response"" response=""default"" />; <DefaultCollisionGroupManager name=""Group"" />; ; <Node name=""moving"" > ; <EulerImplicitSolver/>; <CGLinearSolver/>; <GridMeshCreator name='loader' resolution = ""5 5"" rotation=""-90 -0 -0 "" scale3d =""3 3 3"" translation =""-2 2 2"" trianglePattern = ""1"" />; <MeshTopology name='mesh' position=""@loader.position"" edges=""@loader.edges"" triangles=""@loader.triangles"" />; <MechanicalObject template=""Vec3d"" position=""0 0 0"" src=""@mesh"" />; <TTriangleModel template=""Vec3d"" proximity=0.3 contactStiffness=10 bothSide=1/>; <TPointModel template=""Vec3d"" proximity=0.3 contactStiffness=10 bothSide=1/>; <TLineModel template=""Vec3d"" proximity=0.3 contactStiffness=10 bothSide=1/>; <UniformMass/>; </Node>; ; <Node name=""fixed"" >; <EulerImplicitSolver/>; <CGLinearSolver/>; <MeshObjLoader name='loader' filename=""mesh/cube.obj""/>; <MeshTopology name='mesh' position=""@loader.position"" edges=""@loader.edges"" triangles=""@loader.triangles"" />; <MechanicalObject template=""Vec3d"" position=""0 0 0"" src=""@mesh"" translation=""0 -5 0"" scale3d=""10 1 10""/>; <TTriangleModel template=""Vec3d"" proximity=""0.1""contactStiffness=10 bothSide=1/>; <TPointModel template=""Vec3d"" proximity=""0.1"" contactStiffness=10 bothSide=1/>; <TLineModel template=""Vec3d"" proximity=""0.1"" contactStiffness=10 bothSide=1/>; <FixedConstraint template=""Vec3d"" fixAll=""1"" />; </Node>; </Node>; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5#issuecomment-490817063:636,load,loader,636,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5#issuecomment-490817063,8,['load'],['loader']
Performance,"A new DataEngine is introduced: `FillReducingOrdering`. A DataEngine to reorder the degrees of freedom in a mesh in order to reduce fill-in in sparse matrix factorization. In other terms, the algorithm minimizes the number of non-zeros entries in the factorization of the sparse matrix of a FEM problem by reordering the degrees of freedom. The implementation is based on METIS. Note: some of the direct linear solvers embed such a reordering internally (e.g. SparseLDLSolver), but not all of them (e.g SparseLUSolver, SparseCholeskySolver etc). An example is also introduced (`examples/Components/engine/FillReducingOrdering.scn`).; Here is the comparison of the two system matrices:. Initial matrix:; ![initial_matrix00001](https://user-images.githubusercontent.com/10572752/143068764-2cbd09b4-906b-4bc1-b3c6-03cd3034a1ab.jpg). Reordered matrix:; ![reorder_matrix00001](https://user-images.githubusercontent.com/10572752/143068809-80a5172a-ce39-4c53-bbfb-e8ec12066cf8.jpg). It improves a lot the performances when the linear solver does not embed a fill-in reducing reordering. This is the case of the `SparseLUSolver` in the example scene.; Rough framerate without reordering: **2.5 FPS**; Rough framerate with reordering: **25 FPS**; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2501:998,perform,performances,998,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2501,1,['perform'],['performances']
Performance,A node including `<MeshTopology />` and `<TopologyContainer />` component is possible and will crash if some topological changes are performed. Other component could perform this->getContext()->getMeshTopology() which will return either one or the other depending on the order in the Node I assume. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/744:133,perform,performed,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/744,2,['perform'],"['perform', 'performed']"
Performance,A performance improvement has been observed in https://github.com/sofa-framework/sofa/pull/4255 and https://github.com/sofa-framework/sofa/pull/3986,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3769#issuecomment-1839453152:2,perform,performance,2,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3769#issuecomment-1839453152,1,['perform'],['performance']
Performance,"A scene is added in the MultiThreading plugin. Its goal is to show the difference between the parallel collision detection algorithms and the single threaded equivalents, in terms of performances. My results after 1000 time steps:. # Single thread; 43.6893 s ( 22.8889 FPS). ; `doCollisionDetection` runs in ~28.99 ms (mean). # Multi thread; 22.9585 s ( 43.5568 FPS). ; `doCollisionDetection` runs in ~7.81 ms (mean). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2112:183,perform,performances,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2112,1,['perform'],['performances']
Performance,"A third solution, still in c++, to parse the added field into the function BoxROI::parse() and converts these fields values into the DataField used internally by BoxROI to do the computation. The good is that there is no performance cost. The drawback are the following:; - the parsed attribute are not visible in the GUI thus ppl cannot use them from the graphical interface and even worses, and when learning Sofa cannot discover they exists neither from the doc or from the GUI.; - the parsed attribute cannot be saved easily.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/560#issuecomment-357364812:221,perform,performance,221,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/560#issuecomment-357364812,1,['perform'],['performance']
Performance,"A_ENABLE_FAST_MATH (and enable fast_math); and SOFA_ENABLE_SIMD, which will enable either AVX2 or AVX or nothing if the CPU supports respectively either AVX2 or AVX or nothing (SSE2 is the fallback in msvc/x64); - deprecates SOFA_VECTORIZE , which enables the 2 previous options if checked. More lecture for the curious: https://devblogs.microsoft.com/cppblog/do-you-prefer-fast-or-precise/; fpfast enables auto-vectorisation (among other stuff), thats why they are usually enabled together. On my setup, with SOFA_ENABLE_FAST_MATH + SOFA_ENABLE_SIMD, I can get around 0 to 10% of speedup. Nothing revolutionary anyway. ; TorusFall.scn (1000steps):; - fastfp+avx2: `7.90001 s ( 126.582 FPS)`; - fastfp `8.3388 s ( 119.921 FPS)`; - avx2 `8.49847 s ( 117.668 FPS)`; - ss2 `8.56825 s ( 116.71 FPS)`; We can see that it should be either both of them enabled, or not. That's why it will not be enabled by default, except if we want fp:fast by default. SIde note, seems Eigen3 is quite optimized with SIMD (w/o vs w/):; - `BM_Matrix_eigenmat33_invert/512` : 4.45 us vs 3.40 us; - `BM_Matrix_eigenmat33_determinant/512` : 1.09 us vs 0.882 us ; - `BM_Matrix_eigenmatf_vecmult<24>/512` : 98.0 us vs 76.0 us. In a separate PR, we could do the same for gcc/clang (with `march=native` and fast_math as well). EDIT: `SOFA_ENABLE_SIMD` was originally `DSOFA_ENABLE_AVX` but change the name for the future PR for gcc/clang; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene tes",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2652:1423,optimiz,optimized,1423,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2652,1,['optimiz'],['optimized']
Performance,Actually the SceneListener was specifically designed for the python modules/scripts to be cleaned/reloaded when a new scene is loaded. This that few years ago so I forgot a bit how it work. But I'm sure it is important not to break it :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/938#issuecomment-465698728:127,load,loaded,127,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/938#issuecomment-465698728,1,['load'],['loaded']
Performance,"Add a Data<bool> maxIteration in LCPForceFeedBack to set a number max of iteration for the gauss seidel used to solve the constraint problem. ADD LCPForceFeedback_test using a simple scene of a tool falling on a floor, checking constraint problem and request some force computation from LCPForceFeedback. Will see in a next PR how to add a test on concurrent threads asking for LCP computeForce . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1576:348,concurren,concurrent,348,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1576,1,['concurren'],['concurrent']
Performance,Add a boolean data (d_propagatetoDOF) to allow or not the propagation of the topological changes to the mechanical state immediately as soon as they occure. Default value (d_propagateToDOF=true) the topological changes are propagated immediately following the SOFA regular behavior and it should not affect all the Sofa current scenes. If the boolean is set to false the topological state changes update are not propagated immediately and they can executed in another step of the simulaiton loop. This modification should make the concurrent execution of the topological changes and the simulation safe. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/838:531,concurren,concurrent,531,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/838,1,['concurren'],['concurrent']
Performance,"Add a csv file in /doc folder to store current benchmark performances. Tests were done using scenes stored in benchmarks folder, in cpu and gpu using CudaVec3f in batch mode.; Each scene has been run 10 times over 1000 steps. Computer specifications are inside the file. Here is a quick histogram of the results:; ![image](https://user-images.githubusercontent.com/21199245/148964875-99c21320-384f-40c9-9dc6-a5e77a8dca82.png). Also move some pictures from SofaCUDA/examples/ to SofaCUDA/doc. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2588:57,perform,performances,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2588,1,['perform'],['performances']
Performance,Add a variable to count the number of primitve tests performed during the narrow phase of the collision detection.; This variable is only for statistics purpose. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/930:53,perform,performed,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/930,1,['perform'],['performed']
Performance,"Add file `SofaPhysicsBinding` to provide C functions to access the SofaPhysicsAPI methods; Add bindings for:; - SofaPhysicsAPI instance creation/destruction; - creating/loading/unloading SOFA scene (only .scn); - Simulation control: start/stop/step/reset, time stepping, gravity; - Access to SofaPhysicsOutputMesh (aka VisualModel) topology and positions/normals/texcoords. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3539:169,load,loading,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3539,1,['load'],['loading']
Performance,"Add first version of the code compatible with CudaVec3f and CudaVec3d.; Performances are lower than CUDATetrahedronFEMForceField for the moment. Some profiling work will be done in future work. . Add cpu-gpu comparison scene and benchmarks scenes on a beam. this PR depends on changes done in FastTetrahedralCorotationalForceField suggested in PR #2569 (will need to rebase). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2585:72,Perform,Performances,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2585,1,['Perform'],['Performances']
Performance,"Add new directories (Let me know now if you want other names):; - **SofaCUDA/scenes/benchmarks/** _(to put cpu and similar gpu scenes to check performances)_; - **SofaCUDA/scenes/cpu-gpu_validation/** _(to put scenes within cpu and gpu Nodes)_. All scenes within actual SofaCUDA/examples will be progressively (after check and refresh) moved either to benchmarks or cpu-gpu_validation or a third directory: **SofaCUDA/scenes/demos** _(for more advanced gpu scenes)_. - Here is an example of cpu-gpu_validation scene for MeshSpringForceField. Cpu version in red and GPU version in green.; ![image](https://user-images.githubusercontent.com/21199245/147080986-1f138589-6fc4-4b28-8020-14095fb3775c.png). - For the benchmarks: ; - MeshSpringForceField_beam10x10x50_cpu.scn (~40 fps) ; - MeshSpringForceField_beam10x10x50_gpu.scn (~75 fps) . - Add Quick safeguard in CudaSpringforceField.cu to avoid 0 division. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2556:143,perform,performances,143,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2556,1,['perform'],['performances']
Performance,"Add option to transform (rotation, translation scale) in SphereLoader to match other loaders api. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1495:85,load,loaders,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1495,1,['load'],['loaders']
Performance,Add some comments to help newcomer starting with the basic CGLinearSolver. I also set by default the option _warmStart_ to true in [CGLinearSolver.inl](https://github.com/sofa-framework/sofa/blob/124c52ad384ab8a2d33cfd5d8915054fd1128e2b/SofaKernel/modules/SofaBaseLinearSolver/CGLinearSolver.inl#L116). Is this ok @matthieu-nesme ? I did not get why it's not the default behavior? performances ?. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/365:381,perform,performances,381,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/365,1,['perform'],['performances']
Performance,"Add topology EndingEvent to the queue of event each time before propagating. This event can be catch by callback if needed.; See next PR with uniformMass. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2376:32,queue,queue,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2376,1,['queue'],['queue']
Performance,"Add virtualization layer to attachment performers. There exists two of them, either using lagrangian based constraints or springs. A common method `start_partial` already existed that was supposed to add required components and parametrize them to either add bilateral constraint or a spring, but this common mechanism was not link with any virtual inheritance. I need to handle both performers blindly using this method (`start_partial`) so I added a virtualization layer that makes more sens than what currently exists. I use it in this PR -> ([Sofa.IGTLink PR](https://github.com/sofa-framework/Sofa.IGTLink/pull/5)). I've also took advantage of this refactoring to rename some attributes that where not following the naming policy, because why not. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4638:39,perform,performers,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4638,2,['perform'],['performers']
Performance,"After a discussion with @jnbrunet, we have decided to close this issue as we think the current implementation cannot be optimized further.; However, we think it is useful to know if the diagonal mass is diagonal in case the system matrix is built (it's not the case in Sofa).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1923#issuecomment-806641515:120,optimiz,optimized,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1923#issuecomment-806641515,1,['optimiz'],['optimized']
Performance,"After some checks, (and if https://github.com/sofa-framework/sofa/pull/2516 is merged), if MeshMatrixMass has its data ""lumped"" enabled, then MeshMatrixMass and DiagonalMass are roughly similar (performance-wise at least); ```; BM_Scene_bench_StepFactor<DiagonalMassScene>/4096 32958 ms 32906 ms; BM_Scene_bench_StepFactor<MeshMatrixMassScene>/4096 32971 ms 32906 ms; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2452#issuecomment-982735834:195,perform,performance-wise,195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2452#issuecomment-982735834,1,['perform'],['performance-wise']
Performance,"After some tests on a cantilever beam with a LDL solver and a scalar CSR matrix:. - `addKToMatrix` takes a large part of the time for low number of elements; - `addKToMatrix` takes less and less part of the time as the number of elements grows; - The time consuming operation (more than 90% of the time) in `addKToMatrix` is `r.matrix->add(i, j, v)`. In the test, `r.matrix` is of type `CompressedRowSparseMatrix<double>`, and I did not test a bloc-based matrix. ; - In `r.matrix->add`, `wbloc` is the time consuming function. My profiler did not tell me more information inside this function. I tried to pre-allocate `btemp` before all the `add` calls, but it does not help. I suspect the bad performances come from the algorithm itself which must find an element in sorted arrays at each `add` call.; - Since the bad performances come from `CompressedRowSparseMatrix<double>::add`, it would be interesting to parallelize the calls to `add`. However, I doubt `CompressedRowSparseMatrix` is thread-safe...; - My tests are in https://github.com/alxbilger/sofa/commit/41584bceaf5d5666c362cdfb28238318c750af9e. But I don't plan to merge it since it does not improve the performances",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2177#issuecomment-868309098:694,perform,performances,694,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177#issuecomment-868309098,3,['perform'],['performances']
Performance,"After spending half a day struggling on a little piece of code, I finally found out that my call to invertMatrix didn't return the correct result:. In Sofa, calling ; ```; Matrix3 M;; M.invert(M);. ``` ; returns a grotesque bullshit, because ""from"" and ""dest"" are the same, and no copy is made, so values are changed and read at the same time.; I understand that in terms of performance, avoiding a useless copy is good, but there is no warning message of any kind, not even as a comment over the function. For the `transpose()` function, there is an additional` transposed()` method that directly stores the transposed matrix in its initial data structure.; I suggest that an `inverted() `method be added to `Mat`, and a little comment above the `invertMatrix()` function be added to warn about this specific problem. What do you think?; If it sounds good to you, I can take care of it. If you see a better way of warning the user about this behavior, or consider that removing entirely the issue by making a temporary copy of the value is not aberrant, that would be even better I guess. @hugtalbot @guparan . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/280:375,perform,performance,375,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/280,1,['perform'],['performance']
Performance,"Agreed. It's simpler.; To be clearer: plugin was equal to ""PSL"" and not ""PSL.dll"". In this case, we want to to load as a name, but the test based on std::equal crashes (in debug only).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/617#issuecomment-376458776:111,load,load,111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/617#issuecomment-376458776,1,['load'],['load']
Performance,Ah! C-style arrays are not movable. I think it explains the lower performances with the operator=,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2518#issuecomment-983439858:66,perform,performances,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2518#issuecomment-983439858,1,['perform'],['performances']
Performance,"All loaders/exporters consider the file format in upper-case EXCEPT MeshObjLoader.; When you have stuff like MeshVTKLoader, MeshOBJ, OBJExporter, MeshSTLLoader, ImagePNG, etc; it looks not consistent. So this PR renames all occurrences of MeshObjLoader to MeshOBJLoader and add an alias with `MeshObjLoader` to keep the compatibility with the existing scenes. Otherwise, all the other upper-case should be converted to Xxx but will be much more bothersome that this PR.... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2428:4,load,loaders,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2428,1,['load'],['loaders']
Performance,"All non-linear mappings have a Data `d_geometricStiffness` defining how the geometric stiffness of the mappings should be computed. Depending on the mapping, it can have the following values:. - `None`; - `Exact`; - `Stabilized` (not all the mappings provide this option). By default, all mappings are set to `Stabilized`, except for `RigidMapping` which is set to `None`. I would like to set the default value to `Stabilized` also for `RigidMapping`. But I suspect that the reason it has not been done is for performances. Indeed, there are cases where there are no forces to map. In these cases, the geometric stiffness computation is superfluous (because it involves multiplication by null forces). Such cases are for example when a visual model is mapped. We can imagine detecting automatically that there are forces under a mapping or not. Depending on this detection, we can decide if the geometric stiffness should be computed or not.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3837:510,perform,performances,510,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3837,1,['perform'],['performances']
Performance,All tests scenes are now failing because we cannot load the SofaSphFluid plugin. ; This fix should helps ;) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/467:51,load,load,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/467,1,['load'],['load']
Performance,Allow all loaders (namely Gmsh and STL) to flipNormals (actually reorder the indices of vertices in a triangle).; Update associated scenes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1418:10,load,loaders,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1418,1,['load'],['loaders']
Performance,"Also clean and change code structure to reduce the number of access to element from index. ; Depends on PR #2275 and #2283. Average timing on a set of 6 executions of 10 successive runs of 1000 steps on a grid of 40x40 :. Before PR #2273 ; ```; TriangleFEMForceField:; timeMean: 1.83344; timeMin : 1.78238; timeMax : 1.89879. TriangularFEMForceField:; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. ### **Edit: new performances after several optimisations**; ```; TriangleFEMForceField ; timeMean: 1.43496; timeMin: 1.428055; timeMax: 1.45082. TriangularFEMForceField:; timeMean: 1.459322; timeMin: 1.45386; timeMax: 1.468145; ```. Simulation of 20sec for: ; - Green: TriangleFEMForceField; - Red: TriangularFEMForceField; - Blue: TriangularFEMForceFieldOptim. Before Before PR #2273 ; ![TriangleFEM_old](https://user-images.githubusercontent.com/21199245/128017042-dd476945-5248-457c-9739-108499eb3a0e.gif); After this PR; ![TriangleFEM_new](https://user-images.githubusercontent.com/21199245/128015719-4c90e7d7-4ee4-4525-ad5e-2a2c9d1bfa2f.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2287:430,perform,performances,430,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2287,1,['perform'],['performances']
Performance,"Also, small note:. A Newton solver normally do not increase the external forces (i.e loads) at each newton iterations. If you want to use this solver with newton iterations, it is in the user's hand to make sure the external forces used in the scene (pressure, traction, etc.) only get incremented **at each time step**, and not at each calls to addForce (which is currently the case for most force fields).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/950#issuecomment-467388326:85,load,loads,85,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/950#issuecomment-467388326,1,['load'],['loads']
Performance,"Alternate proposal (in agreement with Maxime's comment): deprecate custom transform codes within components and always rely on TransformEngine. I think that was already the plan, but maybe it should be more explicit.; This is also linked with the deprecation of the sofa::helper::io::Mesh loaders, as TransformEngine cannot be used when a component is loading the mesh directly through these classes (see #42, #118).; Note that using external engines is more verbose and a little bit more work to use, but it brings additional benefits such as a standard transformation order, an easy way to chain multiple transform in whichever order is wanted, and the (very useful for us) ability to apply the same translation to multiple meshes or associated info related to the same virtual object, such as both visual mesh(es) and collision mesh(es) of a tool, or when globally changing the frame of reference for the whole scene.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/259#issuecomment-308278446:289,load,loaders,289,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/259#issuecomment-308278446,2,['load'],"['loaders', 'loading']"
Performance,"An other big singleton to refactor is ObjectFactory.; Especially bothering because its getInstance() is called in the RegisterObject function, which is called when the library is loaded.; One solution would be to move those RegisterObject() into the plugin initialisation (where it has been given a pointer to the ObjectFactory). The drawbacks are:; - cumbersome; - the init's plugin file would need all the headers of the components it need to register.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562520621:179,load,loaded,179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562520621,1,['load'],['loaded']
Performance,AnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sof,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:6001,Load,Loaded,6001,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,AnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: CubeTopology; [WARNING] [ObjectFactory] Class already registered: CylinderGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereQuadTopology; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [WARNING] [ObjectFactory] Class already registered: CenterPointTopologicalMapping; [WARNING] [ObjectFactory] Class,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:25310,Load,Loaded,25310,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"Another suggestion from @JeremieA is that actually the list of all the plugins that are being compiled could be derived at CMake configure/generate time, and therefore a configuration file containing that list could be issued as the default list of plugins to load.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253#issuecomment-297004128:260,load,load,260,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253#issuecomment-297004128,1,['load'],['load']
Performance,"Any idea why `SofaPython3/Bindings.Sofa.Tests` tests are failing?. The output:; ```text; Running unit-tests Bindings.Sofa.Tests; Calling: bash -c ""/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Bindings.Sofa.Tests --gtest_output=xml:unit-tests/Bindings.Sofa.Tests/report.xml 2>&1"". [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/image/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Registration/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/RigidScale/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Flexible/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/src/applications/plugins/Compliant/python' to sys.path; [INFO] [SofaPython3] Added '/builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/python3/site-packages' to sys.path; [INFO] [PluginManager] Loaded plugin: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/lib/libSofaPython3.so; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)];",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:493,load,loader,493,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['load'],['loader']
Performance,"Apparently on the source master, so something pretty recently.; Sorry for not investigating yet, but I rather prefer create an issue not to forget it. Associated post: https://www.sofa-framework.org/community/forum/topic/meshsteploader-plugin-loading-failed/#post-10306",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/558#issuecomment-356541123:243,load,loading-failed,243,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/558#issuecomment-356541123,1,['load'],['loading-failed']
Performance,Appeared after upgrading MacOS to 10.11:; using a relative filename in SceneLoaderXML::loadFromMemory raises ENOENT (No such file or directory) error during SetDirectory chdir.; Still don't know why though :-/. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/325:87,load,loadFromMemory,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/325,1,['load'],['loadFromMemory']
Performance,"Arising from #2582, the loaders one should be removed from IO.Mesh (not really a IO)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2654#issuecomment-1028059396:24,load,loaders,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2654#issuecomment-1028059396,1,['load'],['loaders']
Performance,"As CImgPlugin became almost useless for loading images (jpg, etc #2551 ), its only usage is to ship cimg. ; So it would make sense to put it back in image (which is the main user of the lib cimg). Fix #4299 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4303:40,load,loading,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4303,1,['load'],['loading']
Performance,"As a description of the new feature, here is the doxygen of the new component:. > Assembling method benefitting from the constant sparsity pattern of the linear system in order to increase the; > performances.; > ; > This method must not be used if the sparsity pattern changes from a time step to another.; > ; > The method uses the first iteration to build the data structures required to accelerate the matrix assembly, based; > on a constant sparsity pattern.; > ; > First iteration:; > 1) During the accumulation of matrix contributions, the local matrix stores an ordered list of matrix elements (row; > and column) corresponding to the order of insertion. This order must not change along the simulation.; > 2) After the matrix assembly, the global matrix is compressed so that the ordered list of matrix elements can be; > converted into an ordered list of ids corresponding to locations in the values array of the compressed matrix.; > ; > Second time step and after:; > 1) The local matrices assume the order of insertion did not change. Therefore, they rely only on the ordered list of; > ids to know where in the values array to insert the matrix contribution. The row and column ids are useless. An example scene is introduced. . ![peek](https://github.com/sofa-framework/sofa/assets/10572752/a59128d0-b35a-4376-b905-db50ebc8bf83). This scene assembles mapped matrices to show that the method works in those conditions. Here is the assembled matrix represented as a binary image:. ![image](https://github.com/sofa-framework/sofa/assets/10572752/899af554-c239-403c-a785-23767f1d714c). This scene is used for the benchmarks on 1000 time steps. The timer to focus on is `buildStiffness`. But be aware that this timer also includes the computation of the contributions in addition to the assembly itself. 1. The scene without modification, i.e. with `<ConstantSparsityPatternSystem template=""CompressedRowSparseMatrixd"" name=""A"" printLog=""true""/>`. ```; [INFO] [BatchGUI] 1000 iterations done",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4158:196,perform,performances,196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4158,1,['perform'],['performances']
Performance,"As discussed in PR #3500; Should LinearSolver check at init if the mechanical system to solve is empty:; This can lead to error/skip at each step when inverting matrices are required. . Note from @alxbilger ; `Fair question. This check is performed at each time step. It visits the mechanical objects and compute the size of the system. I don't know if this can be done in the init method if the mechanical objects are not initialized yet.; Also, the API allows to use a Linear Solver on a matrix, without defining a scene (see the test TEST(SparseLDLSolver, MatrixFactorization)). Adding this check in the init method would not make sense in this case.; To be discussed`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3504:239,perform,performed,239,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3504,1,['perform'],['performed']
Performance,"As discussed in latest dev meeting, we need SceneChecker output even at first load. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/938:78,load,load,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/938,1,['load'],['load']
Performance,"As in the title, once I try to launch the tripod-tuto.py I get the following message:. ```; [ERROR] [SofaPython3::SceneLoader] Unable to completely load the scene from file 'C:\Users*******\Desktop\aaasofa\tripod-tuto.py'.; Python exception:; ModuleNotFoundError: No module named 'stlib3'. At:; C:\Users******\Desktop\aaasofa\tripod-tuto.py(1):; (219): _call_with_frames_removed; (848): exec_module; (6):. ```; What should I do? I checked and the stlib3 folder is where it should be (/plugins/STLIB/lib/python3/site-packages/)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3880:148,load,load,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3880,1,['load'],['load']
Performance,"As mentioned in #2089, the component `DefaultCollisionGroupManager` seems to have some issues. 3 similar scenes files were compared:. 1. 2 cubes under a single system; 2. 2 cubes each with its own system; 3. 2 cubes each with its own system, and a `DefaultCollisionGroupManager` in the scene. (1) and (2) are very similar in terms of simulation result and performances. (3) gives a different simulation result and performances are poor compared to (1) and (2). It has also been notice that vectors are endlessly created in the `MechanicalObjects`.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2101:356,perform,performances,356,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2101,2,['perform'],['performances']
Performance,"At https://defrobotics2022.sciencesconf.org/ we noticed that a lot of sofa users are manually setting SOFA_ROOT and PYTHONPATH. ; The problem is that when they are using a new version, they often forgot to update these path in their system configuration resulting in very hard to understand problems including random crashes (because runSofastarts, then try to load or use a plugin from a different sofa version which can only lead to ). We should think about some mecanisme to detect and guide users when this happens. The mecanism does not need to be bullet proof, guiding 80% of users would be already great. . Drafted suggestion on how we can do that is welcome.; On my side i think that we may have in SOFA_ROOT a file storing an unique ""token/md5 checksum"" telling which version of runSofa the plugin was compiled for and the same for every plugins. ; In case the runSofa version is different to the one stored into this file...and detect a ""wrong SOFA_ROOT"" prints a warning and use an empty SOFA_ROOT. ; Same in the plugin loader, if the runSofa unique token is not the one the plugin is expecting then prints a warning and refuse to load it.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3099:361,load,load,361,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3099,3,['load'],"['load', 'loader']"
Performance,"At the matrix assembly, @fredroy noticed that the function `assembledMappedMatrix` --> `applytJT()` is called less often thus improving performances",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1631971523:136,perform,performances,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1631971523,1,['perform'],['performances']
Performance,"Avoiding doing unnecessary duplicate operations (norm and sin()); At first, I thought the compiler (msvc in my case) would be smart enough to do it by itself while optimizing, but apparently not:. before:; ```; BM_Quat_axisToQuat/8192 106 us 85.4 us 8960; BM_Quat_axisToQuat/16384 210 us 154 us 4978; BM_Quat_axisToQuat/32768 348 us 220 us 3200; ```. after:; ```; BM_Quat_axisToQuat/8192 74.5 us 60.9 us 10000; BM_Quat_axisToQuat/16384 150 us 97.7 us 6400; BM_Quat_axisToQuat/32768 255 us 167 us 4480; ```. ----. Note: if we knew before-hand that the vec was normalized/not-null, the perf would be:; ```; BM_Quat_axisToQuat/8192 69.0 us 52.7 us 16000; BM_Quat_axisToQuat/16384 138 us 103 us 7467; BM_Quat_axisToQuat/32768 239 us 171 us 4480; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3559:164,optimiz,optimizing,164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3559,1,['optimiz'],['optimizing']
Performance,BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:2195,Load,Loaded,2195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,BaseSimulationTest::SceneInstance::LoadFromFile seems not to work,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1936:35,Load,LoadFromFile,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1936,1,['Load'],['LoadFromFile']
Performance,"Based on #2043. A new component is introduced: `ParallelBVHNarrowPhase`. As the name suggests, it is the parallel implementation of `BVHNarrowPhase`. ## Details. The broad phase provides a list of pairs of collision models. In the initial `BVHNarrowPhase` component, the list was processed sequentially. In `ParallelBVHNarrowPhase` each pair is processed in a task, which is given to a thread pool. Note that the traversal of the bounding volume hierarchy is not parallel. It is still single threaded. Due to race conditions, some operations must be done prior to the parallel tasks: . 1. Detection output creation. This operation is very time consuming (see #2047). If #2047 is merged, we can expect better results.; 2. Topology initialization. ## Results. The tested scene is `applications/plugins/MultiThreading/examples/ParallelBruteForceBroadPhase.scn` during 500 time steps. The narrow phase duration has been measured with `ParallelBVHNarrowPhase` compared to `BVHNarrowPhase`. ```; BVHNarrowPhase 3.5 ms; BVHNarrowPhase + PR#2047 2.36 ms; ParallelBVHNarrowPhase 2.1 ms; ParallelBVHNarrowPhase + PR#2047 0.97 ms; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2053:509,race condition,race conditions,509,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2053,1,['race condition'],['race conditions']
Performance,"Based on #3019, we should incorporate tests assessing stability and associated regression references for SOFA.; Traction but also compression tests should be performed.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4543:158,perform,performed,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4543,1,['perform'],['performed']
Performance,"Based on #3548 . Similar to ParallelHexahedronFEMForceField. `addDForce` and `addKToMatrix` are the parallelized functions.; `addForce` is not parallelized. It would require to duplicate code from the base class. Hence a refactoring is needed for a proper implementation (in another PR). Note that `addForce` is usually not the bottleneck. Quick benchmarks show performances improvement on the provided example. I think there is still room for improvement in `addDForce`. But it would require a few changes in the base class. Instead of having a force vector for each task, I suggest to store only the force on the DoFs that have been visited during the task. I am not sure if it will bring more perfs improvements. In this PR, `addKToMatrix` is parallelized. It is not in `ParallelHexahedronFEMForceField`, but the same principle can be applied (in another PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3552:328,bottleneck,bottleneck,328,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3552,2,"['bottleneck', 'perform']","['bottleneck', 'performances']"
Performance,"Based on ; - #3102. The autoloading libraries (plugin/module/whatever) feature was not including the ""new"" libraries (i.e Sofa.Component* ) since the fact that are neither plugin nor module (but still loadable); This PR fixes it.; Autoloading is not really recommended but a lot of scenes outside this repo relies on it implicitely. TODO: decide if autoloading should off by default (and force the users to explicitly load their own necessary libs in their scenes). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3103:201,load,loadable,201,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3103,2,['load'],"['load', 'loadable']"
Performance,"Based on ; - #4534 . Some race conditions arise in the DefautlTaskScheduler, main ones are; - usage of m_mainTaskStatus (solved with an atomic?); - start() and create_and_attach() are racing for m_taskScheduler (solved with a small change of place of affectation). Obviously, the opinion of @alxbilger about the fix in this PR would be greatly beneficial 😅 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4535:26,race condition,race conditions,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4535,1,['race condition'],['race conditions']
Performance,"Based on https://github.com/sofa-framework/sofa/pull/2399. The 2 following optimizations are introduced in MechanicalMatrixMapper:; 1) Getting the jacobians is done in a background task. An option (Data) allows the user to choose if the task is done in background or not.; 2) Reuse matrix product involved multiple times (instead of recomputing it each time it is required). The new timings of the example scene (to compare to https://github.com/sofa-framework/sofa/pull/2394):. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 48.83 558.52 52.87 16.28 52873.1 100 TOTAL; ...; 4 0.97 1 16.13 510.42 18.89 15.73 18.89 35.72 ....MBKBuild; 5 1.16 1 15.20 501.11 17.93 15.46 17.93 33.91 .....MMM-addKToMatrix; 6 1.18 1 5.92 26.88 7.26 1.67 7.26 13.74 ......stiffness; 6 8.44 1 2.84 7.27 3.59 0.62 3.59 6.78 ......copyKToEigen; 6 12.03 1 0 0 0 0 0 0 ......waitJacobian; 6 12.03 1 3.07 487.77 3.76 15.32 3.76 7.11 ......Multiplication; 7 12.03 1 2.62 479.92 3.28 15.08 3.28 6.21 .......J1tKJ1; 7 15.32 1 0.34 4.83 0.36 0.15 0.36 0.68 .......J2tKJ2; 7 15.68 1 0.09 2.57 0.09 0.08 0.09 0.18 .......J1tKJ2; 7 15.77 1 0.01 0.43 0.02 0.01 0.02 0.03 .......J2tKJ1; 6 15.79 1 2.54 5.45 2.72 0.18 2.72 5.15 ......copy; 7 15.79 1 2.50 5.38 2.68 0.18 2.68 5.07 .......J1tKJ1-copy; 7 18.47 1 0 0.01 0 0 0 0 .......J2tKJ2-copy; 7 18.48 1 0.01 0.04 0.01 0 0.01 0.03 .......J1tKJ2-copy; 7 18.49 1 0.01 0.06 0.02 0 0.02 0.04 .......J2tKJ1-copy. ```. It is still possible to go further with parallel tasks between the multiplications and the copies, but:; 1) A clean implementation would require a local thread pool (and the current implementation of thread pools does not allow that); 2) The speed up in the example scene would be negligible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2411:75,optimiz,optimizations,75,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2411,1,['optimiz'],['optimizations']
Performance,"Based on https://github.com/sofa-framework/sofa/pull/2762. Based on SuiteSparse, SparseLUSolver and SparseCholeskySolver can now apply a fill reducing permutation via SuiteSpare or METIS.; The aim of this is to reduce the number of non null values in the factorization.; I added a data d_typePermutation that allows the choice of the type of permutation used, by default it is set to None. SparseCholeskySolver is a little faster 1.59ms in avarage now against 1.84ms before (13.5% faster) on FEMBAR with the default behavior (no permutation applied).; The performances of SparseLUSolver seems to stay at the same level, or loose a little ( 0.07ms , 1% slower) on FEMBAR.; But with an adequate topology there is a significant rise of performances.; For MatrixAssembly_direct_blocs.scn :; -SparseLUSolver : ; -METIS : 26.43ms on average; -SuiteSparse : 30.76 ms on average.; against 469.64ms previously (without any fill reducing permutation). We have a speedup of 18 for METIS and of 16 for SuiteSparse. -SparseCholskySolver:; -METIS : 6.85ms; -SuiteSparse : 5.71ms; against 107.48ms previously. There is a speedup of 15 for METIS and of 19 for SuiteSparse. | _ | without FRP | with FRP | Speed |; |:-------------|:-------------:|:-------------:|:-------------:|; | SparseLUSolver<br/>+ METIS | 469.64 ms | 26.43 ms | x18; | SparseLUSolver<br/>+ SuiteSparse | 469.64 ms | 30.76 ms | x16; | SparseCholeskySolver<br/>+ METIS | 107.48 ms | 6.85 ms | x15; | SparseCholeskySolver<br/>+ SuiteSparse | 107.48 ms | 5.71 ms | x19. Related doc: https://github.com/sofa-framework/doc/pull/62; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it b",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2788:556,perform,performances,556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2788,2,['perform'],['performances']
Performance,"Based on https://github.com/sofa-framework/sofa/pull/3548. In the `addDForce` method, the parallel algorithm consists in computing a thread-specific `dF` and then combine them all in the main `dF`. It requires a synchronisation mechanism as it may create race conditions. This PR introduce an alternative method which is lock-free. It divides the model into smaller subdomains that can be solved in parallel without synchronization. Since the domains are visited sequentially (it's the elements of each domain that are visited in parallel), it comes with an overhead. Therefore, this method is particularly suited for large models where the overhead can be amortized. I have the following results on the provided example:. ```; 1000 steps ; 17775 elements (hexa). domain decomposition:; 35.1703 s ( 28.4331 FPS). naive:; 76.5666 s ( 13.0605 FPS). sequential:; 192.688 s ( 5.18974 FPS).; ```. That's right: 17k elements simulated in real-time on a laptop CPU. As a comparison with the same scene where everything is on GPU, not only the `addDForce` method of `HexahedronFEMForceField`, but also the other components:; ```; 21.7437 s ( 45.9904 FPS).; ```; with a RTX A3000 Laptop GPU; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3566:255,race condition,race conditions,255,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3566,1,['race condition'],['race conditions']
Performance,"Based on previous PR #3539 . Add methods and binding for:; - loading sofa.ini file to set resources/example path; - loading SOFA plugin given the file path; - activate/deactivate SOFA messageHandler, get the number of queued message and get the message with its priority. edit:; - Avoid using string as it can produce memory bad access from other software integration. ; - Also remove use of config.h inside SofaPhysicsAPI .h to be able to easily include it in third library. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3540:61,load,loading,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3540,3,"['load', 'queue']","['loading', 'queued']"
Performance,"Based on; - #4464. Fix ; - #4462 . This PR check the provenance of the loaded symbol, if it is consistent with the given filename of the plugin; Using the system function `dladdr()` https://man7.org/linux/man-pages/man3/dladdr.3.html. Fix the newly introduced (failing) test in #4464; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4466:71,load,loaded,71,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4466,1,['load'],['loaded']
Performance,"Basically, when i compile sofa using cmake it says that it is adding sofapython3 and it seems not to have any problems. But when i run runSofa.exe sofapython3 is not in the plugin list and i cannot open python scenes in sofa. I can't load it manually fromn the plugin manager either. I tried also to follow the guide to install python3 on github but the problem still remains.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1785018217:234,load,load,234,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4223#issuecomment-1785018217,1,['load'],['load']
Performance,"Because both SofaValidation and SofaNonUniformFem can't be plugins (aka. ""relocatable"") if we want them to be hard-linked to something. Plugins are supposed to be loaded/unloaded dynamically at run time through the PluginManager (which is already capable of parsing the plugins directory). . So we have to choose:; 1. SofaValidation and SofaNonUniformFem are plugins, we want to be able to load/unload them with PluginManager --> runSofa has to use PluginManager to load them.; 2. SofaValidation and SofaNonUniformFem are not plugins, they are libs potentially hard-linked to runSofa (or any other part of SOFA) and thus must stay in ""lib"" (in ""bin"" on Windows) --> we have to remove their ""relocatable"" attribute in CMakeLists. Personally, I already chose solution 2 in my current CMake branch (wip).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1395#issuecomment-633651499:163,load,loaded,163,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1395#issuecomment-633651499,3,['load'],"['load', 'loaded']"
Performance,"Been looking into github actions, trying to get it to do what I want... not yet really successfully, but I've got a proof of concept. Currently, I run the checks on a slave on ci.inria.fr, and the current POC does a minimalist build / install / run tests workflow. But I think it would be worth asking ourselves what the perfect CI/CD pipeline could be for SOFA & it's plugins. In my mind, I'd like this:. SOFA:; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent (consistent build environment); - generate standalone binaries, zip & upload on github pages / website (SOFA-latest / sofa-nightly build...). PLUGINS:; - load docker image, or wget binaries generated by SOFA; - build / run tests (of course...); - build documentation (doxygen, sphinx...) & deploy on github pages / readthedocs / website; - build docker image & push on docker hub or equivalent; - generate binaries, zip & upload on github pages / website; ; ADVANTAGES of github actions vs JK2:; - ALL CI/CD config centralized in a .github folder in the git repository; - NO separate tool but Github's interface; - SUPER DUPER KICKASS interface design from github, gives direct access to all logs, checks, status badges etc. for each workflow / job / step in the Github checks processes. ![plop2](https://user-images.githubusercontent.com/13734391/69730387-3e4fc280-1128-11ea-8f91-20eeb660d233.png). DISADVANTAGES:; - Still in beta (some bugs noticed, especially when running in self-hosted slaves...); - A lot to recode given what @guparan did in JK2; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatib",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1225:752,load,load,752,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1225,1,['load'],['load']
Performance,"Better fix to handle texture coordinate update during topological changes. ; The problem was coming from updating the data from parent Data (from Loader/engine) during the changes. ; Instead of breaking the ""parentship"", the topology callback has been changed to avoid calling updateIfDirty during the changes. This PR combine with the #2414 will; fix #2392 ; Add safeguard in the scene to avoid topologicalChanges which are not handled by TextureInterpolation; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2415:146,Load,Loader,146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2415,1,['Load'],['Loader']
Performance,Bon pour le load onDemand je vote pour toi au SofaAward :),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1181#issuecomment-540589933:12,load,load,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1181#issuecomment-540589933,1,['load'],['load']
Performance,"Build failing on MacOS (the only config with MeshSTEPLoader plugin enabled):; ```text; /Volumes/Jenkins/workspace/sofa-framework/PR-2095/mac_clang-3.5_options_release/src/applications/plugins/MeshSTEPLoader/MeshSTEPLoader.cpp:60:45: error: use of undeclared identifier 'm_filename'; did you mean 'd_filename'?; dmsg_info() << ""Loading STEP file: "" << m_filename;; ^~~~~~~~~~; d_filename; /Volumes/Jenkins/workspace/sofa-framework/PR-2095/mac_clang-3.5_options_release/src/SofaKernel/modules/SofaCore/src/sofa/core/loader/BaseLoader.h:53:31: note: 'd_filename' declared here; objectmodel::DataFileName d_filename;; ^; /Volumes/Jenkins/workspace/sofa-framework/PR-2095/mac_clang-3.5_options_release/src/applications/plugins/MeshSTEPLoader/MeshSTEPLoader.cpp:65:28: error: use of undeclared identifier 'm_filename'; did you mean 'd_filename'?; const char* filename = m_filename.getFullPath().c_str();; ^~~~~~~~~~; d_filename; /Volumes/Jenkins/workspace/sofa-framework/PR-2095/mac_clang-3.5_options_release/src/SofaKernel/modules/SofaCore/src/sofa/core/loader/BaseLoader.h:53:31: note: 'd_filename' declared here; objectmodel::DataFileName d_filename;; ^; /Volumes/Jenkins/workspace/sofa-framework/PR-2095/mac_clang-3.5_options_release/src/applications/plugins/MeshSTEPLoader/MeshSTEPLoader.cpp:70:71: error: use of undeclared identifier 'm_filename'; did you mean 'd_filename'?; msg_error() << ""Error: MeshSTEPLoader: Cannot read file '"" << m_filename << ""'."";; ^~~~~~~~~~; d_filename; /Volumes/Jenkins/workspace/sofa-framework/PR-2095/mac_clang-3.5_options_release/src/SofaKernel/modules/SofaCore/src/sofa/core/loader/BaseLoader.h:53:31: note: 'd_filename' declared here; objectmodel::DataFileName d_filename;; ^; 3 errors generated.; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2095#issuecomment-843142727:327,Load,Loading,327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2095#issuecomment-843142727,4,"['Load', 'load']","['Loading', 'loader']"
Performance,But is there something wrong about using RAII to perform the init automatically?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280644060:49,perform,perform,49,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280644060,1,['perform'],['perform']
Performance,But we want PSL.dll to be loaded as a path and not as a name.; I think we should replace the whole test by a simple `if (plugin.find(dotExt) != std::string::npos)`,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/617#issuecomment-376457490:26,load,loaded,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/617#issuecomment-376457490,1,['load'],['loaded']
Performance,"By adding an optional geometrical template for mesh-based masses. Merely a refresh version of the previously closed PR ; - https://github.com/sofa-framework/sofa/pull/2476. In the end, it is just easier to add a template to manage geometrical data retrieval.; Also, some cleaning and easy optimizations in the diffusion to compute a little faster. Toward a green CI 🚀; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2798:289,optimiz,optimizations,289,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2798,1,['optimiz'],['optimizations']
Performance,"By default, runSofa loads a bunch of plugins automatically, based on a list found in a file.; If runSofa is run with the option `noautoload`, a lot of scenes cannot be loaded correctly because of missing plugins.; Right now, runSofaGLFW does not have the automatic load of plugins based on the file, like runSofa. So it's very annoying to work with runSofaGLFW.; I would like a discussion on the following points:. 1. Correction of all scenes, in Sofa and in the maintained plugins, with the correct RequiredPlugin list. Can it be automatic, or at least a part of the process?; 2. Must runSofaGLFW load plugins automatically?; 3. Must the CI execute the scene with the option `noautoload`?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2818:20,load,loads,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2818,4,['load'],"['load', 'loaded', 'loads']"
Performance,C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5306,Load,Loaded,5306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"CImgData.h only contains classes and things related to the image plugin.; Thats why it seems more consistent to move this file directly into the image plugin. Moreover, it had a non-met (soft) dependency on SofaBaseVisual (as there is no cpp, and it is only used by the image plugin, this was not an issue before). IMO, CImgPlugin should be only a plugin:; - introducing the cimg library; - using cimg, allowing loading various picture file format (jpg/png, etc). I added some includes here and there as well. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2307:412,load,loading,412,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2307,1,['load'],['loading']
Performance,Can someone check & merge this quickly I would like to use it to optimize the windows builds time. [EDIT] I typed to fast :) it will work on windows but does not with visual 2015,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/141#issuecomment-275114184:65,optimiz,optimize,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/141#issuecomment-275114184,1,['optimiz'],['optimize']
Performance,"Change an error message into a warning in MeshVTKLoader due to new metadata not handled, but files are well loaded; Fix #652 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1037:108,load,loaded,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1037,1,['load'],['loaded']
Performance,"Change the default plugins. Make multi-thread compiled by default, and removed cimg default. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4322:33,multi-thread,multi-thread,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4322,1,['multi-thread'],['multi-thread']
Performance,Class already registered: ProjectToPlaneConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec1d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec6d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/ser,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:24436,Load,Loaded,24436,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,Class already registered: StiffSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: PolynomialSpringsForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [WARNING] [ObjectFactory] Class already registered: PenalityContactForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [WARNING] [ObjectFactory] Class already registered: LineCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PointCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TriangleCollisionModel<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [WARNING] [ObjectFactory] Class already registered: MeshOBJLoader; [WARNING] [ObjectFactory] Class already registered: MeshVTKLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [WARNING] [ObjectFactory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:12252,Load,Loaded,12252,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"Cleaning and refactoring in BarycentricMapping (only for topology container). _description from comment below:_. Sure, sorry. So I wanted to optimize the initialization of BarycentricMapping, see issue #784 for clear description of the problem. . To avoid more duplication of code, and to allow the optimization to be available for a maximum of topology types, I needed the code to be refactored. . So:. 1. I created an abstract class (BarycentricMapperTopologyContainer) that gather the shared implementations of BarycentricMapperEdgeSetTopology, BarycentricMapperTriangleSetTopology, BarycentricMapperQuadSetTopology, BarycentricMapperTetrahedronSetTopology, and BarycentricMapperHexahedronSetTopology. 2. Enabeling to refactor the apply(), applyJ(), applyJT(), getJ(), draw() functions and more importantly the function I want to optimize, init(). The PR also include some cleaning, in particular the renaming of variables. That could indeed break not updated code. . What I couldn't do, is to also refactor the code of BarycentricMapperMeshTopology... ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/797:141,optimiz,optimize,141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/797,3,['optimiz'],"['optimization', 'optimize']"
Performance,Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Comp,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:2120,Load,Loaded,2120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:196; #14 0x7fc3002430a2 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::processExternalCell(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::CollisionModel*&, sofa::core::CollisionModel*&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, sofa::component::collision::detection::algorithm::MirrorIntersector*, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) const /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:176; #15 0x7fc3002428a4 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::addCollisionPair(std::pair<sofa::core::CollisionModel*, sofa::core::CollisionModel*> const&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algori",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:31835,queue,queue,31835,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['queue'],['queue']
Performance,"Coming from [Mei remark on the forum](https://www.sofa-framework.org/community/forum/topic/image-viewer-in-image-plugin/). - Add the automatic loading of the image_gui library when the plugin image is loaded (if the library is well there); - Add formating in associated CMakeLists. With the correct loading of image_gui, now the ImagePlaneWidget will work fine when opening a ImageViewer component. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1015:143,load,loading,143,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1015,3,['load'],"['loaded', 'loading']"
Performance,"Compared to other FEM force fields, `HexahedronFEMForceField` did not have the `addKToMatrix` optimization for bloc matrices. This PR adds it. It also changes the template type of the Conjugate Gradient in the following scenes:. - examples/Demos/caduceus.scn; - examples/Components/forcefield/HexahedronFEMForceField.scn. It changes from a matrix-free CG to an assembled bloc matrix CG, but it is faster in the case of the 2 scenes. About +50 FPS in the GUI for both scenes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2240:94,optimiz,optimization,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2240,1,['optimiz'],['optimization']
Performance,Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Co,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:7773,Load,Loaded,7773,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"Computational Dynamic Liver Model with SOFA Framework During my internship I have to create an average liver model that can react to external forces in a realistic way. My idea has been divided into several operational steps:. selection of a database of N target livers and 1 template liver; rigid registration of the template for each target followed by a non-rigid registration using the ""Thin Plate Spline"" method; calculation of the ""Principal Component Analysis"" to reduce the size of the livers to their eigenvalues ​​and eigenvectors; removal of outliers; with the remaining livers, use SOFA framework in order to calculate a stiffness matrix for each liver; perform an average stiffness matrix that will regulate the behavior of my average liver; I am having problems writing the code on SOFA Framework, in particular:. build a liver that behaves inside the volume as TetrahedralCorotationalFEMForceField and behaves on the surface as TriangularBendingSprings i.e. as the Glisson capsule.; be able to apply 3 generic forces: 1 compression 1 traction 1 cut binding the entire posterior part of the liver. ```python; import Sofa; import numpy as np; from scipy import sparse; from scipy import linalg; import numpy as np; from matplotlib import pyplot as plt. USE_GUI = True; exportCSV = True; showImage = False. def main():; import SofaRuntime; import Sofa.Gui. root = Sofa.Core.Node(""root""); createScene(root); Sofa.Simulation.init(root). if not USE_GUI:; for iteration in range(10):; Sofa.Simulation.animate(root, root.dt.value); else:; Sofa.Gui.GUIManager.Init(""myscene"", ""qglviewer""); Sofa.Gui.GUIManager.createGUI(root, __file__); Sofa.Gui.GUIManager.SetDimension(1080, 1080); Sofa.Gui.GUIManager.MainLoop(root); Sofa.Gui.GUIManager.closeGUI(). def createScene(root):; root.gravity=[0, -9.81, 0]; root.dt=0.02. root.addObject(""RequiredPlugin"", pluginName=[; 'Sofa.Component.Collision.Detection.Algorithm',; 'Sofa.Component.Collision.Detection.Intersection',; 'Sofa.Component.Collision.Geom",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4861:666,perform,perform,666,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4861,1,['perform'],['perform']
Performance,Computing bounding boxes can have a non trivial runtime cost. In fact it's one of the first things we disable in our simulations to gain up to 5%. So if it is added in more components it should be done in a way that is transparent in term of performances (such as computed on the first iteration only by default).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/29#issuecomment-251075920:242,perform,performances,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/29#issuecomment-251075920,1,['perform'],['performances']
Performance,"ConstantSparsityPatternSystem relies on the assumption that the sparsity pattern of the mechanical matrix is constant. If the pattern is not constant, the component crashes.; This PR introduces a verification that the pattern follows the initial pattern. In case of a mismatch, an error is emitted and the insertion is skipped. This allows the simulation not to crash and inform the user. However, this behavior is available only if `checkIndices` is enabled. It is disabled by default because the check is time consuming, and the goal of this component is performance-oriented. To illustrate the new behavior, one can test the following scene:. ```xml; <Node name=""root"" dt=""0.02"" gravity=""0 -10 0"">; <Node name=""plugins"">; <RequiredPlugin name=""Sofa.Component.Constraint.Projective""/> <!-- Needed to use components [FixedProjectiveConstraint] -->; <RequiredPlugin name=""Sofa.Component.Engine.Select""/> <!-- Needed to use components [BoxROI] -->; <RequiredPlugin name=""Sofa.Component.LinearSolver.Direct""/> <!-- Needed to use components [EigenSimplicialLDLT] -->; <RequiredPlugin name=""Sofa.Component.LinearSystem""/> <!-- Needed to use components [ConstantSparsityPatternSystem] -->; <RequiredPlugin name=""Sofa.Component.Mass""/> <!-- Needed to use components [UniformMass] -->; <RequiredPlugin name=""Sofa.Component.MechanicalLoad""/> <!-- Needed to use components [PlaneForceField] -->; <RequiredPlugin name=""Sofa.Component.ODESolver.Backward""/> <!-- Needed to use components [EulerImplicitSolver] -->; <RequiredPlugin name=""Sofa.Component.SolidMechanics.FEM.Elastic""/> <!-- Needed to use components [HexahedronFEMForceField] -->; <RequiredPlugin name=""Sofa.Component.StateContainer""/> <!-- Needed to use components [MechanicalObject] -->; <RequiredPlugin name=""Sofa.Component.Topology.Container.Grid""/> <!-- Needed to use components [RegularGridTopology] -->; <RequiredPlugin name=""Sofa.Component.Visual""/> <!-- Needed to use components [VisualStyle] -->; </Node>. <VisualStyle displayFlags=""showBeha",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4428:557,perform,performance-oriented,557,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4428,1,['perform'],['performance-oriented']
Performance,"Correction of the import of the queue library so that it can work with python3. The import and use of the queue library has changed between python2 and python3.; I updated it to use it in python3. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2572:32,queue,queue,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2572,2,['queue'],['queue']
Performance,Could be useful to check the performance between e.g HexahedronFEMForceFieldAndMass and HexahedronFEMForceField + (one) Mass,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3901#issuecomment-1564272355:29,perform,performance,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3901#issuecomment-1564272355,1,['perform'],['performance']
Performance,"Could not load CGALPlugin.dll, although present.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:10,load,load,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['load'],['load']
Performance,Currently in Sofa there is no real dedicated toolbox for geometrical operation. . So I made this (very) drafted module with an emphasize on having a simple API instead of performances. Ideally it should use algorithm that are already implemented in Sofa otherwise it fallback to third party library or custom implementation. ; ; There is tests on the c++ side.; There is a python binding (made with cython) as an independent module (not using the SofaPython). ; There is tests for this python binding. ; The python part is documented with docstrings. . Feedback & Contribution welcome. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/747:171,perform,performances,171,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/747,1,['perform'],['performances']
Performance,"Currently in Sofa we aren't catching any exceptions. . The consequence is that every exception propagates to the top level exception handler halting the application. ; Un-handled exception are useful to detect bugs but this is a non-sense to use such top level handler to process possible application errors like failure to load a plugin or a scene. . A good approach should be that any exception that can be fixed without editting the source code (ie. but by editting the scene or changing some system configuration and so on) should ends with a gracefull error message indicating to the user how to fix the error cause. To implement this I suggest to:; - add a close to top-level try/catch block around simulations/plugin actions; - add a SofaSimulationException that has an error message, the component that emitted it and can have a backtrace as well as a top level reactions to do (eg: set componentstate to invalid and stop simulation). We should also use this SofaSimulationException at any place we are using msg_error(). ; (Actually it could even make sense to replace the msg_error macro by throwing the exception). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2344:324,load,load,324,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2344,1,['load'],['load']
Performance,Currently loader and components that are working with files does not report loading problem ; in a consistent way. . This is bad for both the sofa users and the developers. . So I suggest to make a set of macro (or helper function) that returns the text for the most common scenarios.; Eg of use; ```cpp; msg_error_when( ! file.open() ) << helper::message::UnableToOpenFile(file) ; ; ```. If you have other thinking or solution please share !,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/197:10,load,loader,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/197,2,['load'],"['loader', 'loading']"
Performance,"Currently the icons in the scene graph are not reflecting the real state of the corresponding component's message log because the icons are set at scene loading and not updated after. This rise consistency issues for dynamic scene which adds at run-time new messages to component's log (see the example below where the messages is emitted on key pressed. . This is a follow up of PR #2398 . The PR produce the expected behavior with this kind of scene; ```python; import Sofa. class MyC(Sofa.Core.Controller):; def __init__(self, *argv, **kwargs):; Sofa.Core.Controller.__init__(self, *argv, **kwargs); self.node = kwargs.get(""target""); ; def onKeypressedEvent(self, event):; Sofa.msg_info(self, ""Info message in the component""); Sofa.msg_error(self.node, ""Error message in the target's node""). def createScene(root):; root.addChild(""Child1""); root.addObject(MyC(name=""Dmaien"", target=root.Child1)); ```. NB: I have considered having a Data<queue<Message>> but given how is implemented Data I need to provide << and >> operator which does not have real sense in this scenario. ; ______________________________________________________; By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3027:153,load,loading,153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3027,2,"['load', 'queue']","['loading', 'queue']"
Performance,"Currently when object are unable to be created there is no filename/line information on where the problem come from. . In this PR I implemented the missing <<operator in messaging.h to report those line number. ; Now you can write: ; ```cpp; msg_info() << SOFA_FILE_INFO_COPIED_FROM(""myPythonFile.py"", 4) << ""blah balh"" ; ```; To have the file name & line number associated in the message emitting information. If you don't the emitting information will be the source code file&line location. . If updated the xml load to take this feature into account. ; The python loader is updated in the PR #304 . ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/314:514,load,load,514,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/314,2,['load'],"['load', 'loader']"
Performance,"Dear @alxbilger dear @epernod ; I'm wondering why did you ""savagely"" removed our work, and I'm writing to know what are the alternatives to this function? If there is no other solution to perform this critical operation, I'd like to know how many messages should we send to justify that a code is needed and should not be ""savagely"" removed?. To answer your question @epernod, yes this function was indeed written for topological changes, but on the mechanical side (not geometrical). Indeed, independently of the method that you use for topological modifications, you will need to recompute your mechanical matrices. Since you don't know which forcefield is used in your scene you cannot put that directly in a plugin. I guess that without this function you have to call reinit of your forcefield (assuming that the function is correctly implemented). However, there are many cases where these topological modifications only change some elements and not the entire mesh (there are many papers that describe this point on the web if you are interested...). In this case, the reinit method will be very expensive for nothing! I'm sure you are aware that sofa is designed for real-time, so we have to provide a solution to only compute the elements that are modified. . In conclusion, if you combine the fact that you don't know the underlying forcefield and you want to recompute only subpart of Ke elements, you may think that it would be a great idea to have a method in BaseForcefield where you can specify which Ke you want to compute. This is precisely the goal of this function !. The question now is what is the alternative solution? I'm sure that the consortium does not ""savagely"" remove the work of other people without thinking of alternative solutions, especially if the same person has already discussed the need for this method in this PR :). Waiting for answers, I have a student that is stuck on this problem for one week on this point. . Hadrien.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2244#issuecomment-1170880124:188,perform,perform,188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2244#issuecomment-1170880124,1,['perform'],['perform']
Performance,"Dear @bakpaul,; I tried to set the option `d_keepOrientDiff` but, after doing some shenaningans because the Data is protected, setting this Data to true make it crashes when trying to apply the Constraint. 🫨; Note that this may be related on the fact that the Beam is modeled with BeamAdapter... So I let it to false for the moment 😅. --- ; Here it the backtrace (on mac) if the option is to ""true"":; ```; Thread 0 Crashed:: Dispatch queue: com.apple.main-thread; 0 libSofa.Component.Constraint.Lagrangian.Model.24.12.99.dylib	 0x10693b764 void sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraintSpecialization<sofa::component::constraint::lagrangian::model::RigidImpl>::getConstraintViolation<sofa::defaulttype::StdRigidTypes<3u, double>>(sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint<sofa::defaulttype::StdRigidTypes<3u, double>>&, sofa::core::ConstraintParams const*, sofa::linearalgebra::BaseVector*, sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint<sofa::defaulttype::StdRigidTypes<3u, double>>::DataVecCoord const&, sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint<sofa::defaulttype::StdRigidTypes<3u, double>>::DataVecCoord const&, sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint<sofa::defaulttype::StdRigidTypes<3u, double>>::DataVecDeriv const&, sofa::component::constraint::lagrangian::model::BilateralLagrangianConstraint<sofa::defaulttype::StdRigidTypes<3u, double>>::DataVecDeriv const&) + 732; 1 libSofa.Core.24.12.99.dylib 	 0x10a09ee30 sofa::core::behavior::PairInteractionConstraint<sofa::defaulttype::StdRigidTypes<3u, double>>::getConstraintViolation(sofa::core::ConstraintParams const*, sofa::linearalgebra::BaseVector*) + 704; 2 libSofa.Component.Constraint.Lagrangian.Solver.24.12.99.dylib	 0x10582a334 sofa::component::constraint::lagrangian::solver::MechanicalGetConstraintViolationVisitor::fwdConstraintSet(sofa::simulation::Node*",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4801#issuecomment-2235707272:434,queue,queue,434,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4801#issuecomment-2235707272,1,['queue'],['queue']
Performance,"Dear @damienmarchal . I had a typo in my original issue, it was 17.12. I have pulled from the stable branch of the GIT repository and built from source of 17.12 on Ubuntu 14.04. I have also reproduced this issue by building 17.02 from source using Ubuntu 18.04. Although this issue is present in the ""Modeler"" binary, I find I am able to edit the vector fields if I load the .scn from the ""RunSofa"" binary. Thank you for looking at this.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/686#issuecomment-397129076:366,load,load,366,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/686#issuecomment-397129076,1,['load'],['load']
Performance,"Dear @faichele ,. Following the SOFA dev meeting 25/01/2017.; Multi-threading plugin proposed by @faichele. Your new plugin implements a static scheduling for collision detection. The implementation does not require any change of the existing collision components of SOFA. The bounding volume hierarchy methods is parallelized. It should be easy to use. Compared to the approach used in the MultiThreading plugin using the ""work-stealing"" scheduling pattern (https://en.wikipedia.org/wiki/Work_stealing), Fabian's implementation is based on ""conventional"" work-sharing, with a ""round-robin"" assignment of collision pair checks per thread. One extension is the fact that worker threads are persistent: they do not terminate after processing all assigned tasks, and no new threads are spawned when new collision pair check tasks are added to the thread pool. Instead, worker threads enter a ""sleeping"" state to avoid using CPU cycles when no tasks are processed. This avoids unnecessary respawning of threads every 10 to 50 ms, since the collision detection is typically called very often and in quick succession. @faichele , you mentioned it will be released under open-source license and with standalone for beta testing. Tests on potential performance gains remain to do (number of per checks).; Do not hesitate to correct me. In the context of the recent coding sprint, some new feature around multithreading were added in a branch ( https://github.com/sofa-framework/sofa/tree/issofa_multithreading ), not merged yet. This should be discussed and merged at the upcoming STC. @JeremieA , would you agree to prepare a short illustration/explanation of the API changes of your multithreading feature branch?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-275074830:62,Multi-thread,Multi-threading,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-275074830,2,"['Multi-thread', 'perform']","['Multi-threading', 'performance']"
Performance,"Dear SOFA community and @sofa-framework/reviewers,. As you know, one of our main objectives is currently to propose a major evolution of SOFA: this is the project ""SOFA-NG"", standing for Next Gen. ; Let us give you some insight about the final plan and the steps to reach these objectives. Any feedback is welcome. ## Objectives. The final objective of SOFA-NG is to refactorize the current (non-core) modules and components by moving them into plugins. It will permit to:; - compile and load only the necessary modules; - clean all dependencies in SOFA; - help focusing the work of validation/verification/doc/test on specific codes; - improve the packaging of codes; - ease understanding the API of SOFA for new users. ## Steps of implementation. Our concerns; - Focus on non-core components only; - Make the transition as smooth as possible; - Keep the history. Steps to follow; - Propose an architecture and a folder structure; - Decide a place for each component (incrementally); - Create the folder structure in SOFA plugins directory; - Pluginize one by one the components towards their new place. Note that this project; - will be documented, scripts will be provided to help the transition in plugins; - is compatible (can be run in parallel) with the deprecation task. ## Proposed structure. ~~https://annuel2.framapad.org/p/sofang-v0~~; EDIT: latest proposal: https://annuel2.framapad.org/p/sofang-v3. As you can see the structure is quite similar to the old namespace structure of SOFA. ; Feel free to edit/comment this pad or to propose your own version.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543:488,load,load,488,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543,1,['load'],['load']
Performance,"Dear all,. I used a deliberately provocative title to start a friendly technical discussion about the way `Data` are initialized. As of now, `Data` constructors potentially incur a non-negligible overhead per component created, and it is unclear why users should have to pay for (at least some of) it. The overhead can get pretty large as many components are created (think of contacts, for instance), so I hope this discussion will clarify what is really needed and what can be optimized away. The current way to initialize member `Data` in a component is to do something like:. ``` c++; MyComponent() ; : my_data( initData(&my_data, init_value, ""friendly name"", ""help message"") ) { ; // ...; }; ```. At this point one can remark that most information provided to `initData` depends on the component _class_, and not on the component _instance_ being constructed, save for the initial value and the pointer to the current instance (used by the data as its 'owner'). . Now what happens when the data is constructed using `initData`?; 1. some `BaseInitData` objet is created, mostly holding pointers to character strings and owner,; 2. `BaseData` is constructed from `BaseInitData` (`BaseData.cpp:70`) where the following happens:; 1. data links for `inputs` and `outputs` are setup, 2x `std::vector::push_back`; 2. data are added back to their owner (from which they come anyway) 1x `std::vector::push_back` + 1x `std::map::insert` for aliases. There is also the `DDGNode` base class initialization, which also incurs at least `initLink` for members `inputs` and `outputs` (cf `DDGNode.cpp:43`), each again causing `addLink` back to the owner and an extra `std::vector::push_back`. Phheew. Now you probably see where I am heading at: do we really need to pay a worst case 6x heap allocation for every single data in every single component created? Or at least, can this cost be alleviated somehow?. **Are there component examples that manage `Data` which are not known at compile-time ?**. If most/all",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44:479,optimiz,optimized,479,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44,1,['optimiz'],['optimized']
Performance,"Did some more digging. In the code above `texcoords=loader.texcoords,` is not valid, because the loader did not actually read any data yet. ![image](https://user-images.githubusercontent.com/29635054/172406384-33d329ef-0de6-42a3-8624-287b87d443e9.png). Changing it to; ```; loader = visual_node.addObject(; ""MeshOBJLoader"",; filename=""mesh.obj"",; handleSeams=True,; ). loader.init(). visual_node.addObject(; ""OglModel"",; texcoords=loader.texcoords,; texturename=""texture.png"",; ); ```. fixed the issue. Is this still valid behavior?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3012#issuecomment-1148756004:52,load,loader,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3012#issuecomment-1148756004,5,['load'],['loader']
Performance,Did you test a scene with a loader below (in the scene file order) a MechanicalObject or Topology ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2094#issuecomment-842953279:28,load,loader,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2094#issuecomment-842953279,1,['load'],['loader']
Performance,"DirectoryPath(sofa_prefix + ""/screenshots""). Sofa.GUIManager.init(""qglviewer""); Sofa.GUIManager.createGUI(); Sofa.GUIManager.setDimension(800, 600); Sofa.GUIManager.setScene(root). Sofa.GUIManager.MainLoop(root). Sofa.GUIManager.closeGUI(); ```; ### What else this PR brings. **Plugin manager**; One of the problem arising from this feature is the duplicated loading of the python plugin: when issuing the `import Sofa` command in the python script the interpreter loads the library (SofaPython.so). If the script explicitly calls the `Sofa.loadPlugin(""SofaPython"")` command, Sofa's PluginManager will load again the same library. Example of a faulty script:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:3054,load,loading,3054,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['load'],['loading']
Performance,Disabling a plugin and reconfiguring does not remove the plugin from plugin_list.conf. When writing plugin_list.conf (see runSofa CMakeLists) we use `__GlobalTargetList__` and `__GlobalTargetNameList__` global variables but these variables are based on CMake cache.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/632:259,cache,cache,259,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/632,1,['cache'],['cache']
Performance,"Discussion on the improvement of FE codes in SOFA, Caribou plugin etc.; Clarifying the FEM codes is really good, using utility classes (static functions) can help the reading, understanding of the physical model. The loss of performance in addDForce must be investigated; → keep wip",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2550#issuecomment-1010907207:225,perform,performance,225,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2550#issuecomment-1010907207,1,['perform'],['performance']
Performance,Do everyone agrees on having the conditions I moved up into the NVI VisualModel::drawVisual() and with the one I added into the VisualVisitor ? . Eg: ; ```cpp; void VisualModel::drawVisual(const VisualParams* vparams); {; // don't draw if specified not to do so in the user interface; if (!vparams->displayFlags().getShowVisualModels()); return;. // don't draw if the component is not in valid state (we can change the condition so Loading/Unknow states are drawn differently) ; if( d_componentState.getValue() == sofa::core::objectmodel::ComponentState::Invalid ); return;. // don't draw if this component is specifically configured to be disabled (It is questionnable to have a data for that). ; // having a d_enable on Base would be better. ; if (!d_draw.getValue()); return;. // RAI to be sure the states changed during the rendering don't leaks ; const auto stateLifeCycle = vparams->drawTool()->makeStateLifeCycle();. doDrawVisual(vparams);; }; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3931#issuecomment-1592550546:432,Load,Loading,432,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3931#issuecomment-1592550546,1,['Load'],['Loading']
Performance,Do this means that the meshes loader will not read the textures correctly if the plugin is not loaded ? ; For coherency I thinkg the loader should be transformed into plugin as well with a dependency to the ; CImagePlugin. . Just a small side note... on the CI it seems that to fully function CImage requires imagemagick or graphicsmagick to be installed and available in the path on the machine...is it an annoying dependency ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/9#issuecomment-305157679:30,load,loader,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/9#issuecomment-305157679,3,['load'],"['loaded', 'loader']"
Performance,Double mechanism to load plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3147:20,load,load,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3147,1,['load'],['load']
Performance,During the STC13 it was discussed different approach to have a single source for documentation. ; The consensus was to rely on doxygen code comment to have:; - the API documentation. ; - the 'in application' documentation/component descriptions/data's help string (thus replacing the ; - a user doc for all components. . Different work flow where considered but all of them mostly rely on generating the doxygen <xml> documentation then use this one to generate the in-code documentation. ; The two alternative where: ; - generate from the <xml> documentation to automatically generate a file eg: component_doc.h and use that to fill the object factory. In that case the documentation is compiled with the application. ; - generate from the <xml> documentation json file from which the documentation can be loaded at run-time.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3013:807,load,loaded,807,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3013,1,['load'],['loaded']
Performance,"During the meeting several point were identified as open question. . One proposed approach was to implement automatic loading of plugins when a component is ; called in the scene.; An alternative approach was to make it more explicit in the form of ; <RequiredPlugin ='sofaAll'/>. Which would required to create kind of ""packages"" of plugins (maybe all the plugin in a directory?). Then is how to we handle backward compatibility or help users during the transition.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/128#issuecomment-271829255:118,load,loading,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/128#issuecomment-271829255,1,['load'],['loading']
Performance,"Embedded external libs (DiffLib, Json and STB) rely on cmake variables (resp. DIFFLIB_ROOT, JSON_ROOT and STB_ROOT) as HINTS / PATHS for find_path() in their respectives cmake find modules (FindDiffLib.cmake, FindJson.cmake and FindSTB.cmake). ; If CMAKE_FIND_ROOT_PATH is set (typically the case when cross-compiling and for my concerns when building a Conda package for Sofa), default behavior is to prepend all contained paths to the search performed by the find_path() calls. But as the *_ROOT variables are set with absolute paths, the search for these embedded libs will typically fail. ; This PR disables the use of CMAKE_FIND_ROOT_PATH for these libs. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3870:444,perform,performed,444,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3870,1,['perform'],['performed']
Performance,Enforcing python module reload (to use their eventual modifications). Note it could easily be added manually to the scene we are working on rather than doing it automatically at each scene loading. Based on @damienmarchal code!!!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old.; - [x] #204 is merged. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/202:189,load,loading,189,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/202,1,['load'],['loading']
Performance,"Error message was already fired if mesh file is not found. This PR just avoid the crash at init.; Only add some check in the finest level and set it to invalid if topology is not loaded.; Then propagate the invalid status to the higher level. fix #4162 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4164:179,load,loaded,179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4164,1,['load'],['loaded']
Performance,"EulerExplicitSolver has a Data, called d_optimizedForDiagonalMatrix, which can be set by the user. However, the information about the diagonal property of the mass matrix is already known by the mass component. EulerExplicitSolver can use this information instead of asking the user. The optimization for diagonal matrices would be automatic depending on the mass component used. See https://github.com/sofa-framework/sofa/pull/1903",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1921:288,optimiz,optimization,288,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1921,1,['optimiz'],['optimization']
Performance,Everything seems OK; ```; ciosx:build ci$ time ./bin/MultiThreading_test; [INFO] [PluginManager] Loaded plugin: /Volumes/Jenkins/workspace/sofa-framework/PR-727/mac_clang-3.5_options_release/build/lib/libSofaMiscCollision.dylib; [INFO] [PluginManager] Loaded plugin: /Volumes/Jenkins/workspace/sofa-framework/PR-727/mac_clang-3.5_options_release/build/lib/libSofaAllCommonComponents.dylib; [INFO] [PluginManager] Loaded plugin: /Volumes/Jenkins/workspace/sofa-framework/PR-727/mac_clang-3.5_options_release/build/lib/libSceneCreator.dylib; [==========] Running 4 tests from 1 test case.; [----------] Global test environment set-up.; [----------] 4 tests from TaskSchedulerTests; [ RUN ] TaskSchedulerTests.FibonacciSingle; [ OK ] TaskSchedulerTests.FibonacciSingle (15 ms); [ RUN ] TaskSchedulerTests.FibonacciMulti; [ OK ] TaskSchedulerTests.FibonacciMulti (20 ms); [ RUN ] TaskSchedulerTests.IntSumSingle; [ OK ] TaskSchedulerTests.IntSumSingle (47 ms); [ RUN ] TaskSchedulerTests.IntSumMulti; [ OK ] TaskSchedulerTests.IntSumMulti (68 ms); [----------] 4 tests from TaskSchedulerTests (150 ms total). [----------] Global test environment tear-down; [==========] 4 tests from 1 test case ran. (150 ms total); [ PASSED ] 4 tests. real 0m3.061s; user 0m0.551s; sys 0m0.159s; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/727#issuecomment-408800487:97,Load,Loaded,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/727#issuecomment-408800487,3,['Load'],['Loaded']
Performance,"Example scenario [scene.txt](https://github.com/sofa-framework/sofa/files/2894540/scene.txt). Result is not physically plausible. Points of junction seem to be “heavier” than the others. They then gain speed, and the whole thing turn into a windmill. No crash.; You can compare the results using the commented section in the scenario of the initial post (section # This does not work / # Works). Log does not provide any useful information other than INFO messages (loaded plugins, etc). Problem exist both on master and 0057a0cfd3d3fb6b9b3cdb00ca22eae4c17ae384 (So before latest refactor of AttachConstraint).; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/940:466,load,loaded,466,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/940,1,['load'],['loaded']
Performance,FO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.Contact.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.Response.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Co,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:9255,Load,Loaded,9255,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,FO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:3720,Load,Loaded,3720,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,FO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; ,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9188,Load,Loaded,9188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,FO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Components/Components.py ; ModuleNotFoundError: No module named 'Sofa.Components'. At:; Components.py(4): <module>; <frozen importlib._bootstrap>(219): _call_with_frames_removed; <frozen importlib._bootstrap_external>(783): exec_module; <frozen importlib._bootstrap>(686): _load_unlocked; <frozen importlib._bootstrap>(702): _load; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(171): load_source; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:2994,load,loaded,2994,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['load'],['loaded']
Performance,FO] [runSofa] GuiDataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/applications/projects/runSofa/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bi,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1556,Load,Loaded,1556,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"FYI, in the bench, this function is called 7938654120 (~8e9) times. 😵 ; So I guess even the slightest optimization has a noticeable effect...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1237539491:102,optimiz,optimization,102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1237539491,1,['optimiz'],['optimization']
Performance,"FYI, the decision back in the sofa coding sprint of June 2014 (as fas as I remember), was to remove all `*GridTopology`, in favor of a new design based on `*GridLoader` or `*GridEngine` types of components. A workgroup worked on this topic during the sprint. The associated branch may or may not still exist, but unfortunatly it was not completed and merged back. The rational however is still valid, the current design of those topologies introduce many complexities that are not providing a lot of value, given how rarely then end-up being used, outside of quick and useful examples, but for which the performance gain (if any) of using these grids directly instead of using `MeshTopology` or `HexahedronSetTopologyContainer` does not really matter. So in term of maintenance it seems more practical to remove them completely from the codebase, once we have a usable (and simpler) alternative in place.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/162#issuecomment-281638098:604,perform,performance,604,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/162#issuecomment-281638098,1,['perform'],['performance']
Performance,"Factorize all compatibility code in the SofaFramework (GL, Helper, Defaulttype, Core) into a common module, to simplify maintainability. For now, it is forcefully loaded for all the modules, as no code has been ported to the new architecture yet. In the future, this module should be optional (and its inclusion in an other cmake file in a module/ directory for example). (out-of-tree configuration tested with SofaPython3); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1944:163,load,loaded,163,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1944,1,['load'],['loaded']
Performance,"Finally, the optimization in https://github.com/sofa-framework/sofa/pull/4490/commits/1b04773332dafddffec28402bce7a4dae89959e5 allows the following timing:. ```; [INFO] [BatchGUI] 1000 iterations done in 9.61064 s ( 104.051 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 6 0.76 1 5.59 15.95 6.37 0.69 6.37 83.21 ......projectMappedMatrices; ```. Speed up x2 compared to before this PR",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4490#issuecomment-1936046948:13,optimiz,optimization,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4490#issuecomment-1936046948,1,['optimiz'],['optimization']
Performance,"First discussion with @damienmarchal . To generate the data on the flow. . Backup gitter discussion here:. ```; Loader {; std::vector<Data<std::vector<Vec3f>> positions;; load(){; for(auto& mesh : assimp.meshes ) {; BaseData* data = new Data<std::vector<Vec3f>>() ; ; WriteOnlAccessor acc = WriteOnlyAccessor(data); ; acc.resize(mesh.vertices.size());; for( int i ; i< mesh.vertices.size();++i ){; acc[i] = v[i] ; ; }; positions.push_back(data);; addData(data, mesh.name+""_positions"") ;; }; }; }. Data<std::string>* t = new Data<std::string>() ;; t = new(t) Data<std::string>(obj->initData(t, std::string(""""), dataName, dataHelp)) ;; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/602#issuecomment-369537787:112,Load,Loader,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/602#issuecomment-369537787,2,"['Load', 'load']","['Loader', 'load']"
Performance,"First of all, you should try to get rid of the `[WARNING] [ObjectFactory] Class already registered`; It usually means you already loaded a library with the same components inside.; In your case, you have a mixup between your build version and an installed version.; Indeed, you are running **runSofa** from the build (`/home/sergei/Source_code/Sofa_development/sofa/build_release/bin/runSofa`) and SOFA_ROOT is set to `SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install`. Either run from your install (and keep SOFA_ROOT); or set SOFA_ROOT to your build directory.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1110162371:130,load,loaded,130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1110162371,1,['load'],['loaded']
Performance,"Fix ```MechanicalObject``` resize method to resize all its vectorsCoord only if the new size is different from the current one. . In a normal case, resizing a vector with it's current size won't have consequences but here as the VectorCoords are Data, they were all set to dirty each time a not needed resize was performed. And this on the position / rest_position/ freePosition and resetPosition. For example in ; ```; void BarycentricMapping<TIn, TOut>::apply(...; ...; d_mapper->resize(this->toModel);. ```; was always setting all MechanicalObject VectorCoords Data to dirty even if not needed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1977:313,perform,performed,313,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1977,1,['perform'],['performed']
Performance,"Fixed two things : ; - Compilation error in CudaTriangular[..]; - Undefined symbol while loading the plugin in CudaConstant[..] . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2634:89,load,loading,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2634,1,['load'],['loading']
Performance,"Follow-up of #2436 . The replacement of the usage of the GeometryAlgorithms had the unattended consequence that there was not information anymore about the geometry itself (it was hidden before by the geometryAlgorithms having a pointer on the topology before).; Now if one wants to define a geometry type different of the type of the associated state, it can be done by giving a third template (called GeometricalTypes). This template is equal to DataTypes by default if omitted (as it was before). It should fix the scene failing since #2436 (about the diffusion, which is having a geometrical type (Vec3d) different of its associated state (Vec1d). This PR cleans the DiffusionFEM as well (trivial optimizations, removal of one useless data which can be infered from the DataTypes). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2476:701,optimiz,optimizations,701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2476,1,['optimiz'],['optimizations']
Performance,"Following discussion at STC, @damienmarchal had the question about the utility keep several the possibility for Data to either:; - copy always a data (for primitive type e.g. Data<float>); - copy and write to have an efficient management of Data : (shared) pointer as switched when the value changes. It seems we have two management cases because we want to optimize the case of primitive Data.; Why not keeping always one (copy and right) ?. @JeremieA would you have an opinion on this?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1629:358,optimiz,optimize,358,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1629,1,['optimiz'],['optimize']
Performance,"Following recent changes, when compiled externally (out-of-tree), plugin libraries are not generated in the `plugin/` folder of SOFA build repository anymore, but in a dedicated `external_directories` folder. However this folder was not included in the reference folders (defined in `FileRepository.cpp`) in which the RequiredPlugin component searches for plugins at run time. This is not necessarily an issue when loading manually the plugins using the GUI's plugin manager, but it doesn't work when launching a scene which requires an external plugin in batch mode. The issue was pointed out recently by @VannesteFelix . This commit simply add `external_directories/` in the reference folders to search for plugins. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2927:415,load,loading,415,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2927,1,['load'],['loading']
Performance,"For consistency purpose, added a helper function to handle the file related errors for loaders and components. To use it: ; ```; FILE *f = fopen(filename.c_str(), ""r"");; msg_error_when(!f)<<sofa::helper::message::UnableToOpenFile(filename.c_str());; ```. Modified the usage in only ""MeshTrian.cpp"". With feedback, if I am in right direction, I will make changes to other loader and component accordingly.Solving issue #197 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/639:87,load,loaders,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/639,2,['load'],"['loader', 'loaders']"
Performance,"For large displacements method:; initLarge:; ""mstate->read"" should return a reference instead of coord vector, this can significantly improve initialization performance, especially when the mesh is relatively large. I suggest checking the similar issues again.; applyStiffnessLarge:; TriangleInformation::rotation and its inverse right multiplication coord can be optimized，just like how we did in TriangleFEMUtils.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4331:157,perform,performance,157,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4331,2,"['optimiz', 'perform']","['optimized', 'performance']"
Performance,"For now the performances are not better. It needs more work. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4140:12,perform,performances,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4140,1,['perform'],['performances']
Performance,"For small scenes I found very convenient to write the scene directly in the test...; This allow to iterate on each variation of scene elements (PointLight, DirectionalLight, SpotLight) (or templates (Vec3d, Vec3f, Rigid)) with just a simple loop and string concat. . ```cpp; void mytestThatShouldExistsForAllLights(std::string& lighttype){; std::stringstream scene ;; scene << ""<?xml version='1.0'?> \n""; ""<Node 	name='Root' gravity='0 -9.81 0' time='0' animate='0' > \n""; "" <Node name='Level 1'> \n""; "" <MechanicalObject/> \n""; "" <""<< lighttype << "" name='light1'/> \n""; "" </Node> \n""; ""</Node> \n"" ;; Node::SPtr root = SceneLoaderXML::loadFromMemory (""testscene"",; scene.str().c_str(),; scene.str().size()) ;. ... the actual meat of the test....; }; ```; For complex scene I think that using a template langage could be an option ...but needs more work.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/43#issuecomment-265274667:637,load,loadFromMemory,637,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/43#issuecomment-265274667,1,['load'],['loadFromMemory']
Performance,"For the coherency, I totally agree that mesh loaders should be gathered in a plugin.; As for the dependency, I would just warn the user that if find_package() in CMake does not find CImgPlugin, then texturing will just be disabled. (i.e no REQUIRED flag) ; you could wish to load meshes just for pure mechanical scene. As for the CimgPlugin and CImg, CMake detects if libpng/libjpeg/libtiff are present and enable/disable preprocessor flag directly. ; So for example if libjpeg is not present, the user is informed of it through CMake configuration process, and the ImageFactory does not add the *.jpg format into its supported image list. Finally, I would say that imagemagick dependency is quite annoying, especially for windows users.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/9#issuecomment-305191404:45,load,loaders,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/9#issuecomment-305191404,2,['load'],"['load', 'loaders']"
Performance,"From gitter:; ```; initData(data1, callback=myUnion), ; initData(data2, callback=myUnion), ; initData(data3, callback=myUnion), . void myUnion(BaseData* d){ changedData.push_back(d) ; }; bool needUpdate() { return changedData.size() != 0; }; ```. The idea here was to allow users to add different, per data callback function still allowing ; a way to implement a ""centralized"" update. The idea was also to specify in the initData which data are ""cached"" and thus should trigger update/reinit on change.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367266862:446,cache,cached,446,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367266862,1,['cache'],['cached']
Performance,"From what I understand, this PR does not change the behaviour of SOFA, nor improve the performances. It is a preparation work to secure the access to the detection output vector. However, the proposed implementation has not been made thread-safe. But it's a necessary start, so thanks @fspadoni.; The branches diverged so much, I think starting again would take less time than solving the conflicts.; Note: it's a good idea to allow a parallel manipulation of the contacts to improve the performances. However, parallel addition of contacts would lead to a non-deterministic order of contacts. We would end up with non-deterministic simulations. The CI would not be happy :); Conclusion: we can close this PR, but keep it in mind when we want to parallelize manipulation of contacts.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/965#issuecomment-884712307:87,perform,performances,87,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/965#issuecomment-884712307,2,['perform'],['performances']
Performance,"Further tests: if LTO is not enabled, then it does not crash as well, so the culprit would be something about the optimizer/vectorizer 🧐",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4180#issuecomment-1730804223:114,optimiz,optimizer,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4180#issuecomment-1730804223,1,['optimiz'],['optimizer']
Performance,"Further to @fredroy 's request I added changes in CompressedRowSparseMatrixMechanical; Could you check what I did @alxbilger , do you think this could affect performances?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5054#issuecomment-2410880725:158,perform,performances,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5054#issuecomment-2410880725,1,['perform'],['performances']
Performance,Further to a discussion with @alxbilger and @ChristianDuriez ; Some check is performed in LocalMinDistance leading to possible null determinant. Case: two adjacent lines (with a common vertex) then of collide lines will coincide; However I do not see how to prevent / sort this before `LocalMinDistance::testIntersection()`. BruteForce::canIntersect → MemberElementIntersector::canIntersect() → LocalMinDistance::testIntersection(),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2077:77,perform,performed,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2077,1,['perform'],['performed']
Performance,"Good afternoon!; This PR proposes a fix for a crash when loading a vtk file that was generated by Gmsh. `; myNode.createObject('MeshVTKLoader', name='loader', filename='gmshMesh.vtk'); myNode.createObject('TetrahedronSetTopologyContainer', src=""@loader""); `. The mesh generated by default with Gmsh gives a list of edges and triangles that is incomplete and contains only edges and triangles on the boundary of the mesh. However the list of Tetrahedra is complete. This leads to a crash when using a TetrahedronSetTopologyContainer.; This PR tries to address this problem. Cheers!; Olivier. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1008:57,load,loading,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1008,3,['load'],"['loader', 'loading']"
Performance,"Greetings,. I have built SOFA v21.12 without any error massages, on Ubuntu 18.04. And it works fine without plugins. However when I try to run examples for SoftRobots, I encounter the same problems as previously described is following topics, also tried the solutions that is described there. (Also tried to build on Ubuntu 20.04 but the result is the same). https://www.sofa-framework.org/community/forum/topic/error-couldnt-import-objects-from-stlib3-physics-rigid/. https://www.sofa-framework.org/community/forum/topic/issues-with-running-examples-on-sofa_v20-12-02_defrost_linux/. Has this problem been solved?. Moreover, my colleague also built SOFA and the plugins on Ubuntu 20.04, then sent me the built version of his. I have re-installed Ubuntu 20.04 with his user name, and surprisingly the plugins worked without any errors. Therefore, I am assuming there might be a mistake while I use Cmake. However, as me and my colleague discussed, we have followed exactly the same method but the results were different. I get the following error massage when I try to run SOFA with my build:. `[ERROR] [SofaPython3::SceneLoader] Unable to completely load the scene from file '....path/to/file.../SoftRobots/docs/tutorials/FirstSteps/details/sofapython3/step4.py3scn'. ; Python exception: ; ImportError: cannot import name 'Floor' from 'stlib3.physics.rigid' (/....path/to/file...../sofa/build/lib/python3/site-packages/stlib3/physics/rigid/__init__.py). At:; step4.py3scn(2): <module>; <frozen importlib._bootstrap>(219): _call_with_frames_removed; <frozen importlib._bootstrap_external>(843): exec_module; <frozen importlib._bootstrap>(686): _load_unlocked; <frozen importlib._bootstrap>(702): _load; /usr/lib/python3.8/imp.py(171): load_source; /usr/lib/python3.8/imp.py(234): load_module; <string>(3): <module>; `",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2754:1151,load,load,1151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2754,1,['load'],['load']
Performance,HI guys. several users are giving us feedback about the RequiredPlugin which is not working.; The plugin (dll) is not loaded and the associated components obviously can't be created. Any hints ?. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/558:118,load,loaded,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/558,1,['load'],['loaded']
Performance,"Hello ! ; I've read your PR and I am currently compiling it on my side to test the GUI and the Modeler. . Some changes will need to be performed in order to accept your PR : ; 1. You have added some commented code that need to be removed. ; 2. You have expended the namespaces of some files, which is not in accordance with our standard, it is certainly your IDE. But could you please revert those changes ? ; 3. You have set default value to attributes directly in the class declaration, this should be done only in the constructor. ; 4. You have made some breaking changes: for instance, you removed the call to the superinit of ConfigurationSetting. Do you have any justification for that ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2097577135:135,perform,performed,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2097577135,1,['perform'],['performed']
Performance,"Hello @ChristianDuriez,. I've been discussing the sparse matrix issue with @matthieu-nesme for some time now. Here are some thoughts on the subject. The biggest issue with sparse matrices is that there is no silver bullet representation that covers everyone's needs: some people like it compressed (row/column), others like to have small dense chunks instead of single floating points, and so on. In particular, I see two major orthogonal uses of sparse matrices:; 1. getting matrix data out of components; 2. working with sparse matrices (linear algebra, factorization, assembly). It is not at all obvious that the two operations should use the same representation, and in fact I would argue against it. For instance in the Compliant plugin, we use Eigen sparse matrices for everything, and end up doing a lot of work in order to shift matrix blocks around which is tedious and costly. I've been toying around with alternate designs, and the simplest I found so far is to use a plain old vector of triplets (row, column, value) for fetching matrix data. More precisely, mappings/forcefields directly `push_back` matrix data into a `std::vector<Eigen::Triplet<SReal> >` through a `std::back_insert_iterator`. With this design the caller is then responsible for structuring the sparse data further (sorting/converting to CSR, shifting rows/columns, handing over to another library, etc) Of course this approach is tailored for our needs and might not fit others, and performance-wise it needs thorough benchmarking anyways, but I think that using separate data structures for *getting the data* and *working with the data* instead of a single structure is the way to go.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292248716:1466,perform,performance-wise,1466,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/26#issuecomment-292248716,1,['perform'],['performance-wise']
Performance,"Hello @jjcasmar . In order to added a new template to a component you need to add that where the object is registered ; to the component factory as in MechanicalObject.; ```cpp; int MechanicalObjectClass = core::RegisterObject(""mechanical state vectors""); .add< MechanicalObject<Vec3Types> >(true) // default template; .add< MechanicalObject<Vec2Types> >(); .add< MechanicalObject<Vec1Types> >(); .add< MechanicalObject<Vec6Types> >(); .add< MechanicalObject<Rigid3Types> >(); .add< MechanicalObject<Rigid2Types> >();; ```. This is where the component become accessible to the runtime point of view. The name you can use in the scene is automatically generated out of the c++ name. But you can tune that as done in RigidTypes. I'm not 100% sure but this should correspond to these lines in RigidTypes.h; ```cpp; typedef StdRigidTypes<2,double> Rigid2dTypes;; typedef RigidMass<2,double> Rigid2dMass;; template<> inline const char* Rigid2dTypes::Name() { return ""Rigid2d""; }; ``` . Hope this will help you,",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1524#issuecomment-706132405:694,tune,tune,694,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1524#issuecomment-706132405,1,['tune'],['tune']
Performance,"Hello @sofa-framework/reviewers . Yes, we are taking SOFA-NG project up again :tada: ; Thanks to @fredroy we now have at least 1 engineer working on this project every day :+1:; This issue is meant to be the main follow-up of the project, complementary to #543 (still a good read). ## Objectives. The final objective of SOFA-NG is to refactorize the current (non-core) modules and components by moving them into plugins. It will permit to:; - compile and load only the modules we want; - clean all dependencies in SOFA; - help focusing the work of validation/verification/doc/test on specific codes; - improve the packaging of codes; - ease understanding the API of SOFA for new users; - cleaning the applications/plugins repository. ## Tasks. Here are the main steps of the project.; Tasks NG1 and NG2 can be done in parallel if we work ""bottom->top"" in NG1 and ""top->bottom"" in NG2.; Task NG3 can also be started in parallel. We need to iterate on the architecture proposal to refine it as much as possible before steps NG1 and NG2 are over.; Task NG4 cleaning the applications/plugins repository in order to better handle code lifecycle. ### NG1: Simplify headers dependency graph by removing un-needed includes. 1. SofaKernel; - clean/rewrite/reorganize SofaHelper and SofaDefaulttype #1521 ; - remove completely useless files. <img src=""https://user-images.githubusercontent.com/11028016/106575747-b3910180-653c-11eb-8f43-6ec65390ce2f.png"" width=""350"" > &nbsp; <img src=""https://user-images.githubusercontent.com/11028016/106575725-ae33b700-653c-11eb-89e3-4bdeae912a94.png"" width=""350"" >. 2. Other modules (SofaGeneral, etc); - clean deps (useless includes, use lower level objects, etc), linked with the following NG2 actually. SOFA modules dependency (library link) graph: https://www.sofa-framework.org/graph/. *clang tools?*; *include-what-you-need?*. ### NG2: Pluginize all SOFA modules; Pluginizing a module = making it a [CMake Package](https://cmake.org/cmake/help/latest/manual/cmake-pac",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1527:455,load,load,455,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1527,1,['load'],['load']
Performance,"Hello Eulalie,. Hello @EulalieCoevoet and thanks for the suggestion. . I'm not sure isSet() could be used for this task. ; Because there are cases:; - where a Data field has a default value and that this default value is used.; - there are cases where a Data field has a default value and that this default value is not used (ie. it is optional as in your example). Let's see for the other flags... There is the isDisplayed() flag. This flag can control if we show the data is showed all. The side effect of using it for hiding means that if not set at load time then it cannot be changed anymore later. . There is also the isRequired() flag. It is not used a lot and was primarely designed to indicate that need to be setted (mandatory)...which sound a bit like the reverse of ""optional"". Currently in Sofa component most of the data are not set to required (despite I bet that a lot of them are) and there is not graphical feedback related to this flag. So I will think a bit about this one to see if we can something out of that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-754520239:553,load,load,553,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1675#issuecomment-754520239,1,['load'],['load']
Performance,"Hello François (@fjourdes),. Thank for the long and interesting reply. . Your last comment rise an interesting question related to differentiating unittest to functionnal tests. ; Currently in Sofa we don't make any distinction between unit test and functionnal test but my thinking is that in general utility classes have unit tests while components have functional tests . Making the distinction would be indeed better so the question is how to get there from where we are a now. Here is a proposal. ; In the current PR there is a ```BaseTest``` and ```BaseSimulationTest```, this could actually be transformed without too much effort into UnitTest and FunctionalTest. The tests inheriting from UnitTest shouldn't use the factory in any way and shouldn't have external dependencies. The test in-heriting from FunctionalTest should use the factory and can make the assumption that specific plugins are loaded. We could event go one step further and emphasizing things by having two set of file, ones named *MyClass_unittest.cpp* and *MyComponent_functionaltest.cpp* and in our CMakeLists.txt compile the two set of tests separately with different build targets. This would make things very clear, be compatible with your workflow where unit test are considered as compilation failure, be compatible with our workflow where functional tests are used because they allow to get decent code coverage and last point as it would use the loose coupling approach it would totally cut the dependency at compile time to SofaTest. . Small note, some Functional tests may rely on components implemented in plugins. I have not clear view if we should disable the test if the plugin is not there or if we should make it fails or if we should ""disable"" it at runtime. . EDIT: changes some sentences.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471#issuecomment-337536552:903,load,loaded,903,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471#issuecomment-337536552,1,['load'],['loaded']
Performance,"Hello François,. Thanks for the PR, my bad. To answer your question the CI is compiling Sofa in debug on linux...so this rise the question why we didn't notice that before ? . I look at the code and this bug being un-noticed for so long result from interesting side effect ; so here are the details:; In LCPCalc.cpp I replaced the function afficheResult by resultToString; In LCPCalc.h I forgot to remove the afficheResult; In ConstraintAnimationCode.cpp the calling code is; ```cpp; if (EMIT_EXTRA_DEBUG_MESSAGE); {; msg_info() << ""getF() after setConstraintEquations:"" ;; helper::afficheResult(CP.getF()->ptr(),CP.getSize());; }; ```; The remarquable thing is that this is not and #ifdef but a normal if. So the problematic code *is* compiled and as the definition is in the .h, everything is fine (at compilation time). Let's now have a look at how is defined the condition, there we have:; ```cpp; #define EMIT_EXTRA_DEBUG_MESSAGE false; ```; This means the code is really compiled but that during the optimization pass (that take place before linking) the bloc of code is removed because it is unreachable. So at link time the call is not there anymore. ; To have the link error happens you either need to set the condition to true (it is not connected with debug flags so you have to manually change that in the .cpp) or to use a compiler that does not do unreachable code removal (maybe a compiler option or something). . So your PR really fix the problem . Now to conclude:; - I'm happy to see that the compiled successfully optimize if(true/false) condition so we can use them much more to replace #ifdef / #endif whenever possible (more readable, easier to maintain). ; - the EMIT_EXTRA_DEBUG_MESSAGE is not linked in any way to the debug compilation...should it be ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/473#issuecomment-336552959:1006,optimiz,optimization,1006,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/473#issuecomment-336552959,2,['optimiz'],"['optimization', 'optimize']"
Performance,"Hello Hugo, . GG for this PR. ; As you announced it, this PR is severaly breaking...either at API level as well as in the user interface (as it breaks users scenes). You provide a script to update scene but it is only covering .scn (not .pyscn or .psl) so to me we need other ways to warns user how to manually update their scene. In the past we were overriding the 'parse' method for each object that have data field's name change and found the solution very nice as it 1) warn user to update their scene, 2) provide a minimal compatibility layer if they don't. . Example of what we did in OglLabel: ; ```cpp; void OglLabel::parse(BaseObjectDescription *arg); {; // BACKWARD COMPATIBILITY April 2017; const char* value = arg->getAttribute(""color"") ;; if(value==nullptr || strcmp(value, ""contrast"")){; VisualModel::parse(arg);; return ;; }. arg->setAttribute(""selectContrastingColor"", ""true"");; arg->removeAttribute(""color"") ;. VisualModel::parse(arg);. /// A send the message after the parsing of the base class so that the ""name"" of the component; /// is correctly reported in the message.; msg_deprecated() << ""Attribute color='contrast' is deprecated since Sofa 17.06. "" << msgendl; << ""Using deprecated attributes may result in lower performance or un-expected behaviors"" << msgendl; << ""To remove this message you need to update your scene by replacing color='contrast' with ""; "" selectConstrastingColor='true'"" ;; }; ```. Now about the API breaks....I will try your branch on top of our plugins to see if it compile or not.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/637#issuecomment-392199041:1239,perform,performance,1239,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/637#issuecomment-392199041,1,['perform'],['performance']
Performance,"Hello Marc, and thanks a lot for your feedback !. I'll address some of your points below:. > **determinism**: as @matthieu-nesme mentionned, the order of initialization of objects with static storage duration is undefined across translation units. This is the first reason why I introduced the init() functions: to make initialization deterministic and reliable. And this is the same reason why it's better to call those functions explicitely, at the right time: the program will work correctly by design, not by coincidence;. To be more explicit: there is no guarantee whatsoever that calling `init` in a `static` RAII constructor will get called *after* every other `static` variable in the shared library is initialized. This can indeed be an issue. I was under the impression that there is exactly one of such RAII per dynamic library loaded by SOFA, so as long as `init` does not involve messing around with other `static` variables in the library we should be safe, right?. > **readability** (or something like that): calling the initialization function ""manually"" makes programs more readable: you can just start from the main() function and understand what code is going to run without actually running the code inside a debugger (or reading the entirety of SOFA's source code);. Come on, we're talking about SOFA here ;-). > **choice** (or whatever): with an explicit call to init(), an application writer gets to decide both whether and when to initialize SOFA. Not sure I agree: when `dlopen`-ing a shared library, I prefer to have it initialized automatically if possible (and safe) as the converse is error-prone. In any case, `cleanup` should really be called in the RAII destructor, otherwise resources will leak in case an exception is thrown and not caught, or somebody calls `std::exit` (which they *can*). And of course, the destructor should not do silly stuff like calling a `MessageDispatcher` that was destructed already.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280066333:839,load,loaded,839,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280066333,1,['load'],['loaded']
Performance,"Hello all,. This PR adds (hopefully) proper GIL handling to `SofaPython`, so that it is possible to run python threads concurrently with the main Sofa program. It enables the following scene to run concurrently with the main program: . ```python; def createScene(node):. from threading import Thread; import time; ; def target():; while True:; time.sleep(1); print(""it's aliiive!""); ; thread = Thread(target = target); thread.daemon = True; thread.start(). time.sleep(2); ```. This is achieved through the RAII class `PythonEnvironment::gil`, which is meant to protect the boundaries between c++ and python code as follows:. ```c++; // some function called from the c++ side; {; PythonEnvironment::gil lock;; // safely call python functions here: the GIL ; // is acquired and released automatically; }; ```. The trick is that the GIL should also be released prior to the first lock so that the last object to unlock the GIL gives an opportunity to python threads to run, if any. Otherwise, the main thread still holds the GIL after the last lock is destroyed, and python threads never get to run. This is a work in progress, but should be pretty harmless and easy to disable if something goes wrong. EDIT: it does not work on this branch :-/; ___________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/326:119,concurren,concurrently,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/326,2,['concurren'],['concurrently']
Performance,"Hello all,. This PR somewhat simplifies the creation and handling of `PythonScriptControllers` from python scenes. Here's the TL;DR version:. ```python; import Sofa ; class Script(Sofa.PythonScriptController): pass. def createScene(node):; # now you can do; script = Script(node, 'bar', egg = 'spam'). # the old behavior still works:; old = node.createObject('PythonScriptController', filename = '', classname = 'Script'); ```. Now for the details:. ## Existing approach; The current approach is to use ; ```python; node.createObject('PythonScriptController', filename = '', classname = 'Script'); ```; which has several drawbacks:; - The returned object does not point to the control object, but to the component wrapper. This makes it complicated to pass data around at scene creation (people generally resort to `global` variables for this purpose).; - If `filename` is non-empty, the corresponding file is (re)loaded, causing all sorts of *interesting* side-effects. If you ever had to struggle with these, you know what I mean.; - If `filename` is empty, the control class has to lie in the `__main__` namespace; - It is quite verbose; - It just feels plain wrong *not* to create python objects directly when called from python. It does have a few advantages though:; - It does not require any `PythonScriptController`-specific code for object creation,; - It enables the creation of `PythonScriptController` instances from XML scenes . ## Current workaround; There is a workaround class `SofaPython.script.Controller` that somewhat fixes some of the issues by implementing `__new__` in a derived Python class, intercepting and returning the control instance and optional initialization arguments, but overall it feels more like a hack. ## This PR. This PR simply provides a clean binding for instance creation. You need to provide a node as a first argument, but otherwise Controllers now act as any other python object. The old behavior still works, should you need it. ```python; ; import Sofa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/283:914,load,loaded,914,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/283,1,['load'],['loaded']
Performance,"Hello everyone,. I detected an error with the .vtk file version. The version 4.2 of vtk has some lines which are not managed by Sofa. I generate the .vtk file with Paraview 5.5.0 on MacOS. These lines are metadata written between the first and the second parts of the file : ; <img width=""643"" alt=""capture d ecran 2018-05-09 a 10 16 40"" src=""https://user-images.githubusercontent.com/22655914/39803747-4590d964-5372-11e8-80e6-d81beabba2d4.png"">. The errors generated when you run a scene with such a .vtk file are : ; <img width=""886"" alt=""capture d ecran 2018-05-09 a 10 15 33"" src=""https://user-images.githubusercontent.com/22655914/39803770-5a6375d6-5372-11e8-94cd-cc39767ad188.png"">; The scene runs even with the errors and the .vtk file seems to be loaded correctly. I think there is something to change in MeshVTKLoader component in order to not consider these data. Actually I just (by hand) erase the lines and all is good. SOFA version : 17.12; System version : MacOS 10.13.4; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/652:755,load,loaded,755,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/652,1,['load'],['loaded']
Performance,"Hello, After following the tutorial compilation successfully, when I run ./runSofa, I get an error：; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs ./runSofa.; I tried to add this plugin to SOFAv20.12, I tried force dimension omega.6 and sigma.7 respectively, but when starting the scene, the device only moved slightly at the beginning of the animation, no matter how I manipulated it afterwards , cannot use omega.6/sigma.7 devices.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497:132,load,loading,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497,1,['load'],['loading']
Performance,"Hello, After following the tutorial compilation successfully, when I run ./runSofa, I get an error：; `[ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory`.; When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs ./runSofa.; I tried to add this plugin to SOFAv20.12, I tried force dimension omega.6 and sigma.7 respectively, but when starting the scene, the device only moved slightly at the beginning of the animation, no matter how I manipulated it afterwards , cannot use omega.6/sigma.7 devices.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3496:133,load,loading,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3496,1,['load'],['loading']
Performance,"Hello,. Here are a few remarks and suggestions regarding this topic:. 1. I would be wary about relying on performance measurements from a blog post that is 8 years old and does not mention the exact platform and compilers used. Thread Local Storage (TLS) is highly dependent on OS, ABI, compiler, flags. Here is for instance a quick test using compiler explorer: https://godbolt.org/z/6ObfHR.; 2. one usage requiring ExecParams to have a thread-local storage was to be able to do asynchronous loops (mainly simulation and rendering) with full access to the scene graph without copies, by using copy-on-write for large Data and having each thread be assigned a ""version"" (called ""aspect"" per the published work that was used). See the MultithreadGUI for an example of this mechanism.; 3. As far as I know, all asynchronous/external rendering engines integrations that are used with Sofa relied instead on a design where the Sofa scene graph is not exposed but only visual meshes (based on SofaPhysicsAPI), therefore this feature was never enabled/tested in real applications so it can make sense to remove it.; 4. It would be interesting to measure if there are any performance gained from just removing the TLS qualifier (as done in PR #1129). I expect it to not be measurable, but performances can be surprising, which is why any optimization efforts should measure before and after ;); 5. If the TLS part of ExecParams is removed, then you should also remove everything that depends on it: MultithreadGUI, ExecParams::threadID, aspectID, AspectPool, *AspectVisitor, DDGNode::currentAspect()/copyAspect()/..., and all the aspect-related features in Data and Link. Otherwise all these code will be silently broken by the change.; 6. Note that this also makes ExecParams itself a bit pointless. The initial rational was that this provides a thread-safe way to set parameters controlling all codes in such a way that even if it is not explicitly passed in to all API calls, it can be queried with ExecPa",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748:106,perform,performance,106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1147#issuecomment-532775748,1,['perform'],['performance']
Performance,"Hello,. I have been trying to run the CGAL Plugin with sofa, my aim is to create a tetrahedral mesh from a surface mesh, and then experiment that for Haptic Rendering within Sofa. I followed the page here: https://www.sofa-framework.org/community/doc/plugins/usual-plugins/cgal-library/. Although it does not tell what version of CGAL to use, or boost as well. Finally, I have been successful to build with the following versions of dependencies.; **Environment:**; Visual Studio 2017 vc 14.1; Sofa Master: commit 9d9100aa1b0acb9363c8ec7c9b5e4b470821bfc1; Boost: 1.71.0; CGAL: CGAL-4.13.2; QT: 5.12.0. ```; INFO] [runSofa] PluginRepository paths = C:/open_prj/sofa/build/mmaster/plugins;C:/open_prj/sofa/build/mmaster/bin/Release; [INFO] [runSofa] DataRepository paths = C:/open_prj/sofa/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1007,Load,Loading,1007,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Load'],['Loading']
Performance,"Hello,. I try to use SofaPython3 with sofa (master branch) on windows. I use MSVC compiler. I did the following :. 1. Installed pybind11 via pip3.9.; 2. set CMake variable `pybind11_DIR` = `C:/Program Files/Python39/Lib/site-packages/pybind11/share/cmake/pybind11`.; 3. set CMake variable`SOFA_FETCH_PYTHON3` to true.; 4. set CMake variables `PLUGIN_SOFAPYTHON3`, `PLUGIN_SOFAPYTHON3_BINDINGS`, `PLUGIN_SOFAPYTHON3_DOCS` and `PLUGIN_SOFAPYTHON3_EXAMPLES` to true.; 4. 'Configure' then 'Generate' using CMake's GUI.; 5. Build with MSVC -> success (release mode). I encounter a segfault error when loading SofaPython3.dll via the Sofa GUI : Edit>Plugin Manager...>Add...>SofaPython3.dll.; --> **exception Microsoft C++ : pybind11::error_already_set**. Do you have any idea what is causing this error ?. Thanks",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1672:596,load,loading,596,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1672,1,['load'],['loading']
Performance,"Hello,. I would like to discuss a design to represent mesh loaded from a file that contains several child meshes. For example FBX or COLLADA can now be loaded in Sofa using the SofaAssimp plugin but for the moment all child meshes are merged in one big mesh.; We loose the information of Bones etc.. . The API from sofa::core::loader::MeshLoader doesn't support several mesh for the moment. . ```; // Point coordinates in 3D in double.; Data< helper::vector<sofa::defaulttype::Vec<3,SReal> > > d_positions; ///< Vertices of the mesh loaded. //Tab of 1D elements; Data< helper::vector< Polyline > > d_polylines; ///< Polylines of the mesh loaded. // Tab of 2D elements composition; Data< helper::vector< Edge > > d_edges; ///< Edges of the mesh loaded; Data< helper::vector< Triangle > > d_triangles; ///< Triangles of the mesh loaded; Data< helper::vector< Quad > > d_quads; ///< Quads of the mesh loaded. ```; Any suggestion?. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/602:59,load,loaded,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/602,8,['load'],"['loaded', 'loader']"
Performance,"Hello,. We had a very similar problem in a slightly different context (relying on python virtualenv on Linux).; The root cause was that the multiarray native lib is apparently expecting to be run from an executable that already export the python API symbols, either from the executable itself, or with libpython loaded with the RTLD_GLOBAL flag. So the solution on Linux (found by @Ngautier) was to add a call to `dlopen(""<LIBPYTHONSONAME>"", RTLD_LAZY | RTLD_GLOBAL)` before initializing the embedded python interpreter (replacing LIBPYTHONSONAME by the internal name of the python library, such as `libpython2.7.so.1.0`). For some reason, this was only an issue if not using the default system-installed python environment (maybe something similar is done automatically in this case). On mac I don't know if the root cause is the same (it could be determined by looking if mutliarray.so does indeed have undefined symbols, using `otool` or similar), and if a similar solution would fix it. But maybe it can help ;)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-409518620:312,load,loaded,312,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-409518620,1,['load'],['loaded']
Performance,"Hello,; A very small PR to perform a check at the start of the doUpdate function to make sure the rest-position is defined and avoid a crash when it is not the case. This typically happens when calling init() on a boxROI in the SOFA scene without calling init() on the associated mesh loader for example. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1031:27,perform,perform,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1031,2,"['load', 'perform']","['loader', 'perform']"
Performance,"Hello,; I have a similar error, when trying to load a mesh file with the wrong format. For example, when loading a scene with this line:. `<MeshObjLoader name=""loader"" filename=""mesh/smCube27.msh"" />`. SOFA crash with a SIGSEV. Here's the output in the console (edited to break the really long lines of stack trace):; ```; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks:; [SceneCheckAPIChange, SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckAPIChange] No 'APIVersion' component in scene. Using the default APIVersion level:; 17.06; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [FixedConstraint(default3)] Can not find the topology, won't be able to handle topological changes; [WARNING] [FixedConstraint(default3)] Index 0 not valid, should be [0,0]; [WARNING] [FixedConstraint(default3)] Index 3 not valid, should be [0,0]; [WARNING] [FixedConstraint(default3)] Index 6 not valid, should be [0,0]; [WARNING] [FixedConstraint(default3)] Index 9 not valid, should be [0,0]; [WARNING] [FixedConstraint(default3)] Index 12 not valid, should be [0,0]; [WARNING] [RealGUI] Global Bounding Box seems very small; Your viewer settings (based on the bbox) are likely invalid, switching to default value of [-1,-1,-1,1,1,1].This is caused by using component which does not implement properly the updateBBox function.You can remove this warning by manually forcing a value in the parameter bbox=""minX minY minZ maxX maxY maxZ"" in your root node. ########## SIG 11 - SIGSEGV: segfault ##########; 54: sofa::helper::BackTrace::dump - 0x7ffbf5c001e053:; sofa::helper::BackTrace::sig - 0x7ffbf5c0034052:; seh_filter_exe - 0x7ffc2b60d4e051:; seh_filter_exe - 0x7ffc2b60d4e050:; _C_specific_handler - 0x7ffc1c9ab86049:; _chkstk - 0x7ffc2e51457048:; RtlWalkFrameChain - 0x7ffc2e47373047:; KiUserExceptionDispatcher - 0x7ffc2e5133d046:; sofa::component::projectiveconstraintset::FixedConstraint<sofa::defaulttype::StdVecto",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/746#issuecomment-475536396:47,load,load,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/746#issuecomment-475536396,3,['load'],"['load', 'loader', 'loading']"
Performance,"Hello. > Hi @sergeiNikolaev; > thank you for sharing your zip test. I think we will be able to work it out from here.; > TODO for me:; > ; > * Need a test in c++ for checking new functionality, to be implemented from py example.; > * Add an example in SOFA. My question is what test it is possible to write for Polynomial springs?; Personally me, I verified them by generating some data using the scene from .zip and then compare it visually with the polynomial result. But, I am not sure it is possible to perform the same stuff as a functional test.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-624616296:507,perform,perform,507,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-624616296,1,['perform'],['perform']
Performance,Hello. I made a test with the following scene. It actually pass in the current testing framework despite crashing upon loading in the GUI mode. ; ```; <?xml version='1.0'?>; <Node 	name='Root'>; <VisualStyle displayFlags='showForceFields'/>; <Node name='FEMnode'> ; <MechanicalObject/> ; <TetrahedronFEMForceField/> ; </Node>; </Node>; ```,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/79:119,load,loading,119,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/79,1,['load'],['loading']
Performance,"Hello @alxbilger,. Thanks for the PR. . I looked at the implementation and I'm not sure the Observer/Observable mechanism is needed.; At current time is seem to be used to notify that, when a mass change, the component using the mass need to be updated. . Tracking component and data changes can already be done using the Directed Dependency Graph (DDG) mechanisms. . When I want a component (B) to track component (A) and detect it changes I connect A.componentState (the observable) by adding B as a DDG output of A.componentState (so B is the obsever). By using the DDG machinery you can have the choice of when the updates is done... when A.componentState is changed or when B is needed ... (thanks the lazy DDG update mechanism). Finally if using the DDG it too heavy, it is also possible to use the DataTracker, this allows to detect data change (eg: A.componentState has changed) when you need to invalidate the cache.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4625#issuecomment-2042182871:919,cache,cache,919,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4625#issuecomment-2042182871,1,['cache'],['cache']
Performance,"Here is a first version of a MagicEngine in python. ```python; #!/usr/bin/env python; # -*- coding: utf-8 -*-; from MagicEngine import *; ; def myupdate(a, b, c): ; """"""This is so cute to have a single point documentation in our code""""""; return a + b + c; ; def createScene(rootNode):; rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename='mesh/liver.vtk'). MagicEngine(rootNode, myupdate, a=1.0, b=2.0, c=3.0); ```. With the following in MagicEngine.py:; ```python; #!/usr/bin/env python; # -*- coding: utf-8 -*-. import Sofa; import os; import inspect; ; class MagicEngine(Sofa.PythonScriptDataEngine):; def __init__(self, node, fct, **kwargs):; self.addNewData(""Description"", ""Properties"", """", ""s"", inspect.getdoc(fct)) . argspec = inspect.getargspec(fct); for arg in argspec.args:; argval = None; if arg in kwargs:; argval = kwargs[arg] ; elif argspec.defaults != None and arg in argspec.defaults:; argval = argspec.defaults[arg] ; ; if argval != None: ; self.addNewInput(arg, datatype=""f"", value=argval) ; else:; Sofa.msg_error(""Unable to create an input for parameter: ""+str(arg)) ; ; self.lastreturnedvalue = False ; self.name = str(fct) ; self.params = argspec.args; self.fct=fct; ; def update(self):; calld = []; for param in self.params: ; calld.append(self.findData(param).value) ; ; tmp = self.fct(*calld) ; if not self.lastreturnedvalue:; self.addNewOutput(""output"", datatype=""f"", value=tmp) ; self.lastreturnedvalue = True; self.findData(""output"").value = tmp; ```. Basically it creates MagicEngine engine that is a DataEngine, pass the function and argument to it. ; In the constructor of this MagicEngine the function is introspected to add the needed inputs. As there is no type inference I used fload but this should be easy to add. The output is a bit tricky and I don't like it...as it requires the MagicEngine to be executed a least one time before to work. I will try a different approach where we can specify manually the types of intput & output.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380451603:330,load,loader,330,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380451603,1,['load'],['loader']
Performance,"Here is a short feedback of what we have done since the STC : . **First strategy :** Model the Data accesses using ORWL's concepts + high level task parallelism (coarse grain parallelism); - use abstract Data accesses stored in FIFOs to extract parallelism : thread safe data accesses allowing concurrent reads.; - ensures that the semantic of the program is preserved.; - tasks defined at Visitor level : a Task is defined as the execution of a Visitor on a component.; - this strategy should apply to all visitors and components, as it does not depend on the nature of the component. **Issues :** ; - We wanted to use the Data class, since all accesses to a data object in sofa should be done using this class. Problem : this is not true, some components use vectors directly, or use Data methods / ReadAccessor / WriteAccessor not as intended (this is possible since for now some methods such as Data::endEdit do nothing) -> we would need to look at all sofa components to make sure that the Data are properly used; - To properly model the data accesses using ORWL's concepts we need to slightly modify the API of the Data class; - sofa Engine mecanisms are complex to handle using FIFOs; - it is difficult to predict the data dependencies as the Visitors are launched dynamically and can launch Visitors -> we can't predict the data accesses in a preprocessing phase, so we need to adapt ORWL.; - This approach would not induce significant performance gains on simulations with only 1 object or with 1 ""main"" object since all the computationally intensive tasks inside a given object access the same Data object (Write access) and thus are inherently sequential. **Conclusion :** the potential speedup is not good enough to invest more time on this strategy given the difficulty. **Second strategy :** finer-grain parallelization; To extract parallelism from highly data-dependent tasks we need to divide these tasks into less-dependent subtasks.; To achieve that, we are currently implementing pa",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-304903792:294,concurren,concurrent,294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-304903792,1,['concurren'],['concurrent']
Performance,"Here is an update on our efforts to perform an automatic parallelization on Sofa. **Parallelism at the Visitor level :** . **General idea :**; Some visitors execute functions on multiple components (example : BaseMechanicalVisitor launches MechanicalVisitor::fwdForceField on a list of BaseForceFields).; The implementation of the function can vary depending on the actual type of the component. Usually, a function executing on different components will access the same data vectors while executing on each component (for example MechanicalVisitor::fwdForceField, calls addForce or addDForce on each component, each one modifying the force vector).; We define a **Parallel Section** as the execution of a given visitor function on a list of components.; We define a **Task** as the execution of a visitor function on a component. Therefore a parallel section is decomposed in an ordered list of tasks.; Each task accesses a given set of vectors (read or write accesses), and a given set of locations in these vectors. We can split the tasks in **phases** such that each phase accesses a subset of the vector locations. To facilitate this, we decompose the vectors into **blocks**, and we look at the vector blocks accessed by each task phase.; Then we can have phases of different tasks that do not accesses the same locations, and so are independent and can run in parallel.; Then we model the dependencies between the tasks phases, and we use the dependency graph to schedule the parallel executions of the phases, keeping the sequential order of the operations. . All the user should have to do is to flag visitors that can be launched in parallel on the components : use a parallel version of Visitor::for_each / for_each_r to enable parallel execution of the components. **Steps performed at runtime:**. 1. Creation of « parallel visitors » using a parallel version of Visitor::for_each functions; - parallel version of for_each starts a parallel section, and creates tasks; - a task is defined ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289:36,perform,perform,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/24#issuecomment-330557289,1,['perform'],['perform']
Performance,"Here is the naive tentative I did:; ```; $ ./bin/SofaHelper_test.exe --gtest_filter=PluginManager_test.loadTestPluginByPath; Note: Google Test filter = PluginManager_test.loadTestPluginByPath; [==========] Running 1 test from 1 test case.; [----------] Global test environment set-up.; [----------] 1 test from PluginManager_test; [ RUN ] PluginManager_test.loadTestPluginByPath; 0; [INFO] [PluginManager] Loaded plugin: J:/0/build/bin\TestPlugin.dll; 1; [ERROR] [FileSystem::exists()] J:/0/build/bin/J:/0/build/bin\RandomNameForAPluginButHopeItDoesNotExist.dll.dll: error 123: The filename, directory name, or volume label syntax is incorrect. [ERROR] [PluginManager] File not found: J:/0/build/bin\RandomNameForAPluginButHopeItDoesNotExist.dll; 1; toDelete.push_back(TestPlugin); pm.getPluginMap().size() = 1; unloadPlugin(J:/0/build/bin\TestPlugin.dll); PluginManager::unloadPlugin; DynamicLibrary::unload; DONE DynamicLibrary::unload; DONE PluginManager::unloadPlugin; unloaded J:/0/build/bin\TestPlugin.dll; pm.getPluginMap().size() = 0; [ OK ] PluginManager_test.loadTestPluginByPath (33 ms); [----------] 1 test from PluginManager_test (33 ms total). [----------] Global test environment tear-down; [==========] 1 test from 1 test case ran. (33 ms total); [ PASSED ] 1 test.; Segmentation fault; ```; As you can see, unloading went well. Something else is triggering the Segfault...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1274#issuecomment-604356435:103,load,loadTestPluginByPath,103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1274#issuecomment-604356435,5,"['Load', 'load']","['Loaded', 'loadTestPluginByPath']"
Performance,"Hey @alxbilger ,. I'm very sorry for the late reply. > If I understand correctly, your problem with this solver is not the approximation equations on which I asked your opinion. Well kinda. I am unable to answer your initial question, since when I try to derive the equation to validate your changes, I'm unable to get to the same formulation as you have. But, in addition, I'm also unable to derive the old one (before your change).... Anyway, if you can validate that the multiop ""optimized"" version gives the same result as the ""unoptimized"" one for both explicit and semi-implicit, and for both before and after this PR, you have my +1 to merge!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2163#issuecomment-866817370:483,optimiz,optimized,483,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2163#issuecomment-866817370,1,['optimiz'],['optimized']
Performance,"Hey @alxbilger, thank you for your PR!; Does this mean that PSL.dll will not be loaded?; [ci-build]",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/617#issuecomment-376446726:80,load,loaded,80,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/617#issuecomment-376446726,1,['load'],['loaded']
Performance,"Hey @ruiliang-gao ; I must apologize for not getting back to you on this. We discussed this topic with Fred back at the SOFA Week 2021 but I did not added the conclusion here. The fact is that in the caduceus scene the ConstraintSolver used is a **LCPConstraintSolver**. As mentioned in the [documentation](https://www.sofa-framework.org/community/doc/simulation-principles/constraint/lagrange-constraint/#constraintsolver-in-sofa), this solver is optimized for contact simulations, i.e. UniLateralInteractionConstraint. This optimization makes it inappropriate for attachement or other bilateral (holonomic) constraints. You should then **use instead the GenericConstraintSolver**. Best,. Hugo",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1148302684:448,optimiz,optimized,448,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2486#issuecomment-1148302684,2,['optimiz'],"['optimization', 'optimized']"
Performance,"Hey guys,. Sorry for the delay. This is a draft PR so that people can start reviewing/testing this feature if they want. There is still some things missing before merging. ### Needs to be addressed before merging. - MacOS and Windows compatibility: python import command only tries to load .so extension, so the cmake of the plugin should generate both SofaPython.dylib (.dll) and SofaPython.so for it to work.; - Handling the case of python script loading a python scene (the current GIL handling implementation will prevent the main python script to get back the interpreter after a python scene runs). ### What this PR brings. Right now, in order to use the SofaPython plugin, you need to create a python scene and run it through a C++ executable (such as runSofa). What I'm proposing here is to simply load the Sofa plugin inside a python script, that's it. A python script could then look like : . ```#!/usr/bin/python2.7; from libSofaPython import Sofa; import argparse. # Parse the arguments; parser = argparse.ArgumentParser(); parser.add_argument(""-n"", ""--number_of_steps"", type=int, help=""Number of steps until the final forces are reach"", default=10); o = parser.parse_args(). sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim); root = Sofa.createNode(""root""). # ...; # some code that creates the scene tree; # ... root.init(). for i in range(number_of_steps):; root.simulationStep(dt); updateConvergencePlot(root). analysis = complexCalculsOnMatrices(root); saveResults(root, analysis); ```. You could even make your own runSofa.py that launches the runSofa GUI (a more complete python runSofa script can be found in an example file provided by this PR) :. ```#!/usr/bin/python2.7. from libSofaPython import Sofa. sim = Sofa.createSimulation(""DAG""); Sofa.setSimulation(sim). root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(). sofa_prefix = ""/home/jnbrunet/sources/sofa/build""; Sofa.GUIManager.setSofaPrefix(sofa_prefix); Sofa.GUIManager.setConfigDirectoryPath(sofa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:285,load,load,285,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,3,['load'],"['load', 'loading']"
Performance,"Hey, did someone call me?. The Data overhead is significant for Objects (*incl.* Nodes) created; dynamically. Otherwise 'only' the initialization step is impacted. 2018-06-12 14:20 GMT+02:00 Damien Marchal <notifications@github.com>:. > Hi all,; >; > In our branches @defrost <https://github.com/defrost> we are adding more; > and more data field to get:; >; > - filename/line where a component has been instanciated.; > - filename/line where the component is defined.; >; > Both PSL & STLIB are using the same trick.; >; > I remember of discussion with @matthieu-nesme; > <https://github.com/matthieu-nesme> on having less data field added; > because of the overhead.; > So currently we are only adding the fields when the component are; > instanciated dynamically (from a file) and not using the initData method.; >; > Now I wonder if we could do the same in createObject()/createNode() of; > course this would have performance impact...but given how slow python is; > anyway it may be totally unnoticeable on the; > run-time.; >; > Any opinion ?; >; > DM.; > ------------------------------; >; > Suggested labels:; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/sofa-framework/sofa/issues/685>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AHWOIYVot2pfI4QUs3VChqtEvAqCQNOLks5t77IRgaJpZM4UkUmI>; > .; >",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/685#issuecomment-396589348:918,perform,performance,918,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/685#issuecomment-396589348,1,['perform'],['performance']
Performance,"Heyy. I have a Spacemouse Haptic as a controller and also a **python** driver to read the input from it, which is based on raw HID input via package pywinusb. And I could read the input of Spacemouse when i execute ""python input.py"", the movement daten will be printed on screen. ; ![a1d433125bcc9c7788244275ff3ad57](https://user-images.githubusercontent.com/72047791/158283665-de568f13-7b0c-452d-8114-da02bab2c59b.png). However when i add a create_scene class on the python file and try to load the file from sofa, the terminal shows that the HID device could not be found and hence the input could not be read.; ![2efbbe34de273a3c4f949a2f4f3086b](https://user-images.githubusercontent.com/72047791/158283846-a782b3d3-c5aa-4dc8-a250-bb70b6524efe.png). Anyone have any idea about this issue?; Thanks in advances.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2786:491,load,load,491,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2786,1,['load'],['load']
Performance,"Hi @alxbilger @courtecuisse . We understand what this function was used for in BaseFF. However, the API for topological changes introduced by @epernod more than a year ago now uses callbacks. Such callbacks appear to me like the appropriate way to implement an optimized update of the local stiffness (only on the updated elements). This PR proposed to remove a function, which had no implementation in the core. No feature in the code base, so it was polluting the code base and making it harder for new developers to read the API. @alxbilger had explicitly asked for feedback, and the above discussion led to the confirmation of this deletion.; However, you make a point: SOFA should indeed include examples (scenes and code) of 3D cutting and such contributions are most expected. Such PRs and topics are (and were in this case) discussed weekly at the [SOFA dev meeting](https://sympa.inria.fr/sympa/subscribe/sofa-dev). . Two solutions I see: ; - pulled-request a revert of the PR introducing the feature in the core of SOFA; - use the new API and updates existing FF in SOFA",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2244#issuecomment-1171247643:261,optimiz,optimized,261,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2244#issuecomment-1171247643,1,['optimiz'],['optimized']
Performance,"Hi @damienmarchal . Actually, it was more a linking/DLL problem than a compilation problem. (at least for OS X); GuiDataRepository is used in runSofa:. `GuiDataRepository.addFirstPath(Utils::getSofaPathTo(""share/sofa/gui/runSofa/resources"").c_str()) ;`. runSofa knows the symbol as the header is included ; but if you dont compile SofaGuiQt, the symbol wont be present when the linking occurs (with SofaGuiMain which is supposed to load SofaGuiQt if present). Anyway, for now I was considering GuiDataRepository as a ""global"" repository for all GUIs. And making it into SofaGuiCommon seems to do the trick (at least in my point of view). But your solution with the SharedUIResources is more elegant indeed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/599#issuecomment-368865927:432,load,load,432,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/599#issuecomment-368865927,1,['load'],['load']
Performance,"Hi @damienmarchal . Thanks for your remarks!. I'll address those probably later this week, meanwhile this PR is back to WIP. For the bindings of **Simulation** and **GUIManager**, I completely agree with you, however, I'm not sure how I would address this without having to create a new binary (new plugin?). I can remove those from this PR while I think of a better way to do this. Anyway, beside **GUIManager::setDimension** which can be used dynamically with current GUIs, those bindings were mostly useful when using the SofaPython plugin as a module loaded into an external python interpreter, which is not yet supported in Sofa (we kinda ""hacked"" the current SofaPython plugin to make it work for some of our work here in the team).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/990#issuecomment-490121207:555,load,loaded,555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/990#issuecomment-490121207,1,['load'],['loaded']
Performance,"Hi @damienmarchal it seems that the code of the #1046 (merged in #1048) was making an optimization when the DetectionOutput was already here, to save the barycentric coordinates of the contact point to avoid computing it again (and then call the _addPointInLine()_ function). Is this correct @fjourdes?; Do you think it was worth keeping?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1945:86,optimiz,optimization,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1945,1,['optimiz'],['optimization']
Performance,"Hi @epernod @marques-bruno ; I actually do not understand why `load()` is called (in `parse()` of MeshLoader if `canLoad()`). In fact, using the new callback mechanism, any component in the scene could actually be linked to the data, independently from their ordering. If the loaded data is needed by any component, since iniData would dirtify all, the callback would be automatically called if a `getValue()` is triggered.; Don't you think?. So why not changing the parse of MeshLoader back to :. ```; success = canLoad();; // File not loaded, component is set to invalid; if (!success); d_componentState.setValue(sofa::core::objectmodel::ComponentState::Invalid);; ```. instead of:; ```; if (canLoad()); success = load();. // File not loaded, component is set to invalid; if (!success); d_componentState.setValue(sofa::core::objectmodel::ComponentState::Invalid);; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1666#issuecomment-841487677:63,load,load,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1666#issuecomment-841487677,5,['load'],"['load', 'loaded']"
Performance,"Hi @fredroy, i tried as you said but i didn't work either. ; I actually solved it running 'runSofa.exe -l SofaPython3' from anaconda promt (instead of windows cmd promt) and it loads SofaPython3 correctly.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1794895135:177,load,loads,177,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1794895135,1,['load'],['loads']
Performance,"Hi @fredroy, thank you for your reply. I tried as you suggested but i got this error:. ' [ERROR] [DAGSimulation(Simulation)] Cannot load file 'C:\Users\gfurn\Downloads\liver.py': extension (py) is only supported if the plugin SofaPython3 is loaded. SofaPython3 must be loaded first before being able to load the file. '",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1786726505:132,load,load,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1786726505,4,['load'],"['load', 'loaded']"
Performance,"Hi @sergeiNikolaev ; Sorry for the latency on this topic, tests can be made so that we create a simple scene in c++ imposing rest shape and an imposed displacement. Thus, the resulting force should be analytically defined.; By the way do you have any latex file for the polynomial equations?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-643111261:35,latency,latency,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1342#issuecomment-643111261,1,['latency'],['latency']
Performance,"Hi @sofa-framework/reviewers,. Here are some news for September. ## Plugin vs Classic library; I removed the config/Sofa.*.cpp file from all modules that should not be using the PluginManager API.; This is necessary to clearly distinguish what is a Plugin (= bunch of Components that are loaded on user demand with a RequiredPlugin) and what is not (= core or misc library loaded automatically). ## Sofa.Helper.Types; I started the refactoring for Sofa.Helper.Types but it implies some sofa2ng modifications.; Since the sources come from 2 different places (SofaKernel/framework/sofa/helper and SofaKernel/framework/sofa/helper/types), I decided to use the recipe for SofaKernel/framework/sofa/helper only and then to refactor SofaKernel/framework/sofa/helper/types manually.; The result will be pull-requested soon. ## October objectives; - Finish refactoring Sofa.Helper.Types; - Open PR for Sofa.Helper.Types; - Start another Sofa.Helper.* refactoring. ---------------------------; As always, do not hesitate to comment. :wink:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/543#issuecomment-428105491:288,load,loaded,288,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/543#issuecomment-428105491,2,['load'],['loaded']
Performance,"Hi @vmagno . I checked your PR, looks ok. ; For @matthieu-nesme I suggest we merge the PR and iff it cause a big performance drop we fix that at this moment by either:; - reducing the sending rate by coalsecing the events to match a managemable rate; - activating the propagation of mouse move event only when the -i command line option is provided to runSofa.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/132#issuecomment-273183024:113,perform,performance,113,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/132#issuecomment-273183024,1,['perform'],['performance']
Performance,"Hi Damien, thanks for that work. - what's the story about MechanicalObject::d_size?; - I am not a big fan of adding more Data (for the overcost we know); - 'template' can easily be managed by hand; - 'src' can disappear at export, being replaced by the Links it had created; - having the gui choosing which Data must be saved is limiting and dangerous. Limiting because, you have to implement it in each gui that is able to save. Dangerous because you can manually change a Data that will be incompatible with another Data present in the loaded scene. A more generic way to know which Data must be exported has to be found. It is linked to saving a scene after simulation. It is not trivial for sure. My guess is each Base should have an virtual 'export' function. By default this function exports every Data (by default all data are persistent). Then component by component you can unselect some Data from the export (by setting them un-persitent) in their constructor. For complex situations, including possible incompatible Data (not so many components), a specific 'export' function can be implemented. Little by little every scenes should be exportable, including during simulation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/116#issuecomment-272203789:538,load,loaded,538,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/116#issuecomment-272203789,1,['load'],['loaded']
Performance,"Hi Damien,. I haven't had much time to devote to this as of late, but here is some quick feedback so far:. - lots of code need modification (like *lots*), deep down the core and you need lots of patience to recompile everything over and over again,; - it makes little sense to optimize data initialization if you don't optimize links as well since they use a similar initialization mechanism,; - the speedups in my test scenes were disappointing, being largely dominated by other code paths (contact detection and response mostly, since this is the main use case as the graph gets dynamically altered at every time step),; - IIRC there was a data/link notification mechanism on insertion that could cause accidental quadratic complexity when used sequentially (I'll try to fix this one soon),; - beware of CollisionGroup managers that was causing huge slowdowns in my case for no visible reason as there was a single group. The takeaway: this is probably premature optimization at this point. I might give it another shot in the next few months as my work may depend on it but until then, don't expect major changes on this front. (edit: typos)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-270123574:277,optimiz,optimize,277,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-270123574,3,['optimiz'],"['optimization', 'optimize']"
Performance,"Hi Damien,; it is a good project (the same for the loaders too). But it not easy to review. For what I remember STLexporter is exporting from a list of pos/tri while the other exporters are exporting every VisualModels from their subgraph, isn't it?; I think both functionalities are interesting, and the baseexporter class could implement both?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/372#issuecomment-328021918:51,load,loaders,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/372#issuecomment-328021918,1,['load'],['loaders']
Performance,"Hi Hugo,. Thanks for the question and @jnbrunet for the very interesting answer. . To me #define activated feature must always be removed in any case. So the question should be,; do we transform that into a runtime feature that is activated by a data<boolean> or to directly remove it. If version ""optimized"" is always faster we could probably keep it...but refactoring the API using c++11&c++17 so it look shorter and nicer. . I just notice this ugly #ifdef DISPLAY_TIME in CGLinearSolver......cleaning... cleaning...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1263#issuecomment-593422026:298,optimiz,optimized,298,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1263#issuecomment-593422026,1,['optimiz'],['optimized']
Performance,"Hi Mathieu,. Thanks for the tick reporting ;). . FlowVR is currently used in DistanceField.cpp to load .fmesh files. We can probably refine the dependency to FlowVR to allow DistanceField object to work but without the fmesh support. This seems easy and I will try to do that. Damien.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/40#issuecomment-254765592:98,load,load,98,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/40#issuecomment-254765592,1,['load'],['load']
Performance,"Hi Quentin !; Thanks for the notice !. @untereiner I recall that you recently had a look at the VTKLoader in SOFA. Am I correct?; Did you face these warnings ?. Since the file is well loaded, we would simply need to update the loader to have only Warning (and no error msg) when facing these new metadata.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/652#issuecomment-387752616:184,load,loaded,184,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/652#issuecomment-387752616,2,['load'],"['loaded', 'loader']"
Performance,"Hi Thomas,. I made a small PR #371 trying to implement that. As you said a message is send if duplicated names exists.The name checking is done either on the node or on the object lists. The PR also contains basic tests to validate thee behavior. But, as usual, things are a bit more complex in the details...so I have several question.; - do we really want to have a test of linear complexity for each add to the scene graph ? ; To face this issue I have two solution one is to only activate the tests when there is #define WITH_SOFA_DEVTOOLS so that when we are using runSofa to make or debug ""scenes"". Once the scene is done it can be executed with improved performances on a runSofa (or any other scene runner) compiled without the DEVTOOLS enabled. ; The other approach would be to have an implicit extra param to the addChild(..., warnOnDuplicates) ;. - Second issue is that it is unclear to me if we have to check that all the time. Isn't there cases in which we have duplicate name (ie when adding object either with an""undefined"") that are then fixed ""later"". There is a lot of test (in simulation) that are now emitting a warning because of that so I assume the ""old"" behavior usage was quite common. . So guys (@jeremieallard, @thomas-lemaire, @matthieu-nesme, @maxime-tournier , @bcarrez , @fredroy ...) ...what design do we want ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/362#issuecomment-323859167:661,perform,performances,661,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/362#issuecomment-323859167,1,['perform'],['performances']
Performance,"Hi all, . Just a quick update asked by @hugtalbot on how we handled this issue at Anatoscope. It's been a while so our fork drifted quite a bit since the opening of this issue:. - `Data` are only allowed in `BaseObject` instances (i.e. `Nodes` have no data), which simplified many things; - We removed `initData/initLink` altogether, most constructors are now `(BaseObject* owner, const char* name, const char* doc, const T& value = {})`. A pleasant consequence in c++17 is that you may directly declare datas in the class like this:; ```c++; class Object: public BaseObject {; public:; Data<double> foo = {this, ""foo"", ""a foo that bars"", 1.0};; };; ```; - `BaseData` now maintains shareable information (like name/doc/etc) in a shared object, which can be shared between several data instances. In practice doing so is still very ad-hoc so we don't use it much, but it is possible in case we want to optimize dynamic component creation; - Dependency relations between `DDGNodes` no longer use the `Link` mechanism. ; - In fact component links and `Links` in general are mostly gone, and will be removed in the future as they're yet another dependency graph and we would like *everything* to use the data/engine graph instead; - Our `Data` have at most one input (another data or its owner engine), so we may move the `inputs` handling of `DDGNode` to derived classes to avoid needless allocations for `Data`. It's not done yet though. As you can see, things don't quite look the same, but I think old-timers would still recognize what's going on ;) By the same token I think this issue can be closed, but please don't hesitate if you have any question.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-1033777336:901,optimiz,optimize,901,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-1033777336,1,['optimiz'],['optimize']
Performance,"Hi all, . Thanks for the PR. . In the past it was consider that draw tools was a rendering abstraction layer to be used for debugging/inspection or GUI helpers. The recommendation was to use drawTools in the Base::visual() overrides. The main ideas was to allow component developpers to have rendering tools without having a dependency to opengl. On its side, OglXXX component in Sofa.GL exists to hold compoennts that, for whatever reason (performance, lack of time), are still implemented using the opengl api. Up to now, the evolution guidelines was something like:; - replace in the complete code base ogl call by drawTools calls into xxx::draw() ; - move every component for which ogl call remains (mostly in xxxx:drawVisual) into the Sofa.GL.XXX. This PR does something else, as it replace opengl calls from Sofa.GL.OglXXX by drawTools's ones. Implementing component rendering using drawTools instead of ogl calls is probably desirable (if there is no performance cost)... but it cannot be in Sofa.GL. . I recommand to create a new component in Sofa.Component.Visual, for the component using drawTools and if needed in Sofa.GL.Component have the ogl version subclassing it (if needed).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1181534481:441,perform,performance,441,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3115#issuecomment-1181534481,2,['perform'],['performance']
Performance,"Hi all,. In our branches @defrost we are adding more and more data field to get:; - filename/line where a component has been instanciated. ; - filename/line where the component is defined. . Both PSL & STLIB are using the same trick. . I remember of discussion with @matthieu-nesme on having less data field added because of the overhead. ; So currently we are only adding the fields when the component are instanciated dynamically (from a file) and not using the initData method. Now I wonder if we could do the same in createObject()/createNode() of course this would have performance impact...but given how slow python is anyway it may be totally unnoticeable on the ; run-time. Any opinion ?. DM. . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/685:575,perform,performance,575,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/685,1,['perform'],['performance']
Performance,"Hi all,. On my computer if I take the caduceus scene,; and I add something like parents=""@"" in for example the ""Snake"" node; runSofa crash when trying to load the scene.; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/374:154,load,load,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/374,1,['load'],['load']
Performance,"Hi all,. To me there is several questions here... ; 1- one is how to pass command line argument to python.; 2- one is how to get the file name associated with a loaded scene.; 3- one is how to execute multiple sofa in // with small difference in the scene.; ; 1-; To pass command line argument to python and answering Maxime suggestion I prefer something like --extra or --scene-argv so that we don't have to take care of not breaking someone's code. . 2-; Getting the filename using a binded function in the Sofa python module.; Filename only make sense in specific case, i.e. when we have a single scene loaded from a file (as in runSofa) of course this means nothing when you have no scene files (dynamically generating the scene) or you have loaded multiple scene. So I think this shouldn't be part of the Sofa python module but could find its place in a separated RunSofa python module that would expose things specific to the runSofaX application. Actually I would like to have this kind of module for other reasons. . 3-; About the general workflow of launching multiple scene. We have in Defrost few python scripts called sofa-launcher that we use to execute in parallel multiple sofa instances of a templated scene. The parallel execution can be done on a single machine or a a cluster of linux with ssh access, scene specific data are saved in temporary directories or gathered by the calling script for further processing (eg: plotting the result). think this could prefectly match what you want to do so I will make a PR for that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/356#issuecomment-323691821:161,load,loaded,161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/356#issuecomment-323691821,3,['load'],['loaded']
Performance,"Hi all. I really would like to see this happen! It's something I've been advocating for a long time. Feel free to add me to the workgroup.; From a user perspective (and organization standpoint) we could do something like what's done in python. Plugins could be grouped in packages (or to stay closer to the current architecture we could split ""modules"" into ""plugins""). Then if someone wants just a plugin from a package we could explicitly load it this way:; from FEMpackage import 2DFEMplugin; and if you want all of it; from FEMpackage import *",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/128#issuecomment-278580292:441,load,load,441,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/128#issuecomment-278580292,1,['load'],['load']
Performance,"Hi everyone,. I'm working right now on a small improvement that will allow people to directly import SofaPython plugin library (libSofaPython.so) inside their python script without the need for an external application (exemple runSofa). A python script could than looks something like:. ```; # scene.py; from libSofaPython import Sofa. root = Sofa.loadScene(""examples/Demos/caduceus.scn""); root.init(); for i in range(0,2):; ...; root.simulationStep(0.01); # Some data and timing analysis in python here...; ...; Sofa.cleanup(); ```; and could be called simply with; `python scene.py`. You can follow the development on the branch; https://github.com/jnbrunet/sofa/tree/sofa_python_without_executable. For now, the primary use for us is to create a batch application directly in python for our experiments (mainly time and precision benchmarks), but maybe some day we could also use this for a complete GUI experience. If you got any suggestion, please do not hesitate to write them here. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/492:348,load,loadScene,348,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/492,1,['load'],['loadScene']
Performance,"Hi fred,. Thanks for this PR. I made some totally minor cosmetic comment in the source code. I understand correctly what it does is that is loads by default the plugin that are compiled with sofa. . Maybe I misunderstood the initial purpose of your first PR but I though it was more to autoload a plugin if the one of its component was requested from the scene. Is this stil the purpose of the PR ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/301#issuecomment-308233805:140,load,loads,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/301#issuecomment-308233805,1,['load'],['loads']
Performance,"Hi guys,. Interesting points indeed.; I wanted to add that topological changes are not of interest of everyone in the community. It actually does not represent the major use case. I therefore think that strong dependencies (to TopologyData for instance) and code optimizations for topological changes only should be avoided. Do you agree?. Today, we often have either one version of a component (supporting or not the topological changes). Would there be a nice design allowing for having the possibility to have the two behaviors for each component ?. Personal reminder: this issue is about the MechanicalObject. I think it can be closed as soon as the dependency of MechanicalObject on TopologyData is removed. We should later continue this discussion in a specific/dedicated thread. Agreed ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/242#issuecomment-295635703:263,optimiz,optimizations,263,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/242#issuecomment-295635703,1,['optimiz'],['optimizations']
Performance,"Hi there,. You cannot load tests using the python binary because the sofa bindings are only available for the embedded interpreter. . There are some python tests under SofaTest/python IIRC.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/400#issuecomment-329794323:22,load,load,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/400#issuecomment-329794323,1,['load'],['load']
Performance,"Hi!. When building plugins as standalone projects, the SofaFramework package doesn't expose the cmake config options used to build SOFA.; In the SoftRobots plugin (among others), tests are performed to know if SOFA has been built using the required options (such as SOFA_BUILD_METIS, MODULE_SOFASPARSESOLVER, PLUGIN_SOFAPYTHON, SOFA_BUILD_TESTS etc.) and out-of-tree configurations require to re-specify those options, even though they are only defined in the SOFA build. I've modified the SofaFrameworkConfig.cmake.in to expose those options to whoever does a find_package(SofaFramework), although that might not be the smartest way to do it (the list is non exhausive and it would be best if options were added in a smarter way.; I think that modules such as SOFASPARSESOLVER should export the MODULE_SOFASPARSESOLVER themselves for instance, and so should the plugins.; But then there's also a long list of options that would be worth exposing, such as:; - SOFA_BUILD_TESTS; - SOFA_BUILD_METIS; - SOFA_BUILD_TUTORIALS; - SOFA_WITH_DEPRECATED_COMPONENTS; - SOFA_WITH_THREADING; - SOFA_WITH_DEVTOOLS; - SOFA_USE_MASK; - .... And I don't know where those should be exposed.. So I'm looking fwd to your opinion on the question!. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/927:189,perform,performed,189,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/927,1,['perform'],['performed']
Performance,"Hi, I am an university student trying to use sofa for my simulation work. When I try to configure SOFA master with Cmake a ""CMake Deprecation Warning at SofaAdvanced/CMakeLists.txt:15 (message):; SofaAdvanced is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaNonUniformFem. CMake Deprecation Warning at SofaMisc/CMakeLists.txt:21 (message):; SofaMisc is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaMiscExtra;SofaMiscEngine;SofaMiscFem;SofaMiscForceField;SofaMiscMapping;SofaMiscSolver;SofaMiscTopology""; warning is appearing. however, without crashing it get configured and generates the files. I have build the system on Visual Studio 2019 and it complies without any errors. However, when loading the RunSofa ""SofaPython"" and ""SofaExporter"" modules are not loading. I tried using the plugin manager and it reports erros that .dll file is not there. but it is there in the bin and could not add to the plugin manager. So my questions are as follows.; (1)I want to know whether do I have to change any configuration to avoid deprecation warning messages?; (2) loading the sofaphython to runSofa application ; My Cmake out put is as follows. Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19041.; Install prefix: C:/SOFA/build/master/install; Adding module SofaGeneralVisual; Adding module SofaGraphComponent; Adding module SofaGeneralMeshCollision; Adding module SofaBoundaryCondition; Adding module SofaGeneralAnimationLoop; Adding module SofaGeneralDeformable; Adding module SofaGeneralEngine; Adding module SofaGeneralExplicitOdeSolver; Adding module SofaGeneralImplicitOdeSolver; Adding module SofaGeneralLinearSolver; Adding module SofaGeneralRigid; Adding module SofaGeneralObjectInteraction; Adding module SofaGeneralSimpleFem; Adding module SofaGeneralTopology; Adding module SofaTopologyMapping; Adding module So",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1623:852,load,loading,852,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1623,2,['load'],['loading']
Performance,"Hi, great work there!. Just to mention that since the python plugin got proper GIL handling, it is also possible to implement communication all on the python side: just start a python thread and do the message dispatch from there using the python package of your choice. From there it's fairly easy to exchange data using a `Queue` between the communication thread and e.g. a script controller (in fact that was the main reason behind implementing GIL handling).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/534#issuecomment-348293977:325,Queue,Queue,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/534#issuecomment-348293977,1,['Queue'],['Queue']
Performance,"Hi, this is not a bug but a new feature I introduced in https://github.com/sofa-framework/sofa/pull/913 to provide (in build and install dirs) a folder that shall always be scanned by PluginManager when searching for a plugin (like the bin/ folder is). The idea was to get an easy way to add/remove plugin binaries in an installed SOFA **without polluting the bin/ folder** which contains stuff I'm not supposed to touch (or scared to touch). The typical use case is: ; I have SOFA binaries (downloaded from sofa-framework.org or provided by someone) and I have a plugin binaries. How to run the examples of the plugin in runSofa?. Many ways to do that:; 1. launch runSofa, open Plugin Manager, load the plugin, open the scene; 2. edit the scene to add `<AddPluginRepository path=""/path/to/the/plugin""/>` and `<RequiredPlugin name=""the_plugin""/>`, launch the scene in runSofa ; 3. copy/paste the plugin binaries (library or complete folder) in the bin/ folder of SOFA, add `<RequiredPlugin name=""the_plugin""/>` or add the_plugin in bin/plugin_list.conf.default, launch the scene in runSofa ; 4. **[NEW]** copy/paste the plugin binaries (library or complete folder) in the plugins/ folder of SOFA, add `<RequiredPlugin name=""the_plugin""/>` or add the_plugin in bin/plugin_list.conf.default, launch the scene in runSofa . (1) is perfect for a new user but becomes heavy quite soon; (2) is more agile but has limitations for plugins that need to be loaded **before** the scene creation (e.g. for Python env init); (3) solves the limitation of (2) if we use plugin_list.conf but, as I said, putting stuff in bin/ is scary; (4) is what I proposed to separate ""plugins that came with SOFA"" from ""plugins I add myself"". So now about this PR. What you proposed here is to install ALL the sources of applications/plugins into this new plugins folder. ~~Why? ; @jnbrunet You got a bug yesterday, what was it?~~. EDIT: Understood what the bug is, see my review :-)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/959#issuecomment-470886865:695,load,load,695,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/959#issuecomment-470886865,2,['load'],"['load', 'loaded']"
Performance,"Hi, tried both SOFA v22.06.00 and v23.06.00 versions, but not able to load Sofa.Component.UserInterface.ConfigurationSetting plugin, which is causing failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtil",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:999,load,load,999,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,1,['load'],['load']
Performance,"Hi, tried both SOFA v22.06.00 and v23.06.00 versions, but not able to load Sofa.Component.UserInterface.ConfigurationSetting plugin, which is causing failure of loading all the remaining plugins. check below error log. I am trying to run lapgym repo implementation , reach environment. Repo : https://github.com/ScheiklP/sofa_env; File : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/scenes/reach/scene_description.py; scene header file where plugins are loaded : https://github.com/ScheiklP/sofa_env/blob/main/sofa_env/sofa_templates/scene_header.py. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtili",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:70,load,load,70,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,5,['load'],"['load', 'loaded', 'loading']"
Performance,"Hi, tried to run a .py file using above commands, but getting error saying the Sofapython3.dll file cannot be loaded as the specified module cannot be found",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1937404645:110,load,loaded,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1937404645,1,['load'],['loaded']
Performance,"Hi,. I love @sescaida's PythonScriptDataEngine, I find it extremely useful when you don't want to implement a whole component to perform very basic actions. Though I find it cumbersome to have to manually specify the type of the input/output datafields.; While I have no idea (yet) how to fix this for the component's outputs, I implemented a small method to try to derive the input type from the linked value. We could also add scalar types to this method, to be able to handle passing scalar parameters directly from python.; Also, I think it would make more sense to use directly the output of ; ```; datafield->getValueTypeInfo()->name(); ``` ; instead of an arbitrary __char__ when expliciting the datafield type in the PSDE factory. If you have any idea how I could do something similar for output fields, I'm taking any advice :). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629:129,perform,perform,129,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629,1,['perform'],['perform']
Performance,"Hi,. So the component OglModel won't load stl file.; I think the issue comes from PR #661, in particular the changes made in VisualModelImpl. Eulalie; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/768:37,load,load,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/768,1,['load'],['load']
Performance,"Hi,. To fully support xml saving (see PR:https://github.com/sofa-framework/sofa/pull/116) we need to clean VisualModelImpl::parse(). . I can do some stuff but is unclear to me how much VisualModelImpl requires cleaning and whether or not some part are deprecated (the loading stuff from file seems redundant with loader). . By the way...any suggestion/advice regarding the data attributes is more than welcome. I started a branch there for that: https://github.com/SofaDefrost/sofa/tree/cleaning_visualmodelimpl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/118:268,load,loading,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/118,2,['load'],"['loader', 'loading']"
Performance,"Hi,. nice to have you back!. I think the fact that the ```doLoad``` is called 3 times is because your callback is not connected to all your output data at the same time. So each time you ask for a data independently it will relaunch the callback. Then the second point is because you don't override the method ```doClearBuffers```. you can see how ```meshObjLoader``` has been updated in commit ca3a1a4 (I don't know how to link the commit here...); date of the commit: Date: Wednesday, June 24, 2020 2:26:41 PM. I didn't know this loader. It would be nice if you could push a small example with it's mesh in the main repository of SOFA. Like for the other meshloader in: examples/Components/loader/ ; Moreover as soon as a scene is set, it would be tested by the CI of SOFA.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1534#issuecomment-711993815:532,load,loader,532,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1534#issuecomment-711993815,2,['load'],['loader']
Performance,"Hi,; ; Here's my fix for issue #1534. The problem was the use of `beginEdit()`, `endEdit()`... I'm not sure what was happening exactly,; but it looked like it was triggering extra callback... - I've replaced all `beginEdit()` with `getWriteOnlyAccessor()` and removed the `endEdit()` when there was any. I'm pretty sure `MeshGmshLoader` is also broken. I was about to fix it, but I came across another problem.; `MeshGmshLoader` uses calls to `addTriangle(...)`, `addEdge(...)`, `addQuad(...)`, etc., which are implemented in `MeshLoader`.; For the moment, `addTriangle` is the only one which has been duplicated to work with data returned by `getWriteOnlyAccessor()`.; I think we all agree that duplication of code should be avoided. I'm not sure what we should do here. Should we generalize the use of `getWriteOnlyAccessor()` in all loaders, and change all `addEdge(...)`, `addQuad(...)`, etc., signature once and for all (no duplication)?; Or should it be fine to use `beginEdit()`, and my fix doesn't solve the real problem? . Fixes #1534; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1554:836,load,loaders,836,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1554,1,['load'],['loaders']
Performance,"Hi,; I think what you are looking is the option: createSubelements=""true"" in the Gmsh loader",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2607#issuecomment-1014677720:86,load,loader,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2607#issuecomment-1014677720,1,['load'],['loader']
Performance,"Hi,; In one of my scenes, I have once mis spelled 'src' in the line code adding a loader for the mesh of an object's collision model:; `collision.createObject('Mesh', name=""mesh"", scr=""@loader"")`.; As a result, when animating the scene, and at the moment when a collision is detected, Sofa shuts down while no error message is provided in the terminal.; I have attached the code file of a scene that reproduces the error, using the Sphere and the Floor prefabs of stlib.physics.rigid. ```python; from stlib.scene import ContactHeader, MainHeader; from stlib.physics.rigid import Floor; from stlib.solver import DefaultSolver. def createScene(rootNode):. 	MainHeader(rootNode, gravity=[0.0,-9810.0,0.0])	; 	ContactHeader(rootNode, alarmDistance=5, contactDistance=2). 	ball = rootNode.createChild(""Floor""). 	totalMass = 1.0; 	volume = 1.0; 	inertiaMatrix = [1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]. 	ball.createObject('MechanicalObject', name=""DOF"", template=""Rigid"", translation=[0.0,0.0,0.0], rotation=[0.0,0.0,0.0]); 	ball.createObject('UniformMass', name=""mass"", mass=[totalMass, volume, inertiaMatrix[:]]). 	ball.createObject('UncoupledConstraintCorrection'); 	ball.createObject('EulerImplicit', name='odesolver'); 	ball.createObject('CGLinearSolver', name='Solver'). 	visual = ball.createChild(""Floor Visual""); 	visual.createObject('OglModel', name=""Visual"", fileMesh=""ball.obj"", color=[0.1,0.0,1.0]); 	visual.createObject('RigidMapping'). 	# collision model for the ball. 	collision=ball.createChild(""FloorCollisionModel""); 	collision.createObject('MeshObjLoader', name='loader', filename=""ball.obj"", triangulate=""true""). 	#line code responsible for the crash (scr is mispelled); 	collision.createObject('Mesh', name=""mesh"", scr=""@loader""); 	# by writing src correctly, the scene works well . 	collision.createObject('MechanicalObject'). 	collision.createObject('Triangle'); 	collision.createObject('Line'); 	collision.createObject('Point'). 	collision.createObject('RigidMapping'); 	# end ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/746:82,load,loader,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/746,2,['load'],['loader']
Performance,"Hi,; removing `SphereCollisionModel` elements from a `EdgeSetTopologyContainer` currently does not work, because . `TopologicalChangeManager::removeItemsFromSphereModel` calls `getCollisionTopology`; https://github.com/sofa-framework/sofa/blob/d42e3547dffaf385448fb077d466fc0bebc39bc9/Sofa/GUI/Component/src/sofa/gui/component/performer/TopologicalChangeManager.cpp#L297; which is not implemented in `SphereCollisionModel`, and the default from `BaseMeshTopology` returns `nullptr`.; https://github.com/sofa-framework/sofa/blob/471a3df6a377f92155f34ab4a75e931ec9559f7f/Sofa/framework/Core/src/sofa/core/CollisionModel.h#L357. I tried porting over the topology linking from [TriangleModel](https://github.com/ScheiklP/sofa/blob/sphere_on_edge_topo_changes/Sofa/Component/Collision/Geometry/src/sofa/component/collision/geometry/TriangleModel.inl), but it seems I am missing something, because it does not work :D ; https://cloud.ipr.kit.edu/s/ZHW7Jkz5yE6wb42. Is anyone seeing something obvious?. Cheers,; Paul. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3203:327,perform,performer,327,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3203,1,['perform'],['performer']
Performance,Hm...; The problem for now is that I don't know who and what way uses this BoxROI component. And how these changes affect their performance. For me it is ok to have it not in real-time.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/560#issuecomment-357640740:128,perform,performance,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/560#issuecomment-357640740,1,['perform'],['performance']
Performance,"I Maxime,. Thanks to rise up this kind of debate. . I agree with you that the cost for data init may be large. I see two problems:; - a lot of informations are duplicated in each instance of the component while most of the time they are per component informations (like the namestring, the helping docstring, etc...). I would be great to have that shared informations to be factored somewhere either it is per-class or per data.; - the iniData done in the constructor. As you mentioned the cost may be large at component creation. Do you have a code suggestion for refactoring so that we can have an idea on: ; - how invasive would it be (number of line of code to change :)) ? ; - what would be the performance difference ? . I do add Data at run time from time to time but it is not crucial for me and I could be handle by something called a DynamicData :) . DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255293984:700,perform,performance,700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255293984,1,['perform'],['performance']
Performance,"I agree that maintaining those ifdef are quite cumbersome and there are probably easier ways to manage this. Just a small remark, while arithmetic operations on double are probably faster than float (well, at least on most of our hardware), using float might minimize cache misses and might, with the help of compiler optimisations, produce faster execution times on memory intensive application (like SOFA) . I think we should test this before removing floats from everywhere. If we got different results, maybe we could set a default floating type for the entire Sofa, and allow modules to change this default value for their components.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/827#issuecomment-438663241:268,cache,cache,268,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/827#issuecomment-438663241,1,['cache'],['cache']
Performance,I agree with lionel and cleaning the loader is a long standing issue :) . -,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369692534:37,load,loader,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369692534,1,['load'],['loader']
Performance,"I am currently running a convergence analysis using python scenes. Since the convergence analysis loads several settings from a .json file, it would be good to have a possibility to forward the filename of the file to the python scene via the command line. To my knowledge, this is not possible at the moment, please correct me if I am wrong and explain me your solution. My first work around was to load from the same file (I call it outputJson, see the function definition below). However, this becomes cumbersome, when the code is parallelized, since several threads would like to load from that same file. My approach for the parallelization is to write the filename (which is now adapted to every scene) first into the .scn using PHP and then to load it from the python scene. ; That means, in the .scn file we have:; `<?php echo '<PythonScriptController classname=""convergenceBeam_Template"" filename=""convergenceBeam_TemplatePython.py"" listening=""1"" name=""convergenceBeam_Template"" variables=""'.$argv[1].'"" />'; ?>`; which called from the convergence python script and deleted later; ```; os.system(""php convergenceBeam_TemplatePython.scn ""+sofaOutput+"".pyscndata > ""+curTime+"".scn""); ... call the scene; os.system(""rm ""+curTime+"".scn""); ```; In the .py file we load the data using; `self.defineDataFromJson(self.findData(""variables"").value[0][0])`; where; ```; def defineDataFromJson(self,jsonFilename=""outputJson"") :; f = open(jsonFilename,'r'); self.data = json.load(f); f.close(); def getValueOfData(self,keyOfData) :; if keyOfData in self.data.keys():; return self.data[keyOfData]; printStack(); sys.exit(""\nERROR\n the key ""+keyOfData+"" is not defined!\nERROR\n""); ```. Both of the solutions I consider as hacks, the first as it can not run in parallel and the second as the scene does not work without running php on the side, thus it does not work with one command line. Potential (final?) solutions would be:; - a command line argument or command line argument**s** for python scenes; -",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/356:98,load,loads,98,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/356,4,['load'],"['load', 'loads']"
Performance,I am unable to follow the pendulum tutorial at step 4 because it is not possible to edit position Vector 1/2 from the GUI. Expected outcome: . Left click and typing of the number 2 in the X cell of the second position vector will update the X cell value from 1 to 2:. Actual outcome: It is not possible to edit any vector components in the GUI. Steps to reproduce: ; 1 load examples/Tutorials/StepByStep/Pendulum/3_Pendulum.scn in the modeler application of v17.12 build. ; 2 Double click on MechanicalObject Particles. Selcet Vector 1/2 tab of the GUI. ; 3 Left click and type the number 2 in the X cell of the second position vector will update the X cell value from 0 to 1:. Below is the dialog box that should be visible when trying to edit the vector component.; ![mechanicalobj scn](https://user-images.githubusercontent.com/20428997/41324725-19c31702-6e6b-11e8-98ca-268a77abe061.png). ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/686:369,load,load,369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/686,1,['load'],['load']
Performance,"I am using a Visual(Ogl)Model to display a decorative mesh (ie not a simulated object); The geometry is loaded using a MeshLoader. If I change some transformation value in the MeshLoader, and update/reinit this component, I get:; - positions in mesh loader updated; - VisualModel linked positions updated; - the 3d display NOT updated; - even if I reinit the VisualModel the display is still not updated; - even if I step the display is still not updated. I would expect that a VisualModel reinit would do the trick. If I add a MechanicalObject node + bottom level with IdentityMapping+VisualModel, then when I step I have the VisualModel and display updated - this is what I expect in that case (and this is currently my workaround) - What the mapping is doing to make the VisualModel really updates ?. I attach a simple demo .scn that show the issue (well looks like .scn cannot be attached) :. <Node name=""Root"" >; <MeshObjLoader name=""loader"" filename=""mesh/floor3.obj"" />; <MechanicalObject name=""dofs"" src=""@loader"" />; <Node name=""simple"">; <VisualModel name=""visual"" src=""@../loader"" color=""red"" />; </Node>; <Node name=""mapping"">; <VisualModel name=""visual"" src=""@../loader"" color=""blue"" />; <IdentityMapping name=""mapping"" />; </Node>; </Node>. If you think this is not a bug, feel free to change the label of this issue",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/152:104,load,loaded,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/152,6,['load'],"['loaded', 'loader']"
Performance,I built Sofa with the registration plugin successfully. When I had a test with ICPRegistration_ShapeMatching.scn in .\applications\plugins\Registration\examples. It reminded these errors:. [INFO] [SofaPython] Added ‘F:/SOFA16.12/sofaproject/sofasrc/applications/plugins/image/python’ to sys.path; [INFO] [SofaPython] Added ‘F:/SOFA16.12/sofaproject/sofasrc/applications/plugins/Registration/python’ to sys.path; [INFO] [SofaPython] Added ‘F:/SOFA16.12/sofaproject/sofasrc/applications/plugins/SofaPython/python’ to sys.path; [INFO] [PluginManager] Loaded plugin: F:/SOFA16.12/sofaproject/sofabuild/bin/Release/SofaPython.dll. [INFO] [PluginManager] Loaded plugin: F:/SOFA16.12/sofaproject/sofabuild/bin/Release/Registration.dll; [ERROR] [RequiredPlugin] Plugin not found: “SofaMiscForceFieldDev”; [ERROR] [DAGNode “source”] Object type “RotationFinder” creation Failed; [ERROR] [DAGNode “source”] Object type “ShapeMatchingForceField” creation Failed; [ERROR] [SceneLoaderXML] Node initialization failed. I didn’t find any information about this SofaMiscForceFieldDev plugin. Can anyone give me some tips about that?. Thanks in advance!,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/307:548,Load,Loaded,548,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/307,2,['Load'],['Loaded']
Performance,"I built sofa v16.08 on CentOS 7 using GCC 4.8.5 with the default cmake options. The build completes successfully. However, when I execute runSofa it terminates due to a segfault. This happens with both debug and release builds. Here's the stack trace after running in debugger:. ```; #0 0x00007ffff7b32133 in sofa::simulation::graph::DAGNode::detachFromGraph (this=0x18a1190) at /media/nvme4/sofa/v16.08/SofaKernel/modules/SofaSimulationGraph/DAGNode.cpp:128; #1 0x00007ffff687257e in sofa::gui::PickHandler::init (this=0xaec5f0, root=0xbe9b40) at /media/nvme4/sofa/v16.08/applications/sofa/gui/PickHandler.cpp:164; #2 0x00007ffff686336e in sofa::gui::BaseViewer::load (this=0x97f178) at /media/nvme4/sofa/v16.08/applications/sofa/gui/BaseViewer.cpp:283; #3 0x00007ffff71c9d61 in sofa::gui::qt::RealGUI::setScene (this=0x8b5ab0, root=..., filename=0x78cbb8 ""/media/nvme4/sofa/v16.08/examples/Demos/caduceus.scn"", temporaryFile=false); at /media/nvme4/sofa/v16.08/applications/sofa/gui/qt/RealGUI.cpp:883; #4 0x00007ffff687b1af in sofa::gui::GUIManager::SetScene (groot=..., filename=0x78cbb8 ""/media/nvme4/sofa/v16.08/examples/Demos/caduceus.scn"", temporaryFile=false) at /media/nvme4/sofa/v16.08/applications/sofa/gui/GUIManager.cpp:298; #5 0x000000000040ef7b in main (argc=1, argv=0x7fffffffa798) at /media/nvme4/sofa/v16.08/applications/projects/runSofa/Main.cpp:374; ```. I tried running some of the tutorial applications as well and it looks like the segfault occurs anytime the sofa simulation gets initialized with a ```DAGSimulation```. e.g. the ```chainHybrid``` tutorial application starts successfully (it uses a ```TreeSimulation```) while one ```oneParticle``` exhibits the segfault. Here's the backtrace from running ```oneParticle```:. ```; #0 0x00007ffff7b3b4d4 in sofa::core::objectmodel::LinkTraitsValueType<sofa::simulation::graph::DAGNode, sofa::simulation::graph::DAGNode*, false, true>::T::operator-> (this=0x8); at /media/nvme4/sofa/v16.08/SofaKernel/framework/sofa/core/../../s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/127:664,load,load,664,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/127,1,['load'],['load']
Performance,"I close this PR, It changes a lot the behavior of the plugin loader, that now complains that many symbols are not defined. I guess it's the same behavior for CPU alreadydefine symbols. I d'ont know how we could remove the thousands of warnings it generates anyway.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1548#issuecomment-713514597:61,load,loader,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1548#issuecomment-713514597,1,['load'],['loader']
Performance,"I commented on #151 why I don't this this strategy is viable. An additional point related to this fix, is that `TemporaryLocale` is not a good solution, and needs to be banned for cases where Sofa is embedded within an application having multiple threads. Indeed, `setlocale` is ""MT-Unsafe"" according to the docs, and does affect the locale of the other threads that could run in parallel. It's like `setcwd`, but unlike the notion of the current directory that we can workaround (by having the notion of the current directory tracked within Sofa), there is no thread-safe and portable way to do the same for the locale (as far as I know).; Depending on the GUI framework in use, the order of initialization, the OS, the system language, ..., the current locale will be changed (hint: the current constructor/destructors of `TemporaryLocale` do have non-temporary consequences, as there is no real way to get back to the ""no-locale-default"" state once someone messed with it. There is no obvious solution to this, but I would vote for going back to the strategy of imposing ""C"" at the beginning of the programs we control (i.e. `runSofa`), and adding checks and outputting a warning when loading a scene if the external application did not set the locale correctly to this safe value, but either never messing with it, or making this externally-controllable from the application using Sofa.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/161#issuecomment-281643466:1188,load,loading,1188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/161#issuecomment-281643466,1,['load'],['loading']
Performance,"I don't believe there was a pull request already attached to issofa_plugins branch ? My apologies if that ; was the case. . # Purpose; Some basic plugin functionalities were silently changed for no good reasons other the past years, namely; - SOFA_LIBSUFFIX which should be set as ""_d"" during a debug build is broken under msvc since c89da68 which as the commit name says is indeed monstruous. It was ""fixed"" later by adding directly inside the PluginManager code a condition to add the ""_d"" suffix by checking the compiler. ; - The default behavior of the global `PluginRepository`, was changed by c5a19fe for absolutely no good reasons.; It breaks a very basic functionaliy ( you can always load a library that is in your working directory ), also this change had some **interesting** side effects when basically you write a unit test which relies on; a scene file that uses a `RequiredPlugin`... that shortcoming was somewhat hidden by having all tests relying on `SofaGTest`, whose sole reason of being is to actually amend c5a19fe by populating the PluginRepository with the current working dir. Some additional functionalities are added to `RequiredPlugin` by this PR, namely the ability to specify other suffixes ( or no suffix at all ) to prepend when attemtping to load a plugin with a name hint. . # CHANGELOG ; FIX; [SofaHelper]; - Restore the `SOFA_LIBSUFFIX` behavior with msvc; - `PluginRepository` is initialized to contain the current working directory. CHANGE; [SofaHelper] ; - `PluginManager` : keep only a single version of the `loadPlugin` method. Also the method returns true; even if the plugin is already loaded. Returning false is kept only for real failures, whereby the library could ; not be loaded. If it is important to check wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ;",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:693,load,load,693,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,1,['load'],['load']
Performance,"I don't think that anything triggers when a non-existing file is trying to be load. So I added an error. I think it could have detected the error from https://github.com/sofa-framework/sofa/pull/3674. Unit tests are added. Changes in Node are just nullptr checks to prevent crashes when `getSimulation()` returns `nullptr`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3677:78,load,load,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3677,1,['load'],['load']
Performance,"I encountered a problem which I think is related: on my setup (Windows, debug) runSofa_d.exe crashes because it expects to find zlibd.dll, and only finds zlib.dll in build/bin/Debug. I manually copied zlibd.dll to try a quick fix, but then CImgPlugin could not load. Going to see it's dependencies, it seems to link with the non debug version zlib (which I had replaced), instead of zlibd, in the same way as it does for libpng16.; Trying to investigate, I found in the CImgPlugin CMakeLists.txt two lines (74-75) which could explain this :; ```; # Always link dependency targets in Release to avoid a Zlib debug/release mix.; # Because tiff needs zlib and tiff is only in Release in WinDepPack.; sofa_set_targets_release_only(${DEP_TARGETS}); target_link_libraries(${PROJECT_NAME} PUBLIC ${DEP_TARGETS}); ```; If someone can check, I'm not entirely sure it is the same issue though",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1851#issuecomment-790656198:261,load,load,261,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1851#issuecomment-790656198,1,['load'],['load']
Performance,"I found the problem: the binaries shipped with the dependencies packages are compiled with a version of VS which is not 2013 or 2015. ; And if you dont use the same CRT version between fopen/fread/.... , libpng will crash.; http://stackoverflow.com/questions/29208826/libpng-1-616-crashing-on-png-read-png-in-vs2012-c :. > ; > You are passing a (FILE*) to libpng, probably using png_init_io. Visual Studio crashes inside fread when it tries to access the underlying FILE structure.; > ; > This is because you created the FILE* using fopen from one Visual Studio runtime but libpng is linked against a different Visual Studio runtime (msvcrt or something like that); the two runtimes are incompatible. And it is currently wokring with the present ImagePNG because this class set its own read function() to libpng using ; `png_set_read_fn(PNG_reader, file, png_my_read_data);`; But CImg does not.; The solution is to built new version of the binaries for each supported Visual Studio version (2013 and 2015 in our case). Moreover, we need to ship as well the debug version of those libraries, as libpng is incompatible between release and debug configurations (e.g you compile Sofa in debug and load it with libpng.dll, it will crash if you use libpng ; and vice-versa)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185#issuecomment-286420546:1193,load,load,1193,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185#issuecomment-286420546,1,['load'],['load']
Performance,"I have a plugin with custom components which I try to use in a python3 scene, but SOFA segfaults when trying to add them to the scene. . My component code is pretty simple, is a basic example. ```; namespace VNCS; {; template <typename DataType>; class Clustering : public sofa::core::objectmodel::BaseObject; {; using Inherit = typename sofa::core::objectmodel::BaseObject;; using Real = typename DataType::Real;. public:; SOFA_CLASS(SOFA_TEMPLATE(VNCS::Clustering, DataType), sofa::core::objectmodel::BaseObject);. Clustering(); : Inherit(); {; }. private:; };; } // namespace VNCS; ```. but a scene contain a component like this fails to load. ```; ...; fineObject = simulationNode.addChild(""Fine""); dObject = fineObject.addChild(""dObject""); dObject.addObject(""MechanicalObject"", template=""Vec1"", name=""d_MO""); dObject.addObject(""Clustering"", template=""Vec1"", name=""Clustering""); ```. with the following backtrace. ```; ########## SIG 11 - SIGSEGV: segfault ##########; -> /home/jjcasmar/D/libs/builds/sofa/lib/libSofaHelper.so.20.06.99(sofa::helper::BackTrace::dump()+0x23) [0x7fa97395db13]; -> /home/jjcasmar/D/libs/builds/sofa/lib/libSofaHelper.so.20.06.99(sofa::helper::BackTrace::sig(int)+0x1df) [0x7fa97395deaf]; -> /usr/lib/libc.so.6(+0x3d6a0) [0x7fa9731316a0]; -> /home/jjcasmar/D/libs/builds/sofa/lib/libSofaCore.so.20.06.99(sofa::core::objectmodel::Base::findDataLinkDest(sofa::core::objectmodel::BaseData*&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, sofa::core::objectmodel::BaseLink const*)+0x7c) [0x7fa97464790c]; -> /home/jjcasmar/D/libs/builds/sofa/lib/libSofaCore.so.20.06.99(sofa::core::objectmodel::BaseNode::setObjectContext(boost::intrusive_ptr<sofa::core::objectmodel::BaseObject>)+0x61) [0x7fa974664f11]; -> /home/jjcasmar/D/libs/builds/sofa/lib/libSofaSimulationCore.so.20.06.99(sofa::simulation::Node::doAddObject(boost::intrusive_ptr<sofa::core::objectmodel::BaseObject>)+0x40) [0x7fa974a57ef0]; -> /home/jjcasmar/D/libs/builds",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1476:641,load,load,641,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1476,1,['load'],['load']
Performance,"I have added #ifdef to activate/deactivate the mutex on demand. . @matthieu-nesme I measured the performance with the mutex. On my machine, the message API is handling around 900000 messages per seconds. I got no noticeable difference when the mutex is there or not. Can someone confirm that ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/257#issuecomment-300826431:97,perform,performance,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/257#issuecomment-300826431,1,['perform'],['performance']
Performance,"I have compiled and installed SOFA master branch with the CGAL plugin. In the compilation folder, under lib, I have libCGALPlugin.so, and if I do ldd libCGALPlugin.so, it founds all the dependencies. However, if I install SOFA, (`cmake --build . --target install`), libCGALPlugin.so is moved to a plugins folders, under `<install>/plugins/CGALPlugin/lib`, and ldd now shows that libCGALPlugin.so can't find all the dependencies. . Ive search a bit and apparently, the rpath is set to `$ORIGIN/../lib`, which is okay when the library is directly in the `<builddir>/lib` folder, but fails if the library is in `<installdir>/plugins/CGALPlugin/lib/`. . Due to this, its not possible to load the plugin. . This happens not only with with plugins, but for example also with `libSofaComponentAll.so`. It tries to load `libSofaOpenglVisual.so`. In the <builddir> works fine because both are under `<builddir>/lib`, but when installed, `libSofaOpenglVisual.so` is moved to `<installdir>/lib/SofaOpenglVisual/lib`, where `libSofaComponentAll.so` is not searching.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1560:683,load,load,683,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1560,2,['load'],['load']
Performance,"I have no idea what this code is supposed to do.; - it does not seems related to something that is in SimulationGraph (there is no #include). ; - it use a weird string comparison to detect parent-child relationship instead of the meta classe facilities (BaseClass) ; - it seems to be supposed to implement specific behavior for the XML loader ; - removing it does not change anything. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2694:336,load,loader,336,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2694,1,['load'],['loader']
Performance,"I have several objections with this PR. ; - the mechanism relies on a specific symbol lookup. So in order to make a plugin auto-loadable, you need to recompile the plugin which design wise is not so great. ; - It also has the major downside of having to load the library to know if the plugin is auto-loadable, which in the end results in having to load all the available plugins. Loading a library in the process memory will have several side effects which are difficult to anticipate before hand. The major one is the evaluation of all the global variables, which will result in populating the `ObjectFactory` with all the components that this library contains. I would suggest something different for this kind of having a list of default plugins that are loaded directly with your application ( here `runSofa` ). - derive a sort of sofa plugin manifest file, which can be generated as a post-build step. This should be an easy to parse file which could contain the various informations exposed by the `getModuleName()`, `getModuleVersion()`... without having to load the library in the process memory. This manifest file must be stored in an easy to find location in your build tree, an be installed properly ( they need also to be bundled when you deploy your application ). That means they should be located with a similar relative path with respect to the application ( `runSofa` ) when in the build tree or in the install tree. There should be a proposal about that to define : ; - the manifest file type ( ie how are we going to parse it ? json xml text ? ); - the manifest file content itself. - any application could then define the list of predefined plugin it wants to load using a simple configuration file. A default configuration can be provided, but it could be easily overriden. With this mechanism, no recompilation is required when you want to change the list of default plugins, you just change the config file. NB : a bit unrelated but there is a small code ""snippet"" that can be",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253#issuecomment-296982188:128,load,loadable,128,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253#issuecomment-296982188,6,"['Load', 'load']","['Loading', 'load', 'loadable', 'loaded']"
Performance,"I just added the performances tests... not very significant on ""classical"" scenes. So for the moment I suggest keeping the two version of DataContentValue<> but merge de PR to remove the dependency to DataTypeInfo.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2285#issuecomment-910387440:17,perform,performances,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2285#issuecomment-910387440,1,['perform'],['performances']
Performance,"I just had a look on the implementation of `FullVector`. I notice the following differences between `operator[](Index i)` and `element(Index i)`:. - `element(Index i)` is virtual; - `element(Index i)` returns necessarily a `SReal` independent from the type of `FullVector`. It may lead to a type conversion therefore an impact on the performances. But usually, all the components are compiled with `SReal`, so I am not sure there is a conversion here. So it should not affect the performances. I am confused here, because I cannot believe that the speedup you get is only because of the virtual function. I guess you can try again your benchmark, but instead of using `operator[](Index i)`, use `FullVector<Real>::element(Index i)`. Note that I force the `element` function to be the one in `FullVector<Real>`.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236791920:334,perform,performances,334,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3231#issuecomment-1236791920,2,['perform'],['performances']
Performance,"I looked into the OglModel implementation. The implementation contains very old OpenGL rendering code (OpenGL 2.0) and is very hard to read because of excessive use of #ifdef all around. . So I made a PR to clean it a bit (remove the GLEW stuff) ...because do we need such a thing in 2018 ? ; In the PR I also fix the performance issue by converting all the doubles arrays to float array before passing them to the vertex buffer object. This resulted in performance boost on Linux, I would be happy to have someone confirming this also fix the problem on MacOS. . https://github.com/sofa-framework/sofa/pull/1069",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1070#issuecomment-497911918:318,perform,performance,318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1070#issuecomment-497911918,2,['perform'],['performance']
Performance,I managed to add and compile STLIB and SoftRobots but when i try to start a scene it seems that Python does not find the library. . [ERROR] [SofaPython3::SceneLoader] Unable to completely load the scene from file '/home/*******/plugin_sofa/SoftRobots/docs/sofapython3/tutorials/FirstSteps/firststeps-tuto.py'. ; Python exception: ; ModuleNotFoundError: No module named 'stlib3',MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2932:188,load,load,188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2932,1,['load'],['load']
Performance,"I propose a more readable code for the component BruteForceDetection. It is a crucial component, used in many Sofa scenes, and yet it is hard to understand what it does.; Among the changes I propose:; - Split giant functions into multiple smaller functions; - Give meaningful names to functions, variables and types; - Merge simple operations which was hard to read into simple expressions; - Add a lot of comments. The algorithm stays the same. Note the number of lines is larger than before. It is the price for readability. It is mainly due to the several functions I added. I did not notice any performances drop. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1999:599,perform,performances,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1999,1,['perform'],['performances']
Performance,"I recently had a small problem when a plugin was implicitly loading SofaConstraint from the SOFA's installation because its compilation was depending on it, but runSofa was launched from the build directory, hence loading SofaConstraint two times (one from the build directory, and one from the installation directory). This resulted in these output from the object manager:. ```; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec2d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: ; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Default template for class SlidingConstraint already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Rigid3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class already registered: Vec2d; [WARNING] [ObjectFactory] Class already registered: Vec3d; [WARNING] [ObjectFactory] Class already registered: Vec1d; [WARNING] [ObjectFactory] Class a",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1652:60,load,loading,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1652,2,['load'],['loading']
Performance,"I recommend adding tests, and repeat them several times due to the non-deterministic nature of a multi-threaded approach.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1862#issuecomment-791314794:97,multi-thread,multi-threaded,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862#issuecomment-791314794,1,['multi-thread'],['multi-threaded']
Performance,"I suggest using the memory sensitization tools provided by GCC or Clang - it is less hassle than valgrind. It also provides more detail regarding memory leaks. To do this, build Sofa with the additional flag: `cmake .. -DCMAKE_CXX_FLAGS=""${CMAKE_CXX_FLAGS} -fsanitize=address""`. Here is the output when running the example (CPP) scene provided by @ScheiklP. The 15 object(s) that are detected are come from the number of unloads performed (I decreased it to 15 from the original 1000 used in the scene by @ScheiklP). ```; =================================================================; ==445057==ERROR: LeakSanitizer: detected memory leaks. Direct leak of 480 byte(s) in 15 object(s) allocated from:; #0 0x7fc3004af587 in operator new(unsigned long) ../../../../src/libsanitizer/asan/asan_new_delete.cc:104; #1 0x7fc3000d4160 in sofa::core::collision::TDetectionOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >* sofa::core::collision::BaseIntersector::createOutputVector<sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> > >(sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*, sofa::component::collision::geometry::PointCollisionModel<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*) /home/pit/LocalApps/sofa/sofa/src/Sofa/framework/Core/src/sofa/core/collision/Intersection.h:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:429,perform,performed,429,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['perform'],['performed']
Performance,"I switched to the dark side, running emacs as my IDE :smiling_imp:, and I was testing it on SOFA's codebase. (If you like coding & navigating through SOFA's codebase without having QtCreator transforming your laptop into an airplane, you should try it, it's great!) ; Anyway, I'd like to suggest adding some stuff to the .gitignore file:. * emacs auto-generates autosave files that have the following formats: `#*` and `~*` ; * When running emacs as an IDE, an emacs package called `projectile` creates a file called `.dir-locals.el`, containing project configuration, compilation, and running instructions for emacs in the project's root folder.; * Finally, Emacs uses `clangd` or `ccls` as its language servers. these programs store their index (LSP data for the project's codebase) in `.cache/` and `.ccls-cache/` respectively. clangd & ccls both require cmake to generate a `compile_commands.json` file, which we also don't want to be committed in the git repository. I also noticed that SOFA doesn't have a `.clang-format` file. A clang-format file gives great hints to contributors, regarding the formating guidelines for SOFA. This .clang-format file respects the [coding guidelines described here](https://www.sofa-framework.org/community/doc/programming-with-sofa/guidelines/); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2884:790,cache,cache,790,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2884,2,['cache'],['cache']
Performance,"I tested your work yesterday in the evening and I really appreciated the easy usage! I would like to add some remarks that might be interesting for future improvements:; 1. If there is a possibility to use the advanced timer at initialization (see #357), where do we need to perform changes to use your code? I would guess the main changes have to be made in [PythonAdvancedTimer.py](https://github.com/mimesis-inria/sofa/blob/0e1a298aa41f666eb792d846101be36352dbb5b3/applications/plugins/SofaPython/python/SofaPython/PythonAdvancedTimer.py) and in the reading of the json file, since the first time step has the identifier 0.; 2. Currently -c and your time evaluation exist side by side. Is it possible to combine your work with the command line argument -c?; 3. Similarly, your time evaluation exists side by side with the command -n (this variable is used in batch mode when launching the simulation for a certain number of steps). When running my simulation, I realized, your number of steps and the number of steps given by the command line add up. Again here, it would be valuable to know: how is it possible to directly use the command line argument?. More ideas might follow, thank you for your investment of time in this nice feature that I will use certainly!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/360#issuecomment-324873542:275,perform,perform,275,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/360#issuecomment-324873542,1,['perform'],['perform']
Performance,"I think the `CGLinearSolver` has a good example on such ""optimization"". Let's look at the following un-optimized code:. **Version 1**; ```; x.peq(p,alpha); // x = x + alpha p; r.peq(q,-alpha); // r = r - alpha q; ```. which can be seen as:. ```; VOp op1 = ""x = x + alpha p"";; Visitor(op1);. VOp op2 = ""r = r - alpha q"";; Visitor(op2);; ```. and its optimized version:. **Version 2**; ```; VMultiOp ops;; ops.resize(2);; ops[0].first = (MultiVecDerivId)x;; ops[0].second.push_back(std::make_pair((MultiVecDerivId)x,1.0));; ops[0].second.push_back(std::make_pair((MultiVecDerivId)p,alpha));; ops[1].first = (MultiVecDerivId)r;; ops[1].second.push_back(std::make_pair((MultiVecDerivId)r,1.0));; ops[1].second.push_back(std::make_pair((MultiVecDerivId)q,-alpha));; this->executeVisitor(simulation::MechanicalVMultiOpVisitor(params, ops));; ```. which can be seen as:. ```; VMultiOp ops;; ops[0] = ""x = x + alpha p""; ops[1] = ""r = r - alpha q""; Visitor(ops);; ```. Finally, imagine we have the following scenario:. ```; CGLinearSolver; |; +-------------+--------------; | |; +--------+-----------+ +----------+---------+; | MO1 | | MO2 |; +--------------------+ +--------------------+; |x: [x0, x1, ..., xn]| |x: [x0, x1, ..., xm]|; |p: [p0, p1, ..., pn]| |p: [p0, p1, ..., pm]|; |r: [r0, r1, ..., rn]| |r: [r0, r1, ..., rm]|; |q: [q0, q1, ..., qn]| |q: [q0, q1, ..., qm]|; +--------------------+ +----------+---------+; |; mapping1 | mapping2; +--------------+-------------+; | |; +----------+---------+ +----------+---------+; | MO3 | | MO4 |; +--------------------+ +--------------------+; |x: [x0, x1, ..., xl]| |x: [x0, x1, ..., xo]|; |p: [p0, p1, ..., pl]| |p: [p0, p1, ..., po]|; |r: [r0, r1, ..., rl]| |r: [r0, r1, ..., ro]|; |q: [q0, q1, ..., ql]| |q: [q0, q1, ..., qo]|; +--------------------+ +--------------------+; ```. Version 1 will do:; 1. Launch a visitor in the CG's subgraph (`x.peq(p,alpha);`); **MO 1** : x = x + alpha p; **M0 2** : x = x + alpha p; **MO 3** : x = x + alpha p; **MO 4*",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1263#issuecomment-592412191:57,optimiz,optimization,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1263#issuecomment-592412191,3,['optimiz'],"['optimization', 'optimized']"
Performance,"I think the layout is ok now, . I only want o re-implement the xsp loader using the code from MeshXspLoader that is stl instead of good old C. . There is new tests including one that fails (because ...well the implementation is broken and the test is right ;))",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/918#issuecomment-461343436:67,load,loader,67,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/918#issuecomment-461343436,1,['load'],['loader']
Performance,I totally agree on the fact that the PluginManager widget in the Qt GUI is irrelevant now (useless to load a plugin manually AFTER loading the scene using element from it).,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487#issuecomment-338581715:102,load,load,102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487#issuecomment-338581715,2,['load'],"['load', 'loading']"
Performance,"I tried this feature with BeamAdapter, replacing the parallel std::for_each() on https://github.com/sofa-framework/BeamAdapter/pull/50; On a custom scene, the performance is the same, which is a good news by itself. The regression test did not report any discrepancy either.; And at least there is no special case (compiler not supporting std::execution, etc) to handle 👍",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3548#issuecomment-1370411383:159,perform,performance,159,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3548#issuecomment-1370411383,1,['perform'],['performance']
Performance,"I tried with the imgui GUI in a clean build.; I confirm that `runSofa -l SofaImGui -g imgui` creates a file _lastUsedGUI.ini_, with `imgui` inside.; Then, if I run `runSofa -l SofaImGui`, as expected, it loads the last used gui (found in the file).; However, it does not work with `runSofa` (without the `-l SofaImGui`). Normal, since the plugin is not loaded. It would be the same situation with a double-click on the executable.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2979#issuecomment-1137219817:204,load,loads,204,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2979#issuecomment-1137219817,2,['load'],"['loaded', 'loads']"
Performance,I used this approach in my attempt to parallelize two tasks. It did not exhibit any crash due to race condition compared to the previous implementation of the visitor.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1963#issuecomment-810821098:97,race condition,race condition,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963#issuecomment-810821098,1,['race condition'],['race condition']
Performance,I want to make this PR less ambitious by solving the case only when the user loads a scene with a wrong quaternion. ; This does not solve the problem when the user modifies the quaternion wrongly in the GUI.; I let cleverer people fix this issue in the best way...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/790#issuecomment-429879592:77,load,loads,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/790#issuecomment-429879592,1,['load'],['loads']
Performance,I would be very surprised this could have anything to do with STLIB. STLIB is a pure python libray that just create a Sofa scene. My first guess would be that the created scene is crashing...but the same scene would crash the same way if loaded from XML.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1469#issuecomment-774285932:238,load,loaded,238,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1469#issuecomment-774285932,1,['load'],['loaded']
Performance,"I'd prefer to assume that the caller knows what he is doing and add the debug searching as a fallback:; ``` cpp; std::string pluginPath = findPlugin(pluginName);. if(pluginPath.empty() && DO_SPECIFIC_CODE_IN_DEBUG); {; // Plugin not found but we are in debug so let's try to load debug plugin; pluginPath = findPlugin(pluginName+""_d"");; }. if(pluginPath.empty()); {; const std::string msg = ""Plugin not found: \"""" + pluginName + ""\"""";; if (errlog); {; (*errlog) << msg << std::endl;; }; else; {; msg_error(""PluginManager"") << msg;; }; return false;; }. return loadPluginByPath(pluginPath, errlog);; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/465#issuecomment-335807571:275,load,load,275,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/465#issuecomment-335807571,2,['load'],"['load', 'loadPluginByPath']"
Performance,"I'm looking for the ""-"" in the read to detect the intervals syntax:; 0-5 or 0-10-2 as well as --5-5 or 10--10. This intervals syntax using '-' was not of my own and I'm actually quite surprised and happy it was possible to fix the crash & endless loop that were in the code while preserving the syntax and backward compatibility. . Now all this discussion about performance rise my interest as I wonder if all this discussion have a measurable impact on performances. As usual I cannot prevent myself to make a small benchmark. ; The benchmark is implemented in the test class so that we will be able to detect performance regression in the future. . First there is a +200ms variation between the same run so I average several runs which gaves these numbers: ; strtoll alone tooks 1645 ms to ""read"" 1 000 000 time a size 10 array. ; strtoll+early check of '-' tooks 1654 ms to ""read"" 1 000 000 times the same array. ; ; strtoll alone tooks 7758 ms to ""read"" 100 000 time a size 1000 array. ; strtoll+early check of '-' tooks 7719 ms to ""read"" 100 000 times the same array. . strtoll alone tooks 8464 ms to ""read"" 1000 time a size 100 000 array. ; strtoll+early check of '-' tooks 8403 ms to ""read"" 10000 times the same array. . So we are discussing about un-measurable effect and I switched to your version because it contains less lines of code and looks simpler which is a very good property. . Is there still question about this PR? . EDIT: and the dashboard is now green on linux. @bcarrez please finish #267 :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302814828:362,perform,performance,362,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302814828,3,['perform'],"['performance', 'performances']"
Performance,"I'm ok to do that work, unifying the Core:Mesh and MeshLoader is already wip. ; But we can't remove all loader from Sofa. VTK, Gmsh and Trian for example are more ""research"" format and are not handled by Assimp. . I'm ready to create a generic ""MeshLoader"" component that will deal internally with the format and choose either assimp or another loader. But first we need to decide this: https://github.com/sofa-framework/sofa/issues/602",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369890790:104,load,loader,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603#issuecomment-369890790,2,['load'],['loader']
Performance,"I'm surprised this hasn't caused problem before, especially with mac os since I have a feeling its XCode's clang compiler often has different default settings (could be the reason why Stephane had weird problems when overriding some SOFA methods in his plugin on his mac, whereas no problem with GCC or Ubuntu's clang version). I just realized that we aren't using LTO in SOFA. At some points, we could converge towards a clean :. - visibility=hidden everywhere; - explicit public visibility with SOFA_EXPORT_DYNAMIC_LIBRARY; - LTO. Anyway, +1 for this PR, and I think we should discuss the default visibility and link-time optimizations at some point.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1410#issuecomment-641086843:624,optimiz,optimizations,624,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1410#issuecomment-641086843,1,['optimiz'],['optimizations']
Performance,"IMO the complexity price we are paying right know in term of maintainability, code uglyness, bugs and weird issues it far bigger than the ""un-measure"" performance gain we expect. An our engineering time should be more useful in fixing all the crash/segfaul or performance issues because of n^2 algorithm (as in) than trying to get a totally minor (if any) performance increase because of switching from double to float. . So I recommand to only use Vec3Type in sofa instead of having both Vec3dType / Vec3fType, it will save thousand of man-month to invest more intelligent things. . As said by @jnbrunet, using Vec3Type allows to switch from float/double.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/827#issuecomment-438814059:151,perform,performance,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/827#issuecomment-438814059,3,['perform'],['performance']
Performance,INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2078,Load,Loaded,2078,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,ING] [ObjectFactory] Class already registered: MeshGmshLoader; [WARNING] [ObjectFactory] Class already registered: MeshOffLoader; [WARNING] [ObjectFactory] Class already registered: MeshSTLLoader; [WARNING] [ObjectFactory] Class already registered: MeshTrianLoader; [WARNING] [ObjectFactory] Class already registered: MeshXspLoader; [WARNING] [ObjectFactory] Class already registered: OffSequenceLoader; [WARNING] [ObjectFactory] Class already registered: SphereLoader; [WARNING] [ObjectFactory] Class already registered: StringMeshCreator; [WARNING] [ObjectFactory] Class already registered: VoxelGridLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [WARNING] [ObjectFactory] Class already registered: CompareState; [WARNING] [ObjectFactory] Class already registered: CompareTopology; [WARNING] [ObjectFactory] Class already registered: DataController; [WARNING] [ObjectFactory] Class already registered: DataMonitor; [WARNING] [ObjectFactory] Class already registered: DevAngleCollisionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DevMonitorManager; [WARNING] [ObjectFactory] Class already registered: DevTensionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: EvalPointsDistance<Rigid3d>; [WARNING] [Obje,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:29846,Load,Loaded,29846,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"If it is in a plugin, you need to load this plugin to load an other plugin :yo_dawg:. <img src=""https://user-images.githubusercontent.com/11028016/162191671-72defde9-badc-4f99-b0a3-9ec70a40531e.jpg"" width=""300"" />. so `RequiredPlugin` should always be available, even if no plugin is loaded.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2849:34,load,load,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2849,3,['load'],"['load', 'loaded']"
Performance,"If multiple objects have their own ODE solver, they can be solved concurrently in the `FreeMotionAnimationLoop`. # Results. Scene: applications/plugins/MultiThreading/examples/5DeformableCubesConstraints.scn; Nb time steps: 1000. ```; Parallel ODE solving + parallel collision detection:; 22.9566 s ( 43.5605 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.37 1 0.38 7.85 2.88 0.92 2.88 12.69 ...FreeMotion; 3 3.42 1 0.72 6.29 2.32 0.66 2.32 10.22 ...CollisionDetection; . Sequential ODE solving + parallel collision detection:; 26.762 s ( 37.3664 FPS).; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.35 1 1.23 10.94 7.05 1.98 7.05 26.62 ...FreeMotion; 3 7.57 1 0.74 7.04 2.33 0.64 2.33 8.81 ...CollisionDetection; . Sequential ODE solving + sequential collision detection:; 30.2183 s ( 33.0926 FPS). ; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 3 0.36 1 0.73 13.35 7.13 2 7.14 23.79 ...FreeMotion; 3 7.66 1 1.69 8.49 5.32 1.42 5.32 17.72 ...CollisionDetection; ```. The bottleneck is the constraint solving:; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 2 5.89 1 0.38 75.75 15.49 11.98 15.49 68.37 ..ConstraintSolver; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2135:66,concurren,concurrently,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2135,2,"['bottleneck', 'concurren']","['bottleneck', 'concurrently']"
Performance,If you have a message saying that the texture cannot be loaded. ; This is probably because now image loading (png/jpg) is now done by a single plugin called CImgPlugin. So to load images you needs to compile CImgPlugin & load it.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/418#issuecomment-336571444:56,load,loaded,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/418#issuecomment-336571444,4,['load'],"['load', 'loaded', 'loading']"
Performance,"Implementation of the (2nd part of) proposal #281 . Quick Reminder:; - CMake generates the list of compiled plugins in a file (`plugin_list.conf.default`) at the configuration stage.; - runSofa loads this list at startup; - if the user creates a custom `plugin_list.conf`, it will load this list instead.; - add an option to bypass the file (thus disable automatic loading) in runSofa. Everything is done in the runSofa application (+small patch in the macro sofa_add_generic() in SofaFramework CMake modules ; that allows us to have a list of all added targets which is not possible in CMake 3.1) . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/301:194,load,loads,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/301,3,['load'],"['load', 'loading', 'loads']"
Performance,"Implicit solvers can be optimized to compute faster if the mass matrix is diagonal. Currently this information is not used, whereas it is known by the mass component. Implicit solvers must be adapted and have a special branch for diagonal matrix for faster computation. See https://github.com/sofa-framework/sofa/pull/1903",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1923:24,optimiz,optimized,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1923,1,['optimiz'],['optimized']
Performance,Improve performances in constraint solvers,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3769:8,perform,performances,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3769,1,['perform'],['performances']
Performance,"In #2777, a new API to assemble matrices was introduced. I used this new API to avoid the need to implement `addDForce` if `buildStiffnessMatrix` is already implemented. In other terms, it unifies the `addDForce` and `buildStiffnessMatrix` (previously it was `addKToMatrix`. Indeed, those two functions are very similar as they are related to the derivative of the force. This PR is a proof of concept that is not ready to be merged. Indeed, I noticed losses of performances. And I also would like to make sure with the CI that everything works perfectly. The concept is implemented only on force fields (not interactions), and only for stiffness (no damping), but I can be easily extended to damping and masses. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4010:462,perform,performances,462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4010,1,['perform'],['performances']
Performance,"In `FreeMotionAnimationLoop`, the collision detection and the free motion can be computed concurrently. A Data<bool> allows to specify if both steps are executed in parallel or in sequence. By default, the algorithm is sequential. This parallel approach is the most useful when free motion and collision detection takes about the same time. An example scene is provided to validate the speed up. The details about the speed up are here: https://github.com/sofa-framework/sofa/commit/0f94b063ae3f3efbd2e0dc2f50d4bff706cd4734:. > On my computer, with the single threaded scene, FreeMotion+CollisionDetection runs in 24.92 ms in average. FreeMotion runs in 7.7 ms and CollisionDetection in 16.36 ms. If these two steps runs in parallel, we expect a gain of 7.7 ms (the minimum between 7.7 and 16.36).; On my computer, with the multi-threaded scene, FreeMotion+CollisionDetection runs in 16.93 ms in average. It is a gain of 7.99 ms (=24.92-16.93), which is about what we expected.; It validates the implementation of the parallelization of the collision detection and the free motion steps in the FreeMotionAnimationLoop. ![cubes](https://user-images.githubusercontent.com/10572752/115711281-9f0e1980-a373-11eb-9a69-aaece62f6cb9.gif). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2040:90,concurren,concurrently,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2040,2,"['concurren', 'multi-thread']","['concurrently', 'multi-threaded']"
Performance,"In `applyDJT`, the following product is computed:. $$; b \mathrel{{+}{=}} h^2 \frac{\partial \mathbf{J}}{\partial x_{\text{out}}} f_{\text{out}} v_\text{in}; $$. with `b` being the right side of the main equation, `h` the time step size ($h^2$ is the `kFactor`), `x` the position, `v` the velocity and `f` the force. Subscript `in` refers to the parent of the mapping, and `out` to the child. $J$ is the jacobian matrix of the mapping. The method in `SquareMapping` had two ways to compute this product:. 1) Using K which has been computed previsously. And multiply it by $v_\text{in}$; 2) Using $f_{\text{out}}$ and $v_\text{in}$ only, without using a cached matrix. Only the first method was tested in unit tests. I forced the second method in a unit test by introducing a Data `useGeometricStiffnessMatrix`. It could be observed that the second method failed. It needed a fix. The product with $v_\text{in}$ was forgotten. It is now added in this pull request. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3761:653,cache,cached,653,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3761,1,['cache'],['cached']
Performance,"In a mapped state, force fields and masses contribute to the global system matrix via a projection provided by mappings. The term $m M+ k K$ is assembled locally (association with the mapped state), and then the product $J^T (m M+ k K) J$.; However, in most cases, $M$ is constant. In addition, in some cases $J$ is also constant. If we fulfill the conditions so that both $M$ and $J$ are constants, we can extract the product $J^T M J$ and pre-compute it once at the beginning of the simulation. This is what this PR does. In addition to the pre-computation, there is a cache invalidation mechanism on masses to track when $M$ is subject to changes. For example, changes in the mass parameter by the user. This pre-computation is the most efficient when there is a difference of sparsity between $M$ and $K$. And this is the case when hyper-reduction is involved. $K$ is super sparse (only a few elements are considered), while $M$ gets contributions from all the nodes of the detailed mesh. On a diamond robot with 70,334 tetrahedras and 15,553 vertices, I went from 79.8469 FPS to 177 FPS. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4625:571,cache,cache,571,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4625,1,['cache'],['cache']
Performance,"In debug, an exception is thrown and the program crashes. We can say that PSL.dll is not loaded. Try this code in debug:. ```c++; #include <iostream>; #include <algorithm>. int main(int argc, char *argv[]) ; {; std::string plugin(""PSL"");; std::string dotExt("".dll"");. const bool b = std::equal(dotExt.rbegin(), dotExt.rend(), plugin.rbegin());. if (b) std::cout << ""equal\n"";; else std::cout << ""not equal\n"";; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/617#issuecomment-376450463:89,load,loaded,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/617#issuecomment-376450463,1,['load'],['loaded']
Performance,"In order to implement damping behavior on a system, we can use rayleigh damping or we can use a more powerful feature, the dissipation potentials. These potentials implement a force that depends on the velocity. . https://par.nsf.gov/servlets/purl/10092361; http://gmrv.es/Publications/2018/SO18/EGauthorGuidelines-sca2018-sub.pdf. The first paper specifies how should these potentials be integrated into an optimization solver and the second one specifies how these potential should be to correctly damp the desired deformation modes. . In particular, we need to compute the dissipation rate, measures as the `dt * R(x, v)`. We also need to compute the damping forces (dR/dv) and the damping hessians (d2R/dvdx and d2R/dv2). With the current implementation of the ForceFields, we can implement the forces and the hessians, but we can't implement the dissipation rate because we don't have access to dt. . The `MechanicalParams` that is passed into the getPotentialEnergy function is the default instance, and that one doesn't have the dt set. . My proposal is to add a getDissipationRate function to the ForceField so we can pass the dt and separate the computation of the potential energy and the dissipation rate.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2335:408,optimiz,optimization,408,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2335,1,['optimiz'],['optimization']
Performance,"In such a case we get `Source object ""@YourLoader"" NOT FOUND` but it is not related to the load() rather than the component is not even created when placed below.; But this would happen anyway, wouldn't it ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2094#issuecomment-843320514:91,load,load,91,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2094#issuecomment-843320514,1,['load'],['load']
Performance,"In terms of performances, I run the benchmark in https://github.com/alxbilger/SofaBenchmark/blob/main/SofaBenchmarkScenes/src/SofaBenchmarkScenes/linearsolver/SparseLDLSolver.cpp:. # `useSymbolicDecomposition=""false""`. ```; -------------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; -------------------------------------------------------------------------------------------------------------------; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/2 2071 ms 2094 ms 1 FPS=95.5224/s frame=0.0104687s; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/4 4103 ms 4094 ms 1 FPS=97.7099/s frame=0.0102344s; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/8 8253 ms 8188 ms 1 FPS=97.7099/s frame=0.0102344s; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/16 17380 ms 17312 ms 1 FPS=92.4188/s frame=0.0108203s; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/512 6187 ms 6188 ms 1 FPS=82.7475/s frame=0.012085s; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/1024 11960 ms 11938 ms 1 FPS=85.7801/s frame=0.0116577s; BM_Scene_bench_StepFactor<SparseLDLSolverScene>/2048 24209 ms 24156 ms 1 FPS=84.7814/s frame=0.011795s; ```. # `useSymbolicDecomposition=""true""`. ```; -------------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; -------------------------------------------------------------------------------------------------------------------; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/2 1588 ms 1578 ms 1 FPS=126.733/s frame=7.89062ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/4 3182 ms 3156 ms 1 FPS=126.733/s frame=7.89062ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/8 6391 ms 6344 ms 1 FPS=126.108/s frame=7.92969ms; BM_Scene_bench_SimulationFactor<SparseLDLSolverScene>/16 12823 ms 12938 ms 1 FPS=123.671/s frame=8.08594ms; BM_Scene",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2756#issuecomment-1060696095:12,perform,performances,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2756#issuecomment-1060696095,1,['perform'],['performances']
Performance,"In that case, why bother with manual init/cleanup? Where is it done? If manual init/cleanup are removed, s_initialized/s_cleanedUp become obsolete. What does guarantee that libs are loaded in the right order? Maybe it is the case, but I am not convinced. (e.g. I guess SofaSimulationCommon must be initialized before SofaSimulationTree).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168#issuecomment-279733338:182,load,loaded,182,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168#issuecomment-279733338,1,['load'],['loaded']
Performance,"In the launcher.py file line 12 correction of the way to import the Queue library. Write From queue import Queue rather than import Queue. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2258:68,Queue,Queue,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2258,4,"['Queue', 'queue']","['Queue', 'queue']"
Performance,"In the previous build, I could run the tutorial (oneParticle , compositeObject, chainHybrid et al. ) correctly. . After rebuild, it couldn't working. The error information is as follows:. System: Ubuntu 18.04; g++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0; cmake version 3.19.2. ```; [WARNING] [OglModel(visual)] Loading obj mesh file directly inside the VisualModel will be deprecated soon. Use a MeshObjLoader and link the Data to the VisualModel. E.g: ; <MeshObjLoader name='myLoader' filename='myFilePath.obj'/> ; <OglModel src='@myLoader'/>; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead.; terminate called after throwing an instance of 'std::logic_error'; what(): basic_string::_M_construct null not valid; Received signal 6; #0 0x7fdf823e1a79 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2cbea78); #1 0x7fdf82336436 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2c13435); #2 0x7fdf823e03d3 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2cbd3d2); #3 0x7fdf823e1a05 (/opt/Qt5.15.2/lib/libQt5WebEngineCore.so.5.15.2+0x2cbea04); #4 0x7fdf9839b040 (/lib/x86_64-linux-gnu/libc-2.27.so+0x3f03f); #5 0x7fdf9839afb7 gsignal; #6 0x7fdf9839c921 abort; #7 0x7fdf987ea0a9 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29+0x9d0a8); #8 0x7fdf987f5506 (/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.29+0xa8505); #9 0x7fdf987f5571 std::terminate(); #10 0x7fdf987f57f5 __cxa_throw; #11 0x7fdf987ec7dd std::__throw_logic_error(); #12 0x7fdf97d370b4 std::__cxx11::basic_string<>::basic_string<>(); #13 0x7fdf97d37781 sofa::gui::qt::RealGUI::setScene(); #14 0x7fdf97d455fe sofa::gui::qt::RealGUI::CreateGUI(); #15 0x7fdf9cf0ee9b sofa::gui::GUIManager::createGUI(); #16 0x7fdf9cf0f5c5 sofa::gui::GUIManager::MainLoop(); #17 0x556940dfe9a5 main; #18 0x7fdf9837dbf7 __libc_start_main; #19 0x556940dfecea _start; r8: 000",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2253:307,Load,Loading,307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2253,1,['Load'],['Loading']
Performance,"In the process of building the performance regression scripts I needed a timer basis working for both FreeMotionAnimaitonLoop and DefaultAnimationLoop with Tracy. For this I needed to add timers around the mechanical mapping application in the FreeMotionAnimationLoop and scoped timers for RH side computation and MBKBuild in the EulerImplicit. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4957:31,perform,performance,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4957,1,['perform'],['performance']
Performance,"In the scene `examples/Benchmark/Performance/TorusFall.scn`, vectors are dynamically allocated by EulerImplicitSolver and GenericConstraintSolver. They now have a name instead of a meaning less number. ![image](https://user-images.githubusercontent.com/10572752/160145176-3fa3a101-5876-4c39-a0a5-8215d9d97be8.png). The names are not associated to the VecIds, but to the Data associated to the VecIds. Note: CGLinearSolver allocates dynamically temporary vectors. I did not add any complexity for having names for them, as they are ""freed"" after each solve. But they are actually not freed, just unset. I suspect its a source of the bug we already met when there are many vecids. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2811:33,Perform,Performance,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2811,1,['Perform'],['Performance']
Performance,"In this PR we:; - add difflib in extlibs, difflib is an header only library that allows to make approximated search for string. ; - add sofa::helper::DiffLib to wrap the header only into a sofa looking library. ; - use DiffLib to implement spelling suggestion when a component cannot be created by the ObjectFactory.; Example of output:; ```console; [ERROR] [SofaPython3::SceneLoader] Unable to completely load the scene from file 'toto.py'. ; Python exception: ValueError: Object type MechanicaObject<> was not created ; The object is not in the factory. ; But the following exits: ; : MechanicalObject (98% match); : MappedObject (54% match); : MechanicalStateController (53% match); ```; ; The DiffLib feature is extensively used to implement a much wider spelling suggestion mechanism in SofaPython3.; Have a look at all the examples and use cases in PR https://github.com/sofa-framework/SofaPython3/pull/314. . I'm not using xml scenes so I didn't implemented support for spelling suggestion there. If your are interested in doing such a thing, the SofaPython3 implementation is a good starting point for your PR. . ___________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3042:406,load,load,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3042,1,['load'],['load']
Performance,Indeed I have not think of pythonscriptcontrollers importing other files. But it should be easy to move this code in loadSceneWithArguments rather than in runFile.; I'll do it tomorrow.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/202#issuecomment-286157262:117,load,loadSceneWithArguments,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/202#issuecomment-286157262,1,['load'],['loadSceneWithArguments']
Performance,"Indeed, the point of ""slaves"" objects was that they are NOT visible on the graph, so not returned by getObjects or touched by visitors including events. It is up to their ""master"" object to decide what to do with them. As far as I know, the 2 cases where that is used a lot are:; - bounding volume hierarchies in collision models, where the ""real"" model is the master and a hierarchy of CubeModel is added as slaves; - engines (such as topological engines) that are created by an object to modify its own data. If events are propagated automatically to all slaves, then it kind of defeat the purpose. If that is needed, why not putting these objects as normal ones within the graph ? or maybe add a flag in BaseObject to enable calling propagateEvent to all slave objects in the default propagateEvent implementation. Semantically, slaves are ""owned"" by their master. All objects must have only one parent node, and optionally one master object (in which case they are only indirectly contained in the node). It should not be possible for a single object to appear multiple times on the graph (otherwise what would its getContext() return ?). Performances-wise, temporary copies of potentially large set of smart pointers is indeed worrisome (and would be a no-go for me)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2348#issuecomment-930006073:1143,Perform,Performances-wise,1143,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2348#issuecomment-930006073,1,['Perform'],['Performances-wise']
Performance,"Indeed, when compiled, SofaPython3 is not included in the automatically-loaded list of plugins.; But you can load the plugin at run-time using command-line arguments:; `runSofa -l SofaPython3 <yousceneinpython.py>`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1786455025:72,load,loaded,72,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1786455025,2,['load'],"['load', 'loaded']"
Performance,"Indeed. I understand the problem, the mechanism also unloads the plugin's modules defined in c++. This modules are added to the sofa python environment while loading the plugin, so they cannot be imported again after being unloaded. I'll fix that.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/202#issuecomment-288406170:158,load,loading,158,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/202#issuecomment-288406170,1,['load'],['loading']
Performance,"Instead of suggesting to add the required plugins in the XML syntax, the goal is to use the scene loader to adapt the syntax to the type of file. For example, in Python, the message will be:. ```; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; Your scene may not work on a sofa environment with different pre-loaded plugins. ; To fix your scene and remove this warning you just need to cut & paste the following lines at the beginning of your scene: ; root.addObject('RequiredPlugin', name='Sofa.Component.AnimationLoop') # Needed to use components [FreeMotionAnimationLoop] ; root.addObject('RequiredPlugin', name='Sofa.Component.Collision.Detection.Algorithm') # Needed to use components [BVHNarrowPhase,BruteForceBroadPhase,BruteForceDetection,CollisionPipeline] ; root.addObject('RequiredPlugin', name='Sofa.Component.Collision.Detection.Intersection') # Needed to use components [LocalMinDistance] ; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3799:98,load,loader,98,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3799,2,['load'],"['loaded', 'loader']"
Performance,"Instead, I use raw gpu pointers. I measured the performances on the scene `applications\plugins\SofaCUDA\scenes\benchmarks\CudaTetrahedronTLEDForceField_beam10x10x40_gpu.scn` on 50k time steps:. ```; before; [INFO] [BatchGUI] 50000 iterations done in 11.9961 s ( 4168.04 FPS). after; [INFO] [BatchGUI] 50000 iterations done in 10.3888 s ( 4812.87 FPS).; ```. Note that I did not change anything in the algorithm, except the following check:. ```cpp; if (FCrds.y < 0 || FCrds.y >= nbElements); {; FCrds.y = 0;; }; ```. I had to add this check because `FCrds.y` was often equal to `-1`, which then leads to out-of-bounds vector access. This check was not required before, because out-of-bounds texture returns 0.; I don't know if this behavior is intended or not. TODO:. - [x] Test that `CudaTetrahedronTLEDForceField` now compiles with CUDA 12. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3650:48,perform,performances,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3650,1,['perform'],['performances']
Performance,"Interesting, didn't know this feature. Yes this is definitely not a cache problem :-(",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/516#issuecomment-344617603:68,cache,cache,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/516#issuecomment-344617603,1,['cache'],['cache']
Performance,"Introduce a free function doing a simple loop in the general case, and use memset in the vector<Vec> case. The operator = on the vector object is faster than the loop. Performance improvements validated by https://github.com/alxbilger/SofaBenchmark/pull/29. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3284:168,Perform,Performance,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3284,1,['Perform'],['Performance']
Performance,"Introduce the solvers from https://github.com/alxbilger/EigenLinearSolvers. Their description can be found in the readme. The readme mentions only speed ups, but I just found that `examples/Benchmark/Performance/TorusFall.scn` is slower with `EigenSimplicialLDLT` than `SparseLDLSolver`. Need more investigation. Questions for the review:. - Those components must be in Sofa or in a plugin?; - Do you like having Eigen as a prefix of the component? [I don't]. If no prefix, there is a conflict with the legacy solvers.; - What do we do with the csparse-based legacy solvers?; - If decided to remove them, how to deprecate? Do we rename EigenSimplicialLDLT to SparseLDLSolver?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2926:200,Perform,Performance,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2926,1,['Perform'],['Performance']
Performance,"Introduction of two scene files. This is actually the same scene, but one is with a `DefaultCollisionGroupManager` and the other is without.; The goal is to evaluate the effects of a group manager on the simulation and on the performances. # Performances. running CollisionGroupManager_with.scn for 1000 time steps: 8.2129 s ( 121.76 FPS); running CollisionGroupManager_without.scn for 1000 time steps: 4.82236 s ( 207.368 FPS). Similar results if run with #2076. # Behavior. The simulation seems to behave differently with or without the group manager:; ![groupmanager](https://user-images.githubusercontent.com/10572752/118451813-ea5ae400-b6f5-11eb-992f-65f047f1107c.gif). #2076 seems to have no effect on the behavior. # Benchmark Details. ## without. ```; Steps Duration Statistics (in ms) :; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 0 	 0 	1000 	 4.04	 9 	 4.79	 0.46	4786.01	 100 	TOTAL; 1 	 0 	 1 	 4.04	 8.98	 4.78	 0.46	 4.78	 99.98	.Simulation::animate; 2 	 0.01	 1 	 0 	 0.03	 0.01	 0 	 0.01	 0.12	..BehaviorUpdatePositionVisitor; 2 	 0.02	 1 	 0.01	 0.04	 0.01	 0 	 0.01	 0.17	..UpdateInternalDataVisitor; 2 	 0.02	 1 	 3.87	 8.73	 4.57	 0.44	 4.57	 95.56	..AnimateVisitor; 3 	 0.04	 1 	 2.29	 7.10	 3.03	 0.36	 3.03	 63.35	...Collision; 4 	 0.04	 1 	 0 	 0.03	 0.01	 0 	 0.01	 0.17	....begin collision; 4 	 0.05	 1 	 0 	 0.04	 0.01	 0 	 0.01	 0.25	....CollisionReset; 4 	 0.08	 1 	 2.06	 4.76	 2.70	 0.31	 2.70	 56.49	....doCollisionDetection; 5 	 0.08	 1 	 0.07	 1.33	 0.08	 0.04	 0.08	 1.61	.....ComputeBoundingTree; 6 	 0.08	 1 	 0.01	 0.22	 0.01	 0.01	 0.01	 0.30	......Compute BoundingTree: triangleCollisionModel1; 6 	 0.10	 1 	 0.01	 0.20	 0.02	 0.01	 0.02	 0.33	......Compute BoundingTree: lineCollisionModel1; 6 	 0.11	 1 	 0 	 0.13	 0.01	 0 	 0.01	 0.12	......Compute BoundingTree: pointCollisionModel1; 6 	 0.12	 1 	 0.01	 0.16	 0.01	 0.01	 0.01	 0.26	......Compute BoundingTree: triangleCollisionModel2; 6 	 0.13	 1 	 0.01	 0.20	 0.01	 0.01	 0.01	 0.31	......",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:226,perform,performances,226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,2,"['Perform', 'perform']","['Performances', 'performances']"
Performance,"Introduction of wrappers, derived from `BaseMatrix` and `BaseVector`, to Eigen matrices. The wrappers are courtesy of @jnbrunet, from https://github.com/jnbrunet/caribou, and have been adapted to SOFA + missing functions for CGLinearSolver. `eigen::EigenMatrix` has the interface of `BaseMatrix`, so it can be used as a matrix storing the linear system, in a linear solver.; An example is provided in `CGLinearSolver`. Performances:. Tested on a cantilever beam from `examples/Components/linearsolver/FEMBAR-CGLinearSolver.scn`. **CompressedRowSparseMatrixMat3x3d**; [INFO] [BatchGUI] 1000 iterations done in 2.62389 s ( 381.113 FPS).; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 2.23 5.32 2.59 0.21 2587.89 100 TOTAL; 1 0 1 2.23 5.31 2.59 0.21 2.59 99.97 .Simulation::animate; 2 0 1 0 0.02 0 0 0 0.04 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0.01 0 0 0 0.05 ..UpdateInternalDataVisitor; 2 0 1 2.21 5.24 2.56 0.21 2.56 99.03 ..AnimateVisitor; 3 0.01 1 2.20 5.24 2.56 0.21 2.56 98.94 ...Mechanical; 4 0.01 1 0.06 0.21 0.07 0.01 0.07 2.60 ....ComputeForce; 4 0.08 1 0.05 0.14 0.05 0 0.05 1.98 ....ComputeRHTerm; 4 0.13 1 0.49 1.58 0.52 0.04 0.52 20.27 ....MBKBuild; 5 0.13 1 0.49 1.56 0.52 0.04 0.52 20.19 .....CG-setSystemMBKMatrix; 4 0.66 1 1.58 4.57 1.90 0.20 1.90 73.45 ....MBKSolve; 5 0.67 1 1.56 4.54 1.88 0.20 1.88 72.80 .....CG-Solve; ```. **CompressedRowSparseMatrixd**; [INFO] [BatchGUI] 1000 iterations done in 4.19299 s ( 238.493 FPS).; ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 3.74 8.41 4.16 0.27 4159.02 100 TOTAL; 1 0 1 3.74 8.40 4.16 0.27 4.16 99.98 .Simulation::animate; 2 0 1 0 0 0 0 0 0.02 ..BehaviorUpdatePositionVisitor; 2 0 1 0 0 0 0 0 0.03 ..UpdateInternalDataVisitor; 2 0 1 3.72 8.36 4.13 0.27 4.13 99.39 ..AnimateVisitor; 3 0.01 1 3.72 8.35 4.13 0.27 4.13 99.33 ...Mechanical; 4 0.01 1 0.06 0.18 0.07 0.01 0.07 1.59 ....ComputeForce; 4 0.08 1 0.05 0.14 0.05 0 0.05 1.21 ....ComputeRHTerm; 4 0.13 1 1.66 5.86 1.72 0.14 1.72 41.42 ....",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2794:419,Perform,Performances,419,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2794,1,['Perform'],['Performances']
Performance,Investigate why both solvers do not provide the same performances.; Topic brought by @alxbilger,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2984:53,perform,performances,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2984,1,['perform'],['performances']
Performance,"Investigate wrong behavior with CollisionGroup; See below the corresponding scene. since commit https://github.com/sofa-framework/sofa/commit/e061012ce0091f115e2ddb5e23eba4ec3291498b . https://github.com/sofa-framework/sofa/blob/master/examples/Demos/chainHybrid.scn; and ; https://github.com/sofa-framework/sofa/blob/master/examples/Demos/chainHybridNoGroup.scn; are the same. ChainHybrid.scn should have ```<CollisionGroup name=""Group"" />``` . ```; <?xml version=""1.0""?>; <Node name=""root"" dt=""0.02"">; <CollisionPipeline verbose=""0"" draw=""0""/>; <BruteForceDetection name=""N2"" />; <NewProximityIntersection name=""Proximity"" alarmDistance=""0.3"" contactDistance=""0.2"" />; <CollisionResponse name=""Response"" response=""default"" />; <CollisionGroup name=""Group"" />; <Node name=""Chain"">; <Node name=""Fixed"">; <MeshObjLoader name=""loader"" filename=""mesh/torus_for_collision.obj"" />; <Mesh src=""@loader"" />; <MechanicalObject src=""@loader"" rx=""90"" />; <Triangle simulated=""0"" moving=""0"" />; <OglModel name=""Visual"" fileMesh=""mesh/torus.obj"" color=""gray"" rx=""90"" />; </Node>; <include name=""FEM"" href=""Objects/TorusFEM.xml"" dx=""2.5"" />; <include name=""Spring"" href=""Objects/TorusSpring.xml"" dx=""5"" rx=""90"" />; <include name=""FFD"" href=""Objects/TorusFFD.xml"" dx=""7.5"" />; <include name=""TorusRigid"" href=""Objects/TorusRigid.xml"" dx=""10"" rx=""90"" />; </Node>; </Node>; ``` ; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/994:825,load,loader,825,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/994,3,['load'],['loader']
Performance,Is the examples automatically started during CI tests ? ; If not please consider adding a dedicated test (even one loading the examples file) because we don't want to be forced to run manually all the examples scenes to detect possible regressions.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/411#issuecomment-335828643:115,load,loading,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/411#issuecomment-335828643,1,['load'],['loading']
Performance,"Is there an Error message when loading the scene, telling that the mesh could not be found?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/746#issuecomment-445826285:31,load,loading,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/746#issuecomment-445826285,1,['load'],['loading']
Performance,"Isn't the PR passed to ready, as erik said...""np for the PR"" ? . Here is my understanding (don't trust my word, check what I'm saying). . During simulation the animation loop triggers visitors to traverse the scene graph and perform specific action on the nodes. ; The important thing in a visitor is to override the following function:; - processNodeTopDown(simulation::Node*) to implement a specific behavior when entering in a new node while traversing the scene graph (fwd). ; - processNodeBottomUp(Node*) to implement a specific behavior when entering in a node while traversing the graph from the leaves to the root (bwd). Let's now focus on mechanical aspects. ; In Sofa, a lot of the sofa visitors are in-heriting from BaseMechanicalVisitor. This visitor is implementing a very specific behavior in processNodeTopDown & processNodeBottomUp. ; This behavior is more or less (see in MechanicalVisitor.cpp):; ```cpp; for(s : node.solvers); fwdSolver(s); if(node.mstate !=null); if(node.mapping!=null); /// We are in a node with amechanical state and a mapping ; if(stopAtMechanicalmapping(node.mapping)); return; fwdMechanicalMapping(node.mapping,);; fwdMappedMechanicalState(node.mstate); ; else; /// We are in a node with amechanical state but without a mapping ; fwdMechanicalState(node.mstate); ...; /// plenty of other scenarios..; ...; for(constraint : node.constraints); fwdConstraintSet(constriant); for(forcefield : node.forcefield); fwdForceField(forcefield); ....; ```; The general idea in this BaseMechanicalVisitor is to implement custom behavior that are triggered wen specific scene ""patterns"" are recognized. The custom behavior are the virtual function (eg: fwdMechanicalState). By default these functions do nothing. It is the responsability of the visitors in-heriting from BaseMechanicalVisitor to override them to match implement the behavior they needs. In the drafted code before... you can notice the line:; ```cpp; stopAtMechanicalmapping(node.mapping); ```; This is also",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/854#issuecomment-446583409:225,perform,perform,225,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/854#issuecomment-446583409,1,['perform'],['perform']
Performance,"It could not happen in current file formats loaded in SOFA. But in the future we might want to be able to support mixed meshes. As discussed this morning, the physics could be defined on each part (hex/tet) and it should work as long they use the same DOFs.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1352#issuecomment-631429311:44,load,loaded,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1352#issuecomment-631429311,1,['load'],['loaded']
Performance,"It has been noticed in https://github.com/sofa-framework/sofa/issues/4331. As it appears in the initialization, it won't affect the performances during the simulation. I took the opportunity to remove the useless collision pipeline in the example scene. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4332:132,perform,performances,132,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4332,1,['perform'],['performances']
Performance,"It is the reponsibility of the component to decide whether or not its AnimateBeginEvent method is thread safe.; - Change BaseObject argument parsing. When parsing, ensures if src attribute is used with link @ now allow the use of src="""". Topologies container associated to src="""" are supposed to be filled by following topological mapping. Using src=""@"" to avoid link warning drove to an autolink where the loader refers on container itself. Modification of implicated scenes and xml accordingly.; - WorkerThread maintains a list of stealable tasks as well as a list of higher priority thread specific tasks. Remove ThreadSpecificTask (not used and redundant with new thread-specific task queues). Update Task logging.; - Adapted MultiThreading plugin to the new build system.; - SetDirectory no longer changes the system current directory (shared by all threads in the process), but uses a global variable to record the current directory to be used within Sofa. But changing to the current file's directory is needed to load Python scene. For the moment, python loader is not use with multithreading, changing directory in the loader is a temporary solution. The functioning of python scene loader need to be adapted in the futur. ### Cleans; - Streamline calls to createResponse in case no groupManager is used; - Clean warnings in Task and TaskSchedulerBoost for Multithreading plugin. ### Bugfixes; - Fix crash with multithreaded collision detection. Call `TriangleModel::getTriangleFlag` method for all triangles of the topology to force the initialization of adjacency.information in the topology before some actual collision detection code is executed.; - DDGNode should never be copied to ensure thread safe. Add private copy constructor that gives compilation error to ensure that.; - Compilation fixes for compatibility with boost 1_55. Corrected also the copyright notice.; - Fix execution freeze bug due to simultaneous and reciprocal task stealing between 2 threads (WorkerThread).; - Fix",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:2900,load,load,2900,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,1,['load'],['load']
Performance,"It is useful to be able to load shaders directly from a std::string as it allows us to not need filesystem management. Consequently ""fixed"" shaders like shadows (or normal rendering when OpenGL Core profile will come) will be directly integrated into the libs (no more share/shaders directory to locate/find/read). [needed to solve #142 ]. Checklist to merge this PR: ; - [x] succeed on each compilation setup on the CI ; - [x] does not generates new warnings or test failure ; - [x] does not seems to break existing scenes.; - [x] does not seems to break API compatibility. ; - [x] cleans stuff; - [x] have tests on the introduced features. ; - [x] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/158:27,load,load,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/158,1,['load'],['load']
Performance,It looks like it never tried to load SofaPython3 (even with the flag I told you) which is really weird. Last thing you can try is edit the file `C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default` and add `SofaPython3` inside,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1793886110:32,load,load,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1793886110,1,['load'],['load']
Performance,"It seems it introduced a big decrease in performance.; I suppose we should freeze/unfreeze periodically (every second or so) instead of doing it every time step. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2479:41,perform,performance,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2479,1,['perform'],['performance']
Performance,"It seems msvc is quite (much!) less clever than gcc. 2 optimizations (only useful when not building in Release mode); - add and use a NOINIT RigidDeriv constructor (avoiding to init a deriv which is filled afterwards); - default ctor directly call the identity of its components (which is their default ctor by the way). and 1 ridiculous optimization; - avoid calling getPositionIntegrationFactor() in the nested loop; ; This optimization brings a whooping 30% speedup on my setup (VC2022, Release/LTO enabled); Test scene: 3instruments_collis.scn from BeamAdapter, 2000 iterations in batch mode; - before: 16.5669 s ( 120.723 FPS); - after: 12.829 s ( 155.897 FPS). GCC was doing the same by the way with or without these optims (and is faster than msvc, even in a VM 🤔). NOTE: do not forget to enable the LTO option for Windows when deploying, it brings full inlining & stuff and it is really useful for perf; (w/o LTO, before the optims it is 21.9883 s ( 90.9575 FPS) ). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3135:55,optimiz,optimizations,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3135,3,['optimiz'],"['optimization', 'optimizations']"
Performance,"It seems that the StaticSolver behaves differently with iterative and direct linear solvers.; Here is an example scene : . ``` python; import Sofa; import SofaRuntime; from Sofa import SofaDeformable; from numpy import array; from matplotlib.colors import Normalize; from matplotlib.pyplot import get_cmap. class AnimationStepController(Sofa.Core.Controller):; def __init__(self, node, *args, **kwargs):; Sofa.Core.Controller.__init__(self, *args, **kwargs); self.forceMagnitude = 0; self.createGraph(node); self.root = node. def createGraph(self, rootNode):; rootNode.addObject('DefaultAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'); rootNode.addObject('VisualStyle', name=""visualStyle"", displayFlags=""showBehaviorModels showForceFields""); ; self.static = rootNode.addChild('StaticBeam', activated=True); self.static.addObject('MeshGmshLoader', name='loader', filename='circle.msh'); self.static.addObject('MeshTopology', name='TriangleTopo', src='@loader'); self.static.addObject('EdgeSetGeometryAlgorithms', name='TriangleTopo', src='@loader'); self.MO_static = self.static.addObject('MechanicalObject', name='DOFs', template='Vec3d', src='@loader'); self.static.addObject('StaticSolver', name='ODE', newton_iterations=""10"", printLog=True); self.static.addObject('SparseLDLSolver', name='LDL', template=""CompressedRowSparseMatrixMat3x3d""); # self.static.addObject('CGLinearSolver', name='linear solver', iterations=200, tolerance=1e-08, threshold=1e-08); self.static.addObject('TriangularFEMForceFieldOptim', youngModulus='200', poissonRatio='0.3'); self.static.addObject('BoxROI', name='ROI', box='-0.2 -0.2 -0.2 0.2 0.2 0.2'); self.static.addObject('FixedConstraint', indices='118 119'); self.static.addObject('BoxROI', name='ROI2', box='0.9 -0.2 -0.1 1.1 0.2 0.1'); self.CFF_static = self.static.addObject('ConstantForceField', indices=""@ROI2.indices"", force=""0 0 0"", showArrowSize=0.05). self.dynamic = rootNode.addChild('DynamicBeam', activated=True); self.dynamic.addObject('",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4051:869,load,loader,869,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4051,2,['load'],['loader']
Performance,"It started from the case where SparseGrid could not open .OBJ files (because it is upper case 🐶 ); Now SparseGrid relies on the FactoryMesh mechanism for its extension management. BUT MeshOBJ is super deprecated, and the legacy helper::io::MeshLoader (not the one in sofa::core::loader) should be not used anymore.; BUT SparseGrid does not really handle src=""@loader"" syntax very well now, and it will be upgraded in the future. . I added some tests anyway 💛 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1231:279,load,loader,279,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1231,2,['load'],['loader']
Performance,It would be awesome to add this in the Performance documentation :+1:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4158#issuecomment-1725498861:39,Perform,Performance,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4158#issuecomment-1725498861,1,['Perform'],['Performance']
Performance,"It's actually *way* more complex: while trying to do the above, I got bitten hard by the linker. . Here is what I found:. - `runSofa` is currently calling `initComponentGeneral()` which calls in turn `initOpenGLVisual()`,; - now if I remove calls to `initComponentGeneral` from `runSofa`, no symbol from `libComponentGeneral.so` is ever referenced in `runSofa` and the linker does its job so **`libComponentGeneral.so` is completely linked out from `runSofa`**,; - this means no `static` variable from `libComponentGeneral.so` is ever constructed nor destructed while running `runSofa`,; - so none of the static class registration through `RegisterObject` is ever performed!. In my case, the above caused the following problem:; - when constructing the viewer, an alias from `VisualModel` to `OglModel` is added, which fails since `OglModel` was never registered at this point,; - (bonus) when loading some other plugin later on (in this case, Compliant), the plugin *might* reference code from `libComponentGeneral`, which would thus be linked in the plugin, triggering DLL initialization and class registration for `OglModel` when the plugin is loaded. **TL;DR: manual `init*` calls act as a (crude) way of forcing symbols to be pulled from each dll into the main executable, ensuring class registration is performed correctly before `main` is executed.**. Based on the above, a reasonable fix would be:; - remove all `CleanupCheck` as they may cause issues; - remove all `cleanup`-related functions; - keep all `init` calls everywhere; - any non-trivial `static` initialization and especially finalization should use a nifty counter",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280620962:664,perform,performed,664,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/168#issuecomment-280620962,4,"['load', 'perform']","['loaded', 'loading', 'performed']"
Performance,"It's not perfect. The progress bar interacts with console messages (`msg_info`, `std::cout` etc), but it behaves well when the message is longer than the progress bar. Otherwise, both are mixed on a single line. It still does not behave correctly after a ctrl+c in a infinite loop (`runSofa -n infinite`). I also made some threading experiment in the case of infinite loop but no success. I wanted to add a command line option to hide the progress bar if needed. I wanted to add it only for BatchGUI, but it seems that parsing crashes for unkown arguments (the loading of the gui is after the parse). Maybe the help of @fredroy would be needed here (if we decide to go on).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1721325089:561,load,loading,561,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4168#issuecomment-1721325089,1,['load'],['loading']
Performance,Just before the February school break we started a branch on our repo. The task #189 is complete (needs more testing to validate it) and is a prerequisite before real python 3 refactoring in SofaPython.; Stay tuned.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/23#issuecomment-282653658:209,tune,tuned,209,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/23#issuecomment-282653658,1,['tune'],['tuned']
Performance,"Just call getValue once and use the const ref afterwards. This is particularly showing for the function getIndex() which is called a lot of times (really a lot). Release mode (full optim), MSVC and scene from Components/topology/RegularGridTopology.scn:; before: `5000 iterations done in 22.5747 s ( 221.487 FPS).`; after : `5000 iterations done in 20.7355 s ( 241.132 FPS).`; so 10% speedup. But the optimization is more effective the more complex the mesh is; (I changed the mesh in the previous scene with a liver with 500K triangles and the speed up was like around 30%). In any case, it shows that `getValue()` is not really ""free"" and must be called only once if the value is needed more than one time, especially in the ""hot"" functions. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3348:401,optimiz,optimization,401,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3348,1,['optimiz'],['optimization']
Performance,"Just set all data defined by the loader as read-only since it makes no sense any user modifies them directly. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1660:33,load,loader,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1660,1,['load'],['loader']
Performance,Just to understand @alxbilger the objects from plugins were not properly loaded ?; How could it have worked before your PR ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4872#issuecomment-2263040977:73,load,loaded,73,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4872#issuecomment-2263040977,1,['load'],['loaded']
Performance,"Just want to share some experiment done today. In its current state the binding for the data suffer from several drawback among which:; - inconsistent API ; - poor performances because there is a lot of copies and data conversion. ```py; m = createObject(""MechanicalObject"", position=[0,0,0, 1, 1, 1, 2, 2, 2]). # The following code is actually doing ; # findData(""position"") + conversion of everything into a python list ; # (linear search into the datas) + linear conversion of the data into python object; a = m.position . print(str(type(m.position))) ## print 'list'; ## so we have lost the data type and got a python ""converted"" list. . print(str(m.position)) ## print [0,0,0, 1,1,1, 2,2,2] ; ## so we have lost the inner structure of the data field. . # Doing ; m.position = [0,0,0,1,1,1,2,2,2] # Will work. # One may expect that changing a single value using the following syntax will not work; m.position[2] = 3.0 # But it does not because it change the copy of the vector. # To change a single value we need the much less readable version:; m.getData(""position"").setValue(2, 3.0). # So here is what we have to do to increment a single value in an efficient way:; d = m.getData(""position""); d.setValue(2, d.getValue(2) + 1.0); ```. This may be look not really important but to me this results in writing things like the following code; (taken form the fountain.scn example discussion) which is inefficient and bad looking:; ```py; # called on each animation step; def onBeginAnimationStep(self,dt):; position = self.particleObject.findData('position').value # Complete copy of the state vector. ; if position[0][1] < -5.0: # To check one value; self.myNode.getParents()[0].sendScriptEvent('below_floor',self.myNode.name); return 0 ; ```. So I made small changes to the API here is what I can come up with:; ```py ; m = createObject(""MechanicalObject"", position=[0,0,0, 1, 1, 1, 2, 2, 2]). print(repr(type(m.position))) ## print Sofa.Data as we returns the Data, not a generated list. . print(s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/767:164,perform,performances,164,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/767,1,['perform'],['performances']
Performance,Keep only the MeshMatrixMass (and renaming it) would be the best.; We should check performances of DiagonalMass against MeshMatrixMass,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2452:83,perform,performances,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2452,1,['perform'],['performances']
Performance,"LCPSolver is a class performing LCP on a matrix (actually on a raw pointer, assuming you did allocate the memory beforehand), but the fact this is a class is irrelevant.; This is only used in proximity.cpp (in the repo), which used for some proximity detections. In the same way as other Matrix algo, I set this feature as a utility function in Mat_solve_LCP in Sofa.Type.; - use Sofa.Type types instead of pointer (less prone to error); - rewrote some preproc def into constexpr values.; - removed the print() function of the result, but you can just print the resulting type::matrix anyway. There are some comments in french but I did not bother translate them for now. There is a compat layer for this function in Sofa.Compat so this PR should not be breaking. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2187:21,perform,performing,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2187,1,['perform'],['performing']
Performance,"Let's start from the begining. . By default the msg_ api does not stores the messages because in some context of use it is not needed while in some other it is (in a non graphical sofa vs in a sofa GUI). . Thanks to the MessageHandler class it is easy to add custom message storage that fits the application's needs.; ; Currently the existing LoggingMessageHandler can be used to store in a single storage queue the messages. The queue can be queried to get the messages for whatever the application developer want to do with them (displaying them in GUI or showing a long history, ...). In serr/sout API a different scheme is used as the history is stored at the Base object level in a (size increasing) string. This behavior is now possible with the PerComponentLoggingMessageHandler.; This behavior is closer to the existing serr/sout but it also have several improved properties:; - the message are really stored (not just the 'text' description);; - no text concatenation (memory resize, memory copy) at each message, ; - the queue size of each component can be controlled with a data field as well as the message type to store or to ignore in the queue. ; - when the handler is not installed...there is not recording of the message...so there is a computation & memory zero cost. . NB: The d_msgLevel and d_logLevel in Base* are only there for discussion but they are currently unused now. . There PR also contains several new tests. . Checklist to be merge: ; - [x] succeed on each compilation setup on the CI.; - [x] does not generates new test failure. ; - [x] does not seems to break existing scenes. ; - [x] does not seems to break API compatibility. ; - [x] introduces new component with tests & documentation. ; - [ ] is now 1 week old and no one send a 'no go' comment.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/106:406,queue,queue,406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/106,4,['queue'],['queue']
Performance,"Light>::createInstance(this=0x000000012071ba90, context=0x0000000122011a00, arg=0x0000000121261df0) at ObjectFactory.h:209; frame #9: 0x000000011bb62cb8 libSofaCore_d.17.12.dev.dylib`sofa::core::ObjectFactory::createObject(this=0x000000011c7be9f0, context=0x0000000122011a00, arg=0x0000000121261df0) at ObjectFactory.cpp:186; frame #10: 0x000000011aca2c54 libSofaSimulationCommon_d.17.12.dev.dylib`sofa::core::ObjectFactory::CreateObject(context=0x0000000122011a00, arg=0x0000000121261df0) at ObjectFactory.h:157; frame #11: 0x000000011aca0a65 libSofaSimulationCommon_d.17.12.dev.dylib`sofa::simulation::xml::ObjectElement::initNode(this=0x0000000121261df0) at ObjectElement.cpp:77; frame #12: 0x000000011aca0177 libSofaSimulationCommon_d.17.12.dev.dylib`sofa::simulation::xml::ObjectElement::init(this=0x0000000121261df0) at ObjectElement.cpp:60; frame #13: 0x000000011ac8b407 libSofaSimulationCommon_d.17.12.dev.dylib`sofa::simulation::xml::BaseElement::init(this=0x000000012125f6e0) at BaseElement.cpp:149; frame #14: 0x000000011ac9de25 libSofaSimulationCommon_d.17.12.dev.dylib`sofa::simulation::xml::NodeElement::init(this=0x000000012125f6e0) at NodeElement.cpp:78; frame #15: 0x000000011ac75d15 libSofaSimulationCommon_d.17.12.dev.dylib`sofa::simulation::SceneLoaderXML::processXML(xml=0x000000012125f6e0, filename=""../../sofa/examples/Demos/caduceus.scn"") at SceneLoaderXML.cpp:117; frame #16: 0x000000011ac75479 libSofaSimulationCommon_d.17.12.dev.dylib`sofa::simulation::SceneLoaderXML::load(this=0x00000001212063e0, filename=""../../sofa/examples/Demos/caduceus.scn"") at SceneLoaderXML.cpp:79; frame #17: 0x000000011aeafa79 libSofaSimulationCore_d.dylib`sofa::simulation::Simulation::load(this=0x000000012200d800, filename=""../../sofa/examples/Demos/caduceus.scn"") at Simulation.cpp:470; frame #18: 0x00000001000213fc runSofa_d`main(argc=8, argv=0x00007ffeefbff928) at Main.cpp:381; frame #19: 0x00007fff536e1115 libdyld.dylib`start + 1; frame #20: 0x00007fff536e1115 libdyld.dylib`start + 1",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357688562:3172,load,load,3172,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/548#issuecomment-357688562,2,['load'],['load']
Performance,Listing all type of files loaded in SOFA,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/811:26,load,loaded,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/811,1,['load'],['loaded']
Performance,"Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\n",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:8754,Load,Loaded,8754,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Us,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:4753,Load,Loaded,4753,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO],MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:5675,Load,Loaded,5675,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/l,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:4436,Load,Loaded,4436,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,Looks like a total mystery to me :!); Actually I don't even know why loadfrommemory try to access the FS at all.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/325#issuecomment-313369730:69,load,loadfrommemory,69,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/325#issuecomment-313369730,1,['load'],['loadfrommemory']
Performance,Loop using the sin and cos in the loop could be optimized with buffer.; To improve when needed.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1252#issuecomment-585127388:48,optimiz,optimized,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1252#issuecomment-585127388,1,['optimiz'],['optimized']
Performance,Manager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6727,Load,Loaded,6727,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"Manager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. This dll is actually present. Please see the snapshot below.; Directory view:; ![image](https://user-images.githubusercontent.com/5296582/83347021-63272b80-a33f-11ea-9cda-e2c209b1be80.png). I am not able to understand what is the issue? Please suggest. Thanks; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:2178,load,loading,2178,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['load'],['loading']
Performance,"Manager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; The object is not in the factory.; This component has been PLUGINIZED since SOFA v20.06. To continue using this component you need to ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9599,Load,Loaded,9599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,Many thanks Matthieu for the time you spend on carefully reviewing this PR I appreciate. . For the movement of function in a file...my mistake I should have clean that...I tried other changes (like extern template specialization) that I finally not took into consideration in this PR but forgot to clean the file so they seems to have moved more than what they actually did. . You are right about performance issues and your suggestion for checking the first non-empty char in getUnsignedInteger looks ok so I will make the change. . Now about the getInteger vs atoi aspect my first impression is that there will be a small performance difference at the cost of scarifying correctness and code security so I really advocate for using getInteger/getUnisgnedInteger and not atoi. . To go further we probably have to measure the performance but I wouldn't be surprised to be less than a 10% speed difference so it is not worth the loss of good error reporting to user. If high performance is really an issue I prefer to put energy to implement a raw binary storage of indices because this would make things like 10x or more faster speedup as well as have less memory consumption.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302655856:397,perform,performance,397,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271#issuecomment-302655856,4,['perform'],['performance']
Performance,"Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.C",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2879,load,load,2879,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,"Matrix assembly can be accelerated if CRS matrices are defined using blocks of 3x3.; This PR makes LU solver compatible with 3x3 blocks. Benchmark https://github.com/alxbilger/SofaBenchmark/pull/22:. Before. ```; ---------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; ---------------------------------------------------------------------------------------------------; BM_SparseLUSolver/50/iterations:10 368 ms 370 ms 10 FPS=135.021/s MBKBuild=1.82966m MBKSolve=5.34694m frame=7.40625ms; ```. After. ```; ---------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; ---------------------------------------------------------------------------------------------------; BM_SparseLUSolver/50/iterations:10 371 ms 367 ms 10 FPS=136.17/s MBKBuild=1.81682m MBKSolve=5.41681m frame=7.34375ms; BM_SparseLUSolverMat3x3/50/iterations:10 308 ms 311 ms 10 FPS=160.804/s MBKBuild=529.916u MBKSolve=5.4368m frame=6.21875ms; ```. We can observe that the time stays the same for `CompressedRowSparseMatrixd` (no performance loss), and it is faster (MBKBuild timer) for `CompressedRowSparseMatrixd`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2862:1175,perform,performance,1175,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2862,1,['perform'],['performance']
Performance,"Maybe we could:; - try to load CImgPlugin by default in runSofa and if it doesn't warn user that textures may not be loaded properly; - if the image factory is not able to load an image either print a warning message or ; try to automatically load the CImgPlugin, print a warning and retry.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/424#issuecomment-336570263:26,load,load,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/424#issuecomment-336570263,4,['load'],"['load', 'loaded']"
Performance,MeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/S,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:5643,Load,Loaded,5643,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,MeshLoader; [WARNING] [ObjectFactory] Class already registered: GridMeshCreator; [WARNING] [ObjectFactory] Class already registered: InputEventReader; [WARNING] [ObjectFactory] Class already registered: MeshGmshLoader; [WARNING] [ObjectFactory] Class already registered: MeshOffLoader; [WARNING] [ObjectFactory] Class already registered: MeshSTLLoader; [WARNING] [ObjectFactory] Class already registered: MeshTrianLoader; [WARNING] [ObjectFactory] Class already registered: MeshXspLoader; [WARNING] [ObjectFactory] Class already registered: OffSequenceLoader; [WARNING] [ObjectFactory] Class already registered: SphereLoader; [WARNING] [ObjectFactory] Class already registered: StringMeshCreator; [WARNING] [ObjectFactory] Class already registered: VoxelGridLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [WARNING] [ObjectFactory] Class already registered: CompareState; [WARNING] [ObjectFactory] Class already registered: CompareTopology; [WARNING] [ObjectFactory] Class already registered: DataController; [WARNING] [ObjectFactory] Class already registered: DataMonitor; [WARNING] [ObjectFactory] Class already registered: DevAngleCollisionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DevMonitorManager; [WARNING] [ObjectFac,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:29694,Load,Loaded,29694,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,MeshTopology doesn't load the topology from the mesh loader implicitely anymore. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1273:21,load,load,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1273,2,['load'],"['load', 'loader']"
Performance,"Metadata sections can be find anywhere in vtk files. These data are not embedded on a topological entity (vertex etc). They are therefore not read and treated by the loader. However, the reader could skip them quietly. I like yoru suggestion @hugtalbot. it's up to you @quentinfrancois0 !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/652#issuecomment-387766951:166,load,loader,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/652#issuecomment-387766951,1,['load'],['loader']
Performance,"Method LoadFromMemory to load an XML as a string is taking a parameter size which is unused and generate conversion warnings in tests. - Add method depreciation; - Update all tests compiled in my setup. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3376:7,Load,LoadFromMemory,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3376,2,"['Load', 'load']","['LoadFromMemory', 'load']"
Performance,"Minor commit to improve messaging when image cannot be loaded.; Before : no error, no message, no hints for available extensions to use. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/503:55,load,loaded,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/503,1,['load'],['loaded']
Performance,More precise results for each optimisation:; ```; no cache + double: 5000 iterations done in 199.849 s ( 25.0188 FPS).; no cache + 3x3 : 5000 iterations done in 170.294 s ( 29.3609 FPS).; cache + double : 5000 iterations done in 108.942 s ( 45.8959 FPS).; cache + 3x3 : 5000 iterations done in 79.4698 s ( 62.917 FPS).; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1996#issuecomment-827404525:53,cache,cache,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996#issuecomment-827404525,4,['cache'],['cache']
Performance,Moved the function to base class for loaders in last commit. Please review.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/639#issuecomment-382021827:37,load,loaders,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/639#issuecomment-382021827,1,['load'],['loaders']
Performance,Multi-Mesh loader design (Assimp plugin integration),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/602:11,load,loader,11,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/602,1,['load'],['loader']
Performance,"My checklist:; - tests coverage (none, low, good); - have at least one working example (yes, no); - is validated in the Igor's sense (if yes provide a link to the validation references); - is thread safe according a given thread safe design provided by the Multi-thread WG. ; - sofa code guidelines violation (none, a few, a lot) . I suggest this checklist to be part of the component as a kind of meta-data in the factory.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/228#issuecomment-291091132:257,Multi-thread,Multi-thread,257,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/228#issuecomment-291091132,1,['Multi-thread'],['Multi-thread']
Performance,"My example: ; Open ""test.scn"" in my application, the content is as follows:; ```; <?xml version=""1.0"" ?>; <Node name=""root"" dt=""0.005"" gravity=""0 0 0"" >; 	<AddResourceRepository path="".""/>; 	<RequiredPlugin pluginName='SofaOpenglVisual'/>; 	<RequiredPlugin pluginName='MyTestFlugin'/>; <VisualStyle displayFlags=""hideBehaviorModels showVisual hideForceFields"" />; 	; <CollisionPipeline verbose=""0"" />; <BruteForceDetection name=""N2"" />; 	<CollisionResponse response=""MultiFrictionContact"" />; <FreeMotionAnimationLoop/>; <!--LCPConstraintSolver name=""cs"" tolerance=""0.001"" maxIt=""500""/-->; 	<GenericConstraintSolver name=""cs"" tolerance=""0.001"" maxIt=""500""/>; 	<MyTestController name=""body"" modelName=""patient.scn"" />; </Node>; ```. I dynamically load ""patient.scn"" in the MyTestController component, the code is as follows:. ```; sofa::simulation::SceneLoader *loader = sofa::simulation::SceneLoaderFactory::getInstance()->getEntryFileName(modelPath);; if (loader); {; 	m_node = loader->load(modelPath.c_str());; 	m_node->init(sofa::core::ExecParams::defaultInstance());; }; ```; The content of ""patient.scn"" is as follows:; ```; <?xml version=""1.0""?>; <Node name=""root"" gravity=""0 0 0"" dt=""0.005"" >. 	<RequiredPlugin name=""MeshFbxLoader"" />; 	<Node name=""Patient"">; 		<MechanicalObject name=""Articulations"" template=""Vec1d"" size=""1"" />; 		<Node name=""PatientBone"">; 			<MeshFbxLoader name=""fbxloader"" filename=""Body-Bone.FBX"" />		; 			<MechanicalObject name=""Bones"" template=""Rigid3d"" position=""@fbxloader.bonePos"" showObject=""0"" />; 			<Node name=""skinning"">; 				<OglModel name=""body"" src=""@../fbxloader"" />; 				<SkinningMapping name=""skinMap"" template=""Rigid3d,ExtVec3d"" input =""@../Bones"" output =""@body"" nbRef =""@../fbxloader.nbref"" indices =""@../fbxloader.boneIds"" weight=""@../fbxloader.boneWeights""/>; 			</Node>	; 			<ArticulatedSystemMapping input1=""@../Articulations"" output=""@Bones""/>; 		</Node>; 		<ArticulatedHierarchyContainer/>; 		<Node name=""articulationCenters"">; 			<Node name=""art",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1450#issuecomment-674001696:746,load,load,746,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1450#issuecomment-674001696,5,['load'],"['load', 'loader']"
Performance,NFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9c,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:3865,Load,Loaded,3865,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,NFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManage,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4873,Load,Loaded,4873,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,NFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sof,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2365,Load,Loaded,2365,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"Naming components was not consistent:. - XML used a 'load-time' helper to name the components: the class name of the component + a counter for a unique name; - Python used the class name only; - C++ instantiations: either the class name or a hard-coded value. This is now unified using the singleton `sofa::core::NameHelper`. It applies the XML method: the class name + a counter. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/228]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631:53,load,load-time,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631,1,['load'],['load-time']
Performance,"Needs #1408 ; OglModel recomputes its internal data on topology change. There's 2 things I need review for here:; 1. which initialization methods should be called to properly update an OglModel? Currently, I'm calling more or less the whole thing: delete buffers, then init / reinit / initVisual & updateBuffers. Not sure all of them are necessary; 2. Which datafields should be taken into consideration for a total reinit:; Ideally I'd like to trigger the full update of the OglModel only when a change in the loader triggers the recomputation: positions can vary during simulation and shouldn't trigger a reload of the component.; Edges / triangles & other topological info change when the loader changes geometry, but could also change during a topological change for instance, and in that 2nd case shouldn't trigger a reload from the loader, whose topology isn't up-to-date anymore. This component needs heavy restructuring I believe if we want to handle proper data update using callbacks, and might be a good example for other components if we do it right. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1423:511,load,loader,511,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1423,3,['load'],['loader']
Performance,"Nice, . I'm happy someone make some proposal on this topic. I think we should factor the common messages, I don't think message.h/cpp is the right place for that. . I would put that either in separated place like containing only message: ; - SofaCore/MessageLoader.cpp/h; - SofaCore/MessageBaseObject.cpp/h ; Or in the source code in the base class for the loaders. . Alternative: use a real text-framework that is suppose to externalise all the texts from the source code (to internationalize Sofa...but this wuold be time consuming work). DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/639#issuecomment-381917232:357,load,loaders,357,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/639#issuecomment-381917232,1,['load'],['loaders']
Performance,"No information is given when the initExternalModule entry point is called.; For 99.999% of the plugins, there is nothing special in it but some (SofaPython3, I am looking at you) is doing a lot of ""failable"" things when it is called.; This PR is a potential solution to this problem, by adding a (optional) entry point to check if the plugin reports by itself that it was loaded successfully. This allows SOFA to not crash if a problem arises in SofaPython3 when calling PythonEnvironment::Init() . It is not really necessary for the ""ci depends on"" as the two PR can compile without needing the other one; but it makes sense to merge them in the same time I think. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/210]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2425:372,load,loaded,372,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2425,1,['load'],['loaded']
Performance,"Nobody reacted to my screenshot, but I suppose that a part of the slowdown comes from the fact that the mechanical object is resizing more and more vectors.... 🤨. EDIT: I ran the performance monitor of VS and indeed it takes a lot of time in the resize() function of MechanicalObject",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842958951:179,perform,performance,179,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842958951,1,['perform'],['performance']
Performance,"Not sure it solves any problem and it might degrade performances. A full refactoring of AdvancedTimer should be the objective to make it simple, thread-safe and shiny!",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3424#issuecomment-1308450688:52,perform,performances,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3424#issuecomment-1308450688,1,['perform'],['performances']
Performance,"Not sure this app is useful, but at least it works now. Example of output:. ```; .\sofaInfo.exe examples\Demos\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/build",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:148,Load,Loaded,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,7,['Load'],['Loaded']
Performance,"Not sure, it may be a cache problem... I launch a fresh build.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/498#issuecomment-344610408:22,cache,cache,22,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/498#issuecomment-344610408,1,['cache'],['cache']
Performance,"Note: empty `ArgumentParser::extra_args()` will not set `sys.argv`, as opposed to set it some empty list (this was the reason why the test was failing: it would reset it to empty on script loading after being set initially from the test binary). I'm not quite happy with this kind of side-effect, but this matches the previous behaviour so `¯\_(ツ)_/¯`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/368#issuecomment-324934199:189,load,loading,189,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/368#issuecomment-324934199,1,['load'],['loading']
Performance,"Nothing to add except that after few test my conclusion is that Include-what-you-use is ok but can only detect includes that are not needed. Thus an include needed because of an single inline method in a .h will not be detected as not-needed. . On my side I'm using the -H options of g++ to prints all the includes loaded when compiling a .cpp then I use a small python script to generate an html page out of that to navigate from includes to includes. Because I lack of time it is as-is, ; https://github.com/damienmarchal/snippets/blob/master/include-analyzer.py",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1527#issuecomment-706382858:315,load,loaded,315,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1527#issuecomment-706382858,1,['load'],['loaded']
Performance,Now I also have this issue for Release build on v22.06.00 of SOFA and v22.06 of SofaPython3. @guparan Is there a CI check for loading a SofaPython3 scene after a fresh SOFA build in either SOFA or SofaPython3 repo?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1212543654:126,load,loading,126,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192#issuecomment-1212543654,1,['load'],['loading']
Performance,"Now that https://github.com/sofa-framework/sofa/pull/2165 is merged, I could remove the Data `optimizedForDiagonalMatrix` from the scenes. I confirm that the code goes to the right branch depending on the diagonal property of the mass matrix.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-872033233:94,optimiz,optimizedForDiagonalMatrix,94,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2199#issuecomment-872033233,1,['optimiz'],['optimizedForDiagonalMatrix']
Performance,O.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:2611,Load,Loaded,2611,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"O] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugin ""wayland"" in """". (process:29694): Gtk-WARNING **: 22:14:09.328: Locale not supported by C library.; 	Using the fallback 'C' locale.; Gtk-Message: 22:14:09.408: Failed to load module ""canberra-gtk-module""; Gtk-Message: 22:14:09.409: Failed to load module ""canberra-gtk-module""; [INFO] [SofaPluginManager] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:12302,load,load,12302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['load'],['load']
Performance,O] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManage,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5011,Load,Loaded,5011,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"O] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWith",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6346,Load,Loaded,6346,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,ObjectFactory] Class already registered: SpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: PolynomialSpringsForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [WARNING] [ObjectFactory] Class already registered: PenalityContactForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [WARNING] [ObjectFactory] Class already registered: LineCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PointCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TriangleCollisionModel<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSo,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:11840,Load,Loaded,11840,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"OglModel was : ; - converting some data (vertices, normals) from (default) double to float, 'cause it was set to float for OpenGL; - textures was hard-set on float (and set as float for Ogl); - tangents on double (and set double for OGL). so a weird mix of conversion or not. So now everything is in `SReal` type (so double by default) and set as GL_DOUBLE for the GPU. This should not have any consequence for the performance, as OpenGL will still use single float-point for calculations _a priori_; And some cleanings here and there as usual. Based on; - #2855 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2856:415,perform,performance,415,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2856,1,['perform'],['performance']
Performance,Ok I didn't understand that PSL is loaded as a name in your use case sorry ^^,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/617#issuecomment-376467870:35,load,loaded,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/617#issuecomment-376467870,1,['load'],['loaded']
Performance,Ok found it: the scene-tests are not performing in default mode (100 iterations with a timeout of 60s for a Debug build) because FastTetrahedronCorotationalForceField.scn is listed with custom values in examples/.scene-tests config file.; Renaming the scene according to b061a51606f9dbe6a8bb9305eb6a95af0aad6bf5 should calm down the CI ;-),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/554#issuecomment-359378442:37,perform,performing,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/554#issuecomment-359378442,1,['perform'],['performing']
Performance,"Ok. Then my question is how I could load and use this embedded interpreter?; If, for example, I want to debug or to verify how some script works.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/400#issuecomment-329798784:36,load,load,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/400#issuecomment-329798784,1,['load'],['load']
Performance,Ok... Do we all consider that numpy is mandatory when using SOFA with python ? . It is just a question so that people are aware of that dependency. But I agree to remove the new implementation if less performant . Erwan will do it,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/404#issuecomment-336471217:201,perform,performant,201,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/404#issuecomment-336471217,1,['perform'],['performant']
Performance,"On vendredi 8 septembre 2017 09:20:09 CEST Matthieu Nesme wrote:; > Hi Damien,; > it is a good project (the same for the loaders too). But it not easy to; > review.; > ; > For what I remember STLexporter is exporting from a list of pos/tri while; > the other exporters are exporting every VisualModels from their subgraph,; > isn't it? . no, see previous comment, only the obj exporter has this behavior to export a ; full simulation step in one obj and render it offline. I think the ""normal"" behavior (no visitor) would better fit our current needs. thomas. > I think both functionalities are interesting, and the; > baseexporter class could implement both?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/372#issuecomment-328085074:121,load,loaders,121,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/372#issuecomment-328085074,1,['load'],['loaders']
Performance,"One alternative solution is, in c++, to add new Data fields into the component and in the function BoxROI::init converts these fields values into the one used internally by BoxROI to do the computation. . The drawback is that adding Data field are costly at component creation time and this can have a big performance cost in Sofa for component that are created in a loop or something.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/560#issuecomment-357357289:306,perform,performance,306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/560#issuecomment-357357289,1,['perform'],['performance']
Performance,"One of the point remaining is to build an object that map the component to plugins. . The easy path is probably to make an application that loads all thall the plugins, load them and dump the infos in a file (json, xml, whatever). . Then having a queriable object to get that info through an API.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/281#issuecomment-313046607:140,load,loads,140,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/281#issuecomment-313046607,2,['load'],"['load', 'loads']"
Performance,"One simple solution, it to add [Base::checkDataValidity()](url). Its call would be let to the application.; For example, runSofa would call it right before `init` and `reinit`, but a more specific application could chose not to call it not to add over-cost. Note that high level checkers could be implemented (such as `check_it_is_a_valid_vector_of_indices`, ...). The downside is how to perform the check on a single Data rather than at the component level? But maybe it would be way sufficient for what we attend to do?; To perform the test at the Data level, we need to differentiate Data modification coming from a user vs coming from a computation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/265#issuecomment-302649603:388,perform,perform,388,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/265#issuecomment-302649603,2,['perform'],['perform']
Performance,Optimize the assembly of mapped ForceFields JtKJ by identifying the useful terms of the Jacobian matrix with regards to the K matrix shape. :arrow_right: a regression appeared on BeamFEMForceField and a scene test seems to fail SpatialGridPointModel.scn,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1621242771:0,Optimiz,Optimize,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4001#issuecomment-1621242771,1,['Optimiz'],['Optimize']
Performance,"Other significant singletons:; - message mechanism (dispatchers/handlers),; - idFactory from timers; - Factories (contact, intersectors); - scheduling (TaskScheduler, registry); - scene loaders",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562569604:186,load,loaders,186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3770#issuecomment-1562569604,1,['load'],['loaders']
Performance,"PR 2419 restores the correct behavior of CGLinearSolver regarding the call-super-init; https://github.com/sofa-framework/sofa/pull/2419. But as some of its data are tagged as Required, this rise an error message when the value; is not set by the user. I'm not sure it is wise to set the required flag when data provides meaningful and usable default values. I recommand removing it and more generally keep the isRequired only for data field that really have no possibility to have a default value (eg: the filename for a loader). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2498:521,load,loader,521,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2498,1,['load'],['loader']
Performance,"PR based on #2280.; Template specialization for `void CompressedRowSparseMatrix<type::Mat<3,3,double> >::add(Index row, Index col, const type::Mat3x3d & _M)` in order to accelerate insertion.; This allows to avoid branching in force fields, based on the type of the system matrix (`dynamic_cast`). I removed it in `HexahedronFEMForceField`, but it could be removed in other places. It allows also to automatically optimize bloc insertion in force fields that did not have the branches. # Benchmarks. ## List of benchmarks. - `BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble`: insertion of 1000 3x3 blocs into a CRS made of double; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3Bloc_CRS3x3d`: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocShortcut_CRS3x3d`: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs, but insertion uses the fast function specialized for 3x3 CRS matrices. This is the fastest possible bloc insertion. It is actually used in the specialized function introduced by this PR, among other checks. Therefore, this speed is the goal to achieve for the specialized function.; - `BM_CRS_Fixture<double>/Add3x3BlocScalar_double`: insertion of 1000 3x3 blocs into a CRS made of double using 9 individual scalar insertion; - `BM_CRS_Fixture<sofa::type::Mat<3,3,double>>/Add3x3BlocScalar_CRS3x3d `: insertion of 1000 3x3 blocs into a CRS made of 3x3 blocs, using 9 individual scalar insertion. This is equivalent to what happens in BaseMatrix' bloc insertion, therefore it corresponds to the previous behavior of bloc insertion (before this PR). ## Before. ```; -----------------------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations; -----------------------------------------------------------------------------------------------------------------; BM_CRS_Fixture<double>/Add3x3Bloc_CRSdouble 75568 ns 75550 ns 9185; BM_CRS_Fixture<sofa::",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2281:414,optimiz,optimize,414,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281,1,['optimiz'],['optimize']
Performance,PR: first version of the integration of assimp Importer to Sofa loader structure. - Only support single mesh creation for the moment: see discussion: https://github.com/sofa-framework/sofa/issues/602; - Change all loader logs to use msg_error/warning/info; - Change in SofaKernel :; - loader that failed at init is now set to componentState Invalide.; - Add extension field in Datafilename. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603:64,load,loader,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603,3,['load'],['loader']
Performance,"Pass extra command-line arguments for python scenes loading in a more high-level function call. Knowing that SofaQtQuick uses a different argument parser, the underlying objective of this commit is to be able to pass command-line extra args using QCommandLineParser. This feature is ready on the side of SofaQtQuick and it works (i.e. attached patch). Note that the added input parameter 'sceneArgs' in the 'load' functions is an optional parameter. [patch_pyargs_support.txt](https://github.com/sofa-framework/sofa/files/3073394/patch_pyargs_support.txt). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/992:52,load,loading,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/992,2,['load'],"['load', 'loading']"
Performance,Performance issue in RealeaseWithDebugInfo,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3343:0,Perform,Performance,0,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3343,1,['Perform'],['Performance']
Performance,"Playing with UndefinedBehaviorSanitizer and came across UBs at the very start... This first one is triggered because of misaligned adress when reinterpret_cast a a pointer of char to a a pointer of uintr32_t. ```; Sofa/framework/Core/src/sofa/core/objectmodel/Base.cpp:149:35: runtime error: load of misaligned address 0x7f5e01822917 for type 'const uint32_t', which requires 4 byte alignment; 0x7f5e01822917: note: pointer points here; 6c 2e 68 00 64 72 61 77 00 73 68 6f 77 00 56 69 73 75 61 6c 69 7a 61 74 69 6f 6e 00 22 20 00 4c; ```. This is easily fixed by removing this `questionnable` (sic 😅) ""optimized"" test for comparing strings, and convert to a more readable (and modern) code; I dont really see the need to optimize (and in this way...) this part . For those curious about the optimization, it comes from; https://github.com/sofa-framework/sofa/blame/b3fdf7e4619536941e9cfdd6d4bc6f3e7169af0b/framework/sofa/core/objectmodel/Base.cpp#L96; and; https://learn.microsoft.com/en-us/windows/win32/directshow/fourcc-codes; apparently. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3664:292,load,load,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3664,4,"['load', 'optimiz']","['load', 'optimization', 'optimize', 'optimized']"
Performance,Plugin = to be loaded by PluginManager (via `<RequiredPlugin/>` or plugin_list.conf).; Classic library = does not contain any Component. sofa2ng has been modified accordingly. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/872:15,load,loaded,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/872,1,['load'],['loaded']
Performance,"Plugin SofaCoreAsync; https://github.com/SofaDefrost/sofa/blob/pluginSofaCoreAsync/applications/plugins/SofaCoreAsync/Sofa/Core/Async/tests/AsyncComponentTracker_test.cpp. Associate to the component a Data<'state'>. This data state can be used to keep track of component state change and propagate lazy update so that the component that depend on other can be updated appropriately. The general design was attempting to combine both synchonous and asynchronous components in the same scene so that ""normal"" Sofa object can still interact with the one using asynchronous updates. . In the following example a change in python1,2,3 file is reloaded and the ImplicitFeldRenderer & MeshGeneration are updated, each in an asynchronous way. ; ```qml; Node : {; ImplicitField : { name : ""python1"", src : ""python1.py"" }; ImplicitField : { name : ""python2"", src : ""python2.py"" }; ImplicitField : { name : ""python3"", src : ""python3.py"" }; ; ImplicitFieldRenderer : { src : ""@python1"" }; ImplicitFieldRenderer : { src : ""@python2"" }; ImplicitFieldRenderer : { src : ""@python2"" }. TetrahedralMeshGeneration : { src : ""@python1"", name = ""mesh1"" }; SurfaceMeshGeneration : { src : ""@python2"", name = ""mesh2"" }; TetrahedralMeshGeneration : { src : ""@python1"", name = ""mesh3"" }; ; MechanicalFEM3D : { src : ""@mesh1"" }; MechanicalFEM2D : { src : ""@mesh2"" }; MechanicalFEM3D : { src : ""@mesh3"" }; }; ```. Note 1: When used in asyncrhonous mode, the current approach does not guarante that a change is propagated immediately. So one change in a component at a given IDLEEvent may be updated in this or an other IDLEEvent. It depend on ""when"" the dependencies checks the validity of their input. . Node 2: To fix that a queue may be used to keep track of what still needs to be done. Looks good on paper but this kind of implementation are often much more complex than their initial drafted idea.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367274769:1700,queue,queue,1700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/597#issuecomment-367274769,1,['queue'],['queue']
Performance,"Plugin loading failing when running with normal python, but working with ./runSofa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:7,load,loading,7,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['load'],['loading']
Performance,PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/l,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:6345,Load,Loaded,6345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:8950,Load,Loaded,8950,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [WARNING] [ObjectFactory] Class already registered: AngularSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MeshSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: RestShapeSpringsForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PolynomialRestShapeSpringsForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: SpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: StiffSpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: PolynomialSpringsForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [WARNING] [ObjectFactory] Class already registered: PenalityContactForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:11598,Load,Loaded,11598,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:4151,Load,Loaded,4151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaMatrix.dll; [INFO] [PluginManager] 72 plugins have been loaded from C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckCollisionResponse, SceneCheckDeprecatedComponents, SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:11236,Load,Loaded,11236,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,7,"['Load', 'load']","['Loaded', 'Loading', 'loaded', 'loadedPlugins']"
Performance,"PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-cl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:7199,Load,Loaded,7199,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,"PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/Re",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6454,Load,Loaded,6454,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,PluginRepository paths = D:/github-clones/sofa/build/bin;D:/github-clones/sofa/build/plugins;D:/github-clones/sofa/build/bin/RelWithDebInfo; [INFO] [runSofa] DataRepository paths = D:/github-clones/sofa/src/share;D:/github-clones/sofa/src/examples;D:/github-clones/sofa/build;D:/github-clones/sofa/build; [INFO] [runSofa] GuiDataRepository paths = D:/github-clones/sofa/src/applications/projects/runSofa/resources;D:/github-clones/sofa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/Rel,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:5700,Load,Loaded,5700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,Plugins: loading & components introspection,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/281:9,load,loading,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/281,1,['load'],['loading']
Performance,"Proposal for the 2nd point (autoload a list of plugins from a config file); 1) CMake generates a plugin_list.conf.default file containing all selected Plugins ( names & version ).; E.g; SofaPython 0.1; CImgPlugin 0.1; image 0.2; BeamAdapter 0.1; CGALPlugin 0.1; (version info is optional); I would say that the location of this file should be where all plugins are. ( i.e bin/ ). 2) runSofa application:; instead of the hard-coded line loading SofaPython:; if (exists(plugin_list.conf)); PluginManager::readFromIniFile(plugin_list.conf); // custom; else if (exists(plugin_list.conf.default)); PluginManager::readFromIniFile(plugin_list.conf.default); // default. --> if the user did not create its own custom plugin_list.conf file containing only the plugins he wants to load automatically, then runSofa will load automatically all compiled plugins. (and if the default file is not found then no loading); We do not use the version information for now but could be interesting in the future maybe ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/281#issuecomment-305784223:436,load,loading,436,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/281#issuecomment-305784223,4,['load'],"['load', 'loading']"
Performance,"Quick test to check the behavior of unity-build on the CI (eg: ram limit). It would be nice to gather some statistics on pch/unity build (poke @alxbilger, @fredroy, @guparan) because the performance can increase/decrease with unity build for low memory system. Having insight on wether or not we activate them (in the CI for example). Damien's latop: 8 core, 32GB Ram, linux ; ```console; - clang/debug: 03:37 min; - clang/debug/pch: 03:05 min; - clang/debug/unity: 03:01 min; - clang/debug/pch+unity: 02:32 min; ; - clang/release: 05:58 min; - clang/release/pch: 05:06 min; - clang/release/unity: 05:43 min; - clang/release/pch+unity: 05:01 min; ```; PROs: pch and unity build are a good way to detect duplicated code and can reduce compilation time.; CONs: pch and unity build can be problematic as they hides possibly missing includes, can increase compilation time (memory limit. Not very c++20 module friendly ?. NB 1: unity build is only partially deployed until the PRs, fusing duplicated code, made by @alxbilger are not merged. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1964:187,perform,performance,187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964,1,['perform'],['performance']
Performance,"Quite a large pull request. - Clean a few files related to the broad phase of the collision detection (unused includes, forward declaration, etc); - Large work on DirectSAP to clean it and speed it up. The algorithm stays the same but:; - Cost of data access has been reduced by caching it at the beginning of the algorithm; - Containers have been changed so we do constant operations only; - Debug visualization has been added. Results:; Tests have been performed on the caduceus scene where BruteForceDetection has been changed to DirectSAP, running 1000 iterations:. BEFORE:; 1000 iterations done in 19.7895 s ( 50.532 FPS). ; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.30	 1 	 15.30	 29.27	 17.51	 2.06	 17.51	 88.55	.....NarrowPhase; 6 	 1.37	 1 	 0.19	 0.59	 0.22	 0.03	 0.22	 1.11	......Direct SAP std::sort; 6 	 1.59	 1 	 14.98	 28.90	 17.21	 2.04	 17.21	 87.05	......Direct SAP intersection. AFTER:; 1000 iterations done in 7.53045 s ( 132.794 FPS).; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 5 	 1.25	 1 	 3.66	 9.56	 5.37	 0.88	 5.37	 71.52	.....NarrowPhase; 6 	 1.31	 1 	 0.05	 0.11	 0.05	 0 	 0.05	 0.72	......Direct SAP cache; 6 	 1.37	 1 	 0.21	 0.61	 0.23	 0.03	 0.23	 3.08	......Direct SAP sort; 6 	 1.60	 1 	 3.24	 9.10	 5.02	 0.86	 5.02	 66.80	......Direct SAP intersection. Gain of the narrow phase: x3.3 faster. Note: BruteForceDetection is still a lot faster:; 1000 iterations done in 2.62201 s ( 381.386 FPS). Debug view:; ![Capture d’écran du 2021-03-15 10-04-20](https://user-images.githubusercontent.com/10572752/111137537-32874a00-857f-11eb-9f39-0eaceb0fa0be.png). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1917:455,perform,performed,455,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1917,1,['perform'],['performed']
Performance,"ReadState was only reading the file and making the changes after the first time step (or later). ; This PR allows to load the state at init. . Edit: I forgot to mention that it shouldn't change the behavior of existing scenes. ; The file loaded by ReadState has time values that define at which time steps of the simulation each different state should be applied. Currently T=0 is not working, this PR simply allows that. ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1654:117,load,load,117,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1654,2,['load'],"['load', 'loaded']"
Performance,"Reading a JPEG file is implemented by ImageQt, which obviously depends on Qt.; It means that Qt is needed to load any JPEG image (actually, also gif, and other exotic formats). 1) I think we should be able to read JPEG files without Qt ; perhaps using libjpeg ?; 2) Moreover, we need to have a Qt Gui to activate ImageQt ; then it could be an idea to move this class to a plugin ? Which will be able to read all image formats the Qt library can read ?; 3) (BUG) JPEG files read by ImageQt seem to be upside-down, if we compare it with the same image converted in the PNG format (I will write a test to confirm that)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/51:109,load,load,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/51,1,['load'],['load']
Performance,Recover a commit in is_sofa_multithreading branch (3da9e50752d6aead487f0b5f8897bfc4249f9404) to allow OdeSolver concurrent execution:. A new data<bool> is added (d_threadsafevisitor) to disable allocation and writing in the mechanical object component used by the OdeSolver ; The same change is applied to all the OdeSolver derived class and it doesn't affect the default behavior and the scenes.; EulerSolver; EulerImplicitSolver; StaticSolver; CentralDifferenceSolver; VariationalSymplecticSolver; NewmarkImplicitSolver. Task Scheduler refactoring;; - improve task stealing between worker threads.; - add worker thread name to make the debugging and profiling easier.; - group and move the initialization tasks in a dedicated file. New component and scene to show off the performance improvement of multithreading execution.; - MeanComputation. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/745:112,concurren,concurrent,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/745,2,"['concurren', 'perform']","['concurrent', 'performance']"
Performance,"Refactor CImg & CImgPlugin and fix the code that depend on it. . The general problem is that CImg is header only library thus the; multiple inclusion of the code in multiple dll seems to cause trouble; on the mutexes initialization causing the crash & failure when two plugins compile; with CImg & CImgPlugin are loaded (eg image, flexible). To avoid this scenario, CImg is moved into the CImgPlugin that; hold the mutex and other code needs to include #include<CImgPlugin/SOFACImg.h>; instead of the raw CImg. This PR is resulting from the split of #548 (for clearity and to ease reviewing). . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/562:313,load,loaded,313,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/562,1,['load'],['loaded']
Performance,Refactor of DetectionOutputVector interface and its implementation TDetectionOutputVector. . The goal is to force all components to use the only functions provided by the DetectionOutputVector interface to interact with the DetectionOutput data that stores the contacts. One advantage of accessing the DetectonOutput data through an interface is to make a concurrent modification of contacts easier. The current implementation allows direct access to the DetectionOutput vector by casting the TDetectionOutputVector class to the helper::vector<DetectionOutput> Vector due to a double inheritance. ; This makes the DetectionOutputVector interface useless because easy to bypass. Current implementation of the DetectionOutputVector interface. ```; class TDetectionOutputVector : public DetectionOutputVector : public helper::vector<DetectionOutput>; {; public:; override of DetectionOutputVector pure virtual functions to modify the helper::vector<DetectionOutput>. }; ```. New implementation of of the DetectionOutputVector interface. ```; class TDetectionOutputVector : public DetectionOutputVector; {; public:; override of DetectionOutputVector pure virtual functions to modify the helper::vector<DetectionOutput>. private:; 	helper::vector<DetectionOutput>; }. ```. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/965:356,concurren,concurrent,356,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/965,1,['concurren'],['concurrent']
Performance,Refactor performer API,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4670:9,perform,performer,9,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4670,1,['perform'],['performer']
Performance,Regression: OglModel won't load stl file,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/768:27,load,load,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/768,1,['load'],['load']
Performance,Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anacon,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6350,Load,Loaded,6350,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"Remove `Qt6`, and be sure to delete it from your machine. I had the same problem. Don't hesitate to delete the build folder before rebuilding to avoid cache issue.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372036821:151,cache,cache,151,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425#issuecomment-1372036821,1,['cache'],['cache']
Performance,"Remove thread specific declaration for ExecParams class. accessing thread local variables is slow and if the thread-local variable is accessed very frequently, the cost may become an issue. ; https://software.intel.com/en-us/blogs/2011/05/02/the-hidden-performance-cost-of-accessing-thread-local-variables. The ExecParams global pointer is declared thread specific but it is often passed in a function call as argument.; A function executed in a second thread can receive as argument the thread local variable of the first thread and it is allowed to use it.; In this situation there is no need of use the thread local variable. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1129:253,perform,performance-cost-of-accessing-thread-local-variables,253,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1129,1,['perform'],['performance-cost-of-accessing-thread-local-variables']
Performance,"Rendering using GL_DOUBLE has terrible performance on some hardware/os/drivers that are still commonly used. . Reverts #2856. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3073:39,perform,performance,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3073,1,['perform'],['performance']
Performance,"Reopening of #1274. > unload() function of PluginManager was just removing the entry of the plugin in its map, but this one was effectively still loaded in the process memory. (on Windows, you could still see it using ProcessExplorer); > This PR fixes it (i.e really unloads from memory). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1287:146,load,loaded,146,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1287,1,['load'],['loaded']
Performance,"Replace ```<From ...>```; By: ```<Import from=""blabla"" component=""VisualModel"" as=""Toto""/>```. And multiple load with comma separation. ; ""toto tata titi ti ti"" ; "" 0 1 2 3 4"" . =====================; Compatibility with ; SOFA NG:; ```<From plugin=""Sofa.Component.ODESolver"" import=""*""/>``` => OK ? Sofa.Component.ODESolver.Backward; ```<From plugin=""Sofa.Component"" import=""*""/>``` => OK ? . In an xml Sofa scène: Sofa.Component.ODESolver.Backward; In a python sofa scene: Sofa.Component.ODESolver.Backward ; In the c++ namespace: sofa::component::odesolver::Backward; In the c++ include: sofa/component/odesolver/Backward; ...; All that is so nicely consistent.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-988709045:108,load,load,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-988709045,1,['load'],['load']
Performance,"Right for the overhead, my target was clearly to minimize the developement time because this is a very scarce resource. The good news I see is that if the function a performance limiting we are still able to improve it a lot (by order of magnitude).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/332#issuecomment-316340088:166,perform,performance,166,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/332#issuecomment-316340088,1,['perform'],['performance']
Performance,"SAP is usually a method to discriminate pairs of objects that are not in collision. The output is pairs of objects to be further investigated in the narrow phase.; However, in SOFA, the `DirectSAP` component is written as a component doing the broad phase and the narrow phase. Almost all the work is actually done in the narrow phase. That is why, we can consider this component is mainly a narrow phase component.; All the broad phase code has been removed. It is still a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2030:1026,perform,performances,1026,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030,1,['perform'],['performances']
Performance,"SAP is usually a method to discriminate pairs of objects that are not in collision. The output is pairs of objects to be further investigated in the narrow phase.; However, in SOFA, the `DirectSAP` component is written as a component doing the broad phase and the narrow phase. Almost all the work is actually done in the narrow phase. That is why, we can consider this component is mainly a narrow phase component.; All the broad phase code has been removed. It is still a broad phase, but the code is located in its base class: `BruteForceBroadPhase`.; The narrow phase code has been extracted and put in a new component: `DirectSAPNarrowPhase`. `DirectSAP` inherits from `DirectSAPNarrowPhase`.; In the narrow phase, the result of the broad phase is used to skip the boxes which have been totally ignored in the broad phase. Initially, the `DirectSAP` component did not perform any discrimination in its broad phase. Now it performs a `BruteForceBroadPhase`. It is not yet clear if it is always a good choice regarding the performances. In the case of the caduceus scene, the performances are slightly better. I guess if the broad phase takes a lot of time (many objects), it is better to avoid it. `DirectSAP` would not be the best choice. I would use a more performant broad phase, or no broad phase, when used with `DirectSAPNarrowPhase`. From now, the user can decide to design its scene with two different ways resulting to the same behavior:; ```; <DirectSAP/>; ```; or; ```; <BruteForceBroadPhase/>; <DirectSAPNarrowPhase/>; ```; In the second option, it will be possible to change the combination of broad phase/narrow phase.; Note: I kept the component `DirectSAP`, but I don't think its name is meaningful. This is the following of the work started in #2010 . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/so",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2030:873,perform,perform,873,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2030,2,['perform'],"['perform', 'performs']"
Performance,"SOFA has two different ways to load plugins:; - via runSofa; - via the PluginManager through the GUI. Using different GUI, the list of loaded plugins may differ! Topic brought back in #3109 ; This should be centralized and homogenized ; @alxbilger @damienmarchal",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3147:31,load,load,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3147,2,['load'],"['load', 'loaded']"
Performance,Scene loader should warn when loading py/pyscn without SP plugin loaded,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2366:6,load,loader,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2366,3,['load'],"['loaded', 'loader', 'loading']"
Performance,"SceneChecks were isolated in a project. But we may want that plugins add their own SceneCheck. An example with MultiThreading is provided here. The class `SceneCheck` is now available in Sofa.Simulation.Core. Tools to register a SceneCheck are also available in the module. The newly introduced SceneCheck checks if there are opportunities to use a multi-threaded component. It advices the user with a message looking like:. ```; [SUGGESTION] [SceneCheckMultithreading] This scene is using components implemented sequentially while a parallel implementation is available. Using the parallel implementation may improve the performances. Here is the list of sequen; tial components in your scene and their parallel equivalent:; BVHNarrowPhase -> ParallelBVHNarrowPhase; BruteForceBroadPhase -> ParallelBruteForceBroadPhase; HexahedronFEMForceField[Vec3d] -> ParallelHexahedronFEMForceField[Vec3d]; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3597:349,multi-thread,multi-threaded,349,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3597,2,"['multi-thread', 'perform']","['multi-threaded', 'performances']"
Performance,SceneCreator.; If you get a message saying:; ```; create: component 'Euler Explicit' of type 'EulerSolver Object type EulerSolver<> creation failed ; ```; Emitted by the simpleapi as in; ```; source code loc: /home/sofa/jenkins_1/workspace/ubuntu_gcc-5.4_options/src/applications/plugins/SceneCreator/SimpleApi.cpp:83; ```. This means that the factory does not contains the object. This message appears because the implementation of SceneCreator is totally new and it is now based on the content of the ObjectFactory. The consequence is that to create object the factory needs to be initialized properly (by loading the plugins/modules). . PS: to get the emitting location you can start runSofa with the clang message formatter.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/418#issuecomment-335752535:608,load,loading,608,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/418#issuecomment-335752535,1,['load'],['loading']
Performance,See #51; Partially fixed in PR #185 .; Last things to do is:; - to remove ImageBMP/ImagePNG/ImageQt code; - load CImgPlugin when you want to load images (force loading like SofaPython ? or wait PR #253 ),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/9#issuecomment-305125439:108,load,load,108,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/9#issuecomment-305125439,3,['load'],"['load', 'loading']"
Performance,See issue #784 : Quadractic complexity in BarycentricMapping ; This PR depends on PR #797: Cleaning and refactoring of BarycentricMapping. In this PR the initialization of BarycentricMapping (for topology container only) is optimized using spatial hashing. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/798:224,optimiz,optimized,224,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/798,1,['optimiz'],['optimized']
Performance,Segmentation Fault when loading SofaPython3.dll,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1672:24,load,loading,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1672,1,['load'],['loading']
Performance,"Several way to create a grid:; - topologies: regulargridtopology, sparsegridtopology, etc; - loaders: GridMeshCreator (and its sibling stringmeshcreator); - engine: GenerateGrid. The ""topology"" way is a bit erroneous, as it creates position (and not only topological elements); The loaders one as well, as they dont really load anything; The engine one is not very well done. One way of unifying everything should be done.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2654:93,load,loaders,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2654,3,['load'],"['load', 'loaders']"
Performance,"Similar scenes are introduced as a benchmark in order to compare their performances.; It's a cantilever beam simulated with 2.5k tetrahedra.; Depending on the scene, it is solved with either a Conjugate Gradient or a LDL solver.; The main difference is how the global system matrix is assembled (or not in case of a matrix free solver). This is defined by the template parameter of the linear solver. # Results. The results are the average duration in milliseconds of the AnimateVisitor step:. ```; MatrixAssembly_assembledCG_blocs.scn 6.54 ms; MatrixAssembly_assembledCG.scn 16.65 ms; MatrixAssembly_direct_blocs.scn 12.85 ms; MatrixAssembly_direct.scn 22.04 ms; MatrixAssembly_matrixfreeCG.scn 7.99 ms; ```. * MatrixAssembly_matrixfreeCG.scn: the linear solver is a Conjugate Gradient and the matrix is not built; * MatrixAssembly_assembledCG.scn: the linear solver is a Conjugate Gradient and the matrix is explicitly built; * MatrixAssembly_assembledCG_blocs.scn: the linear solver is a Conjugate Gradient and the bloc-based matrix is explicitly built; * MatrixAssembly_direct.scn: the linear solver is a LDL solver and the matrix is explicitly built; * MatrixAssembly_direct_blocs.scn: the linear solver is a LDL solver and the bloc-based matrix is explicitly built. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2208:71,perform,performances,71,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2208,1,['perform'],['performances']
Performance,"Since CRS matrix are now optimized when inserting a 3x3 block, it is no longer necessary to have branches in force fields, where a branch is selected based on the type of matrix.; The virtual call to `add` is generic, but leads to the optimized matrix insertion. I did not notice any significant performances changes in the scenes located in `examples\Benchmark\Performance\MatrixAssembly`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2323:25,optimiz,optimized,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2323,4,"['Perform', 'optimiz', 'perform']","['Performance', 'optimized', 'performances']"
Performance,"Since https://github.com/sofa-framework/sofa/pull/2281, it is no longer necessary to force the optimization of the matrix assembly based on the type of the matrix using a `dynamic_cast`.; In TriangularFEMForceFieldOptim, a mechanism were used in order to hide this cast. It used `BlocMatrixWriter`.; Since this optimization is no longer required, TriangularFEMForceFieldOptim now writes its `addKToMatrix` using the traditional way. It is supported by a [benchmark](https://github.com/alxbilger/SofaBenchmark/pull/21):. Before:; ```; ----------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; ----------------------------------------------------------------------------------------------; BM_TriangularFEMForceFieldOptim/32 190 ms 188 ms 4 FPS=170.667/s MBKBuild=561.555u MBKSolve=5.21104m frame=5.85938ms; BM_TriangularFEMForceFieldOptim/64 368 ms 367 ms 2 FPS=174.298/s MBKBuild=526.034u MBKSolve=5.06889m frame=5.7373ms; BM_TriangularFEMForceFieldOptim/128 715 ms 719 ms 1 FPS=178.087/s MBKBuild=509.678u MBKSolve=4.93597m frame=5.61523ms; BM_TriangularFEMForceFieldOptim/256 1259 ms 1266 ms 1 FPS=202.272/s MBKBuild=500.564u MBKSolve=4.28127m frame=4.94385ms; ```; After. ```. ----------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; ----------------------------------------------------------------------------------------------; BM_TriangularFEMForceFieldOptim/32 196 ms 195 ms 4 FPS=163.84/s MBKBuild=590.4u MBKSolve=5.34807m frame=6.10352ms; BM_TriangularFEMForceFieldOptim/64 377 ms 375 ms 2 FPS=170.667/s MBKBuild=529.309u MBKSolve=5.19836m frame=5.85938ms; BM_TriangularFEMForceFieldOptim/128 720 ms 703 ms 1 FPS=182.044/s MBKBuild=497.814u MBKSolve=4.9813m frame=5.49316ms; BM_TriangularFEMForceFieldOptim/256 1270 ms 1266 ms 1 FPS=202.272/s MBKBuild=502.338u MBKSolve=4.3129m frame=4.94385ms; ```. _____________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2861:95,optimiz,optimization,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2861,2,['optimiz'],['optimization']
Performance,"Since https://github.com/sofa-framework/sofa/pull/2281, it is no longer necessary to force the optimization of the matrix assembly based on the type of the matrix using a `dynamic_cast`.; This PR removes it for `StandardTetrahedralFEMForceField`. It is supported by a [benchmark](https://github.com/alxbilger/SofaBenchmark/blob/main/SofaBenchmarkScenes/src/SofaBenchmarkScenes/fem/StandardTetrahedralFEMForceField.cpp):. Before:. ```; --------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; --------------------------------------------------------------------------------------------------; BM_StandardTetrahedralFEMForceField/32 333 ms 328 ms 2 FPS=97.5238/s MBKBuild=379.033u MBKSolve=6.66173m frame=0.0102539s; BM_StandardTetrahedralFEMForceField/64 664 ms 672 ms 1 FPS=95.2558/s MBKBuild=354.073u MBKSolve=6.62915m frame=0.010498s; BM_StandardTetrahedralFEMForceField/128 1319 ms 1328 ms 1 FPS=96.3765/s MBKBuild=347.671u MBKSolve=6.58216m frame=0.010376s; BM_StandardTetrahedralFEMForceField/256 2583 ms 2578 ms 1 FPS=99.297/s MBKBuild=330.558u MBKSolve=6.43889m frame=0.0100708s; ```. After. ```; --------------------------------------------------------------------------------------------------; Benchmark Time CPU Iterations UserCounters...; --------------------------------------------------------------------------------------------------; BM_StandardTetrahedralFEMForceField/32 321 ms 320 ms 2 FPS=99.9024/s MBKBuild=379.211u MBKSolve=6.43458m frame=0.0100098s; BM_StandardTetrahedralFEMForceField/64 637 ms 641 ms 1 FPS=99.9024/s MBKBuild=361.311u MBKSolve=6.34991m frame=0.0100098s; BM_StandardTetrahedralFEMForceField/128 1287 ms 1281 ms 1 FPS=99.9024/s MBKBuild=349.305u MBKSolve=6.4886m frame=0.0100098s; BM_StandardTetrahedralFEMForceField/256 2548 ms 2547 ms 1 FPS=100.515/s MBKBuild=347.56u MBKSolve=6.35484m frame=9.94873ms; ```. ______________________________________________________. By s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2858:95,optimiz,optimization,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2858,1,['optimiz'],['optimization']
Performance,"Since https://github.com/sofa-framework/sofa/pull/2281, it is no longer necessary to force the optimization of the matrix assembly based on the type of the matrix using a dynamic_cast.; This PR removes it for TorsionForceField. Note that there is no example for this component. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2859:95,optimiz,optimization,95,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2859,1,['optimiz'],['optimization']
Performance,Slaves where added by @JeremieA in https://github.com/sofa-framework/sofa/commit/5bac8111444f69898ae8ff44e16697b7db51f64b. We need to specify what is a Slave: what is it used for apart from collision? Being part of the scene graph as a link to another BaseObject? How should we design the propagation of the event?; We should make sure there is no side-effects and this does not affect performances.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2348#issuecomment-929979094:386,perform,performances,386,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2348#issuecomment-929979094,1,['perform'],['performances']
Performance,"Small optimizations monitored using tests: ```TriangleFEMForceField3_test, DISABLED_testTriangularFEMPerformance``` which is performing 10 successive simulations of 1000 steps of a grid of 40x40x2= 3200 triangles. Current logs (per simulation of 1000 steps):; ```; timeMean: 3.69814; timeMin : 3.62193; timeMax : 3.84991; ```. First quick optimisation on accessing triangle in for loop:; ```; + const Triangle& tri = m_topology->getTriangle(elementIndex);; + Index a = tri[0];; + Index b = tri[1];; + Index c = tri[2];; - Index a = m_topology->getTriangle(elementIndex)[0];; - Index b = m_topology->getTriangle(elementIndex)[1];; - Index c = m_topology->getTriangle(elementIndex)[2];; ```; Gives:; ```; timeMean : 2.40153; timeMin : 2.38573; timeMax : 2.42425; ```. Additionnal small optimization using BeginWriteOnly accessors and const ref in methods give final record:. ```; timeMean : 2.26662; timeMin : 2.23438; timeMax : 2.2895; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2273:6,optimiz,optimizations,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273,3,"['optimiz', 'perform']","['optimization', 'optimizations', 'performing']"
Performance,"Small revert from #1913 ; Sofa.GL is a pure ""dll"" with no component so cannot be a ""sofa module"" (aka loadable in a scene file). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1920:102,load,loadable,102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1920,1,['load'],['loadable']
Performance,"So I think I found a clean way to run the SceneChecks by using SceneLoader::Listener.; SceneChecks are now run on every GUI (batch, classic) and every SceneLoader (XML, Python).; They are also triggered in unit tests that use loadFromMemory but that is maybe too much... What do you guys think?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/938#issuecomment-465596135:226,load,loadFromMemory,226,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/938#issuecomment-465596135,1,['load'],['loadFromMemory']
Performance,"So I took a look at the SleepController. It simply puts context to sleep where the mechanical object has a max velocity under a certain threshold. Then wake them up again only when a collision occurs with another object that is moving. ; Three remarks : ; - Being put to sleep disables any mechanical visitor to be applied on the node and deactivates its constraint corrections. So no more computing (no system build, no integration, only collision detection); - This works well only for scenes where external interaction only arise between two objects colliding, neither by the mean of a change of external forces (dynamic vector field for instance), or of constraint state changes not managed by the collision pipeline (for instance statically defined interaction constraints such as cable constraints). ; - The code seems overly complicated for what it performs but certainly does what it says it does. I didn't try it but it looks ok. . Sincerely, I cannot see myself advising anyone to use it in their scene given the fact that the use case doesn't apply for the majority of the scenes (especially for soft robotics). So I wouldn't mind never seeing it again...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4813#issuecomment-2236872106:856,perform,performs,856,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4813#issuecomment-2236872106,1,['perform'],['performs']
Performance,"So I wanted to open a python file in SOFA but the terminal shows this error-; [ERROR] [SofaPython3::SceneLoader] Unable to completely load the scene from file 'filepath'; Python exception:; ModuleNotFoundError: No module named 'splib3'. I am not able to fix this error. I have SofaPython3 and STLIB plugins already added. Can't figure out how to solve. Please help!. Also, I am using windows10 , python v3.7",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2959:134,load,load,134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2959,1,['load'],['load']
Performance,So apparently SceneLoaderPY (Python scene loader) needs to call notifyLoadingScene at a specific moment because using my new `doLoad` delegate messes with the unit test SofaPython_test/python/moduleReload.py. @damienmarchal Could you tell me if you see a fix to that?. We still can stick to the old `load` override and ignore `doLoad` in SceneLoaderPY.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/938#issuecomment-465612130:42,load,loader,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/938#issuecomment-465612130,2,['load'],"['load', 'loader']"
Performance,"So at the end the PR also fixes MeshGmshLoader, MeshOffLoader, and MeshTrianLoader. ; If you want to reproduce the bug you can run the corresponding examples on master, you'll see that too many positions are being loaded. . **Breaking**: Btw, I've removed the duplicated function addTriangle()... It may break some loaders that I haven't compiled, but I think it's cleaner this way.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1554#issuecomment-714621942:214,load,loaded,214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1554#issuecomment-714621942,2,['load'],"['loaded', 'loaders']"
Performance,"So,; 1) there is no reason to have helper::ArgumentParser in SceneLoaders because a loader (py, scn, etc..) shouldn't be connected in any way to the command line (which is an user interface aspect), especially one relying on a static global object as ArgumentParser. ; 2) it make sense to load a scene with specific parameters...so having an array with scene specific parameters is in the load function seems sounded. DM.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/992#issuecomment-486584113:84,load,loader,84,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/992#issuecomment-486584113,3,['load'],"['load', 'loader']"
Performance,Sofa crashing when the collision mesh file can not be loaded,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/746:54,load,loaded,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/746,1,['load'],['loaded']
Performance,"Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/ana",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10240,Load,Loaded,10240,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,Sofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Co,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:3652,Load,Loaded,3652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"Sofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libArticulatedSystemPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofaMatrix.dylib; [INFO] [PluginManager] 68 plugins have been loaded from /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /Users/hemingshan/Code/sofa/build/config/loadedPlugins.ini. ########## SIG 11 - SIGSEGV: segfault ##########; [1] 21189 segmentation fault ./runSofa; `. ```. **Env vars**. ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. < COPY-PASTE HERE THE RESULT OF THE COMMAND ABOVE >. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. < COPY-PASTE YOUR OUTPUT HERE >. ```; <img widt",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:9348,Load,Loading,9348,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,2,"['Load', 'load']","['Loading', 'loadedPlugins']"
Performance,"SofaBase' s modules will only be ""packaged"", as they contain essential things (thus they will always be loaded). - [x] SofaBaseCollision; - [x] SofaBaseLinearSolver; - [x] SofaBaseMechanics; - [x] SofaBaseTopology; - [x] SofaBaseVisual; - [x] SofaBaseUtils; - [x] SofaEigen2Solver",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1633:104,load,loaded,104,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1633,1,['load'],['loaded']
Performance,SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/So,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:6679,Load,Loaded,6679,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,Sofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/p,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3643,Load,Loaded,3643,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"Sofa_development/sofa/build_release/install/lib; [INFO] [runSofa] DataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: JointSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid2d,Vec2d>; [WARNING] [ObjectFactory] Class already registered: RigidMapping<Rigid3d,Vec3d>; [WARNING] [ObjectFactory] Class already registered: RigidRigidMapping<Rigid3d,Rigid3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [WARNING] [ObjectFactory] Cl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:9106,Load,Loaded,9106,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = D:/github-clones/sofa/build/bin;D:/github-clones/sofa/build/plugins;D:/github-clones/sofa/build/bin/RelWithDebInfo; [INFO] [runSofa] DataRepository paths = D:/github-clones/sofa/src/share;D:/github-clones/sofa/src/examples;D:/github-clones/sofa/build;D:/github-clones/sofa/build; [INFO] [runSofa] GuiDataRepository paths = D:/github-clones/sofa/src/applications/projects/runSofa/resources;D:/github-clones/sofa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDeb",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:5595,Load,Loaded,5595,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,Solver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemings,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:4009,Load,Loaded,4009,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginMana,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:5382,Load,Loaded,5382,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"Some vector calculus are performed on normalized orthogonal vectors, and the result is also normalized. Therefore, no need to normalize it again. The proposed change avoids 2 normalizations. To be multiplied by the number of elements. It's called in `addForce`. And I suspect this is why `addForce` is faster in https://github.com/sofa-framework/sofa/pull/2550 (the branch contains the same changes only for TetrahedronFEMForceField).; In this PR, the changes are applied on all the corotational FEM I could found. I found that the function `Decompose<Real>::getRotation` is very similar to my changes. However, the resulting rotation is the transpose of the rotation needed in the FEM. Also, I did not find any use of `Decompose<Real>::getRotation`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2647:25,perform,performed,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2647,1,['perform'],['performed']
Performance,"Some work on cleaning the components SparseGridTopology and SparseGridRamicficationTopology: . - Remove commented code; - Replace sout/serr by msg macro; - Remove duplicated Data in SparseGridRamicficationTopology which inherite from SparseGridTopology ; - Fix warnings (size_t, unsued variables, ...); - Fix SparseGridTopology.scn and SparseGridRamicficationTopology.scn behavior; - Add regression_test references for both scenes and add them to the list of scene to be tested. This PR replace an old one #706 instead of merging master. This PR is only a aesthetic clean before a more complex PR to clean and factorize methods inside the components as well as removing the fileMesh loaded inside the component and use topology Data buffers. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/855:683,load,loaded,683,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/855,1,['load'],['loaded']
Performance,"Sorry for the (big) delay 😥; Usually this problem with libpng means that you compile and link SOFA with the libpng.h. libpng.lib included from the sofa-windows-dependency-pack but your system is using an other libpng.dll in your SYSTEM. . I suppose you have ..../Anaconda3/Library/bin in the PATH environment variable. ; So you have a mismatch between libpng's version (and libpng is bothersome for that).; Make sure you load the good dll when executing runSofa. ; The ""good"" dll is supposed to be copied from sofa-windows-dependency-pack with the binaries of the build directory.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1364#issuecomment-777639284:421,load,load,421,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1364#issuecomment-777639284,1,['load'],['load']
Performance,"Sorry for the delay !. First, I have some precisions regarding Fred's remark: with the modification I suggested, I see a critical performance drop in the caduceus scene, going from ~150-200 FPS before the change, to ~25 FPS after. I expect that, indeed, the barycentric mapping accesses the `m_positions` field of the `OGLmodel`, consequently causing extensive triggering of the callback at each time step. So the solution I first suggested should be discarded anyway. @hugtalbot, using the `m_restPositions` field for the callback doesn't have the same performance issue. However I believe that this field is not used in the rendering process of the `OglModel`. Or, at least, calling `initVisual()` after a change of `m_restPositions` doesn't change the visual. So this solution doesn't solve the initial issue I had. I tried to look into how the `BarycentricMapping` works in details, but I'm afraid it is a bit too complexe for me with the time I have at the moment... My idea was to find how the barycentric mapping makes sure that the visual OGLModel is updated at each time step, and mimick this. If someone is familiar with the process ?. In the meantime, regarding the specific scenario I was working on, I'm using another workaround. Instead of dynamically changing the source file of the loader, I'm creating as many loaders as mesh files I have, and I dynamically change the loader I need at a given time during the simulation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2925#issuecomment-1137038775:130,perform,performance,130,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2925#issuecomment-1137038775,5,"['load', 'perform']","['loader', 'loaders', 'performance']"
Performance,"Speed up by a (huge) factor the rendering of several spheres.; This is done in 2 ways:; - optimizing with VBO for ""normal"" spheres (like before, with rings and segments parameters) ; - impostors (https://paroj.github.io/gltut/Illumination/Tutorial%2013.html). On the same computer, for 150K spheres :; - 0.8fps with previous rendering; - 22fps with VBO; - 46 fps with impostors . This task is also the beginning of optimizing draw tools, by removing deprecated glu calls and non optimized OpenGL code ; and by using VBO/IBO and shaders. (class BasicShapesGL). This PR should resolve more or less the issue #142 . ; It depends if this issue talks about spheres only or more generally speeding up rendering itself (in that case, it will need much more commits ;) ). <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/170:90,optimiz,optimizing,90,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/170,3,['optimiz'],"['optimized', 'optimizing']"
Performance,"SpringFF = explicit only and optimized. StiffSpringFF = implicit, possibility to add new springs .. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1099:29,optimiz,optimized,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1099,1,['optimiz'],['optimized']
Performance,"Start work on merging the duplicated code of the mesh loader components versus helper::io::mesh loaders. See issue #42 . Basically, all code to load a mesh file directly in the topology without using a meshLoader component. For example: `<GridTopology fileMesh=""my_mesh.msh"" /> or <OglModel filename=""my_mesh.obj"" />`; go through the class: helper::io::MeshTopologyLoader which had directly some code to load several formats or was using a helper::io::meshXX to read XX file format. All this code is duplicated with the meshLoader components and with some differences (otherwise it would not be fun...). For the moment I only updated the MeshTopologyLoader and the helper::io::mesh classes to check the tests on all plateforms. ; Changes are:; - obj -> nothing (use MeshObj class); - trian -> nothing (use MeshTrian class); - vtk -> remove code from 2009 and use MeshVTK class from 2015. Still different from meshVTKLoader.; - stl -> nothing (use MeshSTL class); - gmsh -> create a MeshGmsh class and move the code in it.; - xsp -> create MeshXsp class and move the code in it.; - cgal -> remove the methods. Assume it is deprecated.; - unknown format -> the ""else"" method when format not found return false now and is set as deprecated. - Update the helper::io::mesh class to have topology buffers in order to be similar as baseMeshLoader for future merge. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/661:54,load,loader,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/661,4,['load'],"['load', 'loader', 'loaders']"
Performance,"Supersedes #4179. No tests of performances yet. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4236:30,perform,performances,30,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4236,1,['perform'],['performances']
Performance,"Sure, sorry. So I wanted to optimize the initialization of BarycentricMapping, see issue #784 for clear description of the problem. . To avoid more duplication of code, and to allow the optimization to be available for a maximum of topology types, I needed the code to be refactored. . So:. 1. I created an abstract class (BarycentricMapperTopologyContainer) that gather the shared implementations of BarycentricMapperEdgeSetTopology, BarycentricMapperTriangleSetTopology, BarycentricMapperQuadSetTopology, BarycentricMapperTetrahedronSetTopology, and BarycentricMapperHexahedronSetTopology. 2. Enabeling to refactor the apply(), applyJ(), applyJT(), getJ(), draw() functions and more importantly the function I want to optimize, init(). The PR also include some cleaning, in particular the renaming of variables. That could indeed break not updated code. . What I couldn't do, is to also refactor the code of BarycentricMapperMeshTopology...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/797#issuecomment-432581901:28,optimiz,optimize,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/797#issuecomment-432581901,3,['optimiz'],"['optimization', 'optimize']"
Performance,System::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:2070,Load,Loaded,2070,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,T and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugin,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3311,Load,Loaded,3311,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"THIS PR HAS BEEN SPLITTED IN SEVERAL PART... THE FIRST ONE IS: #1605 . In this PR I'm try to avoid the tight coupling that is currently in DataTypeInfo.h. . Let's me explain,; Every Data that we manipulate in sofa can return type informations. ; This can be done in two ways:; - the first solution rely on type_traits with the specialization of the DataTypeInfo class. A DefaultDataTypeInfo is provided as a fallback scenario while fully defined information can be provided by providing a specialization for DataTypeInfo<>. ; - the second solution is a runtime approach were the typeinfo is inherited from AbstractTypeInfo. ; To *ease* the implementation the runtime solution is generated by ""reusing"" the static one. This is done with VirtualTypeInfo<StaticDataTypeInfo>. This VirtualTypeInfo inherits from AbstractTypeInfo but wrap and forward all the method call to the StaticDataTypeInfo passed in the template parameter. . This is actually an interesting design gears provided fast/efficient API and an abstract one with lower performance. Nevertheless there is actually one problem with the existing implementation, the problem is that by default access to the static version (so the one that need the full inclusion of involved data types) to generate the dynamic one in the VirtualTypeInfo::get() method. As this function is needed to implement Data<T>::getAbstractTypeInfo it means that the complete static version is needed everytime and everywhere we manipulate a Data<>. To be sure the code does not fall back to DefaultTypeInfo... most of the specilization are made visible in DataTypeInfo.h where a lot of data types ""vector, rigid, map, vec, quat"". All these includes are just there to insure that in Sofa no-one will never fallback on the default dehavior. But static type info is kind of ""expert"" feature that is only usefull in few rare use cases. So polluting the complete dependency tree (and compilation unit) for a rarely use case is problematic. . So I tried to reverse all to i",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1552:1032,perform,performance,1032,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1552,1,['perform'],['performance']
Performance,"TODO:; - ~~check removed functions and insure compatibility layer~~; - ~~new creation mechanism of GravityForceField~~; - ~~self, GravityForceField checks if one is already here~~; - ~~have a callback and save the norm : if 0 exit all loops~~; - ~~what happens if no mass for GFF~~; - ~~update dates in messages (v22.12 -> v23.12)~~; - ~~update PR description~~; - test when a node is added. One issue remains in my tests :; - simulation starting without gravity, and then gravity is added; - mass added using python, since no init, the link in GravityForceField to the local mass is no performed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1238134724:587,perform,performed,587,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1238134724,1,['perform'],['performed']
Performance,"TSAN = thread sanitizer. Helpful for debugging race conditions in multithreaded context.; Only available for gcc and clang. https://github.com/google/sanitizers/wiki/ThreadSanitizerCppManual. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4534:47,race condition,race conditions,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4534,1,['race condition'],['race conditions']
Performance,"Tested in PR #1909 in SofaMiscTopology_test the static method BaseSimulationTest::SceneInstance::LoadFromFile seems not to work; ```; m_instance = BaseSimulationTest::SceneInstance::LoadFromFile(filePath);; // Load scene; //m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 0 with a valid scene whereas the method added to load a scene after creating the instance works:. ```; m_instance = BaseSimulationTest::SceneInstance();; // Load scene; m_instance.loadSceneFile(filePath);; // Init scene; m_instance.initScene();. std::cout << ""getChildren().size(): "" << m_instance.root.get()->getChildren().size() << std::endl;; ```; gives 1",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1936:97,Load,LoadFromFile,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1936,7,"['Load', 'load']","['Load', 'LoadFromFile', 'load', 'loadSceneFile']"
Performance,"Testing this with the Visual Studio compiler, on my (getting old) desktop (4 cores, 16GB RAM, Windows) I obtained :. ```; - MSVC/debug: 23:52; - MSVC/debug/pch: 14:50; - MSVC/debug/unity: 15:10; - MSVC/debug/pch+unity: 12:46. - MSVC/release: 34:44; - MSVC/release/pch: 23:51; - MSVC/release/unity: 28:52; - MSVC/release/pch+unity: 23:52; ```. So this gives me a 20 to 50% decrease in build time (:+1:), and I would say that performances obtained either with unity, pch, or both are comparable.; Aside from that, when using the unity build, I get only one error while compiling SofaMeshCollision (for multiply defined symbols)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1964#issuecomment-815604404:424,perform,performances,424,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1964#issuecomment-815604404,1,['perform'],['performances']
Performance,"Thank Hadrien, the fix is fine. The m_primitiveTestCount is used only for statitistics to know how many collision tests are performed.; There should be no other crash if m_primitiveTestCount is = 0.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/961#issuecomment-472364785:124,perform,performed,124,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/961#issuecomment-472364785,1,['perform'],['performed']
Performance,"Thank you a lot for the nice proposals preventing potential hacks like the ones I presented above. I just checked your pull request and I really like its simple usage - I hope it will be merged soon! . @damienmarchal : I am excited to see your solution to 3., if you would like to have further information about my approach, please let me know. To create python scenes, I am using the [scene to python transform script](https://github.com/sofa-framework/sofa/blob/master/applications/plugins/SofaPython/scn2python.py) and with the direct usage your approach works well, i.e.; `applications/plugins/SofaPython/scn2python.py examples/Demos/caduceus.scn -o caduceus2 -p`; generates the python scene `caduceus2.py` and when launching it I can retrieve all the arguments of the command line, i.e. the output of ; `runSofa caduceusPython.scn --argv test test2`; is `['caduceusPython', 'test', 'test2']`. However, by default (i.e. without -p) the scene to python transform script generates a .scn file calling a .py file - a choice made to prevent having to load the python plugin before launching python scenes. For example; `applications/plugins/SofaPython/scn2python.py examples/Demos/caduceus.scn`; outputs the caduceusPython.scn and caduceusPython.py. Now when using ; `runSofa caduceusPython.scn --argv test test2`; and running ; `print sys.argv`; only the filename can be retrieved, i.e. the output is `['caduceusPython']`. 1. Is the usage presented as second approach (i.e. using .scn and .py) still up to date/a recommended approach?; 2. If yes, is it possible to access the argv in the .py file when it is used from the .scn file? Or is it possible to improve the implementation such that it can handle it?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/356#issuecomment-324056656:1051,load,load,1051,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/356#issuecomment-324056656,1,['load'],['load']
Performance,"Thank you for this PR, it highlights a more serious bug when adding elements in TopologySubsetData. A PR to fix the TopologySubsetData is coming, then we will update this PR to adapt UniformMass with the good callbacks. Right now the callback on PointRemoved event proposed in this PR will crash as the TopologySubsetData already has an internal mechanism to update its size. So you perform the deletion twice.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1097837525:383,perform,perform,383,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2853#issuecomment-1097837525,1,['perform'],['perform']
Performance,Thanks @alxbilger !. Why not parallelize the matrix assembly (addKToMatrix)? Especially for a hexahedral forcefield since it can be quite expensive. It would than be very interesting to compare the multithreaded CG solver (thanks to your PR) performence against a multithreaded direct solver such as Pardiso LLT solver.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2177#issuecomment-866812373:242,perform,performence,242,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2177#issuecomment-866812373,1,['perform'],['performence']
Performance,"Thanks for replying, actually it worked, when I used the dll files of binary release of SOFA v23.06, But there was some issue when I load the demo scene of caudeus.scn, Here are the errors which were printed on the console of Unity editor:. ```; SofaContext::OnDestroy stop called.; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:OnDestroy () (at Assets/SofaUnity/Scripts/SofaContext.cs:251); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). SofaContext::OnDestroy stop now.; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:OnDestroy () (at Assets/SofaUnity/Scripts/SofaContext.cs:256); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). KeyNotFoundException: The given key '4' was not present in the dictionary.; System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item (TKey key) (at <eef08f56e2e042f1b3027eca477293d9>:0); SofaUnityAPI.SofaContextAPI.loadScene (System.String filename) (at Assets/SofaUnity/Plugins/SofaUnityAPI/SofaContextAPI.cs:189); SofaUnity.SofaContext.ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:486); SofaUnity.SofaContext.Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext.StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext.Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr, Boolean&). Start: 'VisualEye'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceExcep",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:133,load,load,133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['load'],['load']
Performance,"Thanks for the PR @alxbilger,. Looks good to me. ; More generally I'm very surprised we didn't notice performance drop by have more and more explicit template instantiation. To me this is an indication that either the lto/gto are now very efficient or that our old code without the explicit template instantiation was not optimized by the compiler as we were expecting.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3334#issuecomment-1256718726:102,perform,performance,102,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3334#issuecomment-1256718726,2,"['optimiz', 'perform']","['optimized', 'performance']"
Performance,"Thanks for the feedback,. I totally agree that O(log n) as well as memory/indirection optimization would be nicer but this topic should have its own issue. About the checking...I also like the idea of the Visitor and this is very consistent as we already have existing SceneCheckerVisitor.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/362#issuecomment-323972382:86,optimiz,optimization,86,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/362#issuecomment-323972382,1,['optimiz'],['optimization']
Performance,Thanks for this PR @Ant0nin. We need a bit more info though. Why do you need to forward sceneArgs through all loading functions (deep) that actually do nothing with it? Why can't you use `sofa::helper::ArgumentParser::extra_args()`?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/992#issuecomment-484012823:110,load,loading,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/992#issuecomment-484012823,1,['load'],['loading']
Performance,"Thanks for your inputs @fspadoni and @damienmarchal , and sorry for the late response. There are two commits in this PR (two versions of the fix); the first one fixed completely the problem on mac OS X, but may introduce thread race condition as only the constructor of a static variable is thread safe. Since the **messageTypePrefixes** and **messageTypeColors** static arrays are initialized in the ; **formatMessage** method, two threads can collide there. The second one tries to fix that, but isn't working yet (hence the commit name ""temp"").; In this one, the **DefaultStyleMessageFormatter** singleton instantiation doesn't cause a seg fault on mac os x anymore, but the **messageTypeColors** static array fails to instantiate correctly, causing all console messages to be blue. This may be because **Console::BRIGHT_GREEN**, **Console::BRIGHT_YELLOW**, etc. are all, of course, static objects. Since they are initialized in another .cpp, the order of their constructor calls with respect to the **DefaultStyleMessageFormatter** singleton instantiation cannot be predicted (compiler bound). I'll try to find a solution in two weeks (I'll be away for the next 10 days working hard on my sun tan ☀️)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/642#issuecomment-389782748:228,race condition,race condition,228,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/642#issuecomment-389782748,1,['race condition'],['race condition']
Performance,"That's a very popular library. I agree with this move. I don't understand in your PR how it replaces the need for CImgPlugin. Probably, because I don't know how images loading is managed.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2551#issuecomment-997811207:168,load,loading,168,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2551#issuecomment-997811207,1,['load'],['loading']
Performance,"That's great !. An improvement would be to release the GIL also in the sofa binded functions : when a binding is called, it should release the GIL, do its potentially costly C++ stuff then acquire the GIL back to safely return in the python script.; This way, we release even more the pressure on the GIL and we can do other things in another thread ... even loading another sofa python scene from another C++ thread.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313536191:359,load,loading,359,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313536191,1,['load'],['loading']
Performance,"The (potential) renumbering of the constraints by the ConstraintCorrection was not used in GenericConstraintSolver.; It is (only?) re-ordered when LinearSolverCC is set with ""wire optimization"" and gives a big speed-up when used with the partial_solve of BTDLinearSolver (and not building matrices). This optimization was already in the LCPConstraintSolver and explain (but not totally) the big difference of speed for the scenes with LinearCC/BTD and unbuilt gaussseidel. Numbers from `BeamAdapter/examples/3instruments_collis.scn -g batch -n 5000` , all constraint solvers use unbuilt GS.; ```; (mu=0.1); LCP = [INFO] [BatchGUI] 5000 iterations done in 61.9292 s ( 80.7373 FPS).; GCS before = [INFO] [BatchGUI] 5000 iterations done in 261.396 s ( 19.1281 FPS); GCS after = [INFO] [BatchGUI] 5000 iterations done in 85.083 s ( 58.7661 FPS); ```; ```; (mu=0.0); LCP = [INFO] [BatchGUI] 5000 iterations done in 43.2622 s ( 115.574 FPS).; GCS before = [INFO] [BatchGUI] 5000 iterations done in 230.029 s ( 21.7364 FPS); GCS after = [INFO] [BatchGUI] 5000 iterations done in 68.9986 s ( 72.4652 FPS); ```. As for the simulation itself, the results are not exactly the same (even if visually, looks the same) between LCPCS or GCS; `regression step-by-step, 2000 steps`; ```; (mu=0.1); TOTALERROR: 3.18005; ERRORBYDOF: 0.00310931; ```; ```; (mu=0.0); TOTALERROR: 1.55088; ERRORBYDOF: 0.00154138; ```. But I cannot tell which one of the two (LCPCS or GCS) is the most ""precise"" 🤷. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not gener",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4132:180,optimiz,optimization,180,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4132,2,['optimiz'],['optimization']
Performance,"The AdvancedTimer output is difficult to read when the option -c is activated with runSofa. Moreover it is not possible to use it to make performance graphics from a given simulation. . The idea to solve this problem is to return an output in JSON. The benefits of the JSON output are the following : ; * The output can be get with any language used to define a scene in SOFA; * The output can be used in most languages; * It's easier to create graphics with JSON format. You can find an example output in this file.; [poutre_grid_sofa_timerLog.txt](https://github.com/sofa-framework/sofa/files/1179512/poutre_grid_sofa_timerLog.txt). Any opinion ? We are open to all propositions. If you would like to add or modify something, just tell us.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/348:138,perform,performance,138,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/348,1,['perform'],['performance']
Performance,"The MutationListener in Sofa is used to notify (A GUI for instance) of the SceneGraph's edition (addition / deletion / move of nodes, objects, or slaves); The MutationListener itself does not perform anything, but once inherited, its methods can be overloaded to perform operations on a ListView widget for instance, as does the GrapListenerQListView, in applications/sofa/gui/qt. The current implementation stores a pointer to every registered listeners in every node in the scene graph. Instead, the implementation proposed in this PR registers the listeners in the root node and child nodes forward the notifications to it. Also, the overloads are currently relying on the call super (the child class reimplements the method, then calls its base class implementation) This approach is [known to be error prone](https://en.wikipedia.org/wiki/Call_super) and can be reimplemented using delegates instead. Finally, this PR also adds extra delegates in the Nodes listeners notifications system and in the MutationListener, called *AFTER* the graph's edition. those are used in SofaQtQuick to be notified that the graph has indeed been updated. . Here are 2 quick UML diagrams showing the 2 architecture's differences. This one is the current implementation in sofa:; ![code_smell](https://user-images.githubusercontent.com/13734391/52288894-5245f000-296d-11e9-83b6-12f6ce1385f9.png). And this one is what this PR does:; ![code_clean](https://user-images.githubusercontent.com/13734391/52288978-730e4580-296d-11e9-9057-451922e971c8.png). Also, if someone could tell me what the master / slave relationship between BaseObjects are, I'd be curious to know if it is still in use in SOFA. It doesn't seem to be used in Listeners.. maybe added for Compliant / Flexible?. __This PR could potentially be breaking for plugins & projects implementing their own MutationListeners__. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] b",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/917:192,perform,perform,192,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/917,2,['perform'],['perform']
Performance,The PR #1129 removed the thread specific declaration for the ExecParams. Is there a reason to restore the ExecParams declaration to be thread specific ?. The goal of the PR #1129 was to remove the check execParams()->checkValidStorage() in the Node::executeVisitor function because was causing a drop of performance in multithreaded execution.; In multithreaded execution the condition execParams()->checkValidStorage() fails when the function Node::executeVisitor is executed in a different thread than the one who first instantiated the visitor. This is not a problem but a confirmation that the execution has been parallelized.; So this check doesn't seem to be useful. Further consideration is that there is no need to store the ExecParams in the thread specific memory because is often passed as a pointer to function call as argument.; A function executed in a thread A can receive as argument the thread specific ExecParams of the thread B and it is allowed to use it. But the goal of using thread local storage is that each thread uses its own local ExecParams. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1147:304,perform,performance,304,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1147,1,['perform'],['performance']
Performance,"The PR #2988 opens this discussion. ## Today; - gravity is defined though a data in the Nodes (by default `gravity=""0 9.81 0""`); - this gravity is propagated down from the root node to the child nodes; - gravity computation is performed by the mass (if any) in the node; - nowhere appears the gravity as a ForceField (mechanical load) within the node. #### Typical scene; ``` xml; <Node name=""root"" gravity=""0 -9.81 0"" dt=""0.01"">; <DefaultAnimationLoop name=""animationLoop"" solveVelocityConstraintFirst=""true"" . <Node name=""Object1"">; <EulerImplicitSolver name=""ODE0"" rayleighMass=""0.1"" rayleighStiffness=""0.1"" />; <SparseLDLSolver template=""CompressedRowSparseMatrixMat3x3d"" name=""Linear0"" />; <TetrahedronSetTopologyContainer name=""Torus0Topo"" position=""@/Mesh/stuffing.outputPoints"" tetrahedra=""@/Mesh/stuffing.outputTetrahedra""/>; <MechanicalObject name=""Torus0State"" template=""Vec3d"" velocity=""@/Mesh/TorusVVel.output_position"" rest_position=""@/Mesh/stuffing.outputPoints"" position=""@Torus0VXForm.output_position"" />; <TetrahedronSetGeometryAlgorithms name=""Torus0Algo"" />; <MeshMatrixMass name=""MMass"" massDensity=""2.0"" />; <TetrahedronFEMForceField name=""FEM"" youngModulus=""50"" poissonRatio=""0.45"" />; </Node>. <Node name=""Object2"" >; <EulerImplicitSolver />; <CGLinearSolver iterations=""200"" tolerance=""1e-09"" threshold=""1e-09""/>; <MechanicalObject template=""Rigid3d"" name=""myParticle"" position=""0 0 0 0 0 0 1"" showObject=""1"" />; <UniformMass name=""UMass"" totalMass=""1"" />; <ConstantForceField totalForce=""1 0 0 0 0 0"" />; </Node>; </Node>; ```. #### Advantages; - easy to write a scene with a global gravity; - light nodes (no additional ForceField appearing). #### Drawbacks; - prone to error for beginners not seeing that a gravity (external force) is acting. ## Proposal; - gravity can still be defined though a data in the Nodes (but default value changed `gravity=""0 0 0""`); - using this data gravity generates a warning (not the default/advised way of designing a scene); - if this grav",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3149:227,perform,performed,227,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3149,2,"['load', 'perform']","['load', 'performed']"
Performance,"The ReadScene_test not passing is explicitly said so in the PR description, this is a new test showing an existing wrong behavior in Sofa (i.e. not sending an error message when trying to load an invalid faile). [ci-build][with-scene-tests] will say if my last commit fixed the old scene failing",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/918#issuecomment-465728648:188,load,load,188,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/918#issuecomment-465728648,1,['load'],['load']
Performance,"The SceneCreator is now based on the plugin manager to load its dependency. ; It seems that when compiling in debug the plugin names are changed. In this PR I added to the PluginManager a way to search for ""debugging"" names when Sofa is compiled in debug. . This should fix the failling tests on options_debug on master reported in #463 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/465:55,load,load,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/465,1,['load'],['load']
Performance,"The callback on '''Data<string> texturename ''' was calling init() method. This can produce bugs as the init() method should be called only once to setup callbacks or init mesh. Move this callback creation in init method and use loadTextures(...) instead of init() method. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2298:229,load,loadTextures,229,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2298,1,['load'],['loadTextures']
Performance,"The case arises mostly because of running runSofa from a build directory but you set SOFA_ROOT. It will then tried to load plugins from the install afterwards, etc..., leading to stuff like:. ```; [WARNING] [ObjectFactory] Default template for class DynamicSparseGridGeometryAlgorithms already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec2d>; [WARNING] [ObjectFactory] Class already registered: DynamicSparseGridGeometryAlgorithms<Vec3d>; ....; ```. or with a cryptic error message if you try to use the PluginManager from the GUI:; ```; [INFO] [PluginManager] Plugin not found in loaded plugins: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; [ERROR] [SofaPluginManager] plugin should be loaded: ..../bin/RelWithDebInfo/SofaNonUniformFem.dll; ```. Now, if you try to load twice the plugins (from differents paths then), it will print:; (one dll is in `build/bin/Release/` and the other one directly in `build/`; ```; [WARNING] [PluginManager] This plugin SofaNonUniformFem has been loaded from a different path, it will certainly lead to bugs or crashes...; You tried to load: ....build/bin/Release/SofaNonUniformFem.dll; Already loaded: ....\build\SofaNonUniformFem.dll; [WARNING] [PluginManager] Plugin SofaNonUniformFem is already loaded from a different path, check you configuration.; ```; The ""double information"" comes from the fact that in the end we consider the plugin as loaded ; the code afterwards will try to load the plugin nevertheless (hence having to detect twice the duplication); In the GUI code for example: https://github.com/sofa-framework/sofa/blob/71691309251177322967f53bc7a024e89c19bcbc/modules/SofaGuiQt/src/sofa/gui/qt/SofaPluginManager.cpp#L120. Obviously it is really not advised to continue to use Sofa if this case occurs but at least the user will know what is going on.; ______________________________________________________. By submitting this pull request, ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:118,load,load,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,3,['load'],"['load', 'loaded']"
Performance,"The cmake part of our build process is very slow and is getting slower and slower the more we add plugins/modules and packages.; ; I noticed that commands like include or find_package(XXXXX) imply the search, the loading and the execution of the requested package XXXX each time. . This is very problematic as this scale in an horrible (non linear) way. . So I tried a quick and dirty fix based on inclusion gard, 'à la #ifdef MYFILE_H'. I first checked if the file are really loaded multiple times (and this was the case) and implemented a quick test to stop the loading. . The fix accelerates a lot the cmake time on my machine reducing the generation from 1min20 down to 15 sec. So I'm curious to see if such solution is reliable enough to be used (I consider that if this is not the default design of cmake package there must be a rational behind) and what are the possible drawback. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1464:213,load,loading,213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1464,3,['load'],"['loaded', 'loading']"
Performance,"The collision model used in LMConstraint are only compiled if the SofaDistanceGrid plugin is loaded while they shouldn't. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1819:93,load,loaded,93,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1819,1,['load'],['loaded']
Performance,"The compile definition SOFA_LIBSUFFIX is missing when compiling in Debug mode. Consequently, the loading of the SOFA plugins failed when executing ""runSofa_d"" or ""runSofa2_d"", because it tries to load the libs without considering the ""_d"" suffix in the filenames. . Here is a quick patch from me to fix the issue. But maybe it exists a better solution. Note: My CMake version is 3.14.5. ```diff; From 9ea7a808e24ad1311427e4907e179e88cf7c6acf Mon Sep 17 00:00:00 2001; From: Antonin Bernardin <antonin.bernardin@inria.fr>; Date: Fri, 20 Dec 2019 18:36:29 +0100; Subject: [PATCH] Quick fix about missing compile definition SOFA_LIBSUFFIX. ---; SofaKernel/modules/SofaHelper/CMakeLists.txt | 5 ++++-; 1 file changed, 4 insertions(+), 1 deletion(-). diff --git a/SofaKernel/modules/SofaHelper/CMakeLists.txt b/SofaKernel/modules/SofaHelper/CMakeLists.txt; index b0fd0ce828..794b0edb89 100644; --- a/SofaKernel/modules/SofaHelper/CMakeLists.txt; +++ b/SofaKernel/modules/SofaHelper/CMakeLists.txt; @@ -334,7 +334,10 @@ endif(); # since this is configuration specific it is a bit more convenient to put it as a debug compile definition for; # PluginManager.cpp, at the expense of being much less visible compare to having it in the generated; # SofaFramework/config.h; -set_property(SOURCE system/PluginManager.cpp APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG ""SOFA_LIBSUFFIX=_d"" ); +#set_property(SOURCE system/PluginManager.cpp APPEND PROPERTY COMPILE_DEFINITIONS_DEBUG ""SOFA_LIBSUFFIX=_d"" ); +if(${CMAKE_BUILD_TYPE} STREQUAL ""Debug""); + add_compile_definitions(SOFA_LIBSUFFIX=_d); +endif(); set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_FLAGS ""-DSOFA_BUILD_HELPER""); set_target_properties(${PROJECT_NAME} PROPERTIES DEBUG_POSTFIX ""_d""); set_target_properties(${PROJECT_NAME} PROPERTIES VERSION ""${SOFAFRAMEWORK_VERSION}""); -- ; 2.20.1; ```; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1235:97,load,loading,97,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1235,2,['load'],"['load', 'loading']"
Performance,"The computation of the compliance matrices is expensive. When we have multiple objects in our scene it can be interesting to compute these matrices concurrently. ; I'm not an expert in multithreading... so any feedback would be much appreciated :) ; Here's the speed up I get (percentage wrt the whole simulation):. With two identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066864-b609f580-76bb-11eb-89e7-b76e3932fe0d.png); ![image](https://user-images.githubusercontent.com/12150715/109066298-deddbb00-76ba-11eb-935a-74966977f5a2.png) with multithreading. With four identical FEM models:; ![image](https://user-images.githubusercontent.com/12150715/109066733-822ed000-76bb-11eb-9f6a-d3376ecfeeef.png); ![image](https://user-images.githubusercontent.com/12150715/109066480-1f3d3900-76bb-11eb-8128-b2a3270f95a4.png) with multithreading. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1862:148,concurren,concurrently,148,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862,1,['concurren'],['concurrently']
Performance,"The design of Intersection/Intersector is really ""special"" in the sense that:; - Intersection class is the BaseObject in the graph doing stuff; - Intersector is container of functions for canIntersect/intersect method between different primitives. And it was made such as one could add more intersect() method for new primitives for an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Revie",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4583:752,load,load-time,752,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583,2,['load'],"['load-time', 'loaded']"
Performance,"The difference lies in the fact that the `UniformLagrangianConstraint` is applied to all the model points. This assumption is important because thank's to this, it is able to use a block optimization when the data `iterative` is set to false. Here, it wouldn't be possible because we don't have the guaranty that the points ids will be contiguous. . As for the other specialization, what I did was to replicate the two specialization already available for the `BilateralLagrangianConstraint`. Actually I made sure to factorize as much as possible so that it would be easier for new specialization to pbe implemented. I could add them, but given that they didn't exist for the `BilateralLagrangianConstraint`, I don't know if they are really useful for anyone.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4646#issuecomment-2082914275:187,optimiz,optimization,187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4646#issuecomment-2082914275,1,['optimiz'],['optimization']
Performance,"The file informations are set by the loader/binding at runtime so this cover dynamically created object. ; Eg when loading the following scene: ; ```; def myFunction(node): ; rootNode.createObject(""MechanicalObject"") # The instanciation file:loc: for MechanicalObject is here . def myFunction(node): ; rootNode.createObject(""MechanicalObject"") # The instanciation file:loc: is here. . def createScene():; rootNode.createChild(""Object"") # The instanciation file:loc is here. ; myFunction(rootNode) ; ```; So in the gui, this will open the editor to the corresponding lines which is very conveniant, especially if like in STLIB you have libraries of prefab. . As each Node/Object in the graph benefit for having such information it make sense to put that in Base but I welcome any future PR improving the situation :) . To see how we use that in #1013 and in runSofa2...have a look at: https://www.youtube.com/watch?v=zzOY-Lt0vgM",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1012#issuecomment-488113011:37,load,loader,37,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1012#issuecomment-488113011,2,['load'],"['loader', 'loading']"
Performance,The following scenes must be fixed because they show warnings or error messages. ```; [INFO] [PluginFinder] Found 6 files with advice:; examples\Benchmark\Performance\MatrixAssembly\MatrixAssembly_direct.scn; examples\Components\linearsolver\preconditioner\FEMBAR_PCG_AsyncSparseLDLSolver.scn; examples\Components\loader\GIDMeshLoader.scn; examples\Components\solver\EulerExplicitSolver\EulerExplicitSolver.scn; examples\Components\solver\EulerExplicitSolver\EulerSymplecticSolver.scn; examples\Components\solver\NewmarkImplicitSolver.scn. [INFO] [PluginFinder] Found 9 files with deprecated:; examples\Components\interactionforcefield\BoxStiffSpringForceField.scn; examples\Components\linearsolver\FEMBAR_AsyncSparseLDLSolver.scn; examples\Components\misc\sleep\test_sleep.scn; examples\Components\misc\sleep\test_sleep2.scn; examples\Components\misc\sleep\test_sleep3.scn; examples\Components\visualmodel\OglLabel.scn; examples\Tutorials\Mappings\TutorialMappingOctopusArticulated.scn; examples\Tutorials\StepByStep\Visual\5_Visual.scn; examples\Tutorials\StepByStep\Visual\6_Visual.scn. [INFO] [PluginFinder] Found 132 files with warning:; examples\Benchmark\Analysis\constantMomentum.scn; examples\Benchmark\Performance\benchmark_cubes.scn; examples\Benchmark\Performance\BuildLCP\BuiltConstraintCorrection.scn; examples\Benchmark\Performance\BuildLCP\NonBuiltConstraintCorrection.scn; examples\Benchmark\TopologicalChanges\AffineMovementConstraint__RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\LinearMovementConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectDirectionConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToLineConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\Topologi,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3352:155,Perform,Performance,155,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3352,2,"['Perform', 'load']","['Performance', 'loader']"
Performance,"The function pluginIsLoaded is not behaving as it name suggest and does not detect plugin that have not been loaded using an absolute file path. . See: ; https://github.com/SofaDefrost/plugin.SofaPython3.deprecated/issues/137. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1615:109,load,loaded,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1615,1,['load'],['loaded']
Performance,The functions ParallelFor and ParallalFor2d make the for loop parallelization easier to write.; They internally used the task scheduler and automatically perform the the tasks partitioning and creation. ParallelFor is used to parallelize for loops iteration on one index.; ParallelFor2d is used to parallelize for loops iteration on two indices. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/902:154,perform,perform,154,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/902,1,['perform'],['perform']
Performance,"The idea is to provide tools to write multithreaded code more efficiently. The functions introduced in this pull request allow to apply a function to a range in parallel.; Unit tests are provided.; The newly added functions are used as example in two places:; - GenericConstraintSolver: the code is unique for both sequential and parallel execution; - ParallelHexahedronFEMForceField: no ambiguity: the code is only for parallel execution. But nothing prevent to have a code supporting both sequential and parallel execution. But the component is not totally ready for a merge with HexahedronFEMForceField. Note that it avoids a lot of boilerplate code, hence reducing the complexity of the file. I think this will allow us to write more multithreaded code. In the back, the parallel loop uses a task scheduler and divides the number of elements in `n` ranges, where `n` corresponds to the number of threads in the task scheduler. This is to execute exactly `n` tasks, instead of `m`, if `m` is the number of elements. It avoids the overhead of creating a task for each element. It is more efficient when the number of elements is large. Benchmarks are yet to perform. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3548:1160,perform,perform,1160,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3548,1,['perform'],['perform']
Performance,"The idea is to trigger a callback after every plugin loading to permit SofaPython and SofaPython3 to check if any site-packages directory can be added to sys.path. No more manual PYTHONPATH setting should be needed with this change. To be backported in v20.12 to ease SofaPython3 usage. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1777:53,load,loading,53,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1777,1,['load'],['loading']
Performance,"The issue with #1913 was that Sofa.GL was added to plugin_list.conf.default ; This PR aims to clarify things between modules and plugins.; `sofa_add_plugin` will now be the ONLY macro that adds targets to plugin_list.conf.default, which totally makes sense. Also, for the record:; > Plugin = Something that CAN be loaded by the PluginManager, through a RequiredPlugin for example. The entry point of a Plugin is initExternalModule (and that name could be better).; > ; > Module = Something that CANNOT be loaded by the PluginManager. Most of the time, modules are not loaded manually, they are loaded implicitly during dependency resolution. The entry point of a Module is init (and that name could also be better).; > ; > From a CMake point of view, both Plugin and Module can be standalone packages or simple targets added to a bigger package. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1941:314,load,loaded,314,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1941,4,['load'],['loaded']
Performance,"The line defining node gathering all the plugins was immediately closed (slash at the end); consequently, the second `</Node>` was closing the root node itself. (so the loaded scene was containing nothing). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2831:169,load,loaded,169,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2831,1,['load'],['loaded']
Performance,"The natural order is translation/rotation/scaling. . That being said, specifying such transformations inside Components is a bad idea as this complicates and duplicates the code. They really should be performed using Engines or Mappings.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/259#issuecomment-303137405:201,perform,performed,201,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/259#issuecomment-303137405,1,['perform'],['performed']
Performance,The new SceneCreator implementation requires to load plugins to work. ; To do that it calls the PluginManager...the problem is that in debug...the plugins have are not found. https://ci.inria.fr/sofa-ci/job/ubuntu_clang-3.8_options-debug/436/testReport/. Is this because of the _d suffix ? . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/463:48,load,load,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/463,1,['load'],['load']
Performance,"The new crash you have is in the `solve` function, trying to access an element of an empty vector (either the solution vector, or the right-hand side vector). The solve function is [here](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/SparseLDLSolver.inl#L74), called from [here](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Iterative/src/sofa/component/linearsolver/iterative/MatrixLinearSolver.inl#L199). . The solveSystem function works in 2 steps: 1) factorize the matrix into LDL, 2) solve the system based on the factorization. As far as I can see, the solving process runs even if the factorization fails. It's probably why you have the crash. A modification to do could be to catch the error in the solveSystem function and not perform the solving. In the meantime, as a quick fix, you can try to set `invertData->n = n;` before leaving the function:. ```cpp; int n = M.colSize();; invertData->n = n;; ```. `invertData->n` would be `=0`, then the [solve function](https://github.com/sofa-framework/sofa/blob/41a88c16b6e5d9660a306b8faa7a12d79c0d0a57/Sofa/Component/LinearSolver/Direct/src/sofa/component/linearsolver/direct/SparseLDLSolverImpl.h#L160) may run safely.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327722611:916,perform,perform,916,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3499#issuecomment-1327722611,1,['perform'],['perform']
Performance,"The one which use a decorator to specify the return types.. The look&feel for the client code:; ```python; from TypedMagic import *. @sofaengine( ret=(""customout"", ""s""), inputs={""a"" : ""i"", ""b"" : ""i""} ) ; def typedupdate(a, b, c): ; """"""This is so cute to have a single point documentation in our code""""""; print(""MY UPDATE:"" + str(a)) ; return ""Yolo"" + str(a + b + c); ; def createScene(rootNode):; rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename='mesh/liver.vtk'); TypedMagicEngine(rootNode, typedupdate, a=1.0, b=2.0, c=3.0); ```; EDIT: the ""customout"" will be the name of the output field. With more or less this in TypedMagic; ```python. class TypedMagicEngine(Sofa.PythonScriptDataEngine):; def __init__(self, node, sofaengine, **kwargs):; fct = sofaengine.function; retinfo = sofaengine.retinfo; argsinfo = sofaengine.argsinfo; self.addNewData(""Description"", ""Properties"", """", ""s"", inspect.getdoc(fct)) . argspec = inspect.getargspec(fct); for arg in argspec.args:; argval = None; ### Get the name & default value; if arg in kwargs:; argval = kwargs[arg] ; elif argspec.defaults != None and arg in argspec.defaults:; argval = argspec.defaults[arg] . ### Get the type ; datatype = ""f""; if arg in argsinfo:; datatype = argsinfo[arg]; ; if argval != None: ; self.addNewInput(arg, datatype=datatype, value=argval) ; else:; Sofa.msg_error(""Unable to create an input for parameter: ""+str(arg)) ; ; if retinfo != None:; self.addNewOutput(retinfo[0], datatype=retinfo[1]) ; ; self.retinfo = retinfo[0]; self.name = fct.__name__ ; self.params = argspec.args; self.fct=fct; ; def update(self):; calld = []; for param in self.params: ; calld.append(self.findData(param).value) ; ; self.findData(self.retinfo).value = self.fct(*calld) . ; class sofaengine(object):; def __init__(self, ret=(""output"",None), inputs=[]): ; self.retinfo = ret; self.argsinfo = inputs; ; def __call__(self, fn):; self.function = fn; return self ; ```. Of course this is just a POC (lot of corner cases are not handle",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380470372:442,load,loader,442,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/629#issuecomment-380470372,1,['load'],['loader']
Performance,"The only big GIL locking part i can see is the SML scene loading which mix file loading with costly parsing in python and sofa component creation and initialization in C++. In a future PR it will be very interesting to improve this, using python only as a glue and totally avoiding heavy processes.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313640015:57,load,loading,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/326#issuecomment-313640015,2,['load'],['loading']
Performance,The option **SOFA_NO_VMULTIOP** in ODESolver (aka integration schemes) makes the reading (i.e. the understanding for new users) and the dev cumbersome. I know the VMULTIOP allows for optimized vector operations with the MultiOp.; Would there now be a reason to just keep one upon the other ?; Any other thought? . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1263:183,optimiz,optimized,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1263,1,['optimiz'],['optimized']
Performance,"The position and edges vectors were not cleared if load() is called multiple times. [ci-depends-on https://github.com/sofa-framework/SofaPython3/pull/337]. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3702:51,load,load,51,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3702,1,['load'],['load']
Performance,"The precomputed compliance matrix with `PrecomputedConstraintCorrection` component has a chance to be corrupted at each recomputation. It depends on the collision model used. ### How to reproduce ; I made a small example scene : [BugShowcase.zip](https://github.com/sofa-framework/sofa/files/5961370/PostForum.zip). - Sofa version : 20.12. - Plugins : SofaPython3. This scene uses command line arguments and SofaPython3, so I added ; ```cpp; PythonEnvironment::setArguments(SetDirectory::GetFileName(filename), arguments);; ```; in the `try{}` block of in `SceneLoaderPY3::loadSceneWithArguments` in SceneLoaderPY3.cpp (lines : 90-100). ### The solution ; I do not know, but changing the 3d model can help. Also, one can try to recompute the compliance matrix until it ""works"" and save it and reload it (with `recompute=False`).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1809:573,load,loadSceneWithArguments,573,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1809,1,['load'],['loadSceneWithArguments']
Performance,"The prettyfied output of the unit test:. ```; [; {; ""className"": ""DefaultAnimationLoop"",; ""creator"": {; """": {; ""class"": {; ""className"": ""DefaultAnimationLoop"",; ""namespaceName"": ""sofa::simulation"",; ""shortName"": ""defaultAnimationLoop"",; ""templateName"": """",; ""typeName"": ""DefaultAnimationLoop""; },; ""object"": {; ""data"": [; {; ""group"": """",; ""help"": ""object name"",; ""name"": ""name""; },; {; ""group"": """",; ""help"": ""if true, emits extra messages at runtime."",; ""name"": ""printLog""; },; {; ""group"": """",; ""help"": ""list of the subsets the objet belongs to"",; ""name"": ""tags""; },; {; ""group"": """",; ""help"": ""this object bounding box"",; ""name"": ""bbox""; },; {; ""group"": """",; ""help"": ""The state of the component among (Dirty, Valid, Undefined, Loading, Invalid)."",; ""name"": ""componentState""; },; {; ""group"": """",; ""help"": ""if true, handle the events, otherwise ignore the events"",; ""name"": ""listening""; },; {; ""group"": """",; ""help"": ""If true, compute the global bounding box of the scene at each time step. Used mostly for rendering."",; ""name"": ""computeBoundingBox""; },; {; ""group"": """",; ""help"": ""If true, solves all the ODEs in parallel"",; ""name"": ""parallelODESolving""; }; ],; ""link"": [; {; ""help"": ""Graph Node containing this object (or BaseContext::getDefault() if no graph is used)"",; ""name"": ""context""; },; {; ""help"": ""Sub-objects used internally by this object"",; ""name"": ""slaves""; },; {; ""help"": ""nullptr for regular objects, or master object for which this object is one sub-objects"",; ""name"": ""master""; },; {; ""help"": ""Link to the scene's node that will be processed by the loop"",; ""name"": ""targetNode""; }; ]; },; ""target"": """"; }; },; ""description"": ""foo\n""; }; ]; ```. and the templated object:. ```; [; {; ""className"": ""DummyComponent"",; ""creator"": {; ""Vec3f"": {; ""class"": {; ""categories"": [; ""_Miscellaneous""; ],; ""className"": ""DummyComponent"",; ""namespaceName"": ""sofa"",; ""parents"": [; ""BaseObject""; ],; ""shortName"": ""dummyComponent"",; ""templateName"": ""Vec3f"",; ""typeName"": ""DummyComponent\u003CStdVectorType",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4775:727,Load,Loading,727,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4775,1,['Load'],['Loading']
Performance,"The problem with the approach to have a name helper in each Node is that the Node must exist before using it. And it's not the case in the XML loader. A name is required before the object creation, and no Node is available at that time. Therefore, I used a single name helper inside the XML loading for all the components. In this case, the counter suffix does not depend on the Node. A problem with this approach (other than it's not consistent), Nodes' counters are not updated...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028170905:143,load,loader,143,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2631#issuecomment-1028170905,2,['load'],"['loader', 'loading']"
Performance,"The removed line prevents referencing this plugin in another, externally built SOFA plugin.; (doing a `find_package(SofaPython)` from the CMakeLists.txt of another plugin, built as a standalone project did not work). I don't know the side-effect of simply removing this line, but I also don't see in which case this could (or should) work anyway: there is no reason to create a target during the import of a package. the targets are created at install, and loaded during the package import, not created, to my understanding. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/888:457,load,loaded,457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/888,1,['load'],['loaded']
Performance,"The scene graph view is not updated to reflect the content of the scene changes. ; This is because a mecanism was implemented to not update the view at each simulation step to maximise performance. . This may be useful when max performance is needed but this lead to an inconsistant display. . In this PR I try to fix the situation by allowing three states:; - lock = true => changes in the scene graph are not reflected into the model but the model is flagged as dirty ; - lock = false => changes in the scene graph are imediately reflected into the model; - dirty => true => the model is not anymore synchronized with the sofa scene graph; - dirty => false => the model is showing the content of the scene graph. when going from lock=true to lock=false the model is updated if it was dirty. . To let user to control if they want the graph to be updated we add an icon to lock/unlock the model state. If the model is dirtyfied; a the icon is reflecting the change (with an highly professional icon free of copyright ;)) . Fixes #2920 . The PR also contains few fixes for the modeller (that is still broken anyway). . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3026:185,perform,performance,185,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3026,2,['perform'],['performance']
Performance,"The scene is generated successfully the first time with the the OglSceneFrame component correctly loaded and without warnings.; But, with or without any parameters specified in the component, I have been unable for the last few days to reload the scene. A segfault error is appearing.; I tried another scene containing this component and the result is the same.; I confirm that without this component, both scenes properly reload (using CTRL+R). Thanks in advance for resolving this issue!",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/462:98,load,loaded,98,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/462,1,['load'],['loaded']
Performance,The scene loader should warn the user when loading a python scene (py/pyscn) without SofaPython3 plugin loaded beforehand,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2366:10,load,loader,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2366,3,['load'],"['loaded', 'loader', 'loading']"
Performance,"The screenshots on the repo look mad 🤩 (even asm views of statement 😶‍🌫️); I am especially interested of the multi-threading part, as the profiler of MSVC (and the valgrind/callgrind on linux) does not really handle it well. - ~~Do you need to compile with debug info?~~; - It is tracing so obviously there will be overhead, but can you say how much is the performance hit (if any) ? (msvc's is almost as fast but requires RelWithDebugInfo and callgrind is slow like hell). EDIT: tried myself, works in Release mode as well 😎👍",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4182#issuecomment-1726711676:109,multi-thread,multi-threading,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4182#issuecomment-1726711676,2,"['multi-thread', 'perform']","['multi-threading', 'performance']"
Performance,"The static variable is constructed as soon as the plugin is loaded. This could be a problem if the plugin initialization failed (SofaCUDA). This PR remove the variable for a static function. The code is called only when used. Note that this PR is temporary, waiting for https://github.com/sofa-framework/sofa/pull/4852 where this variable won't be necessary. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4883:60,load,loaded,60,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4883,1,['load'],['loaded']
Performance,"The tendency would be to alleviate Data, but one important behavior is missing. Do you have suggestions on how to perform a listener/observer mechanism on Data w/o adding extra cost?; The idea is to be able to call a callback as soon as a Data is modified. The main usage is the gui, to be able to update some stuff w/o having to check for modifications of tons of Data at regular intervals.; This has to be done only for a few specific Data, and should not add extra cost on the 99.99% regular use cases. The easiest way to implement such a thing would be to add a list of listeners to every Data.; But it means storing extra stuff in each Data, and checking if listeners are present at each modification of the Data.; Do you see a less intrusive way to implement such mechanism?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/61:114,perform,perform,114,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/61,1,['perform'],['perform']
Performance,"The use of those two step where not logical because:. 1. It only acted either on object inherited from `BaseConstraintSet` (in `buildConstraintMatrix`); 2. It was using part of the mechanical state code dedicated to Lagrangian based constraints (in `resetConstraint`). Tested the diff with ` AttachConstraint.scn`: nearly no performance change but still working. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4314:325,perform,performance,325,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4314,1,['perform'],['performance']
Performance,"Then I will change the CMakefiles in SofaKernel to remove useless dependencies.; Note that the CImgPlugin does not have a hard dependency on libpng (and zlib). If it does not find `libpng`/`zlib`, it will just not be able to read png files. So even if CImgPlugin is inside SofaKernel, `libpng `and `zlib ` wont be necessary.; (for now, CImgPlugin is searching for `libpng `for PNG, `libjpeg `for JPEG, `libtiff `for TIFF, and can load BMP files without any deps. It would be possible to read other kind of files with imagemagick but I dont consider it necessary)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/51#issuecomment-281641344:430,load,load,430,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/51#issuecomment-281641344,1,['load'],['load']
Performance,"There is a patch in the daccord repository on forge. . Here are the commit messages (which contains possible interaction with other sofa part):. ```; [FIX]: Allow sofa to save in xml & pyscn the scene. This may break some scene. Once stabilized this may go to the main Sofa. Several issues needed to be adresse to make this system work. first (to try to minimize the amount of un-needed saved informations making the file unreadable) ):; - all the Data<> are now non persistent by default.; - a Data<> become persistent if:; * it is loaded from a file or from a python script.; * it is modified in the GUI. second (hacky stuff on top of old hack stuff):; during the parsing of xml some component ""converts"" XML attributes to other (and possibility none) dataField). As only the dataField can be saved...these attributes are ""lost"". ; The solution was to stop doing with a minimal number of changes the Sofa behavior. . third (quirck stuffs on pile of quirck stuffs):; some important XML attributes are interpreted on the fly and have very specific meaning but there is no associated data field. The solution was to add the corresponding datafield to allow them to be saved.; This is the case for ""src"", ""template"", ""name"", ""type"" .... Given the amount of changed on base classes logics...some scene may have problem to load or save. Please tell if this is the case.; ```. The case that probably could cause some problem is the replacement of the 'src', 'template' with real data field.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/41#issuecomment-254789868:533,load,loaded,533,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/41#issuecomment-254789868,2,['load'],"['load', 'loaded']"
Performance,"There is severe performance issues on MacOS reported by users (@ChristianDuriez), the framerate is very slow. When we uncheck the visual model rendering (OglModel) the rendering goes much higher. . @fredroy and @bcarrez investigated the issue, the problem seems to be related to the use of GL_DOUBLE when passing data to opengl. . After some additional tests the issue also exists on Linux but is hardly noticeable on small mesh (like Caduceus) because the computation cost is dominated by simulation. But on a pure rendering test with tenth of Armadillo mesh (10*75000 triangles) there is undoubtly a performance drop. . This should be fixed before 19.06; ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1070:16,perform,performance,16,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1070,2,['perform'],['performance']
Performance,"These references were not removed in; - #3960 . There should be errors like; `CMake Error: File applications/plugins/Flexible/ExternalProjectConfig.cmake.in does not exist.` occuring. 🤐. Not sure why the CI did not detect this, maybe because of CMake caches not cleaned or something like that. EDIT: seems it depend on some factors, I get ""only"" warning on other configuration; `applications/plugins/Compliant does not exist and will be ignored.`; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3980:251,cache,caches,251,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3980,1,['cache'],['caches']
Performance,"Thinking about it again, Intel(R) UHD Graphics is not a cuda capable device, so it will not be used for computation (rendering maybe?). What's the content of DEVICE_ID and DEVICE_NAME in the log message `CUDA: Using device DEVICE_ID : DEVICE_NAME`?; What do you use to measure the performances?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4423#issuecomment-1884754342:281,perform,performances,281,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4423#issuecomment-1884754342,1,['perform'],['performances']
Performance,"This PR adds a base test for the MeshSTLLoader component, based on similar tests for the OBJ and VTK loaders. It loads and checks the composition of the 3 .stl meshes available in share/meshes. Fix #2899; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2999:101,load,loaders,101,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2999,2,['load'],"['loaders', 'loads']"
Performance,"This PR adds a callback in OglModel, to update the current visual (triggering a call to `initVisual()`), whenever the `m_positions` field is changed dynamically. The first interest of this PR is to add the possibility to change dynamically the underlying mesh of the OglModel (typically with a controller), and see the corresponding changes.; The context I'm using this feature is in a scene where I have several mesh files representing the same mesh moving along time. Loading these meshes sequentially along time, using a python controller, is equivalent to impose a displacement to the underlying mesh during the simulation. But visualising this movement requires this additional callback.; Unfortunately I can't share the data I'm referring to, and I don't have an example as striking at my disposal. There are two questions I'd like to discuss:; - Is this callback likely to cause some trouble in existing scenes ?; - Is this behaviour generally desirable ?. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2925:470,Load,Loading,470,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2925,1,['Load'],['Loading']
Performance,"This PR adds the ability to autoload plugins, i.e without the need to add ""RequiredPlugin"" in each scene file.; This is especially useful for ""essential"" plugins such as SofaPython.; For now, only SofaPython is marked as ""Autoloadable"". An other future PR will activate CImgPlugin to add image loading (and remove ImagePNG/ImageBMP from SofaKernel). ""Main"" programs just needs to add the line : ; `sofa::helper::system::PluginManager::getInstance().autoloadPlugins();`. Important Changes:; * autoload API in Plugin ""interface""; * remove hard loading of SofaPython in runSofa; * add a new commandline in runSofa to disable autoloading of plugins (enable by default); * add a test; * (not really related to the PR but could be useful) add an helper function to check if a file is a symbolic link. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/253:294,load,loading,294,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/253,2,['load'],['loading']
Performance,"This PR adds the cmake option ""NINJA_BUILD_POOL_FLEXIBLE"" which limits the number of CPU cores used to build the Flexible target (default value: 1). Can be easily replicated to other projects as needed. ; This is only effective when using Ninja.; This will make possible to optimize the number of build threads without hitting the RAM limit on CI, but also on workstations.; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old (or has fast-merge label).; - [ ] reports important changes in Changelog. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/254:274,optimiz,optimize,274,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/254,1,['optimiz'],['optimize']
Performance,"This PR aims to handle in a more ""contained"" way the components implemented in different plugins to avoid having everything mixed into the ObjectFactory. . The PR is composed of two aspects. 1) **Registering components by ""plugin.classname"" instead of ""classname"" in the ObjectFactory**. The factory currently access component by their classname only causing collision when two component have the same name/template. To avoid this, the PR add the plugin name as a prefix for the Factory'key. As an exemple, a component created with *<OglModel>* in the past is now referenced as *<SofaOpenglVisual.OglModel>*. Backward compatbility is possible by adding into the factory registration an alias mapping between ; new names and old name;; Eg:; ```; ""OglModel"" => ""SofaOpenglVisual.OglModel""; ```. 2) **Importing plugin and component *à la* python**; A new component called *FromComponent* is added to handle the loading of plugin and the import of object. . Examples of use:; ```; 	 # To make only <OglModel> accessible in the scene; 	<From plugin=""SofaOpenglVisual"" import=""OglModel""/>; 	<OglModel/>. 	# To add ""custom"" name in a scene ; 	<From plugin=""SofaOpenglVisual"" import=""OglModel"" as=""RenderingModel""/>; 	<RenderingModel/>. 	# To be a super lazy man and import everything; 	<From plugin=""SofaOpenglVisual"" import=""*""/>; ```. I didn't implemented multiple object imports so currently it is necessary to do ; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel""/>; <From plugin=""SofaOpenglVisual"" import=""GlslShader""/>; ```; But we could as in python with:; ```; <From plugin=""SofaOpenglVisual"" import=""OglModel, GlslShader""/>; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512:908,load,loading,908,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512,1,['load'],['loading']
Performance,"This PR aims to improve the way we search and load plugins. It adds:; - recursive search in PluginManager::findPlugin; - finding plugin dependencies in its directory (Windows only); - (SofaPython) function to easily edit sys.path at any plugin init; - ~~new Data in RequiredPlugin to find out-of-sofa plugins: `searchPath`~~; - new component AddPluginRepository for adding a path to the pool of plugin paths; - ~~**BREAKING**~~: rename AddResourceRepository into AddDataRepository (alias added for backward compat); - new default plugins folder in build/install to allow drag&drop. The last one shall be discussed, I'm not sure it is really needed. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/913:46,load,load,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/913,1,['load'],['load']
Performance,This PR contains needed SOFA modifications for regression tests reactivation:; - Remove SofaTest_test/Regression_test (moved to https://github.com/sofa-framework/regression) and SofaVerification; - FIX DataRepository init: always load sofa.ini at construction; - FIX SofaGTestMain for out-of-sofa use; - ADD `FileSystem::findFiles` for recursive search; - FIX some scenes; - ADD `RegressionStateScenes.regression-tests` and `RegressionTopologyScenes.regression-tests` for listing tested scenes. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/830:230,load,load,230,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/830,1,['load'],['load']
Performance,"This PR fix UI problem:; - the icon now display the correct icon (green for info message, yellow for warning and red for error) instead of a red sign all the time; - the icon was displayed at scene loading but not updated. This happens when using controllers that emits messages at simulation time. The result was that the treeview was out-of-date misleading the users. Using the feature introduced in #2397, the state is now tracked to correctly report the message status with it is changed. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2398:198,load,loading,198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2398,1,['load'],['loading']
Performance,"This PR fix a bug due to circular dependency in the DDG. . To reproduce the bug:; In caduceus scene, activate the informations message with printLog=""1"". ; Run the scene... you should see for the visual_snale_body:; ```console; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2201:270,Load,Loading,270,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201,5,['Load'],['Loading']
Performance,"This PR fix the opengl performance issue reported in #https://github.com/sofa-framework/sofa/issues/1070. The fix is in OglModel.cpp/OglModel.h and is very simple, when the positions and normals array are containg double precision numbers they are converted into single precision one before sending the data to OpenGL. I'm sure we can optimize further the conversion loop...but I have not time for that (volunteer needed). . Because the code in OglModel was hard to read because of the #ifdef GLEW all around I first cleaned the whole SofaOpenglVisual code, by removing the #ifdef. I also updated the call to function with name *ARB because they are now part of any baseline opengl implementation since nearly a decade. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1069:23,perform,performance,23,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1069,2,"['optimiz', 'perform']","['optimize', 'performance']"
Performance,"This PR gives the ability to exchange images between different threads in the MultiThreading plugin. It would be especially usefull for multithreading a camera grabber component and other components (for instance computer vision algorithms). In more details: ; - It consists in adding, in the DataExchange component, exchanges of image data types (ImageUC, ImageUS, ImageF). It involves a depedency with the image plugin, handled in the CMakeLists through a preprocessor directive (WITH_IMAGE) defined in config.h.in.; - A simple example passing an image loaded from an ImageContainer component (thread 1) to an ImageViewer component (thread 2), to display the image in the GUI, is added.; - An issue with OpenGL in the draw() function in the Kinect component in the image plugin has also been fixed, by using the SOFA_NO_OPENGL directive (in the CMakeLists and in Kinect.h). Indeed, with the lib FREENECT detected, the OpenGL functions in draw() may not be compiled given the OpenGL support of SOFA. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/770:555,load,loaded,555,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/770,1,['load'],['loaded']
Performance,"This PR introduces a finally-working mechanism to detect old discussion topics and close them.; Here is the definitive process over 4 months:; - When the most recent comment is done by a reviewer and is older than 2 months → a warning comment is done in the discussion; - Two months later, a last warning is written and the topic is closed. However, to avoid catching users unawares, a temporary mechanism has been introduced for discussions already older than 4 months: they will not be immediately closed but firstly warned with a specific message.; Trust me .. it will work :see_no_evil: (testable only after merge ..). So far the action is not fully active : a safety mechanism is done to limit the comment on only the first identified discussion to avoid a massive mess. To be fully operational, the following steps should be performed subsequent to merge:; - [ ] test with only one entry (break); - [ ] remove break; - [ ] after 1st of December 2023, remove the temporary layer (py script). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4268:831,perform,performed,831,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4268,1,['perform'],['performed']
Performance,"This PR introduces a way to test if concurrent simulations can run in the same time.; For now, the scenes are in XML (basically copy-paste of caduceus.scn and liver.scn). The liver test tests merely the possibility to launch multiple scenes.; The caduceus is more complex and test the whole collision pipeline, and constraint-based contacts (friction, LCP); -> this caduceus does not use MT (in the freeanimationloop) because the TaskScheduler needs a full rewrite to be thread-safe... The liver one is expected to be working but the caduceus is expected to crash (due to the intersections and constraints not being thread-safe for the moment); ""expected"" because MT usually is not really deterministic so results can vary... . The best way to make sure it works would be run the TSAN in the same time (not enabled on the CI). Remark: should the expected test to be failing be disabled by default ? or do we let the test failing ?; (The resolution in future PRs); ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4580:36,concurren,concurrent,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4580,1,['concurren'],['concurrent']
Performance,"This PR is a ""all-in-one"" fix that correct all the failing test taggued ""OpenIssue"". ; To fix the issues some changes have been done but it shouldn't be too disturbing. The biggest is probably the fixing done in sofa::helper::vector (have a look at the allowed syntax in the _test""). . CHANGELOG:; - ADD sofa::helper::vector<int> tests validating the different possible syntax ; - ADD sofa::helper::vector<unsigned int> tests validating the different possible syntax ; - FIX sofa::helper::vector<int>::read() so that it reports errors message in case of problem ; - FIX sofa::helper::vector<int>::read() so that there is no more endless loop for some input; - FIX sofa::helper::vector<unsigned int>::read() so that it reports errors message in case of problem ; - FIX sofa::helper::vector<unsigned int>::read() so that there is no more endless loop for some input; - FIX in all tests the ""_OpenIssue"" suffix that I forgot to remove when I fix the tests; - FIX MassSpringLoader to refuse to load a Xsp containing a rigid object and send warning messages. ; - FIX DefaultPipeline that was allowing negative depth attribute. Now it warns the user and set it default value (6).; - FIX DiagonalMass_test that was not checking that some pointer were valid before using them. ; - CHG GenerateRigiMass.inl now sends a warning message instead of an error. ; - FIX DistanceGrid add basic validation of dimensions given to the constructors. Sends a dmsg_warning if they are invalid and returns 0. ; - FIX DistanceGrid rename the attributes' names to match the sofa guidelines. . That's all, ; if merged with #267, #264 and #257 we should have a nearly green dashboard . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] is more than 1 ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/271:990,load,load,990,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/271,1,['load'],['load']
Performance,"This PR is based on #1406 and #1407 and uses the callback mechanism on some SOFA components (mainly Mesh loaders); It also takes advantage of the newly added ""isDirectory"" method in DataFileName in AddResourceRepository. It also:; - Removes the isPersistent flag from datafields in MeshLoaders (because this flag should only be used to set application-specific behaviors: in runSofa2, this flag is used to determine whether the datafield should be recorded when saving the scene for instance); - takes advantage of the getAccessors introduced by @damienmarchal in #1254 ; - Clears log messages from components withing update callbacks if the componentState changes to ""Valid""; - Sets the dynamic datafields created on-the-fly in the MeshVTKLoader depending on the mesh file content as outputs of the component (to guarantee they're update when the component's inputs change; - Checks for the validity of binary STL files using `isBinarySTLValid` for better error handling (see comment in the code l.103 in MeshSTLLoader.cpp); - Removes the autoLink flag from fileMesh in VisualModelImpl. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1408:105,load,loaders,105,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1408,1,['load'],['loaders']
Performance,"This PR is big but should finally clean all licenses in SOFA. Here is what I did:; - Fix the licenseUpdater script; - Fix wrong or missing LGPL headers in modules; - Fix wrong or missing LGPL headers in SofaKernel; **WARNING**: I found a **contaminating paste of GPL code** in LCPcalc.cpp:501 (lcp_lexicolemke function). Since I didn't found any usage of this function in SOFA (including plugins), **I removed it**. ; Please **tell me if this is OK**. Otherwise, we will have to discuss about GPL contamination.; - Fix wrong or missing GPL headers in applications/projects; - ~~Fix wrong or missing LGPL headers in applications/plugins~~ (commits removed); - ~~Fix wrong or missing GPL headers in applications/plugins: OptiTrackNatNet, SofaPML and SofaVRPNClient~~ (commits removed); - ~~Fix wrong license in SofaHAPI/initSofaHAPI:58 (should be LGPL)~~ (commits removed); - Optimize organization of LICENSE files in SOFA. <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [ ] is more than 1 week old. **Reviewers will merge only if all this checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/139:874,Optimiz,Optimize,874,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/139,1,['Optimiz'],['Optimize']
Performance,"This PR is certainly the biggest contribution from InSimo merge sprint. ; It will be further discussed during STC#3. ## issofa_multithreading. ### New features; - Add logGraphUpdates / logDataUpdates global variable in objectmodel to be able to debug multi-threading issue (not declared in headers, temporary until a better design is proposed); - Add a flag d_threadsafevisitor in solvers to disable writing in mechanicalstates of InteractionForceField in MechanicalVReallocVisitor/MechanicalVFreeVisitor as it might crash in multithreaded context; - Add `Contact::computeResponse()` and `Contact::finalizeResponse()` to separate thread-safe from sequential parts of the response computations; - Implement thread-safe Data engine/links updates by adding a lock while calling update().This requires that requestUpdate() or requestUpdateIfDirty() be called instead of update() directly, which is now protected.Bonus side effect is that it no longer matter where or if engines call cleanDirty() in their update method.; - Update all engines to new thread-safe design; - Add execution info in Task and index in WorkerThread; - Add support for multithreaded task logging (for visual profiling); - Add some const correctness in getColor and getName methods. ### Improvements; - Remove ClassInfo, deprecated in favor of BaseClass, and make sure all static instances are initialized while registering objects in the factory, to FIX ""pure virtual call"" crashes with visual c++ in multi-threaded contexts; - Replace `Creator<Contact::Factory,` with `sofa::core::collision::ContactCreator<` to improve thread safety of contact creation.; - AnimateBeginEvent and AnimateEndEvent can now receive an optional pointer to a TaskStatus ( in a form of a void pointer ). When using SofaMultithreading, this taksStatus pointer can be used to spawn the AnimateBeginEvent method in a separate thread. It is the reponsibility of the component to decide whether or not its AnimateBeginEvent method is thread safe.; - Change B",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:251,multi-thread,multi-threading,251,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,1,['multi-thread'],['multi-threading']
Performance,"This PR is removing some usefull mechanism (VTK and LightManager). In order to pass this PR, those two component would require to provide those controller and not just say ""you should code them"". One solution would be to remove them from the PR before merging it. ; (By the way, an issue regarding the mesh loaders and exporters will be created to be discussed and uniformised during the STC)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4163#issuecomment-1736877347:307,load,loaders,307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4163#issuecomment-1736877347,1,['load'],['loaders']
Performance,This PR makes me think that it would be nice to have a description of the ConstraintCorrection (one for each). If I recall correctly this was done for multithreading purposes. It would be nice to check any performance change if any. ; Let's rediscuss about it when everybody comes back!,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1447#issuecomment-676040952:206,perform,performance,206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1447#issuecomment-676040952,1,['perform'],['performance']
Performance,"This PR makes me think that msg_info() << ""message"" is in fact something like:; ```cpp; if(notMuted(Base*)); info::queue << ""message""; ```; With notMuted implemented like that:; ```cpp; Base::noMuted() ; { ; f_printLog().getValue(). ; }; ``` ; ; So either we don't use msg_info in loops (which is a good idea by the way, but not easy to track and enforce in our code base) or we reduce the cost of notMuted by using internal caching of the state.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1277432848:115,queue,queue,115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3356#issuecomment-1277432848,1,['queue'],['queue']
Performance,This PR moves required Data check from BaseObject::init() to a new SceneCheck loaded by default.; The starting problem for this work was that having the check in BaseObject::init() forces every Component that overrides init() to call the parent init(). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/754:78,load,loaded,78,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/754,1,['load'],['loaded']
Performance,"This PR provides support for aliasing Eigen sparse matrices (classes derived from `EigenBaseSparseMatrix`) through scipy sparse matrices. The scipy matrix *aliases* the eigen matrix, so that any modification will reflect on both sides provided the sparsity pattern does not change (on either side). A python context manager is provided to commit modifications back, should the sparsity pattern change, as shown in the example below. The binding is somewhat unconventional as it uses `ctypes` for simplicity. Perhaps a cleaner version could be made using regular bindings + passing Eigen matrix pointers through python capsules if someone is motivated. # Example; ```python; from SofaPython import sparse; import numpy as np. import Sofa; Sofa.loadPlugin('Flexible'). def createScene(node):; template = 'Affine'. dofs = node.createObject('MechanicalObject', template = template, size = 1); dofs.init(); ; mass = node.createObject('AffineMass', template = template); mass.init(); mass.bwdInit(). ref = np.identity(12); ; with sparse.data_view(mass, 'massMatrix') as m:; assert (m == ref).all(). m[10, 10] = 14; ref[10, 10] = 14. # assert our in-place modifications are reflected; with sparse.data_view(mass, 'massMatrix') as mm:; assert (mm == ref).all(). m[0, 10] = 14; ref[0, 10] = 14. # sparsity change: scipy matrix reallocates, no longer aliases ; with sparse.data_view(mass, 'massMatrix') as mm:; assert not (mm == ref).all(); ; # modification commit happens here. with sparse.data_view(mass, 'massMatrix') as m:; assert (m == ref).all(); ```. # Changelog. - Added `DataTypeInfo` for `EigenBaseSparseMatrix` derived classes; - Added a bunch of C functions in `SofaPython/ctypes.cpp` for aliasing logic; - Added a ctypes binding for aliasing + contexts in `SofaPython.sparse`; - Added an example in `SofaPython/examples/sparse.py`; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/411:743,load,loadPlugin,743,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/411,1,['load'],['loadPlugin']
Performance,"This branch contains the coding-sprint results & associated fixing commits. . There is the commit for the base branch, the coding sprint commit, post-sprint compilation fixes et test fixing. . CHANGELOG:; - deprecating several components (see the list in deprecatingcomponents.cpp); - the SceneCreator is base on a totally new implementation. The most notable difference is that the ; SceneCreator is no more relying on component from sofa core but use the factory to create the objects. ; The API does not change but if the factory is empty (because no plugin is loaded) then the ; components cannot be not created. So If you used SceneCreator in your test you may need to pre-load the plugin or module as done in ""sofa/SofaKernel/modules/SofaImplicitOdeSolver/SofaImplicitOdeSolver_test/loadPlugins.cpp""; - Fix FileMonitor_test that were randomly failing one MacOS; - Fix DataEngine_test that was failing on Vertex2Frame. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/457:564,load,loaded,564,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/457,3,['load'],"['load', 'loadPlugins', 'loaded']"
Performance,"This bug just pop up again in #967 and was referenced in issue #631 ; Several Gmsh file have non coherent topology information, for example Triangulation with edges on the border only. This mess up information feeding the topology container. If this behavior is wanted, use ``` <MeshGmshLoader createSubelements=""0"" />``` and be sure to link the different topology buffer data to the appropriate components.; For example:; ``` ; <MeshGmshLoader name=""loader"" createSubelements=""0"" />. <Node name=""triangulation"" >; <TriangleSetTopologyContainer name=""tri_topo"" triangles=""@../loader.triangles"" />; </Node>. <Node name=""border"" >; <TriangleSetTopologyContainer name=""edge_topo"" edges=""@../loader.edges"" />; </Node>; ```. fixes #631. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/986:451,load,loader,451,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/986,3,['load'],['loader']
Performance,This change has been performed to make the usage of the script and the documentary clearer. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/570:21,perform,performed,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/570,1,['perform'],['performed']
Performance,"This commit add the ability to edit shader while sofa is running and on-the fly updating the rendering.; This is an improvement on the workflow for anyone that is developing shading code. Some may be concerned about performances issues so here are more details: . The overhead is near zero.; The GLSLListener is triggered by the file FileMonitor.; FileMonitor is using the event based ""select"" system API and is not actively 'polling' the files. AFAIK this is the most efficient way to monitor files.; If the application don't call FileMonitor::update(0) then this cost nothing. Currently only runSofa is calling FileMonitor::update(0) when started with the -i (for interactive) command line option. So the different scenarios are:; your own app.... (no cost); runSofa -i & changing the file (this cost the reload of the shader (few millisecond each change); runSofa -i & not changing the file (this cost calling the select system call); runSofa as usual...this cost nothing.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/63:216,perform,performances,216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/63,1,['perform'],['performances']
Performance,"This component was using a set of data to define indices on which to apply springs. But those data already exist in the parent class. This was resulting in strange behaviors when using `AttachBodyPerformer` (which uses this component to attach an object to the mouse) out of the GUI API. . In fact the performer was acting on the parent data which is not directly used by the StiffSpringForcefield. A nebulous chain of update triggered by a GUI update made it work with the mouse interactor anyway, but not when the performer was own by a graph component. . Anyway this mechanism doesn't seem to have any added value and now the performer works great even outside the GUI interaction API. . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4635:302,perform,performer,302,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4635,3,['perform'],['performer']
Performance,"This feature is working in debug mode (just tested in windows, and it allowed me to find a bug when compiling SOFA with VS....).; But as you mentioned it won't work when you will want to load a binary not suffixed with _d and trying to runSofa in debug mode (e.g it could happen that you don't have access to the debug version of a plugin but still want to debug your application). ; Basically PluginManager, if compiled in Debug mode, wants to load ""_d"" suffixed binaries. If we want to achieve that:; - remove the forced suffix ""_d"" when loading in debug mode,; - the config file must have the ""complete"" ""binary name"" and not the target name (or just add the binary name with the target name). What do you people think ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/301#issuecomment-312619038:187,load,load,187,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/301#issuecomment-312619038,3,['load'],"['load', 'loading']"
Performance,"This first PR was initially to answer to the question how to load automatically plugins we deem ""important"" such as SofaPython. ; This PR was quite easy and fast to implement (especially because people agreed on the previous (failed :( ) PR #253 ). And it would lead to an other PR which will remove Image* things in the core of Sofa (and deps and the JPEG bug in ImageQt); Anyway, in a second time, I(?) will think about the introspection system which will be detailed in the proposal page #281",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/301#issuecomment-308349533:61,load,load,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/301#issuecomment-308349533,1,['load'],['load']
Performance,"This implementation is at the force field level because its goal is to parallelize the matrix-free CG.; Unfortunately, the benchmarks were measured with a bug. Now the bug is fixed, the performances are disappointing. It requires more investigation.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3566#issuecomment-1373932415:186,perform,performances,186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3566#issuecomment-1373932415,1,['perform'],['performances']
Performance,"This is a fix for a very specific situation. Here is what happens:. 1. A `msg_warning` is called in a component from a thread different from the main thread. It could be also `msg_error` or `msg_info`, as long as the message count of the element changes. It could be a change of name as well.; 2. The `ObjectStateListener` associated to the component updates the associated `QTreeWidgetItem` (this class is not a `QObject`).; 3. The icon is updated, so it warns the `QTreeWidget` (this class is a QObject) through a signal.; 4. Since the call happens in a thread different from the main thread, the queued connection is used. For that, all signals/slots parameters must be known to Qt's meta-object system. This PR registers the class `QVector<int>`, so it can be used in the queued connection. It partially fixes https://github.com/sofa-framework/sofa/issues/3610. The warning is no longer triggered by Qt. Therefore, the mutex is locked only once in one thread. I say it solves partially, because any other Qt error would trigger the same crash. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3749:599,queue,queued,599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3749,2,['queue'],['queued']
Performance,"This is a tentative to refactor `TetrahedronFEMForceField` for better readability. All the FEM methods have been dispatched into dedicated files. The methods are now classes sharing the same interface (polymorphism), called by the component. Advantages:; - `TetrahedronFEMForceField` is smaller; - `TetrahedronFEMForceField` had many similar codes (often identical). This is now avoided as all common code are in the base classes.; - It is easier to read the differences between the different FEM methods.; - We could imagine having a factory of FEM methods for `TetrahedronFEMForceField`. Then, the component could be extended in plugins by adding more methods into the factory. To do:. - [ ] Clean; - [ ] Move some class members from `TetrahedronFEMForceField` to `TetrahedronFEMForceFieldImpl`; - [ ] Restore initial performances; - [ ] Fix broken features such as drawing rotations; - [ ] If everyone agrees, remove the assembled methods. It adds complexity while the resulted matrix is not used.; - [ ] Adapt (if necessary) the derived classes (multithreading, CUDA etc). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2550:820,perform,performances,820,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2550,1,['perform'],['performances']
Performance,"This is a variation of the proposal done by @fjourdes in #455 where I allow me a bit more refactoring. . Here is what the PR does:; - implement basic test class in sofa/helper/testing/ BaseTest & NumericTest so that all framework tests can use them. ; - in SofaSimulationGraph/testing add a BaseSimulationTest class that implement facilities for tests that needs scene manipulation & loading. ; - udpates SofaTest to use the previously defined classes but still behaving as they used to in the past. ; - updates the framework_test to use BaseTest or NumericTest in place of Sofa_test or ::testing; - moves the tests in framework to framework_extra when they are manipulating a simulation (thus requires BaseSimulationTest instead of BaseTest); - updates the tests in simulation_test so that they don't use SofaTest anymore. ; - moves SimpleApi from SceneCreator to SofaSimulationGraph & fix a bug.; - creates a plugin in a the application/package directory so that in our tests we can load all the common sofa component with a single RequirePlugin(""SofaAllCommonComponents""). The consequences are:; - SofaTest is no more needed in framework & simulation ; - we can now progressively make the other tests to rely on BaseTest, BaseSimulation and SimpleAPI that are dependency free instead of SofaTest/SceneCreator. . Feel free to provide feedback/comment. ; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/471:384,load,loading,384,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/471,2,['load'],"['load', 'loading']"
Performance,"This is a way to explicit the narrowing conversions in SOFA. Instead of using the classic `static_cast`, this function can check if the value changed after the cast. It can happen in case of narrowing conversion, when the target type is smaller than the source type.; Since the check must be performed at run-time (affects the performances), it is enabled only in DEBUG mode. The idea is to use this cast everywhere the compiler warns about possible data loss and it's not possible to avoid a narrow conversion (e.g. by adapting both target and source types). An example is provided in this PR in `MeshGmsh`. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2590:292,perform,performed,292,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2590,2,['perform'],"['performances', 'performed']"
Performance,"This is an attempt at fixing #1528. At the moment, file parsing in MeshGmsh.cpp and MeshGmshLoader.cpp is (hopefully) correctly handled, including more recent MSH file formats (=>4.0).; EDIT: I don't fully understand how the loader works, mainly why MeshGmshLoader::readGmsh() is temporarily not used (commented in l.111), with the parsing apparently relying only on MeshGmsh::readGmsh(). However I tried to keep the same structure as before, simply taking into account the case where the .msh version is > 2.; A .msh file with version 4.1 is added (share/mesh/msh4_cube.msh), and its parsing by the MeshGmshLoader is tested both in examples/Components/loader/MeshGmshLoader.scn and in a new unit test. Both tests are working locally. Regarding the original purpose of #1528, the PR should be sufficient. Fixes #2433 #1528; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2155:225,load,loader,225,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2155,2,['load'],['loader']
Performance,This is an open discussion: ; We have a lot of warning due to 'size_t' to 'unsigned int' / 'int' conversion.; For example: ; ```unsigned int nbdof = this->mstate->getSize();```; or; ``` for (int i=0; i<buffer.size(); ++i) ```. getSize() return a size_t which can be a:; typedef unsigned __int64 size_t; . and not a 32bit unsigned or signed int. So my question is: . Do we really need that sofa::helper::vector getSize return an _int64_ and thus we change to _size_t_ everywhere we access this method?; This means turning a lot of _int_ / _uint_ into _int64_ / _uint64_. Or do we stick to size in _int32_ ; Maybe this has not a big impact in nowadays computer? ; I'm not an expert in software memory optimization. . Or maybe another solution?. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/709:699,optimiz,optimization,699,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/709,1,['optimiz'],['optimization']
Performance,"This is how I would do it:. 1. Separate the `SceneCheckMissingRequiredPlugin` class into 3: 1) an abstract base class, 2) a derived class printing the XML summary, 3) a derived class printing the Python summary.; 2. Move the XML class near the XML scene loader; 3. Move the Python class in SofaPython3; 4. Add (optionally) a new instance of the classes in each scene loader (see `void addListener( Listener* l )`). I admit this is quite complex to do. The reason is that all the scene checkers are all grouped in the same module, and `SceneCheck` is not in Core (but it could be). In any case, I am uncomfortable with the idea to have a scene checker for Python in the core. Somehow, it should be in SofaPython3. Another case to support is simpleapi :)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3033#issuecomment-1155193405:254,load,loader,254,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3033#issuecomment-1155193405,2,['load'],['loader']
Performance,"This is how `Rigid` behaves, so I would agree. But really, coordinate transformations should go in Engines/Mappings where they can be performed in any order depending on what the user needs.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/259#issuecomment-303325969:134,perform,performed,134,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/259#issuecomment-303325969,1,['perform'],['performed']
Performance,"This is in the hope to fix the failing scene on Ubuntu gcc.; If it does fix the issue:; - [ ] Explain why the issue happened; - [ ] Study the effect on the performances. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3424:156,perform,performances,156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3424,1,['perform'],['performances']
Performance,"This is needed by the SofaPython3 modules using Qt.; When importing them directly with python3 interpreter, `<sofa-path>/bin/qt.conf` is not found because Qt looks next to the executable (python3).; With this new qt.conf.h and its function sofa::gui::qt::loadQtConfWithCustomPrefix(), it is possible to force Qt to load the qt.conf we want. qt.conf.h is based on the output of `<qt-path>/bin/rcc qt.conf.qrc -o qt.conf.h` with; - `<qt-path>/bin/rcc`: Qt RCC executable; - `qt.conf.qrc`: file to create next to `<sofa-path>/bin/qt.conf` to overload Qt default search path "":/qt/etc/qt.conf"" ; ```xml; <!DOCTYPE RCC><RCC version=""1.0"">; <qresource prefix=""/qt/etc/"">; <file>qt.conf</file>; </qresource>; </RCC>; ```; - `<sofa-path>/bin/qt.conf`: this file is not in the command but is needed because referenced by qt.conf.qrc. Usage example:; ```cpp; #include <sofa/gui/qt/qt.conf.h>. std::string sofaPrefixAbsolute = sofa::helper::Utils::getSofaPathPrefix();; std::string inputFilepath = FileSystem::cleanPath(sofaPrefixAbsolute + ""/bin/qt.conf"");; bool success = loadQtConfWithCustomPrefix(inputFilepath, sofaPrefixAbsolute);; if(success); {; msg_info(""Sofa.Gui"") << ""Loaded qt.conf from "" << inputFilepath << "" customized with Prefix = "" << sofaPrefixAbsolute;; }; else; {; msg_warning(""Sofa.Gui"") << ""Failed loading and/or customizing qt.conf from "" << inputFilepath;; }; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not brea",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1820:255,load,loadQtConfWithCustomPrefix,255,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1820,2,['load'],"['load', 'loadQtConfWithCustomPrefix']"
Performance,"This is the first PR of a series which the goal is to improve the performances of the `MechanicalMatrixMapper`.; This PR is based on #2361. In this PR, manual timers + log are replaced in favor of `AdvancedTimers`. This PR serves also as a reference to compare the improvements of the next pull requests. Here are the timings for the `MechanicalMatrixMapper.pyscn` scene for 1000 time steps measured on my computer:. ```; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 0 0 1000 74.24 112.80 77.26 2.76 77260.7 100 TOTAL; ...; 4 0.80 1 41.79 62.15 44.22 1.53 44.22 57.23 ....MBKBuild; 5 0.99 1 40.91 61.06 43.32 1.47 43.32 56.07 .....MMM-addKToMatrix; 6 0.99 1 1.69 3.69 1.89 0.17 1.89 2.45 ......jacobian; 6 2.88 1 6.29 9.88 6.85 0.34 6.85 8.86 ......stiffness; 6 9.73 1 16.17 23.13 16.55 0.50 16.55 21.42 ......compressStiffnessMatrix; 6 26.28 1 2.74 4.50 2.98 0.16 2.98 3.86 ......copyKToEigen; 6 29.26 1 0.24 0.54 0.28 0.02 0.28 0.36 ......copyJ1J2ToEigen; 7 29.48 1 0.05 0.14 0.06 0.01 0.06 0.08 .......copyJ2ToEigen; 6 29.54 1 9.06 18.67 10.47 0.75 10.47 13.55 ......Multiplication; 7 29.54 1 4.59 9.56 5.44 0.36 5.44 7.04 .......J1tKJ1; 7 34.98 1 0.76 2.15 0.88 0.11 0.88 1.14 .......J2tKJ2; 7 35.86 1 2.73 5.90 3.28 0.35 3.28 4.24 .......J1tKJ2; 7 39.14 1 0.77 1.77 0.86 0.10 0.86 1.12 .......J2tKJ1; 6 40.01 1 2.62 4.70 2.78 0.19 2.78 3.59 ......J1tKJ1-copy; 6 42.79 1 0 0 0 0 0 0 ......J2tKJ2-copy; 6 42.79 1 0.01 0.04 0.01 0 0.01 0.02 ......J1tKJ2-copy; 6 42.80 1 0.01 0.04 0.02 0 0.02 0.03 ......J2tKJ1-copy; ```. Work on the `MechanicalMatrixMapper` has been done in collaboration with @Esther-R. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2362:66,perform,performances,66,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2362,1,['perform'],['performances']
Performance,"This is the new call stack after last commit, calling applyTransform at the end of load method... To be discussed. ```; SphereLoader::load; SphereLoader::applyTransform; !! addUpdateCallback filename; m_filename has changed: 1; SphereLoader::load; SphereLoader::applyTransform; SphereLoader::applyTransform exit; SphereLoader::load exit; !! addUpdateCallback exit valid; !! updateTransformPosition; d_translation has changed: 0; d_rotation has changed: 0; d_scale has changed: 1; SphereLoader::applyTransform; SphereLoader::applyTransform exit; !! updateTransformPosition exit; SphereLoader::applyTransform exit; SphereLoader::load exit; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-716717800:83,load,load,83,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-716717800,5,['load'],['load']
Performance,"This is weird, this should not happen if the plugin was loaded (i.e thanks to ""-l SofaPython3""on the command line); Can you post the entire log when you execute runSofa ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1788253936:56,load,loaded,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1788253936,1,['load'],['loaded']
Performance,"This line is the origin of our problem: https://github.com/sofa-framework/sofa/blob/9c85b17b55f4cd1a14927090754004aaba51b802/SofaKernel/framework/sofa/helper/system/PluginManager.cpp#L103; This line was creating entries in m_pluginMap because pluginPath is not always a path.; It is not a path when we are reading ""plugin_list.conf.default"" file to auto-load plugins at startup. This PR adds getPlugin method to avoid future operator[] mishandlings. It gets a loaded plugin by paths OR names (even if the map is based on paths). Conclusion: **`operator[]` on maps should be globally avoided for read access**. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/580:354,load,load,354,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/580,2,['load'],"['load', 'loaded']"
Performance,"This plugin allows us to load images using CImg API. For now this plugin is located in applications/plugins of Sofa, and does not supersede ImageQt/ImagePNG/ImageBMP. Tests and a simple scene to test all the supported formats are provided. An other pull-request will be done to remove ImageQt/ImagePNG/ImageBMP and their posssible dependencies in SofaKernel (e.g libpng), following further discussions. Linked to issue #51 . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings nor unit test failures.; - [ ] does not break existing scenes.; - [ ] does not break API compatibility.; - [ ] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185:25,load,load,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185,1,['load'],['load']
Performance,"This pr aims at fixing the crash on exit for some python scene. It was due to the cache of the Sofa python module not being cleaned up correctly (deleted after the interpreter). This is corrected here by insuring that the interpreter is correcty released through cleanup callback (see the SofaPython3 pr for more insights) . ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4828:82,cache,cache,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4828,1,['cache'],['cache']
Performance,"This problem occurs when saving and loading again a scene.; Then, when a path to the parent node is given like parents=""@/"" explicitly set in the scene file (eg when it result from dumping a loaded scene), the scene crashes. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/941:36,load,loading,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/941,2,['load'],"['loaded', 'loading']"
Performance,This pull-request adds the following features ; - add numerical integration on tetrahedra and triangles; - add a mechanical tag on a PointSetGeometry object in order to find its associated MechanicalObject; - add the orthogonal of a 2d vector; - add support of high order elements in VTK and Gmesh mesh loaders. It also fixes some bugs ; -Quand2Triangle Topologivcal mapping. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings nor unit test failures.; - [x] does not break existing scenes.; - [x] does not break API compatibility.; - [x] has been reviewed and agreed to be transitional.; - [x] is more than 1 week old. **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/219:303,load,loaders,303,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/219,1,['load'],['loaders']
Performance,This should fix all the scene crashing when performing topological change with some mechanicalMapping in the scene. Like for example identityMapping between the mechanicalObject and the OglModel. This is a temporary fix. Those 2 visitors will be removed as soon as all the component listed in #810 will be updated to use TopologicalData. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/880:44,perform,performing,44,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/880,1,['perform'],['performing']
Performance,This should fix failing scene tests due to issofa_plugin merge ; Failures were due to wrong `plugin_list.conf` path implying no plugin loading. Added some output to understand better were this list is loaded from (especially in case of failure). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/502:135,load,loading,135,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/502,2,['load'],"['loaded', 'loading']"
Performance,"This was introduced by e33ff21e75356e6967509cc0822d72c74f2d0247 ; So in order to have the ""_d"" debug postfix in your binary, you must use the `sofa_add_plugin` macro. ; I do not use this macro, and I did not mind its existence because I thought it was only related to have a pretty presentation of the plugins in the cmake-gui. https://github.com/fjourdes/sofa/blob/insimo_sofabuild/CMakeLists.txt is the main CMakelists.txt I use in my fork. Could be much simpler, because I started it by modifying the CMakeLists.txt fomr master, and also I really spent 5 minutes on it. The list of projects and plugin to build is simply passed through CMake cache variables. However now you are in the case where doing a ; `add_subdirectory(my_plugin_directory)` and ; `sofa_add_plugin(my_plugin_directory)` both works, and ends up giving different names for your binaries regarding of the config you use for building. . I do not mind strategies like https://github.com/fjourdes/sofa/blob/insimo_sofabuild/SofaKernel/SofaCommon/CMakeLists.txt for packages that are a composition of libraries - I think it is an improvement in this particular case - but for plugins that are a single library, all the necessary information should reside on their CMakeLists.txt. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/490:645,cache,cache,645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/490,1,['cache'],['cache']
Performance,"This was preliminary introduced in SofaGLFW/SofaImgui, where a new GUI is loaded at run-time; Contrary to the batch/qt/headlessrecorder GUIs which are forcefully linked at compile-time through SofaGui, which could depend (or not) on Qt, etc according to the CMake config,. SOFANG works already made all the different GUIs as independent libraries but ultimately the SofaGui was still present because of the fact that runSofa was still relying on this mechanism. Now :; - Qt/Batch/HeadLessRecorder are loadable plugins and register themselves in the GUIManager, if loaded .; - Batch is still forcefully loaded by runSofa ; otherwise it could be possible to run SOFA without any GUI (I am not against having this possibility tho); - SofaGui is officially deprecated 🎇. Remarks: ; - after this PR, I would really like to move HeadlessRecorder in applications/plugins (either that in the ""official"" SOFA trunk) as it is only supported on Linux, needs X libs dev and I dont even know if people really uses it.; - showing help will only show the help for the runSofa options not the ones introduced by the eventual plugins....; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3550:74,load,loaded,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3550,4,['load'],"['loadable', 'loaded']"
Performance,"To be clear, the simulation is not slower. The measured durations don't have overhead. The time consuming part due to the GUI is not measured. So, you are right, the percentages are accurate, but the durations also. It just takes time to display them.; I agree that optimizing this tool is not a priority. This issue is to keep it in mind.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2142#issuecomment-853001162:266,optimiz,optimizing,266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2142#issuecomment-853001162,1,['optimiz'],['optimizing']
Performance,"To be merged **after** https://github.com/sofa-framework/sofa/pull/3928. Close #3001 and implement it again (move of all files made it too complex to pursue). - Deprecation of the DiagonalMass; - Making it as an inherited class from MeshMatrixMass. **TODO (in this PR)**; - [x] add deprecation macros in CPU and GPU codes (`SOFA_DEPRECATED_HEADER`); - [x] ~~Add callback on lumping to warn user~~ (in another PR); - [x] ~~edge implementation to backport in MMM~~ (not meaning ful, see below patch); - [x] rename the *DiagonalMass.scn* example and use MeshMatrixMass; - [x] specific removed-deprecation macros for RigidTypes: specialized class DiagonalMass for Rigid with a `parse()` function warning for user & deprecation for devs; - [x] assess again performances; - direct; - Diagonal-buildMassMatrix = 0.57%; - MeshMM-buildMassMatrix = 0.57%; - iterative; - Diagonal-addMDx = 0.45%; - MeshMM-addMDx = 0.70% -- 0.47% without the if condition for graph plotting; - TORUS Fall scene over 10 000 steps; - DiagonalMass; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 9 	 2.54	 1 	 0.01	 0.12	 0.01	 0 	 0.01	 0.19	.........DM-buildMassMatrix; - MeshMatrixMass lumped; LEVEL	 START	 NUM	 MIN	 MAX	 MEAN	 DEV	 TOTAL	PERCENT	ID; 9 	 2.44	 1 	 **0.0**	 **0.04**	 0.01	 0 	 0.01	 **0.18**	.........MMM-buildMassMatrix; - [ ] update all scenes ( `<DiagonalMass` :arrow_right: `<MeshMatrixMass lumping=""1""` ). **TODO (after this PR)**; - deprecate XspLoaders (see #4003). **NOTE** ; Rigid cases previously handled by the DiagonalMass are not anymore, therefore breaking.; Regarding the absence of use of xs3 formats for rigid bodies and the starting project coupling Pinocchio which should bring a more robust description/handling of rigid bodies, I would advocate to :; - deprecated associated components (XspLoader, MeshXspLoader and their impact on RigidMapping, SpringFF, VectorSpringFF) ; - take this opportunity to clean and replace OldTutorials coming with it with new ones. _________________",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3912:752,perform,performances,752,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3912,1,['perform'],['performances']
Performance,"To me loading textures and logos is not a core functionality of a physics library, so I would vote for not putting it in SofaKernel. What is important is that this removes the dependencies to `zlib` and `libpng` from sofahelper, correct ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/51#issuecomment-281631942:6,load,loading,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/51#issuecomment-281631942,1,['load'],['loading']
Performance,"To me this change is a perfect use case for the Lifcycle feature management introduced in:; https://github.com/sofa-framework/SofaPython3/pull/184. With such it would be trivial when loading a scene to write something like that:; ```python; from Sofa.Lifecycle import __feature__. def myOldNamingScene(root):; """"""A scene or prefab that use the old naming scheme""""""; pass. def myNewNamingScene(root):; """"""A scene or prefab that use the new naming scheme""""""; pass. def createScene(root):; with __feature__(""uniform-naming-scheme"",True):; myNewNamingScene(root); ; myOldNamingScene(root) ; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2773#issuecomment-1075459981:183,load,loading,183,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2773#issuecomment-1075459981,1,['load'],['loading']
Performance,"Today, SOFA proposes two ConstraintSolvers:; - LCPConstraintSolver; - GenericConstraintSolvers. Both solve a constraint problem (LCP or NCLP).; Therefore, here are some todo suggestions:; - implementations should be merged, triggering the optimization for UnilateralInteractionConstraint of the LCPConstraintSolver when the problem only involves such constraints; - a unique component with a clear/simple name (ConstraintSolver) should be used; - the solver used should be a dedicated component in the scene : different methods to solve such a problem could be used, #3053 introduced a NNGS on top of the GaussSeidel (double implementation in LCPConstraintSolver & GenericConstraintSolvers) they should be extracted as components. Possibly interested people: @courtecuisse @ChristianDuriez @alxbilger @EulalieCoevoet @Younesssss",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3148:239,optimiz,optimization,239,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3148,1,['optimiz'],['optimization']
Performance,"Towards a green dashboard. Scene was broken since the change on StaticSolver; But I am not convinced it was even working before, the simulation seems very unstable. A python script handling the incremental loading is added. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1064:206,load,loading,206,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1064,1,['load'],['loading']
Performance,TriangularFEMForceField Performance optimization,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4331:24,Perform,Performance,24,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4331,2,"['Perform', 'optimiz']","['Performance', 'optimization']"
Performance,"Try to fix and create a real test for TopologyChangeProcessor by loading the scene and access the topology container to check the topology after performing topology changes. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1909:65,load,loading,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1909,2,"['load', 'perform']","['loading', 'performing']"
Performance,"Two optimizations:; - ~~SparseLDL is now instanciated by default with the template `CompressedRowSparseMatrix<Matrix3>` instead of `CompressedRowSparseMatrix<double>` : seems much faster with 3DOFs~~ warn the user to use `CompressedRowSparseMatrix<Matrix3>` if using only 3DOFs; - Optimize compliance computation : use the local constraint count instead of the global to compute the internal matrices Also rename Jdense to JLinv and Jminv to JLinvDinv to be coherent with what the current code is computing. (those descriptions comes directly from the commit messages). With my scene test (a dozen of objects with a SparseLDLSolver each, and a lot of constraints due to the FrictionContacts):; ```; - before : 5000 iterations done in 208.437 s ( 23.9881 FPS).; - after : 5000 iterations done in 75.8347 s ( 65.9328 FPS).; ```; I tried to keep the commit identical to the original one from the [ISSofa repo](https://github.com/InSimo/ISSofa) (author/message/date). Credits to:; - @JeremieA from [Insimo](http://insimo.com/); - @remibessard from [Mimesis](https://mimesis.inria.fr), for the report. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1996:4,optimiz,optimizations,4,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996,2,"['Optimiz', 'optimiz']","['Optimize', 'optimizations']"
Performance,"UX is not perfect : some plugins loaded are in blue in the GUI (the one loaded by the GUI itself).; Even with a tooltip, the user can be a bit confused but this is a dev feature. An issue will be created (double mechanism of plugin loading)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3109#issuecomment-1190072887:33,load,loaded,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3109#issuecomment-1190072887,3,['load'],"['loaded', 'loading']"
Performance,Unable to load plugin when sofa is installed,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1560:10,load,load,10,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1560,1,['load'],['load']
Performance,Unit tests added! Performances using the benchmark scenes seem similar to the current ones.; To be reviewed @sofa-framework/reviewers,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1275831031:18,Perform,Performances,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2777#issuecomment-1275831031,1,['Perform'],['Performances']
Performance,"Update the list of plugins to NOT auto-load when executing runSofa from the release. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3197:39,load,load,39,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3197,1,['load'],['load']
Performance,"Use pre-allocated buffers instead of creating new vectors + allocations at every step of the loops. Same benchs as ; - https://github.com/sofa-framework/sofa/pull/4132. ```; (mu=0.1); LCP : 5000 iterations done in 58.1724 s ( 85.9514 FPS); GCS before: 5000 iterations done in 83.4733 s ( 59.8994 FPS); GCS after: 5000 iterations done in 69.2669 s ( 72.1846 FPS); ```; ```; (mu=0.0); LCP : 5000 iterations done in 44.0637 s ( 113.472 FPS); GCS before: 5000 iterations done in 69.1173 s ( 72.3408 FPS); GCS after: 5000 iterations done in 53.8957 s ( 92.7719 FPS); ```. Speedup of ~20-30% but still slower than LCP (but much less though ).; But this improvement should be felt whenever the GCS is using the unbuilt method (contrary to #4132 which was specialized for LinearConstraintCorrection with wire optimization). Other bench on caduceus (5000 steps); ```; LCP; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 4 1.11 1 0 0.69 0.14 0.04 0.14 9.10 ....SolveConstraint: POSITION AND VELOCITY - SolveSystem; ```; ```; GCSunbuilt before; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 4 1.28 1 0 33.01 0.24 1.45 0.24 13.24 ....SolveConstraint: POSITION AND VELOCITY - SolveSystem; ```; ```; GCSunbuilt after; LEVEL START NUM MIN MAX MEAN DEV TOTAL PERCENT ID; 4 1.28 1 0 19.89 0.16 0.98 0.16 9.38 ....SolveConstraint: POSITION AND VELOCITY - SolveSystem; ```; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4195:801,optimiz,optimization,801,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4195,1,['optimiz'],['optimization']
Performance,Using loadSceneWithArguments only works for scene made with python. ; Maybe there exists a function in SofaPython for that task but I don't see one.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/202#issuecomment-286227567:6,load,loadSceneWithArguments,6,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/202#issuecomment-286227567,1,['load'],['loadSceneWithArguments']
Performance,VERY Interesting work @alxbilger :+1: . I would be glad to discuss it further : a domain solver was investigated between InSimo (@fjourdes ) and Mimesis (Riad working with @StephaneCotin ). The implementation was not performed at ForceField level but at the linear system resolution level. Do you have also an idea of the time taken by the decomposition step?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3566#issuecomment-1373581055:217,perform,performed,217,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3566#issuecomment-1373581055,1,['perform'],['performed']
Performance,Very simple PR to allow Windows loading MultiThreading plugin.; Will fix these errors: https://ci.inria.fr/sofa-ci/job/windows7_VS-2015_options_amd64/550/warnings2Result/category.96784904/. [ci-build][with-scene-tests]; ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/507:32,load,loading,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/507,1,['load'],['loading']
Performance,"Very useful collection of header-only utilities : https://github.com/nothings/stb. This PR uses **stb_image** and **stb_image_write** to read/write jpeg,png,etc. images directly without any reliance on libpng or libjpeg.; Practically, This PR almost depracates the use of CImgPlugin (at least as an image loader). ; The only thing stb (compared to cimg) is that it cannot load is the TIFF format... It allows us to :; - not depend on any external library anymore (libpng, libjpeg); - not need anymore to load the CimgPlugin to get images in a scene (which was a bit weird...). **stb** licence is either MIT or even public domain (!). Some questions about this PR:; - should we fetch stb at cmake configure time ? IMO no because it would mean we really need an Internet connection to compile the core of SOFA; - should we put all the files from the stb repo ? IMO no, the other files wont be used for sure. That's why the stb dir contains only the two files we want for this PR. <img src=""https://user-images.githubusercontent.com/11028016/146752568-e4f392d5-5ecd-4f32-be92-32f48b53f5ab.PNG"" width=""400"" />. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2551:305,load,loader,305,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2551,3,['load'],"['load', 'loader']"
Performance,"Visitor`:; - `processNodeTopDown_fwd*` and `processNodeBottomUp_bwd*`: in the base class they do nothing. In the derived class, they must execute the corresponding `processNodeTopDown_fwd*_impl` or `processNodeBottomUp_bwd*_impl` function.; - `processNodeTopDown_fwd*_impl` and `processNodeBottomUp_bwd*_impl` which have a content and will execute the goal of the visitor. Those functions are not meant to be overriden by the derived classes. They are provided so derived class can call them when they override `processNodeTopDown_fwd*` or `processNodeBottomUp_bwd*`. ### Example. `MechanicalGetDimensionVisitor` inherits from `BaseMechanicalVisitor` and overrides `fwdMechanicalState`. In order for `fwdMechanicalState` to be executed, it must also override `processNodeTopDown_fwdMechanicalState`. In `processNodeTopDown_fwdMechanicalState`, it just have to call `processNodeTopDown_fwdMechanicalState_impl`. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Benefit from inheritance and avoid runtime checks compared to PR #1962 . ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to derive more functions. This PR is not to merge yet. It is suggested as an alternative to PR #1962 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (o",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1963:2459,race condition,race conditions,2459,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1963,1,['race condition'],['race conditions']
Performance,"Visual Studio allows to manager multiple compilation modes for one project. The plugin manager writes a list of loaded plugins in a file `loadedPlugins.ini`. This file stores the absolute paths to the loaded plugins. When switching the compilation mode in VS, this file is still loaded. And it will load plugins which paths point to the previous compilation mode. If you switch from Debug to Release, the file contains the paths to the Debug binaries and the plugin manager will try to load them, whereas the compilation mode is now Release.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2338:112,load,loaded,112,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2338,6,['load'],"['load', 'loaded', 'loadedPlugins']"
Performance,"We could still re-factor them, maybe into a **PressureForceField** and a **TractiveForceField**, where both can handle surface elements (triangle and quads in 3D; or edges in 2D) and maybe support an increment ramp (increment the amount of force in time) to help the convergence of large applied loads.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1303#issuecomment-606626414:296,load,loads,296,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1303#issuecomment-606626414,1,['load'],['loads']
Performance,We still did not test with Rigid or Vec2/6.; In my opinion we should be conservative and just let the caching optimization (and let the default template as it is for the moment); What do you think ?,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1996#issuecomment-857807779:110,optimiz,optimization,110,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996#issuecomment-857807779,1,['optimiz'],['optimization']
Performance,"Well spotted @courtecuisse . - This fix reminds me that some bound checks (e.g type::vector) does only check in DEBUG mode/assertion https://github.com/sofa-framework/sofa/blob/649a41bf386b78c95264d9a6fb3125f4662c5a58/Sofa/framework/Type/src/sofa/type/vector_T.h#L108; obviously for performance reason. Should we do that here ? Thing is, many people do not run in debug so.... 🤐. - I guess this is a far cry but @fjourdes you would want to get the fix ? (if you dont have it already...)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1724637659:283,perform,performance,283,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4179#issuecomment-1724637659,1,['perform'],['performance']
Performance,"Well, here is the updated log. (I also did small corrections in scene to remove warnings I know how to remove. Anyway, the issue is still there).; The scene with corrections is attached.; [test_scene.zip](https://github.com/sofa-framework/sofa/files/8573660/test_scene.zip). **Full output**. ```txt. [sergei@sergei-20hd0000fr test_scene]$ /home/sergei/Source_code/Sofa_development/sofa/build_release/install/bin/runSofa -l /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so /home/sergei/Source_code/test_scene/test_scene.py ; [WARNING] [SofaEigen2Solver] SofaEigen2Solver is deprecated; Eigen classes are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = /home/sergei/Source_code/Sofa_development/Optimus/build_release:/home/sergei/Source_code/Sofa_development/SofaAuxiliaryComponents/build_release:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib; [INFO] [runSofa] DataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/runSofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registe",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:811,load,load,811,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['load'],['load']
Performance,"Well:; - `doLoad()` was called three times, without clearing the lists (e.g. d_position, d_tetra...). So I had duplicated positions, triangles and tetra in my scene, which caused failures. Those calls seemed to be triggered by `addUpdateCallback` in `MeshLoader`.; - the transforms wasn't called three times, so the last positions were not transformed.... but that's not really important I guess. After digging, I found that using `getWriteOnlyAccessor()` to access the `d_positions`... instead of `beginEdit()`, like it was done in most other loaders, reduced this number of calls, which fixed everything for me. I should also mention that my scene was failing at init (when loading the scene).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1554#issuecomment-713100804:544,load,loaders,544,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1554#issuecomment-713100804,2,['load'],"['loaders', 'loading']"
Performance,"What I would suggest :; 1. add big visible warnings generated in load() or parse() if `filename` is not empty, stating that this direct loading feature is deprecated as it is redundant with the `MeshXyzLoader` components and will be removed SOON. Bonus point if the warning message show the equivalent xml or python syntax to instantiate the corresponding component and link it.; 2. add an entry in the changelog saying this is now deprecated and will be removed SOON; 3. wait about a year; 4. then finally remove both these methods and the associated `sofa::helper::io::*` classes. It's long in calendar time, but quick and easy in term of code changes !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/118#issuecomment-271674546:65,load,load,65,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/118#issuecomment-271674546,2,['load'],"['load', 'loading']"
Performance,"What was written above (hidden by GH):. ---. TODO:; - test when a node is added. One issue remains in my tests :; - simulation starting without gravity, and then gravity is added; - mass added using python, since no init, the link in GravityForceField to the local mass is no performed",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1445308949:276,perform,performed,276,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2988#issuecomment-1445308949,1,['perform'],['performed']
Performance,When CImgPlugin is not compiled Sofa is crashing on OglModel; I made a PR to fix the crash. https://github.com/sofa-framework/sofa/pull/474. I wonder how we could warn users that they probably want & load the CImgPlugin by default.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/424#issuecomment-336569534:200,load,load,200,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/424#issuecomment-336569534,1,['load'],['load']
Performance,"When I try to compile SOFA (on Windows), I observed that apparently some part of the build system (CMake? Or some pre/post-build event) tries to create output folders in the `bin` subfolder of the CMake cache for all the different MSVC build configurations created by Cmake (i.e. Debug, MinSizeRel, Release, RelWithDebInfo), **but instead of creating folders generates some obscure binary files with the same name**. This seems to be ok for the first compilation, where MSVC seems to be faster than the faulty script. E.g. when starting with Debug, I do not see any issues, however after finishing that and trying to compile in Release, MSVC compiler complains that e.g. (same for all other targets). > Error	MSB3191	Unable to create directory ""E:\work\dev\SOFA\sofa\build\bin\Release\"". Cannot create ""E:\work\dev\SOFA\sofa\build\bin\Release"" because a file or directory with the same name already exists.	. until I manually remove this useless extra **""Release"" file** (which was meant to be a folder). ______________________________________________________. Suggested labels: bug (minor)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1331:203,cache,cache,203,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1331,1,['cache'],['cache']
Performance,"When a plugin is loaded, the ObjectFactory is populated of Components from this plugin. However, when this plugin is ""unloaded"", it was still possible to create a component from the plugin. This PR detects that the ObjectFactory tries to instantiate an object that is from an unloaded plugin.; It is particularly useful when the initialization of the plugin fails (SofaCUDA for example). When the initialization fails, the plugin is unloaded.; A unit test is provided. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4722:17,load,loaded,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4722,1,['load'],['loaded']
Performance,"When a texture cannot be loaded the OglModel will crash. This PR fix that. ; As the image loader are now ""optional"" through CImgPlugin. . NB: I cannot prevent myself to clean a bit the commented code because I; cannot do bug tracking in the middle of the mess. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [x] does not generate new scene test failures.; - [x] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/474:25,load,loaded,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/474,2,['load'],"['loaded', 'loader']"
Performance,"When adding a new DataType for a MechanicalObject, I need to provide an operator* implementations which computes the dot product between two DataTypes. . ```; Real r = 0.0;. if (a.type == sofa::core::V_COORD && b.type == sofa::core::V_COORD); {; const VecCoord &va = this->read(core::ConstVecCoordId(a))->getValue();; const VecCoord &vb = this->read(core::ConstVecCoordId(b))->getValue();. for (unsigned int i=0; i<va.size(); i++); {; r += va[i] * vb[i];; }; }; ```. This is clearly an issue if for example you use Eigen as a DataType, as the operator* has a clear meaning. If for example you have an `Eigen::Matrix<double, 3, 3>`, you cant override operator* because you wont be able to perform normal algebraic matrix multiplication. . Consider using free functions instead of overloading operator*. . ```; ```; Real r = 0.0;. if (a.type == sofa::core::V_COORD && b.type == sofa::core::V_COORD); {; const VecCoord &va = this->read(core::ConstVecCoordId(a))->getValue();; const VecCoord &vb = this->read(core::ConstVecCoordId(b))->getValue();; using Sofa::dot;; for (unsigned int i=0; i<va.size(); i++); {; r += dot(va[i], vb[i]); }; }; ```",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1525:688,perform,perform,688,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1525,1,['perform'],['perform']
Performance,"When building runsofa (master version 16/01/18) it crash at runtime. > [INFO] [runSofa] No plugin will be automatically loaded; > - No custom list found at C:\sofaBuild\bin/bin/plugin_list.conf; > - No default list found at C:\sofaBuild\bin/bin/plugin_list.conf.default; > The constructor with a QGLFormat is deprecated, use the regular contructor instead.; > [ERROR] [FileRepository] File icons/back.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [FileRepository] File icons/home.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [BaseViewer] Could not create file 'C:/sofa/share/textures/SOFA_logo.bmp'; > Valid extensions: dds; > ; > [ERROR] [Image] Could not load image with extension png. Valid extensions: dds; > [ERROR] [OglModel(VisualBody)] couldn't create an image from file textures/snakeColorMap.png; > [ERROR] [OglModel(VisualBody)] 1 textures couldn't be loaded; > [ERROR] [FileRepository] File docs/runsofa.html NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [INFO] [SceneChecker] The 'APIVersion' directive is missing in the current scene. Switching to the default APIVersion level '17.06'; > [INFO] [SceneChecker] Validating node ''.; > Activate checkers:; > - SceneCheckAPIChange; > - SceneCheckDuplicatedName; > - SceneCheckMissingRequiredPlugin; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable.; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable. Plus, I had many troubles compiling it. I have to uncheck PSL (require SofaPython), but when SofaPython is checked there is many link problems. Finally, I both unchecked them. ______________________________________________________. Suggested labels: <!--- see https://github",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/561:120,load,loaded,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/561,2,['load'],"['load', 'loaded']"
Performance,"When doing `make install`, the RPATH of the libraries is set to ""../lib:$ORIGIN/../lib:$$ORIGIN/../lib"", and does not include the path to its relocated dependencies:. ```; $ ./bin/runSofa; ./runSofa: error while loading shared libraries: libSofaValidation.so.1.0: cannot open shared object file: No such file or directory; ```. ```; $ find . -name libSofaValidation.so.1.0; ./plugins/SofaValidation/lib/libSofaValidation.so.1.0; ```. Same thing happen if we link our project to some of SOFA's core library:; ```; $ lddtree my_plugin.so; my_plugin.so; libSofaMisc.so.20.06.99 => /sofa/build/install/lib/../lib/libSofaMisc.so.20.06.99; libSofaMiscEngine.so.20.06.99 => /sofa/build/install/lib/../lib/../lib/libSofaMiscEngine.so.20.06.99; libSofaNonUniformFem.so.1.0 => not found; ```; and again.; ```; $ find . -name libSofaNonUniformFem.so.1.0; ./plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so.1.0; ```. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1395:212,load,loading,212,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1395,1,['load'],['loading']
Performance,"When loading a stl file (mesh/pliers_binary.stl) SOFA detects a wrong number of triangles (10712, 4 additional triangles) while other softwares find only 10708. Needs investigation. _Originally posted by @epernod in https://github.com/sofa-framework/sofa/pull/2999#discussion_r895241394_",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3043:5,load,loading,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3043,1,['load'],['loading']
Performance,"While I was cleaning OmniDriverEmu I found that:; ```cpp; /* //Igor version. std::cout << ""numSegs "" << numSegs << "" --- "" << numPts << std::endl;. std::cout << pts[0].getCenter() << ""/// "" << pts[0].getOrientation() << std::endl;. if (numSegs != (2*numPts - 1)) {; std::cerr << ""Bad trajectory specification "" << std::endl;; return(0);; }; OmniDriverEmu::VecCoord stepDiff;; helper::vector<int> stepNum;. unsigned int seg = 0;; for (unsigned int np = 0; np < numPts; np++) {; //for the point; unsigned int n = tmg[seg]*omniDrv->simuFreq.getValue();; stepNum.push_back(n);; cout << ""N pts = "" << n << std::endl;; OmniDriverEmu::Coord crd;; cout << "" adding "" << crd << std::endl;; stepDiff.push_back(crd);. //for the line; if (np < numPts-1) {; seg++;; n = tmg[seg]*omniDrv->simuFreq.getValue();; cout << ""N lin = "" << n << std::endl;; stepNum.push_back(n);; Vec3d dx = (pts[np+1].getCenter() - pts[np].getCenter())/double(n);; helper::Quater<double> dor; ///TODO difference for rotations!!!; OmniDriverEmu::Coord crd(dx, dor);; cout << ""adding "" << crd << std::endl;; stepDiff.push_back(crd);; }; seg++;; }. std::cout << "" stepNum = "" << stepNum << std::endl;; std::cout << "" stepDiff = "" << stepDiff << std::endl;; */; ```; in hapticSimuExecute. @IPeterlik is this 'version' important to you or any other (eg: it perform better than the existing one) ? In that case it may be good to properly implement it in the codebase... ; otherwise could we remove this commented code ? . ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework/sofa/labels -->",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/944:1315,perform,perform,1315,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/944,1,['perform'],['perform']
Performance,Why did you relaunch builds? They are already in Jenkins queue.,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/80#issuecomment-267083898:57,queue,queue,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/80#issuecomment-267083898,1,['queue'],['queue']
Performance,"Why is this one breaking if by default SofaBase are ""auto loaded"" ?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1676#issuecomment-749218409:58,load,loaded,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1676#issuecomment-749218409,1,['load'],['loaded']
Performance,"With runSofa and SceneChecking, `RequiredPlugin` is calling `loadPlugin()` twice; - once at the `parse()` step; - and a second time when `SceneCheckMissingRequiredPlugin` at the `init()` step. `SceneCheckMissingRequiredPlugin` browses all `RequiredPlugin` and checks each entry on `d_loadedPlugins`.; https://github.com/sofa-framework/sofa/blob/af8f98a668dee73e21fac19da31d181baf137a99/applications/projects/SceneChecking/src/SceneChecking/SceneCheckMissingRequiredPlugin.cpp#L144-L150; But `d_loadedPlugin`s is set dirty at parse() so calling `d_loadedPlugins.getValue()` will trigger an other `loadPlugin()`, because of the callback. So this PR forcefully sets `d_loadedPlugins` to **not dirty** but maybe there is a better solution.... ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4509:61,load,loadPlugin,61,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4509,2,['load'],['loadPlugin']
Performance,With this PR the resulting plugin_list.conf on ubuntu is the following (I removed the `Sofa.*` for an easy read) : ; ```; SofaValidation 24.06.99; SceneCreator 0.1; CollisionOBBCapsule 1.0; ArticulatedSystemPlugin 1.0; SofaEulerianFluid 1.0; SofaSphFluid 1.0; SofaDistanceGrid 24.06.99; SofaImplicitField 1.0; MultiThreading 0.1; DiffusionSolver 0.1; Registration 0.1; InvertibleFVM 0.1; ManifoldTopologies 0.1; SensableEmulation NO_VERSION; SofaCarving 0.1; SofaAssimp 0.2; SofaMatrix 1.0; BeamAdapter 1.0; STLIB 3.0; SoftRobots 1.0; ShapeMatchingPlugin 24.06.99; CSparseSolvers 1.0; ModelOrderReduction 1.0; Sofa.Metis 24.06.99; SofaSimpleGUI 0.1; VolumetricRendering 24.06.99; ```. And the following are not automatically loaded by the binaries : ; ```; Geomagic ; image ; CImgPlugin ; PluginExample ; SofaCUDA ; CGALPlugin ; ```,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4748#issuecomment-2122519996:725,load,loaded,725,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4748#issuecomment-2122519996,1,['load'],['loaded']
Performance,"Would it be possible to boost debug rendering performance, especially when drawing tons of spheres?; I guess it would be more efficient to instantiate only one sphere once for all, and then to draw it many times?",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/142:46,perform,performance,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/142,1,['perform'],['performance']
Performance,"Write access (copy-less), the data counter is updated after the 'with' block; with c.position.writeable() as w:; o = numpy.ones((len(c.position), 3))) ; w += o ; w *= 2.0; ```. Wrap around types (copy-less) to typify the data fields on demand; ```python; # syntax 1; c = o.showColor.as(RGBAColor); # syntax 2; c = RGBAColor(o.showColor); c.setFromHSC(1,2,3); c.setFromHSV(1,2,3); ```. Implement your own ForceField in python:; ```python; class MyForceField(Sofa.Core.BaseForceField):; def __init__(self, *args, **kwargs):; Sofa.Core.BaseForceField.__init__(self, *args, **kwargs); ; def init(self):; self.refx = self.position.toarray().copy(). def addForce(self, m, f, x, v):; n = numpy.ones((len(self.position),1)); f = (self.refx-x) * 2 + n; ```; ; To test the binding you need to de-activate SofaPython and activate SofaPython3. ; Then; - runSimu.py to launch a sofa simulation from the command line eg: ; python3 runSimu.py mySimulation.py; - or runSofa. . General guidelines:; - Fix existing API consistency issues; - Improve the performance of the binding by supporting supporting the different python protocols (sequence, buffer+memoryview, copy-less mechanism).; - unified data access and API.; - implementation is currently done with pybind11 and cython.; - modular design. About the tools we use: ; - pybind because it is very consistent with our code base ; - cython becaues it is much more powerful and general and so we can accelerate python code by un-warping the warped object in other part of the code base. . ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [ ] does not break API compatibility.; - [ ] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/771:1758,perform,performance,1758,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/771,1,['perform'],['performance']
Performance,"X). This PR sets up a Component State Checking mechanism that allows to know if a call to init / reinit is necessary, and whether or not the component took into account any change applied to its data fields. The idea is that Each component's state can be:; - **Unspecified**: The component has just been created, init has not been called; - **Valid**: The component is ready to be used, and should behave as expected; - **Dirty**: The component is ready to be used, but requires a call to reinit() to update some of its datafields.; - **invalid**:; 1. An error happened during init, reinit or any of the methods called during the simulation step. A call to reinit might fix it; 2. A call to reinit has been made, but the method is improperly implemented, such as one or more Data field has not been updated (call to getValue / updateIfDirty etc...). Because I don't trust programmes to implement the mechanism in their own components, and because it would require all already-implemented component to perform checks in order to get a consistent idea of what's happening, I decided to (try to) embed the state setting mechanisms inside the simulation:. - **setDirtyValue()** on a data sets the dirty state on its owner; - **cleanDirty()** on a data looks at all its owner's data fields and if they're all clean, sets the Valid state on it; - **initVisitor() / init / bwdInit python binding** uses the MessageHandler API to verify that no msg_error has been triggered, and sets either the Valid or Invalid state on the component; - **reinit pythonBinding / the Qt GUI's ModifyObject** calls reinit, and that call is wrapped the same MessageHandling mechanism to set or unset the Valid / Invalid flag. _**LIMITATIONS**_; There is a weak link in this approach:; reinit() will NOT unset the Invalid flag from a component if it is called from elsewhere than the GUI's ModifyObject api. This can happen often: when calling reinit from a c++ program that doesn't use runSofa's GUI for instance.; In order to ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/823:1061,perform,perform,1061,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/823,1,['perform'],['perform']
Performance,"Yeah, handling the self-assignment is probably the best way out; keeping the performance and addressing the issue. Shall you go ahead, Bruno?",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/280#issuecomment-305396307:77,perform,performance,77,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/280#issuecomment-305396307,1,['perform'],['performance']
Performance,"Yes indeed I see the problem @epernod ; For sure, this has been done to encapsulate the mesh and it only applied when min and max are NOT set. So it's weird, you load a mesh to build a sparse grid over it, without respecting the dimension of the object..; Am I right ?. But such a 1% margin hard coded... hmm not sure to like it but I am not sure to find a proper way to do it (except removing this hack).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/308#issuecomment-355364637:162,load,load,162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/308#issuecomment-355364637,1,['load'],['load']
Performance,"Yes indeed it is a mistake on my part.; I am doing a Sofa_MOR tutorial and I noticed that in the launcher.py file the way to import the queue library is poorly done. Instead of importing Queue, we should instead do from queue import Queue",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2258#issuecomment-883364243:136,queue,queue,136,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2258#issuecomment-883364243,4,"['Queue', 'queue']","['Queue', 'queue']"
Performance,"Yes the method exists... but, contrary to the XML loader, the SofaPython3 scene loader does not use the setInstanciationSourceFileName to set the filename associated with the root node. ; This can be done in a simple PR at SofaPython3. . EDIT: I made a quick pr to for SofapythoN3: https://github.com/sofa-framework/SofaPython3/pull/271",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3033#issuecomment-1155095712:50,load,loader,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3033#issuecomment-1155095712,2,['load'],['loader']
Performance,"Yes, I reported that in the PR related to BaseClass refactoring.; To my understanding Sofa is ""broken by design"" on that aspect. . Broken because the code that create the class object is using template with inner static object to create a singleton. This means that in every .cpp, the templated functions are generated, but, as they have static object in them...they are actually different (which is a kind of ODR violation). This is not a real problem when all the corresponding .cpp are assembled in a single programe because the linker implements a mecanisme to detect ""the duplicated templates instances"" and pick one. But there is no such runtime ""unification"" when working with dynamically loaded shared libraries (plugin) which can cause a lot of troubles. . Changing that means refactoring the whole class introspection system.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1087#issuecomment-1050627891:696,load,loaded,696,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1087#issuecomment-1050627891,1,['load'],['loaded']
Performance,"Yes, the CI builder generating the binaries is an intel mac. This is a compatibility choice, to enable the use of our binaries by every one. ; To use them on a arm64 you need to install Rosetta on your mac to run x86 libraries. But it will not run at full speed because of the compatibility layer. To have optimized binaries for your architecture, you'll need to compile them yourself.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2082051094:306,optimiz,optimized,306,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4690#issuecomment-2082051094,1,['optimiz'],['optimized']
Performance,"You are clearly in a dev state, each time you push a commit it triggers a new build on the CI. I'll put the flag wip again until you tell me that you've finished your fixes to avoid loading the CI.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2084580463:182,load,loading,182,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4673#issuecomment-2084580463,1,['load'],['loading']
Performance,"You should not have created a SofaGuiConfig.cmake.in in `sofa/gui/qt`. This file already exists and is in `<sofa_root>/SofaGui`. See my answer to your 2nd question below. > @guparan here it is... Not 100% sure of what I did.; > Is it:; > `if(SOFAGUIQT_HAVE_NODEEDITOR)` or `if (SOFAGUIQT_ENABLE_NODEGRAPH)` ?. It's `if(SOFAGUIQT_HAVE_NODEEDITOR)` . > just another question, in your tuto why is there ZLIB dependency SofaGeneral/SofaGeneralConfig.cmake.in and not in SofaGeneralLoader/SofaGeneralLoaderConfig.cmake.in ?. Because, from CMake point of view, SofaGeneral is a package and SofaGeneralLoader is not (it's only a target). ; A CMake package is something that can be loaded with `find_package` and that defines targets (most of the time those targets are libraries to link with `target_link_libraries`).; The XXXConfig.cmake.in file defines what the XXX package must do when someone calls `find_package(XXX)`. Typically, it will `find_package` the packages needed by it's own targets. Otherwise, at configure step, CMake will see that a target's dependency cannot be found for this package. See #1198 as example. In SOFA, the packages are: ; - the 8 main packages: SofaFramework, SofaSimulation, SofaBase, SofaCommon, SofaGeneral, SofaAdvanced, SofaMisc, SofaGui.; - the plugins; - the ""pluginized"" modules (targets that have become packages)",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1187#issuecomment-546897310:674,load,loaded,674,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1187#issuecomment-546897310,1,['load'],['loaded']
Performance,"[ Follow-up of #253 ]. To sum up the ideas:; - create a manifest file @ plugin post-build; - create a configuration system where applications can find the list of plugins to load automatically at startup; - inform the user that if you want to use `<ComponentAFromPluginXXX>`, you need to add the line `<RequiredPlugin pluginName=""PluginXXX"" >`. (Everything started from:; - hard loading of SofaPython in runSofa; - in the future we want to remove ImageBMP/ImagePNG/ImageQt and use ImageCImg from the plugin CimgPlugin, and avoid to always add the RequiredPlugin line in each scene.). The Manifest file will be useful when the components in the Sofa trunk will be dispatched in several plugins (planned in the far future)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/281:174,load,load,174,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/281,2,['load'],"['load', 'loading']"
Performance,"[""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Correction)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Correction"". Failed to load: [""Sofa.Compone",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4368,load,load,4368,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,[All] Plugins finding and loading,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/913:26,load,loading,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/913,1,['load'],['loading']
Performance,[CImgPlugin] Add plugin to load images with CImg,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/185:27,load,load,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/185,1,['load'],['load']
Performance,[CentralDifferenceSolver] Benchmark optimized and unoptimized solve,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2149:36,optimiz,optimized,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2149,1,['optimiz'],['optimized']
Performance,[Collision] Optimization: it prevents the normals of the triangles to be recomputed everytime a topological change happens.; The normals of the triangles are computed only once after all the topology changes occur (on the topology::ENDING_EVENT). ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [x] builds with SUCCESS for all platforms on the CI.; - [x] does not generate new warnings.; - [x] does not generate new unit test failures.; - [ ] does not generate new scene test failures.; - [x] does not break API compatibility.; - [x] is more than 1 week old (or has fast-merge label). **Reviewers will merge only if all these checks are true.**,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/839:12,Optimiz,Optimization,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/839,1,['Optimiz'],['Optimization']
Performance,[Config] Option to enable interprocedural optimization,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3345:42,optimiz,optimization,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3345,1,['optimiz'],['optimization']
Performance,[ERROR] [PluginManager] Plugin loading failed (/home/dou/Downloads/SOFA_robosoft2022_python-3.9_Linux/plugins/SofaPython3/lib/libSofaPython3.so): libpython3.9.so.1.0: cannot open shared object file: No such file or directory,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3192:31,load,loading,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192,1,['load'],['loading']
Performance,"[ERROR]&nbsp; &nbsp;[SofaPython3::SceneLoader] Unable to completely load the scene from file 'D:/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/DefrostSofaBundle_win64_python3.8_v22.06.00-beta4/plugins/BeamAdapter/examples/python3/Cochlear-Implant-Insertion/cathter.py'.; Python exception:; &nbsp; ValueError: Object type Edge2QuadTopologicalMapping<&gt; was not created; The object is in the factory but cannot be created.; Requested template : None; Used template&nbsp; &nbsp; &nbsp; : None; Reason(s)&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; : Data attribute 'input' does not point to a valid mesh topology and none can be found in the parent node context. Thank you for your help. I found the following errors after following your reply. How to solve this problem?. 方得始终; ***@***.***. &nbsp;. ------------------&nbsp;原始邮件&nbsp;------------------; 发件人: ""sofa-framework/sofa"" ***@***.***&gt;;; 发送时间:&nbsp;2022年11月8日(星期二) 晚上7:11; ***@***.***&gt;;; ***@***.******@***.***&gt;;; 主题:&nbsp;Re: [sofa-framework/sofa] [ERROR] [WireRestShape(catheterRestShape)] EdgeSetController has no binding EdgeSetTopologyModifier. (Issue #3463). ; Hi,; ; you need to add a EdgeSetTopologyModifier in your first object:; topoLines_cath.addObject('EdgeSetTopologyModifier', name='meshLinesModif'); ; Hope it helps.; ; —; Reply to this email directly, view it on GitHub, or unsubscribe.; You are receiving this because you authored the thread.Message ID: ***@***.***&gt;",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1307081793:68,load,load,68,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3463#issuecomment-1307081793,1,['load'],['load']
Performance,[Engine.Analyze] ClusteringEngine: set correct values in load(),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3398:57,load,load,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3398,1,['load'],['load']
Performance,[FEM.Elastic] Minor refactoring and optimization in draw,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3564:36,optimiz,optimization,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3564,1,['optimiz'],['optimization']
Performance,[FEM.HyperElastic] Remove optimization based on type of matrix in StandardTetrahedralFEMForceField,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2858:26,optimiz,optimization,26,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2858,1,['optimiz'],['optimization']
Performance,[GUI.Component] Add virtualization for attachment performer,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4638:50,perform,performer,50,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4638,1,['perform'],['performer']
Performance,[GUI.performer] Add remove elements function for LineCollisionModel,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3239:5,perform,performer,5,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3239,1,['perform'],['performer']
Performance,[Helper] Make clearer from where plugins are loaded,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3109:45,load,loaded,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3109,1,['load'],['loaded']
Performance,[Helper] PluginManager: testing loading a plugin with a dependency on an other plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4464:32,load,loading,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4464,1,['load'],['loading']
Performance,[INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] ,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:7307,Load,Loaded,7307,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,[INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; ,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:2729,Load,Loaded,2729,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,[INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinea,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:2839,Load,Loaded,2839,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,[INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUI,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9449,Load,Loaded,9449,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,[INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [IN,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9318,Load,Loaded,9318,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,[IO.Mesh] Fix binary loading in case of degenerated triangles,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3084:21,load,loading,21,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3084,1,['load'],['loading']
Performance,[IO.Mesh] Fix mesh creation if load called multiple times,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3702:31,load,load,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3702,1,['load'],['load']
Performance,[LinearSystem] Cache mapped mass matrix,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4625:15,Cache,Cache,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4625,1,['Cache'],['Cache']
Performance,[Loaders] at init : loading of mesh might be done twice with new callback mechanism,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1666:1,Load,Loaders,1,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1666,2,"['Load', 'load']","['Loaders', 'loading']"
Performance,[MultiThreading] FIX Windows dll loading,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/507:33,load,loading,33,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/507,1,['load'],['loading']
Performance,[OglModel] Fix a bug crashing sofa when the textures cannot be loaded.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/474:63,load,loaded,63,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/474,1,['load'],['loaded']
Performance,[Plugin loading] Add external_directories/ in reference repositories to search for plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2927:8,load,loading,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2927,1,['load'],['loading']
Performance,"[PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugin ""wayland"" in """". (process:29694): Gtk-WARNING **: 22:14:09.328: Locale not supported by C library.; 	Using the fallback 'C' locale.; Gtk-Message: 22:14:09.408: Failed to load module ""canberra-gtk-module""; Gtk-Message: 22:14:09.409: Failed to load module ""canberra-gtk-module""; [INFO] [SofaPluginManager] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:12600,load,loaded,12600,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['load'],['loaded']
Performance,[PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:5115,Load,Loaded,5115,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"[PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8838,Load,Loaded,8838,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,[PluginManager] Switching compilation mode in VS causes wrong plugins to be loaded,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2338:76,load,loaded,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2338,1,['load'],['loaded']
Performance,"[QT] Could not load the Qt platform plugin ""xcb"" in """" even though it was found.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3486:15,load,load,15,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3486,1,['load'],['load']
Performance,[Qt] Register objects when loading from Qt,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4872:27,load,loading,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4872,1,['load'],['loading']
Performance,[Simulation.Core] RequiredPlugin: Avoid calling loadPlugin() twice on start-up,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4509:48,load,loadPlugin,48,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4509,1,['load'],['loadPlugin']
Performance,[Simulation] Change LoadFromMemory signature to remove unused parameter Size,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3376:20,Load,LoadFromMemory,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3376,1,['Load'],['LoadFromMemory']
Performance,[Simulation] Error when trying to load a non-existing file,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3677:34,load,load,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3677,1,['load'],['load']
Performance,[Simulation] Suggest required plugin in the syntax of the scene loader,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3799:64,load,loader,64,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3799,1,['load'],['loader']
Performance,[Sofa.Helper] Fix and micro-optimize AdvancedTimer,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2349:28,optimiz,optimize,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2349,1,['optimiz'],['optimize']
Performance,[Sofa.Helper] PluginManager: Add optional way to check if a plugin is init at the load stage,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2425:82,load,load,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2425,1,['load'],['load']
Performance,[Sofa.Helper] PluginManager: check if a plugin is already loaded with a different path,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2352:58,load,loaded,58,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2352,1,['load'],['loaded']
Performance,[Sofa.Type] Optimize constructor with params for sofa::type::vec,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2439:12,Optimiz,Optimize,12,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2439,1,['Optimiz'],['Optimize']
Performance,[Sofa.Type] Quat: Optimize rotate() (and inverseRotate()),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3138:18,Optimiz,Optimize,18,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3138,1,['Optimiz'],['Optimize']
Performance,[SofaAssimp] loader plugin,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/603:13,load,loader,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/603,1,['load'],['loader']
Performance,[SofaBaseMechanics] Optimize barycentric mapping initialization,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/798:20,Optimiz,Optimize,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/798,1,['Optimiz'],['Optimize']
Performance,[SofaBaseTopology] Fix Crash when loading a vtk file generated by Gmsh using TetrahedronSetTopologyContainer as container,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1008:34,load,loading,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1008,1,['load'],['loading']
Performance,[SofaBaseTopology] Fix SparseGrid obj loading + tests,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1231:38,load,loading,38,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1231,1,['load'],['loading']
Performance,[SofaBoundaryCondition] Remove optimization based on type of matrix,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2859:31,optimiz,optimization,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2859,1,['optimiz'],['optimization']
Performance,[SofaCUDA] SofaCUDANvccFlags loading fails for in-tree plugins,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2021:29,load,loading,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2021,1,['load'],['loading']
Performance,[SofaConstraint] GenericConstraintSolver: compute compliances concurrently,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1862:62,concurren,concurrently,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1862,1,['concurren'],['concurrently']
Performance,[SofaDeformable] Fix MeshSpring ForceField and Loader,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/815:47,Load,Loader,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/815,1,['Load'],['Loader']
Performance,[SofaDeformable] clean and optimize addKToMatrix,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2429:27,optimiz,optimize,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2429,1,['optimiz'],['optimize']
Performance,[SofaDistanceGrid] Set invalid state if cannot load mesh,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3400:47,load,load,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3400,1,['load'],['load']
Performance,[SofaGeneralAnimationLoop] More optimization on MechanicalMatrixMapper,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2411:32,optimiz,optimization,32,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2411,1,['optimiz'],['optimization']
Performance,[SofaGeneralLoader] Add option for transform in SphereLoader to match other loaders API,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1495:76,load,loaders,76,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1495,1,['load'],['loaders']
Performance,[SofaGeneralLoader] Allow flip normals in Gmsh and STL loaders,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1418:55,load,loaders,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1418,1,['load'],['loaders']
Performance,[SofaGraphComponent] Run SceneChecker at each load,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/938:46,load,load,46,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/938,1,['load'],['load']
Performance,[SofaGuiQt] ADD qt.conf.h for custom qt.conf loading at runtime,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1820:45,load,loading,45,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1820,1,['load'],['loading']
Performance,[SofaHelper] FIX PluginManager readFromIniFile plugin loading,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/580:54,load,loading,54,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/580,1,['load'],['loading']
Performance,[SofaHelper] GLSL: Load shader source code from a standard string,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/158:19,Load,Load,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/158,1,['Load'],['Load']
Performance,[SofaHelper] Load image using stb,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2551:13,Load,Load,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2551,1,['Load'],['Load']
Performance,[SofaHelper] Optimize use of map_ptr_stable_compare,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2105:13,Optimiz,Optimize,13,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2105,1,['Optimiz'],['Optimize']
Performance,"[SofaKernel] Add automatically the ""_d"" suffix when loading plugins in debug",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/465:52,load,loading,52,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/465,1,['load'],['loading']
Performance,[SofaKernel] Add whole program optimization (aka link-time optimization) for msvc,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1468:31,optimiz,optimization,31,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1468,2,['optimiz'],['optimization']
Performance,[SofaKernel] Clean API message for Image loading,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/503:41,load,loading,41,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/503,1,['load'],['loading']
Performance,[SofaKernel] Removing double load() in Loaders,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2094:29,load,load,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2094,2,"['Load', 'load']","['Loaders', 'load']"
Performance,[SofaKernel] Set read-only all data defined by the file loaded,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1660:56,load,loaded,56,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1660,1,['load'],['loaded']
Performance,[SofaKernel] minor cleaning in mesh loader,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1025:36,load,loader,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1025,1,['load'],['loader']
Performance,[SofaKernel][SofaLoader] Merge duplicated loader codes,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/661:42,load,loader,42,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/661,1,['load'],['loader']
Performance,[SofaLoader] ADD support to load VTK polylines in legacy formated files,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/576:28,load,load,28,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/576,1,['load'],['load']
Performance,[SofaMeshCollision] TriangleModel optimization when topology changes occur,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/839:34,optimiz,optimization,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/839,1,['optimiz'],['optimization']
Performance,[SofaMiscFEM] Small optimizations on TriangularFEMForceField (speedup ~x1.6),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2273:20,optimiz,optimizations,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2273,1,['optimiz'],['optimizations']
Performance,[SofaMiscForcefield] Small optimization in addMdx in MeshMatrixMass,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2516:27,optimiz,optimization,27,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2516,1,['optimiz'],['optimization']
Performance,"[SofaPhysicsAPI] Add methods and C bindings to load SOFA ini file, plugins and messageHandler",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3540:47,load,load,47,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3540,1,['load'],['load']
Performance,[SofaSimpleFem] Hexa FEM optimization when assembling by bloc,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2240:25,optimiz,optimization,25,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2240,1,['optimiz'],['optimization']
Performance,[SofaSimpleFem] Simplify bloc-based optimization,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2281:36,optimiz,optimization,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2281,1,['optimiz'],['optimization']
Performance,[SofaSparseSolver] SparseLDLSolver optimizations,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1996:35,optimiz,optimizations,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1996,1,['optimiz'],['optimizations']
Performance,[StateContainer] Optimize vector operations,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3284:17,Optimiz,Optimize,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3284,1,['Optimiz'],['Optimize']
Performance,[Topology.Container.Grid] trivial optimization in GridTopology,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3348:34,optimiz,optimization,34,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3348,1,['optimiz'],['optimization']
Performance,[Type] Quat: small optimization for axisToQuat(),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3559:19,optimiz,optimization,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3559,1,['optimiz'],['optimization']
Performance,[Type] Remove explicit template instantiation to restore performances,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3349:57,perform,performances,57,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3349,1,['perform'],['performances']
Performance,[VisualModel] Improve the messages when loading mesh inside VisualModel,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/778:40,load,loading,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/778,1,['load'],['loading']
Performance,[Visual] VisualModelImpl: Clean and optimize slightly ComputeNormals(),MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3805:36,optimiz,optimize,36,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3805,1,['optimiz'],['optimize']
Performance,[WARNING] [ObjectFactory] Class already registered: SurfacePressureForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TaitSurfacePressureForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TorsionForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: TorsionForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TrianglePressureForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: UniformVelocityDampingForceField<Rigid2d>; [WARNING] [ObjectFactory] Class already registered: UniformVelocityDampingForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: UniformVelocityDampingForceField<Vec1d>; [WARNING] [ObjectFactory] Class already registered: UniformVelocityDampingForceField<Vec2d>; [WARNING] [ObjectFactory] Class already registered: UniformVelocityDampingForceField<Vec3d>; [WARNING] [ObjectFactory] Class already registered: UniformVelocityDampingForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: ProjectToLineConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToLineConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPlaneConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPlaneConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec1d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec3d>; [WARNING] [ObjectFactory] Class already registered: ProjectToPointConstraint<Vec6d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec2d>; [WARNING] [ObjectFactory] Class already registered: ProjectDirectionConstraint<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:24090,Load,Loaded,24090,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,[all] Refactor the loading of Xsp files.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/918:19,load,loading,19,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/918,1,['load'],['loading']
Performance,[constraint] Update PrecomputedConstraintCorrection logs when loading compliance file,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4026:62,load,loading,62,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4026,1,['load'],['loading']
Performance,[image] Fix image_gui plugin loading,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1015:29,load,loading,29,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1015,1,['load'],['loading']
Performance,[runSofa] Fix DataWidget display Speicherleck and long loading,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1181:55,load,loading,55,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1181,1,['load'],['loading']
Performance,[runSofa] OpenGL performance droped down after release 18.12,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1070:17,perform,performance,17,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1070,1,['perform'],['performance']
Performance,[scenes] Change OglModel to use a MeshObjLoader instead of loading the mesh internally.,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1096:59,load,loading,59,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1096,1,['load'],['loading']
Performance,"[test_scene.zip](https://github.com/sofa-framework/sofa/files/8565967/test_scene.zip); ### Problem. **Description**; The problem is related to a dataset field in MeshVTKLoader, which declares object heterogeneous parts. Some time ago when it was defined using Data<> filed the data was loaded directly during init step. Now it is defined using createSofaData() method and initialized slightly later. On the other hand, in the scenes where the issue appears this dataset is used in Indices2ValuesMapper component (using @ link system), the output of which, in its turn, is used in TetrahedronFEMForceField (the same @links). So, without initialization, during init step, the ForceField just crashes. **Steps to reproduce**; runSofa -l libSofaPython3.so test_scene.py. ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::forcefield::TetrahedronFEMForceField<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::init(); sofa::simulation::InitVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::D",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:286,load,loaded,286,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['load'],['loaded']
Performance,[tools] Correction of the import of the queue library,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2572:40,queue,queue,40,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2572,1,['queue'],['queue']
Performance,\Components\solver\EulerExplicitSolver\EulerExplicitSolver.scn; examples\Components\solver\EulerExplicitSolver\EulerSymplecticSolver.scn; examples\Components\solver\NewmarkImplicitSolver.scn. [INFO] [PluginFinder] Found 9 files with deprecated:; examples\Components\interactionforcefield\BoxStiffSpringForceField.scn; examples\Components\linearsolver\FEMBAR_AsyncSparseLDLSolver.scn; examples\Components\misc\sleep\test_sleep.scn; examples\Components\misc\sleep\test_sleep2.scn; examples\Components\misc\sleep\test_sleep3.scn; examples\Components\visualmodel\OglLabel.scn; examples\Tutorials\Mappings\TutorialMappingOctopusArticulated.scn; examples\Tutorials\StepByStep\Visual\5_Visual.scn; examples\Tutorials\StepByStep\Visual\6_Visual.scn. [INFO] [PluginFinder] Found 132 files with warning:; examples\Benchmark\Analysis\constantMomentum.scn; examples\Benchmark\Performance\benchmark_cubes.scn; examples\Benchmark\Performance\BuildLCP\BuiltConstraintCorrection.scn; examples\Benchmark\Performance\BuildLCP\NonBuiltConstraintCorrection.scn; examples\Benchmark\TopologicalChanges\AffineMovementConstraint__RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\LinearMovementConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectDirectionConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToLineConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPointConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\TriangularBendingSprings_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\TriangularFEMForceField_RemovingMeshTest.scn; examples\Components\constraint\AffineMovementConstraint.scn; examples\Components\constraint\AffineMovementConstraint3D.s,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3352:1335,Perform,Performance,1335,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3352,1,['Perform'],['Performance']
Performance,\caduceus.scn; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:1089,Load,Loaded,1089,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,1,['Load'],['Loaded']
Performance,"] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libSofaPython.so; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/Example.py; [ OK ] Batch/Python_scene_test.sofa_python_scene_tests/0 (2544 ms); [ RUN ] Batch/Python_scene_test.sofa_python_scene_tests/1; [INFO] [Python_scene_test] running /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/Compliant_test/python/LambdaPropagation.py; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant.so; [INFO] [PluginManager] Loaded plugin: /home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/builds/pr/all/lib/libCompliant_gui.so; [DEPRECATED] [Compliant.Vec] Compliant's Vec.py is now deprecated (and will be deleted soon), please use numpy instead; [ERROR] [SofaPython] createObject: component 'compliance' of type 'UniformCompliance' in node 'joint'; [ERROR] [SofaPython] Object type UniformCompliance<Vec1d> creation failed; [FATAL] [SofaPython] SP_CALL_MODULEFUNC; Traceback (most recent call last):; File ""LambdaPropagation.py"", line 90, in createScene; joint = StructuralAPI.FixedRigidJoint( ""joint"", ground.node, rigid.node ); File ""/home/sofa/jenkins/workspace/ubuntu_gcc-4.8_options/src/applications/plugins/Compliant/python/Compliant/StructuralAPI.py"", line 634, in __init__; self.compliance = self.node.createObject('UniformCompliance', name='compliance', compliance=compliance); TypeError: bad argument",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320:1742,Load,Loaded,1742,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/218#issuecomment-295657320,1,['Load'],['Loaded']
Performance,] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/he,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:5863,Load,Loaded,5863,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [IN",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9381,Load,Loaded,9381,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Vec2d>; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: MouseInteractor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MechanicalStateController<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MechanicalStateController<Vec1d>; [WARNING] [ObjectFactory] Class already registered: RayCollisionModel; [WARNING] [ObjectFactory] Class already registered: RayTraceDetection; [WARNING] [ObjectFactory] Class already registered: SleepController; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [WARNING] [ObjectFactory] Class already registered: ReadState; [WARNING] [ObjectFactory] Class already registered: ReadTopology; [WARNING] [ObjectFactory] Class already registered: GIDMeshLoader; [WARNING] [ObjectFactory] Class already registered: GridMeshCreator; [WARNING] [ObjectFactory] Class already registered: InputEventReader; [WARNING] [ObjectFactory] Class already registered: MeshGmshLoader; [WARNING] [ObjectFactory] Class already registered: MeshOffLoader; [WARNING] [ObjectFactory] Class already registered: MeshSTLLoader; [WARNING] [ObjectFactory] Class already registered: MeshTrianLoader; [WARNING] [ObjectFactory] Class already registered: MeshXspLoader; [WARNING] [ObjectFactory] Class already registered: OffSequenceLoader; [WARNING] [ObjectFactory] Class already registered: SphereLoader; [WARNING] [ObjectFactory] Class already registered: StringMeshCreator; [WARNING] [ObjectFactory] Class alrea,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:28426,Load,Loaded,28426,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m2,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:4563,Load,Loaded,4563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [Plugin,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5156,Load,Loaded,5156,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4598,Load,Loaded,4598,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4186,Load,Loaded,4186,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded pl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:7989,Load,Loaded,7989,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,"] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] 7696 input positions, 3966 final vertices.; [INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```; Which indicates tthat the same loader is loading the file multiple times. With the PR it now gives:; ```; INFO] [MeshObjLoader(visual_snake_body)] Loading OBJ file: mesh/snake_body.obj; [INFO] [MeshObjLoader(visual_snake_body)] 3730 input positions, 3966 final vertices.; ```. Depends on PR #2200 ; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2201:1266,load,loader,1266,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2201,3,"['Load', 'load']","['Loading', 'loader', 'loading']"
Performance,] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m2,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:4009,Load,Loaded,4009,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Componen,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9048,Load,Loaded,9048,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"],; nbVirtualFinerLevels=3,; finestConnectivity=False,; stiffnessCoefs=[1, 0.0001, 50],; massCoefs=[1, 1, 1],; ); composite_node.addObject(""EulerImplicitSolver"", vdamping=0, rayleighMass=0, rayleighStiffness=0); composite_node.addObject(""SparseLDLSolver""); composite_node.addObject(""MechanicalObject""); composite_node.addObject(; ""HexahedronCompositeFEMForceFieldAndMass"",; drawType=""0"",; lumpedMass=False,; nbVirtualFinerLevels=2,; youngModulus=600,; poissonRatio=0.3,; method=""polar"",; density=0.1,; updateStiffnessMatrix=False,; printLog=False,; ); composite_node.addObject(""BoxROI"", box=""-5 -2.1 -10 10 -1.9 10""); composite_node.addObject(""FixedConstraint"", indices=""@BoxROI.indices""); composite_node.addObject(""LinearSolverConstraintCorrection""). collision_node = composite_node.addChild(""collision""). collision_node.addObject(""MeshOBJLoader"", name=""loader"", filename=""mesh/bubille_out.obj""); collision_node.addObject(""MeshTopology"", src=""@loader""); collision_node.addObject(""MechanicalObject"", src=""@loader""); collision_node.addObject(""HexahedronCompositeFEMMapping""); # collision_node.addObject(""TriangleCollisionModel"", group=0); collision_node.addObject(""SphereCollisionModel"", group=0, radius=0.3). visual_node = collision_node.addChild(""visual""); visual_node.addObject(""MeshOBJLoader"", name=""meshLoader_2"", filename=""mesh/bubille_out.obj"", handleSeams=True); visual_node.addObject(""OglModel"", name=""VisualBody"", src=""@meshLoader_2"", normals=""0"", color=[0.1, 0.8, 0.3, 0.6]); visual_node.addObject(""IdentityMapping"", input=""@.."", output=""@VisualBody""). soft_bead_node = composite_node.addChild(""soft bead""); soft_bead_node.addObject(""MeshOBJLoader"", name=""meshLoader_1"", filename=""mesh/bubille_in1.obj"", handleSeams=True); soft_bead_node.addObject(""OglModel"", name=""VisualBody1"", src=""@meshLoader_1"", normals=""0"", color=[1, 0, 0, 1]); soft_bead_node.addObject(""HexahedronCompositeFEMMapping"", input=""@.."", output=""@VisualBody1""). stiff_bead_node = composite_node.addChild(""stiff bead""); stif",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838:5398,load,loader,5398,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4597#issuecomment-2006525838,1,['load'],['loader']
Performance,"_(clicking on ""Edit"" you will see the whole scene description, here you only see a sub-part of it)_ ; `<Node dt=""0.04"" gravity=""0 -0.1 0"" name=""root"">; <VisualStyle displayFlags=""showVisual showCollisionModels hideBehaviorModels showForceFields showInteractionForceFields showWireframe"" />. <Node name=""Topo"">; 		<RegularGridTopology name=""RGT"" min=""-6 -6 -6"" max=""6 6 6"" n=""4 4 4"" /> ; 	 <Node name=""Surface"">; 			<!-- <MeshObjLoader name=""loader"" filename=""mesh/cube.obj"" /> -->; 			<MeshObjLoader name=""loader"" filename=""mesh/liver.obj"" />; 			<MechanicalObject name=""DOF"" src=""@loader"" showObject=""false""/> ; 		</Node>; 	</Node>. <Node name=""Cube"">; 		<EulerImplicit />; 		<CGLinearSolver iterations=""500"" name=""linear solver"" tolerance=""1.0e-9"" threshold=""1.0e-9"" />. 		<HexahedronSetTopologyContainer name=""HSTC"" src=""@../Topo/RGT"" />; 		<HexahedronSetGeometryAlgorithms name=""HSGA"" />; 		<MechanicalObject name=""DOF"" position=""@../Topo/RGT.position"" showObject=""true""/>; 		<HexahedronFEMForceField name=""HFF"" youngModulus=""20"" poissonRatio=""0.2"" />; 		<DiagonalMass totalMass=""5"" />. 		<PlaneForceField normal=""0 1 0"" d=""-7"" draw=""true""/>; 	 <Node name=""Cube"">; 	 	 <VisualStyle displayFlags=""hideWireframe"" />; 			<TriangleSetTopologyContainer name=""TSTC"" src=""@../../Topo/Surface/loader"" />; 			<TriangleSetGeometryAlgorithms name=""HSGA"" />; 			<MechanicalObject name=""DOF"" position=""@../../Topo/Surface/loader.position"" showObject=""true""/> ; 			<Triangle/>; 			<BarycentricMapping />; 		</Node>; 	</Node>. </Node>`",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/988#issuecomment-482015505:441,load,loader,441,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/988#issuecomment-482015505,5,['load'],['loader']
Performance,"_1::allocator<char> > const; &>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&) SPtr.h:57 ; #9 0x10fa5fb10 in sofa::simulation::graph::DAGSimulation::createNewNode(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) DAGSimulati; on.cpp:78; #10 0x13a45aa79 in sofa::simulation::Node::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) Node.cpp:972 ; #11 0x14a8a7f43 in sofa::simulation::SceneLoaderPY::loadSceneWithArguments(char const*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allo; cator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, boost::intrusive_ptr<sofa::simulation::Node>*) S; ceneLoaderPY.cpp:128; #12 0x14a8a6287 in sofa::simulation::SceneLoaderPY::load(char const*) SceneLoaderPY.cpp:88; #13 0x13a76cdee in sofa::simulation::Simulation::load(char const*) Simulation.cpp:472; #14 0x10f83fc80 in main Main.cpp:388; #15 0x7fffa5650234 in start (libdyld.dylib:x86_64+0x5234). 0x00013d5e5ee3 is located 0 bytes to the right of global variable '<string literal>' defined in '/Users/krasin/src/github.com/sofa-framework/sofa/src/SofaKernel/framework/sofa/core/; objectmodel/Context.cpp:37:37' (0x13d5e5ee0) of size 3; '<string literal>' is ascii string 'dt'; SUMMARY: AddressSanitizer: global-buffer-overflow Base.cpp:128 in sofa::core::objectmodel::Base::initData0(sofa::core::objectmodel::BaseData*, sofa::core::objectmodel::BaseData::BaseInitData&, char const*, char const*, unsigned int); ```. The code to blame (as pointed in the first message) is Base.cpp:128:. ```; uint32_t prefix = *(uint32_t*)name;. if (prefix == draw_prefix || prefix == show_prefix); res.group = ""Visualization"";; ```. I propose to fix it in a simple, though, not very elegant way:. ```; if (strlen(name) >= 3) {; uint32_t prefix = *(uint32_t*)name;. ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/528#issuecomment-366422566:3077,load,load,3077,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/528#issuecomment-366422566,1,['load'],['load']
Performance,"_How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:4582,load,loaded,4582,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,2,['load'],['loaded']
Performance,"_bootstrap>(219): _call_with_frames_removed; <frozen importlib._bootstrap_external>(783): exec_module; <frozen importlib._bootstrap>(686): _load_unlocked; <frozen importlib._bootstrap>(702): _load; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(171): load_source; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 20",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3315,load,loaded,3315,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['load'],['loaded']
Performance,_release/build/bin/Components/Components.py ; ModuleNotFoundError: No module named 'Sofa.Components'. At:; Components.py(4): <module>; <frozen importlib._bootstrap>(219): _call_with_frames_removed; <frozen importlib._bootstrap_external>(783): exec_module; <frozen importlib._bootstrap>(686): _load_unlocked; <frozen importlib._bootstrap>(702): _load; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(171): load_source; /opt/rh/rh-python38/root/usr/lib64/python3.8/imp.py(234): load_module; <string>(3): <module>. [ERROR] [PythonTestExtractor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Globa,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3162,load,loaded,3162,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['load'],['loaded']
Performance,_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plug,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6926,Load,Loaded,6926,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"`Data::getValue` has an overhead compared to a direct data access. If `getValue` is called millions of times, it can lead to a significative performances loss. An easy task is to identify the trivial cases where the result of `getValue` can be cached:; - Search for `getValue()[`; - Search for loops with `getValue().size()`",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3363:141,perform,performances,141,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3363,2,"['cache', 'perform']","['cached', 'performances']"
Performance,"`SparseLDLSolver` implements a built-in strategy to reduce fill-in in matrix factorization. However, `SparseLUSolver` and `SparseCholeskySolver` (see if any other) could also benefits from this strategy to dramatically improve the performances. An alternative is proposed in https://github.com/sofa-framework/sofa/pull/2501, but it's up to the user to implement fill-in reduction in the simulation scene. A build-in algorithm is preferred.",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2513:231,perform,performances,231,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2513,1,['perform'],['performances']
Performance,"```. class MatrixStructure {; public:; MatrixStructure() : version(0) {}. void updateStructure() {; // Update the matrix structure (e.g., due to user interaction); // You can update indices, dimensions, or any relevant information here; version++;; }. int getVersion() const {; return version;; }. private:; int version;; };. // Usage example:; MatrixStructure matrixStructure;. // Update the matrix structure when changes occur; matrixStructure.updateStructure();. // Check if the matrix structure has changed before performing a computation; int currentVersion = matrixStructure.getVersion();; if (currentVersion != previousVersion) {; // The matrix structure has changed, perform necessary updates; // For example, recompute matrix intersections or mappings; // ... // Update the previous version to the current one; previousVersion = currentVersion;; }; ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2687#issuecomment-1873489792:518,perform,performing,518,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2687#issuecomment-1873489792,2,['perform'],"['perform', 'performing']"
Performance,"```sh; cmake . --profiling-format=google-trace --profiling-output=cmake_trace.json; ```. and then with Chrome (I am sure there are external tools by the way), set the URL to `about://tracing` and load your JSON file within the web app. What you should obtain at the end:; ![cmake0](https://user-images.githubusercontent.com/11028016/108481271-46010700-7298-11eb-8df3-fea7300e92b6.PNG)",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1838:196,load,load,196,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1838,1,['load'],['load']
Performance,"```xml; <RequiredPlugin name=""MultiThreading""/>; <BruteForceBroadPhase/>; <BVHNarrowPhase/>; ```; loads the single threaded versions. ```xml; <RequiredPlugin name=""MultiThreading""/>; <MultiThreading.ParallelBruteForceBroadPhase/>; <MultiThreading.BVHNarrowPhase/>; ```; loads the multithreaded versions. ```xml; <Import fromPlugin=""MultiThreading"" components=""ParallelBruteForceBroadPhase"" as=""BruteForceBroadPhase""/>; <BruteForceBroadPhase/>; <BVHNarrowPhase/>; ```; loads the ParallelBruteForceBroadPhase component, not the BruteForceBroadPhase component.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-996794042:98,load,loads,98,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2512#issuecomment-996794042,3,['load'],['loads']
Performance,`examples/Benchmark/Performance/benchmark_cubes.scn` was ignored by CI due to a script issue. I'm on it :muscle:,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2646#issuecomment-1027693111:20,Perform,Performance,20,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2646#issuecomment-1027693111,1,['Perform'],['Performance']
Performance,"`handleSeams = True` was set in both cases. The main problem was that the loader was not initialized.; It worked best (also without the init) when passing the LinkPath, and not the data container itself.; So I guess this is more a thing of having example code than a bug. Where would be the best place to document an example like this?; ```; loader = visual_node.addObject(; ""MeshOBJLoader"",; filename=""mesh.obj"",; ). visual_node.addObject(; ""OglModel"",; texcoords=loader.texcoords.getLinkPath(),; texturename=""texture.png"",; ); ```",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3012#issuecomment-1148855660:74,load,loader,74,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3012#issuecomment-1148855660,3,['load'],['loader']
Performance,"`map_ptr_stable_compare` is used in the `NarrowPhase` components. In this PR:. - The use of `map_ptr_stable_compare` is optimized in `NarrowPhase` components; - `map_ptr_stable_compare` itself is a bit optimized. The benchmark results show great performances improvements at the level of the container manipulation.; However, at the level of a simulation the performances improvements are negligible. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2105:120,optimiz,optimized,120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2105,4,"['optimiz', 'perform']","['optimized', 'performances']"
Performance,"`sofa::helper::io::Mesh*` has been deprecated since many years, replace by `MeshLoader` components, it would be indeed good now to clean it up ;); The biggest chunk of work required is to remove all the `""filename""` Data still around in quite a few components (BaseMeshTopology, MechanicalObject, DiagonalMass, UniformMass, VisualModelImpl, SpringForceField, RigidMapping, RigidRigidMapping), which would be easy except that we need clear warnings if an XML is loaded still using this, as those components are used everywhere. A quick search in Sofa examples directory finds 500 instances of OglModel with a filename or fileMesh attribute...",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/42#issuecomment-261508845:461,load,loaded,461,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/42#issuecomment-261508845,1,['load'],['loaded']
Performance,"a (master version 16/01/18) it crash at runtime. > [INFO] [runSofa] No plugin will be automatically loaded; > - No custom list found at C:\sofaBuild\bin/bin/plugin_list.conf; > - No default list found at C:\sofaBuild\bin/bin/plugin_list.conf.default; > The constructor with a QGLFormat is deprecated, use the regular contructor instead.; > [ERROR] [FileRepository] File icons/back.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [FileRepository] File icons/home.png NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [ERROR] [BaseViewer] Could not create file 'C:/sofa/share/textures/SOFA_logo.bmp'; > Valid extensions: dds; > ; > [ERROR] [Image] Could not load image with extension png. Valid extensions: dds; > [ERROR] [OglModel(VisualBody)] couldn't create an image from file textures/snakeColorMap.png; > [ERROR] [OglModel(VisualBody)] 1 textures couldn't be loaded; > [ERROR] [FileRepository] File docs/runsofa.html NOT FOUND in :C:\sofaBuild\bin/share/sofa/gui/runSofa/resources/:C:\sofaBuild\bin/share/sofa/gui/qt/resources/; > [INFO] [SceneChecker] The 'APIVersion' directive is missing in the current scene. Switching to the default APIVersion level '17.06'; > [INFO] [SceneChecker] Validating node ''.; > Activate checkers:; > - SceneCheckAPIChange; > - SceneCheckDuplicatedName; > - SceneCheckMissingRequiredPlugin; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable.; > ; > [ERROR] [FileSystem::listDirectory()] C:\sofaBuild\bin/bin: error 3: Le chemin dÆaccÞs spÚcifiÚ est introuvable. Plus, I had many troubles compiling it. I have to uncheck PSL (require SofaPython), but when SofaPython is checked there is many link problems. Finally, I both unchecked them. ______________________________________________________. Suggested labels: <!--- see https://github.com/sofa-framework",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/561:1024,load,loaded,1024,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/561,1,['load'],['loaded']
Performance,a.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.L,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:2248,Load,Loaded,2248,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,a/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded pl,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6043,Load,Loaded,6043,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,a/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded p,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5905,Load,Loaded,5905,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"a/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaMatrix.dll; [INFO] [PluginManager] 72 plugins have been loaded from C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from C:/Users/gfurn/anaconda3/envs/so",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10873,Load,Loaded,10873,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,a/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/b,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:7881,Load,Loaded,7881,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,a/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/li,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7167,Load,Loaded,7167,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"a/src/share;C:/open_prj/sofa/src/examples; [INFO] [runSofa] GuiDataRepository paths = C:/open_prj/sofa/src/applications/projects/runSofa/resources;C:/open_prj/sofa/src/applications/sofa/gui/qt/resources; [INFO] [runSofa] Loading automatically plugin list in C:\open_prj\sofa\build\mmaster\applications\projects\runSofa/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaDenseSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaNonUniformFem.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/open_prj/sofa/build/mmaster/bin/Release/SofaMiscCollision.dll; [ERROR] [PluginManager] Plugin loading failed (C:/open_prj/sofa/build/mmaster/bin/Release/CGALPlugin.dll): The specified module could not be found. Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. This dll is actually present. Pleas",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1402:1762,Load,Loaded,1762,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1402,1,['Load'],['Loaded']
Performance,"a19fe for absolutely no good reasons.; It breaks a very basic functionaliy ( you can always load a library that is in your working directory ), also this change had some **interesting** side effects when basically you write a unit test which relies on; a scene file that uses a `RequiredPlugin`... that shortcoming was somewhat hidden by having all tests relying on `SofaGTest`, whose sole reason of being is to actually amend c5a19fe by populating the PluginRepository with the current working dir. Some additional functionalities are added to `RequiredPlugin` by this PR, namely the ability to specify other suffixes ( or no suffix at all ) to prepend when attemtping to load a plugin with a name hint. . # CHANGELOG ; FIX; [SofaHelper]; - Restore the `SOFA_LIBSUFFIX` behavior with msvc; - `PluginRepository` is initialized to contain the current working directory. CHANGE; [SofaHelper] ; - `PluginManager` : keep only a single version of the `loadPlugin` method. Also the method returns true; even if the plugin is already loaded. Returning false is kept only for real failures, whereby the library could ; not be loaded. If it is important to check wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ; It also gives some more advanced options to extend the plugin search. # Remarks. I do not know which version of the GUI is still in use. However I believe that the widget that can add/remove plugins to the `PluginManager` should be removed since there is no valid reason to ; keep it. I am really not sure about the current state of SofaGTestMain. It is hidden somewhere in the folder hierarchy (inside tools directory), and its existence seems to imply that you cannot write a unit test inside sofa without relying on it to ""initialise Sofa"" which is absolutely not the case. See PR #471; Instead h",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:1628,load,loaded,1628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,1,['load'],['loaded']
Performance,"a::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::graph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::doExecuteVisitor(sofa::simulation::Visitor*, bool); sofa::simulation::Simulation::initNode(sofa::simulation::Node*); sofa::simulation::Simulation::init(sofa::simulation::Node*); __libc_start_main; Segmentation fault (core dumped). **Expected behavior**; the scene has to run (When I replace dataset with dataset1 which I declared as:. diff --git a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp; index 2f00fe62dc..782ce854ce 100644; --- a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp; +++ b/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.cpp; @@ -72,6 +72,7 @@ MeshLoader::MeshLoader() : BaseLoader(); , d_rotation(initData(&d_rotation, Vec3(), ""rotation"", ""Rotation of the DOFs"")); , d_scale(initData(&d_scale, Vec3(1.0, 1.0, 1.0), ""scale3d"", ""Scale of the DOFs in 3 dimensions"")); , d_transformation(initData(&d_transformation, type::Matrix4::s_identity, ""transformation"", ""4x4 Homogeneous matrix to transform the DOFs (when present replace any)"")); + , d_dataset1(initData(&d_dataset1, ""dataset1"", ""Data from dataset"")); , d_previousTransformation(type::Matrix4::s_identity ); {; addAlias(&d_tetrahedra, ""tetras"");; @@ -184,6 +185,8 @@ void MeshLoader::clearBuffers(); getWriteOnlyAccessor(d_pyramidsGroups).clear();; getWriteOnlyAccessor(d_polygonsGroups).clear();; ; + getWriteOnlyAccessor(d_dataset1).clear();; +; doClearBuffers();; }; ; diff --git a/SofaKernel/modules/SofaCore/src/sofa/core/loader/MeshLoader.h b/Sofa",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:2663,load,loader,2663,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['load'],['loader']
Performance,"aEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setting)] Plugin not found: ""Sofa.Component.Setting"". Failed to load: [""Sofa.Component.Setting""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Solver)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Solver"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Solver""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Backward)] Plugin not found: ""Sofa.Component.ODESolver.Backward"". Failed to load: [""Sofa.Component.ODESolver.Backward""]; [ER",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:4198,load,load,4198,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,"aPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:3858,load,loaded,3858,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,2,['load'],"['load', 'loaded']"
Performance,"aVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). SofaContextAPI::loadScene method returns: success (bool) for scene: C:/Users/dhananjay/unity_projects/testSofa/Assets/SofaUnity/Scenes/SofaScenes/tissue.scn; UnityEngine.Debug:LogError (object); SofaUnityAPI.SofaContextAPI:loadScene (string) (at Assets/SofaUnity/Plugins/SofaUnityAPI/SofaContextAPI.cs:189); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:486); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). ## SofaVisualModel:Reconnect ; UnityEngine.Debug:Log (object); SofaUnity.SofaUnityRenderer:Reconnect () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaUnityRenderer.cs:109); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:495); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:4216,load,loadScene,4216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['load'],['loadScene']
Performance,a_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7063,Load,Loaded,7063,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,aconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8500,Load,Loaded,8500,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,aconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [Plu,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:5461,Load,Loaded,5461,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"act detected"". ---------------------------------------------. ### Environment. **Context**. - System: Windows 10; - Version of SOFA: Version 21.12 binary; - State: Install directory: User home directory. **Command called**. ```txt. runSofa <filename>. ```. **Env vars**; --Unchanged--; ```bash; python -c ""exec( \""import os, sys\nprint('#################')\nprint('--- sys.version ---')\nprint(sys.version)\nprint('--- PATH ---')\ntry:\n print(os.environ['PATH'])\nexcept Exception:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. Result of the command above is unapplicable, since it is a Windows system. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaNonUniformFem.dll; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaMiscForceField.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/STLIB.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SoftRobots.dll; [WARNING] [UniformMass(uniformMass1)] Unused Attribute: ""massDensity"" with value: ""0.1""; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneChe",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2651:1462,Load,Loaded,1462,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2651,1,['Load'],['Loaded']
Performance,adding some details:; this loss of performance has been remarked only when the MSVC flag `/Ob2` is not enabled (meaning it should happen only in Debug (normal) and RelWithDebInfo),MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3349#issuecomment-1263227137:35,perform,performance,35,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3349#issuecomment-1263227137,1,['perform'],['performance']
Performance,aded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/C,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:4996,Load,Loaded,4996,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,aded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Rele,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4058,Load,Loaded,4058,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"aduceus.scn""); root.init(). sofa_prefix = ""/home/jnbrunet/sources/sofa/build""; Sofa.GUIManager.setSofaPrefix(sofa_prefix); Sofa.GUIManager.setConfigDirectoryPath(sofa_prefix + ""/config""); Sofa.GUIManager.setScreenshotDirectoryPath(sofa_prefix + ""/screenshots""). Sofa.GUIManager.init(""qglviewer""); Sofa.GUIManager.createGUI(); Sofa.GUIManager.setDimension(800, 600); Sofa.GUIManager.setScene(root). Sofa.GUIManager.MainLoop(root). Sofa.GUIManager.closeGUI(); ```; ### What else this PR brings. **Plugin manager**; One of the problem arising from this feature is the duplicated loading of the python plugin: when issuing the `import Sofa` command in the python script the interpreter loads the library (SofaPython.so). If the script explicitly calls the `Sofa.loadPlugin(""SofaPython"")` command, Sofa's PluginManager will load again the same library. Example of a faulty script:; ```#!/usr/bin/python2.7; from libSofaPython import Sofa # Loads SofaPython.so in the memory; Sofa.loadPlugin(""SofaPython"") # Loads again SofaPython.so in the memory; ```; I think this brings up a wider question:. _What should happen if the same plugin/library is loaded twice or more in the memory?_. Now, most operating systems will prevent loading a library twice in the memory. On OS supporting the dlopen command, and on Windows loadLibrary command, the library will be loaded only once, but a counter is incremented each time we try to load it. This counter is decremented when we unload the plugin, and the library will be completely cleaned from the memory ONLY when this counter reach 0. On the other hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManage",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:2810,load,loadPlugin,2810,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,2,"['Load', 'load']","['Loads', 'loadPlugin']"
Performance,"ady registered: Monitor<Vec3d>; [WARNING] [ObjectFactory] Class already registered: Monitor<Vec6d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [WARNING] [ObjectFactory] Class already registered: TopologicalChangeProcessor; [WARNING] [ObjectFactory] Class already registered: TopologyChecker; [WARNING] [ObjectFactory] Default template for class TopologyBoundingTrasher already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/s",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:32764,Load,Loaded,32764,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,ager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMi,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8269,Load,Loaded,8269,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,ager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:3791,Load,Loaded,3791,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,ager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:3585,Load,Loaded,3585,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,ager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3628,Load,Loaded,3628,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"ailed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""];",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3055,load,load,3055,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,"ained now for a long time, by tinyxml2 (https://github.com/leethomason/tinyxml2/tree/master, under Z-lib license) which looks to be its successor and best candidate, as it is maintened, well packaged with cmake and available on conda-forge. ; Also, it is compatible for a future ""find package or fetch content"" mechanism in cmake. I don't know if we want to split the implementation of this additional feature for this package in another PR because if we do so, current code would need an additional required dependency to tinyxml2. ; The ""find or fetch"" cmake mechanism for this package, avoiding the requirement for this dependency to be installed, can be implemented as it:. ```; # find or fetch TinyXML2; include(FetchContent); FetchContent_Declare(; tinyxml2; URL https://github.com/leethomason/tinyxml2/archive/refs/tags/9.0.0.tar.gz; FIND_PACKAGE_ARGS NAMES TinyXML2; ); FetchContent_GetProperties(tinyxml2); if(NOT tinyxml2_POPULATED); FetchContent_Populate(tinyxml2). set(tinyxml2_SHARED_LIBS ON CACHE INTERNAL """"). add_subdirectory(${tinyxml2_SOURCE_DIR} ${tinyxml2_BINARY_DIR}); endif(); ```; However, this would required cmake >=3.24 and this call to be at a toplevel cmake (duplicating this code to replace all current calls to `find_package(TinyXML2)` does not seem desirable neither, so we might think also about how we can implement that in the cmake chain).; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4240:1213,CACHE,CACHE,1213,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4240,1,['CACHE'],['CACHE']
Performance,already registered: MeshSTLLoader; [WARNING] [ObjectFactory] Class already registered: MeshTrianLoader; [WARNING] [ObjectFactory] Class already registered: MeshXspLoader; [WARNING] [ObjectFactory] Class already registered: OffSequenceLoader; [WARNING] [ObjectFactory] Class already registered: SphereLoader; [WARNING] [ObjectFactory] Class already registered: StringMeshCreator; [WARNING] [ObjectFactory] Class already registered: VoxelGridLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [WARNING] [ObjectFactory] Class already registered: CompareState; [WARNING] [ObjectFactory] Class already registered: CompareTopology; [WARNING] [ObjectFactory] Class already registered: DataController; [WARNING] [ObjectFactory] Class already registered: DataMonitor; [WARNING] [ObjectFactory] Class already registered: DevAngleCollisionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DevMonitorManager; [WARNING] [ObjectFactory] Class already registered: DevTensionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: EvalPointsDistance<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: EvalPointsDistance<Vec3d>; [WARNING] [ObjectFactory] Class already registered: EvalSurfaceDistance<Vec3d>; [WARNING] [ObjectF,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:30006,Load,Loaded,30006,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"alright, that should fix the failing test. Although, the test doesn't reflect very well the behavior of the component. the SimpleDataEngine *must* exclusively be used in cases where the process performed the engine has to be applied no matter which datafield is set to dirty.; Currently, the engine would even be called if NO data is set to dirty, which is also the case in the core::DataEngine if there's no check performed on the DataTracker. I believe this is a mistake. I think that doUpdate() should be called iff at least 1 data field is dirty.; What do you think?. concretely, it means that in DataEngine_test.cpp, line 151 would assert FALSE",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/760#issuecomment-424285945:194,perform,performed,194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/760#issuecomment-424285945,2,['perform'],['performed']
Performance,alyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is depreca,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:9710,Load,Loaded,9710,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,an/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering3D.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Shader.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GUI.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSceneCreator.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/lib,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:7990,Load,Loaded,7990,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSystem.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:3216,Load,Loaded,3216,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"anager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compared loaded plugin instead of plugin paths. Also, we should be able to notify the PluginManager of a plugin that we loaded without him noticing (such as calling dlopen). Here is what I did:. - `PluginManager::loadPlugin` now iterates through its list of loaded plugins and check that the the plugin we want to load does not contains the same `initExternalModule` function's pointer or plugin's name as another already loaded plugin; - A plublic `PluginManager::addPlugin` that adds a plugin to the register without loading it (it must be loaded in the memory beforehand) is now available. **Supplementary python bindings**; Since me and @vmagno used this PR extensively during the past 2 months for our simulations, we added a couple of python bindings useful to us. I think this wraps up a lot of things, let me know what you guys think. ______________________________________________________; <!--- Please leave this at the end of your message -->; This PR: ; - [ ] builds with SUCCESS for all platforms on the CI.; - [ ] does not generate new warnings.; - [ ] does not generate new unit test failures.; ",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:5532,load,loaded,5532,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['load'],['loaded']
Performance,"anager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::component::forcefield::TetrahedronFEMForceField<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::init(); sofa:",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9689,Load,Loaded,9689,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"anager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/libCImgPlugin.so; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ########## SIG 11 - SIGSEGV: segfault ##########; sofa::helper::BackTrace::sig(int); sofa::comp",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:9531,Load,Loaded,9531,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"anager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [RequiredPlugin(SofaNonUniformFem)] Plugin not found: ""SofaNonUniformFem"". Failed to load: [""SofaNonUniformFem""]; [ERROR] [InfoComponent(Not created (SparseGridRamificationTopology))] Object type SparseGridRamificationTopology<> was not created; The object is not in the factory.; This component has been PLUGINIZED since SOFA v20.06. To continue using this component you need to update you scene and add <RequiredPlugin name='SofaNonUniformFem'/>. [ERROR] [SceneLoaderXML] Node initialization failed. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckColli",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9915,Load,Loaded,9915,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,"and _bwd_* functions, because of the boilerplate code. In a nutshell, there are race conditions which can be avoided if the derived class can execute only the code they are designed to execute, and nothing more. ### Proposition. I added boolean variables named `applyFwd*` and `applyBwd*`, each corresponding to the `fwd*` and `bwd*` functions. They are all set to false by default.; For example, if `applyFwdMechanicalState` is true, then the code related to `fwdMechanicalState` is executed. Remember that previously, the boilerplate code related to `fwdMechanicalState` was executed even if `fwdMechanicalState` does nothing. To change that, the derived class must set the right variables to true, so the right code is executed. For example, if a derived class wants to execute `fwdMechanicalState`, it must set `applyFwdMechanicalState` first, usually in its constructor. ### Pros. - Avoid unnecessary race conditions; - Does not execute unnecessary boilerplate code; - Simple to understand. ### Cons. - Breaks all classes derived from `BaseMechanicalVisitor`; - Forces the developers of classes derived from `BaseMechanicalVisitor` to tune booleans according the goal of the visitor.; - Runtime check of the variables. This PR is not to merge yet. IIt is suggested as an alternative to PR #1963. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1962:2380,tune,tune,2380,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1962,1,['tune'],['tune']
Performance,"and replace MapMapSparseMatrix. Continuation of #3515 . Breaking because one or two functions have been deleted (for perf reasons), especially the batch clear function. Some benchs, where constraints are supposedly the bottleneck. caduceus.scn; ```; before: 5000 iterations done in 48.2532 s ( 103.62 FPS).; after: 5000 iterations done in 22.042 s ( 226.839 FPS).; ```. TorusFall.scn; ```; before: 5000 iterations done in 47.5045 s ( 105.253 FPS).; after: 5000 iterations done in 37.8749 s ( 132.014 FPS).; ```. 3instruments_collis.scn; ```; before: 5000 iterations done in 63.3632 s ( 78.9101 FPS).; after: 5000 iterations done in 53.7899 s ( 92.9542 FPS).; ```. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/3894:219,bottleneck,bottleneck,219,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/3894,1,['bottleneck'],['bottleneck']
Performance,ang-3.5_default_release sofa$ ./build/bin/runSofa -g batch test.py; [INFO] [runSofa] Loading automatically plugin list in /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaSparseSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPreconditioner.dylib; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPython.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaMiscCollision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaAllCommonComponents.dylib; Using python: /usr/local/opt/python@2/bin/python2.7; **** sys.path ****. /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python; /usr/local/lib/python2.7/site-packa,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:3083,Load,Loaded,3083,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,1,['Load'],['Loaded']
Performance,ant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:3071,Load,Loaded,3071,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"apping, etc.; ```; ; this one is tedious but not that hard. Now if all of this can be done, a derived component class will be able to manage its data on a per-class basis, and only initialize data lazily when they are actually needed (i.e. when `findData` or `getDataFields` are called). Adding/removing data would be no-ops or errors in these derived classes. ## Performance. Changing the iteration strategy incurs an extra copy of the existing `DataVec` when accessing data, but since we are likely to iterate the vector anyways there should be no visible change in; complexity. Careful allocation on the caller side should also be able to avoid most allocations during vector copy. Finally, data iteration does not seems to happen during computationally intensive sections. Should this remain an issue, it is always possible to iterate using a callback instead, which is acceptable using c++11 lambdas/`std::function`, but probably too cumbersome using c++98. **To summarize I think the performance hit for current code path is minimal.**. On the other hand, a component using `BaseData::no_init` with per-class data managemenent potentially saves up to 6 heap allocations per data per constructor call, and a fraction of this during destruction. FYI, I counted 10 `Data` members in base class `Mapping<In, Out>` alone, `collision::Contact` has 5, `ForceField` has 7,`MechanicalObject` has around 30. This means that for every collision between two different collision models, there are _at the very least_ 50+ `Data` created, each of which can cause up to 6 heap allocations. . **That is 300+ heap allocations potentially saved for a single collision, before even doing anything.**. Now one can always argue that by grouping objects in mechanical objects one can minimize the number of contact classes, but firstly for complex scenes this is a very tedious/complex thing to do, and secondly there should be a way of not paying for features you don't use (this is c++ after all). So I think it is s",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255340923:2971,perform,performance,2971,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255340923,1,['perform'],['performance']
Performance,"ar, std::__1::char_traits<char>, std::__1::allocator<char> > const; &>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&) SPtr.h:57 ; #8 0x10f9118ec in sofa::core::objectmodel::New<sofa::simulation::graph::DAGNode>::New<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const; &>(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&&&) SPtr.h:57 ; #9 0x10fa5fb10 in sofa::simulation::graph::DAGSimulation::createNewNode(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) DAGSimulati; on.cpp:78; #10 0x13a45aa79 in sofa::simulation::Node::create(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&) Node.cpp:972 ; #11 0x14a8a7f43 in sofa::simulation::SceneLoaderPY::loadSceneWithArguments(char const*, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allo; cator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > const&, boost::intrusive_ptr<sofa::simulation::Node>*) S; ceneLoaderPY.cpp:128; #12 0x14a8a6287 in sofa::simulation::SceneLoaderPY::load(char const*) SceneLoaderPY.cpp:88; #13 0x13a76cdee in sofa::simulation::Simulation::load(char const*) Simulation.cpp:472; #14 0x10f83fc80 in main Main.cpp:388; #15 0x7fffa5650234 in start (libdyld.dylib:x86_64+0x5234). 0x00013d5e5ee3 is located 0 bytes to the right of global variable '<string literal>' defined in '/Users/krasin/src/github.com/sofa-framework/sofa/src/SofaKernel/framework/sofa/core/; objectmodel/Context.cpp:37:37' (0x13d5e5ee0) of size 3; '<string literal>' is ascii string 'dt'; SUMMARY: AddressSanitizer: global-buffer-overflow Base.cpp:128 in sofa::core::objectmodel::Base::initData0(sofa::core::objectmodel::BaseData*, sofa::core::objectmodel::BaseData::BaseInitData&, char const*, char const*, unsigned int); ```. The ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/528#issuecomment-366422566:2604,load,loadSceneWithArguments,2604,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/528#issuecomment-366422566,1,['load'],['loadSceneWithArguments']
Performance,"are now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = D:/github-clones/sofa/build/bin;D:/github-clones/sofa/build/plugins;D:/github-clones/sofa/build/bin/RelWithDebInfo; [INFO] [runSofa] DataRepository paths = D:/github-clones/sofa/src/share;D:/github-clones/sofa/src/examples;D:/github-clones/sofa/build;D:/github-clones/sofa/build; [INFO] [runSofa] GuiDataRepository paths = D:/github-clones/sofa/src/applications/projects/runSofa/resources;D:/github-clones/sofa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/S",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:5495,Load,Loaded,5495,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,are/sofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/examples:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/runSofa:/nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/share/sofa/gui/qt; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config; [ERROR] [FileSystem::createdirectory()] /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots: Permission denied; [INFO] [BaseGUI] Created directory: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Com,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:1379,Load,Loading,1379,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loading']
Performance,arseLDLSolver.scn; examples\Components\loader\GIDMeshLoader.scn; examples\Components\solver\EulerExplicitSolver\EulerExplicitSolver.scn; examples\Components\solver\EulerExplicitSolver\EulerSymplecticSolver.scn; examples\Components\solver\NewmarkImplicitSolver.scn. [INFO] [PluginFinder] Found 9 files with deprecated:; examples\Components\interactionforcefield\BoxStiffSpringForceField.scn; examples\Components\linearsolver\FEMBAR_AsyncSparseLDLSolver.scn; examples\Components\misc\sleep\test_sleep.scn; examples\Components\misc\sleep\test_sleep2.scn; examples\Components\misc\sleep\test_sleep3.scn; examples\Components\visualmodel\OglLabel.scn; examples\Tutorials\Mappings\TutorialMappingOctopusArticulated.scn; examples\Tutorials\StepByStep\Visual\5_Visual.scn; examples\Tutorials\StepByStep\Visual\6_Visual.scn. [INFO] [PluginFinder] Found 132 files with warning:; examples\Benchmark\Analysis\constantMomentum.scn; examples\Benchmark\Performance\benchmark_cubes.scn; examples\Benchmark\Performance\BuildLCP\BuiltConstraintCorrection.scn; examples\Benchmark\Performance\BuildLCP\NonBuiltConstraintCorrection.scn; examples\Benchmark\TopologicalChanges\AffineMovementConstraint__RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\FixedPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\LinearMovementConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectDirectionConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToLineConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPlaneConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\ProjectToPointConstraint_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\TriangularBendingSprings_RemovingMeshTest.scn; examples\Benchmark\TopologicalChanges\TriangularFEMForceField_RemovingMeshTest.scn; examples\Components\constraint\AffineMovementCon,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3352:1264,Perform,Performance,1264,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3352,1,['Perform'],['Performance']
Performance,"ary for macOS on macOS 11.2.3 (Big Sur) it fails with the error `Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent`. Here is the full error log:; ```; Process: runSofa-20.12.01 [50874]; Path: /Applications/runSofa.app/Contents/MacOS/bin/runSofa; Identifier: org.sofa-framework.runsofa; Version: 0; Code Type: X86-64 (Native); Parent Process: ??? [1]; Responsible: runSofa-20.12.01 [50874]; User ID: 501. Date/Time: 2021-03-13 15:57:28.167 +0100; OS Version: macOS 11.2.3 (20D91); Report Version: 12; Bridge OS Version: 5.2 (18P4347); Anonymous UUID: 5C06CC90-63AA-4BB4-D9A1-27A399A7A269. Sleep/Wake UUID: EDB34D1C-5F47-4D91-82BA-9C09AEC804F8. Time Awake Since Boot: 75000 seconds; Time Since Wake: 13000 seconds. System Integrity Protection: enabled. Crashed Thread: 0. Exception Type: EXC_CRASH (SIGABRT); Exception Codes: 0x0000000000000000, 0x0000000000000000; Exception Note: EXC_CORPSE_NOTIFY. Termination Reason: DYLD, [0x4] Symbol missing. Application Specific Information:; dyld: launch, loading dependent libraries. Dyld Error Message:; Symbol not found: __ZN13QOpenGLWidget10paintEventEP11QPaintEvent; Referenced from: /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts; Expected in: /usr/local/lib/QtWidgets.framework/QtWidgets; in /Applications/runSofa.app/Contents/MacOS/bin/../../Frameworks/QtCharts.framework/QtCharts. Binary Images:; 0x1078c4000 - 0x1078e7fff +runSofa (0) <F5377489-827F-342E-9B3B-C78AC8FFB70D> /Applications/runSofa.app/Contents/MacOS/bin/runSofa; 0x1078f7000 - 0x107916fff +libSofaSimulationGraph.20.12.01.dylib (0) <2B9D2482-ED40-3ECB-9B4A-7BB93AFEF219> /Applications/runSofa.app/Contents/MacOS/lib/libSofaSimulationGraph.20.12.01.dylib; 0x107957000 - 0x10796afff +libSofaGuiMain.20.12.01.dylib (0) <B93CBF60-CD3B-39C5-9B98-9DAF891408CC> /Applications/runSofa.app/Contents/MacOS/lib/libSofaGuiMain.20.12.01.dylib; 0x107979000 - 0x1079dcfff +libSofaValidation.20.12.01.dylib (0) <13078F67-B4BC-3C97-88E0-027C5FE",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1916:1067,load,loading,1067,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1916,1,['load'],['loading']
Performance,ase/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:5297,Load,Loaded,5297,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,atch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Forward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.Backward.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.ODESolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.Mesh.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.IO.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Playback.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SceneUtility.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Constant.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Dynamic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.Grid.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Container.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.Utility.so; [INFO] [PluginManager] Loaded plugin: /nix/s,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:2326,Load,Loaded,2326,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"b/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Co",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2409,load,load,2409,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['load'],['load']
Performance,"bSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugin ""wayland"" in """". (process:29694): Gtk-WARNING **: 22:14:09.328: Locale not supported by C library.; 	Using the fallback 'C' locale.; Gtk-Message: 22:14:09.408: Failed to load module ""canberra-gtk-module""; Gtk-Message: 22:14:09.409: Failed to load module ""canberra-gtk-module""; [INFO] [SofaPluginManager] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:11645,load,loaded,11645,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['load'],['loaded']
Performance,"backup discussion for logs:. here is the call stack of sphereLoader:; ```; SphereLoader::load; SphereLoader::load END; SphereLoader::updateFileNameAndTransformPosition; - m_filename changed: 1; - d_translation changed: 0; - d_rotation changed: 0; - d_scale changed: 0; SphereLoader::load; SphereLoader::load END; SphereLoader::applyTransform; SphereLoader::applyTransform END; SphereLoader::Callback exit with load(); ```. So as you can see the file is loaded once at parse time (because of the ```canLoad``` mechanism of the Loader) but the m_filename is still flaged as changed in the tracker so it will call the method load a second time when the Data position/radius are pulled from other components. . This was avoided in my previous version by adding ```m_internalEngine[""filename""].cleanDirty();``` at begining of the Load method. . However it is not looping anymore like in the initial version. Maybe we can say that this double call of load is special due to the Loader mechanism at parse stage (which should be replaced by a nice Data grah update...); For the log from epernod@sophia.inria.fr . Loader are loading file/mesh at parse stage to ensure they are ready and all their data are filled before any other component start linking and using the loader data. You can see it like a ""pre-init"" visitor... in comparison to the bwdInit.",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1666#issuecomment-746000345:89,load,load,89,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1666#issuecomment-746000345,14,"['Load', 'load']","['Load', 'Loader', 'load', 'loaded', 'loader', 'loading']"
Performance,"benchmark.; > ; > My guest would be that solving one big system (the merge of both objects) is slower than solving to smaller system.; > ; > However, solving two system independently should, I think, produce incorrect results as; > ; > 1. You are applying the interactions (for example, contact forces) at different solving states. For example, the first object is solved, its node positions are updated to the step t+1. Collisions are then computed. But the state of the second object is still at the time step t. Oscillation will therefore probably happen and the convergence will be delayed.; > ; > 2. In addition, the solution state with both objects merged under the same system takes into account the interaction between the two objects. For example, when both objects are merged into a same system, you can create entries inside the system matrix to create a relationship between a node in the first object and a node in the second object. This is not possible when the two objects are separated.; > ; > ; > **TLDR**: Solving two objects independently is faster than solving one big system containing both objects. However it will take longer to converge to a steady solution (in number of steps), and even probably converge to an incorrect solution. Thank you for this explanation. It makes more sense. If I understood correctly, the group manager would help the performances compared to a single system. Here, we compare to two systems (one per cube). I'll add a third scene in this benchmark with a single system, to be more rigorous. I expect the same result from ""single system"" and ""two systems + group manager"". I expect better performances only in case the two cubes are not in contact, am I right?. Can we say that the best practice would be to start the design of a simulation scene with a single system, without group manager? And if performances are poor, it can be improved with a group manager, knowing its drawbacks (such as hiding a selection of solver properties to the user).",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842964385:1406,perform,performances,1406,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089#issuecomment-842964385,3,['perform'],['performances']
Performance,bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Model.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Correction.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.Solver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Constraint.Lagrangian.so; [INFO] [PluginMan,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:5981,Load,Loaded,5981,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:10919,Load,Loaded,10919,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plu",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8099,Load,Loaded,8099,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,btw... this means that probably all MeshLoader using a callback on m_filename are loading mesh twice at start...,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-744837495:82,load,loading,82,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1495#issuecomment-744837495,1,['load'],['loading']
Performance,c-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [performance-noexcept-move-constructor](https://clang.llvm.org/extra/clang-tidy/checks/performance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [performance-type-promotion-in-math-fn](https://clang.llvm.org/extra/clang-tidy/checks/performance-type-promotion-in-math-fn.html) |; | [cppcoreguidelines-pro-type-vararg](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-vararg.html) | [performance-unnecessary-copy-initialization](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-copy-initialization.html) |; | [cppcoreguidelines-slicing](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-slicing.html) | [performance-unnecessary-value-param](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-value-param.html) |; | [cppcoreguidelines-special-member-functions](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-special-member-functions.html) | [readability-avoid-const-params-in-decls](https://clang.llvm.org/extra/clang-tidy/checks/readability-avoid-const-params-in-decls.html) |; | [fuchsia-default-arguments](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-default-arguments.html) | [readability-braces-around-statements](https://clang.llvm.org/extra/clang-tidy/checks/readability-braces-around-statements.html) |; | [fuchsia-overloaded-operator](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-overloaded-operator.html) | [readability-container-size-empty](https://clang.llvm.org/extra/clang-tidy/checks/readability-container-size-empty.html) |; | [fuchsia-virtual-inheritance](https://clang.llvm.org/extra/clang-tidy/checks/fuchsia-virtual-inheritance.html) | [readability-delete-null-pointer](https://clang.llvm.org/extra/clang-tidy/check,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:24576,perform,performance-unnecessary-value-param,24576,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-unnecessary-value-param']
Performance,"c2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [WARNING] [Qt] Detected locale ""C"" with character encoding ""ANSI_X3.4-1968"", which is not UTF-8.; Qt depends on a UTF-8 locale, and has switched to ""C.UTF-8"" instead.; If this causes problems, reconfigure your locale. See the locale(1) manual; for more information.; [WARNING] [Qt] Could not find the Qt platform plugin ""wayland"" in """". (process:29694): Gtk-WARNING **: 22:14:09.328: Locale not supported by C library.; 	Using the fallback 'C' locale.; Gtk-Message: 22:14:09.408: Failed to load module ""canberra-gtk-module""; Gtk-Message: 22:14:09.409: Failed to load module ""canberra-gtk-module""; [INFO] [SofaPluginManager] Loading automatically plugin list in /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/config/loadedPlugins.ini; [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::CompatibilityProfile); [WARNING] [Qt] qglx_findConfig: Failed to finding matching FBConfig for QSurfaceFormat(version 3.2, options QFlags<QSurfaceFormat::FormatOption>(DeprecatedFunctions), depthBufferSize -1, redBufferSize 1, greenBufferSize 1, blueBufferSize 1, alphaBufferSize -1, stencilBufferSize -1, samples -1, swapBehavior QSurfaceFormat::SingleBuffer, swapInterval 0, colorSpace QColorSpace(), profile QSurfaceFormat::Compatibility",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:12538,load,loadedPlugins,12538,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['load'],['loadedPlugins']
Performance,"c:5765; #7 0x00007ffff52a5c50 in _int_free_merge_chunk (av=0x7ffff53feca0 <main_arena>, p=0x5555567f2740, size=2619930050800); at ./malloc/malloc.c:4669; #8 0x00007ffff52a87f3 in __GI___libc_free (mem=<optimized out>) at ./malloc/malloc.c:3391; #9 0x00007ffff79b94db in std::__new_allocator<int>::deallocate (this=0x5555567f23c8, __p=0x5555567f2750, __n=57); at /usr/include/c++/13/bits/new_allocator.h:168; #10 0x00007ffff79ae098 in std::allocator_traits<std::allocator<int> >::deallocate (__n=57, __p=0x5555567f2750, ; __a=...) at /usr/include/c++/13/bits/alloc_traits.h:516; #11 std::_Vector_base<int, std::allocator<int> >::_M_deallocate (this=0x5555567f23c8, __p=0x5555567f2750, __n=57); at /usr/include/c++/13/bits/stl_vector.h:387; #12 0x00007ffff79a8bde in std::_Vector_base<int, std::allocator<int> >::~_Vector_base (this=0x5555567f23c8, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/stl_vector.h:366; #13 0x00007ffff79a4b8b in std::vector<int, std::allocator<int> >::~vector (this=0x5555567f23c8, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/stl_vector.h:735; #14 0x00007ffff5caf956 in sofa::type::vector<int, sofa::type::CPUMemoryManager<int> >::~vector (this=0x5555567f23c8, ; __in_chrg=<optimized out>) at /home/alex/Documents/sofa/Sofa/framework/Type/src/sofa/type/vector_T.h:55; #15 0x00007ffff3b58ba2 in sofa::linearalgebra::CompressedRowSparseMatrixGeneric<double, sofa::linearalgebra::CRSMechanicalPolicy>::~CompressedRowSparseMatrixGeneric (this=0x5555567f2310, __in_chrg=<optimized out>); at /home/alex/Documents/sofa/Sofa/framework/LinearAlgebra/src/sofa/linearalgebra/CompressedRowSparseMatrixGeneric.h:246; #16 0x00007ffff3b58fff in sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>::~CompressedRowSparseMatrixMechanical (this=0x5555567f2310, __in_chrg=<optimized out>); at /home/alex/Documents/sofa/Sofa/framework/LinearAlgebra/src/sofa/linearalgebra/CompressedRowSparseMatrixMechanical.h:51; #17 ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:14401,optimiz,optimized,14401,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['optimiz'],['optimized']
Performance,"cType)2, (sofa::core::VecAccess)1>, sofa::simulation::common::MechanicalOperations*); sofa::component::animationloop::FreeMotionAnimationLoop::computeFreeMotionAndCollisionDetection(sofa::core::ExecParams const*, sofa::core::ConstraintParams const&, double, sofa::core::TMultiVecId<(sofa::core::VecType)0, (sofa::core::VecAccess)1>, sofa::core::TMultiVecId<(sofa::core::VecType)0, (sofa::core::VecAccess)1>, sofa::core::TMultiVecId<(sofa::core::VecType)2, (sofa::core::VecAccess)1>, sofa::simulation::common::MechanicalOperations*); sofa::component::animationloop::FreeMotionAnimationLoop::step(sofa::core::ExecParams const*, double); sofa::simulation::node::animate(sofa::simulation::Node*, double); sofa::gui::batch::BatchGUI::mainLoop(); sofa::gui::common::GUIManager::MainLoop(boost::intrusive_ptr<sofa::simulation::Node>, char const*); __libc_start_main; ```. and with GDB:. ```; double free or corruption (out). Program received signal SIGABRT, Aborted.; __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44; Download failed: Invalid argument. Continuing without source file ./nptl/./nptl/pthread_kill.c. ; 44	./nptl/pthread_kill.c: No such file or directory.; (gdb) where; #0 __pthread_kill_implementation (no_tid=0, signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:44; #1 __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78; #2 __GI___pthread_kill (threadid=<optimized out>, signo=signo@entry=6) at ./nptl/pthread_kill.c:89; #3 0x00007ffff5242866 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #4 0x00007ffff52268b7 in __GI_abort () at ./stdlib/abort.c:79; #5 0x00007ffff5227750 in __libc_message (fmt=fmt@entry=0x7ffff53c3b34 ""%s\n"") at ../sysdeps/posix/libc_fatal.c:150; #6 0x00007ffff52a3c67 in malloc_printerr (str=str@entry=0x7ffff53c6a20 ""double free or corruption (out)""); at ./malloc/malloc.c:5765; #7 0x00007ffff52a5c50 in _int_free_merge_chunk (av=0x7ffff53feca0 <mai",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:12469,optimiz,optimized,12469,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['optimiz'],['optimized']
Performance,ce/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8369,Load,Loaded,8369,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,checks/cppcoreguidelines-pro-bounds-constant-array-index.html) | [performance-implicit-conversion-in-loop](https://clang.llvm.org/extra/clang-tidy/checks/performance-implicit-conversion-in-loop.html) |; | [cppcoreguidelines-pro-bounds-pointer-arithmetic](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-pointer-arithmetic.html) | [performance-inefficient-algorithm](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-algorithm.html) |; | [cppcoreguidelines-pro-type-const-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-const-cast.html) | [performance-inefficient-string-concatenation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-string-concatenation.html) |; | [cppcoreguidelines-pro-type-cstyle-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-cstyle-cast.html) | [performance-inefficient-vector-operation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-member-init.html) | [performance-move-const-arg](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-const-arg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [performance-move-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [performance-noexcept-move-constructor](https://clang.llvm.org/extra/clang-tidy/checks/performance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [perfor,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:22973,perform,performance-inefficient-vector-operation,22973,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-inefficient-vector-operation']
Performance,"classid is return the ClassInfo associated for a type. ; As there is a static private field in the classid function the first call is used to initialized this static structure. ; The only usage I can see of calling that explicitely is that, because of the multi-threading the initialization was not done properly.; But since c++ 11, initialization of static member is standardize offer thread-safetiness guarantees.; Se we can probably remove that. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/1906:256,multi-thread,multi-threading,256,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/1906,1,['multi-thread'],['multi-threading']
Performance,concatenation.html) |; | [cppcoreguidelines-pro-type-cstyle-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-cstyle-cast.html) | [performance-inefficient-vector-operation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-member-init.html) | [performance-move-const-arg](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-const-arg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [performance-move-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [performance-noexcept-move-constructor](https://clang.llvm.org/extra/clang-tidy/checks/performance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [performance-type-promotion-in-math-fn](https://clang.llvm.org/extra/clang-tidy/checks/performance-type-promotion-in-math-fn.html) |; | [cppcoreguidelines-pro-type-vararg](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-vararg.html) | [performance-unnecessary-copy-initialization](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-copy-initialization.html) |; | [cppcoreguidelines-slicing](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-slicing.html) | [performance-unnecessary-value-param](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-value-param.html) |; | [cppcoreguidelines-special-member-functions](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreg,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:23701,perform,performance-noexcept-move-constructor,23701,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-noexcept-move-constructor']
Performance,conda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:7652,Load,Loaded,7652,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"contains #2534 . Just restore from old repository and update the files to compile with up to date master branch. ; No optimization or cleaning done yet. In term of performances, simulation of a Beam of 3645 Hexahedra:; - CPU: ~42.2 fps; - CUDA: ~180 fps. Using those scenes : ; sofa-src/applications/plugins/SofaCUDA/examples/beam10x10x46-hexafem-implicit-CPU.scn; sofa-src/applications/plugins/SofaCUDA/examples/beam10x10x46-hexafem-implicit-CUDA.scn. ![image](https://user-images.githubusercontent.com/21199245/145564675-5c399ecc-93ab-4fee-8135-b4c1b5459e2d.png). NB: simulations were performed without rendering the forcefield.; ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2535:118,optimiz,optimization,118,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2535,3,"['optimiz', 'perform']","['optimization', 'performances', 'performed']"
Performance,"continue porting changes from old branches: https://github.com/epernod/sofa/pull/12/files. getTetrahedron(i) perform a test if i is not out of bounds.; When a function is called often and loop on the list of tetrahedra, it is best to get a ref to the array and loop on it. ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test failures.; - it does not break API compatibility.; - it is more than 1 week old (or has fast-merge label).",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4639:109,perform,perform,109,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4639,1,['perform'],['perform']
Performance,"cripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'OglModel'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). SofaContextAPI::loadScene method returns: success (bool) for scene: C:/Users/dhananjay/unity_projects/testSofa/Assets/SofaUnity/Scenes/SofaScenes/tissue.scn; UnityEngine.Debug:LogError (object); SofaUnityAPI.SofaContextAPI:loadScene (string) (at Assets/SofaUnity/Plugins/SofaUnityAPI/SofaContextAPI.cs:189); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:486); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). ## SofaVisualModel:Reconnect ; UnityEngine.Debug:Log (object); SofaUnity.SofaUnityRenderer:Reconnect () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaUnityRenderer.cs:109); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:495); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaConte",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:4009,load,loadScene,4009,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['load'],['loadScene']
Performance,"ctor] File skipped: /builds/workspace/sofa-framework/PR-2041/centos_clang-5_options_release/build/bin/Core/MyRestShapeForceField.py ; No test suite found. Make sure there is at least one class in the script that inherits from TestCase.; [INFO] [PythonTestExtractor] File 'Base.py' loaded with 10 unit tests.; [INFO] [PythonTestExtractor] File 'PythonRestShapeForceField.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'BaseData.py' loaded with 29 unit tests.; [INFO] [PythonTestExtractor] File 'DataEngine.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'BaseLink.py' loaded with 11 unit tests.; [INFO] [PythonTestExtractor] File 'BaseObject.py' loaded with 12 unit tests.; [INFO] [PythonTestExtractor] File 'Controller.py' loaded with 7 unit tests.; [INFO] [PythonTestExtractor] File 'ForceField.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'FileRepository.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Message.py' loaded with 2 unit tests.; [INFO] [PythonTestExtractor] File 'Node.py' loaded with 26 unit tests.; [INFO] [PythonTestExtractor] File 'Simulation.py' loaded with 1 unit tests.; [INFO] [PythonTestExtractor] File 'RGBAColor.py' loaded with 3 unit tests.; [INFO] [PythonTestExtractor] File 'Vec3.py' loaded with 4 unit tests.; [INFO] [PythonTestExtractor] File 'BoundingBox.py' loaded with 5 unit tests.; [==========] Running 120 tests from 1 test suite.; [----------] Global test environment set-up.; [----------] 120 tests from SofaPython3/Sofa; [INFO] [SofaPython3] Initializing with python version 3.8.6 (default, Oct 27 2020, 09:13:12) ; [GCC 9.3.1 20200408 (Red Hat 9.3.1-2)]; [INFO] [SofaPython3] Shared library name is 'libpython3.8m.so'; [ RUN ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParentOfNewData; ----------------------------------------------------------------------; Ran 1 test in 0.000s. OK; [ OK ] SofaPython3/Sofa.all_tests/0_Sofa_Core_Base_test_addExistingDataAsParent",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796:3703,load,loaded,3703,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2041#issuecomment-831157796,1,['load'],['loaded']
Performance,"cts when basically you write a unit test which relies on; a scene file that uses a `RequiredPlugin`... that shortcoming was somewhat hidden by having all tests relying on `SofaGTest`, whose sole reason of being is to actually amend c5a19fe by populating the PluginRepository with the current working dir. Some additional functionalities are added to `RequiredPlugin` by this PR, namely the ability to specify other suffixes ( or no suffix at all ) to prepend when attemtping to load a plugin with a name hint. . # CHANGELOG ; FIX; [SofaHelper]; - Restore the `SOFA_LIBSUFFIX` behavior with msvc; - `PluginRepository` is initialized to contain the current working directory. CHANGE; [SofaHelper] ; - `PluginManager` : keep only a single version of the `loadPlugin` method. Also the method returns true; even if the plugin is already loaded. Returning false is kept only for real failures, whereby the library could ; not be loaded. If it is important to check wether or not a plugin is already loaded, the result of the `pluginIsLoaded` method can be inspected beforehand. . [SofaGraphComponent] ; - `RequiredPlugin` component gives the ability to override the default suffix which is ""_d"" in debug mode. ; It also gives some more advanced options to extend the plugin search. # Remarks. I do not know which version of the GUI is still in use. However I believe that the widget that can add/remove plugins to the `PluginManager` should be removed since there is no valid reason to ; keep it. I am really not sure about the current state of SofaGTestMain. It is hidden somewhere in the folder hierarchy (inside tools directory), and its existence seems to imply that you cannot write a unit test inside sofa without relying on it to ""initialise Sofa"" which is absolutely not the case. See PR #471; Instead having a library which depends on gtest and SofaCore which ; - factorize some initialisation methods when they are actually required in the test `SetUp()` method; - provide some useful abstractions",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/487:1789,load,loaded,1789,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/487,1,['load'],['loaded']
Performance,d plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/lib/libSofaMiscCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/CImgPlugin/lib/li,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8905,Load,Loaded,8905,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,d plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Transform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Haptics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.Rendering2D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Com,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8772,Load,Loaded,8772,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"d plugins; rootNode.addObject('RequiredPlugin', name='Sofa.Component.IO.Mesh') # Needed to use components [MeshSTLLoader]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Mapping.Linear') # Needed to use components [IdentityMapping]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Mass') # Needed to use components [UniformMass]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.StateContainer') # Needed to use components [MechanicalObject]; rootNode.addObject('RequiredPlugin', name='Sofa.Component.Visual') # Needed to use components [VisualStyle]; rootNode.addObject('RequiredPlugin', name='Sofa.GL.Component.Rendering3D') # Needed to use components [OglModel]; rootNode.addObject('VisualStyle', displayFlags='showForceFields showBehaviorModels'); ; rootNode.addObject('DefaultAnimationLoop'); rootNode.addObject('DefaultVisualManagerLoop'). # Setting the timestep in seconds; rootNode.dt = 0.01; rootNode.addObject('RequiredPlugin',; pluginName='SoftRobots SofaPython3'); ; # Load the mesh file of the actuator and the plane.; rootNode.addObject('MeshSTLLoader', name='loader_actuator', filename='STL/Actuador.stl'); rootNode.addObject('MeshSTLLoader', name='loader_plane', filename='STL/plane.stl'). # Basic mechanical modelling of the actuator; actuator = rootNode.addChild('MechanicalModel'); actuator.addObject('MechanicalObject', name='actuator',; translation=[0,0,0],; showObject=True, showObjectScale=1.0,; rotation=[0.0, 0.0, 0.0]); actuator.addObject('UniformMass'). # Visual object for actuator; visual_actuator = rootNode.addChild('VisualModelActuator'); visual_actuator.addObject('OglModel', name='renderer_actuator',; src=rootNode.loader_actuator.getLinkPath(),; color=[1.0, 1.0, 1.0, 0.5]); visual_actuator.addObject('IdentityMapping',; input=actuator.actuator.getLinkPath(),; output=visual_actuator.renderer_actuator.getLinkPath()); ; ; ; # Basic mechanical modelling of the plane; plane = rootNode.addChild('MechanicalModelPlane'); plane.addObject('",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/5084:1934,Load,Load,1934,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/5084,1,['Load'],['Load']
Performance,"d with link @ now allow the use of src="""". Topologies container associated to src="""" are supposed to be filled by following topological mapping. Using src=""@"" to avoid link warning drove to an autolink where the loader refers on container itself. Modification of implicated scenes and xml accordingly.; - WorkerThread maintains a list of stealable tasks as well as a list of higher priority thread specific tasks. Remove ThreadSpecificTask (not used and redundant with new thread-specific task queues). Update Task logging.; - Adapted MultiThreading plugin to the new build system.; - SetDirectory no longer changes the system current directory (shared by all threads in the process), but uses a global variable to record the current directory to be used within Sofa. But changing to the current file's directory is needed to load Python scene. For the moment, python loader is not use with multithreading, changing directory in the loader is a temporary solution. The functioning of python scene loader need to be adapted in the futur. ### Cleans; - Streamline calls to createResponse in case no groupManager is used; - Clean warnings in Task and TaskSchedulerBoost for Multithreading plugin. ### Bugfixes; - Fix crash with multithreaded collision detection. Call `TriangleModel::getTriangleFlag` method for all triangles of the topology to force the initialization of adjacency.information in the topology before some actual collision detection code is executed.; - DDGNode should never be copied to ensure thread safe. Add private copy constructor that gives compilation error to ensure that.; - Compilation fixes for compatibility with boost 1_55. Corrected also the copyright notice.; - Fix execution freeze bug due to simultaneous and reciprocal task stealing between 2 threads (WorkerThread).; - Fix data race at startup, WorkerThread:mTaskScheduler was set by the main thread while being read by the worker thread. ______________________________________________________; <!--- Please leave th",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/215:3071,load,loader,3071,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/215,1,['load'],['loader']
Performance,"d/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/CImgPlugin.dll; Warning: Setting a new default format with a different version or profile after the global shared context is created may cause issues with context sharing.; The constructor with a QGLFormat is deprecated, use the regular contructor instead. [ERROR] [Re",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:9221,Load,Loaded,9221,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,d/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.NonUniform.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.TensorMass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Model.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Correction.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Lagrangian.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.Projective.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Constraint.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.AnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/User,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:6194,Load,Loaded,6194,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"d::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, bool, sofa::core::collision::ElementIntersector*, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:322; #11 0x7fc30024386e in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitExternalChildren(sofa::core::CollisionElementIterator const&, sofa::core::CollisionElementIterator const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:278; #12 0x7fc30024368b in sofa::component::collision::detection::algorithm::BVHNarrowPhase::visitCollisionElements(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCol",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:26787,queue,queue,26787,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['queue'],['queue']
Performance,"d_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [WARNING] [ObjectFactory] Class already registered: TopologicalChangeProcessor; [WARNING] [ObjectFactory] Class already registered: TopologyChecker; [WARNING] [ObjectFactory] Default template for class TopologyBoundingTrasher already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:32924,Load,Loaded,32924,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"de/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/runSofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/install/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaRigid/lib/libSofaRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded pl",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:2565,Load,Loaded,2565,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,ded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/l,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8591,Load,Loaded,8591,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,ded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8431,Load,Loaded,8431,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,ded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Direct.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.Preconditioner.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.LinearSolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Diffusion.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.NonLinear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.MappedMatrix.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.Spring.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SolidMechanics.FEM.HyperElastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/g,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:4457,Load,Loaded,4457,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"ded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:7432,Load,Loaded,7432,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,"different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - EulerImplicitSolver: 1 created with alias ""EulerImplicit""; - RegularGridTopology: 1 created with alias ""RegularGrid""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [ERROR] [MeshGmshLoader(export_filename)] Can't load file C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads; [INFO] [SofaViewer] QtViewer::keyPressEvent, CONTROL pressed; [ERROR] [MeshGmshLoader(export_filename)] File: 'C:/Users/jducr/Documents/Developpement/Sofa_ws/scenes/exports/membrane_7x7_quads' not found.; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins.; Your scene may not work on a sofa environment with different pre-loaded plugins.; To fix your scene and remove this warning you just need to cut & paste the following lines at the begining of your scene (if it is a .scn):; <RequiredPlugin pluginName='SofaExporter'/> <!-- Needed to use components [MeshExporter, ]-->; <RequiredPlugin pluginName='SofaGeneralSimpleFem'/> <!-- Needed to use components [HexahedralFEMForceField, ]-->. [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use w",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2451:5767,load,load,5767,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2451,1,['load'],['load']
Performance,"discovered a syntax, that exists since, well ... ever, and makes this whole PR completely useless....:. ```py; import Sofa; import os. class PyEng(Sofa.PythonScriptDataEngine):; def __init__(self, ctx, name, positions):; self.name = name; self.addNewInput('positions', datatype=""vector<Vec3d>"", value=positions, help=""test""); self.addNewOutput('average', datatype=""Vec3d"", help=""average""); ; def parse(self, arg):; pass; ; def init(self):; 	pass; ; def update(self):; value = [0, 0, 0]; for pos in self.positions:; value[0] += pos[0]; value[1] += pos[1]; value[2] += pos[2]; value[0] /= len(self.positions); value[1] /= len(self.positions); value[2] /= len(self.positions); self.cleanDirty(); self.average = [[-value[0],-value[1],-value[2]]]; pass. def createScene(rootNode):; loader = rootNode.createObject(""MeshVTKLoader"", name=""loader"", filename='mesh/liver.vtk'); psde = PyEng(rootNode, name=""PSDE"", positions=loader.findData('position').getLinkPath()); rootNode.createObject('TransformEngine', name='TE', input_position=""@loader.position"", translation=psde.findData('average').getLinkPath()); rootNode.createObject('OglModel', name=""visu"", position=""@TE.output_position"", triangles=""@loader.triangles"",; color=""1 0 0 1""); ```. With this syntax, I can create my engines definition once, and create as many as I want, on the fly, with any parameter I want for my input fields. It's actually even better, because:; - I don't have to create inputs with the fields I pass to the constructor. It could be simple data (addNewData vs addNewInput); - Construction of datafields is more explicit, thus less error-prone; - No need to go search for a decorator function somewhere in SofaPython, or to declare a dictionary of default arguments, everything is performed in the constructor. So, yeah, this PR is now virtually useless.; There's one thing I don't like with this syntax though, it's that the creation of the object is performed at the same time as it is assigned to the scene graph, which, in my o",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/743#issuecomment-417366442:1045,load,loader,1045,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/743#issuecomment-417366442,1,['load'],['loader']
Performance,ditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.StateContainer.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.Spring.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.Elastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.FEM.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.SolidMechanics.TensorMass.so; [INFO] [PluginMana,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:5245,Load,Loaded,5245,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,dy registered: ProjectDirectionConstraint<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: CubeTopology; [WARNING] [ObjectFactory] Class already registered: CylinderGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereGridTopology; [WARNI,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:24952,Load,Loaded,24952,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"e import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] This scene is using component defined in plugins but is not importing the required plugins. ; ```. When I modify the force dimension lib file libdhd.3.14.0 to libdhd.so.3, it runs. However, when running the scene, the device only recovers to a certain position on its own and then does not respond. So I want to know if the effect of this plugin is only initializing the position or can be manipulated by humans, but I have not implemented this function yet. I would be very grateful if you could help ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2629,load,loading,2629,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,1,['load'],['loading']
Performance,"e now located in Sofa.LinearAlgebra and SVDLinearSolver in SofaDenseSolver.You can remove SofaEigen2Solver from your scene, and if using SVDLinearSolver, please load SofaDenseSolver instead.; [INFO] [runSofa] PluginRepository paths = /home/sergei/Source_code/Sofa_development/Optimus/build_release:/home/sergei/Source_code/Sofa_development/SofaAuxiliaryComponents/build_release:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib; [INFO] [runSofa] DataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa:/home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/examples; [INFO] [runSofa] GuiDataRepository paths = /home/sergei/Source_code/Sofa_development/sofa/build_release/install/share/sofa/gui/qt; [INFO] [SofaPython3] Initializing with python version 3.10.4 (main, Mar 23 2022, 23:05:40) [GCC 11.2.0]; [INFO] [SofaPython3] Registering a scene loader for [.py, .py3, .pyscn, .py3scn] files.; [INFO] [SofaPython3] Shared library name is 'libpython3.1m.so'; [INFO] [SofaPython3] Intializing python; [INFO] [SofaPython3] Added '/home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/python3/site-packages' to sys.path; ---------------------------------------; Checking SOFA_ROOT and SOFAPYTHON3_ROOT; Using environment variable SOFA_ROOT: /home/sergei/Source_code/Sofa_development/sofa/build_release/install; ---------------------------------------; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/SofaPython3/build_release/lib/libSofaPython3.so; [INFO] [runSofa] Loading automatically plugin list in /home/sergei/Source_code/Sofa_development/sofa/build_release/install/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSimpleFem/lib/libSofaSimpleFem.so; [WARNING] [ObjectFactory] Cl",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:8563,load,loader,8563,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['load'],['loader']
Performance,"e raii's. In the process the old behavior of generating failure on errors was lost. . The PR mix the two and: ; - restores this old behavior by default so a test that specify nothing will fail on warning and error.; - but in addition, each tests class/function/bloc can now specify how a specific bloc can react to a message. This can be done using a new syntax taken inspired mimicking the one from gtest. ; - improve the way test failures about warning and error are reported:; https://ci.inria.fr/sofa-ci/job/ubuntu_gcc-4.8_options/5074/testReport/junit/(root)/RigidRigidMappingTest_0/test_translation/; . Example: ; ```cpp; class MyTest : public Sofa_test<>; ; /// This test will fail if a warning/error message is send because the test inherit from sofa_test; void defaultTestBehavior(); {; ....; }. /// This test should generate failure if NO warning and NO Error message is emitted; void catchingTestBehavior(); {; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;. mycomponent.load(""atotallybrokenfile.txt""); }. /// By default test failure are catched from Sofa_test. This means that the information returned; /// in the test failure are the location of the failure in Sofa_test.cpp:lineno; /// This is why it is always better to explicitely specify the test behavior (possible the same as ; /// the default one as it will report correct testname/line number information. ; void noEmitTestBehavior(); {; EXPECT_MSG_NOEMIT(Warning) ;; EXPECT_MSG_NOEMIT(Error) ;; }; ; /// Finally it is possible to narrow where the messages are expected using blocks...; void complexTestBehavior(); {; /// Here is the default mode. ; ....; {; /// We will report a failure is there no warning nor error emitted before the end of this block. ; EXPECT_MSG_EMIT(Warning) ;; EXPECT_MSG_EMIT(Error) ;; ...; { ; /// But this sub-part does not count... and it shouldn't emit a message. ; EXPECT_MSG_NOEMIT(Error) ;; .... ; }; }; }; ```. This PR will generate a lot of new test failure... that are either real failure",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/213:1419,load,load,1419,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/213,1,['load'],['load']
Performance,"e to ‘libusb_init’; dhdComUSB-libusb.cpp:(.text+0x24e)：undefined reference to ‘libusb_get_device_list’; dhdComUSB-libusb.cpp:(.text+0x297)：undefined reference to ‘libusb_get_device_descriptor’; dhdComUSB-libusb.cpp:(.text+0x2eb)：undefined reference to ‘libusb_free_device_list’; dhdComUSB-libusb.cpp:(.text+0x30c)：undefined reference to ‘libusb_exit’; ```. So I switched to using the dynamic linking SDK/lib/release/lin-x86_64-gcc/libdhd.so.3.14.0 for compilation, which compiled successfully, but the import of the plugin failed when running the scene example in the [force dimension plugin](https://gitlab.com/polyakovkrylo/forcedimensions). ```. Gtk-Message: 14:09:35.149: GtkDialog mapped without a transient parent. This is discouraged.; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions)] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; ; Failed to load: [""ForceDimensions""]; [ERROR] [InfoComponent(Not created (OmegaDriver))] Object type OmegaDriver<> was not created ; The object is not in the factory. . [ERROR] [SceneLoaderXML] Node initialization failed. . [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias]; [ERROR] [PluginManager] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory.; [ERROR] [RequiredPlugin(ForceDimensions] Plugin loading failed (/home/dell/raid/hx/sigma7_hx/sofa2012/build/lib/libForceDimensions.so): libdhd.so.3: cannot open shared object file: No such file or directory. Failed to load: [""ForceDimensions""]; [WARNING] [SceneCheckMissingRequiredPlugin] T",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229:2064,load,loading,2064,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3497#issuecomment-1323155229,1,['load'],['loading']
Performance,e/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/Sofa,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:6845,Load,Loaded,6845,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,e/sofa-framework/master/mac_clang-3.5_default_release/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaSparseSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPreconditioner.dylib; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python' to sys.path; [INFO] [SofaPython] Added '/Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python' to sys.path; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaPython.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libCImgPlugin.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaMiscCollision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/build/lib/libSofaAllCommonComponents.dylib; Using python: /usr/local/opt/python@2/bin/python2.7; **** sys.path ****. /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaTest/python; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release/src/applications/plugins/SofaPython/python; /usr/local/lib/python2.7/site-packages; /Users/sofa/jenkins/sofa-ci-dev/workspace/sofa-framework/master/mac_clang-3.5_default_release; /usr/local/Cellar/python@2/2.7.15_1/Frameworks/Python.framework,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326:3246,Load,Loaded,3246,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/531#issuecomment-407807326,1,['Load'],['Loaded']
Performance,"eData {; public:; struct no_init {};; ; protected:; BaseData(no_init) : // ...; };; ```; ; This one should be easy.; 3. Add a public `Data` constructor that only initializes value, something like:; ; ``` c++; template<class T>; class Data {; public: ; Data(BaseData::no_init, const T& value = T() ) : // ...; };; ```; ; Again, easy.; 4. Provide component constructors that do not initialize their `Data` so that optimized components can be derived:; ; ``` c++; Base::Base(BaseData::no_init) : name(BaseData::no_init), //...; BaseObject::BaseObject(BaseData::no_init) : f_listening(BaseData::no_init), //... ; ; // ... BaseMapping, Mapping, etc.; ```; ; this one is tedious but not that hard. Now if all of this can be done, a derived component class will be able to manage its data on a per-class basis, and only initialize data lazily when they are actually needed (i.e. when `findData` or `getDataFields` are called). Adding/removing data would be no-ops or errors in these derived classes. ## Performance. Changing the iteration strategy incurs an extra copy of the existing `DataVec` when accessing data, but since we are likely to iterate the vector anyways there should be no visible change in; complexity. Careful allocation on the caller side should also be able to avoid most allocations during vector copy. Finally, data iteration does not seems to happen during computationally intensive sections. Should this remain an issue, it is always possible to iterate using a callback instead, which is acceptable using c++11 lambdas/`std::function`, but probably too cumbersome using c++98. **To summarize I think the performance hit for current code path is minimal.**. On the other hand, a component using `BaseData::no_init` with per-class data managemenent potentially saves up to 6 heap allocations per data per constructor call, and a fraction of this during destruction. FYI, I counted 10 `Data` members in base class `Mapping<In, Out>` alone, `collision::Contact` has 5, `ForceField` has ",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255340923:2345,Perform,Performance,2345,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/44#issuecomment-255340923,1,['Perform'],['Performance']
Performance,e_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:7329,Load,Loaded,7329,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,eated directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/a,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1946,Load,Loaded,1946,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"ecide what is good to save or not. This is what SOFA actually does and this behave terribly. ; I see two reason for that:; - there is a lot of component that 'forgot' to set/unset the persistent values.; - it is very hard to identify what is relevant to save, IMO because what is relevant to save is a matter of context of use, a Data 'useless' for one may be very useful for someone else. . This is why I choose to do things in the reversed way and let the client code to select what to save (so that you may eventually implement dedicated widgets to let the user select what to save). . I see at least to different context of use and thus saving strategies. . For my context of use it is more important to save scenes that are as close as possible as the one written by the user. This is why I made the XML loader and the GUI have the responsability to make persistent:; - the value given explicitely in the scene file; - the value specified explicitely in the GUI via the widget or the manipulators; Despite being very simple this work very well and without any risk that some authors breaks the saving because he forgot/decide not to setPersistent(false) in his component (and this happened quite a lot in the past). For your context of use, for which saving a simulated scene is important I think a very simple solution would be to write a visitor to switch all the Data values to persistent. And I would suggest to put this feature to a different entry in the menu (what about ""Export"" or ""Dump"" ?) so that in the same application we can either save or dump the scene with very well defined semantics ? . Now about the fact that some Data editted in the UI can be incompatible with another Data. I will let that for another day because to me this is a much more general UI problem. . Finally to improve a bit the general readability in any context of use we could, when writing big chunk of numbers (like vector.size() > 20) save them in separated files leading to something like: ; <MechanicalO",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/116#issuecomment-272314495:1913,load,loader,1913,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/116#issuecomment-272314495,1,['load'],['loader']
Performance,ectFactory] Class already registered: RayTraceDetection; [WARNING] [ObjectFactory] Class already registered: SleepController; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [WARNING] [ObjectFactory] Class already registered: ReadState; [WARNING] [ObjectFactory] Class already registered: ReadTopology; [WARNING] [ObjectFactory] Class already registered: GIDMeshLoader; [WARNING] [ObjectFactory] Class already registered: GridMeshCreator; [WARNING] [ObjectFactory] Class already registered: InputEventReader; [WARNING] [ObjectFactory] Class already registered: MeshGmshLoader; [WARNING] [ObjectFactory] Class already registered: MeshOffLoader; [WARNING] [ObjectFactory] Class already registered: MeshSTLLoader; [WARNING] [ObjectFactory] Class already registered: MeshTrianLoader; [WARNING] [ObjectFactory] Class already registered: MeshXspLoader; [WARNING] [ObjectFactory] Class already registered: OffSequenceLoader; [WARNING] [ObjectFactory] Class already registered: SphereLoader; [WARNING] [ObjectFactory] Class already registered: StringMeshCreator; [WARNING] [ObjectFactory] Class already registered: VoxelGridLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPrecondit,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:29532,Load,Loaded,29532,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,"ection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:251; #13 0x7fc300243254 in sofa::component::collision::detection::algorithm::BVHNarrowPhase::processInternalCell(std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > const&, sofa::core::collision::ElementIntersector*, sofa::component::collision::detection::algorithm::BVHNarrowPhase::FinestCollision const&, std::queue<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, std::stack<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::deque<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> >, std::allocator<std::pair<std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator>, std::pair<sofa::core::CollisionElementIterator, sofa::core::CollisionElementIterator> > > > >&, sofa::core::collision::DetectionOutputVector*&) /home/pit/LocalApps/sofa/sofa/src/Sofa/Component/Collision/Detection/Algorithm/src/sofa/component/collision/detection/algorithm/BVHNarrowPhase.cpp:196; #14 0x7fc3002430a2 in sofa::component::collision::detection::algorithm::",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444:29866,queue,queue,29866,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3318#issuecomment-1256390444,1,['queue'],['queue']
Performance,"ed is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaNonUniformFem. CMake Deprecation Warning at SofaMisc/CMakeLists.txt:21 (message):; SofaMisc is deprecated.; You should now explicitely find (find_package) and link (target_link_library) each module you need within: ; SofaMiscExtra;SofaMiscEngine;SofaMiscFem;SofaMiscForceField;SofaMiscMapping;SofaMiscSolver;SofaMiscTopology""; warning is appearing. however, without crashing it get configured and generates the files. I have build the system on Visual Studio 2019 and it complies without any errors. However, when loading the RunSofa ""SofaPython"" and ""SofaExporter"" modules are not loading. I tried using the plugin manager and it reports erros that .dll file is not there. but it is there in the bin and could not add to the plugin manager. So my questions are as follows.; (1)I want to know whether do I have to change any configuration to avoid deprecation warning messages?; (2) loading the sofaphython to runSofa application ; My Cmake out put is as follows. Selecting Windows SDK version 10.0.18362.0 to target Windows 10.0.19041.; Install prefix: C:/SOFA/build/master/install; Adding module SofaGeneralVisual; Adding module SofaGraphComponent; Adding module SofaGeneralMeshCollision; Adding module SofaBoundaryCondition; Adding module SofaGeneralAnimationLoop; Adding module SofaGeneralDeformable; Adding module SofaGeneralEngine; Adding module SofaGeneralExplicitOdeSolver; Adding module SofaGeneralImplicitOdeSolver; Adding module SofaGeneralLinearSolver; Adding module SofaGeneralRigid; Adding module SofaGeneralObjectInteraction; Adding module SofaGeneralSimpleFem; Adding module SofaGeneralTopology; Adding module SofaTopologyMapping; Adding module SofaUserInteraction; Adding module SofaSparseSolver; SofaSparseSolver: using built-in metis library; Adding module SofaPreconditioner; Adding module SofaHaptics; Adding module SofaValidation; Adding module S",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1623:1221,load,loading,1221,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1623,1,['load'],['loading']
Performance,efault; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Mapping.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Utility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfu,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:2214,Load,Loaded,2214,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"elease/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [WARNING] [ObjectFactory] Class already registered: TopologicalChangeProcessor; [WARNING] [ObjectFactory] Class already registered: TopologyChecker; [WARNING] [ObjectFactory] Default template for class TopologyBoundingTrasher already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already registered: TopologyBoundingTrasher<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [WARNING] [ObjectFactory] Class already registered: GearSpringForceField<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec1d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec2d,double>; [WARNING] [ObjectFactory] Class already registered: MeshMatrixMass<Vec3d,double>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollisi",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:33407,Load,Loaded,33407,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,elines-pro-bounds-array-to-pointer-decay](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-array-to-pointer-decay.html) | [performance-for-range-copy](https://clang.llvm.org/extra/clang-tidy/checks/performance-for-range-copy.html) |; | [cppcoreguidelines-pro-bounds-constant-array-index](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-constant-array-index.html) | [performance-implicit-conversion-in-loop](https://clang.llvm.org/extra/clang-tidy/checks/performance-implicit-conversion-in-loop.html) |; | [cppcoreguidelines-pro-bounds-pointer-arithmetic](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-bounds-pointer-arithmetic.html) | [performance-inefficient-algorithm](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-algorithm.html) |; | [cppcoreguidelines-pro-type-const-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-const-cast.html) | [performance-inefficient-string-concatenation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-string-concatenation.html) |; | [cppcoreguidelines-pro-type-cstyle-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-cstyle-cast.html) | [performance-inefficient-vector-operation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-member-init.html) | [performance-move-const-arg](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-const-arg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [performance-move-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:22599,perform,performance-inefficient-string-concatenation,22599,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-inefficient-string-concatenation']
Performance,elledar; - Version of SOFA: mast branch; - State: Build Directory. **Command called**. ```txt. < COPY-PASTE YOUR COMMAND HERE >; `➜ bin ./runSofa ; [INFO] [runSofa] PluginRepository paths = /Users/hemingshan/Code/sofa/build/plugins:/Users/hemingshan/Code/sofa/build/collections:/Users/hemingshan/Code/sofa/build/lib; [INFO] [runSofa] DataRepository paths = /Users/hemingshan/Code/sofa/src/share:/Users/hemingshan/Code/sofa/src/examples:/Users/hemingshan/Code/sofa/build:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] GuiDataRepository paths = /Users/hemingshan/Code/sofa/src/applications/projects/runSofa/resources:/Users/hemingshan/Code/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.G,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:1323,Load,Loaded,1323,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,elopment/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugi,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:4781,Load,Loaded,4781,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,"em=<optimized out>) at ./malloc/malloc.c:3391; #9 0x00007ffff79b94db in std::__new_allocator<int>::deallocate (this=0x5555567f23c8, __p=0x5555567f2750, __n=57); at /usr/include/c++/13/bits/new_allocator.h:168; #10 0x00007ffff79ae098 in std::allocator_traits<std::allocator<int> >::deallocate (__n=57, __p=0x5555567f2750, ; __a=...) at /usr/include/c++/13/bits/alloc_traits.h:516; #11 std::_Vector_base<int, std::allocator<int> >::_M_deallocate (this=0x5555567f23c8, __p=0x5555567f2750, __n=57); at /usr/include/c++/13/bits/stl_vector.h:387; #12 0x00007ffff79a8bde in std::_Vector_base<int, std::allocator<int> >::~_Vector_base (this=0x5555567f23c8, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/stl_vector.h:366; #13 0x00007ffff79a4b8b in std::vector<int, std::allocator<int> >::~vector (this=0x5555567f23c8, ; __in_chrg=<optimized out>) at /usr/include/c++/13/bits/stl_vector.h:735; #14 0x00007ffff5caf956 in sofa::type::vector<int, sofa::type::CPUMemoryManager<int> >::~vector (this=0x5555567f23c8, ; __in_chrg=<optimized out>) at /home/alex/Documents/sofa/Sofa/framework/Type/src/sofa/type/vector_T.h:55; #15 0x00007ffff3b58ba2 in sofa::linearalgebra::CompressedRowSparseMatrixGeneric<double, sofa::linearalgebra::CRSMechanicalPolicy>::~CompressedRowSparseMatrixGeneric (this=0x5555567f2310, __in_chrg=<optimized out>); at /home/alex/Documents/sofa/Sofa/framework/LinearAlgebra/src/sofa/linearalgebra/CompressedRowSparseMatrixGeneric.h:246; #16 0x00007ffff3b58fff in sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>::~CompressedRowSparseMatrixMechanical (this=0x5555567f2310, __in_chrg=<optimized out>); at /home/alex/Documents/sofa/Sofa/framework/LinearAlgebra/src/sofa/linearalgebra/CompressedRowSparseMatrixMechanical.h:51; #17 0x00007fffeafdc335 in std::_Destroy<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > (__pointer=0x5555567f2310) at /usr/include/c++/13/bit",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:14593,optimiz,optimized,14593,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['optimiz'],['optimized']
Performance,emingshan/Code/sofa/build:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] GuiDataRepository paths = /Users/hemingshan/Code/sofa/src/applications/projects/runSofa/resources:/Users/hemingshan/Code/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources:/Users/hemingshan/Code/sofa/build; [INFO] [runSofa] Loading automatically plugin list in /Users/hemingshan/Code/sofa/build/lib/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Forward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.Backward.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.ODESolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.Mesh.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.IO.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Playback.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SceneUtility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Constant.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/l,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:1767,Load,Loaded,1767,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"emoveTetrahedraProcess(sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned; int> > const&, bool); sofa::component::topology::container::dynamic::TetrahedronSetTopologyModifier::removeTetrahedra(sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> >; const&, bool); sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromTriangleModel(sofa::component::collision::geometry::TriangleCollisionModel<sofa::defaulttype::StdVe; ctorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >*, sofa::type::vector<unsigned int, sofa::type::CPUMemoryManager<unsigned int> > const&) const; sofa::gui::component::performer::TopologicalChangeManager::removeItemsFromCollisionModel(sofa::core::CollisionModel*, unsigned int const&) const; sofa::gui::component::performer::RemovePrimitivePerformer<sofa::defaulttype::StdVectorTypes<sofa::type::Vec<3u, double>, sofa::type::Vec<3u, double>, double> >::execute(); sofa::gui::component::performer::BaseMouseInteractor::updatePosition(double); sofa::simulation::BehaviorUpdatePositionVisitor::processNodeTopDown(sofa::simulation::Node*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::gr; aph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std; ::pair<sofa::simulation::graph::DAGNode* const, sofa::simulation::graph::DAGNode::StatusStruct> > >&, sofa::simulation::graph::DAGNode*); sofa::simulation::graph::DAGNode::executeVisitorTopDown(sofa::simulation::Visitor*, std::__cxx11::list<sofa::simulation::graph::DAGNode*, std::allocator<sofa::simulation::gr; aph::DAGNode*> >&, std::map<sofa::simulation::graph::DAGNode*, sofa::simulation::graph::DAGNode::StatusStruct, std::less<sofa::simulation::graph::DAGNode*>, std::allocator<std; ::pair<sofa::",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3202:7103,perform,performer,7103,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3202,1,['perform'],['performer']
Performance,ent-algorithm.html) |; | [cppcoreguidelines-pro-type-const-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-const-cast.html) | [performance-inefficient-string-concatenation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-string-concatenation.html) |; | [cppcoreguidelines-pro-type-cstyle-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-cstyle-cast.html) | [performance-inefficient-vector-operation](https://clang.llvm.org/extra/clang-tidy/checks/performance-inefficient-vector-operation.html) |; | [cppcoreguidelines-pro-type-member-init](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-member-init.html) | [performance-move-const-arg](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-const-arg.html) |; | [cppcoreguidelines-pro-type-reinterpret-cast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-reinterpret-cast.html) | [performance-move-constructor-init](https://clang.llvm.org/extra/clang-tidy/checks/performance-move-constructor-init.html) |; | [cppcoreguidelines-pro-type-static-cast-downcast](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-static-cast-downcast.html) | [performance-noexcept-move-constructor](https://clang.llvm.org/extra/clang-tidy/checks/performance-noexcept-move-constructor.html) |; | [cppcoreguidelines-pro-type-union-access](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-union-access.html) | [performance-type-promotion-in-math-fn](https://clang.llvm.org/extra/clang-tidy/checks/performance-type-promotion-in-math-fn.html) |; | [cppcoreguidelines-pro-type-vararg](https://clang.llvm.org/extra/clang-tidy/checks/cppcoreguidelines-pro-type-vararg.html) | [performance-unnecessary-copy-initialization](https://clang.llvm.org/extra/clang-tidy/checks/performance-unnecessary-copy-initialization.html) |; | [cppcoreguidelines-slicing](https://clang.llvm.org/extra/c,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651:23420,perform,performance-move-constructor-init,23420,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/899#issuecomment-455504651,1,['perform'],['performance-move-constructor-init']
Performance,"ent.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(So",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:2235,load,load,2235,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,"eption:\n pass\nprint('--- SOFA_ROOT ---')\ntry:\n print(os.environ['SOFA_ROOT'])\nexcept Exception:\n pass\nprint('--- PYTHONPATH ---')\ntry:\n print(os.environ['PYTHONPATH'])\nexcept Exception:\n pass\nprint('--- sys.path ---')\ntry:\n print(str(sys.path))\nexcept Exception:\n pass\nprint('#################')\"" )""; ```. ```txt. Result of the command above is unapplicable, since it is a Windows system. ```. ---------------------------------------------. ### Logs. **Full output**. ```txt. [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaNonUniformFem.dll; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [INFO] [SceneCheckerVisitor] Finished validating node ""root"".; [WARNING] [Simulation] Default Visual Manager Loop will be used. Add DefaultVisualManagerLoop to the root node of scene file to remove this warning; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SofaMiscForceField.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/STLIB.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/timsre/SOFA/v21.12.00/bin/SoftRobots.dll; [WARNING] [UniformMass(uniformMass1)] Unused Attribute: ""massDensity"" with value: ""0.1""; [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneCheckDuplicatedName, SceneCheckMissingRequiredPlugin, SceneCheckUsingAlias, SceneCheckDeprecatedComponents, SceneCheckCollisionResponse]; [WARNING] [SceneCheckUsingAlias] This scene is using hard coded aliases. Aliases can be very confusing, use with caution.; - MeshOBJLoader: 6 created with alias ""MeshObjLoader""; [INFO] [SceneCheckerVisitor] Finished validating node ""root"". ```. **Content of build_dir/CMakeCache.txt**. Installed with the binary, so CMake wasn't used. ---------------------------------------------. PS: Please do inform me if any other in",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2651:1979,Load,Loaded,1979,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2651,1,['Load'],['Loaded']
Performance,"er hand, Sofa's plugin manager WILL call the `initExternalModule` function implemented on the library each time we load it. This can produce weird behaviors as most plugin won't handled the multiple initialization calls. _How to reproduce the problem?_. In most cases, people will use the pluginManager to load the plugin. Using this twice or more with the same plugin path will already be handled by the pluginManager which looks into its loaded plugins map to make sure we don't load a same library file more than once (using its absolute path). In other cases, a library could already be loaded into the memory by another procedure external to Sofa (such as the ""import"" command from python interpreter, a self made dlopen command, a dynamic linking from the compiler, etc.). Using the pluginManager will than failed to prevent the multiple links since its map doesn't contain the plugin yet (since the manager was not used to load it in the first place). To sum up:. Case 1; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin won't be loaded and a warning is printed to the user telling him that the plugin is already loaded; ```; Case 2; ```; > dlopen(""/path/to/myplugin.so""); Plugin loaded but not added to the PluginManager; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. Case 3; ```; > PluginManager::loadPlugin(""/path/to/myplugin.so""); Plugin loaded and added to the PluginManager plugins map; > PluginManager::loadPlugin(""/DIFFERENT/path/to/myplugin.so""); Plugin will be loaded a second time by the PluginManager, this should be prevented; ```. _How did I fixed this_; This is one way of doing it. If you have other ideas/suggestions, please tell me.; Since in most of the plugins we have, we define a `getModuleName` and `getModuleVersion`, we should use them to compare",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/572:4419,load,loadPlugin,4419,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/572,1,['load'],['loadPlugin']
Performance,er.Dynamic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.Grid.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Container.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.Utility.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Topology.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Visual.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Iterative.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Direct.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.Preconditioner.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.LinearSolver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Diffusion.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spri,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:3192,Load,Loaded,3192,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"er.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [RequiredPlugin(Sofa.Component.Mass)] Plugin not found: ""Sofa.Component.Mass"". Failed to load: [""Sofa.Component.Mass""]; [ERROR] [RequiredPlugin(Sofa.Component.SceneUtility)] Plugin not found: ""Sofa.Component.SceneUtility"". Failed to load: [""Sofa.Component.SceneUtility""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Projective)] Plugin not found: ""Sofa.Component.Constraint.Projective"". Failed to load: [""Sofa.Component.Constraint.Projective""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Direct)] Plugin not found: ""Sofa.Component.LinearSolver.Direct"". Failed to load: [""Sofa.Component.LinearSolver.Direct""]; [ERROR] [RequiredPlugin(SofaGeneralRigid)] Plugin not found: ""SofaGeneralRigid"". Failed to load: [""SofaGeneralRigid""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Algorithm)] Plugin not found: ""Sofa.Component.Collision.Detection.Algorithm"". Failed to load: [""Sofa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [R",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:1921,load,load,1921,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,er; 4 	 8 	 1 	 0 	 0.01	 0 	 0 	 0 	 0 	....ComputeBBox: SofaMeshCollision; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaTopologyMapping; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: SofaLoader; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: visualStyle1; 4 	 8 	 1 	 0 	 0.02	 0 	 0 	 0 	 0 	....ComputeBBox: defaultPipeline1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bruteForceBroadPhase1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: bVHNarrowPhase1; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: Proximity; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: Response; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: GroupManager; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: defaultAnimationLoop; 4 	 8 	 1 	 0 	 0.01	 0 	 0 	 0 	 0 	....ComputeBBox: defaultVisualManagerLoop; 3 	 8 	 1 	 0.01	 0.07	 0.01	 0 	 0.01	 0.11	...BoundingBoxVisitor - ProcessTopDown: Floor; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: loader; 4 	 8 	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: meshTopology1; 4 	 8.01	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: mObject1; 4 	 8.01	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: triangleCollisionModel3; 4 	 8.01	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: lineCollisionModel3; 4 	 8.01	 1 	 0 	 0 	 0 	 0 	 0 	 0 	....ComputeBBox: pointCollisionModel3; 3 	 8.01	 1 	 0 	 0 	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 5$!%4942@362!91; 4 	 8.01	 55.02	 0 	 0.01	 0 	 0 	 0.01	 0.07	....ComputeBBox: unnamed; 3 	 10.30	 0 	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessTopDown: !%6#67064322$79; 3 	 8.01	 1 	 0 	 0 	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 415253259$047%@; 3 	 8.01	 1 	 0 	 0 	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 8595%691#!%4%%3; 3 	 10.30	 0 	 0 	 0 	 0 	 0 	 0 	 0 	...BoundingBoxVisitor - ProcessTopDown: 69477@%1#334733; 3 	 8.02	 1 	 0 	 0 	 0 	 0 	 0 	 0.02	...BoundingBoxVisitor - ProcessTopDown: 5632%!$$3287602; 3,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/2089:20684,load,loader,20684,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/2089,1,['load'],['loader']
Performance,er; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [WARNING] [ObjectFactory] Class already registered: RecordedCamera; [WARNING] [ObjectFactory] Class already registered: VisualTransform; [WARNING] [ObjectFactory] Class already registered: Visual3DText; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [WARNING] [ObjectFactory] Class already registered: AddFrameButtonSetting; [WARNING] [ObjectFactory] Class already registered: AddRecordedCameraButtonSetting; [WARNING] [ObjectFactory] Class already registered: StartNavigationButtonSetting; [WARNING] [ObjectFactory] Class already registered: AttachBodyButtonSetting; [WARNING] [ObjectFactory] Class already registered: FixPickedParticleButtonSetting; [WARNING] [ObjectFactory] Class already registered: Gravity; [WARNING] [ObjectFactory] Class already registered: PauseAnimationOnEvent; [WARNING] [ObjectFactory] Class already registered: SofaDefaultPathSetting; [WARNING] [ObjectFactory] Class already registered: StatsSetting; [WARNING] [ObjectFactory] Class already registered: ViewerSetting; [WARNING] [ObjectFactory] Class already registered: APIVersion; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [WARNING] [ObjectFactory] Class already registered: DirectSAP; [WARNING] [ObjectFactory] Class already registered: DirectSAPNarrowPhase; [WARNING] [ObjectFactory] Class already registered: IncrSAP; [WARNING] [ObjectFactory] Class already registered: RayTraceNarrowPhase; [WARNING] [ObjectFactory] Class already registered: TriangleOctreeModel; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCol,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:14360,Load,Loaded,14360,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,er] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Mapper.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.Contact.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Response.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Setting.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Controller.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Analyze.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Generate.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Select.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.Transform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Engine.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Haptics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.GL.Component.Rendering2D.dylib; [INFO] [PluginManager] Load,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:7195,Load,Loaded,7195,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,er] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.Linear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.NonLinear.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.MappedMatrix.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Mapping.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.Spring.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.Elastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.HyperElastic.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:4633,Load,Loaded,4633,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,er] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/So,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8111,Load,Loaded,8111,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,er] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaValidation/lib/libSofaValidation.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDenseSolver/lib/libSofaDenseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaNonUniformFem/lib/libSofaNonUniformFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaOpenglVisual/lib/libSofaOpenglVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscTopology/lib/libSofaMiscTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscExtra/lib/libSofaMiscExtra.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscForceField/lib/libSofaMiscForceField.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscEngine/lib/libSofaMiscEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscSolver/lib/libSofaMiscSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscFem/lib/libSofaMiscFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscMapping/lib/libSofaMiscMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMiscCollision/li,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:8751,Load,Loaded,8751,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,er] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Topology.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Visual.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSystem.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Iterative.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Ordering.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Direct.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.Preconditioner.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.LinearSolver.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mass.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Diffusion.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.Linear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.NonLinear.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.MappedMatrix.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Mapping.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:4301,Load,Loaded,4301,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"er] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaConstraint.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExporter.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSparseSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaPreconditioner.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaHaptics.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDenseSolver.dll; [ERROR] [PluginManager] Plugin not found: ""SofaNonUniformFem""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaOpenglVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscExtra.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscForceField.dll; [ERROR] [PluginManager] Plugin not found: ""SofaMiscEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMiscSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithD",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:8631,Load,Loaded,8631,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,eralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaTopologyMapping/lib/libSofaTopologyMapping.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaUserInteraction/lib/libSofaUserInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaConstraint/lib/libSofaConstraint.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/so,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:6161,Load,Loaded,6161,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,eralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralEngine/lib/libSofaGeneralEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralExplicitOdeSolver/lib/libSofaGeneralExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralImplicitOdeSolver/lib/libSofaGeneralImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLinearSolver/lib/libSofaGeneralLinearSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralRigid/lib/libSofaGeneralRigid.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralObjectInteraction/lib/libSofaGeneralObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralSimpleFem/lib/libSofaGeneralSimpleFem.so; [WARNING] [ObjectFactory] Class already registered: CubeTopology; [WARNING] [ObjectFactory] Class already registered: CylinderGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereGridTopology; [WARNING] [ObjectFactory] Class already registered: SphereQuadTopology; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralTopology/lib/libSofaGeneralTopology.so; [WARNING] [ObjectFactory] Class already registered: CenterPointTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Edge2QuadTopologicalMapping; [WARNING] [ObjectFactory] Class already registered: Hexa2QuadTopologicalMapping; [WARNING] [ObjectFactory] Class already r,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:25470,Load,Loaded,25470,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,ergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [WARNING] [ObjectFactory] Class already registered: PenalityContactForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [WARNING] [ObjectFactory] Class already registered: LineCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PointCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TriangleCollisionModel<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [WARNING] [ObjectFactory] Class already registered: MeshOBJLoader; [WARNING] [ObjectFactory] Class already registered: MeshVTKLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [WARNING] [ObjectFactory] Class already registered: RecordedCamera; [WARNING] [ObjectFactory] Class already registered: VisualTransform; [WARNING] [ObjectFactory] Class already registered: Visual3DText; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [WARNING] [ObjectFactory] Class already registered: AddFrameButtonSetting; [WARNING] [ObjectFa,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:12562,Load,Loaded,12562,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,ergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralVisual/lib/libSofaGeneralVisual.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGraphComponent/lib/libSofaGraphComponent.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralMeshCollision/lib/libSofaGeneralMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaBoundaryCondition/lib/libSofaBoundaryCondition.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralAnimationLoop/lib/libSofaGeneralAnimationLoop.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralDeformable/lib/libSofaGeneralDeformable.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_c,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918:4279,Load,Loaded,4279,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897#issuecomment-1111187918,1,['Load'],['Loaded']
Performance,ers/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.NonUniform.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.FEM.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.TensorMass.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.SolidMechanics.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.StateContainer.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Model.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Correction.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.Solver.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Lagrangian.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.Projective.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Constraint.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.AnimationLoop.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.MechanicalLoad.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Geometry.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Algorithm.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa/build/lib/libSofa.Component.Collision.Detection.Intersection.dylib; [INFO] [PluginManager] Loaded plugin: /Users/hemingshan/Code/sofa,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3425:5505,Load,Loaded,5505,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3425,1,['Load'],['Loaded']
Performance,"es\PuTTY\;D:\Python38;D:\Program Files\AdoptOpenJDK\jdk-11.0.6.10-hotspot;D:\Program Files\qemu;D:\Program Files\OpenVPN\bin;D:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;D:\Program Files\dotnet\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;D:\Program Files\Meson\;D:\bin;C:\Program Files (x86)\Windows Live\Shared;D:\Program Files\AdoptOpenJDK\jdk-11.0.6.10-hotspot\bin;D:\Program Files\nodejs\;C:\ProgramData\chocolatey\bin;D:\Program Files\WireGuard\;D:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;D:\Program Files\Microsoft SQL Server\120\Tools\Binn\;D:\Program Files\Microsoft SQL Server\120\DTS\Binn\;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;D:\Program Files\Docker\Docker\resources\bin;C:\ProgramData\DockerDesktop\version-bin;D:\Program Files\Microsoft SQL Server\150\Tools\Binn\;D:\Program Files\CMake\bin;D:\glslang\bin;D:\go1.18.2\go\bin;D:\Strawberry\c\bin;D:\Strawberry\perl\site\bin;D:\Strawberry\perl\bin;D:\Qt\5.15.2\msvc2019_64\bin;D:\Qt\5.15.2\msvc2019_64\lib;D:\local\boost_1_79_0\lib64-msvc-14.3;D:\local\boost_1_79_0;D:\Ruby31-x64\bin;D:\Users\Manas\.cargo\bin;C:\Users\Manas\AppData\Local\Microsoft\WindowsApps;D:\Program Files\Intel\WiFi\bin\;D:\Program Files\Common Files\Intel\WirelessCommon\;D:\Users\Manas\AppData\Local\Programs\Microsoft VS Code\bin;D:\Users\Manas\AppData\Local\Programs\espanso;C:\Users\Manas\.dotnet\tools;C:\Users\Manas\AppData\Roaming\npm;D:\MinGW\bin;; --- SOFA_ROOT ---; --- PYTHONPATH ---; --- sys.path ---; ['', 'C:\\Python310\\python310.zip', 'C:\\Python310\\DLLs', 'C:\\Python310\\lib', 'C:\\Python310', 'C:\\Users\\Manas\\AppData\\Roaming\\Python\\Python310\\site-packages', 'C:\\Python310\\lib\\site-packages', 'C:\\Python310\\lib\\site-packages\\win32', 'C:\\Python310\",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:3153,Perform,Performance,3153,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Perform'],['Performance']
Performance,"eshXspLoader; [WARNING] [ObjectFactory] Class already registered: OffSequenceLoader; [WARNING] [ObjectFactory] Class already registered: SphereLoader; [WARNING] [ObjectFactory] Class already registered: StringMeshCreator; [WARNING] [ObjectFactory] Class already registered: VoxelGridLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaGeneralLoader/lib/libSofaGeneralLoader.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExporter/lib/libSofaExporter.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaSparseSolver/lib/libSofaSparseSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaPreconditioner/lib/libSofaPreconditioner.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaHaptics/lib/libSofaHaptics.so; [WARNING] [ObjectFactory] Class already registered: CompareState; [WARNING] [ObjectFactory] Class already registered: CompareTopology; [WARNING] [ObjectFactory] Class already registered: DataController; [WARNING] [ObjectFactory] Class already registered: DataMonitor; [WARNING] [ObjectFactory] Class already registered: DevAngleCollisionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: DevMonitorManager; [WARNING] [ObjectFactory] Class already registered: DevTensionMonitor<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: EvalPointsDistance<Rigid3d>; [WARNING] [ObjectFactory] Class already registered: EvalPointsDistance<Vec3d>; [WARNING] [ObjectFactory] Class already registered: EvalSurfaceDistance<Vec3d>; [WARNING] [ObjectFactory] Default template for class ExtraMonitor already registered (Vec3d), do not register Vec3d as the default; [WARNING] [ObjectFactory] Class already reg",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:30170,Load,Loaded,30170,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,esponse.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Collision.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Setting.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Controller.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Analyze.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Generate.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so;,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:9530,Load,Loaded,9530,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"essedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSM--Type <RET> for more, q to quit, c to continue without paging--; echanicalPolicy> > > > >::~_Rb_tree (this=0x7fffffffabc8, __in_chrg=<optimized out>); at /usr/include/c++/13/bits/stl_tree.h:986; #32 0x00007fffeaeb0f4e in std::map<sofa::core::behavior::BaseMechanicalState*, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> >, std::less<sofa::core::behavior::BaseMechanicalState*>, std::allocator<std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > > > >::~map (; this=0x7fffffffabc8, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/stl_map.h:314; #33 0x00007fffeaeb0f72 in sofa::component::linearsystem::MappingJacobians<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> >::~MappingJacobians (this=0x7fffffffabc0, ; __in_chrg=<optimized out>); at /home/alex/Documents/sofa/Sofa/Component/LinearSystem/src/sofa/component/linearsystem/MappingGraph.h:152; #34 0x00007fffeae78798 in sofa::component::linearsystem::MatrixLinearSystem<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, sofa::linearalgebra::FullVector<double> >::projectMappedMatrices (this=0x5555560c5fb0, mparams=0x7fffffffb750); at /home/alex/Documents/sofa/Sofa/Component/LinearSystem/src/sofa/component/linearsystem/MatrixLinearSystem.inl:974; #35 0x00007fffeae791d8 in sofa::component::linearsystem::MatrixLinearSystem<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, sofa::linearalgebra::FullVector<double> >::assembleMappedMatrices (this=0x5555560c5fb0, mparams=0x7fffffffb750); at /home/alex/Documents/sofa/Sofa/Component/LinearSystem/src/sofa/component/linearsystem/MatrixLinearS",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:23615,optimiz,optimized,23615,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['optimiz'],['optimized']
Performance,"essedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > >, std::_Select1st<std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > > >, std::less<sofa::core::behavior::BaseMechanicalState*>, std::allocator<std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSM--Type <RET> for more, q to quit, c to continue without paging--; echanicalPolicy> > > > >::~_Rb_tree (this=0x7fffffffabc8, __in_chrg=<optimized out>); at /usr/include/c++/13/bits/stl_tree.h:986; #32 0x00007fffeaeb0f4e in std::map<sofa::core::behavior::BaseMechanicalState*, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> >, std::less<sofa::core::behavior::BaseMechanicalState*>, std::allocator<std::pair<sofa::core::behavior::BaseMechanicalState* const, std::shared_ptr<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> > > > >::~map (; this=0x7fffffffabc8, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/stl_map.h:314; #33 0x00007fffeaeb0f72 in sofa::component::linearsystem::MappingJacobians<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy> >::~MappingJacobians (this=0x7fffffffabc0, ; __in_chrg=<optimized out>); at /home/alex/Documents/sofa/Sofa/Component/LinearSystem/src/sofa/component/linearsystem/MappingGraph.h:152; #34 0x00007fffeae78798 in sofa::component::linearsystem::MatrixLinearSystem<sofa::linearalgebra::CompressedRowSparseMatrixMechanical<double, sofa::linearalgebra::CRSMechanicalPolicy>, sofa::linearalgebra::FullVector<double> >::projectMappedMatrices (this=0x5555560c5fb0, mparams=0x7fffffffb750); at /home/alex/Documents/sofa/Sofa/Component/LinearS",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105:23319,optimiz,optimized,23319,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4443#issuecomment-1900616105,1,['optimiz'],['optimized']
Performance,"estroy () (at Assets/SofaUnity/Scripts/SofaContext.cs:251); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). SofaContext::OnDestroy stop now.; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:OnDestroy () (at Assets/SofaUnity/Scripts/SofaContext.cs:256); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). ReconnectSofaScene; UnityEngine.Debug:Log (object); SofaUnity.SofaContext:ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:480); SofaUnity.SofaContext:Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext:StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext:Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent (int,intptr,bool&). KeyNotFoundException: The given key '4' was not present in the dictionary.; System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item (TKey key) (at <eef08f56e2e042f1b3027eca477293d9>:0); SofaUnityAPI.SofaContextAPI.loadScene (System.String filename) (at Assets/SofaUnity/Plugins/SofaUnityAPI/SofaContextAPI.cs:189); SofaUnity.SofaContext.ReconnectSofaScene () (at Assets/SofaUnity/Scripts/SofaContext.cs:486); SofaUnity.SofaContext.Init () (at Assets/SofaUnity/Scripts/SofaContext.cs:378); SofaUnity.SofaContext.StartSofa () (at Assets/SofaUnity/Scripts/SofaContext.cs:280); SofaUnity.SofaContext.Awake () (at Assets/SofaUnity/Scripts/SofaContext.cs:243); UnityEngine.GUIUtility:ProcessEvent(Int32, IntPtr, Boolean&). Start: 'VisualEye'; UnityEngine.Debug:Log (object); SofaVisualModel:Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:65). NullReferenceException: Object reference not set to an instance of an object; SofaVisualModel.UpdateMesh () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:129); SofaVisualModel.Start () (at Assets/SofaUnity/Scripts/SOFAUnity-Renderer/SofaVisualModel.cs:99). Start: 'VisualCornea'; UnityEngine.Debug:Log (object); SofaVisualModel:Start ()",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4156:1331,load,loadScene,1331,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4156,1,['load'],['loadScene']
Performance,ev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; MechanicalObject; MeshOBJLoader; MeshTopology; MinProximityIntersection; OglModel; PointCollisionModel; RequiredPlugin; SparseGridRamificationTopology; SpotLight; TriangleCollisionModel; UncoupledConstraintCorrection; UniformMass; VisualStyle; === TARGETS ===; Sofa.Component.AnimationLoop; Sofa.Component.Collision.Detection.Algorithm; Sofa.Component.Collision.Detection.Intersection; Sofa.Component.Collision.Geometry; Sofa.Component.Collision.Response.Contact; Sofa.Component.Constraint.Lagrangian.Correction; Sofa.Component.Constraint.Lagrangian.Solver; Sofa.Component.IO.Mesh; Sofa.Component.LinearSolver.Iterative; Sofa.Com,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:2581,Load,Loaded,2581,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,1,['Load'],['Loaded']
Performance,ex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Constraint.Lagrangian.Solver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSolver.Iterative.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mapping.Linear.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Mass.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.SolidMechanics.FEM.Elastic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.StateContainer.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.Visual.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Rendering3D.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/Alex/Dev/sofa1/builds/bin/RelWithDebInfo/Sofa.Component.LinearSystem.dll; === CLASSES ===; BVHNarrowPhase; BarycentricMapping; BruteForceBroadPhase; CGLinearSolver; CollisionPipeline; CollisionResponse; EulerImplicitSolver; FreeMotionAnimationLoop; HexahedronFEMForceField; InteractiveCamera; LCPConstraintSolver; LightManager; LineCollisionModel; MatrixLinearSystem; Mecha,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4422:1957,Load,Loaded,1957,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4422,1,['Load'],['Loaded']
Performance,fSpringForceField<Vec6d>; [WARNING] [ObjectFactory] Class already registered: PolynomialSpringsForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaDeformable/lib/libSofaDeformable.so; [WARNING] [ObjectFactory] Class already registered: PenalityContactForceField<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaObjectInteraction/lib/libSofaObjectInteraction.so; [WARNING] [ObjectFactory] Class already registered: LineCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: PointCollisionModel<Vec3d>; [WARNING] [ObjectFactory] Class already registered: TriangleCollisionModel<Vec3d>; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaMeshCollision/lib/libSofaMeshCollision.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaEngine/lib/libSofaEngine.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaExplicitOdeSolver/lib/libSofaExplicitOdeSolver.so; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaImplicitOdeSolver/lib/libSofaImplicitOdeSolver.so; [WARNING] [ObjectFactory] Class already registered: MeshOBJLoader; [WARNING] [ObjectFactory] Class already registered: MeshVTKLoader; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_release/install/plugins/SofaLoader/lib/libSofaLoader.so; [WARNING] [ObjectFactory] Class already registered: RecordedCamera; [WARNING] [ObjectFactory] Class already registered: VisualTransform; [WARNING] [ObjectFactory] Class already registered: Visual3DText; [INFO] [PluginManager] Loaded plugin: /home/sergei/Source_code/Sofa_development/sofa/build_releas,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/2897:12414,Load,Loaded,12414,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/2897,1,['Load'],['Loaded']
Performance,fa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/MultiThreading/lib/libMultiThreading.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SofaMatrix/lib/libSofaMatrix.so; [INFO] [PluginManager] 72 plugins have been loaded from /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/p,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:10700,Load,Loaded,10700,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,"fa.Component.Collision.Detection.Algorithm""]; [ERROR] [RequiredPlugin(SofaBoundaryCondition)] Plugin not found: ""SofaBoundaryCondition"". Failed to load: [""SofaBoundaryCondition""]; [ERROR] [RequiredPlugin(Sofa.Component.Topology.Container.Constant)] Plugin not found: ""Sofa.Component.Topology.Container.Constant"". Failed to load: [""Sofa.Component.Topology.Container.Constant""]; [ERROR] [RequiredPlugin(SofaEngine)] Plugin not found: ""SofaEngine"". Failed to load: [""SofaEngine""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Detection.Intersection)] Plugin not found: ""Sofa.Component.Collision.Detection.Intersection"". Failed to load: [""Sofa.Component.Collision.Detection.Intersection""]; [ERROR] [RequiredPlugin(Sofa.Component.SolidMechanics.Spring)] Plugin not found: ""Sofa.Component.SolidMechanics.Spring"". Failed to load: [""Sofa.Component.SolidMechanics.Spring""]; [ERROR] [RequiredPlugin(ArticulatedSystemPlugin)] Plugin not found: ""ArticulatedSystemPlugin"". Failed to load: [""ArticulatedSystemPlugin""]; [ERROR] [RequiredPlugin(Sofa.Component.Visual)] Plugin not found: ""Sofa.Component.Visual"". Failed to load: [""Sofa.Component.Visual""]; [ERROR] [RequiredPlugin(Sofa.Component.LinearSolver.Iterative)] Plugin not found: ""Sofa.Component.LinearSolver.Iterative"". Failed to load: [""Sofa.Component.LinearSolver.Iterative""]; [ERROR] [RequiredPlugin(Sofa.Component.Collision.Response.Contact)] Plugin not found: ""Sofa.Component.Collision.Response.Contact"". Failed to load: [""Sofa.Component.Collision.Response.Contact""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Rendering3D)] Plugin not found: ""Sofa.GL.Component.Rendering3D"". Failed to load: [""Sofa.GL.Component.Rendering3D""]; [ERROR] [RequiredPlugin(Sofa.GL.Component.Shader)] Plugin not found: ""Sofa.GL.Component.Shader"". Failed to load: [""Sofa.GL.Component.Shader""]; [ERROR] [RequiredPlugin(Sofa.Component.IO.Mesh)] Plugin not found: ""Sofa.Component.IO.Mesh"". Failed to load: [""Sofa.Component.IO.Mesh""]; [ERROR] [RequiredPlugin(Sofa.Component.Setti",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4857:3706,load,load,3706,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4857,2,['load'],['load']
Performance,fa.Component.Engine.Select.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.Transform.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.Haptics.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering2D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Rendering3D.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Engine.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.Shader.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GL.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Component.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Batch.so; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/lib/libSofa.GUI.Qt.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/SceneCreator/lib/libSceneCreator.so; [INFO] [PluginManager] Loaded plugin: /nix/store/mn6bilp3k5c238bk5g1hs67nn9cc2m27-sofa-24.06.00/plugins/ArticulatedSystemPlugin/lib/libArticulatedSystemPlugin.so; [INFO] [PluginMana,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488:10317,Load,Loaded,10317,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/5059#issuecomment-2417862488,1,['Load'],['Loaded']
Performance,fa/build/bin/Release/Sofa.Component.MechanicalLoad.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Geometry.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Algorithm.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.Intersection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Detection.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Mapper.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.Contact.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.Response.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Collision.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Setting.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Controller.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Analyze.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Generate.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Engine.Select.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Rel,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:8094,Load,Loaded,8094,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,fa/build/plugins;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/collections;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release; [INFO] [runSofa] DataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/share;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/examples;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [runSofa] GuiDataRepository paths = C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/applications/projects/runSofa/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/src/Sofa/GUI/Qt/src/sofa/gui/qt/resources;C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Compone,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1122,Load,Loading,1122,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loading']
Performance,fa/build; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config; [INFO] [BaseGUI] Created directory: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/screenshots; [INFO] [GUIManager] Registered batch as a GUI.; [INFO] [runSofa] Loading automatically plugin list in C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Forward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.Backward.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.ODESolver.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.Mesh.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.IO.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Playback.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.SceneUtility.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Constant.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Dynamic.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.Grid.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.Component.Topology.Container.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/,MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:1820,Load,Loaded,1820,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,"fa/src/modules/SofaGuiQt/src/sofa/gui/qt/resources;D:/github-clones/sofa/build; [INFO] [runSofa] Loading automatically plugin list in D:\github-clones\sofa\build\bin\RelWithDebInfo/plugin_list.conf.default; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaDeformable.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaEngine.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicit",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:6133,Load,Loaded,6133,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,"fa_source/sofa/build/bin/Release/Sofa.GL.Component.Shader.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GL.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Component.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Batch.dll; [INFO] [GUIManager] Registered qglviewer as a GUI.; [INFO] [GUIManager] Registered qt as a GUI.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/Sofa.GUI.Qt.dll; [DEPRECATED] [SofaValidation] SofaValidation is deprecated. It will be removed at v23.06. For CompareState and CompareTopology, use Sofa.Component.Playback instead.; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaValidation.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SceneCreator.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/CImgPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/ArticulatedSystemPlugin.dll; [INFO] [PluginManager] Loaded plugin: C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/bin/Release/SofaMatrix.dll; [INFO] [PluginManager] 72 plugins have been loaded from C:\Users\gfurn\anaconda3\envs\sofa_source\sofa\build\bin\Release/plugin_list.conf.default; [INFO] [GUIManager] lastUsedGUI.ini not found; using default GUI.; [INFO] [SofaPluginManager] Loading automatically plugin list in C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini; [INFO] [PluginManager] 0 plugins have been loaded from C:/Users/gfurn/anaconda3/envs/sofa_source/sofa/build/config/loadedPlugins.ini. [INFO] [SceneCheckerVisitor] Validating node ""root"" with checks: [SceneChe",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650:10996,Load,Loaded,10996,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4252#issuecomment-1792505650,1,['Load'],['Loaded']
Performance,fail to load SofaPython3,MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3192:8,load,load,8,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3192,1,['load'],['load']
Performance,"fault, Jul 29 2024, 17:02:10) ; [GCC 9.4.0]; --- PATH ---; /home/sofa/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin; --- SOFA_ROOT ---; /home/sofa/SOFA_v23.06.00/bin/.runSofa; --- PYTHONPATH ---; /home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages; --- sys.path ---; ['', '/home/sofa/SOFA_v23.06.00/plugins/SofaPython3/lib/python3/site-packages', '/usr/lib/python38.zip', '/usr/lib/python3.8', '/usr/lib/python3.8/lib-dynload', '/home/sofa/.local/lib/python3.8/site-packages', '/home/sofa/SOFA_v23.06.00/bin/lapgym/sofa_env', '/usr/local/lib/python3.8/dist-packages', '/usr/lib/python3/dist-packages']; #################. ```. Result logs :. `[ERROR] [RequiredPlugin(Sofa.Component.AnimationLoop)] Plugin not found: ""Sofa.Component.AnimationLoop"". Failed to load: [""Sofa.Component.AnimationLoop""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.Linear)] Plugin not found: ""Sofa.Component.Mapping.Linear"". Failed to load: [""Sofa.Component.Mapping.Linear""]; [ERROR] [RequiredPlugin(Sofa.Component.ODESolver.Forward)] Plugin not found: ""Sofa.Component.ODESolver.Forward"". Failed to load: [""Sofa.Component.ODESolver.Forward""]; [ERROR] [RequiredPlugin(SofaPython3)] Plugin not found: ""SofaPython3"". Failed to load: [""SofaPython3""]; [ERROR] [RequiredPlugin(Sofa.Component.Mapping.NonLinear)] Plugin not found: ""Sofa.Component.Mapping.NonLinear"". Failed to load: [""Sofa.Component.Mapping.NonLinear""]; [ERROR] [RequiredPlugin(Sofa.Component.Constraint.Lagrangian.Model)] Plugin not found: ""Sofa.Component.Constraint.Lagrangian.Model"". Failed to load: [""Sofa.Component.Constraint.Lagrangian.Model""]; [ERROR] [RequiredPlugin(Sofa.Component.Engine.Select)] Plugin not found: ""Sofa.Component.Engine.Select"". Failed to load: [""Sofa.Component.Engine.Select""]; [ERROR] [RequiredPlugin(Sofa.Component.StateContainer)] Plugin not found: ""Sofa.Component.StateContainer"". Failed to load: [""Sofa.Component.StateContainer""]; [ERROR] [Req",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/4905:2120,load,load,2120,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/4905,1,['load'],['load']
Performance,"ferent primitives. And it was made such as one could add more intersect() method for new primitives for an existing ""Intersection"", e.g MinProximityIntersection and MeshMinProximityIntersection, which add triangles, etc methods to MinProximityIntersection. Note that even if it is called ""Intersection"" it is not a ""Intersection"" 🤪; There is kind of mechanism with a IntersectorCreator/IntersectorFactory which does the ""plugin"" automatically.; The problem is that the intersector gets a pointer to its intersection at the load-time (when the dll is loaded).; The intersector needs the intersection to get alarm/contact distance (defined for all Intersection) or custom parameters (useSurfaceNormal for MinProximityIntersection). **Consequence:** if there are multiple simulation (in multiple thread) in the same time, a different thread will get a pointer to an other Intersection while doing its intersect code. In the end, this PR modifies all the intersect/canIntersect functions to get the intersection method (as if they were static functions in reality) and avoid race conditions. The pipeline needs also to be modified. [The first version of this branch was using a IntersectionParameters storing alarm, contact distance and given as const ref, but it could not handle custom parameters]. Still need to be done:; - ~~compat/warnings, etc~~; - all broad/narrow phases to be modified (further PR). ______________________________________________________. By submitting this pull request, I acknowledge that ; **I have read, understand, and agree [SOFA Developer Certificate of Origin (DCO)](https://github.com/sofa-framework/sofa/blob/master/CONTRIBUTING.md#sofa-developer-certificate-of-origin-dco)**.; ______________________________________________________. **Reviewers will merge this pull-request only if** ; - it builds with SUCCESS for all platforms on the CI.; - it does not generate new warnings.; - it does not generate new unit test failures.; - it does not generate new scene test fai",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/pull/4583:1300,race condition,race conditions,1300,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/pull/4583,1,['race condition'],['race conditions']
Performance,"first work around was to load from the same file (I call it outputJson, see the function definition below). However, this becomes cumbersome, when the code is parallelized, since several threads would like to load from that same file. My approach for the parallelization is to write the filename (which is now adapted to every scene) first into the .scn using PHP and then to load it from the python scene. ; That means, in the .scn file we have:; `<?php echo '<PythonScriptController classname=""convergenceBeam_Template"" filename=""convergenceBeam_TemplatePython.py"" listening=""1"" name=""convergenceBeam_Template"" variables=""'.$argv[1].'"" />'; ?>`; which called from the convergence python script and deleted later; ```; os.system(""php convergenceBeam_TemplatePython.scn ""+sofaOutput+"".pyscndata > ""+curTime+"".scn""); ... call the scene; os.system(""rm ""+curTime+"".scn""); ```; In the .py file we load the data using; `self.defineDataFromJson(self.findData(""variables"").value[0][0])`; where; ```; def defineDataFromJson(self,jsonFilename=""outputJson"") :; f = open(jsonFilename,'r'); self.data = json.load(f); f.close(); def getValueOfData(self,keyOfData) :; if keyOfData in self.data.keys():; return self.data[keyOfData]; printStack(); sys.exit(""\nERROR\n the key ""+keyOfData+"" is not defined!\nERROR\n""); ```. Both of the solutions I consider as hacks, the first as it can not run in parallel and the second as the scene does not work without running php on the side, thus it does not work with one command line. Potential (final?) solutions would be:; - a command line argument or command line argument**s** for python scenes; - a command line argument that can be used in all scenes, such as -d for data, which could be followed by strings; - php scenes (file ending .pscn) that work and could prevent calling php on the side (i.e. my second solution works without a script on the side). I am grateful for any ideas/other propositions of solutions!. Label propositions: project: SofaPython, discussion",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/356:1471,load,load,1471,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/356,1,['load'],['load']
Performance,"fo/SofaExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaLoader.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralVisual.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGraphComponent.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralMeshCollision.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaBoundaryCondition.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralAnimationLoop.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralDeformable.dll; [ERROR] [PluginManager] Plugin not found: ""SofaGeneralEngine""; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralExplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralImplicitOdeSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralLinearSolver.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralRigid.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralObjectInteraction.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralSimpleFem.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaGeneralTopology.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaTopologyMapping.dll; [INFO] [PluginManager] Loaded plugin: D:/github-clones/sofa/build/bin/RelWithDebInfo/SofaUserInteraction.dll; [INF",MatchSource.ISSUE,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/3110:7080,Load,Loaded,7080,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/3110,1,['Load'],['Loaded']
Performance,"for every BaseProjectiveConstraintSet ""pc"" found. This will set to 0 lines and columns of fixed constraints.; If a mechanical mapping ""m"" is found during the traversal, and m->areMatricesMapped() is false, the traversal stops before entering the subgraph of the mapping. Mechanical mappings step:; In case we have mapped matrices, which is, system matrix of a slave mechanical object, accumulate its contribution to the global system matrix with:; [A]ij += Jt * [A']ij * J; where `A` is the master mechanical object's matrix (top level), `A'` is the slave mechanical object matrix (linked to the top level MO using a mapping) and `J=m.getJ()`; is the mapping relation between the slave and its master. (2) [r_m M + B + r_k K] v; Go down in the current context tree calling `addMBKdx` on every force field components, then go up from the leaves calling `applyJT` on every mechanical mappings. If the k mechanical parameter is not zero, the `applyDJT` will also be applied.; NOTE: This correspond to the force terms dependent on the velocity, i.e. the damping terms : ; [- r_m M - B + r_k K] v; where K is in fact -K by SOFA's convention, hence the positive (+) sign. (3) [F - T]; Go down in the current context tree calling `addForce` on every force field components, then go up from the leaves calling `applyJT` on every mechanical mappings.; NOTE: This correspond to the force terms dependent on the displacement, i.e. :; (-Ku + T). Now, the damping and stiffness matrices `B` and `K` are usually sparse. Knowing in advanced that `M` is also sparse (or even diagonal), I would bet that we could optimize these operations `(aM + b B + c K) v`. This is even more important for non-linear systems since a third term of the type `(aM + bB + cK) a` appears and must be computed multiples times per time steps. . Let me know if something is not clear, this part is very un-intuitive and I spent the past 2 weeks trying to understand it to implement non-linear dynamic solvers so it is fresh in my memory !",MatchSource.ISSUE_COMMENT,sofa-framework,sofa,v24.06.00,https://github.com/sofa-framework/sofa/issues/1923#issuecomment-804095263:2782,optimiz,optimize,2782,https://www.sofa-framework.org,https://github.com/sofa-framework/sofa/issues/1923#issuecomment-804095263,1,['optimiz'],['optimize']
