quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Testability,"Logged In: YES ; user_id=1189615. OK, $$$$ will be output after every molecule. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/490#issuecomment-281775993:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/490#issuecomment-281775993,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. Sorry for this embarrassing mistake. The zip file for; downloading now contains the DLL files.; It took a long time to find this out - nearly 2000 people; had downloaded this version. However, the DLLs were the same; as in 2.0.1. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777527:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/574#issuecomment-281777527,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. Sorry, I must have expanded it recently, probably to solve a; problem similar to this one. The version in SVN HEAD is:; ; void OBConversion::SetOneObjectOnly(bool b); {; OneObjectOnly=b;; m_IsLast=b;; }. with the declaration:; void SetOneObjectOnly(bool b=true);. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777337:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777337,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. Thanks for finding this. The bug is now corrected in CVS. ; Fastsearch output is now like the normal output with ; separators between items in some formats (e.g. mol), and ; with a header and footer where appropriate(e.g. CML). Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/487#issuecomment-281775946:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/487#issuecomment-281775946,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. Thanks very much for these comments. User interface design ; depends on fitting in with the user's expectations. The ; more examples of these, the better. . The GUI has a number of design faults and bugs which I ; have put off correcting because I would prefer to put the ; effort into a cross-platform GUI. (I would welcome ; suggestions what to use to build such an interface). To respond to your comments:. (0) The installation is deliberately minimal. I would have ; thought that whatever you use for unzipping, you can ; always specify the destination folder. The current most ; common approach would be double clicking the zip file in ; Windows XP, which would do as you suggest. . (1)(2)(7) The design without a menu bar is perhaps less ; common than it used to be and maybe is too disconcerting. ; I agree there should be some About info. The control menu ; is a possible place for this, but maybe nobody would think ; to look there. I agree there should be a minimize button. (3) and (4) are bugs. The failure of All Chemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615. The code in CVS HEAD now copies the OBGenericData when an; OBMol is copied. Set pending. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/505#issuecomment-281776238:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/505#issuecomment-281776238,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. The missing libs for linking the DLLs are attached (see ; below). But it is important to be aware that the DLLs have ; C++ interfaces and so are only useable when being called ; from C++ programs which have been compiled with the same ; compiler. Even different versions of the MS compiler are ; incompatible: the name decoration is the same (from VC4 ; onwards), but STL function and parameter names seem to be ; different. The precompiled DLLs in openbabel-2.0.0win.zip ; are compiled with VC6 and would not work with a program ; compiled with MinGW. The decision not to use the more normal C interfaces was ; made because it would distort the structure of the program ; excessively and make far more of the source code specific ; to Windows DLL builds rather than being essentially the ; same for all platforms as at present. If you manage to get round the bug in building DLLs (or ; anything else) on MinGW we would be delighted if you could ; share your build files. The OBabel standalone build is ; easier if it meets your needs.; ; The attached zip file has VC6 OBConv.lib and OBDLL.lib ; which are needed to link the DLLs and are only useful if ; you have VC6 to build a program to drive them. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776089:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776089,2,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. This example works ok for me in Windows, but it fails on; others. It seems critically dependent on the size of the; file - adding a single space sometimes make it work. I'll; try to sort it out. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776785:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776785,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. This feature would be of wider application if it were in the ; main babel (which can also do the work of obgrep), where it ; could be easily implemented in OBMol::DoTransformations ; which already does filtering.; It could now have an interface like; --prop MW>102; and could be extended to other properties (with names other ; than ""MW"") which would relate to any info that OB had on ; the molecule - chemical, e.g nAtoms - and non-chemical, ; e.g. title or comments. The parsing of the string containing ; >,< or = would be easy. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810076:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810076,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. This is a case where I have not been "" eating my own dog; food"" as I don't have cause to use single molecule output; files. It is obviously wrong that there can be incorrect output. So I have added to HEAD CVS a conditional block in; OBConversion::AddChemObject() so that formats with; WRITEONEONLY output only one molecule. With a multi-molecule; input file, the user can still specify which molecule that; is using the -f# option. He can already manually specify that each molecule is output; in a separate file, e.g.,; babel 4mols.smi out.qcin -m; (or in Windows babel 4mols.smi out*.qcin}. Is it a good idea for this to happen automatically? The; first file in a multi-output would be out1.qcin which wasn't; the name the user thought he was specifying. He would also; loose the opportunity to select which single molecule is; output. I think the change above is sufficient, but, as I; say, I don't eat this dog food. There have been other changes to AddChemObject() but this; one could be put into 2.0.2 should this ever happen. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/527#issuecomment-281776630:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/527#issuecomment-281776630,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. This is by design. The $$$$ is added only between ; molecules. But if you think it a good idea to always have ; it at the end, it would be easy to change. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/490#issuecomment-281775991:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/490#issuecomment-281775991,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. This may be connected to me recently (29 July) changing ; OBMoleculeFormat to allow zero atom molecules to be ; passed on. This puts the onus on each format individually to ; handle this situation. . The reason for making this change is to handle output from ; CML where molecules are allowed to have zero atoms and ; frequently do in CMLReact. I don't think it unreasonable for a format to do something safe ; when give a molecule with <=0 atoms. But if it is too much ; work, the test could be put back into OBMoleculeFormat and ; SmilesFormat and MolFormat made not to derive from it. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775569:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775569,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1189615. This works ok for me under Windows XP.; I have added some code before the line above to give an; error message if pDefault is not acceptable. This is a; pointer to the default XML format, which is either the one; marked as such, or the first one. It really should be ok.; Alternatively there may be some difficult with the RTTI; function typeid. Could you try it with the modified; xmlformat.cpp? ; Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777538:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777538,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615. void SetOneObjectOnly(false);; does what you want and sets m_IsLast=false. It also sets; OneObjectOnly=false, which is the default anyway. ; Calling the function with true reverses these but would be; appropriate if you needed to manually mark the last molecule. We could have SetLast() as suggested but I think; SetOneObjectOnly(0) should be good enough. We could do with; some documentation though. The user is helped when doing normal conversions (via; FullConvert()) by making $$$$ addition as automatic as; possible. This is complicated by OB using the same code for; mol and sdf files which differ in their requirement for a; $$$ at the end. When calling the format from a program (via; Write()) I don't think it unreasonable that you have to say; that multiple molecules are about to be output and then flag; the last molecule manually. It would be similar for outputting multiple molecules in CML. ; . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777335:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777335,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. $END$ wasn't being recognizing as the same as $END. Fixed in 2.1.x. Example file doesn't crash. Closed.; . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779039:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779039,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. According to; http://www.daylight.com/dayhtml/doc/theory/theory.smirks.html. ""Recall that in versions of the Daylight system prior to 4.51, [H] as SMARTS meant: ""any atom with a single attached hydrogen"", while in SMILES it is a lone explicit hydrogen. ... In SMARTS, these expressions now are interpreted as a hydrogen atom, rather than as any atom with one hydrogen attached."". I guess OB's SMARTS implementation is using the old version rather than the new. It certainly needs to be corrected.; This will also affect the recently introduced, but not much tested, OpTransform class. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/738#issuecomment-281780614:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/738#issuecomment-281780614,2,"['Log', 'test']","['Logged', 'tested']"
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. All of these SMILES have 4-valent nitrogen, I guess due to the way the MOL2 file is converted. So to SMILES the molecule is some kind of strange radical. Surely this is an error? It would be better to get this right before worrying about the chirality. Incidentally, when Marvin View reads the mol2 file, it gives the OH group a negative charge, which also doesn't look right. I am afraid mol2 files are out of my experience. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779162:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779162,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. Already corrected in SVN Head code for V2.1 and in snapshots. It's a bit of moving target... Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/597#issuecomment-281777969:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/597#issuecomment-281777969,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Are you using the release code? There was a SMILES bug in SVN code shortly before release, but it all works fine for me now. I used SVN head code to build the PythonOBF project, copied openbabel.py _openbabel.pyd pybel.py and head.sdf into the folder with OpenBabel 2.2.0 from OpenBabel2.2.0_Windows_Installer2.exe , set PYTHONPATH there - and your example works ok. Chris; . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/796#issuecomment-281793478:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/796#issuecomment-281793478,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. At your suggestion, I've now (rev2016) added support for:. * as wildcard. It has to be the first or last character. property names containing spaces. You use underscores in the filter string. I originally had a warning message for unknown property names but removed it because it becomes tedious with files where some molecules have a property and others don't (like the filterset.sdf referred to inon the wiki page). . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810761:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810761,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Closed, see #1975137 r2504. Marcus found that atoi was being given an unterminated string. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779319:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779319,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Correct the fault identified by Jean in babel.cpp (and nbabel.cpp) in development SVN code rev 2074. It is surprising that this bug took so long to find. I guess experienced users know that a format is read-only; other users don't report bugs - so thank you, LI Daobing.; I mostly use the GUI where such errors are impossible, so this part of OpenBabel has received less critical attention. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/684#issuecomment-281779589:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/684#issuecomment-281779589,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Corrected in SVN revision 1753 (for v2.1). The -m option was interpreted as a splitting operation if there was only one input file and a batch operation otherwise. It is now also necessary for the base name for the output files that will contain the split objects to have at least one character.; babel test.sdf -omol2 -m now converts to the expected test.omol2, but there is also a warning message in case the user was expecting to be doing a split.; Marked pending. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/601#issuecomment-281778043:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/601#issuecomment-281778043,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. DeleteData(OBGenericData*) had a bug which could have appeared intermittently (a vector iterator used when invalidated after a deletion). Corrected in the C++ code (revision 1951). The port to Python hasn't been tested. I've also added a new overloaded function DeleteData(string&) which I guess would be used like obmol.DeleteData(""NSC"") when the appropriate interfacing has been done. It is used for the forthcoming babel --delete commandline option. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/641#issuecomment-281778905:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/641#issuecomment-281778905,2,"['Log', 'test']","['Logged', 'tested']"
Testability,Logged In: YES ; user_id=1189615; Originator: NO. File Added: AliasProblem.sdf. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779748:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779748,2,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. Fixed in HEAD code r2370 in the way suggested by Richard West. Set status to pending.; Chris. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/747#issuecomment-281780809:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/747#issuecomment-281780809,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. Fixed in HEAD code revision 2056. Documentation improved. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/676#issuecomment-281779436:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/676#issuecomment-281779436,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Fixed in revision 2145 in trunk.; It needed another flag on OBAtom to require implicit Hs even if there are explicit H. It is set for simple, non-aromatic SMILES atoms. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/702#issuecomment-281779931:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/702#issuecomment-281779931,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Fixed in revision 2394 in the development code by modifying atomtyp.txt. This could be used with v2.1.1 and there are some test species in test/files/FormulaTest.smi. The valence model that OpenBabel uses is rather fragile, so please keep an eye open for any further discrepancies in S compound. Set Pending to close after 2 weeks if not notified as faulty. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/749#issuecomment-281780822:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/749#issuecomment-281780822,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Fixed in v2643 by removing Si IMPVAL entry, so that Si never has implict H. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/741#issuecomment-281780668:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/741#issuecomment-281780668,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. I have added OBCommonFormats to FastSearch's dependencies, which should sort out the build order. The warnings can ignored. Keeping these tidy is a continuing task since not all developers get the same warnings. You probably want to build in Release mode. There was a recent glitch which meant that Debug configurations were being used even when it said Release at the top. I hope this is now corrected. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781137:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781137,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. I have applied Jean Brefort's patch, which seems to do what is required, to the development code r2479. Set Pending . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/758#issuecomment-281781000:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/758#issuecomment-281781000,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. I think these molecules are handled correctly if the attached atomtyp.txt replaces that in v2.2.0. The current way of handling valence requires a SMARTS pattern for each configuration, e.g. the one for O+ with a triple bond was missing. There may be other SMARTS patterns needed, so could you try with some more of your exotic molecules? . Chris; File Added: atomtyp.txt. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/813#issuecomment-281793756:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/813#issuecomment-281793756,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. I think your code has a (common) programming error.; In ob_hillformula the pointer tmpFormula does not have any memory assigned to it. So depending on where it pointed, the function could work, or it could crash. Even if it had, you would be returning the value of a local variable. I would return a std::string by value. Incidentally, you don't need to call AddHydrogens() before using GetFormula() or GetMolWt(). Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779476:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779476,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. I'm afraid I can't find what the version of the libxml2.dll is. It is older and smaller than 2.6.27 which I downloaded last year. But it also doesn't seem to have any problems. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781079:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781079,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. I've written a framework which makes it easy to implement plugin modules for classes with an abstract base class and derived classes called via virtual functions. OBForcefield isn't quite like that but could easily be modified so that it was. Then add a macro MAKE_PLUGIN(OBForcefield), make a global instance of each derived class specifying its ID, and provide a constructor to pass this on to its parent OBForcefield. See details in pluginiter.h OBFingerprint has been modified in this way. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810644:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810644,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. If the env var BABEL_DATADIR is not set, a precompiled verision of the data is used, which I suppose is ok. With BABEL_DATADIR set, atomtyp.txt is parsed.; ; The parsing of this data file was written assuming it had UNIX line endings. With Windows files on Windows, a trailing \r appeared in some parsed items. (It may not work with old MAC data files also.) Maybe '\r' is the erroneous ^M that was seen. I've added \r to list of white space characters in tokenize() and the warnings I was getting writing to mol2 files have gone away and the mol2 output file is the same with BABEL_DATADIR set or not. I'm not qualified to comment on the other possible bugs on this ticket. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778979:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778979,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. In OpenBabel v2.2.0 you can also use:; babel -L formats ; which has an output like:; xml -- General XML format [Read-only]; xyz -- XYZ cartesian coordinates format; yob -- YASARA.org YOB format; zin -- ZINDO input format [Write-only]; which I don't think is too difficult to parse and is almost what you suggest. or ; babel -L formats read; which has the same output (except the bracketed item is omitted) for formats that can be read, and of course similarly for write. babel -L formats verbose or babel -Hall; gives complete information on all formats, including the format-specific options. It would not be less easy to parse however. If you were using the C++ API or the Python or other scripting interface there are other more flexible ways of listing the formats. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1505#issuecomment-281811016:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1505#issuecomment-281811016,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. In revision 2025 in SVN HEAD, COLLECTION blocks are now benignly ignored, with a warning, and the rest of the molecule is converted. Set Pending, to close after 2 weeks. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779225:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779225,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Is this what is required?. >echo CCO|babel -ismi -ocml --AddPolarH; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C""/>; <atom id=""a2"" elementType=""C""/>; <atom id=""a3"" elementType=""O""/>; <atom id=""a4"" elementType=""H""/>; </atomArray>; <bondArray>; <bond atomRefs2=""a1 a2"" order=""1""/>; <bond atomRefs2=""a2 a3"" order=""1""/>; <bond atomRefs2=""a3 a4"" order=""1""/>; </bondArray>; </molecule>; 1 molecule converted; 22 audit log messages. Options like these can be added as plugins, without altering existing code.; The code is in src/ops/addpolarh.cpp and it should be compiled like gen3d.cpp. (It is very similar - I just altered a few words.) Feel free to make or suggest improvements. Command-line options which are OBTransforms can be added without compiling, see data/plugindefines.txt. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810957:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810957,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. It looks as if the C++ library you are using already has std::tr1 defined. If so, shared_ptr will already be defined and boost isn't needed. Could you try removing the line; #define USE_BOOST in windows-vc2005/babelconfig.h. If this works (I hope you will use the mailing list to let us know) I'll sort out a version dependent fix in babelconfig.h. According to http://blogs.msdn.com/vcblog/archive/2008/01/08/q-a-on-our-tr1-implementation.aspx; tr1 support appeared in a ""Feature Pack"" for Visual C++ 2008 and is not applicable to the Express version or to Visual C++ 2005. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786164:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786164,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. It won't compile on your machine until the code is altered to accomodate it. So it would be more helpful to track down the tr1 files than recompiling the program, which is not providing useful information. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786187:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786187,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. It worked ok for me with v2.0.2 and the latest released version 2.1.1. This was with the Windows GUI, but that would not normally make much difference.; ; The fourth bond has its second atom index=14, just before the bond order. Could it be that some corruption with extra spaces has happened somewhere? With an abnormal audit log, the fault is probably in your copy of OpenBabel. . Could you see if you get the same problem with v2.1.1?. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779317:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779317,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Most of the files in shared.txt are from Boost, and we still haven't found the implementation of tr1, if it is there. I suspect your STL library files are in; c:\Program Files\Microsoft Visual Studio 9.0\VC\include\; (It will contain the file called algorithm). Could you use FindInFiles in Visual Studio to search this directory and its sub-directories for ""shared_ptr"" (don't use the quotes) or failing that ""tr1"" (case-insensitive)?. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786181:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786181,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. My apologies, I realized overnight that strdup was used and came back this morning to retract. I guess I think in a C++ rather than a C way.; The bug is still a mystery. I'll look at at AddHydrogens() which has changed a little since v2.0.1. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779481:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779481,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Not really a bug, but a good suggestion which doesn't look too difficult. I'll tackle it when v2.2.0 release is out of the way. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1501#issuecomment-281810954:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1501#issuecomment-281810954,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Now OBFingerprint::Tanimoto() returns 0.0 when no bits are set in HEAD revision 1967. Sloppy programming, I'm afraid. Set Pending. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/648#issuecomment-281778997:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/648#issuecomment-281778997,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Openbabel is very close to compiling on your system but it will not do so until some small code changes are made. To make these I need some information that Microsoft does not make easily accessible unless you have bought their product. This would open up Openbabel to other users with VC2008. Could you help with information on the tr1 header files as detailed previously?. Some of the errors you are seeing are new transient ones which are inevitable in development code because of the delay in adjusting the build files when developers using other platforms have made code changes. I can see these and can correct them, but I need help with VC2008. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786177:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786177,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. Probable the same as #1738005 which has now been fixed in 2.1.x. Set Pending. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/659#issuecomment-281779148:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/659#issuecomment-281779148,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. Probably fixed in rev 2069 in HEAD code. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/675#issuecomment-281779417:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/675#issuecomment-281779417,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Remember that babel has a -e option which attempts to read further molecules after an error. The interpretation of alias blocks is SDF files is a continuing problem.; ; The attached file AliasProblem.sdf contains the 5th and 8th molecule from the original 38MB problem file. It looks as if the first molecule is the result of an erroneous file conversion by PubChem. The second molecule looks as if it has some meaning, although OB doesn't parse it correctly. I am inclined to set up an OBGenericData structure to handle alias information (which would be also used for entities like Ph from ChemDraw, if Jean Brefort has been persuaded. Anything from the SDF alias line (except ? and *) could be put in there. But maybe there should be an attempt to interpret it, as in the second molecule, or especially in attached alias2.sdf from the InChI Technical Manual. In the last case, a C atom has to be replaced by a SD group. OB currently gets the intended answer in the last case, but at the expense in other cases of a clean minimal treatment - the line as merely an alias for interpretation elsewhere. So I'll change the development code to do the minimal treatment, unless anybody has a different view. Alias blocks will then not give any errors whatever they contain. Chris. File Added: Alias2.sdf. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779746:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779746,2,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Rev1982 ignored characters<0 in ParseSmiles which had caused errors. The invalidsmiles test now works ok on Windows, but the zlib routines are not active in Windows and the error messages indicate that this is where the problem lies. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/649#issuecomment-281779008:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/649#issuecomment-281779008,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. SD and MOL files have traditionally been handled in OB by the same code, which has lead to errors like this. From revision 1638 they are separate, so that SD files now always output with $$$$ at the end, and MOL files no longer output properties. Marking as closed. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/583#issuecomment-281777677:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/583#issuecomment-281777677,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. SDFormat outputs wedge/hash bonds only if the dimension of the molecule is 2. The default for a newly constructed OBMol is 3, so you need to call SetDimension(2). . However smiles format output does not seem to be recognizing OB_HASH_BOND in the case I tried. I'll look into this further. Canonical smiles (can format) works ok. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779011:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779011,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. SetOneObjectOnly(bool b) will do this for you. This suggestion has come up previously. I'll add a synomym SetLast. It's no good having functionality if nobody can find it. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/596#issuecomment-281777948:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/596#issuecomment-281777948,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Sorry about the glitch which caused double posting. I have committed the changes for simplifying the reading of alias blocks to the trunk development code. At least the first 1498 molecules of AliasProblem.sdf are read without OB reporting errors, although quite a lot of them have uninterpreted aliases. I'll mark as Pending to close in 2 weeks. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779758:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779758,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. Thank you for taking the trouble to providing such a detailed description. There is more than one bug here.; The SMILES parser was not ordering the atoms correctly when one or more of the atoms attached to a chiral center was a ring closure.; The loss of chiral info occurred in FindChiralCenters(). Calling this was unnecessary and the SMILES parse now avoids this by calling SetChiralityPerceived().; These two corrections are in smilesformat.cpp rev 2065 (which compatible with v2.1.1) and SMILES to InChI should now be ok. There still seems to be a bug in Canonical SMILES output and this has not yet been corrected. The third set of molecules listed in the original bug report are examples. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779558:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779558,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. Thanks for the report and patch. The development version (soon to be v2.2.0) has already been corrected in a very similar way. Chris. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/733#issuecomment-281780505:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/733#issuecomment-281780505,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Thanks for the report. Most of the code in OpenBabel is the same whatever the platform. This includes that for hydrogen addition, but, as you point out, it may use data in some .txt files. If these are not present, as in the Windows distribution, an internal set of data are used, which should be the same as in the default .txt files, unless something has gone wrong. It would be helpful if you could attach an example file, and try to find the version numbers:; menu item Help/About on the Windows GUI and babel -V on the commandline. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779324:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779324,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Thanks for the suggestion, which is now in rev 2067 in HEAD code.; Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/679#issuecomment-281779493:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/679#issuecomment-281779493,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. Thanks; I have removed the spam; Chris. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/708#issuecomment-281780044:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/708#issuecomment-281780044,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The --filter option in SVN HEAD (for v3.0) does much of this. See; http://openbabel.sourceforge.net/wiki/--filter_option. babel infile.sdf outfile.xxx --filter ""title='TargetTitle'"". It can have multiple boolean connected filter tests that may involve (sdf-like) properties (NAME in the example below is such a property):. babel infile.sdf outfile.xxx --filter ""(title='TargetTitle' || NAME='AltTitle') && MW >180"". The string tests can be crudely alphabetical, title>'Tar', but it doesn't do regular expressions. Would many chemists be able to use a regular expression easily? (Speaking as one who couldn't.). Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810756:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810756,3,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The InChI example files were using the <NAME> property and no title. They were all single line, though. If it is a practice that is in use, then we should support it. . Maybe to prevent errors but minimise information loss, any line break in a title retrieved by OBMol::GetTitle() should be returned with any line break converted to a space or a tab. I don't think the loss of backward compatibility is serious enough to worry about. The function could have a bool parameter whose default has this behaviour, but the inverse would allow access to the raw multiline text if necessary. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/766#issuecomment-281781126:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/766#issuecomment-281781126,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. The SVN development code at revision 1822 now produces the right InChI for this molecule. But I'm still checking stereochemistry in InChI format. Mark pending to be closed after 2 weeks unless notified. Chris. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/595#issuecomment-281777934:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/595#issuecomment-281777934,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The hanging when large amounts of output are sent only to the GUI window has been reported as bug 1596906, and has not yet been corrected. It may work if you specify an output file. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778257:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778257,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. The main cause of this seems to be that the fragments.txt data file is not being found.; Setting the Environment Variable BABEL_DATADIR to the installation directory (this is C:\Program Files\OpenBabel-2.2.0 for me) seems to fix the problem. (Use Control Panel/System/Advanced/Environment Variables). What is going on needs further investigation since the current directory does not seem to be what I was expecting. It would probably worth setting the Environment Variable in the installer. This is partly the same problem as bug #2013806 and partly the bug with linear molecules #2014055. Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793435:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793435,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. The nitrogen atom in dan156.sdf has a double and two single bonds and no charge. This is probably not what was intended - the sdf file is corrupt. OB doesn't give an error message with molecules like these and maybe should do. The four-valent nitrogen is reported when converting to InChI.; Chris. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/718#issuecomment-281780215:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/718#issuecomment-281780215,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The patch adds; #include <string.h>; to data.h and obconversion.h. I think it would be confusing to include this obsolete header file as well as the current <string>. I presume that strcasecmp is declared in string.h, but is there not a better way to handle it? For instance with Windows Visual C++ builds it is redefined as stricmp in babelconfig.h. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/724#issuecomment-281780323:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/724#issuecomment-281780323,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The problem is probably with your project settings; I don't think there is a boost problem.; Information on boost installation is at http://openbabel.org/wiki/Install_(MSVC); It sounds as if the entry in Additional Include Directories may not have gone properly. Make sure that the directory added here is one that has a subdirectory called ""boost"". It would be better to compile in Release mode. This bug report is a cumbersome way of sorting out the problems with Visual Studio 2008, which I am sure will be achieved by a couple of small changes, most likely to your Visual Studio set up. Would you like to email me privately at c.morley AT gaseq.co.uk ?. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/787#issuecomment-281793378:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/787#issuecomment-281793378,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The problem was not to do with my previous comment, but arises because the hydrogens in the molecule have to be explicit to match [H] in SMARTS.; In r2373 the match is now done on an explicit H copy of the molecule when the SMARTS pattern contains [H]. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/738#issuecomment-281780616:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/738#issuecomment-281780616,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The problem was the facility to provide input on the command line, terminated by a blank line. The empty line at the start of the mol file was being seen as this. The commandline input was always clunky, but now even clunkier because you have to use Cntl Z to terminate, but the piping example now works. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/765#issuecomment-281781119:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/765#issuecomment-281781119,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The reasoning, seen easiest with a single atom C fragment, was that almost every molecule would have this matched, given that the main use of this type of fingerprint is to index large >10000 databases of organic molecules. It would be unlikely that any body would depend on the single atom N fragment, in the way they would for say As. Rather, they would specify a N-containing group which would have larger distinguishing fragments. These bits would not contribute significantly to distinguishing between molecules and so should be omitted. . However, the gain from doing so is not much. So if the difference from Daylight's product is confusing maybe we should change it. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779781:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779781,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The revision essentially ignores what is in the COLLECTION block. Is that good enough?; The file is is SVN. The following link will retrieve it. It could just replace the original file and then OpenBabel should be compiled, if you can do that. I could supply a compiled Windows version if that would help.; http://openbabel.svn.sourceforge.net/viewvc/*checkout*/openbabel/openbabel/trunk/src/formats/mdlformat.cpp?revision=2025. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779229:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779229,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The rule now is:; ""If any explicit non-isotopically-specified hydrogens are present, then ALL hydrogens for this heavy atom are fully specified."" This is stated in line 2055 of mol.cpp but maybe there should be a general writeup on implicit hydrogens somewhere else. I realize that you will not find this rule very satisfactory. Using implicit hydrogens is a convenience but is prone to misinterpretation unless there are hard and fast rules, which there aren't in SDF files, as far as I know. I think the best we can do is to fit in with what the user probably wanted. I think these three examples do this: in a structure with implicit hydrogens the user often wants to highlight where the D atoms are; but nobody would write methane with only one hydrogen, so he/she must mean the molecule CH . If you wanted to represent the molecule CD you would have to use a M RAD line with a value of 4, which is interpreted by OB but is not legal SDF, although it is a very obvious extension. You would also be taking a lot of notice of whether it was being interpreted correctly, which you might not be with the first two examples. So I think we cover all types of user. Incidentally, in SMILES the Daylight theory manual says ""Within brackets, any attached hydrogens and formal charges must always be specified."" I take this to mean ""there is no implicit hydrogen on bracketed atoms."". With the molecules:; [CH3][2H] [CH2][2H] [CH][2H] [C][2H]; Depict draws the same picture for all and gives warnings of hydrogen deficiency for the 2nd and 4th, but surprisingly not the 3rd. Apart for this last case, it seems to be consistent with the previous paragraph. I didn't find any equivalent statements in the OpenSmiles specification, but maybe there should be something. Chris ; . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/743#issuecomment-281780710:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/743#issuecomment-281780710,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The sdf file has the selenium as part of an aromatic structure (its bonds are aromatic). There is no ambiguity in the SMILES structure; it is understood by Daylight's Depict, MarvinView and OpenBabel, although not Chem Sketch. OpenSMILES is not yet finallized and this issue is contentious. I think it is not appropriate to make changes to OpenBabel's output at the moment but just to note it as a possible bug for the future. I have reduced the priority.; Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/711#issuecomment-281780088:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/711#issuecomment-281780088,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. The second problem is also to do with the parsing of INPUT CARD lines. With the modified version of gamessformat.cpp in 2.1.x I don't have any problem. (Since I couldn't find the complete gam file, I just pasted in the lines below which caused the crashes.) Are you using the updated gamessformat.cpp?. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779043:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779043,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. These seem to be Kekulize failures.; The first molecule is output correctly to CML when using aromatic bonds (not Kekule). A simplified molecule showing the same behaviour is Cn2ccc(nc2=O) .; The second molecule reports an error in start_kekulize and the bonds are not marked aromatic. Anybody fancy doing some Kekulization?. Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779285:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779285,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. This is known bug #1720529 which will be fixed in v2.1.1 to be released soon. By the way, the stereo info in 2.0 had a number of bugs with molecules like this; 2.1.1 should be better. Thanks for the feedback, sorry for the inconvenience. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779121:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779121,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. This occurred with large output streams. Corrected in revision 1837 for v2.1. . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/580#issuecomment-281777639:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/580#issuecomment-281777639,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. This sounds like bug #1775399, which was not properly resolved. I was never able to reproduce the problem on my Windows system. It seemed that the XML parsing (which is done in libxml2) was going wrong, with an atom id from the atomRefs2 attribute being seen as part of the bond order attribute. If you have the benefit of a consistent failure, perhaps you could see whether there is anything around the building of libxml2 that could be a cause. (I have only ever used a pre-built libxml2 DLL.) . Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781075:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781075,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. This works ok for me. If no output file is specified, the output appears in the output window only.; Could you attach the file that didn't work?. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/580#issuecomment-281777631:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/580#issuecomment-281777631,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: NO. Try setting an environment variable BABEL_DATADIR to the directory where OpenBabel was installed, probably, C:\Program Files\OpenBabel-2.2.0 . You can set environment variables in Control Panel/System/Advanced/Environment Variables. Post here again if this doesn't work. . The installer should have set BABEL_DATADIR, and it not doing so has caused other problems too. The installer OpenBabel2.2.0_Windows_Installer2.exe does set it. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/799#issuecomment-281793531:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/799#issuecomment-281793531,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: NO. Warning removed in HEAD code rev 2070. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/662#issuecomment-281779222:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/662#issuecomment-281779222,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: YES. Closed. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/653#issuecomment-281779058:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/653#issuecomment-281779058,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: YES. Corrected in revision 1831. This is the sort of bug that crashes aeroplanes - in release code it would only have an effect on very rare occasions. Well done the Visual Studio debugger!. Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778028:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778028,2,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: YES. Fixed in SVN v2.1.x. The example file has been replaced by one with two molecule with specified and and one with unspecified chirality. Now seems to work as expected:; CC(O)CC	2-butanol chirality unspecified; C[C@@H](O)(CC)	2-butanol one enantiomer; C[C@H](O)(CC)	2-butanol the other enantiomer. File Added: Butanol2D3mols.sdf. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/653#issuecomment-281779052:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/653#issuecomment-281779052,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: YES. Input [CH4] crashes on line 2878 because the vector canonical_order, which has a size of 1 is being accessed with an index of 1. That is nbr1->GetIdx() returned 2. This is with the default _canonicalOutput=false, so I guess it is using your new code. It works ok when _canonicalOutput=true. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793122:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793122,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1189615; Originator: YES. It still fails in the same way for me in revision 1822.; with Visual C++8. Is this another compiler compatibility problem?. Chris. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778025:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778025,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: YES. Neither of your recent mods helped.; I have a fix in revision 2659 which doesn't crash with any molecules for me. A couple of vectors now have 2147483647 pushed when the atom is H, to match the situation with canonical ordering, rather than ending up with a size smaller than the number of atoms. I assume 2147483647 = 2^31-1 is just a big number?. I'll mark as closed. Are your earlier mods to be retained?. Chris . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793126:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793126,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: YES. Replaced newlinebuf by code in lineend.h This is a FilteringInputStreambuf based on an article by James Kanze. This allows the tellg and seekg requests to be passed on to the original rdbuf. Fastsearch now seems to work ok. The method would potentially allow a decompression readbuf to be inserted as well. I considered using Boost iostreams, but the seek requirement would mean that a new filter would have to be written. The Boost code is large and complex and I preferred the very much simpler self-written approach.; Marked pending in case any problems are found. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777717:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777717,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: YES. To use fastsearch newlinebuf has to work with all normal text input formats. Fastsearch indexes the input file by recording their positions using tellg.; ; The problem is that tellg and seekg aren't working in the new rdbuf. To get them to work seems to need a new virtual seekoff() function writing, which proved more difficult than I thought it would be, and I gave up. Although it seems elegant at first, is a new rdbuf the best way to go? Might it be easier to use a modified getline() etc., and maybe some extra calls to Trim(). This sort of a problem must affect almost all programs with text input. The code compiled on Windows with with Visual Studio 2005 seems to handle all line endings transparently and newlinebuf is now excluded from the builds. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777716:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777716,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1189615; Originator: YES. [CH4] now works, but [OH][OH] and c1[nH]ccc1 don't. The OO and the non-standard c1nccc1 are ok. Its difficult for you to find a bug if you can't reproduce it. I can, so I'll urgently look into this further because it is a show-stopper. Previous intermittent bugs were the non-terminated char array in atoi and returning references to local variables. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793125:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793125,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=125666. DATADIR is certainly one of the installation problems.; AFAICS babelconfig.h is generated by ./configure on Unix; systems. There is no equivalent on Windows systems. However; there may be a bableconfig.h already in the CVS. Therefore; compiling with this will give compilation values based on; (some) arbitrary UNIX values for the environment. Is there is a need for a non-autoconfigured babelconfig.h?; Perhaps editable according to compiler?. It's also not very clear to newcomers what DATADIR should; point to. I assume it is actually normally the source directory. P. Original comment by: @petermr,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=125666. Please feel free to commit this through CVS - I think we've; had some compilers flag this as an error but haven't; recommitted. Peter. Original comment by: @petermr,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/433#issuecomment-281774944:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/433#issuecomment-281774944,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1260158; Originator: NO. Sorry - forgot to log in when I submitted this and thought I'd have the chance to amend the details. I should have mentioned that my name is Jens Thomas and email is j.m.h.thomas@dl.ac.uk. Original comment by: jensthomas,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/651#issuecomment-281779033:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/651#issuecomment-281779033,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=1290830. >PDB files without explicit hydrogens are extremely hard to; type ""correctly."". I know, that's why I praised Fabien ;-); But I'm doing my best to only report things that are still; doable without hydrogens (and I think were also done; correctly before some recent changes). >At the very least, the current CVS version (on the; >openbabel-new-framework branch) looks OK to me. I cvs-checkedout this one, but it's still the same. >But it'd help a lot if you were a bit more specific about which; >bonds are assigned ""wrong."". Sorry, I feared that the one who programmed all the; complicated details of kekulize.cpp might take it as an; insult to be told about the location of double bonds in the; standard DNA base-pairs ;-). Anyway, here we go, looking at the attached kekubug.pdb:. Residue 630 is Guanosine. OpenBabel puts a double bond at; C2=N2, but it should instead be flipped over to C2=N3:; http://en.wikipedia.org/wiki/Guanosine_monophosphate. There is this general rule that oxygens bound to aromatic; rings get a double bond if possible (i.e. if it doesn't kill; aromaticity), because the keto form is more stable than the; enol tautomer:; http://www.nationmaster.com/encyclopedia/Keto_enol-tautomerism; (that's already handled well by OpenBabel). I think OpenBabel still needs to consider that nitrogens; bound to aromatic rings get a single bond if possible.; Couldn't find the theoretical justification for this; empirical rule, can anyone help?. Residue 631 is Cytidine, with essentially the same problem; again: The C4=N4 double bond belongs to C4=N3.; http://en.wikipedia.org/wiki/Cytidine. Residue 632 is an unusual one where OpenBabel puts a double; bond at C1*=C5, which is impossible because C1* is clearly; sp3 hybridized and non-planar.; So both the C1*=C5 and N1=C6 double bonds should be single; bonds, with a C6=C5 double bond in the middle. BTW: I don't have an example now, but I saw the kekulizer; generate different results for the same re",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775220:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775220,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1290830. I looked again at the code, and it turns out that the second; piece is just an alternative version of the first, exlcuded; from compilation with #ifdef RECURSIVE. So the patch just; reduces code entropy and makes sure that if one day someone; removes the #define RECURSIVE, he doesn't get the bug back. Original comment by: elmarkrieger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/473#issuecomment-281775696:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/473#issuecomment-281775696,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1290830. Yep, I finally found the bug. The above guess was wrong. In OBAromaticTyper::AssignAromaticFlags, the first pass; ""//mark atoms as potentially aromatic""; does not mark the protonated nitrogen, because the SMARTS; pattern; [#7D3+]			1	1; in data/aromatic.txt does not match. The reason is that the; formal charge has not been set. I don't know enough about; OpenBabel yet to know where this should be done properly,; but the following hack fixes the problem:. >In src/typer.cpp; >replace ; //unset all aromatic flags; for (atom = mol.BeginAtom(i);atom;atom = mol.NextAtom(i)); atom->UnsetAromatic();; >with; for (atom = mol.BeginAtom(i);atom;atom = mol.NextAtom(i)); { //unset aromatic flags; atom->UnsetAromatic();; //set the formal charges (quick hack for nitrogen only); if (atom->IsNitrogen()); atom->SetFormalCharge(atom->BOSum()-3); } . Cheers,; Elmar. Original comment by: elmarkrieger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/469#issuecomment-281775663:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/469#issuecomment-281775663,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1309655. Geoff,. I loaded your alkane.mol into MDL draw and saved it and it; added CFG=2 to atom 4 (as well as changing the co-ords but; not significantly.) CFG=2 coresponds to a ""@"" sign in SMILES; if the attached hydrogen is written inside the [C@] bracket. On converting into smiles it outputted the same inverted; string as you. (the 2D co-ordinates with wedge bonds overruled the parity; in the smilesformat.cpp deleating all the 2D co-ords with; the CFG=2 gave the correct SMILES output). I am currently working on fixing the chirality in molV3000; and SMILES by integrating some of the smiles only routines; into chiral.cpp as well as getting CML compatible chirality; working. At the moment all the chirality routines are in; smilesformat.cpp and noformats are using the ones in chiral.cpp. The / and \ bonds are being written from the up and down; ones in the mol file, but are not valid smiles strings; unless used next to double bonds. A parser to check the; smiles string for these before output might be worthfile. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775703,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1309655. Geoff,. The 2005-08-01 snapshot doesn't exist, but in the latest CVS; version mol2format (and I assume the GetNumberOfElements); seems to work perfectly. (although I had to comment out SWIG; to get it to compile). This is under linux. - Nick. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/465#issuecomment-281775605:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/465#issuecomment-281775605,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1309655. The attached smilesformat.cpp has been altered to correctly ; write 0D chirality for dot.disconected SMILES. I think its ; working correctly,. C1-C-C-C-C-C1%11.O%10%11.N[C@@]%10(C)C(=O)O; C1-C-C-C-C-C1%11.O%10%11.N[C@]%10(C(=O)O)C; C1C(CCCC1)O[C@](N)(C)C(=O)O . are all converted into the same molecule (although not ; written in the same way). I haven't tested it a great deal so there might be some ; problems with it. - Nick. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777262:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777262,2,"['Log', 'test']","['Logged', 'tested']"
Testability,"Logged In: YES ; user_id=1309655. When I added the chiral code to allow Smiles->MOLv3000 ; conversion I didn't add the code to the WriteSmiles. If you ; convert from the smiles string ""C1-C-C-C-C-C1%11.O%10%11.N; [C@@]%10(C)C(=O)O"" to sdf Molv3000 (-x3) and then from that ; to smiles you get ""C1C(CCCC1)O[C@](N)(C)C(=O)O"" which is ; the correct output. You can use this as a workaround for dot disconected ; structures until I get time to work out how to implement ; the chiral checking properly in the write smiles code. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777260:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777260,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1309655; Originator: NO. Interstingly using the workaround:. babel -imol2 test.mol2 -oxyz | babel -ixyz -osmi to force all bonds to be lost and calculated based on the ""join the dots"" yields. C(NC(C(NCP(OC(C(=O)O)Cc1ccccc1)(=O)O)=O)C)(=O)OCc1ccccc1 . which then roundtrips from smiles to smiles without loosing the aromaticity. However passing this smiles tring into mol2 and out again looses the aromaticty of BOTH benzene rings, but they are listed as type C.Ar inside the mol2 file. This leads me to belive that the error must lie inside the mol2 reader. Original comment by: nickengland",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/759#issuecomment-281781022:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/759#issuecomment-281781022,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1311180. OK, I had UNICODE defined and that messed everything up. Now; it compiles. Sorry for the extra noise caused by me; compiling without the provided project files... Original comment by: bswerts",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776068:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776068,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1311180. Thanks for the quick fix, but unfortunately it doesn't; compile. I don't know that much about Windows programming so; I was unable the 'cast' the errors away. I atached a file; with the output from nmake. It would be very weird that it; would compile with VS6 and .NET 2005 but not with .NET 2003. I will try to provide .vcproj files for .NET 2003 when; everything works. Original comment by: bswerts",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776065:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776065,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1312539. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809684:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809684,76,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1312539; Originator: NO. This Tracker item was closed automatically by the system. It was; previously set to a Pending status, and the original submitter; did not respond within 14 days (the time period specified by; the administrator of this Tracker). Original comment by: sf-robot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810119:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810119,74,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1373872; Originator: NO. I had the same problem on a MacBook with 10.5.3 on it. The 2.2.0b6 binary solved the problem for me. (By the way, the installer said that it was 2.2.0b5 when showing credits...). /Fredrik. Original comment by: @fredrikw",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780741:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780741,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1377149; Originator: NO. OpenBabel 2.2.0 is in my PATH variable, but I still get this error unless fragments.txt is in my current working directory. I've found that a solution is to set the BABEL_DATADIR variable. Sam. Original comment by: sea36",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793427:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793427,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1384550. Hi I came across this recently, would it be possible to include this in ; openBabel?; http://bioweb.ucr.edu/ChemMine/Documents/README.php; http://bonsai.ims.u-tokyo.ac.jp/~mdehoon/software/cluster/software.htm; ""The open source clustering software available here implement the most ; commonly used clustering methods for gene expression data analysis. The ; clustering methods can be used in several ways. Cluster 3.0 provides a ; Graphical User Interface to access to the clustering routines. It is available for ; Windows, Mac OS X, and Linux/Unix. Python users can access the clustering ; routines by using Pycluster, which is an extension module to Python. People ; that want to make use of the clustering algorithms in their own C, C++, or ; Fortran programs can download the source code of the C Clustering Library."". Original comment by: chris_swa",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810326,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1385787. Actually, your pattern does not search for explicit ; hydrogens - that would be 'CN([H])[H]'. [NH2] should mean ; nitrogen with two hydrogens attached (implicit or explicit). Original comment by: claggner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776016:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776016,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1385787. Good idea.; For adding a whole list of values, you might want something ; similar to this: take an SD file and a table file (e.g.tab-; separated txt file). The table file contains compound names ; and the values of the property/ies to add. OpenBabel should ; add the property/ies of the table file to the corresponding ; compounds in the SD file under a given property name(s).; Conversely, you should also be able to extract all property ; data including the structure name (very first line of the ; compound header) from an SD file to a table text file. Original comment by: claggner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1436#issuecomment-281810201:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1436#issuecomment-281810201,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1385787. If my interpretation of MDLI's ""CTFile Formats"" (http://www.; mdli.com/downloads/public/ctfile/ctfile.jsp) is right, then ; there should be $$$$ also after the last compound of an SD ; file. This is also more practicable for splitting/merging ; and therefore widely used. . Original comment by: claggner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/490#issuecomment-281775992:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/490#issuecomment-281775992,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1391954. >below). But it is important to be aware that the DLLs have ; >C++ interfaces and so are only useable when being called ; >from C++ programs which have been compiled with the same . Ouch, yes. I forgot the name mangling issue. >If you manage to get round the bug in building DLLs (or ; >anything else) on MinGW we would be delighted if you could ; >share your build files. The OBabel standalone build is ; >easier if it meets your needs. O.K., I managed to build the static library by running; configure, adding dlhandler_win32.cpp, manually replacing; all references to dlhandler_unix with dlhandler_win32; (including the .loT files and dependencies!), defining; HAVE_CLOCK_T in babelconfig.h and runnig make. It does not emit any error messages but also does not build; a DLL, maybe you can give me a hint where to look why?. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776095,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1391954. Here is the requested backtrace from gdb: gdb.txt. regards,. Ernst-Georg. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776462:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776462,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1391954. Hm, it seems that the bond stereo information of the; original Molfile gets lost on the way throug OpenBabel. Without bond stereo, I get the same InChI from the IUPAC; tool and babel.exe. I can't find any documentation about stereo handling during; conversion, so I would consider this either a bug in; OpenBabel or in the documentation. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/510#issuecomment-281776338:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/510#issuecomment-281776338,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1391954. I've tracked it down to ProcessOneStructure() in GetINCHI(); in inchi_dll.c. After ProcessOneStructure() the InChI in output_file->pStr; is already truncated. But from there, I'm out of my league... Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/510#issuecomment-281776337:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/510#issuecomment-281776337,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1391954. Thank you. I assume atomtyp.h will also have to be fixed? ; Can I do that myself or better wait for 2.1.0?. Original comment by: @ergo70,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776310:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776310,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1391954. Yes, it works for me now. Thank you. Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776313:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776313,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1391954; Originator: YES. >I think your code has a (common) programming error.; >In ob_hillformula the pointer tmpFormula does not have any memory assigned; >to it. So depending on where it pointed, the function could work, or it. Objection your honor!. man strdup (3):. The strdup() function allocates sufficient memory for a copy of the string str, does the copy, and returns a pointer to it. The pointer may subsequently be used as an argument to the function free(3). My code my have problems but I never release something that frequently crashes and since I call free() on that pointer later, I'm pretty sure it is properly allocated. The PostgreSQL server is remorseless in case of memory violations. ;-). I'm currently suspecting the MinGW compiler 3.4.2 I use to be the reason (which has at least one problem with optimizations switched on), so I would like to have this bug reopened until I can verify this. I'm currently updating to MSYS 5.1.3 with gcc 3.4.5 so it won't take long. But this still not explains why it works with Openbabel 2.0.x and the same compiler... Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779477,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1391954; Originator: YES. This was most likely a compiler bug with MinGW gcc 3.4.2. After updating to the current MinGW gcc 3.4.5. and recompiling, everything works fine. And it comes with it's own gettimeofday() also, no need to tinker with the Makefiles anymore. :). Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779482:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779482,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1391954; Originator: YES. Update: I have removed the call to AddHydrogens() as suggested and now it works. So if there is really a bug, it's most likely in AddHydrogens(). Original comment by: @ergo70",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779480:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779480,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1395228. Hope the attached files provide the information you require:. test.mol: Example mol file exported from ISIS Draw. babel1.mol2: test.mol converted -imol -omol2 with babel ; 1.100.2 which is read with bonds by sybyl. babel2.mol2: same file converted with babel 2.0.0 which is ; read but doesn't get bonds. sybyl.mol2: same structure sketched and save in sybyl as a ; reference .mol2 file. Note that this is 3D whereas the ; other files are all 2D. Original comment by: kparkes,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/504#issuecomment-281776219:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/504#issuecomment-281776219,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1444119. Accidentally created twice, deleting second copy. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/554#issuecomment-281777250:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/554#issuecomment-281777250,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1444119. Here is another case that is probably the same bug. This is; particularly bad because it loses aromaticity on a simple; benzene ring. The SD File is parsed correctly can converted; to a SMILES, but when you re-parse the SMILES that OpenBabel; already produced, you get garbage. See the SD file below; (call it ""foo.sdf""), and use it for this test:. $ babel /tmp/foo.sdf -o smi ; c1(n(c2c(c(o1)=O)cccc2)CC(=O)OCC)=O; 1 molecule converted; [M6:cj] /emi/src/docs/patents $ babel /tmp/foo.sdf -o smi |; babel -i smi -o smi; 1 molecule converted; C1(OC(C2C(N1CC(=O)OCC)CCCC2)=O)=O; 1 molecule converted. ----------------------. OpenBabel05020621282D. 18 19 0 0 0 0 0 0 0 0999 V2000; 1.3509 0.4120 0.0000 C 0 0 0 0 0; 0.6384 -0.0005 0.0000 N 0 0 0 0 0; 1.3509 1.2370 0.0000 O 0 0 0 0 0; 0.6384 1.6537 0.0000 C 0 0 0 0 0; -0.0741 1.2370 0.0000 C 0 0 0 0 0; -0.0783 0.4120 0.0000 C 0 0 0 0 0; 0.6342 -0.8255 0.0000 C 0 0 0 0 0; 2.0634 -0.0005 0.0000 O 0 0 0 0 0; -0.0866 -1.2380 0.0000 C 0 0 0 0 0; 0.6384 2.4787 0.0000 O 0 0 0 0 0; -0.7991 -0.8255 0.0000 O 0 0 0 0 0; -0.7908 1.6495 0.0000 C 0 0 0 0 0; -0.0866 -2.0630 0.0000 O 0 0 0 0 0; -0.7908 -0.0005 0.0000 C 0 0 0 0 0; -0.7991 -2.4755 0.0000 C 0 0 0 0 0; -1.5033 1.2370 0.0000 C 0 0 0 0 0; -1.5033 0.4120 0.0000 C 0 0 0 0 0; -0.8033 -3.3005 0.0000 C 0 0 0 0 0; 2 1 1 0 0 0; 3 1 1 0 0 0; 8 1 2 0 0 0; 6 2 1 0 0 0; 7 2 1 0 0 0; 4 3 1 0 0 0; 5 4 1 0 0 0; 10 4 2 0 0 0; 12 5 2 0 0 0; 6 5 1 0 0 0; 14 6 2 0 0 0; 9 7 1 0 0 0; 11 9 2 0 0 0; 13 9 1 0 0 0; 16 12 1 0 0 0; 15 13 1 0 0 0; 17 14 1 0 0 0; 18 15 1 0 0 0; 17 16 2 0 0 0; M END; $$$$; -------------------. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776442:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776442,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1444119. I tested this bug against openbabel-1.100.2, and it does NOT; exhibit this problem. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/538#issuecomment-281776850:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/538#issuecomment-281776850,2,"['Log', 'test']","['Logged', 'tested']"
Testability,"Logged In: YES ; user_id=1444119. Perl uses ""lazy"" garbage collection. Very lazy -- normally; objects are left alone unless the pointer (object) is about; to be reused. The example you give won't detect leaks,; because the $obMol object is never deallocated. And; furthermore, $obMol->Clear()) erases atoms and bonds, but; does not deallocate or resize the atom/bond arrays that held; them, so you would *not* expect memory usage to shrink when; you call $obMol->Clear(). The $obMol object and all of its; internal structures, still exist, waiting for the next time; you call $obMol->ReadString(). Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1444119. This is most likely a combination of two other bugs. . 1. As far as I can tell, any SMARTS with @, @@, or /\; cis/trans markings never matches itself. It's just flat broken. 2. The other major source of errors is bug #1503849, ""SMARTS; ring-closure not parsed correctly."" Since OB *often* writes; out SMILES like C=1CCCCC1, these never match themselves. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/552#issuecomment-281777232:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/552#issuecomment-281777232,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1444119. This may be related to the SSSR detection in rings.c. It; appears to take exponential time O(K^R) where R is the; number of rings in a group. Fullerenes with 60 rings work,; but past about 72 rings the exponential time seems to be; prohibitive. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777615:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777615,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1444119; Originator: NO. I'm reopening this bug. The problem isn't due to an error in the input -- it is a real bug in canon.cpp. Even if you replace the N with a C, you'll still get two different canonical SMILES. See my earlier comments about why this happens. Craig. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779168:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779168,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1444119; Originator: NO. The canonical SMILES is incorrect -- I will investigate. However, OpenEye's depiction is wrong, too, as illustrated by these two SMILES. C/C=C(/Br)/C; C/C=C(/Br)\C. OpenEye's depict program draws two molecules, but they can't both be right. The first one is wrong, because it puts the methyl and bromo in the same place. Daylight's SMILES parser correctly rejects the first SMILES. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/605#issuecomment-281778100:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/605#issuecomment-281778100,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1444119; Originator: NO. This SD File from DrugBank is not valid. It's not a problem with OpenBabel. Last time I downloaded data from DrugBank, I had the same problem: The first line of many of the MOL records is simply missing. In this instance, look at each $$$$ line. Immediately following it, there are only two header lines, followed by the COUNTS line. A proper SD File has three lines. Two lines are illegal, and OpenBabel is correct to reject it. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/760#issuecomment-281781039:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/760#issuecomment-281781039,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1444119; Originator: NO. This appears to be a bug in the symmetry analysis / canonicalization (canon.cpp). It is exceeding some threshold that causes it loop infinitely, even though it seems to have generated a canonical labeling of the atoms. The following loops forever:; echo 'C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O 11980446' | tools/babel -i smi -o can. But if you remove just one of the repeated units, it finishes almost instantly:. echo 'C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O.C1(=C(C(=C(C(=C1F)F)F)F)F)C(O)O 11980446' | tools/babel -i smi -o can. My suspicion is that the 32-bit numbers used to represent the graph invarients for each atom isn't enough bits, or it could be that some of the internal ""fields"" in this 32-bit number are being exceeded such that the graph invarient labels for atoms can't be sorted out. This may be a symptom of the warning in the code, canon.cpp::CreateNewClassVector(), which says,. Note that, per Weininger's warning, this assumes the initial class; ID's are less than 100, which is a BAD assumption, e.g. OCC...CCN; would have more than 100 symmetry classes if the chain is more than; 98 carbons long. Should change",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/690#issuecomment-281779692:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/690#issuecomment-281779692,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1444119; Originator: NO. This is a bug in the canonicalizer. The canonicalizer figures out the symmetry groups of the atoms without taking chirality into account, so any time there are two atoms that are identical except for their chirality, you'll get two possible ""canonical"" SMILES. Another instance of this is documented in the code, where a cis/trans configuration is incorrectly analyzed because, without taking chirality into account, it appears to be symmetrical and hence not cis or trans. In this case there is an axis of symmetry through a ring, and the only difference in the two halves of the ring are the two chiral centers themselves. So when the canonical-SMILES tree-generator reaches the ring, it has a choice between going left or right, and both paths appear identical, so it can generate two different canonical SMILES. The canonicalizer needs to add chirality to the atom-invarients *before* it starts analyzing chirality. However, even this is tricky, because sometimes a center can be chiral or achiral depending on the chirality of *other* atoms, leading to a sort of chicken-or-egg problem. Maybe a two-pass symmetry analysis is needed: First without chirality, then add in the chirality as new atom-invarients when a tie between two chiral atoms is discovered, and re-do the symmetry analysis. Craig. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779164:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779164,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1444119; Originator: YES. Warning to developers: If you did a lot of SDF-to-SMILES translations using earlier versions of Open Babel, the SMILES cis/trans markings will be WRONG in roughly 25% of the molecules that have an E/Z double bond. Note that SMILES-to-SMILES conversion was correct, since the bug was duplicated in the SMILES reader and writer. Only SMILES that originated from some other format (SDF, etc.) will be incorrect. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/584#issuecomment-281777704:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/584#issuecomment-281777704,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1454689; Originator: NO. See http://openbabel.org/wiki/Radicals_and_SMILES_extensions. The SDF file does not explicitly state that the Si is a radical, and so OpenBabel assumes you just meant the extra Hydrogen to be there implicitly (this assumption has been annoying me all day). Conversion to many other formats, including printing out the SDF again, will not show implicit Hydrogens. The formula, SMILE, molecular weight, etc, do. If you use this SDF file it gets it correct (I have added a line specifying that atom 2 is a radical). OpenBabel06200711312D. 4 3 0 0 0 0 0 0 0 0999 V2000; 0.0000 -0.6667 0.0000 C 0 0 0 0 0; 0.5000 -0.5000 0.0000 Si 0 0 0 0 0; 1.0000 -0.6667 0.0000 C 0 0 0 0 0; 0.5000 -0.0000 0.0000 C 0 0 0 0 0; 1 2 1 0 0 0; 2 3 1 0 0 0; 2 4 1 0 0 0; M RAD 1 2 2; M END; $$$$. The assumption about implicit hydrogens is rather troublesome.; When an atom has not been explicitly marked as a radical center (which cannot be done in many file formats that OpenBabel reads) and yet has is not valence satisfied, I think there are three possible reasons. (1) The Hydrogen was implicit and should be added automatically. (2) The radical center was 'implicit' and the spin multiplicity of the atom should be changed automatically. (3) It was just a mistake and an error should be raised that the molecule is nonsensical. . OpenBabel always seems to go with option (1), which makes sense for some chemical software, especially that aimed at pharmaceuticals. However, reading in g03 log files for example, especially when the molecule has an overall spin multiplicity specified, option (2) is vastly preferable. . Can we give the user the choice when importing, as to which assumptions to make?. Original comment by: rhw27",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/741#issuecomment-281780667:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/741#issuecomment-281780667,2,"['Log', 'log']","['Logged', 'log']"
Testability,Logged In: YES ; user_id=1500648; Originator: NO. Added check for eof() from cin. Resolved in trunk 1730. Original comment by: @milkypostman,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/593#issuecomment-281777905:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/593#issuecomment-281777905,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1500648; Originator: NO. I don't know how you guys are testing, but using both Avogadro and obmm, this ring of three carbons plus hydrogens is giving me a nan result. Not sure what causes this. I'm attaching the test file. ; File Added: threering.gpr. Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/609#issuecomment-281778179:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/609#issuecomment-281778179,3,"['Log', 'test']","['Logged', 'test', 'testing']"
Testability,"Logged In: YES ; user_id=1500648; Originator: YES. Marking as ""Pending"". I believe the fix we have is sufficient and makes sense. Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778209:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778209,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1500648; Originator: YES. Ok, so it is obvious from the code; there is a check to see if the molecule has any bonds. ie. if the molecule doesn't have any bonds it doesn't finish (just returns). namely line 1906:. if(NumBonds()==0 && NumAtoms()!=1); {; obErrorLog.ThrowError(__FUNCTION__, ; ""Did not run OpenBabel::AddHydrogens on molecule with no bonds"", obAuditMsg);; return true;; }. Is there any reason this needs to be there?. Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778186:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778186,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1500648; Originator: YES. The segfault appears to be caused by SetParent not being called when NewBond is called. The reason i conclude this is the problem is that it appears to work fine and also it's the one difference between NewBond and AddBond. Closing. Original comment by: @milkypostman,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778126:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778126,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1500648; Originator: YES. This problem has bigger roots and can be replicated in a number of ways. However, this bit of code also causes a segfault. It _uses_ BeginModify and EndModify to add two atoms and create a bond between the two. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);; OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. However, if we add an EndModify() then AddHydrogens to the single atom then continue it works fine. OBMol testMolH3;; testMolH3.BeginModify();; OBAtom *testAtom3 = testMolH3.NewAtom();; testAtom3->SetVector(0.5f, 0.5f, 0.5f);; testAtom3->SetAtomicNum(6);. testMolH3.EndModify();; testMolH3.AddHydrogens();; testMolH3.BeginModify();. OBAtom *testAtom4 = testMolH3.NewAtom();; testAtom4->SetVector(-0.5f, -0.5f, -0.5f);; testAtom4->SetAtomicNum(6);; OBBond *testBond = testMolH3.NewBond();; testBond->SetBO(1);; testBond->SetBegin(testAtom3);; testBond->SetEnd(testAtom4);; testAtom3->AddBond(testBond);; testAtom4->AddBond(testBond);; testMolH3.EndModify();; testMolH3.AddHydrogens();. It would be useful if someone with experience with CorrectPH could help. I was able to trace part of the but down to where there is a Loop on the Apply function in file phmodel.cpp line 158. Also, if you disable PH correction the first code will still segfault in the mol.cpp file around line 1975 (somewhere in the loop where the adoms are created and conformer information setup). Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/607#issuecomment-281778125,13,"['Log', 'test']","['Logged', 'testBond']"
Testability,"Logged In: YES ; user_id=1500648; Originator: YES. Well, the true fix would be to not even bother copying that data when the operator= occurs (like in the loop, test for it and then don't copy that part of it). The other problem i'm afraid of is that this angle data does not get rebuilt when a new atom is added. Original comment by: @milkypostman",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778206:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778206,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1514341; Originator: YES. That hack solved it. Thanks!. ==snippet==; modify openbabel.py to resemble:; import sys; if sys.platform.find(""linux"") != -1:; #import dl; sys.setdlopenflags(sys.getdlopenflags() | 0x100) . Original comment by: theoryno3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/655#issuecomment-281779081:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/655#issuecomment-281779081,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1514992; Originator: YES. Excellent, thank you! We applied smilesformat.cpp rev 2065 and now all 26 test cases provided pass without complaint. I expanded my testing net to include slightly larger molecules ( <= 30 SMILES characters, 891 chiral molecules tested) and came up with a new set of discrepancies (total of 12). As before I can't be certain in all cases that it's not a discrepancy hard-coded in the MolFile / SMILES columns of the database, but I hand checked a couple that seem to be a problem within OpenBabel. In the first case (attached as OB01_DoubleRing.mol) the SMILES string from the vendor database converted fine, both apparently to canonical SMILES and InChI. The MolFile converted to canonical SMILES ok, but lost the stereochemistry on one of the two chiral centers when converted to InChI. If I read the connection table in the MolFile correctly, the two carbons in question are atom 2 (between the two oxygens, which are atoms 3 and 11) and atom 1 (methyl group); that bond appears to be explicitly specified as ""down"" chirality in the 2-1 bond row ('6'). For reference, the vendor-supplied SMILES string is C[C@@H]1OC[C@]2(CCN(C)C2)O1 while the OpenBabel canonical form is CN1CC[C@]2(CO[C@@H](C)O2)C1. The second problem is with a fused ring (not sure that's the correct terminology), molfile attached as OB02_FusedRing.mol. The molecule techincally has three chiral centers, but two of them may only have one R/L form sterically accessible (?). The molfile specifies chirality for all three. OB export to InChI results in loss of chirality information on all three centers ( InChI=1/C8H15NO/c1-9-6-2-3-7(9)5-8(10)4-6/h6-8,10H,2-5H2,1H3 ). OB export to canonical SMILES losses chirality on the hydroxyl. Working with the vendor supplied SMILES string ( CN1[C@@H]2CC[C@H]1C[C@@H](O)C2 ) as input instead of the molfile results in a chirality flip on the hydroxyl when output as canonical smiles ( O[C@@H]3C[C@H]4CC[C@@H](C3)N4C ), but proper chiralit",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779559,4,"['Log', 'test']","['Logged', 'test', 'tested', 'testing']"
Testability,Logged In: YES ; user_id=1514992; Originator: YES. File Added: OB01_DoubleRing.mol. Original comment by: listentoreason,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779561:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779561,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1514992; Originator: YES. File Added: OB02_FusedRing.mol. Original comment by: listentoreason,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779564:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779564,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1548691; Originator: YES. Absolutely! You're right, I misunderstood the CHG field in V3000 MOL files.; babel DOES put the partial charges from molpac2007 in, say, a mol2 file. However, I don't get the audit logs... I tried with:. babel ---errorlevel 4 ...; babel ---errorlevel4 ...; babel --errorlevel 4 ... (also tried with errorlevel 5). but none worked, meaning that no ""audit log"" lines were written to the output file, nor to the standard output. No need for the patch concerning the ""segmentation fault"" I can wait for 2.1. Thank you for your help with this problem!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778407,3,"['Log', 'log']","['Logged', 'log', 'logs']"
Testability,"Logged In: YES ; user_id=1548691; Originator: YES. Hi Geoff,. Yes, you're right, I'm using MOPAC2007. Sorry, I should have attached an example input anyway.; I downloaded/compiled the beta version you mention. The good thing is that it does the conversion. The bad ones are:; 1) I get this message:. 23 audit log messages; (the number depends on the output format). 2) It doesn't matter how I run babel I get a ""Segmentation fault"" at the end. Since the conversion is done this is not really a problem, just that it's not very elegant ;-). Another question, but perhaps I should submit a feature request is that I had hoped that partial charges would be imported, at least to MOL format... Is there a way of doing it?. Thank you very much for your help!. Miguel. Original comment by: molatwork",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778404,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=1557018; Originator: NO. > I'm referring to matrix.cpp,. Oh right, OK. Yes, I agree this could benefit from e.g. multithreading. Just one remark: how sparse are the matrices that you want to run those algorithms on? If they are e.g. adjacency matrices of graphs, then they are probably very sparse, in which case the main optimization to make is to use a sparse matrices library. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810740:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810740,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1557018; Originator: NO. Probably a bug in the Python bindings. vector3::x() returns a reference, while GetX() returns a value. Another interesting thing would be to check whether the crash occurs in x() or in GetVector(). Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779193:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779193,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1557018; Originator: NO. This is for 3x3 fixed-size matrices. So there's nothing to gain from multithreading (the size is too small). It is very important to use fixed-size matrices in order to avoid dynamic memory allocations and unroll loops; most scientific libraries focus on dynamic-size matrices instead. Using dynamic-size matrices would divide the speed by a factor of 10 at least. OpenBabel's matrix code now has pretty extensive unit-tests so I don't think there's much to improve in the area of reliability. As to vectorization, it might indeed improve speed, I don't know (3x3 might be a too small size, and isn't a power of two, so it isn't clear to me that vectorization will help). Just FYI, someone offered to add vectorized codepaths to Eigen. Also keep in mind that currently OpenBabel gains much from the inlining of small math functions. This is only possible with either a builtin math lib (like OpenBabel currently has) or a template lib. I don't think that a binary lib could compete with that, for the kind of small fixed-size matrices that OB is using. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737,3,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=1557018; Originator: YES. And what about that other solution, to write OpenBbael::strtof() functions etc... overriding the C library?. Or if the faulty code is not in namespace OpenBabel you can still override the C functions by #defines but of course thta's uglier... Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779362:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779362,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1557018; Originator: YES. As you wish, I admit I don't have the time to implement right now the solution that I just proposed... but I think that setting locale parameters in a _library_ is too dangerous to be considered a viable solution... it's OK as a very temporary solution though. The problems will happen in multithreaded apps doing something else while OpenBabel is parsing a file. Suppose that the app has two threads, one allows to manipulate a molecule, one allows to edit a document (could be a worksheet). When the app quits, it tells both threads to save their data. So the first thread saves the molecule, the second thread saves the document. The first one changes the locale, which affects the second which wants to honor the locale as it is writing a human-readable document. Of course things are even worse if both threads are playing with the locale, e.g. if both are doing OpenBabel I/O... Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779360:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779360,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1557018; Originator: YES. I hadn't considered that it could be the calling app's responsibility to set the locale. Your solution is exactly the workaround that I had committed to KDE but I thought it was only temporary. . Original comment by: benoitjacob,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779351:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779351,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1557018; Originator: YES. Yes, this is definitely a workaround. In fact we do completely agree :). That OpenBabel parses files in a locale-dependent way, is clearly an OpenBabel bug, which needs to be fixed there. The C library (sscanf) apparently always honor the locale. So any code using it must be changed to use the C++ library (ifstream...) and call .imbue() on the stream to tell it to assume LC_NUMERIC=C. A while ago part of this was fixed in OpenBabel but last time I checked many places (probably in file format plugins...) still had to be ported. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1557018; Originator: YES. Yes, this is what we've been doing in Kalzium and Avogadro. This is of course much more dangerous to do in a lib... though indeed if you set the locale back after completion i.e. after only a fraction of a second, it probably won't cause trouble... anyway I suppose that we agree that it's only a temporary workaround!. Here's my suggestion for a quick fix that at least is not dangerous for the application using OpenBabel: implement in OpenBabel namespace functions sscanf() atoi() strtof() etc..... overriding the ones from the C library. Normally all callers from inside OpenBabel namespace will call them insted of the C library functions. So OpenBabel::sscanf() would be implemented using the c++ standard library and imbue() to ensure that it doesn't honor the locale parameters. As for the optimal fix i.e. removing all calls to these C library functions througout OpenBabel there is a lot of work to do !!!. gaston@kiwi:~/cuisine/openbabel/src$ grep -R sscanf . |wc -l; 630; gaston@kiwi:~/cuisine/openbabel/src$ grep -R atoi . |wc -l; 1161; gaston@kiwi:~/cuisine/openbabel/src$ grep -R strtol . |wc -l; 713; gaston@kiwi:~/cuisine/openbabel/src$ grep -R strtoul . |wc -l; 506; gaston@kiwi:~/cuisine/openbabel/src$ grep -R strtof . |wc -l; 502. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779358:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779358,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1587751. I don't know why this bug report appear duplicated, it's ; the same that the bug report number 1553315, if you are ; administrator please remove this one. Thank you. Original comment by: oligoelemento",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/567#issuecomment-281777463:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/567#issuecomment-281777463,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1595982. The command line to reproduce the bug with the attached data; file (correcting an error in the original post) is:. f=2bo8; cat $f.pdbatm.bz2a? | bunzip2 > $f.pdbatm; head -31077 $f.pdbatm > $f.pdbatm.cut; babel -p -iPDB $f.pdbatm.cut -oPDB $f.pdbh. Original comment by: tadpole_leg,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777471:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777471,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1619256; Originator: NO. I just downloaded version 2.2 for testing and this problem seems to be solved there. Gert . Original comment by: @gertthijs,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/785#issuecomment-281793319:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/785#issuecomment-281793319,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=164544. I can reproduce the component-level grouping problem. Below; are some interesting cases and a stack trace. This problem; seems pretty serious (assuming it's not simply missing; functionality). If it hasn't been implemented yet then it; should be mentioned in the documentation. [philip@darwin]$ obgrep '([#6]).([#6])' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(c)' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(cc)' methane.smi; 0 1; Assert at File mol.cpp Line 689; Segmentation fault. (gdb) set args '([#6]).([#8]c)' methane.smi; (gdb) run; Starting program: /usr/local/bin/obgrep '([#6]).([#8]c)'; methane.smi; 0 1; Assert at File mol.cpp Line 689. Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220) at; mol.cpp:689; 689 obAssert(false);; (gdb) bt; #0 OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220); at mol.cpp:689; #1 0xb7f7c058 in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=0) at stl_vector.h:501; #2 0xb7f7c2dc in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=-1) at; parsmart.cpp:2768; #3 0xb7f7a403 in match (mol=@0xbffff450, pat=0x805da88,; mlist=@0xbffff628, single=false) at parsmart.cpp:2262; #4 0xb7f788dd in OpenBabel::OBSmartsPattern::Match; (this=0xbffff610, mol=@0xbffff450, single=false) at; parsmart.cpp:2087; #5 0x08049a7a in main (argc=-1073744816, argv=0xbffff4d8); at obgrep.cpp:137; (gdb) The program is running. Exit anyway? (y or n) y. Original comment by: pgr94",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152,3,"['Assert', 'Log']","['Assert', 'Logged']"
Testability,Logged In: YES ; user_id=164544. I was confusing problems caused by the shell interpreting; special characters in the SMARTS string and obgrep's errors.; By using single quotes my shell shouldn't be interpreting; special characters any more. [philip@darwin]$ obgrep '!C' mols; SMARTS Error: !C; ^; [philip@darwin]$ obgrep '[!C]' mols; [20 hits]. Is the former invalid SMARTS or is this an obgrep error?. Philip. Original comment by: pgr94,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775109:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775109,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=164544. The segmentation fault has been isolated and is reported in; a separate bug. ; ; http://sourceforge.net/tracker/index.php?func=detail&aid=1119970&group_id=40728&atid=428740. The negation operator wasn't to blame, so marking this bug; as closed. Thanks for the help Geoff et al. . Philip. Original comment by: pgr94",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775113:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775113,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1666820; Originator: YES. File Added: JINGAO.txyz. Original comment by: lidaobing,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/685#issuecomment-281779596:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/685#issuecomment-281779596,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. * Your version isn't the same as SVN (e.g., you still haven't committed test/logp_psa.cpp) Not a big deal. To be sure I used a different check-out than my working copy. So this can't be the problem (will commit test/logp_psa.cpp next time). * We have some subtle floating-point issue between OS X and Linux? Yuck.; * Some unknown force is causing the gradient to explode on my machine. Could you apply the attached patch and post the output? (my output is also attached); File Added: log.patch. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778338:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778338,4,"['Log', 'log', 'test']","['Logged', 'log', 'test']"
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. Both sd and cg correctly minimize 9.gpr here... 9.pdb: ; some bonds are missing when loading this in avogadro, are you using the current SVN version for all files (bond.cpp, ...)?; missing bonds doesn't explain the large bond lengths though. Could you provide some additional information so I can try to reproduce this. (obminimize, sd/cg, ...). Tim. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778328:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778328,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1682851; Originator: NO. File Added: log.txt. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778343:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778343,2,"['Log', 'log']","['Logged', 'log']"
Testability,Logged In: YES ; user_id=1682851; Originator: NO. Fixed in SVN... Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793143:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793143,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. GetBeginAtomIdx() wasn't checking if the _bgn pointer was valid before calling _bgn->GetIdx(). The same problem can be found in GetEndAtomIdx() and OBBond::GetNbrAtom(OBAtom *ptr), I'll fix this too and commit. . (If the atoms are not set, 0 will be returned. When we change to atom indexes starting from 0 in OB3.0, we should return the maximum unsigned int value?? ). (I can't close the bug, I don't have admin rights on the trackers...). Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/754#issuecomment-281780937:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/754#issuecomment-281780937,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. I'm working on the pdbfromat and the chain parser to fix this and similar problems. The problem you describe is solved in my local version which I will commit in the near future. I'm also working on unit tests to check residue names, atom ids, ... Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793142:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793142,2,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. It doesn't explode here... see attached log file. the size of g1g1 shouldn't be a problem since the vector is later normalized in LineSearch(). LineSearch only accepts steps that lower the energy, so I don't realy see how the explosion can happen. Tim; File Added: log. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778332:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778332,3,"['Log', 'log']","['Logged', 'log']"
Testability,Logged In: YES ; user_id=1682851; Originator: NO. LineSearch seems to return large steps. I don't really see how this could happen since it only steps that lower the energy... Could the x.xf notation cause problems?. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778347:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778347,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. No segfault here, but when I use the following script I get:; $python bug.py; 180.0; -159.798511251; $cat bug.py; import pybel; import openbabel as ob. mol = pybel.readstring(""smi"", ""CCCC""); mol.make3D(). atoms = [x.OBAtom for x in mol.atoms]. for i in range(3):; assert atoms[i].IsConnected(atoms[i+1]), ""Not connected!!"". print mol.OBMol.GetTorsion(atoms[0], atoms[1], atoms[2], atoms[3]). assert mol.OBMol.GetTorsion(atoms[0], atoms[1], atoms[2], atoms[3])==180.0; mol.OBMol.SetTorsion(atoms[0], atoms[1], atoms[2], atoms[3], 170.0); # Segfault. print mol.OBMol.GetTorsion(atoms[0], atoms[1], atoms[2], atoms[3]). I'll test in C++ too... Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/755#issuecomment-281780940:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/755#issuecomment-281780940,4,"['Log', 'assert', 'test']","['Logged', 'assert', 'test']"
Testability,Logged In: YES ; user_id=1682851; Originator: NO. OBBuilder::Swap() can do this now. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1427#issuecomment-281810153:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1427#issuecomment-281810153,2,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. The attached strip.cpp file gives the following (correct) output with trunk r2614:. nrings = 1; CC(=C)C(=O)OCCN(C)C.C=CN1CCCC1=O	TIM|OVS2573256; CC(=C)C(=O)OCCN(C)C	TIM|OVS2573256; nrings = 0. However, you use OBMol::StripSalts() which is replaced with OBMol::StripSalts(int threshold) in r2559. (OB 2.1.1?); File Added: strip.cpp. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/776#issuecomment-281786114:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/776#issuecomment-281786114,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1682851; Originator: NO. The openbabel/builder.h file is in svn... Did you update to the last version?. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/696#issuecomment-281779819:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/696#issuecomment-281779819,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1682851; Originator: NO. The problem seems to be the triple bond '#'. . For example: C#CCC will be converted to:. OpenBabel09030803193D. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0000 0.0000 0.0000 C 0 0 0 0 0; 2.5000 0.0000 0.0000 C 0 0 0 0 0; 4.0000 0.0000 0.0000 C 0 0 0 0 0; -1.#IND -1.#IND -1.#IND C 0 0 0 0 0; 1 2 3 0 0 0; 2 3 1 0 0 0; 3 4 1 0 0 0; M END; $$$$. The first three atoms are linear (only x coordinate) and I think OBBuilder tries to find a torsion angle for the 4th atom and fails. I'll have a closer look at this... . Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793437:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793437,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. The second call to Setup(mols[1].OBMol) returns false. This is because the 7th atom doesn't get a type. This atom is the nitrogen in R-N(=O)=O, changing this to R-N(=O)O solves the problem. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/809#issuecomment-281793691:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/809#issuecomment-281793691,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1682851; Originator: NO. There was a line missing in psa.txt (;heavy). This is now fixed in SVN. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/623#issuecomment-281778417:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/623#issuecomment-281778417,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1682851; Originator: NO. This bug is fixed (this was part of the win32 avogadro build):. 	* src/mol.cpp: OBMol::FindChildren was iterating over an atom's bonds; 	in a wrong way. . Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/751#issuecomment-281780868:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/751#issuecomment-281780868,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. atomrecord.cpp now keeps the original chain identifier from the PDB file. For 1XAJ there are now three chains: 'A', 'B' and ' '. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/666#issuecomment-281779284:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/666#issuecomment-281779284,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1682851; Originator: NO. fixed in svn. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/668#issuecomment-281779311:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/668#issuecomment-281779311,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1682851; Originator: NO. make3D was calling localopt(), this called OBForceField::Setup. Setup() called SetupCalculations(), here an iteration over the torsion caused a segfault. This only happens in python, c++ programs using Setup don't have this behavior. If I use cout to print the indexes for the atoms, the index of the first atom is a very large number when printed unsigned and -1 when cast to signed int. Is there any chance that pybel sets the index for the first atom to 0? (OBTorsionIter decrements all indexes by 1). By deleting the TorsionData in the mol before using FOR_TORSIONS_OF_MOL, it works fine now. . Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/755#issuecomment-281780944:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/755#issuecomment-281780944,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1682851; Originator: NO. problem 1 is fixed in current SVN trunk. See commit message for details. Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/709#issuecomment-281780059:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/709#issuecomment-281780059,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1682851; Originator: YES. A bt located the problem (forgot the t... before :( ). DeleteResidue was not correctly updating the indices. bool OBMol::DeleteResidue(OBResidue *residue); {; unsigned short idx = residue->GetIdx();; _residue.erase(_residue.begin() + idx);. for ( unsigned short i = idx ; i < _residue.size() ; i++ ); _residue[i]->SetIdx(i);; //_residue[i]->SetIdx(i-1); // this would renumber starting from -1 (or a very large number to be correct, as this is unsigned). DestroyResidue(residue);. return(true);; }. Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/725#issuecomment-281780350:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/725#issuecomment-281780350,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1682851; Originator: YES. ignore this please.. (can I delete this?). Original comment by: @timvdm,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778221:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778221,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=169818. Easy and good might be a difference to general and usefull ; for prototyping. Assign it to me, I have already some code ; for that I must 'only' transform to C++. @ARTICLE{bk73,; author = {C. Bron and J. Kerbosch},; title = {{F}inding all cliques of an undirected graph},; journal = {Communications of the ACM},; year = {1973},; volume = {16},; pages = {575--577},; owner = {wegner@users.sf.net},; groupsearch = {0},; url = {http://www.netlib.org/tomspdf/457.pdf},; }. @MISC{aj88,; author = {D. Applegate and D. S. Johnson},; title = {dfmax.c [{C} program, {O}nline], available at ; ftp://dimacs.rutgers.edu/pub/challenge/graph/solvers},; year = {1988},; owner = {wegner@users.sf.net},; url = ; {ftp://dimacs.rutgers.edu/pub/challenge/graph/solvers/dfmax.; c},; }. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810027:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810027,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=169818. First, we need some basic graph algorithms like DFS (depth; first search) and BFS (breadth first search).; I think OpenBabel needs a redesign, but anyway we can work; on the actual atom, bond representation. An underlying graph; based node and edge representation would be just nicer;-). Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810115:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810115,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=169818. I like the Rarey et al. algorithm. @ARTICLE{fgr04,; author = {P. C. Fricker and M. Gastreich and M. Rarey},; title = {{A}utomated {D}rawing of {S}tructural {M}; olecular {F}ormulas under; 	{C}onstraints},; journal = {J. Chem. Inf. Comput. Sci.},; year = {2004},; volume = {44},; pages = {1065--1078},; abstract = {In this paper, we present a new algorithm for ; automated drawing of; 	2D structural formulas of molecules. The algorithm ; is based on the; 	classical scheme of a drawing queue placing the ; molecular fragments; 	in a sequential way. We extend the concept of so-; called prefabricated; 	units developed for complex ring systems to ; automatically created; 	drawing units for chains and rings which will then ; be assembled; 	in a sequential fashion. The approach is fast and ; can be naturally; 	extended to the problem of drawing molecules with ; common core structures.; 	Further on, we present an algorithm that allows the ; drawing of 2D; 	structural formulas under directional constraints ; assigned to a; 	subset of bonds. Since no numerical optimization is ; necessary, the; 	algorithm creates drawings of small organic ; molecules on the order; 	of 500 structures per second. The new algorithm is ; relevant for; 	all kinds of prediction and analysis software ; presenting a large; 	number of probably similar molecular structures to ; the user of the; 	software.},; doi = {10.1021/ci049958u},; owner = {wegner@users.sf.net},; }. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809765,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=169818. The easiest way to deal with that is to use the Morgan ; algorithm to create a 'unique' renumbering of molecules. If ; this is done, the SMILES code can be generated with respect ; to this newly renumbered molecule. @ARTICLE{mor65,; author = {H. L. Morgan},; title = {{T}he {G}eneration of a {U}nique {M}achine {D}; escription for {C}hemical; 	{S}tructures -- {A} {T}echnique {D}eveloped at {C}; hemical {A}bstracts; 	{S}ervice.},; journal = {J. Chem. Doc.},; year = {1965},; volume = {5},; pages = {107--113},; }; . Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810114:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810114,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=169818. We need basic graph algorithms, e.g. using the Boost Graph; library; http://www.boost.org/; http://www.boost.org/libs/graph/doc/table_of_contents.html. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810116:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810116,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=169818. You can convert the TPSA calculation to OpenBabel:; http://www-ra.informatik.uni-tuebingen.de/software/joelib/api2/joelib2/algo/contribution/package-summary.html; http://www-ra.informatik.uni-tuebingen.de/software/joelib/api2/joelib2/data/GroupContributionHolder.html. It is based on SMARTS and because OpenBabel uses the same; expert systems, the prediction should have the same quality. Kind regards, Joerg. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810054:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810054,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=169818. ftp://dimacs.rutgers.edu/pub/challenge/graph/solvers/; http://portal.acm.org/citation.cfm?id=362367&coll=Portal&dl=GUIDE&CFID=69760523&CFTOKEN=72640023. Original comment by: wegner,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810028:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810028,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=169818; Originator: NO. Thanks for the clustering links and I am more in favor of creating an appropriate output format based on fingerprints and/or molecular features. ; A comma or space delimited format should work, e.g. by extending obprop? Does anyone know the best input format for this cluster package?. Joerg. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810327:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1444#issuecomment-281810327,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=169818; Originator: NO. Ups, I just did the same.; Geoff, do we need the ; if ( inchiString.length() == 0 ); statement ?. Otherwise you can just revert to the version you have fixed. Joerg. Original comment by: wegner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/630#issuecomment-281778588:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/630#issuecomment-281778588,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1699627; Originator: YES. Great...thanks. Apparently, I didn't have the atomtyp.txt file before, but with the file it seems to fix at least one of the test examples...I will try more and get back to you. In the meantime, I have come across a similar problem with silicon:; InChI=1/Si2/c1-2; SMILES=[SiH3-]#[SiH3+]. Original comment by: gmagoon",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/813#issuecomment-281793757:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/813#issuecomment-281793757,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1700677; Originator: NO. I'm just including this comment since I was the originator but was not logged in at the time of the submission. My username is: dbower01. The parameters for the IUPAC InChI code I used is as follows (which happen to be the out-of-box defaults):. Options: Mobile H Perception ON; Isotopic ON, Absolute Stereo ON; Omit undefined/unknown stereogenic centers and bonds. I'm going to spend some time reading through the OpenBabel docs to see if I can find any differences or clues as to what may be causing this/these differences. Dave. Original comment by: dbower01",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/595#issuecomment-281777933:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/595#issuecomment-281777933,2,"['Log', 'log']","['Logged', 'logged']"
Testability,Logged In: YES ; user_id=1795260; Originator: NO. Just registered at sourceforge. Let me know if you need more info. . Ivo . Original comment by: isitech,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778917:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778917,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1818755; Originator: YES. There is another problem reading GAMESS-files.; Take this one (from: www.cscs.ch/molekel - see the data-folder:GAMESS_TS-ifolow.log):. INPUT CARD> $CONTRL SCFTYP=RHF MPLEVL=0 RUNTYP=SADPOINT EXETYP=RUN ECP=READ ; INPUT CARD> ICHARG=3 MULT=1 COORD=UNIQUE UNITS=ANGS MAXIT=200 molplt=.t. $END ; INPUT CARD> $SCF dirscf=.f. extrap=.t. damp=.t. shift=.t. dem=.t. rstrct=.t. ; INPUT CARD> diis=.t. soscf=.f. $END ; INPUT CARD> $SYSTEM TIMLIM=700 MEMORY=100000000 $END ; INPUT CARD> $STATPT nstep=60 opttol=1.e-4 dxmax=0.1 hess=read purify=.t. ; INPUT CARD> ifolow=1 npun=1 $END ; INPUT CARD> $ECP . crashes the WINDOWS-Version. If modified to:; INPUT CARD> $CONTRL SCFTYP=RHF MPLEVL=0 RUNTYP=SADPOINT EXETYP=RUN ECP=READ $END ; INPUT CARD> $ICHARG=3 MULT=1 COORD=UNIQUE UNITS=ANGS MAXIT=200 molplt=.t. $END ; INPUT CARD> $SCF dirscf=.f. extrap=.t. damp=.t. shift=.t. dem=.t. rstrct=.t. diis=.t. soscf=.f. $END ; INPUT CARD> $SYSTEM TIMLIM=700 MEMORY=100000000 $END ; INPUT CARD> $STATPT nstep=60 opttol=1.e-4 dxmax=0.1 hess=read purify=.t. ifolow=1 npun=1 $END ; INPUT CARD> $ECP . OpenBabel works fine. . Original comment by: yodah134,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779041:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779041,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=1826769; Originator: YES. Chris,. Excellent! The compilation of the customized version worked like a charm. Conversion is perfect for my needs. Thanks a lot,. Reiner. Original comment by: reinerdieden",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779230:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779230,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1826769; Originator: YES. From the last message, I gather that I should have reacted to the previous one...; Maybe checked wether it works in the announced revision ? My problem is : how to get at it ?. Original comment by: reinerdieden",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779228:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/663#issuecomment-281779228,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1871725; Originator: NO. ""SMI"" format now has stereochemistry! Thank you.; The ""in"" and ""out"" of screen directions still look reversed to me, but that could be just ; my perception problem. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779026:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779026,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1871725; Originator: NO. I tried it with the svn snapshot today, however I get segfault when running OSRA; compiled with this version of openbabel. This is the backtrace:; Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread -1208826112 (LWP 24112)]; 0x008b5740 in freelocale () from /lib/libc.so.6; Missing separate debuginfos, use: debuginfo-install ImageMagick.i386 bzip2.i386 expat.i386 fontconfig.i386 freetype.i386 gcc.i386 glibc.i386 lcms.i386 libICE.i386 libSM.i386 libX11.i386 libXau.i386 libXdmcp.i386 libXext.i386 libXt.i386 libjpeg.i386 libtiff.i386 libxcb.i386 libxml2.i386 netpbm.i386 zlib.i386; (gdb) bt; #0 0x008b5740 in freelocale () from /lib/libc.so.6; #1 0x004f98d8 in OpenBabel::OBGlobalDataBase::Init (this=0x645a40); at data.cpp:928; #2 0x004faa88 in OpenBabel::OBTypeTable::GetFromType (this=0x645a40); at data.cpp:607; #3 0x004db7e5 in OpenBabel::OBAtom::GetType (this=0x8fb2a18) at atom.cpp:463; #4 0x004dba13 in OpenBabel::OBAtom::operator= (this=0x8fb2aa0, src=@0x8fb2a18); at atom.cpp:159; #5 0x00537ec4 in OpenBabel::OBMol::AddAtom (this=0xbfb63260, atom=@0x8fb2a18); at mol.cpp:1560; #6 0x080ae2d1 in get_smiles (atom=0xbfbe262c, real_atoms=28, bond=0xbfc7ea2c, ; n_bond=354, rotors=@0xbfb63420, confidence=@0xbfb633e8, ; num_fragments=@0xbfb63418, r56=@0xbfb63410, avg=45.187128051905447); at osra_openbabel.cpp:577; #7 0x0805d858 in resolve_bridge_bonds (atom=0xbfbe262c, n_atom=690, ; bond=0xbfc7ea2c, n_bond=354, thickness=4, real_atoms=@0xbfcb9fbc, ; avg=45.187128051905447) at osra.cpp:2568; #8 0x080626b1 in main (argc=2, argv=0xbfcba1e4) at osra.cpp:4082. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779022:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779022,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1871725; Originator: NO. Oops, I meant 2.1.1 not 2.2 (as in - ""release after 2.1) !. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779020:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779020,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1871725; Originator: NO. SMI format does not have it even in 2.2 release.; CAN format has it but the normalization procedure often makes it difficult to compare the resulting SMILES with the structure one wanted to generate - e.g. the directions ""in"" and ""out"" of the screen are often reversed etc. For complicated structures it is sometimes very non-trivial to check if the stereochemistry; has been correctly assigned.; The best option (for me) would be to have regular SMILES (not normalized to canonical format) reflect the stereoinformation conveyed by the OB_HASH_BOND and OB_WEDGE_BOND flags. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779016:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779016,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1871725; Originator: YES. I was able to compile a functioning executable babel.exe under cygwin.; Here are the sequence of steps for 2.1.1:; tar -xzf openbabel-2.1.1.tar.gz; cd openbabel-2.1.1; ./configure; cd src/formats/inchi; make; cd ../../../tools; edit the Makefile to add the following lines ; (output of diff Makefile Makefile.orig):; ############# begin output ########################; 15c15; < formats_objects := $(wildcard ../src/formats/*.o) ../src/formats/inchi/.libs/libinchi.a; ---; > ; 52c52; < babel_DEPENDENCIES = ../src/libopenbabel.la $(formats_objects); ---; > babel_DEPENDENCIES = ../src/libopenbabel.la; 223c223; < babel_LDADD = ../src/libopenbabel.la $(formats_objects); ---; > babel_LDADD = ../src/libopenbabel.la ; ####################### end output ##############; (you will have to repeat the editing for the rest of the executables; if you need more than babel.exe); cd ..; make; make install. Original comment by: igor_filippov,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780069:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780069,2,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1875145; Originator: YES. I did not find a menu in my OpenBabel windows GUI. maybe my version is too old. the DOS prompt tells me it's ""Open Babel 2.0.0 -- Dec 1 2005 -- 13:55:06"". I don't know the versions I had at my summer project. I could not upload the file because it is bigger than the maximum allowed: the file can be found at http://www.rcsb.org/pdb/files/1g50.pdb; residues to look at are for example: Arg335 - both terminal nitrogens should be protonated (the residue is charged +); and His356 - only one ring nitrogen is protonated (the residue is neutral). Thanks. Felix. Original comment by: felix_p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779326:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779326,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1900870; Originator: YES. Checked in src/bitvec.cpp and include/openbabel/bitvec.h; They compile and run on Linux gcc v4.1.2, Windows VC8 sp1, and Macintosh; gcc v4.0.1 with no warnings or errors (-Wall / -W4 -analyze ).; Conversion of several diverse test molecules produce identical results before ; and after the changes, (but take less time).; Fully doxygen documented.; svn revision 2159. Original comment by: kshepherd1",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1491#issuecomment-281810807:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1491#issuecomment-281810807,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=1918617; Originator: YES. 'odbccp32.libi' was a typo in CoreWin.vsprops; - probably a result of fat fingering with vim.; I will svn up and run through again. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781147:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781147,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. Build from FastSearch. LINK : fatal error LNK1181: cannot open input file 'obcommon.lib'. Another dependency?. Result:. ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; atom.cpp; Generating Code...; Compiling...; alias.cpp; Generating Code...; Compiling...; typer.cpp; transform.cpp; rotor.cpp; rotamer.cpp; ring.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 2 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprint",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. Correct about compiling on VS2008; ref: bug 1985163 and others. I have a long term goal related to; building Avogadro, crystallography,; simulation and modelling (not just; chemistry). Real life work forces me to use MS; stuff 90% of the time and I have; lots of input (too much sometimes); on their long term roadmap.; VS2005 is not it. So this is more of ""breaking new ground"",; ""pushing the envelope"", ""challenging; the bleeding edge""... I have read most of the docs, wiki,; and other instructions but it all; seems somewhat hit and miss at; the moment. chrismorl mentioned some problems; in building with debug mode, so I; tried release and debug. I will read up on the devel mailing; list. I would like to build in Windows without having; to use the IDE but still compare results with; command line equivalents. Pointers; appreciated. Still researching... Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786146:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786146,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. Error	1	fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory	c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel\reaction.h	26	OBMoreFormats; Error	23	error BK1506 : cannot open file '.\Debug\ArrayList.sbr': No such file or directory	BSCMAKE	OBMoreFormats. Results:; ------ Build started: Project: OBMoreFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; acrformat.cpp; adfformat.cpp; alchemyformat.cpp; amberformat.cpp; balstformat.cpp; bgfformat.cpp; boxformat.cpp; cacaoformat.cpp; cacheformat.cpp; carformat.cpp; cccformat.cpp; chem3dformat.cpp; chemdrawcdx.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such file or directory; chemdrawct.cpp; chemtoolformat.cpp; cifformat.cpp; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xtree(161) : warning C4503: 'std::_Tree<_Traits>::_Key' : decorated name length exceeded, name was truncated; with; [; _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::less<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\map(78) : see reference to class template instantiation 'std::_Tree<_Traits>' being compiled; with; [; _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::less<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; ..\..\src\formats\cifformat.cpp(176) : see reference to class template instantiation 'std::map<_Kty,_Ty>' being compiled; with; [; _Kty=std::set",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781162:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781162,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. Errors Remaining:. OBMoreFormats:; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . OBXMLFormats:; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . Results for All OB Components: . FastSearch:. ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. gen3D:. ------ Build started: Project: OBDESC, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smartsdescriptors.cpp; optransform.cpp; groupcontrib.cpp; filters.cpp; cmpdfilter.cpp; Generating Code...; Linking...; Creating library ../OBDESC.lib and object ../OBDESC.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDESC\Release\BuildLog.htm""; OBDESC - 0 error(s), 0 warning(s); ------ Build started: Project: gen3D, Configuration: Release Win32 ------; Copying compiler-specific bab",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,2,"['Log', 'log']","['Logged', 'log']"
Testability,Logged In: YES ; user_id=1918617; Originator: YES. File Added: atom.h_08 Jun. 09 22.07.gif. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781272:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781272,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. I googled for ""odbccp32.libi"" and got back ZERO results.; Extremely suspicious!; My guess is that it is actually looking for; 'odbccp32.lib' and something causes an extra 'i'; to get added.; I will check tonight that CoreWin.vsprops does not; have anything strange. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781145:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781145,2,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. Looks like that squashed it. I will continue and try to build; all the other parts. Results:. ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781150:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781150,3,"['Log', 'log']","['Logged', 'log']"
Testability,Logged In: YES ; user_id=1918617; Originator: YES. OpenBabelOBF revision 2585 Build.txt; File Added: OpenBabelOBF revision 2585 Build.txt. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786135:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786135,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. OpenBabelOBF revision 2607.txt attached. looks the same as previous tested revision. ...time to install gnuwin32... File Added: OpenBabelOBF revision 2607.txt. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786176:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786176,2,"['Log', 'test']","['Logged', 'tested']"
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. building OBCommonFormats debug mode; 16 errors; error LNK2001: unresolved external symbol. results:. ------ Build started: Project: OBCommonFormats, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; atomrecord.cpp; mdlformat.cpp; obmolecformat.cpp; opendxformat.cpp; smilesformat.cpp; Generating Code...; Compiling...; APIInterface.cpp; mol2format.cpp; pdbformat.cpp; Generating Code...; Linking...; Creating library ..\Debug/obcommonD.lib and object ..\Debug/obcommonD.exp; pdbformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z); smilesformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z); mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z) referenced in function ""public: virtual bool __thiscall OpenBabel::MDLFormat::ReadMolecule(class OpenBabel::OBBase *,class OpenBabel::OBConversion *)"" (?ReadMolecule@MDLFormat@OpenBabel@@UAE_NPAVOBBase@2@PAVOBConversion@2@@Z); mol2format.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z); obmolecformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?GetTitle@OBMol@OpenBabel@@QBEPBD_N@Z); opendxformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: char const * __thiscall OpenBabel::OBMol::GetTitle(bool)const "" (__imp_?Ge",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786054:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786054,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. building OBMoreFormats in release mode gets rid of; Error	23	error BK1506 : cannot open file '.\Debug\ArrayList.sbr': . Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781163:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781163,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. bump!. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781159:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781159,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. consider this the master bug; latest report from #1994744 shows some; promise and I will test with the latest svn. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781171:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781171,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=1918617; Originator: YES. did a search for all files with shared; in the name. results attached in shared.txt; File Added: shared.txt. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786180:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786180,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. did svn update. Build FastSearch. Result:. LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'. log below:. ------ Build started: Project: OBError, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Debug\BuildLog.htm""; OBError - 1 error(s), 0 warning(s); ------ Build started: Project: OBDLL, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; atom.cpp; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; mol.cpp; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; residue.cpp; ring.cpp; rotamer.cpp; rotor.cpp; transform.cpp; typer.cpp; Generating Code...; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.2",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138,3,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. doing some more tracing,; show include files and; boost/detail/workaround.hpp; is where it starts to go wrong. this file contains info related to; fixes for various compilers. the latest boost provides support; for VC9 (VS2008) but it seems; that it is not configured or; called in the application. (makes sense as the recommended; version is VS2005). hopefully someone with more knowledge; will be able to grok this file; and get it sorted. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786160:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786160,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. googled the error:. http://forums.microsoft.com/MSDN/ShowPost.aspx?PostID=367165&SiteID=1; http://www.freeorion.org/forum/viewtopic.php?f=9&t=47&p=28432; http://www.hmailserver.com/forum/viewtopic.php?f=10&t=2765&start=0&st=0&sk=t&sd=a; http://www.linuxquestions.org/questions/programming-9/do-we-have-regular-expression-in-c-422095/. Seems to me it could be related to losing the include boost dir when; svn update is done.; I have created a separate windows-vc2008 dir for this compilation that; was a copy of the windows-vc2005 but I am not familiar enough with; the details yet. Ideas and suggestions welcomed. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781153:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781153,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. no locations found for shared_ptr; under C:\Program Files\Microsoft Visual Studio 9.0\VC\include; and subfolders. tr1 found in the following files:. Start; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\comutil.h; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\functional; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\intrin.h; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\ios; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\mbstring.h; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\string.h; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\tchar.h; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\wchar.h; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xhash; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xiosbase; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xlocale; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xlocnum; Finished. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786191:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786191,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. openbabel solution revision 2585 debug.txt; File Added: OpenBabelOBF revision 2585 Build.txt. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786136:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786136,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. openbabel solution revision 2585 debug.txt; File Added: openbabel solution revision 2585 debug.txt. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786137:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786137,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. openbabel solution revision 2585 release.txt; File Added: openbabel solution revision 2585 release.txt. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786143:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786143,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. problems loading the file,; this one should be good. File Added: OBMoreFormats revision 2588 include files.txt. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786162:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786162,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. r2560 no change to either of the two files,; both dated 6/1/08 here. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781278:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781278,2,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. reaction.h has this code:. #ifdef USE_BOOST; #include <boost/shared_ptr.hpp>; namespace std{ namespace tr1=::boost; }; #else; #include <tr1/memory>; #endif. The locations of shared_ptr.hpp can be seen; in the attached file:; shared_ptr.hpp_06 Jun. 09 21.51.gif. File Added: shared_ptr.hpp_06 Jun. 09 21.51.gif. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781155:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781155,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. result for revision 2613 attached. File Added: OpenBabelOBF revision 2613.txt. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786184:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786184,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. results for revision 2717; File Added: OpenBabelOBF revision 2617.txt. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786189:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786189,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. revision 2578. refer to bug 1993613 . removing the file removes errors for; KFReader.c but OBMoreFormats still fails. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774#issuecomment-281786084:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774#issuecomment-281786084,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. revision 2578. the two files are consistent now; and the others checked out in this; rev were also OK. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781283:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781283,2,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. revision 2578; building OBCommonFormats release mode - success. results:. ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 0 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786055:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786055,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. revision 2578; compiling OpenBabelOBF.sln now works:. Results:. ------ Build started: Project: OBError, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; cl : Command line warning D9035 : option 'Wp64' has been deprecated and will be removed in a future release; tokenst.cpp; plugin.cpp; loader.cpp; Linking...; Creating library ..\oberror.lib and object ..\oberror.exp; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Release\BuildLog.htm""; OBError - 0 error(s), 1 warning(s); ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; rand.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; matrix3x3.cpp; kekulize.cpp; griddata.cpp; grid.cpp; Generating Code...; Compiling...; generic.cpp; descriptor.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; vector3.cpp; typer.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ----",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. revision 2600 report attached; removed boost, looks better; some error references to tr1/memory; some missing include files; I think you are getting close. too busy right now for another; mailing list. File Added: OpenBabelOBF revision 2600.txt. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786167:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786167,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. so this time I made sure it was release mode for all projects; (see attached screen from configuration manager). From http://openbabel.org/wiki/Install_(MSVC) Basic build; ""build all the projects except OBPythonOBF, OBJava, OBCSharp and OBGUI..."". LINK : fatal error LNK1181: cannot open input file 'odbccp32.libi'. Result when starting with Build by right click on FastSearch:. ------ Build started: Project: OBError, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; cl : Command line warning D9035 : option 'Wp64' has been deprecated and will be removed in a future release; tokenst.cpp; plugin.cpp; oberror.cpp; loader.cpp; dlhandler_win32.cpp; ..\..\src\dlhandler_win32.cpp(79) : warning C4267: 'return' : conversion from 'size_t' to 'int', possible loss of data; bitvec.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/bitvec.h(121) : warning C4267: 'return' : conversion from 'size_t' to 'unsigned int', possible loss of data; Linking...; LINK : fatal error LNK1181: cannot open input file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBError\Release\BuildLog.htm""; OBError - 1 error(s), 3 warning(s); ------ Build started: Project: OBDLL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; transform3d.cpp; ..\..\src\math\transform3d.cpp(58) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; transform.cpp; spacegroup.cpp; rotor.cpp; rotamer.cpp; ring.cpp; residue.cpp; rand.cpp; pointgroup.cpp; ..\..\src\pointgroup.cpp(1087) : warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_f",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. the followng is found in; \include\openbabel\babelconfig.h. ...; // Visual Studio Express does not have the classes in namespace std::tr1, particularly; // shared_ptr. Use the Boost library instead. It is necessary to have download Boost; // and put its top level folder in the Include section of Visual Studio's VC++ Directories.; #define USE_BOOST; #define HAVE_SHARED_POINTER; ... Boost is installed, so how do I; ""put its top level folder in the Include section of Visual Studio's VC++ Directories""?. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781158:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781158,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. tracked down the IDE additional include directories; see attached gif. File Added: Additional Include Directories_02 Jun. 12 22.09.gif. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781166:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781166,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1918617; Originator: YES. typo in last message; s/2717/2617/; attached file is the correct one. Original comment by: peterennis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786190:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786190,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1918617; Originator: YES. updated all svn files revision 2600, log file OpenBabelOBF revision 2600-1.txt attached. ..\Debug/OBDLLD.dll : fatal error LNK1120: 3 unresolved externals. lots of:. obiter.h(330) : warning C4800:... ..\Debug/OBDESCD.obf : fatal error LNK1120: 3 unresolved externals. ..\Debug/OBFPRTD.obf : fatal error LNK1120: 3 unresolved externals. this one still exists:. cifformat.cpp; c:\PFE.Sardonyx\OpenBabel.SVN\include\openbabel/obiter.h(330) : warning C4800: 'unsigned int' : forcing value to bool 'true' or 'false' (performance warning); C:\Program Files\Microsoft Visual Studio 9.0\VC\include\xtree(161) : warning C4503: 'std::_Tree<_Traits>::_Key' : decorated name length exceeded, name was truncated; with... File Added: OpenBabelOBF revision 2600-1.txt. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786172:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/778#issuecomment-281786172,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=1933558; Originator: YES. Alright, that fixes it for sure. Good work. Original comment by: scons",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779850:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779850,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1933558; Originator: YES. Sorry guys, the bug still still functions exactly as originally described. I checked out the trunk this morning.; Perhaps someone else should try test it to confirm?. Original comment by: scons",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779847:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779847,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=1933558; Originator: YES. Thanks Chris, that's great.; I had no idea that OB offered this plugin system... perhaps it should be mentioned on the wiki?. Original comment by: scons",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810959:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1502#issuecomment-281810959,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1933558; Originator: YES. Use of a debugger shows that OBPhModel::CorrectForPH is never even run when using a smiles file as input. Original comment by: scons,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779844:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779844,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1933558; Originator: YES. ugh, it doesn't work for me with the latest SVN version... maybe something is crazy with my system that has nothing to do with OB. Maybe I'll just throw a switch into babel.cpp, because that never seems to have any problems. Original comment by: scons",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/781#issuecomment-281793168:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/781#issuecomment-281793168,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1933558; Originator: YES. ya, I just shortened my code for readability (I'm always doing that :). I attached the script that I'm running. Open Babel version is 2.1.1. try playing around with the ; if(!conv.SetOutFormat(""CML"")); line, setting it to different formats.; File Added: readwrite.cpp. Original comment by: scons",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/781#issuecomment-281793166:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/781#issuecomment-281793166,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1934965; Originator: YES. Here is a little patch i wrote for generic.h.; It only renames GetValue into GetGenericValue ; (and I remove another minor bug in the constructor). 302c302; < OBGenericData(""PairData"", OBGenericDataType::PairData), ValueT() {};; ---; > OBGenericData(""PairData"", OBGenericDataType::PairData) {};; 304c304; < virtual const ValueT &GetValue() const { return(_value); }; ---; > virtual const ValueT &GetGenericValue() const { return(_value); }. Original comment by: mlasson",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/694#issuecomment-281779766:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/694#issuecomment-281779766,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1934965; Originator: YES. I attach the patch as a file.; File Added: bug_patch. Original comment by: mlasson,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/694#issuecomment-281779769:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/694#issuecomment-281779769,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1948648; Originator: YES. Issue was caused by improper linking with gcc. Fixed in r2232. Original comment by: jballanc,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779981:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779981,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1948648; Originator: YES. The command I used to rebuild the swig cpp files came from the README in the script/ruby directory. I only rebuilt from swig after the initial attempt to build from the openbabel_ruby.cpp included in the distribution failed. I just retried the build using --with-maintainer-mode, but I get the same set of errors. Original comment by: jballanc",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779980:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779980,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=196016. > Supporting CMake would make it much easier to integrate; KDE > programs and Open Babel. :-). What kind of things would it make possible which are not; possible and/or feasible right now?. Michael. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810560:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810560,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=196016. Are you sure you run make install as superuser/root? You ; cannot install stuff under /usr/local as a normal user. At least ; that's it for most unices, I guess Mac OS X is no different. ; Try su/sudo. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/427#issuecomment-281774820:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/427#issuecomment-281774820,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=196016. I guess we can destinguish between general properties (basis; set, electronic structure method) and job-specific; properties (single-point calculation, geometry optimization,; frequency analysis). As for a user-interface, I think it is more important to; have the library cover the various types and possibly be; able to convert between different QM inputs, than having a; UI to make up new input. I would argue that this is not the core of openbabel, and; might be easier done in a GUI like ghemical, but an elegant; implementation would be welcome, of course. Michael. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810214:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810214,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=196016. You need to be the system administrator in order to install; openbabel in a system-wide directory. Run 'sudo make install'. Michael. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/434#issuecomment-281774964:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/434#issuecomment-281774964,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=196016; Originator: NO. For the record, openbabel-2.2 seems to get the bond between 12 and 13; however, I think there's no bond between 13 and 14. This is the diff between a openbabel-2.2 generated txyz, and the file attached to this bug report:. --- JINGAO.txyz	2008-06-10 01:24:21.000000000 +0200; +++ JINGAO.txyz_	2008-06-10 01:25:51.000000000 +0200; @@ -10,8 +10,8 @@; 9 O 1.223000 -0.680000 3.866000 7 8; 10 N 0.367000 -2.631000 3.149000 9 8 11 14; 11 C 1.104000 -3.427000 4.125000 1 10 12 15 63; - 12 C 0.641000 -4.849000 3.852000 1 11 13 64 65; - 13 C -0.198000 -4.829000 2.735000 1 12 66 67; + 12 C 0.641000 -4.849000 3.852000 1 11 64 65; + 13 C -0.198000 -4.829000 2.735000 1 66 67; 14 C -0.538000 -3.458000 2.333000 1 10 68 69; 15 C 2.613000 -3.304000 4.089000 2 11 16 17; 16 O 3.260000 -3.651000 5.072000 7 15. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/685#issuecomment-281779598:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/685#issuecomment-281779598,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=196016; Originator: NO. I can reproduce the problem with the provided input:. crease~$ babel water.gzmat water.xyz; 1 molecule converted; 11 audit log messages; crease~$ cat water.xyz; 3; water.gzmat; O 0.00000 0.00000 0.00000; H 0.00000 0.00000 0.00000; H nan nan nan; crease~$ cat water.gzmat; #. water. 0 1; O; H 1 r; H 1 r 2 a. r 0.9572; a 104.52. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793679:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793679,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=196016; Originator: NO. OK, I think I found the issue. The current code expects a lines ""Variables:"" to seperate the connectivity block from the variables block. So, the following input works for me:. #. water. 0 1; O; H 1 r; H 1 r 2 a; Variables:; r 0.9572; a 104.52. However, this is a bug, as the Gaussian manual says:. ""Variable definitions are separated from the atom position definitions by a blank line or a line like the following:; Variables: "". Furthermore, just putting the variables into the connectivity block like. #. water. 0 1; O; H 1 0.9572; H 1 0.9572 2 104.52. should work as well (at least Gaussian accepts it as input), however the gzmat format does not assign coordinates in this case either. Michael. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793681:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793681,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=196016; Originator: NO. Writing out the audit log messages, there is maybe a spurious second OpenBabel::Read molecule Gaussian Z-Matrix Input call. It might be trying to read in a second structure, and falss over; I don't have the source tree around currently to debug this. crease~$ babel ---errorlevel 20 -igzmat water.gzmat -oxyz water.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule Gaussian Z-Matrix Input; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in InternalToCartesian; Ran OpenBabel::InternalToCartesian; ==============================; *** Open Babel Audit Log in ConnectTheDots; Ran OpenBabel::ConnectTheDots; ==============================; *** Open Babel Audit Log in PerceiveBondOrders; Ran OpenBabel::PerceiveBondOrders; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule Gaussian Z-Matrix Input; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in WriteChemObjectImpl; OpenBabel::Write molecule XYZ cartesian coordinates format; 1 molecule converted; 11 audit log messages. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793680:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793680,14,"['Log', 'log']","['Log', 'Logged', 'log']"
Testability,"Logged In: YES ; user_id=1965159; Originator: YES. Thanks for this info. I could manage to read all the molecules from a single file using ReadFile for the first call then Read, as you wrote. There is still a little problem: Read doesn't return 'false' after it has reached the end of the file. As a consequence, I have to check against the number of atoms in the returned molecule and break the loop whenever it falls to zero (see below). However I'm not sure this is perfectly correct. # Quick'n'dirty; conv = openbabel.OBConversion(); conv.SetInAndOutFormats(""cdx"", ""smiles""); mol = openbabel.OBMol(); if conv.ReadFile(mol, ""test2.cdx""):; 	mol2 = openbabel.OBMol(); 	while conv.Read(mol2):; 		if mol2.NumAtoms() == 0:; 			break; 		mol2 = openbabel.OBMol(). Cheers; Stéphane. Original comment by: steffx",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780029:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780029,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=1965159; Originator: YES. Yes it is specific to CDX. pybel.readfile works fine with a multimolecule SDF file. ; File Added: pybeltest_cdx.py. Original comment by: steffx,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780032:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780032,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=1965159; Originator: YES. oops... sorry, I thought I could attach several files. Archive.zip contains the two python scripts (one for cdx, the other for sdf formats) and the two files I used (test.cdx and test.sdf). pybeltest_sdf.py works as expected whereas pybeltest_cdx.py blocks.; File Added: Archive.zip. Original comment by: steffx",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780036:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780036,3,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=1995332; Originator: YES. Just to follow up for users who have the same problem: thanks to Craig Knox from DrugBank this problem has been fixed. Please download the latest SDFs from DrugBank. Thank you Noel for asking to report this problem. Original comment by: sarkiss,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/760#issuecomment-281781041:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/760#issuecomment-281781041,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=2041613; Originator: YES. 2.2.0b6 seems to have fixed this for me. It now works fine from command line, anyway, which it didn't before.; Thanks!; Evan. Original comment by: eingersoll",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780742:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780742,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=2041613; Originator: YES. Conversion from PDB to MOL2 appears to work -- the same *format.so errors appear, but I also get a nice output file. A quick look suggests that OSX is supposed to come with libxml and libxslt installed. I don't, however, find them in /usr/lib where my xml2Conf suggests they should be. I also note that I have Maya installed on this system, with leftover directories that suggest it installed libxml2 somewhere. I'll see if re-installing libxml does the trick. Thanks,; Evan. Original comment by: eingersoll",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780732:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780732,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=2041613; Originator: YES. Semi-resolved: this is an intel-vs-ppc issue. I've tried updating/re-installing libxml2 on my intel laptop, no change in symptoms. However, my older PPC mac has no trouble converting cml files and produces no errors. Is it possible the whole issue is that the .so files in question are ppc-only binaries?. Thanks,; Evan. Original comment by: eingersoll",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780734:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780734,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=2128232; Originator: YES. File Added: dipep.pdb2xyz. Original comment by: hannes_m,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793137:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793137,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=2128232; Originator: YES. File Added: dipep.wrong.pdb2xyz. Original comment by: hannes_m,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793139:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793139,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=2128232; Originator: YES. I've just noticed that the bugfix did not make it in the latest babel release (2.2.0). can you estimate when your fixes will be available for download?; thanks; -h-. Original comment by: hannes_m,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793144:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793144,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=2128232; Originator: YES. what I meant to add: babel-1.6 does read the PDB records properly; File Added: atom.record. Original comment by: hannes_m,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793140:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/780#issuecomment-281793140,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. A good source of PDB files for testing is at:. http://people.ouc.bc.ca/woodcock/molecule/molecule.html. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/393#issuecomment-281774253:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/393#issuecomment-281774253,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. A new tool ""obxyz"" has been added to the CVS tree for 2.1, which handles the ; first three points (rotation of an atom to a certain axis, centering on a certain ; atom, and/or rotation around the principal cartesian axes by specified angles). I suspect these are the three most useful features for such a tool -- other ; features can be requested and added in the future. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1420#issuecomment-281810108:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1420#issuecomment-281810108,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. A test mol2 file is attached. Code changes in src/mol2.cpp::ReadMol2. The sscanf; statement needs revision (to actually grab the string) and; then code to; add the OBResidue objects needs to go in. (It'd be similar; to the code at; the end of src/pdb.cpp::ParseAtomRecord.). -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809803:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809803,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. Actually, I think the interesting question is also why the atoms seem to be ; renumbered every time. In the first case, the input goes from the nitrogen to the benzene ring. But the ; output goes from the nitrogen to the CH2 group and the dithiole-3-thione:; S=c1sscc1. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/550#issuecomment-281777040:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/550#issuecomment-281777040,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Actually, it just shouldn't happen. According to the PDB; spec, the current Open Babel code is just wrong. If I send you the current OpenBabel CVS code, would you give; it a try? AFAIK, it's correct. -Geoff; hutchisn@chem.northwestern.edu. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/408#issuecomment-281774505:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/408#issuecomment-281774505,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Actually, it's called from rotor.cpp. if (!sp-&gt;RestrictedMatch(mol,vpr,true)); 	 {; 		 swap(vpr[0].first,vpr[1].first);; 		 if (!sp-&gt;RestrictedMatch(mol,vpr,true)); 			 continue;; 	 }. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/394#issuecomment-281774266:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/394#issuecomment-281774266,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Actually, the simplified case, shows how the bug occurs:. [C@@]1(F)(C)C(=O)O.Br1; Br1.[C@@]1(F)(C)C(=O)O. These are identical SMILES (e.g., check at http://www.daylight.com/daycgi/; depict). But these end up as very different SMILES because the atom ordering isn't ; handled by Open Babel:. F[C@@](Br)(C)C(=O)O test.smi; Br[C@@](F)(C)C(=O)O test.smi. Personally, I don't like this use of ring closure bonds, but you're correct that ; this is a bug. (The other bug report is essentially a duplicate -- the problem ; is that the ring closure isn't being performed correctly.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258,5,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420. Added a special case in kekulize.cpp in repository. Solves problem for now. Marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/550#issuecomment-281777044:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/550#issuecomment-281777044,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Added to CVS. Thanks!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/463#issuecomment-281775589:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/463#issuecomment-281775589,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Added, thanks!. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/467#issuecomment-281775634:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/467#issuecomment-281775634,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Added. Merci beaucoup!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/471#issuecomment-281775689:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/471#issuecomment-281775689,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. After analyzing the test file (from PubChem: ftp://ftp.ncbi.nlm.nih.gov/; pubchem/Substance/SDF/) the problem became obvious. When reading the molecular properties, the INChI lines for large ; molecules were >1024 characters. The call to read a line (i.e. ; ifs.getline()) failed, making it look like the file had reached the EOF. This bug is currently fixed in the openbabel-new-framework CVS branch, ; the development code aimed for 2.0-release. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/444#issuecomment-281775171:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/444#issuecomment-281775171,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. After much thought, I'm not sure an output filter makes any sense. By default, ; the end-of-line should be correct for the platform (now only \r\n for Windows, ; \n for everyone else). If line endings are corrected on input, everything works. Since there's now an input line filter, I'm marking this closed too.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1465#issuecomment-281810520:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1465#issuecomment-281810520,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. All fixes for this will be in CVS shortly. Marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/478#issuecomment-281775803:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/478#issuecomment-281775803,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Also fails on Mac OS X (10.1.5):. Reading specs from /usr/libexec/gcc/darwin/ppc/2.95.2/specs; Apple Computer, Inc. version gcc-937.2, based on gcc version; 2.95.2 ; 19991024 (release). [localhost:~/Documents/Build/openbabel] ghutchis% uname -a; Darwin localhost 5.5 Darwin Kernel Version 5.5: Thu May 30; 14:51:26 PDT ; 2002; root:xnu/xnu-201.42.3.obj~1/RELEASE_PPC Power; Macintosh powerpc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774528:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774528,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Also fails on:. Alpha-Linux gcc-2.95.4:; Linux usf-cf-alpha-linux-1 2.2.20 #2 Wed Mar 20 19:57:28 EST; 2002 alpha unknown. Reading specs from /usr/lib/gcc-lib/alpha-linux/2.95.4/specs; gcc version 2.95.4 20011002 (Debian prerelease). Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774526:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774526,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Also there are calls to strcpy in:. data.h:92; mol.h:230; mol.h:231. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/398#issuecomment-281774330:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/398#issuecomment-281774330,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Alternatively, you can use one of the 2.0 beta snapshots. I can pretty ; much guarantee they work on Tiger -- that's what I'm using for ; development. Marking this closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/482#issuecomment-281775858:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/482#issuecomment-281775858,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Are these still a problem with the current CVS version?. I'd like to know if the current PerceiveBO code is &quot;good; enough&quot; for a release w/o massive, ugly bugs like you raised. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774470:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774470,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. As a follow-up:. http://www.daylight.com/dayhtml/doc/theory/theory.smarts.html#RTFToC39. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/552#issuecomment-281777230:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/552#issuecomment-281777230,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. As a temporary fix, the mm3format code is not compiled on UNIX. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/461#issuecomment-281775577:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/461#issuecomment-281775577,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. As an alternative solution, the API now specifies a; &quot;preferred&quot; 2D and/or 3D conformer. So for example, the; &quot;preferred&quot; 3D conformer would be the lowest energy in a; geometry optimization, etc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774420:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774420,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. As discussed on the mailing list, the code now outputs an error/warning and ; stops after one molecule output. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/527#issuecomment-281776633:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/527#issuecomment-281776633,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. As per Chris Morley's comments, this is fixed in the 2.0 snapshots. http://sourceforge.net/mailarchive/forum.php?; thread_id=7706552&forum_id=3042. I'm marking this closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/456#issuecomment-281775378:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/456#issuecomment-281775378,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. At least for now, the new newlinebuf class seems to do this exactly. It needs ; more testing before I'm convinced it works perfectly. I'll mark this as ""pending"" -- it will auto-close after 2 weeks if the newlinebuf ; class seems to work. If anyone wants/needs the class, please check the SVN trunk, revision 1489. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/557#issuecomment-281777297:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/557#issuecomment-281777297,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. At the moment, the quat.c code has been migrated into; obutil.cpp. Some consolidation may be needed, but quat.c is; removed from the CVS. Anything else needed or can this be closed?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/388#issuecomment-281773554:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/388#issuecomment-281773554,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Attached is a patch that should solve this. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/392#issuecomment-281774236:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/392#issuecomment-281774236,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Attaching also the SDF file used to generate the problematic CML output. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776784:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776784,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Bug 1368223 now has an attached version of the dlhandler_win32.cpp file. And, of course, if you are having problems compiling and ""lots of unresolved ; symbols,"" it would be very helpful to have the exact error message and ; unresolved symbol listing. None of the active developers use MinGW, but we'd certainly be glad to help ; you solve this issue. The code should be portable to any platform. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776087:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776087,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Can't reproduce any bug -- just hadn't looked carefully at the code. It works ; fast enough that I hadn't witnessed the interleaving. :-). Marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810074:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1415#issuecomment-281810074,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Changing the summary title. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1424#issuecomment-281810139:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1424#issuecomment-281810139,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Chris Morley has added this feature to the CVS development code. It will be in ; version 2.1. Marking this closed. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1436#issuecomment-281810203:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1436#issuecomment-281810203,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Chris Morley has fixed this in the CVS head, which will eventually be part of 2.1. Closed, pending further comment. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/505#issuecomment-281776234:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/505#issuecomment-281776234,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Committing this change now. Hydrogen addition is turned on for SMILES ; input. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1407#issuecomment-281810041:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1407#issuecomment-281810041,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Currently in CVS version using '--' to indicate that read/write should come from a pipe rather than a file. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1377#issuecomment-281809526:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1377#issuecomment-281809526,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. D'oh. I should have read through the SMARTS parser more carefully. ; There's a big section that claims:. /*; need to handle these cases; ... I'm currently implementing ""up"" and ""down"" primitives and testing. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/447#issuecomment-281775229:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/447#issuecomment-281775229,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. Debugging messages have been added to provide ""obInfo"" reports if the ; type table is incorrect. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/462#issuecomment-281775585:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/462#issuecomment-281775585,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Do you know if these files can be edited directly with a text editor? If so, I ; can make sure they're kept up-to-date with the Makefiles. But since none of ; the current developers have/use VC++, I can't verify that textual changes ; will be treated correctly. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/422#issuecomment-281774724:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/422#issuecomment-281774724,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Done!. Thanks very much for the contribution -- it'll definitely be in the next ; release. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1405#issuecomment-281810029:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1405#issuecomment-281810029,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Done. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1383#issuecomment-281809591:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1383#issuecomment-281809591,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Duplicate submission. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1394#issuecomment-281809783:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1394#issuecomment-281809783,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Duplicates feature request (1222443) -- marking duplicate and closing. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/455#issuecomment-281775360:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/455#issuecomment-281775360,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Essentially this is a duplicate -- I don't think the underlying bug is any different ; from the stereo bug PR#1508741. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/556#issuecomment-281777279:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/556#issuecomment-281777279,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Except for cleaning up the aromatic typing, there is an; implementation of the whole algorithm. (The aromatic typing; should really try handing off to the Kekulize code, but that; doesn't work correctly and it's not obvious why.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809502:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809502,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Famous last words indeed!. I'm not sure if it's better to leave random numbers as the; coordinates (which at least prevents nasty divide-by-zero; problems) or 0.0000s. The &quot;solution&quot; will probably involve porting/adapting a SDG; from the LGPL'ed CDK project:; http://cdk.sf.net/; http://cvs.sourceforge.net/cgi-bin/viewcvs.cgi/cdk/cdk/src/org/openscience/cdk/layout/StructureDiagramGenerator.java. The code is about 700 lines of Java, some of which; implements classes already in Open Babel. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809761:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809761,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Finished an initial draft. Still need more specification URLs and data type ; support, etc. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1428#issuecomment-281810159:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1428#issuecomment-281810159,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Fixed as suggested. Now in CVS HEAD and 2.0.x branch. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/513#issuecomment-281776372:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/513#issuecomment-281776372,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Fixed by Bryan Herger, along with adding some nice Windows; GUI features. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/391#issuecomment-281774219:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/391#issuecomment-281774219,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Fixed in SVN now. Thanks to Noel for suggestion -- the functions were missing ; parens for evaluating the number of hydrogens. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776756:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776756,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Fixed in both 2-0-x branch and development HEAD. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/528#issuecomment-281776642:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/528#issuecomment-281776642,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Fixed in current CVS. OBTypeTable was being reset to other formats ; during WriteMolecule(). Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/449#issuecomment-281775266:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/449#issuecomment-281775266,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Fixed in current OpenBabel CVS version now. Test PDB file; still has strange X, Y, Z coords, but it will show all 26; bonds on translation. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/393#issuecomment-281774254:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/393#issuecomment-281774254,2,"['Log', 'Test']","['Logged', 'Test']"
Testability,"Logged In: YES ; user_id=21420. Fixed in the SVN repository (revision 1578 or later). This is now known as the ""molreport"" format. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1475#issuecomment-281810633:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1475#issuecomment-281810633,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Fixed this in the 2.1 trunk and the 2.0.x development repository now. The ; problem was in OBConversion::BatchFileName. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/547#issuecomment-281776991:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/547#issuecomment-281776991,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Fixed with current CVS version. (There was a mistake in the math/; Makefile.am.). -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/424#issuecomment-281774763:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/424#issuecomment-281774763,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Fixed with new Makefile adjustments. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/397#issuecomment-281774309:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/397#issuecomment-281774309,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Fixed, thanks to Chris Morley. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1402#issuecomment-281809880:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1402#issuecomment-281809880,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Fixed, thanks to contributions from Gerd Menche. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/430#issuecomment-281774886:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/430#issuecomment-281774886,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Fixed, thanks!; (Update added to the website as well.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/468#issuecomment-281775659:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/468#issuecomment-281775659,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Fixed. Methods now exist to return the number of errors, warnings, etc. The new methods make it easy to alter the text or formatting of the messages, ; so any concerns about the new output can be easily revised. I'm marking this feature closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1453#issuecomment-281810452:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1453#issuecomment-281810452,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Fixed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1370#issuecomment-281808299:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1370#issuecomment-281808299,2,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Fixed. Problem derives from numerical accuracy issues, and loosening the accuracy constraints to 2e-6 from 1e-6 seems to solve the problem. The matrix test also now reports more information for debugging. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774529:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/409#issuecomment-281774529,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. Fixed. Root cause was that attempting to add alpha-peptide bonds was connecting long-range bonds. This should help performance as well. A new check also looks for long bonds causing very small angles, e.g. across a small ring. (As was the case in the indigo molecule that precipitated the bug report.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/412#issuecomment-281774567:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/412#issuecomment-281774567,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Fixed. Should have caught this with the ReadFile fixes too.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/529#issuecomment-281776654:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/529#issuecomment-281776654,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. For obvious reasons, I don't like that hack. IMHO, the real reason is that there isn't a ""default"" SMARTS pattern to ; fall back on. So I've added a variety of ""default"" patterns for carbon, ; nitrogen, etc. -- molecules matching more specific SMARTS patterns ; would use those since they come later in the file. Here's my patch, which seems to mark the imidazole ring correctly (it'll ; be in CVS in a few minutes):; In aromatic.txt:; #nitrogen patterns; + [#7rD2] 1 2; + [#7rD3] 1 2; [#7r](-@*)-@* 2 2; ... I'm not a nitrogen heterocycle expert, but I think both of those patterns ; are correct -- if you have two or three bonds to a nitrogen ring atom, it ; could contribute 1 or 2 electrons to the ring, depending on the other ; bonds, the charge, etc. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/469#issuecomment-281775664:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/469#issuecomment-281775664,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. For right now, this won't be &quot;fixed.&quot; It breaks too much; code and it's too important to see &quot;Babel 2.0&quot; released and; stable. This should be re-visited for post-2.0 release if it seems; useful/important. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809553:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809553,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. For the 2.0 release, this isn't relevant to fix, IMHO. I've removed mm3format.cpp from the CVS. It can be added back after the ; 2.0 release, but it won't be fixed easily before then. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/461#issuecomment-281775578:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/461#issuecomment-281775578,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. From Jean:; (seems to be due to global vector variables such as atomIdVector ; not being reset.). This is now fixed in the CVS version and is being tested. I'll ; forward a patch shortly.; -Geoff. Program received signal SIGSEGV, Segmentation fault.; [Switching to Thread 16384 (LWP 25081)]; 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; 444 unsigned int GetEndAtomIdx() const ; {return(_end-&gt;GetIdx());}; (gdb) bt; #0 0x41051f22 in OpenBabel::OBBond::GetEndAtomIdx() const ; (this=0xbfffe350); at mol.h:444; #1 0x410a5035 in ; OpenBabel::OBMol::AddBond(OpenBabel::OBBond&amp;) (; this=0xbfffeaf0, bond=@0xbfffe350) at mol.cpp:2149; #2 0x41135a33 in OpenBabel::endBond() () at cml.cpp:1995; #3 0x4112efee in OpenBabel::endElement(std::string, ; std::string, std::string); (localName=Cannot access memory at address 0xb41a718; ) at cml.cpp:1175; #4 0x4112ede4 in OpenBabel::endElement(std::string) ; (name=Cannot access memory; at address 0xb41a718; ) at cml.cpp:1156; #5 0x4112b122 in OpenBabel::tag(std::string) (s=Cannot ; access memory at address 0xb41a718; ) at cml.cpp:702; #6 0x4112a0f2 in OpenBabel::ReadXML(std::istream&amp;) ; (ifs=@0xbfffeb60); at cml.cpp:626; #7 0x4113b186 in OpenBabel::ReadCML(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0, title=0x808e2bd &quot;Untitled&quot;); at cml.cpp:2894; #8 0x411079fe in ; OpenBabel::OBFileFormat::ReadMolecule(std::istream&amp;, ; OpenBabel::OBMol&amp;, char const*) (ifs=@0xbfffeb60, ; mol=@0xbfffeaf0,; title=0x808e2bd &quot;Untitled&quot;) at fileformat.cpp:43; #9 0x0805fafb in do_open_with_babel(char const*, char ; const*, gcpDocument*, OpenBabel::io_type) ; (filename=0x84af870 &quot;/home/Jean/projects/GChemPaint/; 2.cml&quot;,; ext=0x84b65f0 &quot;\003&quot;, pDoc=0x0, Type=CML) at file.cc:294; #10 0x0805f1d2 in file_process(char const*, int, bool, ; gcpDocument*) (; filename=0x40e089e0 &quot;/home/Jean/p",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774687,2,"['Log', 'test']","['Logged', 'tested']"
Testability,Logged In: YES ; user_id=21420. Good fix. Thanks!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/476#issuecomment-281775742:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/476#issuecomment-281775742,2,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Got it. Thanks. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/473#issuecomment-281775697:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/473#issuecomment-281775697,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Having a complete list of the aromatic rings which are incorrectly de-; aromatized would be very helpful. Pointing to one triazole ring doesn't really ; help -- we can fix this one system and still not solve your ""some aromatic ; rings."". Is this the only one, or can you give a more complete list. (E-mail me privately ; if you have confidential data.). Best,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776433:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776433,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Here's an alkane chain that shows the same problem:. CCC[C@@H](CCCCCCC)\C. WARNING: Incomplete EZ specification -- ignored (dy_ezanal); WARNING: CCC[C@@H](CCCCCCC)\C (dy_ezanal); WARNING: ^^^^^^ (dy_ezanal). Removing the \ in the SMILES string removes the errors. HOWEVER, the stereochemistry has been inverted (from R to S). The correct SMILES should be:; CCC[C@H](CCCCCCC)C. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775701:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775701,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Hi Alexander,. Thanks for the bug report, I just fixed it for the 2.0.x and development (2.1) ; trees. This will go into the upcoming 2.0.2 release. If you'd like me to send ; you an updated snapshot, please let me know. If you have some hin files that you can contribute for testing, it would be ; greatly appreciated. As far as I can tell, HIN is undocumented, so any ; examples from HyperChem (particularly multi-molecule files) would be very ; helpful. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/543#issuecomment-281776925:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/543#issuecomment-281776925,3,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. I agree wholeheartedly with Jonathan -- the IUPAC recommendations are ; pretty extensive and do not generate a unique name. For now, I'm going to mark the priority pretty low on this. If someone ; would like to work on ""structure to name"" features for Open Babel, that's ; great and I can certainly help give direction. But I don't think any of the ; current core developers are interested in this task right now. It's also more of an API feature request. Some file formats may make ; use of it, but it's not a separate file format of its own. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809871:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809871,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I assume you're suggesting this needs to be changed to:. lftest = true;. Do you have some sample files supporting this, or at least a justification ; for this change? I'd hate to start making arbitrary changes in the ; SMARTS code. :-). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/473#issuecomment-281775694:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/473#issuecomment-281775694,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I believe Chris fixed this with his 2005-08-12 fix. If so, please mark this ""pending"" or ""closed"" with a ""Fixed"" resolution?. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/466#issuecomment-281775616:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/466#issuecomment-281775616,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I believe with Nick's updated chiral information, this particular bug (i.e., ; SMILES => MDL) is now fixed?. Marking this closed, pending further comment. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/466#issuecomment-281775617:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/466#issuecomment-281775617,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. I can verify that this problem is completely fixed in the current CVS ; code. Marking this bug closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/439#issuecomment-281775056:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/439#issuecomment-281775056,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. I can't promise that the state of the CVS tree is tested in; any significant way at any particular point of time. It's a little strange b/c I can compile it just fine. But I; think right now the build environment is still using; gcc-2.95.2 since I spied a missing std:: in the header file. I'll fix that shortly. Thanks for the heads up.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/406#issuecomment-281774486:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/406#issuecomment-281774486,2,"['Log', 'test']","['Logged', 'tested']"
Testability,"Logged In: YES ; user_id=21420. I certainly haven't reproduced a segfault on a SMILES to SDF conversion. So I'll need some additional information from you to debug this. (a) What version of Open Babel are you using?; (b) Can we have a copy of the SMILES file to reproduce the bug?. You can use the &quot;upload file&quot; feature in the bug tracker, or if the file needs to remain private, please e-mail me directly. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/415#issuecomment-281774609:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/415#issuecomment-281774609,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. I don't believe the .z and .Z format can be supported. But gzip support is pending and will be added soon. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1389#issuecomment-281809711:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1389#issuecomment-281809711,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I don't know Python, but certainly the C++ code works and does not crash. . From what you describe, the segfault comes from the python code:. map.front(). But here, map doesn't have any elements. Shouldn't your code check to see if ; map is empty before trying to get the first?. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776827:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776827,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I don't know if the CDK fingerprint method is different from Fabien's ; fingerprint and tanimoto code. If not, let's close this feature request. If not, the new fingerprint code in the CVS code should work fine. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809853:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809853,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I don't know why the tracker closed the thread -- indeed I wasn't notified that ; you posted a comment. Sorry about that. Out of curiosity, is the memory use increase (e.g., the regression line) ; somewhat similar for SDF as it is for fingerprint or other formats? In other ; words, it sounds like the leak is in the core library, rather than one particular ; format. That's helpful information. I'm still hunting--although it's weird that valgrind doesn't seem to find the ; leak. Thanks for all the help!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776402:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776402,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I don't see this bug at all. (There isn't an XYZ file attached, but I created ; one I'm attaching myself.). I suspect this was fixed in the latest development code. I'd be glad to e-; mail a snapshot if you like, or you can grab the CVS openbabel-new-; framework branch. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775912:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775912,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I have *a* fix for this, but it's in your code, so I'm not sure it's absolutely ; correct. The problem is that the implicit valence for that carbon comes back as 1 ; based on the IMPVAL rules in atomtyp.txt. (I'll see if I can figure out ; what needs to happen there.). But in OBAtom::ImplicitHydrogenCount() the following happens:; int impval = _impval - GetHvyValence();; //Jan 05 Implicit valency now left alone; use spin multiplicity for ; implici\; t Hs; int mult = GetSpinMultiplicity();; if(mult==2) //radical; impval-=1;; else if(mult==1 || mult==3) //carbene; impval-=2;; return((impval>0)?impval:0);. But if impval != 0 and mult == 0, then the impval is returned. I don't ; think this is the intended behavior, so I added:; else; impval=0;. Please take a look. Thanks, -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775337:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775337,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I have a fix for this, I'm updating CVS tonight. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/506#issuecomment-281776255:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/506#issuecomment-281776255,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I have not been able to reproduce this, though the cml.cpp code ; unfortunately uses global variables, which is bad. The backtrace looks like it has been compiled with optimization ; turned on, which makes it a little hard to follow. If you have the ; time and can reproduce the bug after compiling with just ; CXXFLAGS=&quot;-g&quot; it would be appreciated. Alternatively, if you could come up with some small program that ; reproduces the bug, that would greatly help. As it stands, it could ; be that one of the global pointers in cml.cpp is getting clobbered, ; but I can't see why it would make it to that line before the ; segfault. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774685:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/420#issuecomment-281774685,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I have some test Perl and Python bindings, but they're incredibly sketchy. ; I'm looking for victims... I mean volunteers to help test them. There's ; probably not much ""coding"" needed to get this going faster, but some ; developer/debugging ability will be required. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809514:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809514,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. I haven't seen a specification for the title field in SMILES files -- I'd be ; glad to take a look. In Open Babel, at least, the first space separates the SMILES string ; from a title -- any remaining spaces are ignored by ReadMolecule:; // added the following to allow spaces in compound names (titles).; // Essentially everything after the first space on a SMILES file line; // is treated as the name. It's easy enough to switch the delimiter when writing SMILES files -- and ; indeed I just checked in a change to make it a tab. However, I'd really ; like to see a specification on this. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/457#issuecomment-281775392:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/457#issuecomment-281775392,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I haven't tried compiling Open Babel with MinGW, but the following link looks ; interesting:. http://sebsauvage.net/python/mingw.html. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1450#issuecomment-281810420:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1450#issuecomment-281810420,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I honestly think the best current solution for this problem is to reject all ""."" ; SMARTS patterns. The dot matching behavior doesn't work correct in the ; current code at all, since there's no test to be sure that the individual ; components are actually separate (i.e. C.C can match an ethane molecule). ; This has been documented on the webpage for a while:. http://openbabel.sourceforge.net/wiki/SMARTS. I'll commit a patch for this shortly, it's basically just one line. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/551#issuecomment-281777206:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/551#issuecomment-281777206,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. I now have contributed code (from Craig James, eMolecules.com) to do this. I'm marking this closed pending further comment. The code will probably take a few days to incorporate into the SVN trunk, but will ; definitely be in 2.1.0. I don't want anyone else working on this unless they wish to help with the integration of the contributed code. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810118:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1421#issuecomment-281810118,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I sent a message to this e-mail address. We'd certainly like to see your ; implementation. Please submit code (preferably in patch form) to the ; openbabel-discuss mailing list -- that's why it's there! :-). I'm marking this request ""pending"" since you say you have code to ; submit -- it's not really an ""open"" feature request. Thanks and cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1399#issuecomment-281809858:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1399#issuecomment-281809858,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I should comment that the correct sequence should be:. Ala-Gly-Pro-Ala-Cys-Pro-Gly-Ala-Ala-Ala. (Yes, I said it was a random sequence!). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/515#issuecomment-281776423:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/515#issuecomment-281776423,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I should mention that I'm marking this ""pending"" and it will auto-close as being ; resolved, if there's no further comment within the next 2 weeks. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/551#issuecomment-281777209:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/551#issuecomment-281777209,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I still have no idea what this is supposed to do, so for; now, the call is going to be removed from the header. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/394#issuecomment-281774265:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/394#issuecomment-281774265,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I think the porph patterns still need some work (since they still match ; multiple times), but it's getting there. Thanks for the fixes!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/475#issuecomment-281775725:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/475#issuecomment-281775725,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I think there are two different issues here. The first is a memory leak -- that's ; when a program runs for a while and continues to consume more and more ; memory. (e.g., after reading 1 SMILES, it consumes 1MB, but after 100,000 ; smiles, it consumes 140MB). The second is large memory use that does not ""leak"" or continue to increase ; over time. I'm pretty confident that what you describe falls in the second category. Craig ; and I have found a few *small* leaks, but nothing that would consume 140MB ; of leaks. I will check for leaks with your test file, thanks.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776395:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776395,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420. I will make sure the source is updated ASAP. I'm marking this bug closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776069:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/495#issuecomment-281776069,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'd be glad to enhance SMILES support for canonical SMILES -- but I ; cannot find a definitive specification anywhere. If someone could supply ; a URL or specification file, I'd be glad to ensure that output SMILES can ; be canonical. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809815:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809815,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'd be glad to take a look, but I don't have any examples of multi-; structure .car files or information on the file format itself (e.g., a ; developer note of some sort). So if you have any example files that you can send me, or URLs to look ; up, it'd be greatly appreciated. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/437#issuecomment-281775025:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/437#issuecomment-281775025,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'd be happy to try this out, but without the file, it's unclear how to proceed. ; Certainly invalid files appear to be rejected by the HIN reader -- as tested ; during roundtrip testing. I'm not sure how the code could run infinitely, but would be glad to debug ; this ASAP. I'm marking this ""Pending"" further comment. Either the original submitter ; should post the file and a comment (to re-open it) or this will close (since we ; can't do anything to test the bug). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/520#issuecomment-281776527:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/520#issuecomment-281776527,4,"['Log', 'test']","['Logged', 'test', 'tested', 'testing']"
Testability,"Logged In: YES ; user_id=21420. I'd definitely like to solve this bug, but w/o more; information, I'm going to mark it &quot;pending&quot; in a few days. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/415#issuecomment-281774611:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/415#issuecomment-281774611,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'd like to close this bug ASAP. I don't see why the *installed* headers ; need to keep babelconfig.h. None of the #defines in babelconfig.h are ; appropriate for installed headers. In short, I think babelconfig.h should *only* be #included in .cpp files ; and not .h files and would like to move in this direction soon. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774930:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774930,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'd like to make sure porphyrin rings (metallated or not) and ; phthalocyanines are typed correctly for the 2.0 final release. IMHO, these are the most common macrocyclic rings with significant ; conjugation. I see three possible (and independent) approaches:; 1) An explicit HEM ""residue"" in the PDB handling that adds bond orders ; correctly, much like other residues.; 2) Explicit typing rules in bondtyp.txt.; 3) Addition of a ring bond-order assignment step to the bondtyper.cpp ; code, independent of the functional group assignment. This can take ; aromaticity into account and propagate around a macrocycle ring. More examples of ligands would definitely help this effort. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/470#issuecomment-281775673:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/470#issuecomment-281775673,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'd love to fix all of these. I'll see if I can minimize the ""multimatch"" ; problem, but more bug reports like this would be helpful. I'll make sure to fix 'em as soon as I see the bug report. :-). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/464#issuecomment-281775597:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/464#issuecomment-281775597,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm assigning this to Fabien and attaching the test file for future ; reference. But it'd help a lot if you were a bit more specific about which bonds are ; assigned ""wrong."" Where should the double bonds be? Can you give ; atom numbers or example CONECT records that should be changed?. At the very least, the current CVS version (on the openbabel-new-; framework branch) looks OK to me, but I don't know what the typing ; should be on the nitrogens, for example. PDB files without explicit ; hydrogens are extremely hard to type ""correctly."". Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775216:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775216,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420. I'm closing my own submission -- the errors seem to be in the CygWin libraries ; themselves. All crashes happen at the *end* of processing. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/544#issuecomment-281776947:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/544#issuecomment-281776947,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm closing this feature request. The Gasteiger model has clearly ; advanced, and new code is needed. (Adding other charge models would be ; helpful too.). I'll open a new feature request for updating the Gasteiger model.; -Geogg. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1371#issuecomment-281808308:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1371#issuecomment-281808308,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm closing this. Many of these flags are either now supported in Open ; Babel or auxiliary obtools (e.g., obfit) or can safely be ignored, IMHO. If ; users request them, they can be added later. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1386#issuecomment-281809655:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1386#issuecomment-281809655,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm considering this more of a feature request than a bug report. I'd like to see ; this fixed, but it won't go into 2.0.x, because I'm afraid that the fix might break ; other parts of SMARTS matching. (It shouldn't, but I'm intentionally pessimistic ; at making changes for a bug-fix release.). I agree with your interpretation of the @? pattern. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/494#issuecomment-281776040:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/494#issuecomment-281776040,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm firmly marking this closed for now. If you're interested in dealing with ; names, check out http://wwmm.ch.cam.ac.uk/wikis/wwmm/index.php/Oscar3. If at a later point, there's more of a fixed recommendation for naming ; compounds, a new feature request should be opened. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809872:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809872,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm game. That one's always bugged me, so let's give it a try. The worst ; thing that happens is that we find some counter-examples. Then we add ; appropriate SMARTS to work around them. Better to try this now, than after release. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/452#issuecomment-281775332:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/452#issuecomment-281775332,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm going to assume this is resolved, since poster mentioned building a static ; library. If this is still an issue, please open a new bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776096:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/496#issuecomment-281776096,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this as fixed, and this will auto-close in 14 days unless further ; comment. As far as I can tell, the changes to OBConversion::SetLast solve this. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777338:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777338,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this as not a bug. There's no memory leak in the underlying C++ ; library, only in Perl's traditional, documented behavior. The same problem would exist in any similar code (i.e., reading in huge ; amounts of data).; -Geoff. P.S. This bug is being marked ""pending"" -- it will automatically close without ; further comments. If you have evidence that this is, in fact, a bug in the Open ; Babel perl interface, please present it and it will reopen. Otherwise, as ; mentioned by Craig (and myself), this does not appear to be a bug. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777440:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777440,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this bug closed and re-opening a new bug with; flawfinder-1.22 output, which is more useful to peruse. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/398#issuecomment-281774332:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/398#issuecomment-281774332,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this closed pending further comment. I have seen no concrete ; evidence of significant memory leaks in 2.0.x and I've been looking. Clearly we can do much to improve memory use, which is underway in the 2.1 ; development. But this goes more as a ""feature request"" than a bug report -- ; there isn't a bug to fix, but rather a variety of things we need to do to ; improve memory usage. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776397:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776397,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this closed, pending *someone* to point me to a definition of ; what canonical or unique SMILES should be. Everything I've read indicates ; that such a formal specification does not exist. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809817:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1396#issuecomment-281809817,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this closed, pending further comment or obvious bits that ; should be incorporated. I've perused the changes between the Open ; Babel fork and the last OELib iteration. The *vast* majority are changes in whitespace. Many others are changes that have been made in Open Babel (often ; with different approaches). Open Babel isn't OELib anymore -- it's evolved considerably.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1379#issuecomment-281809542:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1379#issuecomment-281809542,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this closed, since the initial report seems to be fixed. If we have more bond-order problems, let's reopen another bug. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774474:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/405#issuecomment-281774474,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this closed. I hadn't noticed the ParseLine output, but that's totally ; unrelated. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777324:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777324,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this closed. It's not a comprehensive test suite yet, but it's getting ; there. The functional tests on SMILES, SMARTS, and CML have uncovered a ; variety of bugs and this will continue to improve. For all intents and purposes, the framework is in good shape now, so this ; feature request is redundant. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810245:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810245,3,"['Log', 'test']","['Logged', 'test', 'tests']"
Testability,Logged In: YES ; user_id=21420. I'm marking this entry specifically for queries and adding an entry into the file ; format list for the file format. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1413#issuecomment-281810070:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1413#issuecomment-281810070,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm marking this request closed. This may have been true of 1.x version of ; Open Babel, but the new error handler is much better. In particular, it's ; possible to redirect and log error messages, and particularly priority levels to ; errors. If there are *particular* complaints (e.g., some of the translators do not offer ; thorough error output), that's a useful feature request. But the feature requested here is certainly in 2.0. IMHO. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810172:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1432#issuecomment-281810172,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=21420. I'm moving this to a bug report. The Read() method shouldn't segfault. Both methods as you describe should work just fine. So this is a bug, not a ; feature request. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776597:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776597,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm not sure this is a good candidate to fix for 2.0.1. There seem to be a few problems. One is that the molecules you present all ; appear to have 4-bonded aromatic nitrogen. This implicitly has a formal ; charge of +1, which isn't correctly set. Another is that the current aromaticity patterns do not allow such nitrogens ; to be marked as aromatic. Finally, I think the kekulization routines do not properly handle 4-bonded ; aromatic N+. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776440:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776440,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. I'm not sure whether this is a silly idea or not. But I've added an initial ; porphyrin pattern to bondtyp.txt and will be committing it to CVS ; momentarily. This won't solve the hydrogen addition issue -- I think that needs a ; separate bug report. And I'll probably need to tinker with the pattern some -- it's currently ; written to assume normal pH -- but it should check to see if some of the ; nitrogens have expicit pH and assign bond orders accordingly. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/470#issuecomment-281775674:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/470#issuecomment-281775674,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm not sure why obgrep crashes -- that's certainly a good question. However, if you're executing obgrep from a UNIX shell, the ""!"" character ; has a special function and probably isn't doing what you expect. So ""!c"" ; is an escape that's replaced by a string matching the last shell command ; beginning with ""c"" -- e.g.:. I type:. obgrep ""!c"" file.xyz. The shell passes:. obgrep ""cd .."" file.xyz. If you want to invert a SMARTS string, you can use the ""-v"" flag to ; obgrep, which inverts the matching. On the other hand, if you're actually getting obgrep to *crash* rather ; than giving a SMARTS error message, it would help to know more about ; your setup so we can fix the problem. The program should never crash. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775104:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775104,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm now marking this closed. I tried adding that type previously and it ; seemed not to solve the problem -- my mistake, my system wasn't reading ; the updated data file. I've also added a series of IMPVAL for positive carbon atoms similarly. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775342:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/453#issuecomment-281775342,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm really going to need the original file to debug this. Bus errors are a real ; problem, and I'd like to address this ASAP. But I could not reproduce this using ; various test files I had around. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776017:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776017,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. I'm really wondering if this is some sort of bug with libxml2. There were ; weird errors on Fedora Core Linux 4 with libxml2 and I've been using v.2.6.19 ; on my Mac. I don't know if it's a miscompile with libxml2 (e.g., GCC causes ; problems?) or maybe a bug with the library itself. I'm trying to update to libxml2 2.6.22 now (it's available from a package ; manager) and might try compiling 2.6.24 (the latest) from scratch as well. I'll keep posting to this bug as I have more info. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776786:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776786,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. I'm renaming the summary for this. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809763:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809763,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm seeing this as a feature-request than a bug report. The whitespace is part of ; the format used as a file (e.g., the tab character separates the SMILES title and ; the newline ends the file). So the string from OBConversion::WriteString can be ; sent to a file directly. I'll shortly add code to the CVS head (i.e. for 2.1) that adds an optional ; parameter to WriteString to trim off trailing whitespace at the end of the file/; string. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776266:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776266,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm splitting this bug, otherwise this becomes a big dumping ground for all ; possible bugs in aromatic perception and kekulization. The bug submitter gave the original bug (which is now fixed) and then some ; follow-up examples with 4-valent N+. This bug is now restricted *ONLY* to aromaticity problems with 4-valent N+. Other problems will be opened as separate bugs -- otherwise it'll be ; impossible to track what's fixed and what isn't. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776444:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776444,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I'm working on this--it's now pretty obvious what's happening, though it may require a few more days to have a fix. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/411#issuecomment-281774549:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/411#issuecomment-281774549,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I've added a comment to the documentation -- the use of the ""unsigned int ; type"" parameter is to allow access based on data type, defined in the ; OBGenericDataType namespace:. http://openbabel.sourceforge.net/api/; namespaceOpenBabel_1_1OBGenericDataType.shtml. If you access data by this means, you are current only going to get one item ; (i.e., the first matched) for OBPairData. If you think there should be a better ; way to do this, we'll need some sort of API change in 2.1 -- please feel free to ; comment on the mailing list. In short, I'm closing this bug -- I've fixed the documentation and the call is ; doing what it's supposed to do. Whether there should be alternative access ; methods is another subject. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776728:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776728,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I've committed the change to SetNegativeStereo() -- call it a cut-and-paste ; error on my part. I added the positive/negative flags -- if you think these are unnecessary, ; we can change that. Certainly, I'm not sure why nothing is using ; GetChirality() right now. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/479#issuecomment-281775816:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/479#issuecomment-281775816,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I've fixed this for 2.1 in the CVS development tree. I'd make the change in the ; 2.0.x tree as well, but I'm worried it might break something else. Thanks for the bug report!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/493#issuecomment-281776024:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/493#issuecomment-281776024,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I've made considerable progress on this. I have the beginnings of a unit test ; set via the Perl module. I'm also working on a way to extend the current test suite into a more robust ; form using the Perl ""Test Anything Protocol"" (TAP). Basically the C++ ; programs will output results like Perl test scripts do (e.g., Perl's ; Test::Harness) and small perl scripts will analyze the output. The benefit is that results will be quite readable for humans, providing more ; detail if things go wrong. But where Perl is available (i.e., almost everywhere) ; the summaries will be much more useful. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1438#issuecomment-281810242,6,"['Log', 'Test', 'test']","['Logged', 'Test', 'test']"
Testability,"Logged In: YES ; user_id=21420. I've now added this to the 2.1 SVN trunk, revision 1491. The atom iterators can be specified with:; FOR_DFS_OF_MOL(atom, mol); FOR_BFS_OF_MOL(atom, mol). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1425#issuecomment-281810143:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1425#issuecomment-281810143,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. I've thought the Rcov was too short, but don't have any good references, so ; large parts of the table is just as in the original Babel!. I think it's better to stick to a maximum of 5 bonds for phosphorus. I ; thought immediately of PF6- when I saw the max bond limit, but it's really ; an exceptional case, and you could easily argue it's a Lewis acid-base ; complex between F- and PF5 neutral. I worry that setting it to 6 might ; introduce bonding problems in covalent structures?. Not so long from now, I want to move to a OBBondTyper class that will ; gather the ConnectTheDots and PerceiveBondOrder code and can more ; easily have special cases like PF6- or PCl6-. I've changed the covalent radius and it should update soon. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/421#issuecomment-281774706:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/421#issuecomment-281774706,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Ian,. Thanks for all the feedback. I was able to track down the largest source of ; memory use in multi-molecule files. The developer CVS is down at the ; moment, but I'll make sure the fix is in 2.0.1. I'm not sure this will solve all ; memory issues, but it certainly should solve the ""slope"" you found. Many thanks for the persistent feedback -- it wasn't a ""leak"" but more a ; ""stupid memory use"" issue that I eventually was able to find with your ; example file. Best,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776403:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776403,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. In addition to SWIG, I found cxxwrap:. http://cxxwrap.sourceforge.net/. The SourceForge page is somewhat unused, but the linked page has source releases as recent as 2006-01. I've downloaded a ; version and will give it a try. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810161:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810161,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. In one case:; N1Cc2[s][s]c(c2c2ccccc12)=S. the BO sum for every S atom is 2. In the other case:; N1c2ccccc2c2c(ssc2C1)=S. the BO sum for the aromatic S atoms is 3. So in that case, it's a strange valence and it brackets the atom. Why does this ; happen? In this case, the bond order assignment places a double bond ; between the aromatic sulfur atoms. I'll investigate why it's doing that later -- I suspect something in kekulize.cpp ; -- it probably needs a special case rule that says that no double bond is ; needed between two aromatic sulfurs. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/550#issuecomment-281777042:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/550#issuecomment-281777042,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. In the CVS development branch openbabel-new-framework I have ; changed babelconfig.h to config.h and config.h is *NOT* installed. #if HAVE_CONFIG_H; #include config.h; #endif. This means that some #defines are needed by headers (e.g., ; HAVE_SSTREAM for the stringstream vs. strstream bits) and must be ; caught by user code. I think this seems to be the consensus solution on the automake/; autoconf mailing lists and with other library installations. I'm marking this bug report closed pending further comment. Ideally new ; comments should go in a new report to simplify bug tracking.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. In the current CVS code for the ob-new-framework code (which will ; become version 2.0) the dimensionality is fixed -- OBMol now has ; methods GetDimension() and SetDimension() and the appropriate file ; translators keep track of this (including CML). The ""fictitious C-C bond"" is caused by the call in endMolecule to ; ConnectTheDots() -- which should not be run on 2D data. (Honestly, the ; CML code shouldn't call ConnectTheDots if there's correct bonding data -- ; but that's up to you.) Now, the code property recognizes that the 2D ; molecule should not run ConnectTheDots(). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/439#issuecomment-281775055:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/439#issuecomment-281775055,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Initial wiki is up at http://openbabel.sf.net/wiki/. Need to figure out how to integrate API documentation into current setup, and ; lay out a roadmap to incorporate the existing formats database too. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1440#issuecomment-281810276:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1440#issuecomment-281810276,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. It seems nothing refers to BitGrid in the Open Babel project itself. So this is a ; leftover file from Open Eyes / OELib. I'll remove it. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/423#issuecomment-281774744:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/423#issuecomment-281774744,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. It would really help if I could get a stack backtrace from gdb, e.g. gdb /usr/local/bin/babel; ...; run #command-line options here; ...; bt. This was also reported by R. Guha, but I don't have much information:; http://sourceforge.net/mailarchive/forum.php?; thread_id=9599682&forum_id=47190. For example, have you tried the current CVS development version? Does this ; also happen on FC5?. Since I don't have access to a FC4 machine, it's very hard for me to debug. It ; certainly doesn't happen on the FC3 machine in the SourceForge compile ; farm. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776461:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776461,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. It's fixed for me. Marking this closed. Thanks a lot!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/445#issuecomment-281775187:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/445#issuecomment-281775187,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. MIME command-line flags now exist. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1373#issuecomment-281809473:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1373#issuecomment-281809473,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Marking this closed as discussed below -- a workaround does exist. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776152:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/500#issuecomment-281776152,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Migrating this to API Feature requests. This also applies to a few other data.cpp methods. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1397#issuecomment-281809835:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1397#issuecomment-281809835,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Mm. That structure totally confused the chains parser. It ran into an infinite ; loop. Surprisingly, that never came up before -- there's no test to ensure an ; atom is never visited twice. I just added a test and while the result is a little strange (it thinks there are ; 3-4 unknown protein residues), it certainly doesn't crash now. I'll commit the change to SVN on the trunk and 2.0.2 branch shortly. I'm marking this as fixed, pending further comment. In two weeks it'll close ; automatically as fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777322:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777322,3,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420. Moving to feature requests.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1407#issuecomment-281810039:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1407#issuecomment-281810039,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Nick's updated version of the SMILES parser, with OBChiralData output, ; appears to solve the problem. It is part of the 2.1 subversion repository, ; revision 1542 and later. I'm marking this bug ""pending."" Any comment in the next 2 weeks will reopen ; it, otherwise it will close as being fixed automatically. Nick, it'd be great to have more documentation on the OBChiralData code -- ; if you can contribute to that, it would be most appreciated!. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777264:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777264,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. No dtor was implemented for OBNode or OBEdge in the SMARTS; code (very BAD practice). Thus, few of the recursive calls; were properly unwound and freed. Currently, all SMARTS memory leaks are fixed and this seems; to solve overall leaks at this time. New leaks will be added; as new problem reports. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/389#issuecomment-281774192:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/389#issuecomment-281774192,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. No longer particularly useful. Still a good idea to check; warnings before the 2.0 release and clean things up. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/399#issuecomment-281774347:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/399#issuecomment-281774347,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. No, atomtyp.h is the ""fallback data"" which is used when the text files are not ; found. If you edit the atomtyp.txt in the source directory, the header will be ; automatically updated. You can also update the *installed* ""atomtyp.txt"" file, using something like ; this:. emacs /usr/local/share/openbabel/2.0.0/atomtyp.txt. (Or ""sudo emacs"" if the file is installed as root.). The whole reason for having text data files is that they can easily be fixed for ; bugs before the next release. :-). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776311:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776311,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. No, better just to have links in obvious places to at least one location of the original Babel. (Currently the FAQ does.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1374#issuecomment-281809486:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1374#issuecomment-281809486,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. No, component level grouping is not properly implemented, which *will* go ; in the documentation. What worries me is the crashing -- regardless of input, Open Babel ; shouldn't crash. It looks like I've solved the crash at least for the test cases I've had so far. ; I'd be glad to provide a patch and obviously the latest CVS version on the ; openbabel-new-framework branch will have this fix. I'm marking this PR as ""pending"" and will open a new ""Feature Request"" ; entry for component-level grouping and/or documentation and/or SMARTS ; errors from obgrep about component-level grouping. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775153:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775153,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. No, we don't get a segfault if you misuse map.begin(). That's why I think we should file a SWIG bug report and close this one. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776835:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776835,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Nope, I was wrong -- this is a different bug (actually two). Initial [H] atoms were ignored, but they're sometimes needed for ""/"" or ""\"" ; specifications. Also, [H] atoms were omitted even when needed by a ""/"" or ""\"" specification. This is now fixed in the 2.1 SVN repository and will be backported for the ; 2.0.2 release. If you'd like a patch, please let me know. I'm marking this ""pending"" and will auto-close as fixed in 2 weeks if there is ; no further comment. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/556#issuecomment-281777280:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/556#issuecomment-281777280,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Not much code is using GetNumberOfElements() because it's a new ; function. However it *should* return element.size() which is the size of ; the OBElementTable. If your compiled version is returning an empty table, then there's a ; different problem. I don't like the idea of using fixed #s for the number of elements in code. ; The element table *will* change in the future, so the mol2format.cpp ; code needs to use GetNumberOfElements. Let's solve the core problem -- what is causing it to be empty? Does this ; occur with 2005-08-01 snapshot on Linux?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/465#issuecomment-281775602:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/465#issuecomment-281775602,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. OBExtensionTable now supports this (in the CVS version). It would be ideal to have an -imime &lt;MIME-TYPE&gt; file flag, but this is not implemented yet. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1373#issuecomment-281809472:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1373#issuecomment-281809472,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. OBMol now has methods for getting/setting dimensionality and this is ; respected by ConnectTheDots, PerceiveBondOrders and other methods. It ; currently does not have support for marking the dimensionality of ; conformers or a ""preferred"" 2D or 3D conformer. But there are currently ; few formats that store both 2D and 3D coords -- and with the new ; OBConversion framework, the appropriate dimensionality can be picked ; by the user. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774424:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774424,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. OK, I added this to the 2.1 development SMARTS parser in the SVN repository, ; although I haven't tested it thoroughly. If you'd like a patch, please let me know.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/494#issuecomment-281776041:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/494#issuecomment-281776041,2,"['Log', 'test']","['Logged', 'tested']"
Testability,"Logged In: YES ; user_id=21420. OK, I've debugged the problem -- the ReadString() and ReadFile() methods were ; closing the input streams before the next Read() could occur. I've finished changes for 2.0.1 that address this and will commit to CVS now. Marking this closed, pending further comments.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776598:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776598,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. OK, a few things here.; 1) I'm not sure how you're treating things, but keep in mind; that Ghemical files use coordinates in nm, not Angstroms. If; I look at the two files attached, they have the same XYZ; coords even though they use different units. The PDB file is; missing a factor of 10x. &quot;Bonds&quot; that are very short are generally ignored, esp. in; PDB files which often have incorrect bond assignments. In any case, yes, it seems like the current PDB code doesn't; import the bonds quite correctly. If I had to take a guess,; it looks like except for bonds to hydrogens, all single; bonds are ignored, all higher-order bonds become single bonds. I'll try to follow up on this more. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/393#issuecomment-281774252:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/393#issuecomment-281774252,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. OK, it's a missing implicit valence rule. Try adding the following to the ; atomtyp.txt file:. IMPVAL [$([#15]=[#8])] 4 # phosphinate (double bond = one valence). That should solve the bug. I'm updating the CVS 2.0.x branch and 2.1.0 HEAD.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776307:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776307,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. OK, that was a stupid error and should have been caught sooner. UP was ; declared as the ""/"" specification, but smilesformat.cpp and parsmart.cpp had up ; for one and down for the other!. This is now fixed in the 2.1 SVN. I'm marking this ""pending"" -- if there is no ; further comment, this will close as being fixed in 14 days. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777243:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777243,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. OK, the documentation has been updated, so I'm going to move this to ""Feature ; Requests"" for 2.x. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810457:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810457,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. OK, this is much further along now. I have working Perl and Python ; bindings using SWIG. I'm hoping that others will take these and run with ; them further since I don't know what functionality needs to be wrapped, ; how to properly test them, etc. To that end, see the openbabel-scripting mailing list:; http://sourceforge.net/mailarchive/forum.php?forum_id=45398; http://lists.sourceforge.net/mailman/listinfo/openbabel-scripting. I'm marking this closed, pending further comment.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809516:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1376#issuecomment-281809516,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. OK, this is now implemented in the 2.1 SVN repository -- anyone interested can ; ask for a patch (revision 1486). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1466#issuecomment-281810523:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1466#issuecomment-281810523,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. OK, this seems to work now. Marking this closed pending further comment from the submitter.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/447#issuecomment-281775231:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/447#issuecomment-281775231,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Of course the 2005-08-01 snapshot exists:; http://sourceforge.net/project/showfiles.php?; group_id=40728&package_id=154019&release_id=346276. But if you're using the latest CVS version, that's even more recent, ; obviously. I'm marking this fixed, since it seems to work for you now.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/465#issuecomment-281775606:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/465#issuecomment-281775606,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Oh, and if possible, links to example files. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1428#issuecomment-281810157:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1428#issuecomment-281810157,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. One advantage of CMake is that it generates build environments for Mac and ; Windows too. It's possible that this would allow better syncing of the ; Windows and UNIX build environments. But this is not a bug, so I'm switching it to ""Feature Requests."". I'd think it makes sense to offer CMake as an alternative build setup for 2.1 ; -- and let people use whichever they want. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810563:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810563,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Progress is being made on this -- complete documentation should be ; finished by the time of the 2.0 release. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809682:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809682,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Quoting from the Daylight SMARTS webpages:. All atomic expressions which are not simple primitives must be enclosed ; in brackets. The default operation is `&' (high precedence ""and""), i.e., ; two adjacent primitives without an intervening logical operator must both ; be true for the expression (or subexpression) to be true. Yes, '!C' is an invalid SMARTS expression. Marking this bug closed, though if you can get a gdb backtrace of the ; crash, I'd appreciate it. Even on invalid SMARTS strings, obgrep shouldn't ; crash. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775112:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775112,3,"['Log', 'log']","['Logged', 'logical']"
Testability,"Logged In: YES ; user_id=21420. Reading in a Gaussian zmat would be a bit difficult, as variable ; substitution can be used (and often is). Reading in a cartesian .com file ; might be possible. Reading Gaussian 98 or G03 output is already available in the CVS ; development version. I'd be happy to e-mail you a copy if you don't want ; to grab the CVS version yourself. -Geoff. ghutchis@users.sourceforge.net. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1401#issuecomment-281809875:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1401#issuecomment-281809875,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Relabeling title. Not limited to pharmacophores -- and hard to define ""pharma"" ; molecules algorithmically. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1447#issuecomment-281810378:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1447#issuecomment-281810378,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Rich's site should be:. http://depth-first.com/. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1470#issuecomment-281810573:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1470#issuecomment-281810573,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Richard Gillilan pointed out the following MOE article on bond order assignment.; Many of the concepts are covered by Roger's algorithm, but some of the comments on metals and other non-organic elements would be useful to incorporate. http://www.chemcomp.com/article/bond.htm. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809499:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809499,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Right now, testing indicates it's not a problem. The ""roundtrip"" testing ; suite that I use now has a variety of invalid files (including random data ; and size 0 files, files that end early, etc.). This indicates that this ; particular bug is solved. Furthermore, the test suite should indicate if ; this bug reoccurs in a different format. As you say, a format should be able to safely handle invalid files, ; including those with <= 0 atoms. Some of the invalid test files actually ; do claim to have -1 atoms. :-). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775571,5,"['Log', 'test']","['Logged', 'test', 'testing']"
Testability,Logged In: YES ; user_id=21420. See patch posted:; http://sourceforge.net/mailarchive/forum.php?; thread_id=9412916&forum_id=47190. This will be fixed in a 2.0.1 release. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/509#issuecomment-281776320:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/509#issuecomment-281776320,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Seems to be resolved in the updated Open Eyes contributed; code. A new bug report will be reopened if this comes up again. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/396#issuecomment-281774305:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/396#issuecomment-281774305,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Several bugs have been fixed in the SMILES code. Without; further follow-up, this bug should be closed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/415#issuecomment-281774612:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/415#issuecomment-281774612,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Should be fixed in new code now in CVS -- starts adding &quot;const&quot; to char * variables in appropriate places (e.g. tokenize, GlobalDataBase data, etc.). -GRH. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/395#issuecomment-281774280:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/395#issuecomment-281774280,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Should be fixed with the sync from the last OE-contributed; GPL code. The revised SMARTS parser implements this call.; This should be updated later today, after I confirm it is; free of memory leaks. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/394#issuecomment-281774268:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/394#issuecomment-281774268,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Since the CML code provides some XML parsing, it might be a; better idea to have a minimal/light XML parser incorporated; into the OB codebase. This would make it easier to handle; formats like CRK and other XML-based files. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809733:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809733,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Solved. Currently in CVS. Report format now lists molecular mass, exact mass,; chirality and any comment data in the file. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1381#issuecomment-281809575:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1381#issuecomment-281809575,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Some of this seems to have been fixed with earlier bug-fixes (e.g., this PDB ; file has hydrogens, which not all do) related to residue parsing with ; hydrogens. The behavior of cutting to a smaller PDB is a side-effect of limiting bond ; order perception in PDB files >250 atoms, since it's a time-intensive ; behavior. In this case, I've patched the 2.0.x and development code to do this ; regardless -- benchmarking show that it's time-intensive, but hardly a ; significant slowdown in the scheme of things. If you'd like, I can send you a source copy of the latest 2.0.x development ; snapshot, which should solve the problem for you. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/539#issuecomment-281776861:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/539#issuecomment-281776861,2,"['Log', 'benchmark']","['Logged', 'benchmarking']"
Testability,"Logged In: YES ; user_id=21420. Steps 6 and 9 are now absolutely complete.; Step 7 is partially implemented, though a more flexible; system (i.e. reading SMARTS patterns from a file) would be; much more useful. I've compiled the file, but not written; the code.; Step 8 will be the most difficult. Still, the current CVS code does a pretty good job if all; the valences exist (i.e. hydrogens have been added).; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809501:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809501,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Thanks for the bug report -- obviously if there's a crash, it's because the ; underlying C++ code is dead, not just the scripting wrapper. :-). This one didn't take long to debug after that report. OBConversion::ReadFile() ; was checking pOutFormat (which was a NULL pointer) rather than pInFormat. Fixed in the CVS version shortly. I can send you a snapshot of the 2.0.1 code ; if you like. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/512#issuecomment-281776364:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/512#issuecomment-281776364,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Thanks for the bug report and fix. Added to openbabel-new-framework ; CVS branch which will form the 2.0-release. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/442#issuecomment-281775125:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/442#issuecomment-281775125,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Thanks for the note. The current CVS development code now mentions ; this and the babel.1 was updated via doxygen-autogeneration. So the next release will have an improved manpage.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/440#issuecomment-281775075:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/440#issuecomment-281775075,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Thanks for the report. This is a duplicate.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/502#issuecomment-281776187:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/502#issuecomment-281776187,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Thanks, I just fixed this in the development trunk and 2.0.x branch -- it'll ; definitely go into 2.0.2 soon. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/540#issuecomment-281776878:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/540#issuecomment-281776878,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. Thanks. Fixed as soon as I commit to CVS momentarily. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/459#issuecomment-281775563:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/459#issuecomment-281775563,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The ""Requested Atom Out of Range"" message will never appear in the ; current code since there's an assert right before it -- the code is set to ; kill itself before issuing that message. Interestingly on another test SMI file, if I switch the order of ; components to '([O&X1&-][O&X2]).([#6])' it doesn't crash. I'm still tracing the problem, but thanks for the report -- it's clear there ; are some bugs in the SMARTS code. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149,5,"['Log', 'assert', 'test']","['Logged', 'assert', 'test']"
Testability,"Logged In: YES ; user_id=21420. The ""report"" format prints out more than the atomic partial charges, but it does ; do that:. http://openbabel.sourceforge.net/wiki/Open_Babel_report. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1423#issuecomment-281810131:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1423#issuecomment-281810131,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. The CVS code should be a start on this. I'm marking the; feature request &quot;pending&quot; until I can get a bit more; feedback on whether this works. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809806:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809806,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The CVS smiles code now checks for neighboring double bonds before ; outputting ""\"" or ""/"" designations on bonds. I'm marking this bug as fixed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775705:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/474#issuecomment-281775705,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. The HEAD was updated with the fixes from 2.0.1 and this seems to have fixed ; the issue. Marking this closed as the bug is fixed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776605:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776605,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The Transformation code is used by the command-line babel program and ; isn't particularly intended for user code. (You can, but it's redundant, since ; every function in Transformation is available directly by other means.). As I e-mailed directly, OBMol::Center() certainly works for me in the 2.1 SVN ; trunk. For proof, I took a molecule, called:. m_molecule->Translate(vector3(-1.0f, 0.5f, 0.8f)); // or whatever vector you ; want; // Now I output the molecule, which shows a clear translation. Then:; obConversion.Write(&m_molecule, &cout);; m_molecule->Center();; obConversion.Write(&m_molecule, &cout);. After the call to OBMol::Center() the coordinates are indeed centered ; compared to the coords from the Translate() call. I'm marking this ""Works for Me."" What revision of the SVN code are you using?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The ViewMol program writes coordinates in Bohr, but the; format indicates the conversion factor between the; coordinates used and Angstrom. The Open Babel code continues to write coordinates in; Angstrom and reads the conversion factor, enabling correct; roundtrip behavior. This also ensures that any ViewMol files; written in Angstrom are read correctly. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/417#issuecomment-281774652:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/417#issuecomment-281774652,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. The Windows GUI binary distribution has been removed (temporarily) -- a ; number of issues were found and are being fixed. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/497#issuecomment-281776115:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/497#issuecomment-281776115,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The attached atomtyp.txt (with changes in four lines) fixes this bug. No ; code changes are needed. I'm not sure if anyone is relying on previous behavior -- i.e. hydrogens ; are not added to acidic oxygen atoms. But I do believe this is the correct ; behavior -- regular hydrogen addition includes acidic oxygen atoms, but ; pH-corrected (-hpH) addition does not protonate acidic oxygen atoms, ; but does set the formal charge correctly. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/438#issuecomment-281775039:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/438#issuecomment-281775039,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The code at least on the surface marks H and h as total and implicit counts, ; respectively. An underlying bug made implicit hydrogen count == total hydrogen count.; The current code is exposing H as the number of explicit hydrogens. ; (Whoops). I believe this should fix the bug, although I'm going to do considerable ; testing to be sure this doesn't break other bits before 2.0.1 is released. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/521#issuecomment-281776531:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/521#issuecomment-281776531,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. The coordinates cannot be saved in SMILES format since this; format only specifies connectivity. However, there should be; non-zero coordinates given for the atoms. What needs to happen is after parsing the SMILES string and; deriving the correct connectivity, there should be a; two-step arrangement:; * Set atom geometries (i.e. bond angles); * Set bond lengths. This will require a bit more work, but I think I have the; beginnings of an &quot;easy&quot; implementation. (Famous last words,; probably.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809758:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809758,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The correct C++ code would be something like this:. sp = OBSmartsPattern();; sp.Init(""[#12]"");; sp.Match(obMol);; maplist = sp.GetUMapList();. if (maplist.empty()) {; exit;; }. // Find the matching atoms; for (i = maplist.begin(); i != maplist.end(); i++); {; ... I mean, I don't know enough Python to know why it's not returning a NULL or ; raising an Exception. It may be due to the SWIG wrapper (i.e, translating ; between the C++ vector and the Python structure), and I'm happy to raise ; that as a bug with SWIG. But it's not an underlying library bug because the C++ code works just fine ; IMHO. Is. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776829:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776829,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The covalent radius has been fixed, but the max # bonds won't be fixed ; quite yet. After the bond-typer code goes in, special cases like PF6- and ; PCl6- can be added. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/421#issuecomment-281774708:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/421#issuecomment-281774708,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The current 2.0.1 CVS version seems to have fixed this particular file, although ; more testing is needed before 2.0.1 is released. I'm marking this closed, pending further comment.; Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/526#issuecomment-281776621:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/526#issuecomment-281776621,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. The current CVS version has a PerceiveBonds() call that implements steps 6 and 9 and does an OK job already at assigning bonds. Accuracy will improve with implementation of steps 7 &amp; 8, though more testing is certainly needed as this is an adaptation of Roger's described algorithm. Adding the PerceiveBonds() call to appropriate file translators (e.g XYZ, QM codes) will happen soon. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809498:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1375#issuecomment-281809498,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. The final z-matrix doesn't seem to be significantly; different from the last cartesian matrix, so this will be; ignored. . Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/401#issuecomment-281774381:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/401#issuecomment-281774381,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The first part of this ""@"" vs. ""@@"" specification in SMARTS was simply ; something that was apparently left unimplemented. It now works. As for cis/trans, I don't know what the problem is -- certainly the test for ; bond->IsUp and bond->IsDown are being run correctly. I'll debug that ; tomorrow. I suspect that it's trying to match in one direction and finding problems, ; since:; $ echo ""Cl/C=C/Cl"" | tools/obgrep ""Cl\C=C\Cl""; Cl/C=C/Cl. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777242:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777242,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. The fix for this is now in the development trunk of SVN. The main problem was ; that the code searched for the valence of atoms, but ignored hydrogen atoms -- ; when explicit hydrogens were present, the atoms did not match the valence ; constraints. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/515#issuecomment-281776425:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/515#issuecomment-281776425,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The internal routines should parse DOS or Mac or UNIX line endings ; without any problem. If there are files with Mac line endings (or anything ; else) that does not import into Open Babel, then that's a *BUG* and I'd ; like to see some example files (e.g., submitted to the test file tracker) or ; a bug report. Support for Mac or DOS line endings on *output* is not currently ; supported and is a good idea, though it may take some work since ; much of the code uses the ""\n"" character automatically. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810032:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810032,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420. The most recent snapshot appears to solve this. I'll be happy to send this to anyone for additional testing before the release of ; 2.0.1 and would prefer to confirm that the crashes are solved. Thanks for the bug report and all the help!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776465:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/517#issuecomment-281776465,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. The new OBMessageHandler class in the CVS code takes care of much of ; this. The format code (and others) need to take advantage of the new ; class more, but support exists to solve this PR. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1393#issuecomment-281809782:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1393#issuecomment-281809782,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The patch by Richard Gillian adds -hpH that will turn on; adjustment for pH, but currently there's no flag to set the pH. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1385#issuecomment-281809622:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1385#issuecomment-281809622,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The problem is that 2.0.x has a limit of 2^16 atoms (65536). So reading/; writing the PDB file is fine, but adding hydrogen atoms creates *far* more ; than can be stored in 2^16 atoms. The 2.1 development code will shortly remove this limitation (I'm currently ; coming back from the American Chemical Society meeting, but will handle ; this on Monday). If you'd like to try a beta, please let me know.; Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777472:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777472,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. The updated version works perfectly. I'm not sure at the moment why the XML ; formats aren't loading, but nothing crashes and a useful error message comes ; up. So I'm marking this closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777541:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/575#issuecomment-281777541,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. There is a workaround for this, as described in the Daylight manual. [#1] should also provide the functionality you describe and escape questions ; of handling total/implicit hydrogen handling in Open Babel. I'll try to fix this soon, although it won't be in 2.0.1 because such a change ; may likely break other code and needs considerable testing. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/522#issuecomment-281776552:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/522#issuecomment-281776552,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. There's no error message here, so I have no idea what's going on. But I can attest that OB 2.0 2005-10-01 and 2005-11-16 (2.0.0rc1) *do* ; build cleanly with GCC-4.x on Mac OS X and Linux. If you'd like further help, please e-mail the openbabel-discuss mailing list. Right now, I'm marking this ""pending"" further comment in the next 14 days.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/488#issuecomment-281775968:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/488#issuecomment-281775968,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. There's not a big need for this to be a method itself. OBMol mol;; FOR_BONDS_OF_MOL(b, mol); {; if (b->IsAromatic()); b->SetBO(5); // aromatic bond order; }. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1422#issuecomment-281810129:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1422#issuecomment-281810129,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. There's two things here:; 1) The documentation for NumRotors() -- basically any non-ring bond with ; hybridization of sp2 or sp3 is considered a potentially rotatable bond. So ; there's no ""bond typing"" or anything like that. (There's a feature for generating conformers that can use a database of ; rotatable or non-rotatable bonds, but NumRotors() does not use that.). 2) In some sense, this is more of a feature request -- make NumRotors() a ; more intelligent function. :-). I'll make sure the documentation is updated for 2.0.1. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810456:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810456,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This *should* work -- the build environment is set correctly. But for some reason, the format code isn't loaded correctly. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/458#issuecomment-281775551:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/458#issuecomment-281775551,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This actually involved two bugs.; * The AssignFunctionalGroupBonds code in the bond typer was not ; working correctly. This now picks two of the oxygens and assigns ; double bonds.; * (Still to be resolved) The new Kekulize function is stripping bond ; orders off of bonds, once they've been assigned. This is Fabien's code, ; so I'm assigning the resolution of this bug to him and sending him a ; note. Thanks for the report -- hopefully, it'll be fixed soon. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/448#issuecomment-281775235:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/448#issuecomment-281775235,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This appears to be fixed. I will send a copy of the 2.0.1 pre-release to bug ; submitter to see if they agree. Setting this bug to ""pending"" further comment -- otherwise it will close ; automatically as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/521#issuecomment-281776532:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/521#issuecomment-281776532,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This bug is *closed*. Period. If you would like to report other SMARTS bugs, please, please open ; another bug report. Otherwise, you just complicate the tracking system ; and make it very hard for me to know what bugs remain to be fixed. Sswamida, if you cannot open a new bug report and give an example of ; input that gives you an error, I'm going to assume it's covered by the fix ; I already added that covers *this* bug report. Yes, invalid input should ; receive an error without accessing a NULL atom. That should be fixed ; by the changes I've already made to the development code. If you'd like ; a copy, use CVS or e-mail me. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775158:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775158,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This bug was fixed not long after 1.100.1 and is currently fixed in ; the CVS code (and will be in 1.100.2). So if you're a developer who wants to use libopenbabel, the CVS ; version is likely to work better for you. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/429#issuecomment-281774868:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/429#issuecomment-281774868,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This bug was fixed, correct? I'm marking this ""pending"" so it will close unless ; someone comments and re-opens it. I do believe this is now fixed in the development repository. (Almost typed CVS ; there -- now it's SVN...). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/532#issuecomment-281776720:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/532#issuecomment-281776720,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This code is not used anywhere in the rest of the Open Babel; code. So let's fix this bug--it won't break our code. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/407#issuecomment-281774487:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/407#issuecomment-281774487,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This does not seem to be a problem with the current CVS code. ; What version of Open Babel was showing this bug?. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/425#issuecomment-281774783:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/425#issuecomment-281774783,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This has been fixed in the CVS code for 2.1. An option (-xm) exists to produce ; the trailing $$$$ as requested, and the default is that $$$$ will be output only if ; properties exist (i.e., it's more an SDF rather than Molfile). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/498#issuecomment-281776130:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/498#issuecomment-281776130,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This has been fixed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/402#issuecomment-281774397:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/402#issuecomment-281774397,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This has been solved in the current CVS code. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1382#issuecomment-281809577:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1382#issuecomment-281809577,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This has now been done and the results incorporated into SVN trunk. Only a ; small number of changes have occurred from the original chemical MIME type ; data was input. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1472#issuecomment-281810595:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1472#issuecomment-281810595,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This has now been fixed in the 2.1 development trunk and I'll try to back-port ; the changes to the 2.0.x development as well for 2.0.2. I'm marking this ""pending"" -- if there isn't any further comment, this will ; automatically close as fixed within 2 weeks. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/549#issuecomment-281777023:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/549#issuecomment-281777023,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is a bug, not a feature request. But it would be quite helpful to have ; the exact SD file you were using to test. If you would rather not post it ; publicly, please send it to me privately so I can resolve the bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/444#issuecomment-281775169:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/444#issuecomment-281775169,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420. This is a duplicate of PR#1229841. https://sourceforge.net/tracker/index.php?; func=detail&aid=1229841&group_id=40728&atid=447448. Marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1459#issuecomment-281810488:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1459#issuecomment-281810488,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is a feature-request, not really a bug. In the worst-case scenario, 2D coordinates can be generated; using standard structure-diagram generation (SDG) code, e.g.; from the CDK project. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809762:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809762,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is already done. The key is exactly that, an -xk command line option with a string or -xf with ; a filename will supply keywords to a QM input. One advantage is that GUI programs can set their keywords and use Open ; Babel to write the input file, rather than having to do both. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810215:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1437#issuecomment-281810215,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is also true for strcpy -&gt; strncpy, strcat, and a; variety of other calls. Programs like its4, flawfinder and; RATS automate searching for these. I'm attaching its4 (v; 1.1.1) and flawfinder (0.22) output for the code and these; should be addressed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/398#issuecomment-281774326:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/398#issuecomment-281774326,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This is also true in many of the OBGlobalDataBase classes. These *all* need to be made more bullet-proof. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/462#issuecomment-281775583:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/462#issuecomment-281775583,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is an old bug. Either check the patch at:; http://sourceforge.net/mailarchive/forum.php? ; thread_id=9412916&forum_id=47190. or grab the snapshot of 2.0.1:; https://sourceforge.net/project/showfiles.php?; group_id=40728&package_id=154019. However, we have heard of other problems with FC4 -- evidently there is ; some sort of crash. (See bug #1447233.). I'm marking this particular bug closed, but if you experience the crash, please ; file comments in the other bug report. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/518#issuecomment-281776484:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/518#issuecomment-281776484,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This is apparently not possible with the current automake / libtool. I will look ; into ways to handle it in the dlhandler_unix.cpp code itself. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/511#issuecomment-281776354:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/511#issuecomment-281776354,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is basically resolved under the new conversion framework. The ; UNIX build does not currently handle dynamic loading, but it will not be ; too much more work. Marked ""pending"" since this will be resolved soon.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1372#issuecomment-281808324:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1372#issuecomment-281808324,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This is being closed as it is superceded by PR#1499615. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810036:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1406#issuecomment-281810036,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is being closed. It is now a duplicate -- Cygwin must run as a static ; library, and currently static builds fail on UNIX. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/481#issuecomment-281775830:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/481#issuecomment-281775830,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This is duplicated in the &quot;task manager&quot; so I'm closing this. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1388#issuecomment-281809697:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1388#issuecomment-281809697,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This is essentially solved. New CML code (including a full CMLDOM) has ; been contributed and will be integrated soon. The C++ CMLDOM is ; evidently autogenerated to some degree and will thus be updated as ; needed. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1391#issuecomment-281809737:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1391#issuecomment-281809737,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is fixed in the CVS openbabel-2-0-x branch for incorporation into 2.0.1. ; Not sure if it's fixed yet in the CVS ""head"" but it will be soon. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/458#issuecomment-281775552:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/458#issuecomment-281775552,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is fixed with an update to the InChI library, now contained in 2.1.0b1 and ; the 2.0 SVN branch. Peter noted this fix to me via e-mail. Marking this closed. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/566#issuecomment-281777443:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/566#issuecomment-281777443,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is fixed. After Fabien's response, I did further debugging -- the ; problem was that the OBBondTyper was not calling SetKSingle, ; SetKDouble, etc. for functional group bond order assignment. Hence, after the new kekulize code ran through the rings, the ; OBMol::Kekulize() routine saw all remaining bonds as KSingle and set ; them to BO = 1. This is now fixed in CVS. Thanks Fabien!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/448#issuecomment-281775239:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/448#issuecomment-281775239,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This is fixed. Thanks very much for your contribution!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/416#issuecomment-281774626:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/416#issuecomment-281774626,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This is most decidedly fixed in the current CVS code. (Phew!); -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/404#issuecomment-281774440:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/404#issuecomment-281774440,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is not a bug. If you want to change the directory of the installation, you can use the ; configure script. ./configure --help. In particular, you may want to use:. ./configure --prefix=/usr/bin. Or... you might just want to wait a few days for Michael to add a Debian ; package for OB-2.0. I suspect he'll do that as soon as he has a chance. In any case, this is not a bug in OB. If you compile your own software on a ; UNIX platform, it typically goes in /usr/local. The OB build environment tells ; you explicitly that you may need to add /usr/local to your library paths. On ; Debian, only packages are allowed to install into /usr. Not a bug, sorry.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776174,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is not a problem in the current CVS code. It is now a SMARTS ; test case, but I cannot reproduce this with the smartstest code or ; the obgrep program. What version was showing this bug?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/426#issuecomment-281774797:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/426#issuecomment-281774797,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. This is now a bug. The current method of dealing w/2D molecules ; prevents running ConnectTheDots and PerceiveBondOrders, etc. on ; 2D structures, but 3D structures that are, in fact, flat are not ; handled correctly. So structures *must* be marked as 2D/3D correctly or this will ; continue to become a bigger problem. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774422:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/403#issuecomment-281774422,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is now a duplicate, as mentioned by Craig. I'm marking this closed as Craig ; has opened reports for the separate issues. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/552#issuecomment-281777233:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/552#issuecomment-281777233,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is now changed in the openbabel-new-framework CVS code, although ; it did not make the recent snapshot. Unfortunately, the change needed to support this uncovered a bug in the ; new conversion framework. Marking this closed ""pending"" further comment.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1402#issuecomment-281809879:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1402#issuecomment-281809879,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is now fixed -- the coordinates are checked, and translated if needed to ; avoid this situation. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776139:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/499#issuecomment-281776139,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is now fixed in CVS. To fix in your version, it's a simple edit ; of the atomtyp.txt file. (If this is under UNIX, make sure it's the ; *installed* atomtyp.txt file, as this is the one that's read on ; runtime.). Remove the &quot;#&quot; comment markers where it says &quot;Uncomment&quot; for ; Sybyl typing. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/428#issuecomment-281774845:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/428#issuecomment-281774845,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This is now fixed in both the SVN trunk for 2.1 and the 2.0.x branch for 2.0.2. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/536#issuecomment-281776790:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/536#issuecomment-281776790,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is now fixed in the CVS code. If you'd like, I can send you a copy of a snapshot for further testing?. Sorry for taking so long to fix this--pretty simple in the end. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/411#issuecomment-281774550:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/411#issuecomment-281774550,3,"['Log', 'test']","['Logged', 'testing']"
Testability,Logged In: YES ; user_id=21420. This is now fixed in the SVN repository for both 2.0.x and development trunk. ; The bug was caused by an incorrect code change on 5/24. (Oops!). -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/545#issuecomment-281776970:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/545#issuecomment-281776970,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This is now fixed in the SVN trunk development code. I'd be glad to provide a ; patch to anyone who needs it (revision 1484). I'm now marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/522#issuecomment-281776553:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/522#issuecomment-281776553,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is now fixed in the current CVS version. The main.cpp code ; uses OBMolVector to store multiple molecules and has code to ; pick a selection of molecules (or one, if firstMol == lastMol). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1384#issuecomment-281809595:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1384#issuecomment-281809595,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is now possible in the build environment, since individual file ; formats are built separately. Any new file format requiring an XML library ; will be built conditionally. It doesn't make sense for Open Babel itself to write an XML library or ; include such code in the distribution -- such libraries are typically ; already available on a system or can be downloaded easily if an XML ; format is requested. As for the CML code, the full CML DOM is available for an updated ; cml.cpp. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809734:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1390#issuecomment-281809734,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is now working. It needs some tinkering, but the current SVN trunk has a workable Ruby interface using SWIG. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1470#issuecomment-281810575:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1470#issuecomment-281810575,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This is pretty much completed. I'm marking this closed -- the ; documentation needs some improvement, but is basically in good shape. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809683:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1387#issuecomment-281809683,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This isn't a bug. The SMILES format does not contain coordinate ; information and the current version of Open Babel does not do any sort ; of coordinate generation. Other packages, including CORINA can do this.; http://www2.chemie.uni-erlangen.de/software/corina/free_struct.html. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/436#issuecomment-281775011:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/436#issuecomment-281775011,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This isn't an Open Babel error. You must be root to install in /usr/local. Try:; sudo make install. If you have other installation/compilation problems, please report them ; to the openbabel-discuss mailing list. :-). Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/435#issuecomment-281774986:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/435#issuecomment-281774986,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This particular bug is fixed. It's probably worth revisiting positive/negative ; stereo later. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/479#issuecomment-281775817:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/479#issuecomment-281775817,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This problem is now fixed. The bug originated with a change of coordinates ; from CDX to an approximate Angstrom scale. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/569#issuecomment-281777482:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/569#issuecomment-281777482,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This seems to be fixed in the current CVS code. I'm marking this report ; closed, pending comments. If similar SMARTS/obgrep errors occur, please open a new bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/451#issuecomment-281775322:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/451#issuecomment-281775322,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This should be fixed in the 2.1 SVN repository now. I've also added the ; suggested invalid SMARTS to the tests. I'm marking this ""pending"" -- if there is no other comment, this will be closed ; as fixed. If the bug is not, in fact, fixed, please comment on what's missing ; from the current revision. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/548#issuecomment-281777007:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/548#issuecomment-281777007,2,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=21420. This should be fixed in the current CVS tree for 2.0.x and 2.1 now. Marking closed, pending further comments. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/504#issuecomment-281776222:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/504#issuecomment-281776222,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This should be fixed in the current ob-new-framework development CVS ; code. I'm marking this closed pending review from Jean. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/437#issuecomment-281775026:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/437#issuecomment-281775026,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This should be fixed now. The problem was that the PDB read methods didn't ever bother to call mol.SetTitle()... this is now the case. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/413#issuecomment-281774593:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/413#issuecomment-281774593,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This should be re-investigated before the next release and; I'll try to grab many of these along the way. I'm also wondering if some of the warnings have gone away; with the switch to double-precision floats. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/414#issuecomment-281774597:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/414#issuecomment-281774597,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This should now be fixed in the CVS code for 2.0.1. I will send a copy of the ; snapshot to submitter to verify that bug is fixed. I'm marking this bug ""pending"" further comments, otherwise it will be closed ; automatically as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/523#issuecomment-281776572:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/523#issuecomment-281776572,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This should now be fixed in the Subversion repository (revision 1568 or later).; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/573#issuecomment-281777517:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/573#issuecomment-281777517,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This should now be fixed in the current development trunk (1393) and will be ; brought back to the 2.0.x branch as well. I'm marking this closed pending further comment. If no one comments, this will ; automatically close in 14 days. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/538#issuecomment-281776851:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/538#issuecomment-281776851,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This turned out to be a bug in the CML ReadMolecule() method in 2.1 ; development. The other file formats are unaffected. This is now fixed in the 2.1 trunk, as of revision 1534.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777312:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777312,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This turned out to be a bug in the CML ReadMolecule() method in 2.1 ; development. The other file formats are unaffected. This should now be fixed in the 2.1 trunk, as of revision 1534. I'm marking this ""pending"" as I was never able to reproduce the bug. If Benoît ; or anyone else posts a comment in the next 14 days, this will reopen. ; Otherwise, it will close automatically as being fixed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/561#issuecomment-281777359:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/561#issuecomment-281777359,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This turned out to be a really minor change in the MDL format v3000 code in ; 2.0. It's not in the 2.0.0rc1, but it *will* be in 2.0 final, and I promise it'll work ; for MDL v3000. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775885:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775885,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This turned out to be a small fix. Libxml2 is very unhappy attempting to read at ; the end of a file. I'm committing a change to SVN trunk and the 2.0.x branch that checks the state ; of the stream before reading. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776787:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/535#issuecomment-281776787,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. This was a bug in how the count of molecules was stored. This has been ; fixed in the CVS version now. Thanks for the report!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/480#issuecomment-281775828:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/480#issuecomment-281775828,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This was probably easy enough that I shouldn't have bothered filing a bug. The configure/Makefile scripts for 2.0.1 should now fix this. If libinchi is ; installed, it will not be re-compiled. Otherwise, it will be compiled and ; installed. This will need some careful testing, but I think it's working correctly. Certainly ; on my developer copy, it doesn't recompile libinchi all the time anymore. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/524#issuecomment-281776581:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/524#issuecomment-281776581,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420. This will be fixed in the next CVS update. All atoms are; considered, and proper mass-weighted coordinates are used. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/407#issuecomment-281774488:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/407#issuecomment-281774488,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. This works for me in both the latest 2.0.x development code and the ; development trunk. I believe this was fixed by recent SMILES/aromaticity bug-fixing and should ; be solved when 2.0.2 is released. I'm marking this closed as it works for me, and Craig verifies that his batch of ; aromaticity tests are working too. Any new aromaticity bugs should be ; opened as separate issues. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/546#issuecomment-281776980:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/546#issuecomment-281776980,2,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=21420. This works for me in the current CVS version at least on Mac OS X. I've added tests to the ""roundtrip"" suite for invalid molecules like an ; empty file, piles of random data, and eventually invalid formats (e.g., ; XYZ with negative numbers of atoms, etc.). I'd be glad to provide instructions on running the roundtrip suite on other ; platforms. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775568:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/460#issuecomment-281775568,2,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=21420. This would be a bug, as the current MOPAC reader does read charges from ; the output as partial charges. http://sourceforge.net/tracker/index.php?; func=detail&aid=660364&group_id=40728&atid=428740. Could you please e-mail me a test file or two?. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1449#issuecomment-281810403:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1449#issuecomment-281810403,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. Typing problems fixed.; Buckyball kekulization problems fixed (and bonds look; &quot;perfect&quot;). 417 kekulization errors remain (unknown cause currently). SMI problems with 1HVC are from recursing too deeply.; For now, we probably should limit how large an SMI can be,; e.g. 1000 atoms. Mol and BIN problems with 1HVC come from reading the; resulting file.; MOL has a problem with the number of atoms--it stores this; in the file and 1HVC is too big. (Easy fix, we limit how; large a MOL can be!); BIN seems to have other problems. Not obvious where the; problem lies. SMI and FIX problems seem to stem from an underlying memory; corruption bug. --- Summary: ---; 417 kekulize unfixed; 1hvc BIN unfixed; Table SMI/FIX bugs unfixed; Table CACINT unfixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/410#issuecomment-281774541:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/410#issuecomment-281774541,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Unfortunately, I can't reproduce this and am not allowed to see the original ; data file. The original bug reporter has not been able to give me debugging ; information, making this impossible to solve. For now, I'm marking this as ""Won't Fix"" and closing pending further ; comment. What would be really helpful is the result of:. gdb /usr/local/bin/babel; run /Users/user/Desktop/outputfile.fs -osmi /Users/user/Desktop/; outputfile.smi -s'C[NH2]'; bt. The ""gdb"" program is a debugging tool, the ""run"" command simply runs babel ; with the options listed (as if calling babel on the command-line) and the ""bt"" ; command will give a ""backtrace"" when the bus error occurs. The last bit is a ; sequence of function calls and sometimes line numbers in the code and is ; critical to debugging a problem like this. No confidential information should be passed. But unless we can get some sort of debugging information, I can't solve this ; bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Well, I'm certainly confused too. There's still OBMol::Center() which is the same ; as it ever was. It works for me. Carsten, could you post the code that you're using that's causing you problems? ; Again, I don't know what you mean by a std::map<>. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777309:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777309,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Well, the 2.1 development code now has a second (optional) parameter to ; WriteString to trim whitespace. However, if pybabel wants to be backwards-compatible with 2.0.x, it ; probably should be done inside python. (Besides, this makes the most sense ; with things like SMILES and InChI.). I'm marking this closed, since it's been addressed in the development CVS for ; 2.1.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776271:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776271,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Well, there's clearly a bug with www.chemistry-development-kit.org. The formulas are correct (although example 2 isn't in Hill Order, since F is ; last).; But I can pick any of several molecular weight calculators and show that those ; formulas do not give the masses calculated by c-d-k.org. I *can* confirm that before OBMol::AddHydrogens() the masses for the SMILES ; are correct from Open Babel. As of right now, I can't find the bug. But I'm attaching a PNG file with the ; three examples I gave, as well as the first four lines from attype.00.smi:; Oc1ccccc1c2nnco2 BIONET_10A-002 aryl; CC(=O)c1ccc(cc1)n2ccnc2 BIONET_10A-004 aryl; CN(C)/C=C/1\CCNC1=O BIONET_10A-007 hetatm; Cc1ccc(cc1)S(=O)(=O)Oc2ccccc2c3nnco3 BIONET_10A-008 aryl. As I said, OB calculates the formulas correctly (before and after ; AddHydrogens). But for whatever reason, the OBMol::GetMolWt() and OBMol::GetExactMass() ; do not return the correct values after AddHydrogens(). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776754:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776754,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. What I meant to say before the browser stopped allowing text... Is there a different resolution you'd like to see? I guess you'd rather see an ; exception or a NULL?. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776830:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776830,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Whether or not the file has 3D coordinates, the undefined ; stereochemistry should be respected (e.g., a racemic mixture, the 3D ; coordinates are unreliable, etc.). I think the best solution is to mark the atom as chiral but not with a ; specified stereochemistry:. if (atom.IsChiral() && !atom.HasChiralitySpecified()); ... assume undefined stereochemistry, don't try to perceive chirality. I'm not sure there's a perfect solution here -- we can't assume that every ; file from MDL has chirality perceived.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775882:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/484#issuecomment-281775882,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. While this is a bug report, let's discuss this on the development list. I'd be ; happy if part of the 2.1 development led to revisiting all the implicit valence ; rules. We certainly have time through the 2.1 release cycle to implement and ; test all these. If you can contribute a set of molecules (better yet a SMILES file) with the ; correct number of hydrogen atoms, I'd be glad to add a unit test and we can ; add to it over time. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/531#issuecomment-281776692:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/531#issuecomment-281776692,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420. With the new OBConversion framework, this request is obsolete. ; OBExtensionTable no longer exists and the new MIME methods *return* ; values rather than copying into a buffer. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1397#issuecomment-281809837:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1397#issuecomment-281809837,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Without using the Python wrapper, this seems to work for me. Can you verify that this is true on your system? In short, if you do something ; like:. babel test.sdf.gz test.smi. Does that work from the command-line? In short, is the problem with the ; Python wrapper or the library itself. (I'd guess perhaps something in the ; python, but I'm not sure.). Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777366:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777366,3,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420. Works fine for me when you install under &quot;sudo make install&quot; on ; every Mac OS X I've used on my laptop. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/427#issuecomment-281774823:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/427#issuecomment-281774823,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Works for me on OS X g++ v. 3.3:; gcc version 3.3 20030304 (Apple Computer, Inc. build 1809). Have you tried a ""make clean; make""?. I just added the std:: namespaces to the source file to match the header ; -- this makes it easier for doxygen to generate API documentation. Sometimes when I update a source file or header and the dates are out ; of sync, make will not properly re-compile or update a library, but a ; ""make clean; make"" will fix this. For now, I'm marking this as ""Works for me, close pending response in ; 14 days."". Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/454#issuecomment-281775346:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/454#issuecomment-281775346,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Works for me. I don't know when you checked out the CVS. The ; OBAtom::ClearBond() code is in mol.h and it's definitely compiling cleanly ; for me. Maybe try a ""make clean; make"" after running a ""cvs update"" now?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/450#issuecomment-281775290:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/450#issuecomment-281775290,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Yes, I like this idea -- having an XML or text file that provides a mapping ; between the filename of a plugin and the format codes/extensions/mime ; types, etc. The file can also indicate if certain plugins are manditory (e.g., the ; API module right now). One way that I can see this working is that the installation process generates ; this file. If the file isn't present, the library can fall back on the current ; behavior. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810179:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810179,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Yes, STL iterators should be used wherever possible. Not all; parts of the code use iterators yet. Furthermore, some of; the internal data structures reference the atom vector; directly. These do things like atom[idx-1] and all of these; will need to be found and fixed. This should be a task for after the next interim beta; release--but definitely before the 2.0.0 release!. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809552:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1380#issuecomment-281809552,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Yes, the phosphorus should have have an additional hydrogen. I'll investigate ; the atom typing rules for P to see what's wrong here. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776306:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/508#issuecomment-281776306,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. Yes, there was a bug where OBAtom::GetType() would realize an atom ; didn't have a set type and use OBTypeTable::Translate() but not reset it. So higher-level code (e.g., the format conversion code) would call ; OBAtom::GetType and it would screw up the type translation set for the ; format code. As I said, it's fixed in the current CVS code. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775918:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/485#issuecomment-281775918,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420. [D], [v], and [X] are now supported, i.e., as a default of D1, v1, X1 for those ; primitives. Support for the [x#] primitive (i.e., number of ring bonds) has been moved to ; a separate feature request. This bug now focuses on support for the patterns:; [*~*]; [c:c]; [Caa(O)aN]; [Ca(aO)aaN]; [*@;!;*]. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/530#issuecomment-281776668:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/530#issuecomment-281776668,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420. duplicate. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1378#issuecomment-281809535:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1378#issuecomment-281809535,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. (sigh). I think the only solution is to split the bindings into multiple pieces -- the source appears to be too big to compile in one piece. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780563:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780563,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. 4-valent nitrogens are no longer a problem in the 2.2. SVN trunk. I am marking this bug closed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776445:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776445,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Actually, I think the question here is why the <NAME> field is being used for a title. Many other file formats expect the title to only be one line. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/766#issuecomment-281781125:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/766#issuecomment-281781125,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Actually, this works reasonably well in 2.1.x releases -- the next record can get lost, but babel recovers and outputs the rest of the file. Babel most certainly does not quit and certainly outputs everything else in the file. I'm marking this bug closed -- it's untrue. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/627#issuecomment-281778506:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/627#issuecomment-281778506,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Actually, you want this patch:. http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/branches/openbabel-2-1-x/src/formats/inchiformat.cpp?r1=1893&r2=1933. I found this bug in testing ChemSpotlight, and made a fix available on the 2-1-x branch. We haven't yet gathered enough bug fixes for a 2.1.1 release, but hopefully one will come soon. There are a few other issues that should be addressed soon. Thanks for your report, it's good because it focuses on a SMILES without chiral information.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778918:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778918,2,"['Log', 'test']","['Logged', 'testing']"
Testability,Logged In: YES ; user_id=21420; Originator: NO. All fixed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778964:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778964,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. As Daniel mentioned, this is fixed in SVN trunk. So I'm marking this closed. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/737#issuecomment-281780593:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/737#issuecomment-281780593,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. As discussed below, this feature is now implemented. I'm closing this feature request. Thanks to Chris for adding this!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810763:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810763,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. As far as I can tell, Noel has added this feature with his new OBPython file releases for Windows:. http://sourceforge.net/project/showfiles.php?group_id=40728&package_id=215445. I'm marking this to be closed automatically in 2 weeks if there are no further comments.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1450#issuecomment-281810421:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1450#issuecomment-281810421,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. As mentioned by dliedert, this is fixed for 2.2, so I'm closing this bug. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/724#issuecomment-281780326:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/724#issuecomment-281780326,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. As this bug stands, it affects reading. I did change the behavior for writing files with OBConversion::Write. However, this need not be the case. I'd be happy to say ""all programs should set the locale to C"" but I don't think that's a good solution either. Furthermore, it's a lot of work to change all calls to sscanf, atoi, atof, etc. before the 2.2. release. I think this is an OK workaround until a more complete solution is found. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779361:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779361,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Based on Chris's response, this seems like a duplicate of bug report 1596906, which should be corrected before the 2.1 release. I'm going to mark this one closed as a duplicate.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778259:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778259,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Can someone check that this works for 2.2.0b7?. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780580:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780580,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Can we take this up on the mailing list? It's hard to track what are real bugs and what are questions about your VS2008 build. I believe this particular report is fixed, correct?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/775#issuecomment-281786098:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/775#issuecomment-281786098,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Can you attach the PDB file? It can be gzip encoded to save space if you like. But without the exact file, it's impossible to know if/where there's a bug in the code. We obviously run many, many PDB files through to prevent crashes, etc. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/616#issuecomment-281778271:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/616#issuecomment-281778271,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Can you check on these for 2.2.0?. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780273:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780273,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Chris addressed this with new changes and a --separate flag, starting with the SVN revision 1760 and later (for version 2.1 development). I'm marking this ""pending"" further comment. Otherwise, this will be marked as solved in 2 weeks. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1473#issuecomment-281810605:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1473#issuecomment-281810605,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Chris solved this in the SVN trunk, revision 1838 or later. I'm marking this closed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/531#issuecomment-281776694:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/531#issuecomment-281776694,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Chris, is there any way you can get a line number or stack backtrace from the debugger to elucidate this? As you say, it's probably a compiler issue. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778026:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778026,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Considering today's change (to disable / or \ recognition, I think this becomes a feature request, rather than a bug report. So I'm going to move this to ""Feature requests."" (i.e., need cis/trans support back). I'll also make a note on the wiki. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1479#issuecomment-281810662:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1479#issuecomment-281810662,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Craig and Chris, is this issue resolved? I'm going to mark it ""pending"" further comments from Craig. If it's a bug, please reply so we can resolve this one way or another before 2.2.0. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/743#issuecomment-281780711:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/743#issuecomment-281780711,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Craig, I'm marking this particular bug as closed. There are still cis/trans issues, but as the report is worded, this bug is fixed. Let's make sure to file particular issues, so we can track what's fixed, and what needs work for 2.1. I'd rather see 10 new specific bug reports which we can kill (e.g., like the past SMILES / SMARTS issues) than one overly-general report which is hard to test if every piece is solved yet. So I'm marking this report as ""pending"" further comment from Craig. Otherwise, it will automatically close as fixed in 2 weeks.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/578#issuecomment-281777589:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/578#issuecomment-281777589,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420; Originator: NO. Duplicates PR#1688251. I'm going to close this one. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/633#issuecomment-281778616:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/633#issuecomment-281778616,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Excellent. I'm going to mark this bug as closed. If Debian has an issue, I hope they will open a new bug. To be safe, can you tell me if any other bindings are still close to causing compile problems?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780570:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780570,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. First off, the ""second flag"" is listed as deprecated in the MDL CT file documentation. As for the ""critical H0 flag,"" this is indicated as being relevant only to query files. On the other hand, it's probably worth extracting this -- if it's non-zero, it indicates the maximum number of implicit hydrogens + 1 (i.e., 1 => 0 hydrogens, 2=> 1 hydrogen, etc.). Essentially, this would just call OBAtom::SetImplicitValence() after making sure it's been perceived on the remaining atoms. It's certainly easy enough to also write to this field on output (i.e., implicit valence - 1). Whether other software actually reads it is unclear. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/628#issuecomment-281778547:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/628#issuecomment-281778547,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Fixed in SVN revision 2571 or later. Thanks!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/770#issuecomment-281781232:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/770#issuecomment-281781232,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Fixed. Switched to FOR_ATOMS_OF_MOL iterator instead -- no off-by-one errors. Ever. :-). Update to revision 1752 or later. I'm marking this closed, pending further comment. Otherwise, it will close automatically in 2 weeks. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/602#issuecomment-281778068:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/602#issuecomment-281778068,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. For reference:; Original InChI:; InChI=1/C16H21NO2/c1-12(2)17-10-14(18)11-19-16-9-5-7-13-6-3-4-8-15(13)16/h3-9,12,14,17-18H,10-11H2,1-2H3/t14-/m1/s1. Translated SMILES:; CC(C)NC[C@@H](COc1cccc2ccccc12)O. Final InChI:; InChI=1/C16H21NO2/c1-12(2)17-10-14(18)11-19-16-9-5-7-13-6-3-4-8-15(13)16/h3-9,12,14,17-18H,10-11H2,1-2H3/t14-/m0/s1. So the error appears to be on the side of reading the InChI. The error is in the SMILES -- the output from SMILES to InChI matches correct stereochemistry. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/657#issuecomment-281779098:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/657#issuecomment-281779098,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. From Craig:. Without even looking at the code (just the SMILES), I would not consider this a showstopper. I'm about 99% confident it's a weird SMILES that hits a O(N^2) or O(N^3) algorithm (not an actual infinite loop) in the symmetry analyzer or the ""tie breaker"" labeling code. The SMILES has dozens of identical or nearly-identical dot-disconnected fragments, and although the symmetry analysis should be fixed to handle this case, it's hardly something we'll encounter every day. It's not a real molecule, but rather some sort of mixture or ""pot of atoms and fragments"". Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/690#issuecomment-281779693:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/690#issuecomment-281779693,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Have you tried this with smaller input files (e.g., a few megs)?; Have you tried converting the huge file without SMARTS filtering?. I believe your issue is less with the Open Babel GUI and more that you're trying to deal with a huge amount of data. (For example, you may not have enough memory to deal with this.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778256:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778256,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Hmm. I wonder if this is just limited to PDB format... But this is relatively easy to fix (it's now in SVN trunk, revision 2613 or later). // Clear all virtual bond data; vector<OBGenericData*> vbonds = mol.GetAllData(OBGenericDataType::VirtualBondData);; mol.DeleteData(vbonds);. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/768#issuecomment-281781207:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/768#issuecomment-281781207,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I believe Marcus has the right answer here -- these are old files from autotools. The name of the formats are different for Cmake and autotools. If there aren't comments, this bug will close as ""works for me."". Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/756#issuecomment-281780983:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/756#issuecomment-281780983,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. I believe Tim's recent changes to SVN trunk solve this -- the pH model will now recognize the separate pKas of each amino acid and will adjust accordingly. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779328:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779328,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. I believe that Tim handled this in the current SVN trunk (along with logP). Perhaps it's better to have a shared class for handling group contributions like this?; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810057:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810057,2,"['Log', 'log']","['Logged', 'logP']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I believe this has been fixed by Noel and Chris. I'm marking this ""pending"" further comment from either of them. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779786:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779786,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I can certainly translate from one format to the same format. There are several unit tests which do that. (e.g., SMILES to SMILES, MDL to MDL, etc.). So some more context would really help here. It may be the way you've coded this. You really should be testing the result from FormatFromExt because it might return NULL. So for example:. OBFormat *pFormat = conv.FormatFromExt(myInputFile);; if (!pFormat); // error handling here; if (conv.SetInFormat(pFormat) && conv.SetOutFormat(pFormat)) {; conv.Read(...);; conv.Write(...);; }. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/781#issuecomment-281793164:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/781#issuecomment-281793164,3,"['Log', 'test']","['Logged', 'testing', 'tests']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I can confirm this bug, although it's clearly a very recent regression in the 2.1 trunk -- I do roundtrip tests every 1-2 months on the development snapshots and before every full release. If no one else gets to this, I'll fix it tomorrow.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/582#issuecomment-281777667:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/582#issuecomment-281777667,3,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I can't reproduce this. I use obminimize just about every day. What platform are you using? How did you compile (or install) Open Babel trunk? Did you run ""make install"" before obminimize?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/726#issuecomment-281780370:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/726#issuecomment-281780370,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I cannot reproduce this bug on the current 2.1 development code. I am marking this ""pending"" further comment. Ideally, it would be great if you could compile one of the latest development snapshots:; http://sourceforge.net/project/showfiles.php?group_id=40728&package_id=154019. If there is no comment on this bug in the next 2 weeks, it will be automatically closed as being fixed sometime in the 2.1 development. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/589#issuecomment-281777833:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/589#issuecomment-281777833,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I cannot reproduce this with the latest SVN trunk on Mac or Linux. I'm marking this ""pending."" Craig, if you can help me reproduce this, we can reopen the bug. Otherwise, I'm not sure that you're using the straight SVN trunk for this. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/582#issuecomment-281777668:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/582#issuecomment-281777668,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I don't actually get a segfault, although I do have plenty of NaN results. (Perhaps the Mac doesn't segfault on divide by zero?) So I can't verify your particular bug. Anyhow, the attached patch seems to fix the problem -- if the length is incredibly small, it pushes atoms 0.1 Ang apart and goes from there. I'm not sure if the angle or torsion or other parameters need similar fixes since this seems to be enough. Please give it a try and let me know if you still get a crash.; -Geoff; File Added: forcefield.patch. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/629#issuecomment-281778552:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/629#issuecomment-281778552,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I just committed a patch which removed the last of DOS-style line endings. But I'll also point out that SVN has ""native"" line endings set for all files:; http://openbabel.svn.sourceforge.net/viewvc/openbabel?view=rev&revision=2347. It's possible that some of your files haven't been otherwise updated. If you get a ""fresh"" checkout, is it better?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781275:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781275,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I just tried on my Mac, and everything seems to work cleanly. Thanks Chris for jogging my memory about that bug. Maybe there's a buggy version of libxml2 on some Linux platforms?; * I have 2.6.16 on my Mac.; * Chris, what version is your pre-built libxml2 DLL?. Marcus, what are you running?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781077:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781077,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I see there has been some compounding problems since this bug report. Here's what I need to know:; 1) Is this only in the Python binding? If so, the latest SVN trunk should fix this -- I can send a test snapshot.; 2) Do we have an idea for the upper bounds on the size of the SWIG code? It is generally large anyway. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780568:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780568,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I think cryos's suggestion is the best solution for now. Let's have OBConversion::Read change the locale to ""C"" during reading and then set it back after completion. A similar change in data.cpp should solve the data files as well. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779357:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779357,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. I think this seems like a good solution. I'm incorporating your fix into SVN trunk for 2.2. Thanks so much for the bug report and the fix!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/699#issuecomment-281779876:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/699#issuecomment-281779876,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I think your goals are great. It's also very helpful to test the code against different compilers -- we often find errors when comparing Chris's VS2005 builds and the GCC builds. I think it might be easier for you to get quick replies on the mailing list than on the bug tracker. For example, I reply to e-mail generally several times a day, but rarely check in here to post comments. Why don't you just send a message with your recent build results and/or problems to openbabel-devel. We're all there to help you out! (And hopefully make it easier for you to get your long-term goal to happen.). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786148:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786148,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I thought I posted to the bug. I attempted a fix. At the very least, it doesn't crash on Mac or Linux -- but I couldn't reproduce the bug on Mac previously. Does the current SVN trunk work for this?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793124:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793124,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'll make sure the ._ files don't appear. (Grumble.) I've changed to the LD_LIBRARY_PATH as described above. Can you try ""rm ._*"" and then see if it works? I can also send you a 2.2 release candidate tar if you like. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/783#issuecomment-281793255:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/783#issuecomment-281793255,2,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. I'm actually going to remove this file for now -- it needs updating anyway to work with C++ streams. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/774#issuecomment-281786081:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/774#issuecomment-281786081,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. I'm bumping this to a higher priority. Do we match the InChI test set now?. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/542#issuecomment-281776913:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/542#issuecomment-281776913,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm closing this bug report. Let's try to keep each report to one and only one issue. Since this is a public bug database, others do take a look at what's been fixed -- so it's important to keep things separate. We clearly fixed the first report, which will be in 2.1.1. The second report works for me with the 2.1.1 code. If you have another GAMESS issue, please submit a new bug report and we'll fix it ASAP. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779046:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779046,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm converting this to a feature request. I think Noel's comment is useful, but this is going to take some work. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1484#issuecomment-281810718:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1484#issuecomment-281810718,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm going to mark this as closed pending further comment from the submitter. If no comment is heard within 14 days, this will be closed as ""Works for Me"" (and others). If you have problems installing, please let us know on the mailing lists. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/726#issuecomment-281780372:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/726#issuecomment-281780372,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this ""Pending"" based on Tim's fix. Noel, if this is still a problem, please comment. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/755#issuecomment-281780945:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/755#issuecomment-281780945,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this ""pending"" further comment from the submitter. I believe this has been fixed in the 2.2. development. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780836:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780836,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this closed -- the obgen / OBBuilder tools are in great shape. There are certainly issues remaining, but we should take those up as new bug reports. This feature request is closed as finished by Tim. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809768:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809768,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. I'm marking this closed -- this is confirmed to be fixed in 2.2.0b4 and SVN trunk. Chris Morley contributed the fixes. Thanks!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/728#issuecomment-281780419:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/728#issuecomment-281780419,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this closed then. I can't pin my finger on the fix, but several changes went into PDB chains. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779254:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779254,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this closed, as it duplicates the next example. I'll make more comments there. Open Babel does not support the disconnected SMARTS form:; http://openbabel.sourceforge.net/wiki/SMARTS. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/614#issuecomment-281778236:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/614#issuecomment-281778236,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this closed. As Chris mentioned, it's easier to handle this via e-mail, rather than reporting a bug for any error you find. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/787#issuecomment-281793380:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/787#issuecomment-281793380,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this closed. It would be more trouble than it's worth. It might be better to take the SWIG-generated files out of the SVN repository, but for now, there's no great reason to do this splitting. Worth revisiting in the 3.0 effort. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1463#issuecomment-281810509:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1463#issuecomment-281810509,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm marking this to be closed in 2 weeks if there aren't any further comments. As far as I can tell, most if not all of these requests have been addressed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810310:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810310,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I'm re-opening this issue, as discussed on the mailing list. I think this is not a quick fix. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/741#issuecomment-281780669:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/741#issuecomment-281780669,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. I've been checking on this particular bug. It seems you've exposed a crash in the residue/chain parser which attempts to recognize residue sequence information in the .mol file when going back to PDB. So the resulting file really only has the initial comment that the PDB file was generated by Open Babel -- but no coordinates. Incidentally, the .mol files won't be read by many visualization files. Old-style MDL molfile v2000 is the most widely supported (e.g., VMD) and has a limitation of 999 atoms and 999 bonds. Many, many PDB files are much larger. If you want a more bullet-proof format, I'd suggest Sybyl .mol2 since it preserves residue information and is also fairly widely supported. In the meantime, I'm checking on the crash in chain perception. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/588#issuecomment-281777797:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/588#issuecomment-281777797,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. If someone wants to implement code to override the C library, please do. That's a better solution. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779365:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779365,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. If there aren't any further comments by the original submitter, I will close this in 2 weeks. For one, there are too many issues in one bug report. These really need to be tracked separately. (For example, PDBXML is something that should be requested in the file format request tracker, not listed as a bug here.). If you can give some specific examples of PDB files that exhibit this behavior, please let us know. As far as molecules with more than 2^16 atoms, that's a limitation in the 2.0.x releases and has been lifted in the 2.1 development betas. * src/base.h, src/atom.h, src/bond.h: Update internal atom; indexing to use an unsigned int, rather than short. Fixes; PR#1556819, caused by large molecules (i.e. >2^16 atoms or bonds). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/591#issuecomment-281777869:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/591#issuecomment-281777869,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. In cases like this, it's extremely helpful to have an example file. However, my guess is that you're using MOPAC 2007? If so, I suggest trying the recent 2.1 beta snapshot (2.1.0b7) which contains a fix for this:; http://sourceforge.net/project/showfiles.php?group_id=40728&package_id=154019&release_id=494609. If you're not using MOPAC 2007, please add an example file to this bug report so we can debug more completely?. Thanks very much!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778401:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778401,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Is this now a bug we can close? Or is this the master bug report for issues with VS2008? In the latter case, I will keep it open until you report success. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781169:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781169,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Is this now fixed? I'm going to mark this as ""pending,"" since I understand that SVN trunk now fixes this. Noel, if it's still a problem, please post a comment as to what needs fixing and we'll reopen the bug. Otherwise, this should close within 2 weeks as fixed. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779658:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779658,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Is this still a bug? I don't have problems saving to CML. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779655:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779655,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Is this still a bug? I think this should have been resolved with the fixes to ReadString and ReadFile. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777736:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777736,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Is this still a bug?. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779251:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779251,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. It's possible, although somewhat unlikely that it's a PPC-only binary. However, the binaries were compiled on PowerPC under Tiger. I'm not sure if libxml2 was Universal on Tiger PPC systems. I will upload a binary package of 2.2.0b5 snapshot which should be completely universal. If you'd like to try that out, I would greatly appreciate knowing if it solves the problem. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780735:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780735,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Judging from the mailing list and the current SVN trunk code, this has been fixed. I'm marking this ""pending"" further comment, otherwise it will close in 2 weeks as fixed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778187:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778187,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Judging from the mailing list, this is now resolved, correct? I'm marking this bug as ""pending"" further comment from Noel or Nick. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/761#issuecomment-281781057:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/761#issuecomment-281781057,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Marcus, this seems like a good request for 3.0, correct?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1452#issuecomment-281810448:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1452#issuecomment-281810448,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. No, SMARTS queries do not support the disconnected '.' operator:; http://openbabel.sourceforge.net/wiki/SMARTS. However, ""went strange and hang Babel"" is clearly a problem. What exactly do you mean by that? Are you using the Windows interface? Can you be a bit more descriptive in terms of what you did (i.e., how big was the file you were using, etc.) and what happened?. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778253:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778253,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. No, this isn't a good MOL2 file. There aren't any atom types. I'm not sure why we don't have a default oxygen type for this kind of behavior, but any native Mol2 file (or one from Open Babel) will have C.ar or C.3, etc. in the final column. This should now be fixed in the 2.1 release branch for 2.1.1, SVN revision 1989 or later. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/654#issuecomment-281779065:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/654#issuecomment-281779065,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Not surprisingly, switching the call depth from 20 to 8 (and eliminating the duplicate calls to CheckAromaticity) creates a *huge* speed improvement. Running on a C80 cage:; recursion depth 20: 3m 13.4s; recursion depth 8: 5.2 s (!!). Looking at the code, this has existed from the original Open Eye code. I don't see the purpose of a 20-atom aromatic cycle. It seems reasonable to set this to something smaller. I'll e-mail the list.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777621:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777621,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. OK, there's not a great way to deal with this -- many people want residue information in the mol2 file. In your case, you want to insure it just has ligands. So there's now a new flag for mol2 format -xl which will just cast out any residue information, e.g. babel babel_test.sdf -xl babel_test.mol2. This is now in the SVN trunk (revision 1890 or later) and I'd be happy to send you a patch. It will obviously also be in the 2.1 release when it comes out shortly. I'm marking this ""pending"" further comment from you. If there isn't any within 2 weeks, this will close automatically as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/625#issuecomment-281778475:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/625#issuecomment-281778475,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. OK, this will now be fixed in SVN -- the BFS will also take a starting atom index. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810913:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810913,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. One solution would be to change the logic which adds the newline filter. Right now, it checks if the input format is XML or binary. I guess that it can also check to see if it's a ""database"" output format (e.g., fastsearch). The downside is that input with ""incorrect"" line endings won't work in the fastsearch format (imagine indexing a set of MDL files with DOS line endings). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777715:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777715,2,"['Log', 'log']","['Logged', 'logic']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Part of the effort to finalize 2.2 is a merger of the CAN and SMI formats for output. The SMI will use the newer (and less buggy) canonical output, but will not assign canonical ordering. This should finally solve this bug. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779017:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779017,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Please file another bug about the Makefile.PL that's a separate issue. If you want to help, please run Valgrind with the tests. I can reproduce this with other computers. What version of SWIG are you using?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780270:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780270,2,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Sorry I didn't follow up to this sooner -- it seemed to be a strange bug and I didn't have time to test it. The bug is not due to protonation. The 2.0.x releases and before have a limit of 2^16 atoms in a molecule, which was lifted in the 2.1 development:. * src/base.h, src/atom.h, src/bond.h: Update internal atom; indexing to use an unsigned int, rather than short. Fixes; PR#1556819, caused by large molecules (i.e. >2^16 atoms or bonds). So if you try any of the 2.1 beta snapshots, you should be fine. I'm marking this as ""pending"" any final comments from you. Otherwise, it will close automatically as fixed within 2 weeks.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/576#issuecomment-281777563:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/576#issuecomment-281777563,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Thanks for the bug report, it was good to know that newline was affecting other formats too. This seems to be fixed with Chris's new lineend.h code. Update to revision 1751 or later. I'm marking this closed, pending further comment. Otherwise, it will close within 2 weeks as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/587#issuecomment-281777777:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/587#issuecomment-281777777,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Thanks for the bug report. This will now be fixed in 2.2.0b7 and future versions!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/681#issuecomment-281779520:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/681#issuecomment-281779520,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Thanks for the heads-up. I've added man pages to the 2.2.0b4 snapshot and these will be in future releases. I'll also make sure this is updated for the new tools in 2.2. Thanks!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/729#issuecomment-281780445:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/729#issuecomment-281780445,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Thanks for the patch! It's now in SVN trunk, revision 2311 or later. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/735#issuecomment-281780540:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/735#issuecomment-281780540,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Thanks for the patch, this is now in the SVN trunk for OB-2.2. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/694#issuecomment-281779770:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/694#issuecomment-281779770,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Thanks for the report! That's now fixed in the SVN trunk for 2.2 (revision 2611 or later). I can send you a patch if you like. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/746#issuecomment-281780777:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/746#issuecomment-281780777,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Thanks for the suggestions! I'm glad to know that obprop is getting some use. This is now fixed in the SVN trunk, revision 1889 and later.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/630#issuecomment-281778587:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/630#issuecomment-281778587,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Thanks so much, this is now going into the SVN trunk for 2.2. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/784#issuecomment-281793296:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/784#issuecomment-281793296,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Thanks to Noel O'Boyle, this should now be fixed -- these formats will not be compiled unless Boost or GCC4 is available. I'm marking this closed pending confirmation from Rajarshi. If no comment is made within 2 weeks, we'll assume it's properly fixed. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780201:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780201,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Thanks to Patrick Spendrin, Christian Ehrlicher and the KDE/Win32 and KDE-Edu folks, The 2.2 version has CMake build scripts which work on UNIX and Windows platforms. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810564:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810564,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Thanks to Tim Vandermeersch for adding PSA, logP, and MR to the code. This is now fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810061:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1410#issuecomment-281810061,2,"['Log', 'log']","['Logged', 'logP']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Thanks to Tim Vandermeersch, conformer searching exists and is robust in the 2.2 SVN trunk. This feature request is marked closed as being fixed. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1448#issuecomment-281810402:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1448#issuecomment-281810402,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Thanks. This is fixed in the SVN trunk. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/763#issuecomment-281781088:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/763#issuecomment-281781088,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. That's strange. I'm attaching the file (since it's easier than copy/paste from this window). The bug also occurs through babel -h. In other words, it's not simply an obmm program problem (nor should it be). It's the call to OBMol::AddHydrogens that seems at fault. It's also not caused by the GPR format or missed atom typing: import from XYZ format and adding hydrogens also fails. File Added: test.gpr. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778185:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778185,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. The ""audit log"" comments are more informative. The 2.1 version gives a quick summary of any warnings, errors, debugging information, etc. This way you can see if there were potential problems during conversion (or ignore if you like). The audit log keeps track of possible chemical transformations during conversion (e.g., creating bonds from a MOPAC file). The segmentation fault is fixed in the current SVN trunk. I'd be glad to give you an updated version or patch if you like. Obviously it should be fixed in 2.1.0 final release, which should come out in a week or three. The partial charges for MOPAC should be parsed correctly. But regular .mol files don't have partial charges as far as I know, so they aren't output. On the other hand, .mol2 files do, so you should seem them there. If not, please file another bug, or e-mail the mailing list. I'm going to mark this one closed as being fixed -- we've solved MOPAC 2007 crashing problems.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/622#issuecomment-281778405,3,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. The 45 degree rule comes from PDB and other files, where multiple atoms appear to indicate possible crystallography errors. I'm open to a broader suggestion of the angle issue... You're certainly correct about the current code. It should remove short bonds, say less than 30 degrees, and then check for long bond issues. What do you think?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/745#issuecomment-281780763:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/745#issuecomment-281780763,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. The bug is actually already fixed in SVN trunk (revision 2329) along with a new test in the aromatic set. http://openbabel.svn.sourceforge.net/viewvc/openbabel?view=rev&revision=2329. Thanks for the bug report and the analysis. It's an important fix. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/742#issuecomment-281780683:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/742#issuecomment-281780683,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. The decision to use ""openbabel-2.0.pc"" was unfortunate, although it did match use from libraries like GNOME, etc. For version 3, we will no doubt use openbabel-3.pc instead. There's little we can fix at this point, aside from adding symlinks. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/642#issuecomment-281778910:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/642#issuecomment-281778910,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. The documentation on this has been *thoroughly* updated. I think the better approach is to use OBRotorRules as this can perform much better typing. So I'm going to mark this closed -- if you're interested in an accurate count of the number of rotatable bonds, see the OB 2.1 documentation which will also suggest ways to generate rotamers. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810458:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1455#issuecomment-281810458,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. The error with the SVN snapshot was unrelated, but I appreciate the freelocale bug report too. This appears to be widespread, so I changed the implementation. Please let me know if the SVN trunk fixes your OB_HASH_BOND problem. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779024:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779024,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. The issue is that the phmodel code isn't run unless you've set AutomaticFormalCharge -- but SMILES have manually-defined formal charges. To make a conservative change, I've enabled this to work only for SMILES for now. This should be fixed in SVN trunk. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779848:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779848,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. The simple cases are fixed in SVN trunk, but the full case is harder. The smallest fragment from above which seems to trigger the bug:; O=c1n(CCCC)c(nc(c21)nn3c2[nH]cc3)=O. Yields; CCCC[N]1=C(=O)C2=C(N=[N]3C=CNC23)N=C1=O. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779286:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779286,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. There is now a Mac binary for 2.2.0b6. Please try this -- if it does not work, please post a comment here. Otherwise I'm marking this bug as fixed, ""Pending"" any clarification from you. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780738:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780738,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. There were some issues with the Sybyl atom type ""Lp"" which have been resolved in SVN (revision 1824 or later). I don't know if this is your problem. Certainly if I run the uncompressed file through Babel, I get 85 molecules converted. So I'd wonder if it's some sort of error in pybel?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/617#issuecomment-281778304:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/617#issuecomment-281778304,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. There's no such thing as a ""c4"" type in Sybyl. However, I do appreciate knowing about the partial charge field in HIN. This is now fixed in the SVN development trunk, and part of the 2.2.0b5 snapshot and future releases. If you're willing to build from source code, I can certainly supply a patch. Thanks very much!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/748#issuecomment-281780814:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/748#issuecomment-281780814,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. These are already preserved via OBPairData, but they do not output in the PDB file yet. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1451#issuecomment-281810439:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1451#issuecomment-281810439,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This appears to work now. I tried running the code and ""print len(mols)"" gave 85. I'm marking this closed. If you still seem to have problems with Pybel, let's create a new bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/617#issuecomment-281778305:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/617#issuecomment-281778305,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This has been fixed -- the Ruby bits are only run if Ruby was found by configure. Use the latest SVN trunk (revision 1627 or later, Dec. 2nd). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/581#issuecomment-281777653:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/581#issuecomment-281777653,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This has been fixed in the SVN trunk based on changes contributed by Steve. Thanks!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/700#issuecomment-281779901:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/700#issuecomment-281779901,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This has been fixed, I'm marking this closed. The current SVN trunk (revision 1800) certainly fixes this and will be incorporated into version 2.1. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/564#issuecomment-281777407:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/564#issuecomment-281777407,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This has now been fixed in the development SVN trunk for 2.1.0b7 (and of course 2.1 in general), as of revision 1838 or later. Thanks to Chris for solving the implicit valence for Si.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/590#issuecomment-281777855:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/590#issuecomment-281777855,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate as Noel mentioned. I'm marking this closed.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/594#issuecomment-281777910:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/594#issuecomment-281777910,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate bug report of 1720529. This bug is fixed in the 2.1.x branch and will be in the 2.1.1 upcoming release. The patch is found here:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/branches/openbabel-2-1-x/src/formats/inchiformat.cpp?r1=1893&r2=1933. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/656#issuecomment-281779089:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/656#issuecomment-281779089,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate of 1272942. I'm closing this one. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1497#issuecomment-281810932:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1497#issuecomment-281810932,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate of PR#1823363 and is fixed in the SVN development code for 2.2. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/753#issuecomment-281780896:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/753#issuecomment-281780896,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate of bug #1663779. I can confirm that it does eventually complete. But yes, the performance when translating XYZ (or other types without bonds) and doing bond order perception can be very slow. (By the way, you can use -as to only get single bonds. This will be much faster and still give you some bonding information. In this particular case, it's mostly a diamondoid carbon cluster, so there aren't any C-C multiple bonds.). I'm marking this ""pending"" further comments, but since it's a duplicate, I'd prefer to see comments on bug #1663779 instead. This is not likely to be fixed in time for 2.1 -- the code needs some improvement in handling such huge ring systems in carbon lattices. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/621#issuecomment-281778380:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/621#issuecomment-281778380,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate of the file format request PR#1764738; http://sourceforge.net/tracker/index.php?func=detail&aid=1764738&group_id=40728&atid=447448. Since this really belongs in format requests, I'm marking this closed as a duplicate. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1446#issuecomment-281810376:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1446#issuecomment-281810376,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is a duplicate report and has been fixed in the 2.1 SVN code. The 2.1.1 release will come out shortly. In the meantime, I suggest trying the 2.1.1 snapshot:. http://sourceforge.net/project/showfiles.php?group_id=40728&package_id=154019&release_id=519286. I can confirm that these SMILES translate perfectly in the 2.1.1 development code. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779119:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779119,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is a known bug in the snapshot which will be fixed in the 2.2.0b3 snapshot. Thanks very much,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/719#issuecomment-281780240:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/719#issuecomment-281780240,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is a pretty old release, but many of the Mac packages will check to see if you already have Open Babel installed. In your case, you did. The Mac packages also don't include source, so I suggest either downloading the tarball or looking at the web interface: http://openbabel.svn.sourceforge.net/. I'm marking this closed as ""Work for Me."". Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/722#issuecomment-281780301:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/722#issuecomment-281780301,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is a strange bug. If I run the SMILES -> SMILES conversion:. echo ""C[Si](C)C"" | tools/babel -ismi -osmi; C[Si](C)C. If I add hydrogens:; echo ""C[Si](C)C"" | tools/babel -h -ismi -osmi; [CH3][Si]([CH3])[CH3]. We'll have to carefully check the implicit valence for Si. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/741#issuecomment-281780665:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/741#issuecomment-281780665,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is a strange case -- one of the displacement vectors is <0, 0 , 0>. I'm decreasing the priority on this one. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/757#issuecomment-281780992:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/757#issuecomment-281780992,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is actually a duplicate of PR#1663779. We call SSSR too frequently, and these calls are extremely slow and costly on fullerene-type structures. Ring and aromaticity perception need to avoid SSSR. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/697#issuecomment-281779827:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/697#issuecomment-281779827,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is actually a duplicate of PR#1784204. It is fixed in SVN trunk, revision 2576 or later. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/759#issuecomment-281781023:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/759#issuecomment-281781023,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is currently supported via the descriptor framework in 2.2. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1447#issuecomment-281810380:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1447#issuecomment-281810380,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is currently underway, thanks to Tim Vandermeersch in the SVN trunk for 2.1. The tools/obgen program doesn't solve everything, but it does include a fair amount of linear and small ring compounds. Tim has also added code for MM2 molecular mechanics evaluation. See SVN revision e.g., 1682 or later.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809767:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1392#issuecomment-281809767,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed -- it's an easy patch. Either update to revision 1747 or later on the SVN trunk (i.e., 2.1 development), or use the patch here:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/trunk/data/types.txt?r1=1077&r2=1747&view=patch. I'm marking this closed, pending further comment.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/599#issuecomment-281778003:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/599#issuecomment-281778003,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is fixed in SVN revision 2500 or later for 2.2.0b6. Thanks!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/752#issuecomment-281780881:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/752#issuecomment-281780881,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is fixed in SVN trunk (revision 2286 or later). Thanks very much!. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/731#issuecomment-281780477:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/731#issuecomment-281780477,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is fixed in SVN trunk -- which uses the canonical SMILES output for SMILES. I'm marking this closed pending further comment from Rajarshi. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779399:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779399,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed in SVN trunk, revision 2576 or later. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/671#issuecomment-281779335:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/671#issuecomment-281779335,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed in the 2.1 branch and will be included in the 2.1.1 release -- a new ""-o"" flag was added to obminimize. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1483#issuecomment-281810700:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1483#issuecomment-281810700,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is fixed in the latest SVN trunk. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/721#issuecomment-281780286:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/721#issuecomment-281780286,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed in the latest SVN. You evidently were trying to compile from the 2007-11-15 snapshot, which did not include builder.h. (This is, in fact, the very definition of snapshots -- they essentially are test releases to make sure the release process works.). The next snapshot, on 2007-12-01 will include builder.h. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/696#issuecomment-281779820:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/696#issuecomment-281779820,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is fixed now. . I'm marking this pending further comment from Chris. Otherwise, it will close as being fixed in 2 weeks automatically.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778024:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/600#issuecomment-281778024,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is more of a feature suggestion... Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1493#issuecomment-281810854:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1493#issuecomment-281810854,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is now be fixed in the current SVN trunk (revision 1867 or later) for 2.1.0b7 and later releases. It certainly takes a *long* time in some cases to convert these files, since the molecules are huge. But it does complete. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/588#issuecomment-281777798:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/588#issuecomment-281777798,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is now duplicated by #1617838. Since that has a bit more information, I'm closing this as a duplicate. Please file any comments, debugging info, etc. in that bug entry. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777369:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777369,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in SVN revision 2573 or later. As suggested by Chris, there is a parameter to control whether newlines are turned into spaces. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/766#issuecomment-281781128:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/766#issuecomment-281781128,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in SVN trunk, set for OB-2.2.0b6 and later. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/665#issuecomment-281779274:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/665#issuecomment-281779274,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the 2.1 branch and will be included in the upcoming 2.1.1 release. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1482#issuecomment-281810698:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1482#issuecomment-281810698,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the 2.1 branch for 2.1.1, as of SVN revision 1997 or later. I'm marking this ""pending"" any further comment from Noel. Unless he comments that the bug still exists, this report will be auto-closed as being fixed in 14 days. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778897:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778897,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the 2.2 SVN trunk and will be part of the development documentation when we re-generate it. Thanks!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/692#issuecomment-281779718:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/692#issuecomment-281779718,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the SVN trunk (revision 2329 or later). A new molecule (c1[cH][cH]ccc1) is being added to the aromatic test to ensure this bug does not regress. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/740#issuecomment-281780661:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/740#issuecomment-281780661,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the SVN trunk for OB-2.2. Thanks!; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/689#issuecomment-281779682:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/689#issuecomment-281779682,2,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the Subversion 2.1 branch, revision 1904 or later. Thanks for the report!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/632#issuecomment-281778611:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/632#issuecomment-281778611,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is now fixed in the development SVN trunk, 1837 or later. The fix will go into 2.1.0b7 and of course 2.1. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/510#issuecomment-281776340:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/510#issuecomment-281776340,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is now possible using SetCurrentConformer. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1494#issuecomment-281810874:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1494#issuecomment-281810874,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This is present in pretty much every quantum chemistry file format as well: GAMESS, MPQC, MOPAC... I believe I fixed all of them by adding in a test if the molecule has 0 atoms -- in these formats, that's invalid, so the format will return false. This is now fixed in the 2.1 branch, as of revision 1999 or later and will appear in the 2.1.1 release shortly. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/651#issuecomment-281779035:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/651#issuecomment-281779035,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is strange. It doesn't even call MDLFormat::ReadMolecule() in this case. So I'm not sure what part of OBConversion is getting called. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/765#issuecomment-281781117:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/765#issuecomment-281781117,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This is supported via the descriptor framework in 2.2. I'm marking this closed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1445#issuecomment-281810342:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1445#issuecomment-281810342,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This isn't a bug, the code is working as designed. The flag indicates whether or not the total charge has been explicitly set. This draws a distinction between a total charge that Open Babel perceives, which assumes that all the formal charges are set correctly (not always true) -- and a total charge set by the user or by code (e.g., some file formats). If you'd like to discuss the behavior, the best place is the openbabel-devel mailing list. As for this bug report, I'm closing it as ""Works for Me."". Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/714#issuecomment-281780142:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/714#issuecomment-281780142,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This isn't a bug. The flag is used *ONLY* if the total charge is set explicitly. We need to separate between a total charge we calculate -- which might be correct if all the atomic formal charges are set correctly, and a total charge which is defined by the user or the code (e.g., some file formats). So the code is correct as-is. If you'd like to discuss this, the proper place is on the openbabel-devel mailing list. I'm marking this bug closed with a resolution of ""Works for Me.""; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/713#issuecomment-281780134:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/713#issuecomment-281780134,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This looks OK to be from trunk. I'm marking this closed pending further comment from the submitter -- the aromaticity looks good as assigned in Avogadro right now. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/703#issuecomment-281779935:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/703#issuecomment-281779935,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This looks a bit more general, actually. I'm attaching two more 3D chiral files which also appear to drop chiral info. SMILES (0D) and 2D files appear to retain chirality, but does the canonical SMILES code drop 3D chiral information?. -Geoff; File Added: A.gpr. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778706:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778706,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This now builds:; http://koji.fedoraproject.org/koji/getfile?taskID=693470&name=build.log. I'm marking this particular bug (building) closed. Obviously, if there are further problems with the Fedora builds, we should address those in other bug report threads. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780581:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780581,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This now does not crash, although CDXML still does not support reaction conversion. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/691#issuecomment-281779707:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/691#issuecomment-281779707,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This seems to be fixed with recent changes. I'm going to mark this particular bug closed. If more InChI stereo bugs crop up, we should create new bugs and fix them as needed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/542#issuecomment-281776914:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/542#issuecomment-281776914,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should be fixed in the SVN trunk, revision 1891. I'm marking this closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/618#issuecomment-281778311:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/618#issuecomment-281778311,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should be fixed in the current SVN trunk, revision 1829 or later. I'm marking this 'pending' any further comments by Craig. Otherwise, it will close as being fixed in 2 weeks automatically. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/604#issuecomment-281778089:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/604#issuecomment-281778089,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should be solved at this point. Please try the SVN trunk, revision 1765 or later. The change sets the recursion depth cutoff to 14, based on discussion with Henry Rzepa. I'm marking this as fixed. Without further comment in the next two weeks, it will be automatically closed.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777622:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777622,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should be solved by PR#2557 with internal locale settings in Open Babel. I'm marking this bug as fixed, pending further comment. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779359:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779359,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This should now be available in SVN trunk. I'm marking this pending approval commentary from Noel. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810908:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810908,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in SVN trunk revision 2509 or later. Can you confirm?. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780264:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780264,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in SVN trunk thanks to Tim. I'm marking this ""pending"" further comment. If you can, please try the SVN trunk command-line and let us know the status of this bug. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779845:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/698#issuecomment-281779845,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in SVN trunk. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/640#issuecomment-281778903:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/640#issuecomment-281778903,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the 2.1 SVN branch, as of revision 1981 or later. The problem is that AtomIsChiral assumed that all atoms (including 3D) should have wedge/hash bond flags. This is not true for 3D files, of course. The revised code simply adds a test if the atom is part of a 3D molecule -- in which case it does not need to check bonds to the atom for wedge/hash flags. The code should be correct, but I'm marking this pending any further comment from Craig. If no comment is made within 14 days, this bug will close as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708,3,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the SVN code -- the chemdrawcdx code now returns false if it's called and we're at the end of the file. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780038:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780038,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the SVN trunk, revision 1863 or later. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777738:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777738,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the development code (SVN trunk, revision 2578 or later) and will be in both 2.2.0b7 and 2.2.0. Thanks. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/680#issuecomment-281779505:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/680#issuecomment-281779505,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should now work in the SVN trunk (which will become 2.2). If you do not have access to this, I can send you a snapshot. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779021:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779021,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This should now, in fact, be fixed in SVN trunk, revision 2577 or later (I hope). I'm a little worried because it seems like Noel's previous commit did not ""stick."". Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781281:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/772#issuecomment-281781281,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This took some time to diagnose. It appears that the ConnectTheDots() was deleting existing bonds. I've modified the 2.2 trunk, which appears to fix this problem. I'm marking this fixed pending further comments. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/685#issuecomment-281779599:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/685#issuecomment-281779599,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This was discussed on the mailing list. Problem 1 is fixed, and Item 2 isn't a bug. I'm marking this closed as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/709#issuecomment-281780061:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/709#issuecomment-281780061,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This was fixed thanks to the contributed patch, but never closed. Use SVN trunk, revision 1583 or later). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/577#issuecomment-281777573:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/577#issuecomment-281777573,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This won't be fixed. These methods simply create pointers -- they're convenience functions. If you want more bookkeeping done, use NewAtom() or NewBond() or NewResidue() instead. I'm updating the documentation accordingly and perhaps we should deprecated these methods. But they should not perform anything additional. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778223:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778223,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. This works for me -- I get ""C"" as the output from ""[CH4]"". Can you get me some sort of crash backtrace?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793121:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/779#issuecomment-281793121,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. This works just fine with the 2.2 development code in SVN. I would be happy to send you a source snapshot if you wish. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780651:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/739#issuecomment-281780651,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Tim could you look at this? I think the suggestion is a good one -- provide physiological protonation for the amino acids into phmodel.txt. If you need suggestions about how to use phmodel, please let me know. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779327:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/670#issuecomment-281779327,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Unlike Craig, it looks to me like the problem is in typer.cpp. Using GDB, I see a long track of calls to OBAromaticTyper::TraverseCycle(); (specifically line 460). This starts out with a recursion depth of 18, which is why it takes a long time. The problem seems to be from the call to CheckAromaticity with a depth of 20. (from typer.cpp line 421). I'm not sure why there's a need for the larger recursion depth. There's a previous call to check for 5-6 membered aromatic rings. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777618:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/579#issuecomment-281777618,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Well, I'm going to mark this one closed. We have fixed the initial set of bugs. Since this bug report, we've fixed a variety of other SMILES bugs which may cover your other set. In your last update, you've promised to test 128 nasty stereo SMILES -- if you'd either send me the list of SMILES or let me e-mail you a 2.1 beta from the current SVN trunk, we can validate those. If there are bugs in your nasty set, let's open a new bug for those. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777267:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777267,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Well, I've fixed *this* bug, but the patch creates other problems. So it'll take a bit more work to fix completely. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779287:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779287,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. What's the bug here? As Igor indicated, this works in 2.1 or later. It's not worth fixing this in 2.0.x. I'm surprised that the wedge/hash is switched in SDF output. Is this true in 2.2 as well?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779015:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779015,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. While I agree that consistency is a good aim, I'm going to move this to ""Feature Requests"" rather than an explicit bug. I believe the difference is simply that the two files came from different sources and Chris attempted to retain the formatting for merging in future revisions. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1500#issuecomment-281810941:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1500#issuecomment-281810941,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Without the original file, this is absolutely impossible to debug. I'm marking this ""pending"" further comment from the original submitter. If none is made in the next 2 weeks, this issue will close. (There's already been over a week since the original submission and my reply.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/616#issuecomment-281778272:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/616#issuecomment-281778272,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: NO. Works for me with SVN trunk. Can you try with a recent snapshot?. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/781#issuecomment-281793167:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/781#issuecomment-281793167,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Yes, this is fixed in the 2.2 code. I'm marking this closed. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/785#issuecomment-281793321:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/785#issuecomment-281793321,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Yes, you're correct -- the default should be ""at least one,"" according to the Daylight guide. This is now fixed in the SVN, revision 1881 or later. I'd be glad to send you a patch if you like. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/626#issuecomment-281778495:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/626#issuecomment-281778495,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: NO. Your report doesn't help us diagnose the problem much. I can guess that you're trying to install from source, and you're using autoconf.; * What platform are you using?; * What compiler are you using?; * What exactly is the error you receive?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/786#issuecomment-281793345:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/786#issuecomment-281793345,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Actually the Makefile *is* removed prior to release -- the scripts/ Makefile runs a ""distclean,"" so the Ruby makefile is, indeed gone. False alarm,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/634#issuecomment-281778684:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/634#issuecomment-281778684,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Actually the current SVN trunk (e.g., r1682) has a working Java wrapper, although it currently cannot successfully load the file format objects on Linux. Some work will be needed to make sure the dlopen() is performed with RTLD_GLOBAL set. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810162:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1429#issuecomment-281810162,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. Chris later went on to implement this in the 2.2 descriptor / filter framework. This is now closed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810078:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1416#issuecomment-281810078,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Closing this. (Tim, you can certainly do this too -- just make sure to set the appropriate options under ""Status"" and ""Resolution.""). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/623#issuecomment-281778419:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/623#issuecomment-281778419,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Craig fixed this himself, although he evidently forgot to close the bug report. This is fixed in the current SVN trunk, revision 1808 or later. For the reported bug, -ocan now supplies:; O/N=C(\C)/C(=N\O)\C NSC 9. Which is, in fact, correct by my reckoning. (Neither Daylight depict or ChemDraw accepts this SMILES.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/605#issuecomment-281778101:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/605#issuecomment-281778101,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. File Added: 9.pdb. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778326:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778326,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. File Added: log2.txt. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778346:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778346,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Fixed, as of revision 1807. This includes some code to correct for a variety of mis-typed Sybyl atom types, particularly from the MMFF94 file. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/611#issuecomment-281778192:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/611#issuecomment-281778192,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. I'm attaching the log here. Everything looks OK up until around step 45. Then grad2 and g2g2 blows up. (Sorry, I was wrong about the cause -- your log made me more paranoid.). So I'm left with a few possible situations:; * Your version isn't the same as SVN (e.g., you still haven't committed test/logp_psa.cpp) Not a big deal.; * We have some subtle floating-point issue between OS X and Linux? Yuck.; * Some unknown force is causing the gradient to explode on my machine. I'm certainly confused.; File Added: log2.txt. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778337:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778337,4,"['Log', 'log', 'test']","['Logged', 'log', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: YES. I'm closing this -- it's possible to do, but not high on anyone's interest list when there are actual builder programs like Avogadro with copy/paste, etc. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1430#issuecomment-281810165:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1430#issuecomment-281810165,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. I'm not actually referring to the code in math/matrix3x3.cpp. This is already quite fast and as you said, unlikely to improve too much. I'm referring to matrix.cpp, which is used for dynamic-sized matrix math in chiral.cpp, for example:; bool invert_matrix(std::vector<std::vector<double> > &mat, double &det); bool invert_matrix_f(double *mat, double &det, int rows, int cols); bool invert_matrix_ff(double **mat, double &det, int rows, int cols). I don't actually know how much using BLAS will help here, as you say. But in some larger molecules, the chiral routines actually take a significant amount of time. There also has been requests for dynamic-sized matrix routines (including inversion) for force field optimization and vibrational matrices, which can be fairly large (e.g., ~3N where N is the number of atoms). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810738:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810738,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. I'm not concerned with ""correctly minimizing."" I'm looking at the strange behavior between step 45 and 46. It seems to pick up OK after that point. Yes, I'm using the current SVN and default options to obminimize:. tools/obminimize 9.gpr; tools/obminimize -n 47 9.gpr. In step 46, the g1g1 of atom 9 is small (0.025), so g2g1 explodes to 13.5, while everything else is around 1 or less. I'm wondering if we need a trust radius on the line search -- i.e., never make such a huge step like that. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778330:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778330,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Interesting. Further debugging implies that this is a problem with Mol2 and XML formats. SDF, PDB, XYZ... these formats work correctly. So perhaps it's an issue with seekg(). Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1480#issuecomment-281810665:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1480#issuecomment-281810665,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. Isn't it possible to have some solution in Pybel itself -- a closefile method?. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778874:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778874,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Isotopes are now handled correctly.; I don't agree with the CH4 expectation -- there are 4 explicit hydrogen atoms, so there should be 4 matches. OB is correct here. One remaining issue.; False 3 4 [!c] c1c(C)c(N)c[nH]1. Again, the H is explicit, so it matches here. This should be resolved now in SVN trunk, so I'm marking this closed pending further comment. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/771#issuecomment-281781263:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/771#issuecomment-281781263,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. It turns out that this isn't a significant performance boost. We will certainly revisit plugins with 3.0, but I'm closing this request, because it doesn't seem to be a significant issue. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810181:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810181,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Linking seems to work now. In the future, I suggest killing all object files with ""make clean; make"". -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/631#issuecomment-281778593:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/631#issuecomment-281778593,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. Perfect! Thanks for the suggestion. Revision 1868 seems to fix everything. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778349:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/619#issuecomment-281778349,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. Point group symmetry has now been added to the SVN trunk for 2.2. Space group code has also been added (although not space group recognition). Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1409#issuecomment-281810044:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1409#issuecomment-281810044,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Thanks in large part to Tim Vandermeersch, this is now fixed in the SVN trunk (revision 2271 or later). The force fields themselves are more error tolerant, the gradient calculations are more error-proof, and the optimizer itself is bullet-proof. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/682#issuecomment-281779539:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/682#issuecomment-281779539,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. The code isn't pretty, but it does copy OBChiralData now. (I'd try a subroutine to clean things up, but it would need to be passed a lot of parameters. Unfortunately from OBGenericData, it's impossible to get a 'parent.'). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/620#issuecomment-281778367:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/620#issuecomment-281778367,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. The easiest fix, actually is to change the code. A BFS search which is already done to determine ring membership can also return the smallest ring size of an atom or bond. This is enough for PerceiveBondOrders (i.e., it doesn't need the full, slow FindSSSR). It's also enough for aromaticity detection. This is unlikely to be fixed before the upcoming 2.1 release.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/603#issuecomment-281778076:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/603#issuecomment-281778076,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This appears to have been fixed with the latest SVN trunk and the new OBFFLog() function. I'm marking this ""pending"" further comments (e.g., from Tim). Otherwise it will close automatically in 2 weeks as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/606#issuecomment-281778105:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/606#issuecomment-281778105,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. This bug is fixed on the SVN trunk. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/649#issuecomment-281779009:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/649#issuecomment-281779009,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. This has already been accomplished by Chris Morley for the 2.2 code. I'm marking this closed. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1458#issuecomment-281810486:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1458#issuecomment-281810486,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This has been fixed in the SVN trunk -- the new code checks to make sure the energy is converged below a certain threshold (e.g., 1e-6 as the default) and will not take any further steps. I'm marking this as ""pending"" any further comment (e.g., from Tim). If not, it will automatically close in 2 weeks as fixed. -Geoff . Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/609#issuecomment-281778177:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/609#issuecomment-281778177,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This has been fixed in the current SVN trunk, including inclusion of the new residue.cpp test. The problem was reusing bitmasks for storing visit information. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/571#issuecomment-281777498:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/571#issuecomment-281777498,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This has been fixed, at least for random.pdb and the selection of PDB files here. It would be a good idea to run the PDB parser over 400-500 random PDB entries and make sure the atom types come back correctly.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777486:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777486,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. This is fixed in SVN revision 2497 or later. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/734#issuecomment-281780522:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/734#issuecomment-281780522,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. This is fixed in the SVN trunk. (I can't remember which change fixed this particular bug.). Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777490:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777490,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. This is fixed in the current SVN trunk.; -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1467#issuecomment-281810535:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1467#issuecomment-281810535,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This is fixed in the latest SVN revision. Update to r 1758 or later. The force field code is improving steadily, thanks to Tim Vandermeersch. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/598#issuecomment-281777988:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/598#issuecomment-281777988,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This is largely addressed at this point. The current SVN trunk now has some force field evaluations and plugins (as Chris suggested). The code will likely continue to evolve, but I'm marking this closed since the request is certainly possible with e.g., 2.1.0b5 or later.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810645:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1477#issuecomment-281810645,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This is more of a feature request. Since the obgen tool won't be integrated into 2.1 (it's not ready yet), it's silly to complain about ""bugs"" that are simply unimplemented. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/572#issuecomment-281777511:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/572#issuecomment-281777511,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This is now fixed in the SVN branch for 2.1, revision 1977 or later. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/638#issuecomment-281778892:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/638#issuecomment-281778892,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This is now fixed. As far as I can tell, the Cmake files are completely up-to-date in the SVN trunk. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/730#issuecomment-281780468:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/730#issuecomment-281780468,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. This is now fixed. The partial charges are tagged as coming from Gasteiger or Mulliken. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1435#issuecomment-281810191:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1435#issuecomment-281810191,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This is now incorporated into SVN trunk, so I am closing this feature request. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1496#issuecomment-281810930:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1496#issuecomment-281810930,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. This is really a feature request. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1462#issuecomment-281810499:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1462#issuecomment-281810499,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This is, in fact, an issue with seekg. The zipstream code doesn't properly handle seekg -- the bug also exists in 2.0.x. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1480#issuecomment-281810666:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1480#issuecomment-281810666,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. This should be fixed in SVN trunk. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/769#issuecomment-281781211:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/769#issuecomment-281781211,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This should now be fixed in SVN trunk, revision 2637 or later. Noel, can you confirm the fix?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/782#issuecomment-281793250:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/782#issuecomment-281793250,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This should now be fixed in the SVN 2.1 branch, revision 1980 or later. Basically the code crashed because it attempted to add atoms (hydrogens) while iterating through all atoms. Instead, the revision creates a list of atoms to modify, then loops through that subset later -- safer technique than iterating and modifying the underlying data at the same time. I'm assigning this to Craig to review -- testing doesn't show any obvious changes in the canonical SMILES output, but I don't have as comprehensive a database. If no comments are posted by Craig within 14 days, this bug will close as being fixed. Craig, if there's some red flag, please post here. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/637#issuecomment-281778879:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/637#issuecomment-281778879,2,"['Log', 'test']","['Logged', 'testing']"
Testability,"Logged In: YES ; user_id=21420; Originator: YES. This should now be fixed, as of SVN revision 1787 and later. The bug was largely discovered during development and debugging of Avogadro. I'm marking this ""pending"" in case there's need to comment and re-open the bug. Otherwise it will close in 2 weeks as fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/608#issuecomment-281778128:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/608#issuecomment-281778128,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=21420; Originator: YES. This turned out to be a duplicate of PR#1727333 and is fixed in SVN trunk and 2.1 branch. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/645#issuecomment-281778949:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/645#issuecomment-281778949,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. Well, the patch in SVN trunk, revision 1880 seems to solve this. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/624#issuecomment-281778439:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/624#issuecomment-281778439,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=21420; Originator: YES. While this isn't in obgrep, filter support is in babel (in the 2.2 snapshots). This is a duplicate of the request for a title filter, which is now implemented thanks to Chris Morley. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1471#issuecomment-281810582:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1471#issuecomment-281810582,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=25678; Originator: YES. OK, thioamides are apparently N.am too... or used by at least one other program too... :(. I'm happy if this stays closed as invalid. Original comment by: @egonw",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/807#issuecomment-281793652:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/807#issuecomment-281793652,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=25678; Originator: YES. Sorry, for not browsing the list!. This was on Linux. Original comment by: @egonw",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/805#issuecomment-281793614:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/805#issuecomment-281793614,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=282988; Originator: NO. Using babel 2.1.1 (self compiled on Mac), a simple PDB with a Mn atom gets converted to a Xx atom in an XYZ file. Also, if a Fe atom is used, it gets converted to a F atom in translation. I can send a test file if needed. Original comment by: @atenderholt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777487:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777487,3,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=28668; Originator: YES. I attach also the audit log. File Added: audit_log. Original comment by: @Pansanel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779314:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779314,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=28668; Originator: YES. It works also with v2.0.2 on other OS as Debian Etch (I'm using native OB 2.0.2 from Debian Etch).; I've compiled OB 2.1.1 on Debian and it works fine. I've submitted a bug report to Debian. I'm sorry, I did not have time to look in more details this bug, as I wanted to release Mychem today. It would be fine if someone using Debian Etch could test the file conversion. Original comment by: @Pansanel",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779318:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779318,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=349408. Yes, doing. babel test.sdf.gz test.smi . works fine. Original comment by: @rajarshi",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777367:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/562#issuecomment-281777367,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=349408. You're correct in that the code is probably stopping when it; reaches a molecule it can't parse - if I print out the count; of heavy atoms, I only get values for 30 molecules. I tried the code you suggested and it runs to completion.; Surprisingly, it did not hang on the 49th molecule. Also in my initial report I mentioned that there were 6824; total SMILES - that should be 6284. So it is failing on 16; SMILES; I've listed the offending SMILES below:. b1ccccc1; b1occc1; b1ooccc1; c1cc[bi]cc1; c1ccc(cc1)c5c(c2ccccc2)c(c3ccccc3)[si](c5(c4ccccc4))(C)C; c1ccc(cc1)c6c(c2ccccc2)c(c3ccccc3)[si](c4ccccc4)(c6(c5ccccc5))C; c1ccc(cc1)c7c(c2ccccc2)c(c3ccccc3)[si](c4ccccc4)(c5ccccc5)c7(c6ccccc6); c1ccc(cc1)[ge]2(cccc2)(c3ccccc3)(c4ccccc4)(c5ccccc5)(c6ccccc6)c7ccccc7; c1cc[ge]cc1; c1cc[sb](cc1)(C)(C)C; c1cc[si]c1; c1cc[sn]cc1; c1cc[te]c1; NCCCC[si]1cccc1; o1o[si]1; [Rf]. I realize that some of them are probably chemically wrong (I; don't think Si or Sn are aromatic) but it would be useful if; the molecule was constructed and some sort of warning was; available/produced. Original comment by: @rajarshi",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777389:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777389,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=349408; Originator: YES. File Added: melanocortin-2007-17-16.cdx. Original comment by: @rajarshi,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779389:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779389,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=349408; Originator: YES. This works for me - the bug can be closed. Original comment by: @rajarshi,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779400:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779400,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=542993; Originator: YES. I will try with 2.1.* and get back to you.; As for the input file, I use what's in test/cmltest/. Original comment by: ajacoutot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777882:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777882,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=542993; Originator: YES. Just for the record, I use gcc version 3.3.5 (propolice). Original comment by: ajacoutot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777885:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777885,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=542993; Originator: YES. Seems reasonnable, thanks. Original comment by: ajacoutot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777891:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777891,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=542993; Originator: YES. Well, I can't compile the latest snapshot :(. c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldghemical.lo -MD -MP -MF .deps/forcefieldghemical.Tpo -c forcefieldghemical.cpp -fPIC -DPIC -o .libs/forcefieldghemical.o; c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldghemical.lo -MD -MP -MF .deps/forcefieldghemical.Tpo -c forcefieldghemical.cpp -o forcefieldghemical.o >/dev/null 2>&1; if /usr/local/bin/libtool --tag=CXX --mode=compile c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldmmff94.lo -MD -MP -MF "".deps/forcefieldmmff94.Tpo"" -c -o forcefieldmmff94.lo forcefieldmmff94.cpp; then mv -f "".deps/forcefieldmmff94.Tpo"" "".deps/forcefieldmmff94.Plo""; else rm -f "".deps/forcefieldmmff94.Tpo""; exit 1; fi; c++ -DHAVE_CONFIG_H -I. -I. -I../../src -I../../include -I/usr/local/include -g -MT forcefieldmmff94.lo -MD -MP -MF .deps/forcefieldmmff94.Tpo -c forcefieldmmff94.cpp -fPIC -DPIC -o .libs/forcefieldmmff94.o; forcefieldmmff94.cpp: In member function `bool; OpenBabel::OBForceFieldMMFF94::SetupCalculations()':; forcefieldmmff94.cpp:1365: error: ISO C++ says that `double pow(double, double); ' and `float std::pow(float, float)' are ambiguous even though the worst; conversion for the former is better than the worst conversion for the latter; forcefieldmmff94.cpp:1366: error: ISO C++ says that `double pow(double, double); ' and `float std::pow(float, float)' are ambiguous even though the worst; conversion for the former is better than the worst conversion for the latter; *** Error code 1. Original comment by: ajacoutot",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777883:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777883,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=542993; Originator: YES. openbabel-2.1.0b4 compiiles and work fine.; It does not core dump anymore :); But this is beta software and I'd rather use the latest stable release so I need to know where this error is coming from. Original comment by: ajacoutot,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777886:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777886,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=54358. Hi Tharun, . I'm also not familiar with the standards of the OpenBabel; system. I'm just following the discussions relevant for the; CDK project. ; So I will not be able to help with respect to OpenBabel; peculiarities. ; But if you need help with the algorithm itself, I can at; least explain in detail what I did for CDK. Cheers, Chris. Original comment by: steinbeck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809849:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809849,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=54358. Is anyone aware of the publications on which this extension; could be based? Well-informed circles expressed to me their; well-founded opinion that only very little has been; published on the Gasteiger PI charges and that this little; documentation is not sufficient to repeat the work. Original comment by: steinbeck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1431#issuecomment-281810166:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1431#issuecomment-281810166,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=54358. Yes, the algorithm is simple indeed. ; Note, however, that the CDK fingerprinter implementation is; not complete (in the sense of not fully complying with the; daylight description) and has a few bugs. On the other hand,; we use it for substructure search prefiltering in our free; NMR database (http://www.nmrshiftdb.org) and it works nicely. ; If someone is going to implement the fingerprint based on; the CDK code, please get in touch with me, so that we can; plan a better, improved, debugged version for both OpenBabel; and CDK. Cheers, . Christoph Steinbeck (who implemented the fingerprinter in CDK). Original comment by: steinbeck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809846:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809846,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=573515; Originator: NO. Here are the numbers from readelf (.toc1 size, all numbers in hexadecimal, the maximum is 0x10000=65536 bytes = 0x2000=8192 entries per compilation unit):; * Python:; obcore: 8a68; obconversion: 2be8; obtemplate: 2ad0; (This is only a total of 0xe120? I also applied your SWIG flag optimizations for Python, so maybe that's where the bytes were saved? In any case, we're far away from the maximum now for each of those.); * Perl: eb50; (This one is getting dangerously close to the maximum, though this is with the old SWIG flags from beta 5.); * Ruby: c170. We aren't currently building the Java and C# bindings, so I don't have numbers for those. Original comment by: kevinkofler",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780574:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780574,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=573515; Originator: NO. I can't speak for Debian and their m68k timeout problem, but ppc64 builds fine now (I backported the patch from SVN to b5):; http://koji.fedoraproject.org/koji/buildinfo?buildID=51921. Original comment by: kevinkofler",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780569:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780569,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=573515; Originator: NO. Unfortunately no, our build system will only let us know if we exceed the size of that .toc1 table, and we can't get the object files out of our build system. Maybe I can get some relevant information by using tools like readelf on the .so files, but I'm not sure. Original comment by: kevinkofler",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780572:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780572,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=573515; Originator: NO. Would putting the templates into both obcore and obconversion rather than in its own obtemplates help? The obcore/obconversion split should be enough to keep it below the limit. Original comment by: kevinkofler,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780576:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780576,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=598602. I don't know if there may be some other problem, but I usually need to ; do:; sudo make install; to give the install permission to put files where they belong. HTH, ; Tim . Original comment by: tmgregg",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/434#issuecomment-281774963:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/434#issuecomment-281774963,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=677371; Originator: YES. Cygwin; gcc-3.4.4 with libtool-2.2; no error, just an immediate segfault. Could you give me some guidance into how to diagnose the problem?. Original comment by: yselkowitz",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/786#issuecomment-281793349:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/786#issuecomment-281793349,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=684210. >Because of KDE's huge size I guess all scripts OB2 would ; >need are already done. That was supposed to be: Because KDE is now 100% converted ; and works I am sure that every issue OB2.1 has is now ; solved (because KDE triggered the same issue in one of its ; 5 millions lines of code ;-). Original comment by: @cniehaus,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810559:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810559,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=684210. My code is... void KalziumGLWidget::prepareMoleculeData(); {; // translate the molecule so that center has coords ; 0,0,0; m_molecule->Center();. m_molecule is:; /**; * The molecule which is displayed; */; OpenBabel::OBMol* m_molecule;. This worked in OB2.0.1 and does not work in 2.1.x. The std::map<> I am talking about is here:. OBBase* OBMol::DoTransformations(const ; std::map<std::string, std::string>* pOptions). I never used the DoTransformations code, as I said: My ; code worked in OB 2.0, but Chris mentioned it. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777310:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777310,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=684210. Not sure why integration would be easier because OpenBabel ; will just but a couple of object-files and header for any ; other app, including KDE.; CMake is a Makefile-generator (or project-file-generator ; for example for KDevelop or MS-Visual (or however the ; MS-IDE is called)). But it is much *easier* to write CMake ; files compared to autotools. For example, you only need ; one language to learn (cmake) and not four. Everything is ; in one central file. Even if you have no clue about cmake ; the syntax is very easy to understand (unlike the cryptic ; m4/.in.in/Makefile.am-stuff which I never understood). And ; CMake is much faster. Not sure if that is important for ; OpenBabel, but the equivalent of ""make -f Makefile.am ; && ./configure"" takes like 10 seconds for kdelibs while ; the autotool-command took minutes!. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=684210. Well, I am all for this change but please make it optional ; first because there are always issues when you switch the ; buildsystem. The Scribus folks also switched to CMake and ; did the transition in something like a weekend!; CMake will release 2.4.3 which would be a very good ; release to start porting. For KDE Alex Neundorf wrote a ; Makefile.am-2-CMake script which does about 90% of the ; conversion. ; Because of KDE's huge size I guess all scripts OB2 would ; need are already done. And of course, because KDE is a ; major package you can be sure that the next round of ; distributions will all contain CMake 2.4.x (KDE requires ; 2.4.1 right now, but soon 2.4.3).; But hey, CMake is contributing binaries for Linux, Windows ; and Mac, so that shouldn't be a big problem anyway. ; CMake's documentation is exellent and the developers are ; very very helpfull. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810558:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810558,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=684210. Well, I am using OpenBabel's cpp-API, not the command-line; tool, that is causing your confusion. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777308:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777308,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=684210. Would you be so nice and post a code-snipped of yours? We ; don't get what to put in the std::map<> to be honest. ; In OB2.0.1 we simply called OBMol::Center() and were done, ; I wonder why this is no longer working. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777305:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777305,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=786138. I had a similar error two. I want an excepption to be thrown. Original comment by: sswamida,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775155:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775155,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=786138. If the input is invalid it shoudl throw an exception with out ; accessing an NULL atom. Original comment by: sswamida,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775157:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775157,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=786138. My lab at UCI and I might be able help out here if the project ; programers want some help. Let me know. sswamida@uci.edu. Original comment by: sswamida,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809852:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809852,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122. Renaming DATADIR to BABAL_DATADIR fixes this bug, but there; are potentially many others in babelconfig.h. Configuration; headers should never be installed, they are useful only at; compile time. Normally, babelconfig.h should be the first; included header in each cpp file and should NEVER be; included in a header file (at least for a public library).; If there is a chance that an external program needs access; to BABEL_DATADIR, add a helper function such as; ob_get_datadir(). Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774926,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122. There are sstill problems with the following variables; generated by AM_INIT_AUTOMAKE:; #define PACKAGE ""openbabel""; #define PACKAGE_BUGREPORT; ""openbabel-discuss@lists.sourceforge.net""; #define PACKAGE_NAME ""openbabel""; #define PACKAGE_STRING ""openbabel 1.100.2""; #define PACKAGE_TARNAME ""openbabel""; #define PACKAGE_VERSION ""1.100.2""; #define VERSION ""1.100.2"". Given the contents of the header files including; babelconfig.h, it is almost impossible to remove it from; each. It might be possible for mol.h (which is the most; important) replacing inclusion of some headers by forward; class declarations, but this is not so simple and might; introduce lots of instabilities. I also found an inconsistency in mol.h: fstream and iostream; are always included. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774929:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774929,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122. To answer Peter's questions:; - DATADIR is the directory where applications have their; resources (as icons, static data, helpfiles,...) stored. The; default value is $(prefix)/share. Then in most cases the; real data are in a subdirectory, generally; $(datadir)/appname. Should DATADIR have been the default; value in OpenBabel, the bug would have not been found now.; Much worse, babelconfig.h defines VERSION...; -There is no need for a babelconfig.h in the CVS.; babelconfig.h.in is enough. The smae is true for configure,; Makefile.in and Makefile as far as the package uses autoconf; and automake.; My conclusion is that we have here a critical bug. A; priority of 5 is really a minimum. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774928:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774928,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122. You can look at what gnumeric does. The plugins are loaded; only when they are needed, gnumeric just loads a; configuration xml file (plugin.xml) on startup.; As I am confortable with the mechanism involved, I am able; to implement such a thing in OpenBabel. Just ask. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1434#issuecomment-281810176,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122. pos is defined as an unsigned int and compared to; string::npos whose value is -1. Defining pos as size_t fixes; this crash. As I could not find how to attach a file to the; bug, I just copy the patch here:. Index: src/main.cpp; ===================================================================; --- src/main.cpp (révision 1582); +++ src/main.cpp (copie de travail); @@ -70,7 +70,7 @@; ; //Save name of program without its path (and .exe); string pn(argv[0]);; - unsigned int pos;; + size_t pos;; #ifdef _WIN32; pos = pn.find("".exe"");; if(pos!=string::npos); @@ -270,7 +270,7 @@; OutputFileName = FileList.back();; FileList.pop_back();; }; - ; +; #ifdef _WIN32; //Expand wildcards in input filenames and add to FileList; vector<string> tempFileList(FileList);; @@ -311,7 +311,7 @@; }; else; {; - unsigned int pos = OutputFileName.rfind("".gz"");; + size_t pos = OutputFileName.rfind("".gz"");; if(pos==string::npos); pos = OutputFileName.rfind('.');; else. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/577#issuecomment-281777572:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/577#issuecomment-281777572,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. 2.0 and 2.1 are API compatible, so there is no need to update the headers path and the pkg-config file name.; The minor version does not matter in this particular case. If we are sure it will never matter, we can drop it, otherwise, let's keep it, it is not harmful. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/642#issuecomment-281778908:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/642#issuecomment-281778908,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=787122; Originator: NO. File Added: 1965086.patch. Original comment by: jbrefort,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/758#issuecomment-281780999:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/758#issuecomment-281780999,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. Hmm, I'm not guilty in the end:. r1754 | chrismorl | 2007-02-13 20:51:47 +0100 (mar, 13 fév 2007) | 1 line. Clear OBMol objects by default at start of ReadMolecule. The issue is that WriteMolecule was modified, not ReadMolecule, so the molecule was cleared before writing... Fixed in svn (both 2.1 and trunk).; Please mark as fixed. I'm not allowed to change the status. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778962:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778962,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=787122; Originator: NO. I confirm that bug. Sorry for the inconvenience. Please attribute to myself. Original comment by: jbrefort,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778961:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778961,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. I have that too. This comes from the cifformat plugin. Apparently the cifformat mixes all the data blocks with a logic I don't understand, and calls SpaceGroup::Find with a group which has no name, no id, and no transform, clearly an invalid group. I'll try to investigate when time permits. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780166:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780166,3,"['Log', 'log']","['Logged', 'logic']"
Testability,"Logged In: YES ; user_id=787122; Originator: NO. IMHO, it is the calling program responsibility to set the correct LC_NUMERIC value when reading/writing files. It is how it worksin many projects. Your code should look like:#include <iostream>; #include <openbabel/mol.h>; #include <locale.h>; int main(int argc, char **argv) {; setlocale(LC_NUMERIC, ""C"");; std::cout << ""Here's how I spell Carbon: ""; << OpenBabel::etab.GetName(6) << std::endl;; setlocale(LC_NUMERIC, """");; return 0;; }. or much better in the general case (C language, in C++, use a std::string):; 	char *old_num_locale = strdup (setlocale (LC_NUMERIC, NULL));; 	setlocale(LC_NUMERIC, ""C"");; 	// Calls to OpenBabel should come there; 	...; 	setlocale(LC_NUMERIC, old_num_locale);; 	free (old_num_locale);. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779349:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779349,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. It is not a cdx format issue. Importing the molecule in gchempaint using this format gives two atoms with anticlockwise configuration.; Exporting the molecule to SMILES loose the stereochemistry, because chirality is not specified for these atoms. Looks more like a perception issue. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779393:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779393,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=787122; Originator: NO. Patch applied to both branches. Thanks for it. Original comment by: jbrefort,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/673#issuecomment-281779375:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/673#issuecomment-281779375,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. Quite strange. When I generate the inchi from GChemPaint (using OpenBabel), I get a third version (see below). 1/C10H14N5O4/c1-5-3-15(10(18)12-9(5)17)8-2-6(13-14-11)7(4-16)19-8/h3,6-8,11,16H,2,4H2,1H3,(H,12,17,18)/t6-,7+,8+/m1/s1. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/595#issuecomment-281777932:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/595#issuecomment-281777932,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. Seems it works with canonical SMILES (can), but not with smi. babel -i cdx ../samples/melanocortin-2007-15-11.cdx -o can; ==============================; Clc1ccc(C[C@H](N2CCCNC2=O)C(=O)N2CCN(CC2)c2ccc(cc2[C@@H](N)CC(C)C)C(F)(F)F)c(Cl)c1 melanocortin-2007-15-11.cdx; 1 molecule converted; 1 errors 36 audit log messages 508 debugging messages. So the issue is that the smi format does not attempts to check the stereochemistry when not already known. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779396,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=787122; Originator: NO. The file contains a data block with no symmetry, just global data. This is probably the issue. I changed the cifformat so that in that case SpaceGroup::Find is not called, and the warning is now gone. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780167:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780167,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. The issue is that generally transforms are described with no white spaces in cif files, so that I supposed that if there were a space, the string was a list of double values as used in cml. Changing the order of the checks (comma before space) fixes the issue with this file, but might be unsecure. May be an extra argument to SpaceGroup::AddTransform would be a better idea.; Nothing related to Windows/Linux line-endings. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780164:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780164,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. cdx and cdxml support are still somewhat minimalist. Probably, chirality has not been implemented yet. I'll have a look. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779391:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779391,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. cdxml format does not support reactions at the moment, but the crash should not occur anyway. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/691#issuecomment-281779706:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/691#issuecomment-281779706,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. glib has code that might be copied to OpenBabel, since it is lgpl-v2+, see g_ascii_strtod and g_ascii_dtostr. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779363:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779363,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. hmm, I missed that there might be some stereochemistry in chemdraw files. I'll try to get it, but already checked that none is given in the samples (some atoms are said symmetric and there is no stereochemistry for the others). So we need to perceive the stereochemistry in OpenBabel. I have no idea how this is feasible. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779394:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/674#issuecomment-281779394,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=787122; Originator: NO. it segfaults because com format is write-only. This makes the out format never set, and then the first call to it bugs.; IMHO, OBConversion::FullConvert should not be called if OBConversion::SetInAndOutFormats fails. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/684#issuecomment-281779588:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/684#issuecomment-281779588,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=787122; Originator: YES. Patch applied to trunk. Original comment by: jbrefort,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/706#issuecomment-281780018:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/706#issuecomment-281780018,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=840863. Another (simplier) example:. [C@@]%10(F)(C)C(=O)O.Br%10 is converted to; F[C@@](Br)(C)C(=O)O which is wrong. Correct would be e.g.; Br[C@@](F)(C)C(=O)O. --Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777254:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777254,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=840863. Nick's latest updated version of the SMILES parser still; failed to convert this SMILES correctly:. [C@@]%10(F)(C)C(=O)O.Br%10 (S-configured). which was converted to. [C@](Br)(F)(C)C(=O)O (R-configured). I've made a test set of 128 nasty stereo SMILES and quite a; lot of them still got converted incorrectly.; I'd be glad to extensively test a new bug-fixed version of; the SMILES parser after my two-weeks vacations now. -Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777265,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=840863. We apply this special use of ring closure bonds for rapid; string concatenation-based combinatorial library enumeration; (see A. Schüller, G. Schneider, E. Byvatov; SMILIB: Rapid; Assembly of Combinatorial Libraries in SMILES Notation, QSAR; & Combinatorial Science 2003, 22, 719-721.); The obvious advantage of using those ring closures is that; SMILES do only need to be parsed as strings and not as; molecules, which saves a lot of computation time. --Andreas. Original comment by: archvile18",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777259:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777259,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=840863; Originator: YES. If you could send me the latest 2.1 beta I'll do the tests again for the nasty set.; My email address is: a.schueller at chemie dot uni-frankfurt dot de. -Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777268:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777268,2,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=850620. Changing to a bug report: an sdf file with no $$$$ between; molecules sounds like a bug to me, rather than a lack of; features. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777333:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/560#issuecomment-281777333,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620. Converts fine now, except for an info message:. no228@sandwi:~/Work/EdSDFile$ babel tmp.sdf try.mol2; ---errorlevel 2; ==============================; *** Open Babel Information in ParseLine; Could not parse line in phmodel table from phmodel.txt; 1 molecule converted; 1 info messages 15 audit log messages. I think I've noted this with other molecules also...is this; ignorable or does it signify a problem?. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777323,2,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=850620. I'm still not quite with you here. Your C++ code is not equivalent, as it 'looks before you; leap'. Do you also get a segfault if you (mis)use; map.front() on an empty map?. If so, then I would say that OB should raise an Exception. If not, then, as you say, it's a SWIG error and not worth; tracking down right now (since it only arises in the course; of a misuse of the API). Regards,; Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776833:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776833,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620. Just for comparision, using www.chemistry-development-kit.org... Example 1:; 281.3124 and C13H19N3O4. Example 2:; 275.25327 and C10H8N3OSF3. Example 3:; 277.2597 and C16H10N2O3. Is it possible that you are swapping between using 1amu and; 1.008amu, and that this is causing the difference?. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776753:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776753,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620. Oh well, I'll keep looking. :-). Adding /usr/local/ to LD_LIBRARY_PATH seems to do the trick; as regards finding the libraries. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776175:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/501#issuecomment-281776175,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620. Please attach the file to the bug, unless you are worried; about confidentiality. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777467:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/568#issuecomment-281777467,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620. Right so. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776836:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/537#issuecomment-281776836,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620. So...I should submit the same bug report again but with a; different emphasis?. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776729:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776729,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620. Thanks for taking my comments on board. Just a few points in; response. (0) I use ""tar zxvf filename.tar.gz"" in linux, and expect a; folder to be created. In Windows, I use 7-zip by; right-clicking on a .zip file to bring up a context menu,; and then clicking ""Extract Here"". Most software; distributions create a new folder to prevent this problem.; (5) Is it possible to automatically select the checkbox if I; choose something from the drop-down menu? Or does this make; sense?. Regarding a crossplatform GUI for OpenBabel, it is; relatively easy to do this in Python (although I am not sure; about the molecular display part), but I'm not sure whether; the Python extensions will be available for windows openbabel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810309:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810309,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620. Thanks! It's working now... data.GetValue() returns 122.03677944. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/532#issuecomment-281776716:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/532#issuecomment-281776716,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620. There is a difference - now, I get segfaults for both; examples in my original post!. I'm afraid this story isn't over yet...:-(. Is there any way I can get more informative segfaults for you?. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776601:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776601,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620. Turns out that he wasn't using the latest version of; OpenBabel. It works fine with OB2. (Egg on face). You can close this feature request. Noel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1449#issuecomment-281810406:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1449#issuecomment-281810406,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620. Using the HEAD revision. I keep trying to use branches with; CVS but it defeats me every time. I will await SVN (which; makes it easy) or an update to the HEAD. Noel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776603:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/525#issuecomment-281776603,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620. Well, either that or I can handle it transparently in; pyopenbabel. Maybe the latter is preferable all round?; Whatever you decide. Regards,; Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776269:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/507#issuecomment-281776269,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. (1) On what platform?; (2) Please attach an example file. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/659#issuecomment-281779146:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/659#issuecomment-281779146,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. (Assigning to Geoff ... this is a follow-up from New Orleans ACS meeting). Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779014:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/650#issuecomment-281779014,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. (Note to Tobias) My previous comment was addressed to other developers. This is definitely a bug...Noel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793432:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793432,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. A quick glance at the MOL2 spec (http://www.tripos.com/tripos_resources/fileroot/mol2_format_Dec07.pdf) indicates that OpenBabel should not be creating MOL2 files with blanks after the list of bonds:. ""Lines 8, 15, 28, and 41 in the example are RTIs. They divide the file into 4; sections. A section begins with a RTI and ends at the next RTI or the end of the; file."". Here's the test case: INPUT is MOL; NSC147337 Water vapor; OpenBabel01110809183D. 3 2 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 O 0 0 0 0 0; 0.9600 0.0000 0.0000 H 0 0 0 0 0; -0.3200 -0.8795 -0.2140 H 0 0 0 0 0; 1 2 1 0 0 0; 1 3 1 0 0 0; M EN; -------- EOF. Output is MOL2:; @<TRIPOS>MOLECULE; NSC147337 Water vapor; 3 2 0 0 0; SMALL; GASTEIGER; Energy = 0. @<TRIPOS>ATOM; 1 O 0.0000 0.0000 0.0000 O.3 0 HOH0 -0.4105; 2 H 0.9600 0.0000 0.0000 H 0 HOH0 0.2052; 3 H -0.3200 -0.8795 -0.2140 H 0 HOH0 0.2052; @<TRIPOS>BOND; 1 1 2 1; 2 1 3 1. --------- EOF. The final blank line before the EOF should be removed. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/712#issuecomment-281780104:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/712#issuecomment-281780104,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Actually, I've just realised that I haven't fixed the original bug relating to cmlformat.cpp. The system on which I tested didn't have libxml, so it looks like I need to sort out the XML formats. I'll leave it as pending as this shouldn't be too difficult... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780203:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780203,2,"['Log', 'test']","['Logged', 'tested']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. After discussion with Greg, I've reverted back to the original interface file for Python, but this time substantially reduced the number of wrapped methods. Could someone check whether the files compile okay, and if not, how far away are we from success?. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780579:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780579,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Attaching configure from David. checking for libxml - version >= 2.6.5... yes (version 2.6.16). Hmmm...so it does have XML. Can I suggest that you download the latest snapshot (""Get latest beta release (01-Mar-08)"" on the install page) and see whether the issue has been resolved since the release of 2.1.1?; File Added: configure.out. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780833:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780833,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. Attaching file from duplicate bug 1884384...; File Added: water-OpenBabel2.1.1.pov. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1493#issuecomment-281810853:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1493#issuecomment-281810853,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. Ballester et al. have filed a patent (http://cisrg.shef.ac.uk/shef2007/talks/ballester.pdf) so come back to us in 10 years or so. :-/. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1489#issuecomment-281810785:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1489#issuecomment-281810785,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. Confirmed for OB 2.2.0. Note to self: should add a regression test for this. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/798#issuecomment-281793517:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/798#issuecomment-281793517,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=850620; Originator: NO. Correction to bug title...the format is not missing. It just won't read the index. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/761#issuecomment-281781055:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/761#issuecomment-281781055,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Could you be more specific about what exactly is the problem:; (1) How did you run babel?; (2) How did the output differ from the expected output? If you could say exactly what was wrong with the output of babel (e.g. line 5 was THIS but it should be THAT) then it will be easier for us to fix the problem. Thanks,; Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/703#issuecomment-281779934:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/703#issuecomment-281779934,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Does conversion from PDB to MOL2 work okay? If so, then the problem is only with the XML formats such as CML. Is libxml installed on your system? (I am not familiar with MacOSX so I cannot help with the specifics). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780731:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780731,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. Does this solve it?. http://www.nabble.com/Python-bindings-on-amd64-Linux-tf2574974.html#a7186560. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/655#issuecomment-281779080:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/655#issuecomment-281779080,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. Duplicate of 1884385. I have moved the attachment to that bug. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/723#issuecomment-281780310:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/723#issuecomment-281780310,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. Duplicate of bug 1740998. See the solution there...we really should fix this...I'll bump the priority of this bug up as 64 bit platforms are becoming more common... Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/687#issuecomment-281779642:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/687#issuecomment-281779642,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Excellent bug report. Just to correct something, only the first call is to ReadFile; subsequent calls are to Read. As you point out, the problem is in the C++ code, which has been very difficult to get correct cross platform (i.e. it works on Windows (although this does not exactly correspond to 2.1.1), and worked (last time I checked) on Linux). If you need a workaround in the short time, let me know; there's one or two things you could try... Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780028:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780028,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Fixed in SVN trunk r2077. Workaround for the user is to replace; ""import dl""; with; ""import DLFCN as dl"". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/655#issuecomment-281779083:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/655#issuecomment-281779083,2,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. Fixed in r2293. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/732#issuecomment-281780487:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/732#issuecomment-281780487,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. Fixed. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780204:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780204,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. For the record, no problems on Windows with following Python code:. >>> import pybel; >>> a=pybel.readfile(""mol"", ""kaputt.mol"").next(); >>> a.formula; 'C14H16ClN3O8S2'; >>> a.molwt; 453.87513999999999; >>> a.OBMol.AddHydrogens(); True; >>> a.formula; 'C14H16ClN3O8S2'; >>> a.molwt; 453.87514000000016; >>> a=pybel.readfile(""mol"", ""kaputt.mol"").next(); >>> a.OBMol.AddHydrogens(False, False); True; >>> a.molwt; 453.87514000000016; >>> a.formula; 'C14H16ClN3O8S2'; >>>. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779474:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/678#issuecomment-281779474,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Geoff - you're going to kick yourself, but I think that the bug fix in r2578 is missing an ""if"" statement before it changes the atom type to C+. Currently, all C.2 are changed in C+. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/798#issuecomment-281793519:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/798#issuecomment-281793519,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Hmmm...well, the good news is that you've found a second bug! The forcefield code is quite new, but I guess it hasn't been tested with the new GCC4, which apparently is getting very strict. If you want to keep trying, you could download an older snapshot that doesn't contain forcefieldghemical.cpp. In the meanwhile, I'll post on the devel list about the new bug, as fixing compile problems are a priority. But I'll have to leave the original bug to a C++ expert. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777884:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777884,2,"['Log', 'test']","['Logged', 'tested']"
Testability,Logged In: YES ; user_id=850620; Originator: NO. Hydrogens need to be added before the forcefield optimiser is used. (Is the forcefield optimiser being used here?); - Noel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793430:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793430,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. I assumed you looked at script/Makefile.in for the build instructions. In fact, the Ruby related lines in Makefile.in deviate from what you have done. To compile the SWIG extensions yourself, you should run configure as follows:; ./configure --enable-maintainer-mode. Then running make in the scripts directory should build the Ruby extension automatically. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779978:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779978,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. I cannot reproduce the bug either on Windows or on Linux with the current snapshot (b7). I think that this issue is resolved since r1958 (soon after the initial bug report). Previously I created a new instance of OBConversion for each readfile; after this, I used the same global instance. Note that I have not looked at the gz stuff, I am simply talking about regular files, for which Ahmet said he had the same problem. I am making this bug as Closed, but I should probably stress test the Pybel I/O code at some point in the future. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778876:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778876,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. I find it difficult to sort out this problem because:; (a) I don't have a dependency chart of OB header files; (b) I don't have access to a ppc64, and so I don't know how much I have to squeeze the file size down. If I can get (a) + (b), then we can make some progress I hope. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780566:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780566,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. I might have been a bit hasty...when I closed the Python interpreter on Windows, it crashed, which is in agreement with your bug report. Next step is to reproduce on Linux, and trace the problem. It's a problem in the core OpenBabel libray rather than the Python. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779653:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779653,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. I'm afraid not. Regular objects also need to be wrapped in the same interface file. For example, OBConversion returns OBMols and these aren't wrapped. So the current situation is that you can read in molecules from a file, but you can't access any of the methods or attributes of the molecules. I'm going to revert these recent changes (if no-one objects today) except for the changes to the SWIG command line. I would appreciate if someone could then check whether the changes to the command line are enough to allow compilation. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780578:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780578,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. I'm bumping up the priority as I'm going to add CML support as a test for Pybel. Also, here's a better test case for you guys which shows you where the problem is. It fails on both Linux and Windows:. import os; import openbabel. filename = ""cs2a.cml""; format = ""cml"". obconversion = openbabel.OBConversion(); formatok = obconversion.SetInFormat(format); if not formatok:; raise ValueError,""%s is not a recognised OpenBabel format"" % format; if not os.path.isfile(filename):; raise IOError, ""No such file: '%s'"" % filename. obmol = openbabel.OBMol(); notatend = obconversion.ReadFile(obmol,filename). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779657:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779657,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. I'm bumping up the priority as I've just spent an hour or two trying to figure out this problem myself, and it has also caused several bug reports to date. I suggest sorting this out in configure by adding some extra tests. Here is what I suggest:; (0) The user optionally sets BOOSTDIR. (1) If BOOSTDIR is defined, then add ""-DUSE_BOOST"" to DEFS, and ""-I$(BOOSTDIR)"" to INCLUDES. (2) configure should then try to compile a test program involving ""tr1/whatever"". If it succeeds, it sets a flag HAS_BOOSTLIKE_HEADERS. Otherwise, it prints a warning message saying ""It looks like you don't have the Boost headers so the following formats will not be compiled: chemdrawcdx, etc.. This is probably because you are using GCC3.x and don't have Boost installed. For more information, see http://openbabel.sf.net/Install (Source Code)"". (3) If HAS_BOOSTLIKE_HEADERS is not defined, don't compile any format that relies on the existence of Boost-like headers. (4) Update the documentation appropriately. I will do 4, and I can test 1-->3. (By the way, I note that although ./configure --includedir=whatever correctly sets includedir in the Makefile, the value of includedir does not seem to be incorporated into $INCLUDES.). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780200:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/717#issuecomment-281780200,4,"['Log', 'test']","['Logged', 'test', 'tests']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. I've checked the SWIG warnings, and they're fine. It should not have been necessary to run SWIG yourself though. If you do run SWIG, please use he latest point release. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779977:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/704#issuecomment-281779977,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. It looks up the working directory, then it searches in the PATH. I'm marking this bug as closed. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793426:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/792#issuecomment-281793426,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. It's a regression, and a disappointing one. This bug is a duplicate of 2017902. Are you using OpenBabel on Windows or Linux?. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/805#issuecomment-281793613:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/805#issuecomment-281793613,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Peter, the best place to discuss this is on the openbabel-devel mailing list. There may not be any bug, just problems with how you are building the code. For example, you appear to be using VS2008 instead of VS2005 (as recommended at http://openbabel.org/wiki/Install_%28MSVC%29). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786145:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/777#issuecomment-281786145,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: NO. Regarding the line:. cml...........FAILED tests 1-6. This indicates that you may not have compiled with CML support. Can you pipe the output of configure into a file and attach it to this bug report. This will let us know whether you are compiling with CML support or not. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780831:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/750#issuecomment-281780831,2,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Sargis, could you report this problem to DrugBank and include Craig's comment below. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/760#issuecomment-281781040:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/760#issuecomment-281781040,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Sorry to hear you're having problems. It would be helpful if you could provide an example (e.g. by attaching an input file). Also, if you could let us know what version of Open Babel you are using. And last but not least, it is always helpful if you provide an email address. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/591#issuecomment-281777867:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/591#issuecomment-281777867,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Still a bug. The problem is simply reading from the CML. Verified on Linux (using the SVN trunk r2217) with the following test file:; ===================; import pybel; mol = pybel.readfile(""cml"", ""3-methylbutanal.cml"").next(); ===================. Core dumped. ""gdb python core"", followed by ""bt"" gives:. Core was generated by `python test1815533.py'.; Program terminated with signal 11, Segmentation fault.; #0 0x00000169 in ?? (); (gdb) bt; #0 0x00000169 in ?? (); #1 0xb773eecf in ~OBConversion (this=0x81e1b70) at obconversion.cpp:253; #2 0xb78f7bd3 in _wrap_delete_OBConversion (args=0xb7b1efac); at openbabel_python.cpp:42252; #3 0x0805a84e in PyObject_CallFunctionObjArgs (); #4 0xb78ab5c5 in PySwigObject_dealloc (v=0xb7d90920); at openbabel_python.cpp:1434; #5 0x0807b88f in PyDict_GetItem (); #6 0x0808ba4e in PyType_GenericAlloc (); #7 0x080ff8c8 in PyFrame_Fini (); #8 0x080feea0 in PyDescr_NewMember (); #9 0x080fd57e in PyDictProxy_New (); #10 0x080b6918 in PyEval_EvalFrame (); #11 0x080ba735 in PyEval_EvalCodeEx (); #12 0x080ba799 in PyEval_EvalCode (); #13 0x080dd147 in PyRun_FileExFlags (); #14 0x080dd344 in PyRun_SimpleFileExFlags (); #15 0x08055ba8 in Py_Main (); #16 0x08055032 in main (). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779656:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779656,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Thanks for reporting this. I have fixed this for the next release. In your own program you can replace self.iter.deref() by self.iter.__ref__(). For general use, in Python2.x/Lib/site-packages/openbabel.py replace:; b = self.iter.deref(); by; b = self.iter.__ref__(). Then you should be able to use:; for angle in openbabel.OBMolAngleIter(myobmol):; print angle. The test file now produces the following output (for head.sdf):; Angles:; 2 0 3; 2 0 4; 2 3 4; 3 2 5; 3 2 8; 3 5 8; 4 2 6; 4 2 9; 4 6 9; 5 3 7; 5 3 10; 5 7 10; 6 4 7; 6 4 11; 6 7 11; 7 1 5; 7 1 6; 7 5 6; 8 3 12; 8 3 13; 8 3 14; 8 12 13; 8 12 14; 8 13 14; Pairs:; 1 2; 1 6; 1 7; 1 8; 1 9; 1 10; 1 11; 1 12; 1 13; 1 14; 1 15; 2 3; 2 4; 2 5; 2 9; 2 10; 2 11; 2 12; 2 13; 2 14; 2 15; 3 8; 3 11; 3 12; 3 13; 3 14; 3 15; 4 7; 4 10; 4 12; 5 6; 5 9; 5 11; 5 13; 5 14; 5 15; 6 10; 6 12; 6 13; 6 14; 6 15; 7 9; 7 11; 7 13; 7 14; 7 15; 8 9; 8 10; 8 13; 8 14; 8 15; 9 10; 9 11; 9 12; 10 11; 10 12; 10 13; 10 14; 10 15; 11 12; 11 13; 11 14; 11 15; 12 13; 12 14; 12 15; Torsions:; 0 2 3 5; 0 2 3 8; 0 2 4 6; 0 2 4 9; 2 3 5 7; 2 3 5 10; 2 3 8 12; 2 3 8 13; 2 3 8 14; 2 4 6 7; 2 4 6 11; 3 2 4 6; 3 2 4 9; 3 5 7 1; 3 5 7 6; 4 2 3 5; 4 2 3 8; 4 6 7 1; 4 6 7 5; 5 3 8 12; 5 3 8 13; 5 3 8 14; 8 3 5 7; 8 3 5 10; 9 4 6 7; 9 4 6 11; 10 5 7 1; 10 5 7 6; 11 6 7 1; 11 6 7 5. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/732#issuecomment-281780485:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/732#issuecomment-281780485,2,"['Log', 'test']","['Logged', 'test']"
Testability,Logged In: YES ; user_id=850620; Originator: NO. That's great. Looks like it's working. I've updated pybel. r2645. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/782#issuecomment-281793251:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/782#issuecomment-281793251,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. That's great...but your comment is understandable. The reason I suggested using a newer version was that I remembered that some changes had been made to the CML code since then. If you look at the log for cmlformat.cpp at:; http://openbabel.svn.sourceforge.net/viewvc/openbabel/openbabel/trunk/src/formats/xml/cmlformat.cpp?view=log. It's possible that the important difference is at r1601:; * src/formats/xml/cmlformat.cpp: Change size_t to; string::size_type to be sure of 64-bit correctness. I think that a number of changes for 64-bit computers were made around the same time, so I recommend that you use the beta version rather than the released one. As far as I know, there will be no more stable releases of 2.0.x. The next stable release will be 2.1.0 final. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777887:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/592#issuecomment-281777887,3,"['Log', 'log']","['Logged', 'log']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. The only remaining difference with the Pybel code is your use of SetInAndOutFormats rather than just SetInFormat. However, this is unlikely to be the problem. Could you confirm whether the problem is specific to the cdx format; that is, does it work for a multimolecule SDF file (see head.sdf in the distribution in the scripts/python/example folder)?. It might be useful if you could attach a specific multimolecule CDX file to this bug report or point me to one on the web, so that I can use it as a test case. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780030:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/707#issuecomment-281780030,2,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. The problem isn't with the MOL2 atom typing but rather with the assignment of the internal atom type:. >>> mol = pybel.readstring(""smi"", ""C=CCc1ccccc1OCC(O)CNC(C)C""); >>> mol.atoms[0].type; 'C+'. The internal atom type on reading the SMILES string is incorrect. I'm bumping up the priority and renaming the bug as this is a more general problem. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/798#issuecomment-281793518:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/798#issuecomment-281793518,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. The remaining problem is with reading multimolecule CML files, and is described in my email of 3 Mar (below). The test case is cmlreadfile.cpp. ""I've just checked in a test for CML scripting support called; cmlreadfile.cpp. Chris has been doing some work and it now works for; single molecule files. However, I find that there is a still a problem; with multimolecule CML files. Specifically, the test file contains two molecules, but OpenBabel; reads a third empty one. Hopefully, once this is fixed, this unit test; will ensure that it doesn't regress in future."". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779659:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779659,5,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. There's too much info already. I'd like to see something like the help system of svn:; svn help; svn help commit. Which equates to:; babel --help (or -H); babel --help formats (or babel -H formats); babel --help SMI; babel --help convert; babel --help filter; and so on, the more the merrier. The only manual users read is probably babel --help, so if it's not in there, it doesn't exist. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1484#issuecomment-281810717:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1484#issuecomment-281810717,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. These snapshots don't contain the SWIG wrappers. You need to generate them yourself, with ./configure --enable-maintainer-mode (requires recent version of SWIG). I'm marking this bug as closed (pending). (For a related bug, see 1881688). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/727#issuecomment-281780413:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/727#issuecomment-281780413,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. This fix has the effect of reducing the functionality of the bindings - I would say it makes them unusable. As an example illustrating the general problem, OBConversion is in obconversion.py, whereas the templates are in obtemplate.py. This means that any methods of OBConversion returning a std::vector will be unusable in Python, e.g.:. >>> obconv = ob.obconversion.OBConversion(); >>> obconv.GetSupportedInputFormat(); <Swig Object of type 'std::vector<std::string > *' at 0x8166a90>. Of course this can be trivially fixed by copying that template to obconversion.py. However, the problem is more general as it also applies to every method that returns a C++ object. An alternative suggestion is to find out (from the SWIG mailing list) whether most of the std::vector template verbiage can be suppressed (e.g. by editing std_vector.i). That is, when wrapping a std::vector all that's needed is the length and the ability to index it (or so) - there's no need for append and pop methods and so on. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780575:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780575,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. This is why we ask people to leave their email address. In the absence of any response, I'm marking this bug as ""Works for me"", and ""Pending"". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/789#issuecomment-281793407:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/789#issuecomment-281793407,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Unfortunately (ahem, Chris :-) ), the 2.1.0 stable release does not exactly correspond to the code used for OpenBabelGUI 2.1.0c. You will need to get that code from the SVN HEAD of tags-2-1-0. (If this doesn't mean anything to you, let me know and I will explain more clearly.). However, the general problem is more worrying - thanks for bringing it to our attention. Someone more qualified than me will look into it. Please leave your name and/or email address so that we can keep in touch with you regarding this issue. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778914:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778914,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Using the latest OBWinInstaller, I still get the same error. Here's a simple test case. D:\Tools\OpenBabel\OBBug>babel -ismi -osdf --gen3D; N#CSSC#N; ^Z. OpenBabel08190809343D. 6 5 0 0 0 0 0 0 0 0999 V2000; 1.0000 0.0000 0.0000 N 0 0 0 0 0; 2.5000 0.0000 0.0000 C 0 0 0 0 0; 4.0000 0.0000 0.0000 S 0 0 0 0 0; -1.#IND -1.#IND -1.#IND S 0 0 0 0 0; 1.#QNB 1.#QNB 1.#QNB C 0 0 0 0 0; 1.#QNB 1.#QNB 1.#QNB N 0 0 0 0 0; 1 2 3 0 0 0; 2 3 1 0 0 0; 3 4 1 0 0 0; 4 5 1 0 0 0; 5 6 3 0 0 0; M END; $$$$; 1 molecule converted; 47 audit log messages 1 debugging messages. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793436:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793436,5,"['Log', 'log', 'test']","['Logged', 'log', 'test']"
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Verified with latest pybel release. The problem is reading the MOL2 file, not writing the xyz file. The file looks fine, compared to the sample MOL2 file at http://www.tripos.com/mol2/mol2_format3.html. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/654#issuecomment-281779064:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/654#issuecomment-281779064,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: NO. Works for me on Windows with latest release of OBPython for 3-methylbutanal taken from:; http://blueobelisk.svn.sourceforge.net/viewvc/*checkout*/blueobelisk/structures/trunk/src/aldehydes/3-methylbutanal.cml. (From the ""Submit a bug report"" page...) A good bug report should include:. * Your name and email address; * The version of Open Babel are you using, and your operating system (Linux, Mac OS X, Windows, Solaris, etc.); * An attachment containing an example input file that causes the problem.; * Please try to be specific and give an example of what exactly didn't work. Please let us know what you think should have happened instead. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779652:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779652,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. Accessing GetVector() is fine. It appears to be properly wrapped. Accessing x() causes the segfault. I've just looked at the C++ code. I think that the problem is not that vector3::x() returns a ref, but that it returns a ref to a const object, which is impossible to translate into Python. I think that the solution is make either vector3::Get() or vector3::operator[] work from the scripting languages, as these are really the correct way to access the data in C++. I will look into this...it shouldn't be difficult. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779194:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779194,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. File Added: Errormessages.txt. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778967:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778967,2,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. File Added: moreoutput.zip. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778978:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778978,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. File Added: output.zip. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778972:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778972,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. Fixed by Chris. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/641#issuecomment-281778907:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/641#issuecomment-281778907,3,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. Fixed in r2711. OBFingerprint::DescribeBits is disabled though. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/791#issuecomment-281793412:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/791#issuecomment-281793412,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. Fixed on trunk. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/795#issuecomment-281793465:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/795#issuecomment-281793465,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. Good news first?. The good news is that it's working for BFS (I can access CurrentDepth fine). The other good news is that BFS is really the one we want it to work for (e.g. in the case of circular fingerprints), as the user might terminate the iteration after a certain depth. The bad news is that the BFS iterator in OpenBabel doesn't accept an atom as a starting point (the DFS iterator does though), and so this iterator can't be used for the use cases I imagine. Let me know if you want me to resubmit this feature request under a different title: ""BFS iterator with OBAtom as starting point"" or so. This would really be a killer feature. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810911:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810911,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. Great. That looks really nice. I knew that you had done some work on it, but I didn't see it in the help on 'babel'. Regarding regular expressions, I just mean an asterisk. Often all the actives (e.g. in drug docking) would come from a different database (e.g. drawn by hand) than the inactives, and can be simply identified by common elements in their title. Would it be possible to use an expression like ""MY_FIRST_DATAFIELD>1.4 && MY_SECOND_DATAFIELD='NOT_IN_STOCK'"". I note that a possible problem is data fields that contain spaces in the names. I think that you will have to enforce some rules such as, if there's a space in the name, use an underscore in the query. It would be good also if babel warned if no field matched one of the terms in the query (and perhaps printed out some possibilities), as I imagine that this will be a common error. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810760:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810760,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I am following this up with the ZINC maintainers. 5% of the MOL2 files in ZINC have four-coordinate Ns of type N.3. This must be an error as Chris says. Either these are of type N.4, or they are N.3 with at most 3 bonds. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779163:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779163,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I decided to see whether I could figure anything out by using gdb on the core dump:. ~Conversion at obconversion.cpp:268; _wrap_delete_OBConversion at openbabel_python.cpp:37325; ...; PySwigObject_dealloc at openbabel_python.cpp:1550; etc. Line 268 is ""delete pInStream;"". Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777735:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777735,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I note that the conversion proceeds much better (perhaps even perfectly) if I first unset BABEL_DATADIR (on Windows). Setting BABEL_DATADIR is required for using FP3 from Python. However, something has gone wrong since the last release of OB and OBPython. It seems that OB cannot correctly read types.txt, nor patterns.txt, once you set BABEL_DATADIR. How do I know? Well, if I don't set BABEL_DATADIR, OB complains that it cannot find patterns.txt, but it correctly converts the MOL2 file in the Pybel test suite. If I set BABEL_DATADIR, it doesn't complain any longer about patterns.txt, but it cannot set any bits in the molecules (this exposed bug 1728410), nor can it correctly convert the MOL2 file in the Pybel test suite. This bug affects all users of OBPython1.0 (which sets BABEL_DATADIR) who are using the latest OpenBabelGUI. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778976:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778976,3,"['Log', 'test']","['Logged', 'test']"
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I tested the release candidate you sent me and everything works up to, and including, the Perl ""make test"". Woo hoo!. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/783#issuecomment-281793258:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/783#issuecomment-281793258,3,"['Log', 'test']","['Logged', 'test', 'tested']"
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I think you reverted your original comment, right?. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810909:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810909,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I will return to this, once the Makefile.PL problems are sorted out (see separate bug report). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780274:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780274,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I'm a bit worried now about that patch...say if it wasn't necessary, or it's some horrible mistake? I'm not very confident with the whole C++ thing... The original problem remained, but has been resolved simply by defining a vector of OBAtom* in the interface file. Sorry about the big song and dance. In addition, I should have been using OBResidueAtomIter in any case (which works), rather than accessing GetAtoms() directly. So...were these two unrelated problems, or was openbabel genuinely unable to read these files...? I should try to convert 1ABE.pdb with babel.exe prior to the patch and see what happens... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I'm closing this bug, as I believe this is an error in the input, i.e. Garbage-in Garbage-out. Nice use of Frog though :-). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779167:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779167,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I'm marking this bug as pending. (1) I've eyeballed the MOL2 conversion and it looks very good, so no problems there. It was all a big red herring due to the issues with BABEL_DATADIR.; (2) Chris seems to have sorted the issues with \r (which appears to be the same as ^M). Great! I love it when a plan comes together. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778980:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778980,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. I've looked at a couple of solutions; the best one is simply to add the following to the Python scripting interface... %rename(__getitem__) *::operator[]; // Allows access to vector3 values by index. Then, v[0], v[1], v[2] can all be accessed. It would be great if vector3::Get() just returned a std::vector though. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. Interestingly, if I change ""sub dl_load_flags { 0x01 }"" to ""0x00"" in the Makefile, and run the same perl script, it doesn't abort but gives some warnings:; oboyle@calvin:~/not-backed-up/openbabel-trunk/scripts/perl/examples$ perl tmp.p; l; ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/cmlformat.so did not load proper; ly; ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/pubchem.so did not load properly. ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/xmlformat.so did not load proper; ly; ==============================; *** Open Babel Error in LoadFormatFiles; /home/oboyle/not-backed-up/tree/lib/openbabel/cdxmlformat.so did not load prop; erly. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780262:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/720#issuecomment-281780262,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. Looking at the FP2 code, it says ""A molecule structure is analysed to identify linear fragments of length; from one to Max_Fragment_Size = 7 atoms but single atom fragments of C,N,and O are ignored. A fragment is terminated when the atoms form a ring."". This suggests that this is not a bug, but is designed behaviour. I think this is inconsistent with Daylight-type fingerprints, and would recommend that single atom fragments are not ignored. Otherwise, users (including me) are going to be confused... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779779:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779779,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. Mol2 files use Sybyl atom types, http://www.tripos.com/mol2/atom_types.html. I have just compared the output of 2.1.0 with the Mol2 file stored in Relibase (which contains curated ligands) for the same protein. According to this comparision, instead of Car, it should be C.ar, similarly for C3 (should be C.3), So2 (should be S.o2), O- (should be O.2). The N3's should be N.3 (if correct), or otherwise N.pl3 (which is how Relibase types them). The O.3 is correctly typed!. It's probable that whoever wrote this code didn't realise how crucial these atom types are for people working with protein data. It's not just a mnemonic; these codes provide information to programs that deal with proteins. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778974:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/647#issuecomment-281778974,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. Now (r2482) segfaults after the make3D() (windows):. import pybel; import openbabel as ob. mol = pybel.readstring(""smi"", ""CCCC""); mol.make3D(). ...Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/755#issuecomment-281780941:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/755#issuecomment-281780941,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. One remaining error for the same file. *** Open Babel Warning in OpenBabel::SpaceGroup::Find; Unknown space group with incomplete or wrong definition. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780165:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780165,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. Please find attached the guilty party. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/580#issuecomment-281777633:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/580#issuecomment-281777633,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. Same as Bug 1526020 reported by Rajarshi... Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777734:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/586#issuecomment-281777734,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. Sorry about that Chris. It works for me after reinstalling from the released Pybel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/796#issuecomment-281793481:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/796#issuecomment-281793481,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. The output now appears to be correct. For the one with five bonds, I get:; CONECT 1 2 3 4 5; CONECT 1 6; CONECT 2 1; CONECT 3 1; CONECT 4 1; CONECT 5 1; CONECT 6 1. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/640#issuecomment-281778904:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/640#issuecomment-281778904,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. The outputfile will not upload due to the funny characters. I can send it off-list to anyone who wants. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779250:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/664#issuecomment-281779250,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. This is my first time debugging in C++, but I think I've found the immediate problem. I'm working off the 2-1-x branch on WinXP. The PDB file was download from the PDB and is attached to the original bug report. If I just read in the PDB file with the following code, I get an error:; int main(int argc,char *argv[]); {; OBConversion conv;; 	OBMol mol;; 	conv.SetInFormat(""pdb"");; 	conv.ReadFile(&mol, ""1ABE.pdb"");; 	; 	cout << ""hey:"" << mol.NumAtoms() << endl;; 	system(""pause"");; }. The line of the file that causes the problem is:; HETATM 2338 O HOH 309 9.470 57.177 56.123 0.98 12.11 1ABE2423. Line 266 of pdbformat.cpp has a subscript out of range debug error:; ""if (atmid[2] == '\0' || atmid[2] == ' ') type = atmid.substr(0,2);"". At this point, atmid is simply ""O"" whereas the code (according to the comment on line 272) expects it to be "" O"" for a single character element. I hope this helps. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. This works, but I need to add a small bit of code to the interface file to make it easier to access this in the BFSIterator. I will return to close the bug when done. Thanks!. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810914:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810914,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=850620; Originator: YES. Updated openbabel-python.i in r2644. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810916:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1495#issuecomment-281810916,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. Yes - I understand where you're coming from. I know it sounds a bit backward, but I think that sticking to the Daylight-type fingerprint with all its problems is better than fixing it. Mainly because of expectation and familiarity to chemists. Maybe it would make sense to split this type of fingerprint into two: one that's Daylight-type, and another that's optimised for indexing (e.g. most significant bits come first, or something). Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779784:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779784,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=850620; Originator: YES. Yes - babel failed...not on all PDB files, but some. When I get time I'll download the PDB and verify that it can parse (without segfaulting at least) all of the files. Marking this bug closed... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778899:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778899,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=851435; Originator: NO. I would have thought that I should be able to call a library function and expect it to work no matter what the system locale is. When would the current behaviour ever be correct? I don't think file formats are localised in the sense that the numeric delimiters are changed are they? Having users of the OpenBabel library manually set the locale to ""C"" and then reset it back to the original after the call looks very much like a workaround to me. I have possibly misunderstood your reasoning but I think that we should aim to fix this as it appears to me to be a bug. Original comment by: @cryos",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779353:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779353,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=851435; Originator: NO. This could also be a naming issue - not all of the format files are named using the same convention. The CMake build scripts just use the name of the source file whereas the auto* stuff seems to tack on format on the end of the library name. Try cleaning out /usr/local/lib/openbabel/ before installing the CMake built stuff - could be stale files. Original comment by: @cryos,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/756#issuecomment-281780978:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/756#issuecomment-281780978,2,['Log'],['Logged']
Testability,Logged In: YES ; user_id=851435; Originator: NO. This is already working for the CMake based build of OpenBabel. To be honest far too much of the API is exposed wholesale to make visibility all that useful. I think until the API of OpenBabel is redesigned the visibility doesn't help very much at all as the DLLs just export everything... That is why I never really spent the time talking Autotools into playin ball. Should help a lot with API redesign in 3.0 though. Original comment by: @cryos,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1452#issuecomment-281810449:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1452#issuecomment-281810449,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=851435; Originator: NO. This works fine here - I believe this is the same bug as the one I just fixed if by type the bug reporter means bond order. The problem was that the CML format was using atoi to convert a single character to an integer. This conversion worked on many platforms but on some did not as the string passed to atoi was a single character (i.e. not null terminated). I think that this is probably safe to mark as closed. To be honest my bug was a duplicate of this bug I think. See PR 1975137. Original comment by: @cryos,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779320:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/669#issuecomment-281779320,1,['Log'],['Logged']
Testability,"Logged In: YES ; user_id=851435; Originator: YES. It is pretty much any CML file I can lay my hands on - I will dig some out. It does appear to be some kind of bug in the atoi function though. I added the line 'cout << ""OBBond order: "" << bo << ""("" << ord << "")"" << endl;' to the cmlformat file and ord is randomly 18 on my system when bo is 1. I will see if I can spot why this is the case and what the best fix might be. Original comment by: @cryos",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781074:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781074,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=851435; Originator: YES. It was quite a simple fix after all - hopefully this change hasn't broken anything. All tests should be protected in this way. I have also patched Gentoo's openbabel ebuild for beta5. Original comment by: @cryos,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/764#issuecomment-281781113:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/764#issuecomment-281781113,3,"['Log', 'test']","['Logged', 'tests']"
Testability,"Logged In: YES ; user_id=851435; Originator: YES. This is fixed in commit 2504. C functions such as atoi, strtol etc all require null terminated char* arrays. This was working most of the time as the function continued until it found a zero. The offending code was the const char bo = value[0]; which was then passed to atoi later if the bond order was numeric. The same kind of bug could happen anywhere where similar code is in place and is tough to spot as it depends on the memory layout of the platform etc. Original comment by: @cryos",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781080:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/762#issuecomment-281781080,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=888972. The kekulize function only change the bond order of aromatic ; bonds. There is nothing to kekulize in a sulfate. Fabien. Original comment by: fabfont,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/448#issuecomment-281775236:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/448#issuecomment-281775236,1,['Log'],['Logged']
Testability,Logged In: YES ; user_id=888972. The kekulize part is OK now. The remaining problems such ; as assignment of double bonds where they should be single ; is not a problem of the kekulize function. It is a problem of the ; PerceiveBondeOrder function. Fabien. Original comment by: fabfont,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775221:0,Log,Logged,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775221,1,['Log'],['Logged']
Testability,"Look at ```ob.obErrorLog.GetMessagesOfLevel(0)``` in combination with the information at http://openbabel.org/api/3.0/classOpenBabel_1_1OBMessageHandler.shtml. You should check this log, and then perhaps clear it each time.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2728#issuecomment-2407106536:182,log,log,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2728#issuecomment-2407106536,2,['log'],['log']
Testability,"Looks fine to me. However, if you depend on any functionality, it's no harm to write a test case to ensure that it keeps working as expected. Just a note that obfunctions.h is a placeholder for the final location of these methods, which is something we need to think about. Just for my own interest, how are you using these functions?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1697#issuecomment-346314725:87,test,test,87,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1697#issuecomment-346314725,1,['test'],['test']
Testability,"Looks good on linux. Closing. For the record, my test case is len(list(pybel.readfile(""cml"", ""3d.head.2.cml""))). The answer should be 2, and that's what I'm getting both on Linux (tested b1 snapshot) and on Windows (tested SVN). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779662:49,test,test,49,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779662,3,['test'],"['test', 'tested']"
Testability,"Looks good to me at first glance (I haven't tested). . Although, what do you think about only doing this for pybel? i.e. instead change `openbabel.py` to `openbabel/__init__.py`, so the existing `import openbabel` continues to work as before. That should break less existing code (but there may be other downsides I haven't thought of?). By the way, if you make the change as you currently have it, wouldn't you also need to change the imports within `pybel.py` itself (currently `import openbabel as ob`)? Either to a relative import (`from . import openbabel`) or absolute (`from openbabel import openbabel`).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1946#issuecomment-469715112:44,test,tested,44,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1946#issuecomment-469715112,1,['test'],['tested']
Testability,"Looks good to me, we'll just need to change the test itself. Thanks Noel!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1849#issuecomment-398899654:48,test,test,48,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1849#issuecomment-398899654,1,['test'],['test']
Testability,"Looks good. WriteString and ReadString unfortunately are historically 2nd class citizens compared to Convert(). My only query is regarding ""I didn't know if people called Write() multiple times with the same output file object"". This is how one writes out an SDF or SMI file, for example (see the code in pybel.Outputfile.write). Will this still work fine? I'm not sure if a multimol CML file works right now, but that'd be another testcase to consider.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455169506:432,test,testcase,432,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455169506,1,['test'],['testcase']
Testability,"Looks legit. When you say the test passes for you, are you matching the appveyor build (i.e. same OS and compiler version)?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/201#issuecomment-122254174:30,test,test,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/201#issuecomment-122254174,1,['test'],['test']
Testability,Marked closed. It cannot be tested as we don't have the original input file. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/849#issuecomment-281794363:28,test,tested,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/849#issuecomment-281794363,1,['test'],['tested']
Testability,"Maybe I am wrong, my speculation however is you would like to define by yourself which program should display the .svg generated Openbabel when running the GUI. I think the developers' choice for a web browser like Firefox was that these programs capable to display the .svg as an image rather than a text typically already are installed. Running Linux Debian 11 bullseye (branch testing) comprising both OpenBabel (version 3.1.0) as well as the graphical editor [Inkscape](https://inkscape.org/) (version 1.0.2) I use successfully the «display only» program of the later, `inkview` to inspect a single .svg by. `inkview example.svg &`. or to browse through a collection of .svg in a folder by. `inkview *.svg &`. As mentioned earlier [here](https://gitlab.com/inkscape/inbox/-/issues/3712#note_422339579), this works well for .svg generated by RDKit, but equally for .svg by OpenBabel. (For comparison, I attach reference data by both below.) Thus, if running `obgui` in Linux, I would welcome if it were possible to set a pointer like `/usr/bin/inkview %s` when instructing OpenBabel about which viewer to use. There are other programs to display .svg visually, too. Examples include [irfanview](https://www.irfanview.com/) if extended by the optional plugin; or [Xnview](https://www.xnview.com/en/xnviewmp/), and `display` of [ImageMagick](https://imagemagick.org/script/index.php). However, these often rasterize the display of the image; by consequence, the benefits scaling a vector image (crisp representation) may be lost. [RDKit_example_svg.zip](https://github.com/openbabel/openbabel/files/6056583/RDKit_example_svg.zip); [babel_test.zip](https://github.com/openbabel/openbabel/files/6056584/babel_test.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2323#issuecomment-787429625:380,test,testing,380,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2323#issuecomment-787429625,1,['test'],['testing']
Testability,"Maybe one of the CMakeLists.txt is not entirely correct and the coulombtest should only be compiled for the tests. Alternatively, the integrals are not always compiled in because they are compiled conditionally only.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1859#issuecomment-401598075:108,test,tests,108,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1859#issuecomment-401598075,1,['test'],['tests']
Testability,"Maybe we should also remove the extra check for CYGWIN on line 235. If I understood that comment correctly, this change should fix that bug as well, in a less definitive way (in case CYGWIN adds the missing symbol in the future...). But I don't have access to CYGWIN to test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2684#issuecomment-2014632858:270,test,test,270,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2684#issuecomment-2014632858,1,['test'],['test']
Testability,Mine most definitely shows the unit cell tests:; ```; Start 180: test_unitcell_1; 180/199 Test #180: test_unitcell_1 .................. Passed 0.01 sec; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612034679:41,test,tests,41,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612034679,2,"['Test', 'test']","['Test', 'tests']"
Testability,"Minor correction. You're right - I was wrong. Turns out that not having BABEL_LIBDIR set is different from setting it to the empty string. Anyway, I'll send you a PR to update this PR that incorporates @afonari's Python test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1826#issuecomment-397534434:220,test,test,220,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1826#issuecomment-397534434,1,['test'],['test']
Testability,My only suggestion would be to test for list of residue names/ids instead of just number of them. Other than that LGTM.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1811#issuecomment-381079592:31,test,test,31,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1811#issuecomment-381079592,1,['test'],['test']
Testability,"My openbabel on mingw is statically linked, so my tests are not really indicative. I'm not sure; it's even possible to have a dynamically linked openbabel on mingw. Anyhow, I moved libopenbabel.* and libinchi.*; to /usr/local/lib - everything still works.; In my opinion lib*.a should be in /usr/local/lib while lib*.dll should be together with the executables. At least this seems to be the way with the other packages. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1059#issuecomment-281797941:50,test,tests,50,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1059#issuecomment-281797941,1,['test'],['tests']
Testability,My preference is to keep the tests independent files rather than an archive. Otherwise it will be a pain for people to modify/extend the test sets - every small change will require updating the tarball.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535501846:29,test,tests,29,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-535501846,2,['test'],"['test', 'tests']"
Testability,My test file still fails with trunk. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802258:3,test,test,3,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802258,1,['test'],['test']
Testability,"ND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:4231,test,test,4231,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testbabel']"
Testability,"NG_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:7075,test,test,7075,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"NPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATAD",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:6648,test,test,6648,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testsym']"
Testability,"N\windows-vc2008\OBInchi\Release\BuildLog.htm""; OBInchi - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBJava: (skip - requires swig). ------ Build started: Project: OBJava, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Project : warning PRJ0018 : The following environment variables were not found:; $(JAVABASE); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBJava\Release\BuildLog.htm""; OBJava - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBMCDL:. ------ Build started: Project: OBMCDL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; MCDLformat.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMCDL\Release\BuildLog.htm""; OBMCDL - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBMoreFormats:. ------ Build started: Project: OBMoreFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; zindoformat.cpp; yasaraformat.cpp; xyzformat.cpp; xedformat.cpp; viewmolformat.cpp; unichemformat.cpp; turbomoleformat.cpp; tinkerformat.cpp; shelxformat.cpp; qchemformat.cpp; PQSformat.cpp; pcmodelformat.cpp; nwchemformat.cpp; msmsformat.cpp; msiformat.cpp; mpqcformat.cpp; mpdformat.cpp; mopacformat.cpp; moldenformat.cpp; mmodformat.cpp; Generating Code...; Compiling...; mmcifformat.cpp; jaguarformat.cpp; hinformat.cpp; gromos96format.cpp; ghemicalformat.cpp; gausszmatformat.cpp; gaussformat.cpp; gausscubeformat.cpp; ..\..\src\formats\gausscubeformat.cpp(576) : warning C4146: unary minus operator applie",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:6092,log,log,6092,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,New test passes:; ``` Start 26: test_carspacegroup_1; 25/178 Test #26: test_carspacegroup_1 ............. Passed 0.10 sec; Start 27: test_carspacegroup_2; 26/178 Test #27: test_carspacegroup_2 ............. Passed 0.53 sec; Start 28: test_carspacegroup_3; 27/178 Test #28: test_carspacegroup_3 ............. Passed 0.53 sec; Start 29: test_carspacegroup_4; 28/178 Test #29: test_carspacegroup_4 ............. Passed 0.53 sec; Start 30: test_cifspacegroup_1; 29/178 Test #30: test_cifspacegroup_1 ............. Passed 0.53 sec; Start 31: test_cifspacegroup_2; 30/178 Test #31: test_cifspacegroup_2 ............. Passed 0.54 sec; Start 32: test_cifspacegroup_3; 31/178 Test #32: test_cifspacegroup_3 ............. Passed 0.10 sec; Start 33: test_cifspacegroup_4; 32/178 Test #33: test_cifspacegroup_4 ............. Passed 0.54 sec; Start 34: test_cifspacegroup_5; 33/178 Test #34: test_cifspacegroup_5 ............. Passed 0.53 sec; Start 35: test_cifspacegroup_6; 34/178 Test #35: test_cifspacegroup_6 ............. Passed 0.53 sec; Start 36: test_cifspacegroup_7; 35/178 Test #36: test_cifspacegroup_7 ............. Passed 0.54 sec; Start 37: test_cifspacegroup_8; 36/178 Test #37: test_cifspacegroup_8 ............. Passed 0.58 sec; Start 38: test_cifspacegroup_9; 37/178 Test #38: test_cifspacegroup_9 ............. Passed 0.52 sec; Start 39: test_cifspacegroup_10; 38/178 Test #39: test_cifspacegroup_10 ............ Passed 0.53 sec; Start 40: test_cifspacegroup_11; 39/178 Test #40: test_cifspacegroup_11 ............ Passed 0.52 sec; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1799#issuecomment-374300276:4,test,test,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1799#issuecomment-374300276,16,"['Test', 'test']","['Test', 'test']"
Testability,New tests run and pass:; ``` ; Start 34: test_cifspacegroup_5; 33/164 Test #34: test_cifspacegroup_5 ............. Passed 0.63 sec; Start 35: test_cifspacegroup_6; 34/164 Test #35: test_cifspacegroup_6 ............. Passed 0.70 sec; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1558#issuecomment-294180325:4,test,tests,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1558#issuecomment-294180325,3,"['Test', 'test']","['Test', 'tests']"
Testability,Nice bisect. @fredrikw presumably the lookup logic is incorrect in your commit.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2696#issuecomment-2121757288:45,log,logic,45,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2696#issuecomment-2121757288,1,['log'],['logic']
Testability,"Nice testcase. I'll sort it out. On Tue, 2 Oct 2018 at 01:39, Ben Bucior <notifications@github.com> wrote:. > Some OBChemTsfm transformations, especially on radicals, can result in; > unexpected implicit hydrogen counts since PR#1576. I wrote up an example; > failure in the first commit of this PR, where assigning a charge of -1 to; > an atom can give it 255 implicit hydrogens under certain conditions.; >; > I suspect the underlying cause is unsigned integer arithmetic in; > phmodel.cpp:321 (possibly also 343). Subtraction of two unsigned ints gives; > an unsigned int--if the difference would be negative, then the result is; > wrapped back to UINT_MAX, e.g. printing (j->second - old_bond_order); > gives 4294967295 instead of -1. Then there's some truncation to fit in the; > unsigned char. But even if the overall expression gives the right answer; > most of the time, I think it would be clearer to be more explicit about the; > math, which would fix special cases like this bug.; >; > How should we adjust the line(s) of code in phmodel.cpp? We could; > explicitly typecast everything to a signed int then ensure that there are; > at least zero implicit hydrogens, but that seems verbose. @baoilleach; > <https://github.com/baoilleach> Please feel free to directly commit on my; > PR if you have any ideas. Of course we'll need to update the test case with; > the correct answer as well (not H255).; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/openbabel/openbabel/pull/1895; > Commit Summary; >; > - Demonstrate example of unsigned integer wrapping; >; > File Changes; >; > - *M* test/regressionstest.cpp; > <https://github.com/openbabel/openbabel/pull/1895/files#diff-0> (10); >; > Patch Links:; >; > - https://github.com/openbabel/openbabel/pull/1895.patch; > - https://github.com/openbabel/openbabel/pull/1895.diff; >; > —; > You are receiving this because you were mentioned.; > Reply to this email direc",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1895#issuecomment-426314886:5,test,testcase,5,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1895#issuecomment-426314886,2,['test'],['testcase']
Testability,No test file provided.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1103#issuecomment-304998640:3,test,test,3,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1103#issuecomment-304998640,1,['test'],['test']
Testability,"No test file provided. C60 works fine now, also with #1576. Marking as ""works for me"".",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/932#issuecomment-305693497:3,test,test,3,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/932#issuecomment-305693497,1,['test'],['test']
Testability,"No, I'm on linux. The test passes, but when I run it through valgrind there are all sorts of errors. I get the same errors even without the fix. I'll look into it a little. Might be interesting to run at least a subset of the tests through valgrind as part of the autovalidation process..",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/201#issuecomment-122260606:22,test,test,22,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/201#issuecomment-122260606,2,['test'],"['test', 'tests']"
Testability,"Noel, I think certainly the Molfile / SMILES bugs should be fixed with the stereo code. Should we make this bug into a new testcase?. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779570:123,test,testcase,123,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779570,1,['test'],['testcase']
Testability,"Note that some time after filing this bug, I had to compile Open Babel from trunk including generating the Java bindings on Windows. At that time, there was also a problem as discussed in [1]. Maybe that problem is also supposed to be fixed now? For now, I will stop the testing, but thanks for working on this!. [1] https://sourceforge.net/mailarchive/forum.php?thread_name=BANLkTik%3Dnv-R%2BfnSCiaC%2BH4Wd_jBE8HZgg%40mail.gmail.com&forum_name=openbabel-discuss. Original comment by: mkjensen",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800546:271,test,testing,271,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800546,1,['test'],['testing']
Testability,Note to self: fails on testbabel.py on the PDBQT test.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1849#issuecomment-396025404:23,test,testbabel,23,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1849#issuecomment-396025404,2,['test'],"['test', 'testbabel']"
Testability,"Note to self: the breaking change was https://github.com/openbabel/openbabel/commit/4094c68b87415889150377bd9dc419398ac78d8b#diff-d8fc0ac3a34a3eb74df28348ca3d0100 which ironically was a change to add support for reactions. It's a pretty major change unfortunately, but at least shows that the problem is not in OBConversion (for example). For the moment, I'll just fix the failing test. But I'll come back to this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1878#issuecomment-411376906:381,test,test,381,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1878#issuecomment-411376906,1,['test'],['test']
Testability,"Nothing appears to be working, in fact. obabel cannot find the formats. I think I'd like to add a test for this to the Travis builds.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/310#issuecomment-225457544:98,test,test,98,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/310#issuecomment-225457544,1,['test'],['test']
Testability,OBForceFieldGhemical Unit Test. Original comment by: @milkypostman,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778203:26,Test,Test,26,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/612#issuecomment-281778203,1,['Test'],['Test']
Testability,OK I left the package name as 'openbabel' and updated the README to explain more clearly that this is just the python bindings along with a link to the main Open Babel site. Here's what it will look like (on the test PyPI site): https://testpypi.python.org/pypi/openbabel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33468494:212,test,test,212,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33468494,4,['test'],"['test', 'testpypi']"
Testability,"OK, I finished a first draft of a patch. It seems to work fine for the supplied test molecule, but it would be good to test on other molecules as well - especially on molecules with a number of vibrations which is not a factor of 6 so the last block will not be filled completely. Also, I am not sure about possible scaling factors, e.g. I think Gaussian scales normal mode displacements according to the mode's reduced mass, while other quantum chemistry packages print out normalized eigenvectors and not the mass-weighted normal modes. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/869#issuecomment-281794920:80,test,test,80,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/869#issuecomment-281794920,2,['test'],['test']
Testability,"OK, found the source of the failing pcjson-test. There was a bug in that format, fixed in #2596. However, this test was not updated to match. I will add a PR for that...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988712025:43,test,test,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988712025,2,['test'],['test']
Testability,"OK, so I created a PR for my proposed change above (with corrected spelling for xprstdio_create). It seems to work in my testing at least.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1996#issuecomment-2014629169:121,test,testing,121,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1996#issuecomment-2014629169,1,['test'],['testing']
Testability,"OK, so, if I implement what I proposed earlier (--dump-logP-per-HA [filename]),; will it be integrated?; Given that filename will be of a new format (the one that I was printing on stdout).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/74#issuecomment-39693877:55,log,logP-per-HA,55,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/74#issuecomment-39693877,1,['log'],['logP-per-HA']
Testability,"OUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_D",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:9099,test,test,9099,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testfastsearch']"
Testability,"Oh, I see why I used maeparser's master: v1.2.2 (the latest) did not yet include the flag to disable the unit tests... Other than that, it is fine.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2064#issuecomment-552493628:110,test,tests,110,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2064#issuecomment-552493628,1,['test'],['tests']
Testability,"Ok, I have managed to find the `AddOption` method, where I can set extra options. My example python code looks as follows:. ```python; obConversion = openbabel.OBConversion() ; obConversion.SetInAndOutFormats('xyz', 'inchi'); # extra -xa flag to produce the inchi log; obConversion.AddOption('a', obConversion.OUTOPTIONS); mol = openbabel.OBMol(); obConversion.ReadString(mol, 'xyz coords....'); xyz = obConversion.WriteString(mol).rstrip(""\n""); ```; The code above works, where the inchi aux info is also returned thanks to passing the `-xa` flag. However, the code below, where I requested a 3D coordinates generation via `gen3D` option does not work. ```python; obConversion = openbabel.OBConversion() ; obConversion.SetInAndOutFormats('inchi', 'xyz'); obConversion.AddOption('gen3D', obConversion.GENOPTIONS); mol = openbabel.OBMol(); obConversion.ReadString(mol, 'InChI=1S/C2H6O/c1-2-3/h3H,2H2,1H3'); xyz = obConversion.WriteString(mol).rstrip(""\n""); ```. I would be grateful for any help.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2390#issuecomment-878317510:264,log,log,264,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2390#issuecomment-878317510,1,['log'],['log']
Testability,"Ok, I just tested the *SAME* code with mol-files and it works. So the bug has to be in the CML-parsing. The complete diff is this:. - obconversion.SetInFormat(""cml"");; + obconversion.SetInFormat(""mol"");; ; QDir directory(""data"");; - QStringList filelist = directory.entryList( QStringList(""*.cml"") );; + QStringList filelist = directory.entryList( QStringList(""*.mol"") );. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1060#issuecomment-281797977:11,test,tested,11,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1060#issuecomment-281797977,1,['test'],['tested']
Testability,"Ok, check this out. Let me know.; I tested using:. ```; ./bin/babel 9015328.cif test.pdb; ./bin/babel test.pdb test1.cif; ./bin/babel 9015328.cif test2.cif; diff test1.cif test2.cif ; 3c3; < _chemical_name_common 'test.pdb'; ---; > _chemical_name_common 'Wassonite'; 57,60c57,60; < Ti0 Ti 0.00000 0.00000 0.50002 1.000; < Ti1 Ti 0.00000 0.00000 0.37800 1.000; < S2 S 0.00000 0.00000 0.00000 1.000; < S3 S 0.00000 0.00000 0.22601 1.000; ---; > Ti1 Ti 0.00000 0.00000 0.50000 1.000; > Ti2 Ti 0.00000 0.00000 0.37800 1.000; > S1 S 0.00000 0.00000 0.00000 1.000; > S2 S 0.00000 0.00000 0.22600 1.000; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/252#issuecomment-178181409:36,test,tested,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/252#issuecomment-178181409,4,['test'],"['test', 'tested']"
Testability,"Okay, I tried out something new. I noticed that the top part of CMakeLists.txt and formats.cmake are almost identical. To avoid having people re-write the formats that they add into both (and consequently avoid the problem of people forgetting to do so), I copied over the top portion of CMakeLists.txt to formats.cmake, and now static and dynamic builds both include formats.cmake. There were different instructions for shared vs static builds for only a few formats. For Inchi, I just wrapped the part that was in the shared build with a ""if(BUILD_SHARED)"" and the static part in the ""elseif(WITH_STATIC_INCHI)"" section. For LIBXML2, they were identical, so I just made sure that it runs when the proper conditions are set. For GenBankFormat, that one was only built statically (this is because it uses a function from the fasta format, and it can't build dynamically because it doesn't link to it). So I just wrapped it in ""if(NOT BUILD_SHARED)"". What do you think?. I tested this for both dynamic and shared builds, and I was able to convert formats just fine with the resulting obabel executables (I tried cml, inchi, and xyz for both).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1622#issuecomment-326389270:972,test,tested,972,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1622#issuecomment-326389270,1,['test'],['tested']
Testability,"Okay, sounds like the heuristic will help here. > 3. Check the logic it uses for adding hydrogens, since there appear to currently be some cases where it creates unrealistic, nonphysical structures. I'll certainly take a look - there's probably also:. 4. Check the residue => bond order templates, which are ancient. I coded up something for Avogadro that downloads the LigandExpo SD files. I noticed that the Open Babel [`resdata.txt`](https://github.com/openbabel/openbabel/blob/master/data/resdata.txt) has some non-standard residues (presumably from MD simulations):; - ARZ (not the ARZ in Ligand Expo); - ASH (ditto); - CYX (looks like a modified CYS); - GLZ; - HED (But the OB resdata has double bonds for some reason - LigandExpo gives OH groups) ; - HID (some form of HIS); - HIE (ditto); - HIP (ditto); - LYZ (but this isn't 5-hydroxylysine, since only one OH); - PSE (somehow an amino acid); - PSM (also); - PTM; - PTY (similar to PTM). So while I have you here... are any of these commonly used in modern MD programs? If so, can you point me to some PDB or SD files with the authoritative atom names and bond orders?. If a residue name matches the template (e.g., ALA or HIS), bond orders will be assigned from `resdata.txt` for example for HIS:; ```; BOND NE2 CE1 2; BOND CE1 ND1 1; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2411#issuecomment-922539310:63,log,logic,63,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2411#issuecomment-922539310,1,['log'],['logic']
Testability,"On 28/07/15 17:20, baoilleach wrote:. > Can you email me a test file and associated command-line. I've tried a; > few files, but nothing I have seems to trigger the code.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/pull/200#issuecomment-125650738.; > ; > obtherm butane-g4.log.gz; > should do the trick. ## . David van der Spoel, Ph.D., Professor of Biology; Dept. of Cell & Molec. Biol., Uppsala University.; Box 596, 75124 Uppsala, Sweden. Phone: +46184714205.; spoel@xray.bmc.uu.se http://folding.bmc.uu.se",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200#issuecomment-125873222:59,test,test,59,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200#issuecomment-125873222,2,"['log', 'test']","['log', 'test']"
Testability,"On Fri, Aug 7, 2015 at 12:17 PM, Geoff Hutchison notifications@github.com; wrote:. > > The git head builds and installs a program ""obtautomer"", but the program; > > doesn't work.; > > ; > > obtautomer -c foo.smi; > > ; > > obtautomer: symbol lookup error: obtautomer: undefined symbol:; > > _ZN9OpenBabel17CanonicalTautomerEPNS_5OBMolE; > ; > Works just fine for me - indeed there's test/tautomertest.cpp that; > exercises this code:. How does that test code get run? Is it part of 'make test' from the build; directory or does it have to be run a different way? I didn't see it; getting exercised by 'make test', and the test/README didn't explain how to; run it manually. Thanks,. Jeff",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/216#issuecomment-128900181:383,test,test,383,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/216#issuecomment-128900181,5,['test'],['test']
Testability,"On Mon, Aug 3, 2015 at 8:02 AM, John May notifications@github.com wrote:. > I think (not tested),; > ; > https://github.com/openbabel/openbabel/blob/master/src/fingerprints/finger2.cpp#L176; > ; > is the problem as this makes the hashing asymetric (trailing bond order)?; > The rotation to find the max ring hash (in DoRings()) is then different; > depending on which way round you traverse the path. In the case here, the missing (or extra) fingerprint bit is not part of a; ring-fingerprint (there is a ring, but the closure of the ring is not part; of the fingerprint path. The 7th atom closes back to the 2nd one, not back; to the 1st one), so I don't think that that alone can be the answer. Also,; if the rotation algorithm was broken, I think that would lead much less; subtle problems than this one seems to be. Cheers,. Jeff",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/206#issuecomment-131960227:89,test,tested,89,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/206#issuecomment-131960227,1,['test'],['tested']
Testability,"On a set of about 300 local test cases, I get no NaN messages in the logs with current svn; so this is probably now fixed. Original comment by: twomack-gphl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/992#issuecomment-281796781:28,test,test,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/992#issuecomment-281796781,2,"['log', 'test']","['logs', 'test']"
Testability,"On pc Debian x86-64 with master sources updated today, I tried to reproduce the original pb.; Here what I got:; `julien@debian:~/projects/openbabel/build/bin$ ./babel ../../bugs/ten.smi -ofs`; `This will prepare an index of ../../bugs/ten.smi and may take some time...`; `It contains 10 molecules`; ` It took 0.077262 seconds`; `6 molecules converted`; `5 audit log messages `; `julien@debian:~/projects/openbabel/build/bin$ ./babel ../../bugs/ten.fs -ifs `-sNc2nc(c1ccccc1)nc3ccccc23' out.smi`; `1 candidates from fingerprint search phase`; `1 molecule converted`; `12 audit log messages `; So I don't reproduce the pb.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-381337823:362,log,log,362,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-381337823,2,['log'],['log']
Testability,"One more idea with this. Instead of containing imolecule.min.js with openbabel itself, we could install from the internet when the function is first used. Basically:. ```; if not installed:; get from openbabel/imolecule; cp imolecule.min.js notebook_install_directory; ```. It avoids the mess of having to figure out where to put this file, and still enables local usage after at least one remote use. If this is a better idea, I can revert `pybel/__init__.py` to `pybel.py`, delete `imolecule.min.js`, and change the pybel logic to accommodate this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/80#issuecomment-52943652:524,log,logic,524,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/80#issuecomment-52943652,1,['log'],['logic']
Testability,"Open Babel reads this SDF file just like Biovia Draw (I just tested with 2019 version). That is, there is an implicit hydrogen on the central nitrogen. In the other words, the error is in the original file - we read it correctly. . Again, where did this file come from? The link you provided has an SDF file with ""M CHG 2 21 1 22 -1"", which would have given the correct number of hydrogens. The file at the top of the bug report is missing this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1981#issuecomment-490233675:61,test,tested,61,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1981#issuecomment-490233675,1,['test'],['tested']
Testability,"OpenBabel offers the Fenske-Hall Z-Matrix only among the *output* formats ([reference](https://open-babel.readthedocs.io/en/latest/FileFormats/Fenske-Hall_Z-Matrix_format.html?highlight=fenske#fenske-hall-z-matrix-format-fh)). Thus, if you use OpenBabel by its GUI, you will find its entry among the formats of the right hand pull down menu. In addition to the GUI, you equally may run OpenBabel from from the CLI / terminal / cmd.exe. Departing from the SMILES string of benzene, for example, you may issue `obabel -:'c1ccccc1' --gen3d -ofh` to generate the following output:; ---- 8>< ---- begin output. 12; C 1; C 1 1.395; C 2 1.395 1 120.000; C 3 1.395 2 120.015 1 359.8; C 4 1.395 3 119.982 2 0.1; C 5 1.395 4 120.000 3 0.1; H 1 1.087 2 119.999 3 180.1; H 2 1.087 1 119.997 3 180.0; H 3 1.087 2 119.998 1 179.8; H 4 1.087 3 120.015 2 180.1; H 5 1.087 4 119.990 3 180.1; H 6 1.087 5 119.998 4 179.8; ---- 8>< ---- end output. for example in Linux Debian 11 (bullseye, branch testing) with OpenBabel 3.1.0. Using the same installation, as expected, the command `obabel -ixyz benzene.xyz -ofh -O benzene.txt` converts a .xyz file into a permanent record output, too. The .zip attached below documents the successful conversion. [fenske_conversion.zip](https://github.com/openbabel/openbabel/files/6045570/fenske_conversion.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2331#issuecomment-786188031:979,test,testing,979,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2331#issuecomment-786188031,1,['test'],['testing']
Testability,"OpenBabel possibly wonders why you submit a tetragonal unit cell (*a* .eq. *b* .ne. *c*, \alpha .eq. \beta .eq. \gamma .eq. 90 degrees) on one hand, and indicate the lowest of 230 space group symmetries possible, *P1* (monoclinic primitive, *a* .ne. *b* .ne. *c*, \alpha .ne. \beta .ne. \gamma .ne. 90 degrees). Experimental evidence (e.g., a Kurtz-Perry SHG test in contrast to a previously assigned space group symmetry) may justify to lower the space group symmetry. On occasion (conditions of crystal growth, experimental setup, etc.), deviations from high(er) symmetry do not express strongly enough to be recognized recording the diffraction data/refining crystallographic model *alone*, maybe especially in today's age of automated routine crystallography. Crystallographers however are grateful to know about the outcome of such experiments in advance, and to subsequently check multiple different crystallographic models accordingly (e.g., Hamilton *R*-factor ratio test). Obviously, it is not good to describe all structures in *P1*, either. You may find at least one *similar* model of tetragonal space group symmetry in the [COD](http://www.crystallography.net/cod/index.php) (e.g., entry [9000071](http://www.crystallography.net/cod/9000071.html)) without doubled *c* axis, too. Depending on the question addressed to the database, the search masks by [COD](http://www.crystallography.net/cod/search.html) and by Volodymyr Vreshch on [crystallography.io](https://crystallography.io/) partially overlap and complement each other. More similar to a plausible original .cif than entry COD 9000071:; https://www.crystallography.net/cod/1548819.html; https://www.crystallography.net/cod/4336391.html; https://www.crystallography.net/cod/1537412.html; https://www.crystallography.net/cod/1539951.html",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414#issuecomment-939935203:359,test,test,359,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-939935203,2,['test'],['test']
Testability,"Options are the way to go, but kekulization is triggered during reading of; mol2 and sdf currently:. > # obabel tmp.mol2 -onul ---errorlevel 3; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule Sybyl Mol2 format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > ; > # Ran OpenBabel::Clear Molecule; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Kekulize; > ; > # Ran OpenBabel::Kekulize; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule Sybyl Mol2 format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > Ran OpenBabel::Clear Molecule. Even more stuff is happening with SDF as it tries to correctly handle; stereo:. > # obabel tmp.mol -onul ---errorlevel 3; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule MDL MOL format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > ; > # Ran OpenBabel::Clear Molecule; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::AssignSpinMultiplicity; > ; > # Ran OpenBabel::AssignSpinMultiplicity; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Kekulize; > ; > # Ran OpenBabel::Kekulize; > ; > **\* Open Babel Audit Log in OpenBabel::StereoFrom3D; > ; > # Ran OpenBabel::StereoFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindSSSR; > ; > # Ran OpenBabel::FindSSSR; > ; > **\* Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; > ; > # Ran OpenBabel::AssignAromaticFlags; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindRingAtomsAndBonds; > ; > # Ran OpenBabel::FindRingAtomsAndBonds; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignImplicitValence; > ; > # Ran OpenBabel::AssignImplicitValence; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; > ; > # Ran OpenBabel::AssignHybridization; > ; > **\* Open Babel Audit Log in Ope",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524:172,Log,Log,172,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524,5,['Log'],['Log']
Testability,PDB file and Python code for testing purposes. Original comment by: kirkd,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/928#issuecomment-281795701:29,test,testing,29,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/928#issuecomment-281795701,1,['test'],['testing']
Testability,"PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBGUI\release\BuildLog.htm""; OBGUI - 3 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========. OBInchi:. ------ Build started: Project: OBInchi, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; inchiformat.cpp; getinchi.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBInchi\Release\BuildLog.htm""; OBInchi - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBJava: (skip - requires swig). ------ Build started: Project: OBJava, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Project : warning PRJ0018 : The following environment variables were not found:; $(JAVABASE); Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBJava\Release\BuildLog.htm""; OBJava - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBMCDL:. ------ Build started: Project: OBMCDL, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; MCDLformat.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMCDL\Release\BuildLog.htm""; OBMCDL - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBMoreFormats:. ------ Build started: Project: OBMoreFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; zindoformat.cpp; yasaraformat.cpp; xyzformat.cpp; xedformat.cpp; viewmolformat.cpp; u",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:5648,log,log,5648,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,"PHP bindings work. I'll think about adding testing procedure, although it will be a bit complicated. Since PHP5.3+ it doesn't allow loading of dynamic extensions, and location of php.ini differs from distro to distro.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/28#issuecomment-25085618:43,test,testing,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/28#issuecomment-25085618,1,['test'],['testing']
Testability,"Phooey, must be something in the MMFF94 code. The charge test tells me it might be electrostatic contributions. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797142:57,test,test,57,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797142,1,['test'],['test']
Testability,"Please compare the above structure with the [pubchem 2D structure](https://pubchem.ncbi.nlm.nih.gov/compound/5761#section=2D-Structure), showing, in green, a H which 'protrudes towards the camera'. The same H is depicted as 'protruding' above the ring with the NCH3 group in [the wikipedia entry](https://en.wikipedia.org/wiki/Lysergic_acid_diethylamide#/media/File:LSD-2D-skeletal-formula-and-3D-models.png). The Pubchem 3D shows the hydrogen in more detail. My point is that obabel's depiction of this molecule with the flags I used provides an image structure where this H 'protrudes' below the molecule, but in line with a C-C bond in the ring it is a member of, so you have both lines running in the same direction, one on top of the other, and although this may structurally possible, for the purposes of depicting the structure, it is less clear than the two references included above. Now this may be because I'm using obabel incorrectly, and if so, totally cool. But although I'm new to the notion of implicit and explicit hydrogens in the context of cheminformatics and 2D structure depictions, the flags I have used have hidden all the implicit hydrogens, but not the case H in point which appears to be nonetheless plotted, but in a way which is confusing, and irrespective, I was urged to log this as a bug by Geoff, so assumed it was therefore a bug. Therefore, I'm hoping that either; 1. Someone with authority admits this is a bug; 2. Someone suitably knowledgeable informs me I'm using the wrong flags (and hopefully graciously corrects me) and obabel produces the same structure but with this H sticking out on its own or; 3. Someone suitably knowledgeable informs me that this is a feature of obabel, and irrespective of the flags, I will not be able to plot this H in such a way that it 'sticks out' without being plotted over another bond in which case, I can close this issue and use a different tool for those structures I have to plot where I find this anomaly.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341712084:1302,log,log,1302,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341712084,2,['log'],['log']
Testability,"Please use sources from trunk, it was fixed (at least for Python). I'm not sure other bindings are affected by this issue, because they are handled by separate logic. Original comment by: @annulen",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1076#issuecomment-281800014:160,log,logic,160,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1076#issuecomment-281800014,1,['log'],['logic']
Testability,"Plugins, like the file formats, can have options. See for example https://openbabel.org/docs/dev/FileFormats/MOPAC_Cartesian_format.html, and the associated code https://github.com/openbabel/openbabel/blob/master/src/formats/mopacformat.cpp (lines 45 and 449, for example). Regarding testing, there is a test framework; it would be great if you could check in a test file along with a test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1491514716:284,test,testing,284,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1491514716,4,['test'],"['test', 'testing']"
Testability,Problem cannot be reproduced with Gaussian 16 B. It seems the formatted checkpoint file created is more extensive and contains dipole moments. This might be a bug in Gaussian 09 (re-tested with rev. E).,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1730#issuecomment-425932966:182,test,tested,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1730#issuecomment-425932966,1,['test'],['tested']
Testability,"RKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESS",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:4587,test,test,4587,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"Reading through, @ghutchis asked for a test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1981#issuecomment-514170701:39,test,test,39,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1981#issuecomment-514170701,1,['test'],['test']
Testability,"Redoing some unit tests with SWIG, will make a pull request on success",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2588#issuecomment-1540566582:18,test,tests,18,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2588#issuecomment-1540566582,1,['test'],['tests']
Testability,"Regarding a testcase, something in testbindings.py like (note: untested):; ```; def test1768:; mol = next(pybel.readstring(""gamout"", os.path.join(testfiles, ""testfile.gamout.gz""))).OBMol; self.assertEqual(22, mol.NumAtoms()); ```; or if you prefer C++, a similar test in regressions.cpp.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1798#issuecomment-378001491:12,test,testcase,12,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1798#issuecomment-378001491,6,"['assert', 'test']","['assertEqual', 'test', 'testbindings', 'testcase', 'testfile', 'testfiles']"
Testability,Rel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable: /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; 1/193 Test #1: unittest .........................***Not Run 0.00 sec. ```; After copying I get:; ```; Start 1: unittest; 1/193 Test #1: unittest ......................... Passed 0.09 sec; ```; I guess one potential difference could be that I'm aiming to do a local build in my home dire,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1664,test,test,1664,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,Reopening as r4453 causes pytest_kekule to fail...; http://my.cdash.org/testDetails.php?test=7299516&build=228235. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1129#issuecomment-281800957:72,test,testDetails,72,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1129#issuecomment-281800957,2,['test'],"['test', 'testDetails']"
Testability,Result of babel.exe test/files/forcefield.sdf -osmi on Win. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797140:20,test,test,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1013#issuecomment-281797140,1,['test'],['test']
Testability,Reverted r5002 in r5004 as it causes tests to fail. Need to revisit. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1207#issuecomment-281802703:37,test,tests,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1207#issuecomment-281802703,1,['test'],['tests']
Testability,"Rewording your post, you identified a detail *to improve* OpenBabel, didn't you?. Well in this case, I suggest to 1) check out a current snap shot of OpenBabel as a fork in your repositories, 2) enter the adjustments in question, and 3) file for a pull request. The third step triggers a large number of automatic tests to check the then (automatically) built executable if your changes accidentally broke some functionality, or not. It takes about 15--30 mn only to let these tests run in the background.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2453#issuecomment-1051107921:314,test,tests,314,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2453#issuecomment-1051107921,2,['test'],['tests']
Testability,Right but `-h` can come **before** the input files and it works. As in the examples I gave above and below again:. But these are all fine:; ```; obabel -ipdb -opdb -h -O test.pdb /path/to/imatinib.correct.CONECT.pdb; obabel -ipdb -h -opdb -O test.pdb /path/to/imatinib.correct.CONECT.pdb; obabel -h -ipdb -opdb -O test.pdb /path/to/imatinib.correct.CONECT.pdb; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-1236655670:170,test,test,170,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-1236655670,3,['test'],['test']
Testability,"Roger suggests instead -march=native which applies all of the relevant machine-specific optimisations (e.g. SSE4.2 might help Eigen) and so there would be no need to test for popcount. Using the -S option (show assembly) on a test program would allow us to see whether this works. Obviously, we would still need the possibility to turn off this functionality for people cross-compiling.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/184#issuecomment-105852813:166,test,test,166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/184#issuecomment-105852813,2,['test'],['test']
Testability,"Run ./configure; make That will properly build libopenbabel.dylib on Mac (or, presumably cross-compile for iPhone). Don't copy the babelconfig.h file from Windows -- Windows is not a POSIX-compliant operating system, so there are many workarounds. iPhone and Mac are UNIX-based systems and everything will be smooth. A quick Google search for configure script iPhone gave me these links:; http://pseudogreen.org/blog/iphone/; http://pseudogreen.org/bzr/sandbox/iphone/build_for_iphoneos. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794373:453,sandbox,sandbox,453,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/850#issuecomment-281794373,1,['sandbox'],['sandbox']
Testability,"S(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BAB",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:17053,test,test,17053,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testbindings']"
Testability,SMILES test database. Original comment by: vitalingo,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/819#issuecomment-281793871:7,test,test,7,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/819#issuecomment-281793871,1,['test'],['test']
Testability,SSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3176,Log,Log,3176,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability,"See the sample below. If you uncomment make_angles() after or before adding all the bonds the set of internal coordinates the iterator returns is different. . Edit: The following behavior explains why I wasn't getting all the angle ICs before since I was calling the angle iterator between adding all the bonds. However, I still don't get any added torsion ICs even after adding both bonds. . `. 	import pybel as pb; 	import openbabel as ob . 	filepath=""tests/SiH2H2.xyz""; 	mol=pb.readfile(""xyz"",filepath).next(); 	; 	def make_bonds(mol):; 	 nbonds=0; 	 bonds=[]; 	 bondd=[]; 	 ; 	 # => bond iter returns the bond object not tuple; 	 for bond in ob.OBMolBondIter(mol.OBMol):; 	 nbonds+=1; 	 a=bond.GetBeginAtomIdx()-1; 	 b=bond.GetEndAtomIdx()-1; 	 if a>b:; 	 bonds.append((a,b)); 	 else:; 	 bonds.append((b,a)); 	 bondd.append(bond.GetLength()) ; 	 print "" number of bonds is %i"" %nbonds; 	 print "" printing bonds""; 	 for n,bond in enumerate(bonds):; 	 print "" %s: %1.2f"" %(bond, bondd[n]); 	; 	def make_angles(mol):; 	 nangles=0; 	 angles=[]; 	 anglev=[]; 	 # => angle iter returns tuple; 	 for angle in ob.OBMolAngleIter(mol.OBMol):; 	 nangles+=1; 	 angles.append(angle); 	 anglev.append(get_angle(mol,angle[0],angle[1],angle[2])); 	 print "" number of angles is %i"" %nangles; 	 print "" printing angles""; 	 for n,angle in enumerate(angles):; 	 print "" %s: %1.2f"" %(angle, anglev[n]); 	; 	def get_angle(mol,i,j,k):; 	 a=mol.OBMol.GetAtom(i+1); 	 b=mol.OBMol.GetAtom(j+1); 	 c=mol.OBMol.GetAtom(k+1); 	 return mol.OBMol.GetAngle(b,a,c) #a is the vertex #in degrees; 	; 	print("" before adding bond1""); 	make_bonds(mol); 	#make_angles(mol) #=> uncomment here this produces a 'bug'!!!!; 	; 	print("" adding bond1""); 	bond1=(3, 0); 	isOkay = mol.OBMol.AddBond(bond1[0]+1,bond1[1]+1,1); 	; 	print "" Bond added okay? %r"" % isOkay; 	; 	print("" after adding bond1""); 	make_bonds(mol); 	#make_angles(mol) #=> uncomment here this produces a 'bug'!!!!; 	; 	; 	bond2=(2, 0); 	; 	isOkay = mol.OBMol.AddBond(bond2[0]",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1901#issuecomment-431152478:454,test,tests,454,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1901#issuecomment-431152478,1,['test'],['tests']
Testability,"See, that's my point. I don't have anything even close to that. Can you zip your source directory and post it for me? There is literally nothing in `test/CMakeFiles.txt` that would match `unittest`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-617225311:149,test,test,149,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-617225311,1,['test'],['test']
Testability,"Should I make a provisional patch in conda recipe to fix this issue for 2.4.1? I will try to reproduce it on linux, but I can only test it on Travis since I dont have a Mac at hand.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1802#issuecomment-375430660:131,test,test,131,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1802#issuecomment-375430660,1,['test'],['test']
Testability,"Since I don't have a Fedora binary, I can't test it. OTOH, it works on Mac and Windows, so I'd suggest this is a Fedora packaging issue. I'm marking this ""pending"" further comment from the poster. Without further comment, it will close in 14 days. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1039#issuecomment-281797731:44,test,test,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1039#issuecomment-281797731,1,['test'],['test']
Testability,"Since this would be relevant for 3.2, and we can't guarantee canonicalization across feature changes, I think we're okay wrt backwards compatibility of canonicalization. I would regenerate the result files as far as the tests.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842094722:220,test,tests,220,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842094722,1,['test'],['tests']
Testability,SizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable: /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; 1/193 Test #1: unittest .........................***Not Run 0.00 sec. ```; After copying I get:; ```; Start 1: unittest; 1/193 Test #1: unittest ......................... Passed 0.09 sec; ```; I guess one potential difference could be that I'm aiming to do a local build in my home directory. I build with:; ```; cmake .. -DCMAKE_INSTALL_PREFIX=/home/kevin/soft,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1736,test,test,1736,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,So I think this is safe to close @ghutchis but perhaps you can tell me (us) how to add this particular file for example to the unit tests? :),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/335#issuecomment-240519979:132,test,tests,132,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/335#issuecomment-240519979,1,['test'],['tests']
Testability,"So far, I used MOPAC's `.out` files for a conversion to, e.g., a `.pdb`; however, your suggestion to access the more compact `.arc` files instead of the former rises the question if your interest is for the coordinates, or / and (which?) of the parameters should be understood by openbabel. May you detail which ones are of interest for you?. One of the differences between the output files, beside the representation of the geometries (e.g., presence / absence of an atom number count), is `.arc`'s entry `HEAT OF FORMATION` which equates `.out`'s entry `FINAL HEAT OF FORMATION`. To ease your discussion with the developers, I add an archive including a MOPAC `.mop` input, as well as `.out` and `.arc` output files of a recent computation of mine. The equally present `.pdb` was generated on the fly by. `obabel -imopout comp434+_1-0.out -opdb -O probe.pdb`. with an installation of open babel (3.1.0) as offered in the repositories of Linux Debian 10 / branch «testing». [test_conversion.zip](https://github.com/openbabel/openbabel/files/5012332/test_conversion.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2253#issuecomment-667687045:965,test,testing,965,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2253#issuecomment-667687045,1,['test'],['testing']
Testability,So testing for very short bond lengths should do it...,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957802:3,test,testing,3,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957802,1,['test'],['testing']
Testability,"Some follow-ups:; * Running the following command in a conda-environment (Python 3.9) on Windows similarly give a logP of 0 and in addition prints out an error.; ```; obabel -ismi -:""CC(N)C1=CC2=C(C=C1)C=NC=C2"" -osmi --append logP; ==============================; *** Open Babel Error in OpenBabel::OBGroupContrib::ParseFile; Could not find contribution data file.; CC(N)c1cc2c(cc1)cncc2 0; 1 molecule converted; ```; * On my regular install (conda environment in wsl2-ubuntu) I get logP 2.95. So it seems like the problem is the GroupContrib file on the windows-conda.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2372#issuecomment-850391464:114,log,logP,114,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2372#issuecomment-850391464,3,['log'],['logP']
Testability,Some test molecules with charge / radical centres. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1167#issuecomment-281801573:5,test,test,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1167#issuecomment-281801573,1,['test'],['test']
Testability,"Sorry I should have provided a description. It's the ""degrees[atom_idx] = 0;"" that was missing before. Some of the elements in degrees were not being initialized, and further down I was testing the values.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1721#issuecomment-350031187:186,test,testing,186,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1721#issuecomment-350031187,1,['test'],['testing']
Testability,Still buggy in openbabel 3.1.1 with ORCA 5.0.1 output files (tested under Windows 10). Trying to force continuation after errors or specifying the number of structures (= number of optimization steps in the output) have no effects.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1361#issuecomment-922165144:61,test,tested,61,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1361#issuecomment-922165144,1,['test'],['tested']
Testability,"Strange bug. When I try a simple convert to xyz, the error seems to occur when calling ConnectTheDots():; ##############################; vincent@quad:~/dev/perso/trunk/TEST/ob_files$ ../bin/babel input.cif input.xyz; *** glibc detected *** ../bin/babel: double free or corruption (out): 0x0000000002241fb0 ***; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x78a8f)[0x7f4837d5ca8f]; /lib/x86_64-linux-gnu/libc.so.6(cfree+0x73)[0x7f4837d608e3]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x753)[0x7f48379cd393]; /home/vincent/dev/perso/trunk/TEST/lib/openbabel/2.3.90/cifformat.so(_ZN9OpenBabel9CIFFormat12ReadMoleculeEPNS_6OBBaseEPNS_12OBConversionE+0xb7a)[0x7f48274a871a]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel16OBMoleculeFormat18ReadChemObjectImplEPNS_12OBConversionEPNS_8OBFormatE+0xa0c)[0x7f4837a3795c]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEv+0x18e)[0x7f48379d55ce]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0x1e8)[0x7f48379d6608]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorISsSaISsEERSsS4_+0x1f41)[0x7f48379d9231]; ../bin/babel(main+0x103b)[0x4042fb]; ###################; I'm trying to run it through valgrind/valkyrie to see if I catch something... Original comment by: @vincefn",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800794:169,TEST,TEST,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800794,7,['TEST'],['TEST']
Testability,Strange that it didn't get exercised before - I think it fell through the cracks in Noel's efforts to make the tests run faster.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/216#issuecomment-128913406:111,test,tests,111,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/216#issuecomment-128913406,1,['test'],['tests']
Testability,"Sure! Added an example that fails. Demonstrated by four vector3 in the XY plane (third coordinate = 0.). I.e. the dihedral angle is then 180 degree. CalcTorsionAngle angle gives 179.974 as output. ; This test will fail in the current version of OB, but not here.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/49#issuecomment-29945557:204,test,test,204,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/49#issuecomment-29945557,1,['test'],['test']
Testability,Sure! I want to use Openbabel to test whether a smile molecule ('CCC1=C(SC2=C1SC3=C2N(CC)C4=C3C5=NSN=C5C6=C4N(CC)C7=C6SC8=C7SC(/C=C9C(C%10=C(C\9=C(C#N)/C#N)C=C(F)C(F)=C%10)=O)=C8CC)/C=C%11C(C%12=CC(F)=C(C=C%12C\%11=C(C#N)/C#N)F)=O') is symmetric. But I don't know how to do it with python API. What I want to know is that can you show an example to use openbabel to test the smile. Thank you for your help!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2622#issuecomment-1695493838:33,test,test,33,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2622#issuecomment-1695493838,2,['test'],['test']
Testability,"Sure, but I started by creating the test set. Any of the incremental changes were not sufficient to fully resolve all the failures. Nonetheless, I will try to do better in the future. I have learned that I need to rebase frequently to avoid headaches.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-533933434:36,test,test,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-533933434,2,['test'],['test']
Testability,"Sure. Looks fine. Seems to be getting complicated though. BTW, have you or Joshua tested on Linux?. Incidentally, the name of the project on PyPI conflicts with Open Babel itself. Why not call it openbabel-python like the Linux distros do.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33208895:82,test,tested,82,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33208895,1,['test'],['tested']
Testability,"TH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATA",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:4202,test,test,4202,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testbabel']"
Testability,TRP test file. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/404#issuecomment-281774441:4,test,test,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/404#issuecomment-281774441,1,['test'],['test']
Testability,Test SD file. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776726:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/533#issuecomment-281776726,1,['Test'],['Test']
Testability,Test case from ChEMBL. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1166#issuecomment-281801552:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1166#issuecomment-281801552,1,['Test'],['Test']
Testability,Test code for converting CML to CML. Original comment by: @Pansanel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/829#issuecomment-281794022:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/829#issuecomment-281794022,1,['Test'],['Test']
Testability,Test file is:; [618085.sdf.txt](https://github.com/openbabel/openbabel/files/1049894/618085.sdf.txt),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1166#issuecomment-305999900:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1166#issuecomment-305999900,1,['Test'],['Test']
Testability,Test molecule (ionized chlorobenzoyl). Original comment by: *anonymous,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1167#issuecomment-281801563:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1167#issuecomment-281801563,1,['Test'],['Test']
Testability,Test molecule. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/679#issuecomment-281779491:0,Test,Test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/679#issuecomment-281779491,1,['Test'],['Test']
Testability,Testing this PR will fail until the OB code is fixed to deal with charges during bond order assignment.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2385#issuecomment-859507642:0,Test,Testing,0,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2385#issuecomment-859507642,1,['Test'],['Testing']
Testability,"Thank you for adding label to cache. In the end of the letter you can see how this ""special"" file looks like. And the case is really common in solid state physics/chemistry. As you can see Ga and Si atoms occupied the same position. As for octree, my filling, that it can be waste of your time and it can make openbabel code heavy (one more dependence). The algorithm you implemented gives you the same performance O(N*logN). N you have when goes through all the atoms and logN - when insert item into std::set. The weak point is hash. To create it and after to compare. The best thing, IMHO, is to make the class in paragraph 1) which will be very fast (3 double comparison and one string). If you have few minutes of your time, please check the performance of looping though all atoms with hash created one and twice (add fake hash creating). For me it will be really interesting because I'm working know quite similar task. . #------------------------------------------------------------------------------; #$Date: 2013-05-05 14:21:46 +0000 (Sun, 05 May 2013) $; #$Revision: 85285 $; #$URL: file:///home/coder/svn-repositories/cod/cif/9/01/27/9012795.cif $; #------------------------------------------------------------------------------; #. # This file is available in the Crystallography Open Database (COD),. # http://www.crystallography.net/. The original data for this entry. # were provided the American Mineralogist Crystal Structure Database,. # http://rruff.geo.arizona.edu/AMS/amcsd.php. #. # The file may be used within the scientific community so long as. # proper attribution is given to the journal article from which the. # data were obtained. #; data_9012795; loop_; _publ_author_name; 'Belokoneva, E. L.'; 'Stefanovich, S. Y.'; 'Pisarevskii, Y. V.'; 'Mosunov, A. V.'; _publ_section_title; ;Refined structures of La3Ga5SiO14 and Pb3Ga2Ge4O14 and the crystal-chemical; regularities in the structure and properties of compounds of the langasite; family; ;; _journal_name_full 'Russian",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23724647:419,log,logN,419,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23724647,2,['log'],['logN']
Testability,"Thank you for merging. ; Would you please review #1753 as well? It is also related to reading Gaussian log files. . Thank you,. Mohammad. > On Mar 16, 2018, at 6:39 PM, Geoff Hutchison <notifications@github.com> wrote:; > ; > Thanks - sorry for the long review process on this one.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/openbabel/openbabel/pull/1752#issuecomment-373790306>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ANAeJFpr73Kh1tq2fCUiTWkZxaOrooa7ks5te_jjgaJpZM4RbbIO>.; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1752#issuecomment-373791891:103,log,log,103,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1752#issuecomment-373791891,1,['log'],['log']
Testability,"Thank you for you reply. I hope if when it generates incorrect stereochemistry, just skip it and don`t continue use the distance geometry method instead. Because when i test in my dataset, some smiles will spend 30 minuets or more with the distance geometry method. . But i used the some methods with set time out with signal or thread to skip the cycle of using the distance geometry method, it not work, I guess in the distance geometry method, are you using Multi-threaded concurrency to control it? How can i skip it.?Thank you very much.; ![image](https://user-images.githubusercontent.com/32425458/187105228-1c737132-a1e7-451d-89b6-fed664c37850.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229635309:169,test,test,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2530#issuecomment-1229635309,1,['test'],['test']
Testability,"Thank you so much for your nice explanation @nbehrnd. . Actually, I admit that I modified on purpose the SMILE to be sure that the aromatic flag was not well determined. Just to simplify, I have a list of molecules in MOL2 file that have been dearomatized with another software and openbabel didn't recognize the aromaticity by atoms (example attached, just change the extension). [test.txt](https://github.com/openbabel/openbabel/files/9055935/test.txt). Because of that, I want to know how to use ""AssignAromaticFlags"" function. . Nevertheless, you give me the idea to transform the molecule first to new smile and re-read it, like that it is working! However, not sure if the main problem with the MOL2 corresponds to the both ways to present the aromaticity (Kekule or lower-case) or it is a bug. `mol = next(pybel.readfile(""mol2"", ""./test.mol2""))`. `[int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol)]`. > [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]. `mol.write(""can"")`. > `O=C(N[C@@H](C(=O)N[C@H](CNC1=CC=C(C=C1)N1CCCCC1)CCC1=CC=CC=C1)CC1=CC=CC=C1)OCC1=CC=CC=C1\tBDB50137400\n`. `mol = pybel.readstring(""can"", ""O=C(N[C@@H](C(=O)N[C@H]CNC1=CC=C(C=C1)N1CCCCC1)CCC1=CC=CC=C1)CC1=CC=CC=C1)OCC1=CC=CC=C1"")`. `mol.OBMol.AddHydrogens()`. > True. `[int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol)]`. > [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176334793:382,test,test,382,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176334793,6,['test'],['test']
Testability,"Thank you! Much appreciated to have more roundtrip tests. IIRC, there was a long debate about the whole CONECT thing and I believe the decision was that Open Babel shouldn't output bond order via CONECT by default (i.e., non-standard files). I *thought* that the PDB writer was supposed to have an option to do that, but I don't see it in the code (e.g., -xb = write bond orders).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-514284808:51,test,tests,51,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-514284808,1,['test'],['tests']
Testability,"Thank you. I've had half-written email about this bug for a few weeks now, but since I didn't know what the patch was intended to do, I wasn't sure how to describe the problem. I've tested that this fixes it my issue, and it does.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/141#issuecomment-94322013:182,test,tested,182,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/141#issuecomment-94322013,1,['test'],['tested']
Testability,Thanks - can you add the Python code as a unit test? This way it doesn't happen again...,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1669#issuecomment-338194417:47,test,test,47,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1669#issuecomment-338194417,1,['test'],['test']
Testability,"Thanks for all the testing, but this is the correct behaviour. I wrote it up in the docs (point 2 near the bottom):; http://readthedocs.org/docs/open-babel/en/latest/WritePlugins/AddNewDescriptor.html#add-a-new-group-contribution-descriptor. It means that you need to put the most specific SMARTS string first. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1164#issuecomment-281801520:19,test,testing,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1164#issuecomment-281801520,1,['test'],['testing']
Testability,"Thanks for comment! Actually part of problems are described [different ECFP2 values for the same molecule](https://github.com/openbabel/openbabel/issues/1557#issue-218369553) here. Thats the actual reason why I could not recreate a fingerprint.; I also tested different BigEndian to LowEndian conversions. For whom it may interest, I came to to this code:. `; private void LoadFingerprint(); {; Func<uint, uint> Big2Little = (uint x) =>; {; byte[] bytes = BitConverter.GetBytes(x);; Array.Reverse(bytes, 0, bytes.Length);; return BitConverter.ToUInt32(bytes, 0);; };; Func<uint, uint> Big2Little2 = (uint x) =>; {; byte[] bytes = BitConverter.GetBytes(x);; return (uint)((bytes[0] << 24) | (bytes[1] << 16) | (bytes[2] << 8) | bytes[3]);; };; Func<uint, uint> Big2Little3 = (uint x) =>; {; return (x & 0x000000FF) << 24 |; (x & 0x0000FF00) << 8 |; (x & 0x00FF0000) >> 8 |; (x & 0xFF000000) >> 24;; };. bool isLittleEndian = BitConverter.IsLittleEndian;; const string formatter = ""{0,10}\t{1,10}\t{2,10}\t{3,10}\t{4,10}\t{5,10}""; ;; Debug.WriteLine(formatter, ""i"", ""file"", ""cmp"", ""B2L cmp"", ""parsed"", ""B2L parsed"");; Debug.WriteLine(formatter, Enumerable.Range(1, 6).Select(x => ""--------"").ToArray());. //Debug.WriteLine(""{0:X8}"", big2litte1);. string KeggSmiles = ""[C@H]1(n2c3c(nc2)c(ncn3)N)[C@@H]([C@@H]([C@H](O1)COP(=O)(OP(=O)(OC[C@H]1O[C@H]([C@@H]([C@@H]1O)O)N1C=C(CC=C1)C(=O)N)O)O)O)OP(=O)(O)O"";; string KeggECFP2 = @""f5137cdc f5137cdc f08b4928 e9e5be3f e9e5be3f e9e5be3f ; e99821a1 dfe49bdf dfe49bdf d6e0861f d6e0861f cef9a4bc ; cb69fe08 c885380c c6d3b3eb c38b3152 c38b3152 c36fb784 ; be842c9d bdb9a034 bd1c43c3 ac8924de ab904d16 aa139040 ; a795d505 9ce64676 96ad281d 7ef444f9 7ef444f9 7ef444f9 ; 7ef444f9 7be0ee02 79e96c34 782c4b73 6cdf4289 6cdf4289 ; 6cdf4289 6cdf4289 6cdf4289 6cdf4289 6cdf4289 6cdf4289 ; 69a2560a 69a2560a 69a2560a 69a2560a 636f8f6a 5faf488d ; 5faf488d 5faf488d 5d2209c6 5a9bc9d5 5888721b 5645f44d ; 54125a1f 53362b63 5299f401 4e8b69b6 4c4118f4 4b1ef6fb ; 4a7b5d42 4a7b5d42 ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2023#issuecomment-533148861:253,test,tested,253,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2023#issuecomment-533148861,1,['test'],['tested']
Testability,Thanks for commenting @baoilleach :). As long as the functions are exposed (or there is another clever way to easily calculate what I need) then I see no problem with where things are stored in the C++ API. I used to use the `GetImplicitValence()` method on atoms in combination with `GetValence()` to figure out whether or not an atom needed to be given a hydrogen. Such a situation can arise if one needed to cut (in openbabel technically remove) a bond between a QM region and MM region with FragIt. I found an old blogpost of mine on the subject from almost 6 years ago (http://pythonchem.blogspot.dk/2012/01/adding-hydrogen-atoms-is-no-mean-feat.html) which explains it with a slightly different angle. The code I used has barely changed. The updated code (see https://github.com/FragIt/fragit-main/blob/develop/src/qmmm.py#L139) needs to know how many bonds really would like to be present and the following code apparently satisfies my testcases. Hope that explains how I used the old (and new) functionality.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1697#issuecomment-346318770:943,test,testcases,943,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1697#issuecomment-346318770,1,['test'],['testcases']
Testability,"Thanks for explaining that to me. I've added an obabel test and guarded the pybel dependent test with a check for the presence of pybel (need this test to actually test the API). The new test revealed a bug with writing the segnames, so that has also been fixed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798847995:55,test,test,55,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2637#issuecomment-1798847995,5,['test'],['test']
Testability,"Thanks for pointing out that common Open Babel idiom. I had forgotten it. My patched doesn't touch Write(), only WriteString() and WriteFile(). Trying it out now I see that there is a problem. Here's my test code:; ```; >>> import pybel; >>> f = pybel.Outputfile(""cml"", ""spam.cml""); >>> f.write(pybel.readstring(""smi"", ""C"")); >>> f.write(pybel.readstring(""smi"", ""O"")); >>> f.close(); ```; On a version of Open Babel without my patch, the output is:; ```; <molecule>; <atomArray>; <atom id=""a1"" elementType=""C""/>; </atomArray>; </molecule>; <molecule>; <atomArray>; <atom id=""a1"" elementType=""O""/>; </atomArray>; </molecule>; ```; On a version of Open Babel with my patch, the output is:; ```; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""C"" hydrogenCount=""4""/>; </atomArray>; </molecule>; <?xml version=""1.0""?>; <molecule xmlns=""http://www.xml-cml.org/schema"">; <atomArray>; <atom id=""a1"" elementType=""O"" hydrogenCount=""2""/>; </atomArray>; </molecule>; ```; This is because pybel uses WriteFile() to open the file (which sets Index to 1), then calls Write() to re-use the already open file (keeping the Index at 1). This tells me two things: the CML format isn't designed to store multiple molecules, and Write() needs to increment the Index. I don't know how to handle the CML problem. I do know how to fix Write(). I'll update the patch accordingly, and add some test cases with of multi-record output.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455193987:203,test,test,203,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455193987,2,['test'],['test']
Testability,"Thanks for the detailed reply. I understand the source of the issue, but it seems very unpractical. I had never heard of the RAD specification and I don't know a 3D builder that uses it. I don't think anyone is going to go through the trouble of manually specifying radicals, especially with many structures. As a workaround, a unique identifier can be obtained with the `openbabel` InChI + the actual number of hydrogens in the input structure. Not ideal, but relatively simple. Adding some logging at least to indicate if the option has been registered and is valid would be helpful. It's unfortunate regarding the potential license issues, but it is true that the license is peculiar.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214210843:492,log,logging,492,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214210843,2,['log'],['logging']
Testability,"Thanks for the hint to use `echo` to pipe a SMILES string to OpenBabel. So far, I used a syntax like. `obabel -:""c1ccccc1"" --gen3d -oxyz`. to obtain the backbone of benzene. _For OpenBabel_, the input. `obabel -:'c1ccccc1' --gen3d -oxyz`. -- the SMILES string enclosed by single quotes instead -- yields a result equivalent to the other (just checked again, OpenBabel 3.1.0 running in Linux Debian 11/bullseye, testing) as long as there is no space between the colon and the leading single / double quote. The absolute (x,y,z) coordinates about the same atom may differ from each other for either one of the two approaches. But, this equally is the case running either one of the two commands again, and again, too. I attribute these small variations to the MMFF optimization OpenBabel uses to offer rapidly a geometry «good enough» to continue work elsewhere. This being said, I see the number of protons differ from how `-p <integer_value>` is used. In contrast to my anticipation, this number however varies, depending if `--gen3d` is used, or not. Your suggest to pipe the intermediate SMILES string adjusted for the pH value explicitly set _then used_ for `--gen3d` is the better, because safer approach. With the same setup, results indeed differ as shown below:. + formic acid in acid, as expected 2 protons:; > $ obabel -:'C(=O)O' -p 1 -oxyz; > 5; > ; > C 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > H 0.00000 0.00000 0.00000; > H 0.00000 0.00000 0.00000; > 1 molecule converted. + formiate, as expected only one proton:; > $ obabel -:'C(=O)O' -p 14 -oxyz; > 4; > ; > C 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > O 0.00000 0.00000 0.00000; > H 0.00000 0.00000 0.00000; > 1 molecule converted. + formiate, unexpectedly writing two protons:; > $ obabel -:'C(=O)O' -p 14 --gen3d -oxyz; > 5; > ; > C 1.10369 -0.02330 -0.04653; > O 0.44240 0.56154 -0.88483; > O 2.44963 -0.04201 -0.01971; > H 0.68143 -0.60513 0.78745; > H 2.79396 -0.56462 0.72",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823088435:411,test,testing,411,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823088435,1,['test'],['testing']
Testability,"Thanks so much, I've incorporated this into SVN trunk. It passes all unit tests, and I definitely agree with the motivation of the new code. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/941#issuecomment-281795879:74,test,tests,74,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/941#issuecomment-281795879,1,['test'],['tests']
Testability,"Thanks to your detailed analysis, I fixed the bug and added a unit test to the 2.2.x branch for the upcoming v2.2.2. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/905#issuecomment-281795416:67,test,test,67,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/905#issuecomment-281795416,1,['test'],['test']
Testability,"Thanks. Can you put that information either in a comment in the code, or add a test case (or both!).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1663#issuecomment-336140232:79,test,test,79,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1663#issuecomment-336140232,1,['test'],['test']
Testability,"Thanks. I haven't tested the C# bindings in a while, so this was a good incentive to make sure they worked.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/47#issuecomment-31610404:18,test,tested,18,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/47#issuecomment-31610404,1,['test'],['tested']
Testability,Thanks. It's not the default because it hasn't received the same level of testing.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/294#issuecomment-204206897:74,test,testing,74,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/294#issuecomment-204206897,1,['test'],['testing']
Testability,"Thanks. The fix makes sense - can you add a unit test. Otherwise, I'm sure this will creep back again.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2102#issuecomment-560179781:49,test,test,49,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2102#issuecomment-560179781,1,['test'],['test']
Testability,Thanks. Would you consider including a test case? Our test suite is run automatically and will let us know if a future commit would break your code.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1798#issuecomment-374848126:39,test,test,39,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1798#issuecomment-374848126,2,['test'],['test']
Testability,"That's great - thanks for checking. The OBConformerSearch stuff is all available now (just checked with the OB231 release on Windows). The README is completely out of date. I'll probably just delete it and update the main docs, as we can only maintain one set of docs. Regarding the LD_LIBRARY_PATH, other options are available: http://www.chilkatsoft.com/java-loadLibrary-MacOSX.asp. I haven't tested these though. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800548:395,test,tested,395,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1102#issuecomment-281800548,1,['test'],['tested']
Testability,"That's great, especially the speedup for the title. I think this will be widely used. Will test as soon as possible. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/987#issuecomment-281796672:91,test,test,91,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/987#issuecomment-281796672,1,['test'],['test']
Testability,That's strange... looks like it makes one of the tests seg fault.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/320#issuecomment-230034998:49,test,tests,49,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/320#issuecomment-230034998,1,['test'],['tests']
Testability,"That's the test cases done unless you can see something I'm missing. For the most part the new code is just special-casing the instance where an atom alias is Rn, where n is an integer. The existing code had several ways of entering such aliases - hence the multiple test cases.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/329#issuecomment-234390535:11,test,test,11,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/329#issuecomment-234390535,2,['test'],['test']
Testability,"The 'funny' thing is that my code does the same thing with many files (a for-loop) and when I am running my code 10 times it crashes at different molecules each time. So perhaps it is a racecondition or something. . My testfiles are taken from chem-file.sf.net (I copied them for testing):. http://gitorious.org/molecules/molecules/trees/master/data. My code is:. bool fileworks = obconversion.ReadFile(&mol, fullFileName);; if (fileworks){; qDebug() << ""Opened molecule "" << mol.GetTitle();; QString formula = QString::fromStdString( mol.GetFormula() );; }. See this link for reference:; http://gitorious.org/molecules/molecules/blobs/master/mainwindow.cpp#line35. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1060#issuecomment-281797971:219,test,testfiles,219,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1060#issuecomment-281797971,2,['test'],"['testfiles', 'testing']"
Testability,The 'smi' output format doesn't canonicalize the SMILES.; 'can' should be used instead. echo 'O=C1NC(=O)C2=CC=CC3=C2C1=CC=C3' | babel -ican -ocan; O=c1[nH]c(=O)c2cccc3cccc1c23; 1 molecule converted; 34 audit log messages. echo 'O=c1[nH]c(=O)c2cccc3c2c1ccc3' | babel -ican -ocan; O=c1[nH]c(=O)c2cccc3cccc1c23; 1 molecule converted; 1 info messages 33 audit log messages. Original comment by: georgetu,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/986#issuecomment-281796662:208,log,log,208,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/986#issuecomment-281796662,2,['log'],['log']
Testability,"The InChI string is built in layers. In the present case, remove the auxiliary layer, i.e. submit only. ```; InChI=1S/C25H35N3O2/c1-17-15-18-9-6-4-3-5-7-10-19-12-13-21(27-19)24(18)25(30-17)23(29-2)16-22(28-25)20-11-8-14-26-20/h8,11-14,17-18,23-24,27-28H,3-7,9-10,15-16H2,1-2H3/b22-20-/t17-,18-,23-,24-,25+/m0/s1; ```. prior the keyword `AuxInfo` to openbabel (for instance version 3.1.1 as packaged for Linux Debian 13/trixie) in a file with a command in a pattern like. ```shell; $ obabel -iinchi ./test.inchi -osmi; C[C@H]1C[C@@H]2CCCCCCCc3ccc([C@H]2[C@@]2([C@H](C/C(=C/4\C=CC=N4)/N2)OC)O1)[nH]3	; 1 molecule converted; ```. ----. Note; if there are only a few structure <-> InChI conversions, the [test page](https://iupac-inchi.github.io/InChI-Web-Demo/) can be useful for you:. ![regeneration](https://github.com/user-attachments/assets/90578c2f-94d1-4624-80c5-016f0154f8ba). From there you can save the result (floppy disk icon) for instance as SMILES string, or .mdl/sdf file. (Note however, that the first time accessing this page there can be some delay to load every bits and bolts into the cache of your browser, see [here](https://github.com/IUPAC-InChI/InChI-Web-Demo/issues/6)). Else InChI trusts distributes portable references executables [here](https://github.com/IUPAC-InChI/InChI/releases) for either combination of (32/64 bit) and (Linux/Windows) -- currently version 1.07.1*. A couple of Linuxes provide it by their repositories (e.g., [DebiChem](https://tracker.debian.org/pkg/inchi), else check with [repology](https://repology.org/project/inchi/packages)), too. \* Current planning schedules the release of InChI 1.07.2 close to the end of November / start of December 2024. I lack insight in openbabel's implementation if openbabel uses InChI 1.03 (published 2010, the last distributed under LGPL before adopting a bespoke license), or InChI 1.07.1 (August 2024, now MIT license), or one within this interval.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325:500,test,test,500,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2730#issuecomment-2447287325,2,['test'],['test']
Testability,"The MSVC tests work fine for me, so I'm going to mute them on appveyor and then trigger a rebuild.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1576#issuecomment-305856729:9,test,tests,9,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1576#issuecomment-305856729,1,['test'],['tests']
Testability,The Travis-CImake test with RUN_CTEST='true' fails for me even without the patch.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/295#issuecomment-206470018:18,test,test,18,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295#issuecomment-206470018,1,['test'],['test']
Testability,"The `.mol` file submitted to openbabel misses an indication that the molecule is a radical (`RAD`); otherwise, the algorithm seems to work fine. This applies at least for openbabel 3.1.1 as the repositories of Linux Debian 12/bookworm (testing) currently provides (i.e., Mar 29 2022 update). For example, let the test page of [ChemDraw JS](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) create a methyl radical (there is a button name to structure) with an input of «methyl radical». ![2022-08-13_chemdraw_js](https://user-images.githubusercontent.com/19709084/184505193-d7e5ba2c-83d6-425a-85ab-9e9000eca693.png). and subsequently, run structure -> get mol to obtain the following file:. ```; ACS Document 1996; ChemDraw08132219512D. 1 0 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 C 0 4 0 0 0 0 0 0 0 0 0 0; M RAD 1 1 2; M STY 1 1 DAT; M SLB 1 1 1; M SAL 1 1 1; M SDD 1 -1.3654 -1.2329 DA ALL 1 5; M SED 1 methyl radical; M END; ```. Pasting this content into `test.mol` and running. ```bash; $ obabel test.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```; does not lead to an additional fourth hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the conta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:236,test,testing,236,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100,3,['test'],"['test', 'testing']"
Testability,The appveyor test failure is not mine. The appveyor output appears to indicate a problem in the appveyor environment (can't find zlib). Is this a known issue?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2218#issuecomment-628668492:13,test,test,13,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2218#issuecomment-628668492,1,['test'],['test']
Testability,The babel data dir is specified by conda at ``BABEL_DATADIR=C:\Users\...\anaconda3\envs\...\share\openbabel`` and there is a `rigid-fragments.txt`. I have problems getting the binaries plus pip installed for 3.1.1. So I can not test this at the moment.; But I have installed the `OpenBabel-3.1.1-x64.exe` and in ``C:\Users\...\AppData\Roaming\OpenBabel-3.1.1\data`` there is also a `rigid-fragments.txt`.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209629547:228,test,test,228,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2522#issuecomment-1209629547,1,['test'],['test']
Testability,"The code looks fine. I think it's worth testing against ChemDraw and ChemDoodle import/export of Molfiles, but that can come later.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1626#issuecomment-328150184:40,test,testing,40,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1626#issuecomment-328150184,1,['test'],['testing']
Testability,"The coding style is fine -- we don't have a formal requirement. Most function names have initial capitals, but this is not rigorously enforced. (Some cleanup of coding style is underway for Open Babel 3.0.). I think the patch is generally good. The only problem is that if the element field is missing, it throws up a warning and can't set the atomic number. I think if the element field is missing (e.g., non-standard or just OLD files) it throw a warning and should use the previous (possibly buggy) logic. I've seen too many non-standard and old PDB files, which is why the code has a lot of patches. So if you can restore the old logic for missing element columns, I'll apply immediately. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/840#issuecomment-281794237:502,log,logic,502,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/840#issuecomment-281794237,2,['log'],['logic']
Testability,The commit looks fine - looks like there are some Windows compiler errors though:; https://ci.appveyor.com/project/baoilleach/openbabel/builds/26342761/messages; > 'vcnts' : unknown size test\addhtest.cpp 44 test_runner; > expected constant expression test\addhtest.cpp 44 ; > cannot allocate an array of constant size 0 test\addhtest.cpp 44,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2010#issuecomment-517824911:187,test,test,187,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2010#issuecomment-517824911,3,['test'],['test']
Testability,"The current code will always form aromatic rings first, so it has no chance of the structure you present. On the other hand, we're currently working on a new bond typing approach in my group, so if you don't mind, I'm going to add your molecule to the test set.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2255#issuecomment-655845834:252,test,test,252,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2255#issuecomment-655845834,1,['test'],['test']
Testability,"The example of the file prior the change can be found in nwchems QA tests. [ch4_zts.out](https://gist.github.com/xomachine/36f01755627c29829b86a3347c445513#file-ch4_zts-old-out-L405)([ch4_zts.out at the nwchem repository](https://raw.githubusercontent.com/jeffhammond/nwchem/master/QA/tests/ch4_zts/ch4_zts.out)); After the change, nwchem produces files like [this](https://gist.github.com/xomachine/bd1334f865ef519a26f3a55fc262cfb7#file-ch4_zts-new-out-L405).; To keep nwchem parser compatible with both of version I just removed '@' part of the zts calculation pattern. Latest commits should solve another problem introduced with https://github.com/jeffhammond/nwchem/commit/76d2b8c465fd291883f3b8533ccda0686193bb8b . The equal sign now is truncated from 'Bead number = X' pattern after adding 'zts' to the start for the string. (Line 147440 in [new ch4_zts.out](https://gist.github.com/xomachine/bd1334f865ef519a26f3a55fc262cfb7) and 178025 in [old ch4_zts.out](https://gist.github.com/xomachine/36f01755627c29829b86a3347c445513)). I'm not sure how to write the test for that case. Including outputs mentioned above to the repository probably is not a good idea.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1666#issuecomment-338429345:68,test,tests,68,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1666#issuecomment-338429345,3,['test'],"['test', 'tests']"
Testability,"The first leak is fixed, the second is still in place.; Tested with latest trunk version (4012). I found the 'delete pLineEndBuf;' in the destructor commented out. If I uncomment it all leaks are gone for my testcases (most are for-loops with heavy OBConversion instantiation and ReadString usage.); I didnt look through all the OBConversion code, there might be cases where a delete of the pLineEndBuf in destructor segfaults, but for a simple OBConversion instantiation and ReadString usage the issue remains. Original comment by: runz",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/980#issuecomment-281796566:56,Test,Tested,56,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/980#issuecomment-281796566,3,"['Test', 'test']","['Tested', 'testcases']"
Testability,The formatting is messed up of your mol file so I can't test it directly (you should attach it next time). It seems to work fine for me with the current version of OB. My guess is that you are using an old version.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2209#issuecomment-625766365:56,test,test,56,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2209#issuecomment-625766365,1,['test'],['test']
Testability,"The install prefix shouldn't have any effect. What I'll do is try a few more experiments (e.g. CMake 2.6, etc.) to see if I can trigger the test failures. If nothing works, I'll mark the bug as ""closed"" as there's nothing else we can do right now... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797800:140,test,test,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797800,1,['test'],['test']
Testability,The issue with the tests is simply that you need to set some environment variables. I'll write them up on the wiki tomorrow - Noel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796352:19,test,tests,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796352,2,['test'],['tests']
Testability,"The latest version is 2.3.1? I installed 2.3.1. ; Could you send me a link?. Yujie Tian. > On Mar 10, 2015, at 5:03 AM, baoilleach notifications@github.com wrote:; > ; > Try a more recent version of Open Babel.; > - Noel; > ; > On 9 March 2015 at 21:16, yujietia notifications@github.com wrote:; > ; > > Cmake Config is like following:; > > [image: screen shot 2015-03-09 at 5 14 26 pm]; > > https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png; > > [image: screen shot 2015-03-09 at 5 14 38 pm]; > > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > > ; > > And the Cmake Log is like following:; > > Using included inchi library.; > > checking for module 'cairo'; > > package 'cairo' not found; > > Could NOT find Cairo. PNG output will NOT be supported.; > > GUI will not be built; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning i",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:675,Log,Log,675,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,"['Log', 'test']","['Log', 'test']"
Testability,"The manpages were crafted from inspecting the source, Git log and/or by experimenting with their usage.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1678#issuecomment-339709689:58,log,log,58,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1678#issuecomment-339709689,1,['log'],['log']
Testability,The origin of the error was fixed in r4328 and Chris has made a new release. The test program compiles fine. Marking as closed... Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1046#issuecomment-281797825:81,test,test,81,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1046#issuecomment-281797825,1,['test'],['test']
Testability,"The patch replaces some calls to IsNear with IsNear_mod, but adds a new function IsNear. That code doesn't compile, 'unknown symbol IsNear_mod' or something like that. I think you've meant the new function to be called IsNear_mod and renamed it when I've tested your patch. Original comment by: kick_",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1325#issuecomment-281804562:255,test,tested,255,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1325#issuecomment-281804562,1,['test'],['tested']
Testability,"The problem isn't with the OBDotNet.dll. It's with openbabel_csharp.dll. If; I were you, I would search my computer for all instances of this file and; consider which is being found when you run your application. On Mon, 28 Oct 2019 at 13:52, xjjius <notifications@github.com> wrote:. > Yes. I imported OBDotNet.dll to my NET project from openbabel-3.0.0; > directory. The C# code was built successfully. But l got the the error; > message above when I try to run it. In the 2.4.1 version, the same code; > runs perfectly..; >; > I have also tried the the Java binding using the same method in; > openbabel-3.0.0. It worked will.; >; > A simple test code:; >; > class Program; > {; > static void Main(string[] args); > {; > string molFile = ""N(CNC1)CC1"";; > OBConversion conv = new OBConversion();; > conv.SetInFormat(""smi"");; > OBMol mol = new OBMol();; > conv.ReadString(mol, molFile);; > int numberAtoms = (int)mol.NumAtoms();; >; > for (int i = 1; i <= numberAtoms; i++); > {; > OBAtom atom = mol.GetAtom(i);; > string label = atom.GetAtomType();; > uint hetero = atom.GetHeteroDegree(); // new method name for GetHeteroValence(); >; > Console.WriteLine($""{label} : {hetero}"");; > }; >; > Console.ReadLine();; > }; > }; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2068?email_source=notifications&email_token=AAALCGPTRYKWOTDHRQMP6Y3QQ3VBXA5CNFSM4JFP3FMKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOECM6E7I#issuecomment-546955901>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGJGSAN5UJSSOUWLKWLQQ3VBXANCNFSM4JFP3FMA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2068#issuecomment-546998525:645,test,test,645,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2068#issuecomment-546998525,2,['test'],['test']
Testability,"The provision of multiple SMILES including an optional title as in the example by the documentation indeed was new for me; I did not spot this when `openbabel` transitioned to `obabel` years ago. On discovery with your initial question, I noticed the criterion `'title=*C'` will yield .true. for any title if upper case `C` is the last character. On the other hand, the input with an additional `*` trailing `C`; ```bash; obabel -:'CC CC' -:'CC 4C' -:'CC CCC' -osmi --filter 'title=*C*'; ```; yields; ```; CC	CC; CC	4C; CC	CCC; 3 molecules converted; ```; By similar token,; ```bash; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""*oh*""'; ```; processes all four entries,; ```; CO	oh; CO	aoh; CO	oaoh; CO	ohaoh; 4 molecules converted; ```; Inspired by this observation, I briefly thought about discerning the second entry, on one hand, and the third and fourth, on the other. At least with the installation available to me (version 3.1.1 as provided by Linux Debian 12/bookworm (branch testing)), a regex-based filter like either one of ; ```bash; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""^aoh""' # check a; obabel -:'CO oh' -:'CO aoh' -:'CO oaoh' -:'CO ohaoh' -osmi --filter 'title=""^aoh*""' # check b; ```; was not successful. So far, I'm not sure about this, so my question to you: based on how *you* use OpenBabel, do you think a regex-based search in the titles would be a useful addition to OpenBabel?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2444#issuecomment-1022381965:1015,test,testing,1015,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2444#issuecomment-1022381965,1,['test'],['testing']
Testability,The reason I didn’t bother with a test is because the result still isn’t right (those hydrogens shouldn’t be added).,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1981#issuecomment-489288414:34,test,test,34,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1981#issuecomment-489288414,1,['test'],['test']
Testability,"The stereo objects are correctly updated (with OBStereo::ImplicitRef) when the hydrogens are removed. However, the InChI format did not handle this correctly. The first 2 examples are actually a special case. The molecules are not stereogenic because there are two implicit neighbors. These should be (explicitly) ignored, similarly how C\[C@](C)(C)C would be handled. For tetrahedral stereochemistry the inchi format could only handle implicit refs if these were the first or second atom in the smiles string. This was easily extended to the general case. Fix with regression tests (pull request created): https://github.com/timvdm/openbabel/tree/issue2111",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572327357:577,test,tests,577,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572327357,1,['test'],['tests']
Testability,"The string `<TRIPOS>` seems missing, what is the origin of your data (database / program)? See, for example a run for methanol. ```shell; $ obabel -:""CO"" -h -opdbqt; REMARK Name = ; REMARK 1 active torsions:; REMARK status: ('A' for Active; 'I' for Inactive); REMARK 1 A between atoms: C_1 and O_2; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ROOT; ATOM 1 C UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 C ; ATOM 2 O UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 OA; ATOM 3 H UNL 1 0.000 0.000 0.000 0.00 0.00 +0.000 HD; ENDROOT; TORSDOF 0; 1 molecule converted; ```. This aside (edit of your file as `test.mol2` attached below), there might be an other problem in your data because. ```shell; $ obabel test.mol2 -p 7.4 --gen3d -opdbqt; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (Sirolimus); with Atom Ids as follows: 38 43; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```. irrespective to the addition of hydrogen atoms:. ```shell; $ obabel test.mol2 --gen3d -opdbqt; ==============================; *** Open Babel Warning in CorrectStereoAtoms; Could not correct 2 stereocenter(s) in this molecule (Sirolimus); with Atom Ids as follows: 38 43; Warning: Stereochemistry is wrong, using the distance geometry method instead; ```. [test.mol2.zip](https://github.com/openbabel/openbabel/files/13204022/test.mol2.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2638#issuecomment-1784900743:634,test,test,634,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2638#issuecomment-1784900743,5,['test'],['test']
Testability,"The structure of the file is correct. The problem is the connectivity of; the atoms. In the lmp file that I previously attached, some H atoms are; bonded with each other, instead of being bonded to C atoms.; The connectivity in the PDB file is correct. On Fri, Jan 29, 2016 at 7:49 PM, Geoff Hutchison <ghutchis@users.sf.net>; wrote:. > Can you be a bit more specific about ""not properly generated?"" I don't use; > LAMMPS much, so I'm not sure what you might want the lammps file to look; > like. Do you have an example of a LAMMPS file with bonding information?; > ------------------------------; >; > * [bugs:#972] <http://sourceforge.net/p/openbabel/bugs/972/> Bug; > generation of bonds lmpdat*; >; > *Status:* open; > *Group:* 2.3.x; > *Labels:* Lammps; > *Created:* Thu Jan 21, 2016 10:57 AM UTC by Sebastian ECHEVERRI RESTREPO; > *Last Updated:* Thu Jan 21, 2016 10:57 AM UTC; > *Owner:* nobody; > *Attachments:*; >; > - test.lmpdat; > <https://sourceforge.net/p/openbabel/bugs/972/attachment/test.lmpdat>; > (1.9 kB; application/octet-stream); > - test.pdb; > <https://sourceforge.net/p/openbabel/bugs/972/attachment/test.pdb>; > (1.5 kB; application/x-aportisdoc); >; > Dear developpers,; >; > I am using Open Babel 2.3.2 -- Nov 23 2015 -- 18:51:24; >; > I have found a bug in the generations of lammps data files.; >; > I am converting a PDB file to a lmpdat file using the command; > babel -i pdb test.pdb -o lmpdat test.lmpdat; >; > Although the generation of the atoms is done correctly, the bonds are not; > properly generated.; >; > Attached you will find the input and output files.; >; > Regards,; > Sebastián; > ------------------------------; >; > Sent from sourceforge.net because you indicated interest in; > https://sourceforge.net/p/openbabel/bugs/972/; >; > To unsubscribe from further messages, please visit; > https://sourceforge.net/auth/subscriptions/; >. -- ; Sebastian Echeverri Restrepo; http://tinyurl.com/sebastianecheverrir. Original comment by: sebas-n1",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1351#issuecomment-281804923:928,test,test,928,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1351#issuecomment-281804923,6,['test'],['test']
Testability,The symmetry code has recently been rewritten. Support for 0D MDL files has been implemented. I will add this particular molecule as a test example. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/897#issuecomment-281795325:135,test,test,135,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/897#issuecomment-281795325,1,['test'],['test']
Testability,The test failure is supposed to be caused by the difference between SMILES generate from the predicted molecule (https://github.com/openbabel/openbabel/blob/18b5248b4aca14a5c9f224df08520cc4819dbcbf/src/distgeom.cpp#L918) and SMILES generated from SDF made by obabel. I'm not sure why such a difference exists.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1875#issuecomment-547242242:4,test,test,4,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1875#issuecomment-547242242,1,['test'],['test']
Testability,"The test passes fine on Linux. I'm going to mark this as closed, pending further comment. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1051#issuecomment-281797866:4,test,test,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1051#issuecomment-281797866,1,['test'],['test']
Testability,"The thing that confuses me is that [cmake sets this to be true](https://cmake.org/cmake/help/v3.0/prop_tgt/POSITION_INDEPENDENT_CODE.html) when build_type is SHARED , which it is here. This is why [Fedora's build logs](https://kojipkgs.fedoraproject.org//packages/openbabel/2.4.1/5.fc26/data/logs/x86_64/build.log) already have -fPIC and work fine. And builds on my ubuntu system use -fPIC and work fine.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1575#issuecomment-304995189:213,log,logs,213,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1575#issuecomment-304995189,3,['log'],"['log', 'logs']"
Testability,"There are additional WIndows-specific build test failures related to the; Builder. On Tue, 29 Oct 2019 at 08:47, Eisuke Kawashima <notifications@github.com>; wrote:. > My machine is Debian 10.1, so probably this issue is specific to windows; > (is #2041 <https://github.com/openbabel/openbabel/issues/2041> related?); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2069?email_source=notifications&email_token=AAALCGNS2N62RGMFFP2ISADQQ72CVA5CNFSM4JGEEOYKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOECPWFKI#issuecomment-547316393>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGI52KPUFK35C2NAKRLQQ72CVANCNFSM4JGEEOYA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2069#issuecomment-547349969:44,test,test,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2069#issuecomment-547349969,1,['test'],['test']
Testability,"There are at least two solutions to resolve the issue reported. Either. - with file `test.smi` you present, provide the instruction in a *different sequence*, i.e. `obabel -ismi test.smi -osmi --separate`. because `-ismi` instructs OpenBabel the (then in the *following* defined) input file consists of content of the .smi syntax. This instruction actually works regardless if the file in question actually possesses the file extension `.smi`, or not. .or. - if you like to stay on the command line and don't want to create a `.smi` file in advance, type. `obabel -:'[Na].[Cl]' -osmi --separate`. to provide the SMILES string directly. *Caveat:* The instruction will fail if there is a space between the colon and the leading quote sign. If you want, you may enclose the SMILES string with double quotes. `obabel -:""[Na].[Cl]"" -osmi --separate`. to generate the same output. And yes, `-osmi` and `-oSMI` seem to be functionally equivalent to each other, too. As checked (OpenBabel 3.1.1, provided by the repositories of Linux Debian 11 / bullseye, branch testing), both approaches yield the result you anticipate:; ```; [Na]	#1; [Cl]	#2; 2 molecules converted ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2386#issuecomment-863078154:85,test,test,85,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2386#issuecomment-863078154,3,['test'],"['test', 'testing']"
Testability,"There is a failing clang test on the master now. I think it might have been this. I am unable to reproduce it, for the moment due to a lack of a Mac. Am trying with Linux. We'll see.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1870#issuecomment-411653219:25,test,test,25,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1870#issuecomment-411653219,1,['test'],['test']
Testability,"There is a live ebuild in science overlay, you can install latest development version using that. Though there is a bug currently which prevents installation of Python bindings for the live version because of the issue with sandbox, which I don't know how to resolve (have reported it on bugzilla).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/246#issuecomment-169038484:224,sandbox,sandbox,224,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/246#issuecomment-169038484,1,['sandbox'],['sandbox']
Testability,"There is a peculiar observation that I made which is the following.; For simple compounds like benzamidine, the older and newer versions give correct NetCharge, but for a slightly complex molecule like the one I attached in the first message in the thread, both methods give zero charge.; I'm planning to test a few cases like benzoate anion and other anions with 3-4 rings, heteroatoms i.e. drug-like molecules. Thanks for sharing the references and insightful comments. I will try to find time to read and get back here soon in case of questions.; Best regards.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916590615:305,test,test,305,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916590615,2,['test'],['test']
Testability,"There is a set of tests of the python bindings in the general test suite. (unittest-based, but still...) https://github.com/openbabel/openbabel/blob/master/test/testbindings.py",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2549#issuecomment-1321727481:18,test,tests,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2549#issuecomment-1321727481,4,['test'],"['test', 'testbindings', 'tests']"
Testability,"There's a test now... still don't like what hydrogens are added, but they at least don't have crazy bond lengths.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1981#issuecomment-514655654:10,test,test,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1981#issuecomment-514655654,1,['test'],['test']
Testability,"These should be fixed now, so please give master a test. I'm going to check if we can add an Appveyor MinGW build for testing.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/282#issuecomment-198028838:51,test,test,51,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/282#issuecomment-198028838,2,['test'],"['test', 'testing']"
Testability,"This bug also affects the methane.g03 testfile of Avogadro. The problem is the new code to read the Standard orientation instead of the input orientation. It goes through the file looking for the second occurance of ""orientation"". However, if the ""nosym"" keyword had been supplied, only the input orientation is printed. The while loop then runs till EOF - at which point the following rewind will no longer work (the abstract stream object is gone?), the stream pointer is still at ""-1"" and the subsequent parsing fails. I have changed this now so that the orientation keyword is read every time and if the string ""Symmetry turned off by external request."" is found, only the first orientation is read. It has to be parsed directly as the input orientation is printed before the ""Symmetry turned off"" string, and then all we would have for parsing would be that latter string. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1157#issuecomment-281801415:38,test,testfile,38,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1157#issuecomment-281801415,1,['test'],['testfile']
Testability,"This code doesn't compile on our test systems. See under ""All checks have failed"".",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/330#issuecomment-281664974:33,test,test,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/330#issuecomment-281664974,1,['test'],['test']
Testability,This could well have been fixed by revision 4836 (which is post 2.3.1). I have reproduced the problem with the cclib test file but I don't have trunk binaries around right now. I am building a binary with that revision now and will check. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802256:117,test,test,117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802256,1,['test'],['test']
Testability,"This could work too (both py2 and py3 compatible):; ```; import subprocess; import os. def test():; libdir_var = 'BABEL_LIBDIR'; libdir_val = os.environ.pop(libdir_var, None). msg = subprocess.check_output('echo ""CCC"" | ./bin/obabel -ismi -ocan', shell=True, stderr=subprocess.STDOUT, universal_newlines=True); assert 'cannot read input format!' in msg. if libdir_val:; os.environ[libdir_var] = libdir_val. test(). ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1826#issuecomment-384325285:91,test,test,91,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1826#issuecomment-384325285,3,"['assert', 'test']","['assert', 'test']"
Testability,"This does not happen with the current SVN -- I think there were a few stereo bugs with obgen a few months ago. Can you confirm it now works for you? To ensure the bug does not re-occur, I have added it to the test set. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/992#issuecomment-281796779:209,test,test,209,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/992#issuecomment-281796779,1,['test'],['test']
Testability,"This doesn't fix the underlying problem, it just hides it. There is a; logical error in the calling code. On 24 July 2018 at 22:25, Julien Nabet <notifications@github.com> wrote:. > Would the attached patch be ok? (At least I don't reproduce the problem); > Or it should be less naive than this?; > patch.txt <https://github.com/openbabel/openbabel/files/2225501/patch.txt>; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1866#issuecomment-407557333>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGeczUmn80E3akxNwwpHyBPppX13nks5uJ5C6gaJpZM4VBMsG>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1866#issuecomment-407718564:71,log,logical,71,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1866#issuecomment-407718564,1,['log'],['logical']
Testability,"This don't believe this is an Open Babel bug. I don't know what version of Cairo you're using or whether you have the appropriate devel packages for that. The errors in the log above are:. ```; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; ```. I'd suggest you run `ccmake .` in your build directory and clear out the lines for:; ```; CAIRO_INCLUDE_DIR ; CAIRO_LIBRARY ; ```. By unsetting them, you'll build a version of Open Babel without Cairo (PNG) support, but I can guarantee it will build. Otherwise, you'll need to sort out the libcairo errors.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838#issuecomment-391392437:173,log,log,173,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838#issuecomment-391392437,2,['log'],['log']
Testability,This is apparently because the avogadro testfile is doubled for some reason - there are two identical copies of the same data in methane.nwo. Thus closing this report. Original comment by: @mbanck,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/899#issuecomment-281795342:40,test,testfile,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/899#issuecomment-281795342,1,['test'],['testfile']
Testability,"This is certainly a bug (we need more testcases) but while it is true that the original code did handle ""CL"" and ""Chlorine"" among other synonyms, I decided during the rewrite that the GetAtomicNum should just contain the atomic symbol 'Cl'. This function should do one job and do it well. In other words, I'd prefer not to change a core function for the sake of a particular format, and instead just lower-case the 2nd letter before lookup.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1628#issuecomment-326527974:38,test,testcases,38,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1628#issuecomment-326527974,1,['test'],['testcases']
Testability,"This is finally fixed with some cis/trans stereo changes made by Noel. The code is in the latest 2.3 snapshot. Noel, we should add some InChI <-> SMILES test cases using Python to make sure this doesn't regress. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/816#issuecomment-281793819:153,test,test,153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/816#issuecomment-281793819,1,['test'],['test']
Testability,"This is fixed in the development version. Current release:; obtautomer test.smi gives ""C[NH+]c1ccccc1"". Dev version:; obtautomer test.smi gives ""C[NH2+]c1ccccc1""",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1692#issuecomment-344923752:71,test,test,71,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1692#issuecomment-344923752,2,['test'],['test']
Testability,This is fixed. I'm adding these SMILES to the coordinate generation unit test.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2146#issuecomment-625389216:73,test,test,73,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2146#issuecomment-625389216,1,['test'],['test']
Testability,"This is how you use OBGraphSym.GetSymmetry:; ```python; from openbabel import openbabel; mol = openbabel.OBMol(); conv = openbabel.OBConversion(); conv.ReadString(mol, 'C1CC2(C1)CC(CC3C2CCC4=CC(=O)CCC34C)O'); conv.SetInFormat('smi'); conv.ReadString(mol, 'C1CC2(C1)CC(CC3C2CCC4=CC(=O)CCC34C)O'); gsym = openbabel.OBGraphSym(mol); symmetry = openbabel.vectorUnsignedInt(); print(gsym.GetSymmetry(symmetry)); print(list(symmetry)); ```; The above will yield the following output:; ```; 19; [4, 10, 19, 10, 11, 14, 8, 17, 15, 9, 6, 16, 7, 13, 2, 5, 12, 18, 3, 1]; ```; I do believe that since the number of atoms in the SMILES and the number of symmetry classes (19) is the same that the molecule doesn't have any symmetry. But note that this is graph symmetries on an atom level. It doesn't mean that the entire molecule is symmetric even if you have symmetries in the graph. So I would advise you to test on several examples to find how to do it best. For the symmetric molecule `CCc(c1)cccc1CC` I get the following:; ```; >>> conv.ReadString(mol, 'CCc(c1)cccc1CC'); True; >>> gsym = openbabel.OBGraphSym(mol); >>> gsym.GetSymmetry(symmetry); 6; >>> list(symmetry); [1, 3, 6, 5, 4, 2, 4, 6, 3, 1]; ```; While `FC(F)(F)c1cc(C)ccc1` will give:; ```; >>> gsym.GetSymmetry(symmetry); 9; >>> mol.NumAtoms(); 11; >>> list(symmetry); [2, 9, 2, 2, 8, 6, 7, 1, 4, 3, 5]; ```; i.e. the three F atoms are symmetric but not the molecule as a whole...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2622#issuecomment-1698720165:899,test,test,899,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2622#issuecomment-1698720165,1,['test'],['test']
Testability,This is now a test case (in test/mol) and works fine. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/933#issuecomment-281795786:14,test,test,14,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/933#issuecomment-281795786,2,['test'],['test']
Testability,"This is now fixed in SVN 2-2-x branch, as of revision 3057. I will be making a 2.2.2b3 release, which will have the fix, if you'd like to test it. Thanks to Noel for the bug fix. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779290:138,test,test,138,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779290,1,['test'],['test']
Testability,"This is now fixed, and the SMILES are in the kekule python test. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/963#issuecomment-281796269:59,test,test,59,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/963#issuecomment-281796269,1,['test'],['test']
Testability,"This is probably the same problem you just logged in 3075063. . The main reason I stalled is that it involves making a decision on the semantics of this notation, and not just fixing a bug. Anyhow, time to grab the bull by the horns, as we say here... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/991#issuecomment-281796762:43,log,logged,43,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/991#issuecomment-281796762,1,['log'],['logged']
Testability,"This looks really nice, but it's breaking tests in `scripts/python` - which expects a `ValueError` for the invalid format over an `OSError` since the file doesn't exist. Can you please either update `scripts/python/examples/testpybel.py:; ```; def testRFformaterror(self):; """"""Test that invalid formats raise an error""""""; self.assertRaises(ValueError, self.RFformaterror); ```. Or in your code, you should be able to check for an invalid format and *then* do your check for files.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1203991340:42,test,tests,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1203991340,5,"['Test', 'assert', 'test']","['Test', 'assertRaises', 'testRFformaterror', 'testpybel', 'tests']"
Testability,This makes sense to me - a more consistent API and includes a test case.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2299#issuecomment-786040880:62,test,test,62,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2299#issuecomment-786040880,1,['test'],['test']
Testability,"This may be a little off topic but why does it matter where I add the `-h` parameter in the command line tool? If I put it at the end before the input file it just hangs, but anywhere else it works. Version: Open Babel 3.1.0 installed with Homebrew. This hangs:; ```; obabel -ipdb -opdb -O test.pdb -h /path/to/imatinib.correct.CONECT.pdb; ```. But these are all fine:; ```; obabel -ipdb -opdb -h -O test.pdb /path/to/imatinib.correct.CONECT.pdb; obabel -ipdb -h -opdb -O test.pdb /path/to/imatinib.correct.CONECT.pdb; obabel -h -ipdb -opdb -O test.pdb /path/to/imatinib.correct.CONECT.pdb; ```. Even putting `-h` at the very end works:; ```; obabel -ipdb -opdb -O test.pdb /path/to/imatinib.correct.CONECT.pdb -h; ```. Sounds like a `getopt` issue?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-1236469720:290,test,test,290,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-1236469720,5,['test'],['test']
Testability,"This problem doesn't only manifest on `arm64` or `ppc64le`, I'm seeing the exact same test failure on Intel Haswell and AMD Rome (zen2). I've worked around this by applying the following patch, under the assumption that this is OK to do (strictly comparing floating-point values doesn't seem like a good approach to me in general):. ```diff; --- openbabel-openbabel-3-1-1/test/testobconv_writers.py.orig	2022-01-12 20:12:01.480069896 +0100; +++ openbabel-openbabel-3-1-1/test/testobconv_writers.py	2022-01-12 20:12:12.180174159 +0100; @@ -2876,7 +2876,7 @@; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102012; + -1.4648575597102014; ],; ""y"": [; 1.5846,; @@ -2891,7 +2891,7 @@; 2.4146659588503769,; 4.189331679349326,; 4.052466878708012,; - -1.4648575597102012; + -1.4648575597102014; ],; ""style"": {; ""annotation"": [",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2246#issuecomment-1011407598:86,test,test,86,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2246#issuecomment-1011407598,3,['test'],['test']
Testability,"This really should have a test, e.g., in test/testbabel.py.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1818#issuecomment-387875127:26,test,test,26,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1818#issuecomment-387875127,3,['test'],"['test', 'testbabel']"
Testability,"This seems to be still broken as of v3.1.1 on arm64 architecture:; ```bash; $ echo 'O=C(C1=CN=CS1)N1C2CCC1CN(CC1CC3CCC1O3)C2' | obabel -i smi -o sdf --gen2D; ==============================; *** Open Babel Error in Convert; Convert failed with an exception; 0 molecules converted; ```; Test `testTemplates` of `test/testbindings.py` also fails on arm64. Should I open a separate issue, or can this be reused?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1851#issuecomment-940089499:285,Test,Test,285,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1851#issuecomment-940089499,4,"['Test', 'test']","['Test', 'test', 'testTemplates', 'testbindings']"
Testability,"This seems to happen in ConnectTheDots, see below when running with --errorlevel 4, within valgrind. Kekulize is called 126 times, and EndModify complains about being called once too many.. Vincent. valgrind babel ---errorlevel 4 Open_babel_crash.cif Open_babel_crash.xyz . *** Open Babel Audit Log in ReadChemObjectImpl ; OpenBabel::Read molecule Crystallographic Information File ; ============================== ; *** Open Babel Audit Log in ConnectTheDots ; Ran OpenBabel::ConnectTheDots ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize . [SNIP: call to Kekulize a total number of 126 times]. ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in AssignSpinMultiplicity ; Ran OpenBabel::AssignSpinMultiplicity ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence ; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Debugging Message in EndModify ; _mod is negative - EndModify() called too many times ; ============================== ; *** Open Babel Audit Log in WriteChemObjectImpl ; OpenBabel::Write molecule XYZ cartesian coordinates format ; 1 molecule converted . Original comment by: @vincefn",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/957#issuecomment-281796168:295,Log,Log,295,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/957#issuecomment-281796168,9,['Log'],['Log']
Testability,This took a while. Kekule analysis is tricky. This is now fixed in the 2.2.x branch for 2.2.2 and a unit test has been added to smilesmatch. The big problem is the assignment of single/double bonds has trouble with the biphenyl core -- it expects rings or fused rings. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/866#issuecomment-281794874:105,test,test,105,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/866#issuecomment-281794874,1,['test'],['test']
Testability,This was more of a 'testing the GitHub action system' patch more than anything else.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2163#issuecomment-611498548:20,test,testing,20,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2163#issuecomment-611498548,1,['test'],['testing']
Testability,This works in OB-3.0 with my testing with the fragment-based generator updates.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2061#issuecomment-552119010:29,test,testing,29,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2061#issuecomment-552119010,1,['test'],['testing']
Testability,"This works using OB 2.3 trunk (finally!). I'm marking this closed, and adding it as a test case. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/705#issuecomment-281779990:86,test,test,86,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/705#issuecomment-281779990,1,['test'],['test']
Testability,"This wouldn't be (so much) a problem _if_ one could create a user account on openbabel.org. Perhaps by intent, perhaps by accident, this is not possible (anymore?). Speaking for Firefox as provided by Linux Debian 12/bookworm (branch testing), i.e. 91.10.0esr (64-bit), the captcha function is not accepted/dysfunctional (note, the pad lock equally is crossed):. ![no_admission](https://user-images.githubusercontent.com/19709084/172888477-03db8b1c-860b-4f40-96fb-aa64bb27dbf8.png). Visiting the main page's [revision history](http://openbabel.org/w/index.php?title=Main_Page&action=history) suggests only the project's elders (like @ghutchis) might still possess the necessary credentials to improve the situation e.g., to enable the addition of new accounts, or hint if the web site's content may be transferred into a repository on GitHub. (Apparently, the content of openbabel.org [the web site] _is not_ within the current 0.3 GB repository of openbabel [the program].) In case the later were true, the backlog you mention possibly could be resolved:. ![main_history](https://user-images.githubusercontent.com/19709084/172887880-fad0d372-fd10-4197-8e6c-a07ff586cc74.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2479#issuecomment-1151323850:234,test,testing,234,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2479#issuecomment-1151323850,1,['test'],['testing']
Testability,"Those files don't provide the information I'm looking for. Could you; provide the output that appears on the screen when you run cmake? For; example, in a clean build directory, something like ""cmake ../openbabelsrc; |& tee cmake.out"". On 23 January 2018 at 20:56, Basil Miturich <notifications@github.com>; wrote:. > Yes, I did, so here are the logs: https://gist.github.com/bazitur/; > 7bebdb03456beec290f77db682b6d28a; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1764#issuecomment-359927500>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGUzzY4d9Eu610Vlx7jttW4hKK6ySks5tNkdkgaJpZM4RqM1E>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1764#issuecomment-359937298:346,log,logs,346,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1764#issuecomment-359937298,1,['log'],['logs']
Testability,"To emphasize, you've indicated that tests pass without `-march=native` and also pass on other chipsets. That seems like a weird optimizer / compiler bug, not a fault in Open Babel. AFAIK, there's no chipset-dependent code in our codebase.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2138#issuecomment-625399317:36,test,tests,36,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138#issuecomment-625399317,1,['test'],['tests']
Testability,"To further clarify the change, I'll add some before/after pics... Before:; ![test_wedge_before](https://user-images.githubusercontent.com/86855/26872833-3dba859e-4b78-11e7-80c6-d2e1deab0905.png). After:; ![testwedge](https://user-images.githubusercontent.com/86855/26872767-003be000-4b78-11e7-8d51-082920db33de.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1582#issuecomment-306748302:206,test,testwedge,206,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1582#issuecomment-306748302,1,['test'],['testwedge']
Testability,"To make the problem simple and clearly visible, I had separated the issue form CIF file usage and I will demonstrate it on .XYZ file.; [KAXWOV_cation_xyz.txt](https://github.com/openbabel/openbabel/files/15184837/KAXWOV_cation_xyz.txt); The file in attachment describes a cation separated from a CIF file.; I had proceed it by following command:; obabel.exe KAXWOV_cation.xyz -obgf -OKAXWOV_cation.bgf; The code had reported following issues:. _*** Open Babel Warning in OpenBabel::OBMol::PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is KAXWO; V)_. The generated .bgf file contains incorrect Dreading ff atom type assignments:; N_2 instead of N_R; C_2 instead of C_R; C_3 instead of C_R. After removing the hydrogen on the N atom, all works OK (can be tested by following file):; [KAXWOV_neutral_xyz.txt](https://github.com/openbabel/openbabel/files/15184893/KAXWOV_neutral_xyz.txt). I woul like to be able to specify the fragment is ionized or let OB to identify this.; And correctly identify the resonant bonds in the ionized fragments.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089772131:797,test,tested,797,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089772131,2,['test'],['tested']
Testability,"To really use the potentials of OpenBabel, the INSTALL and README files are important reads, otherwise people will miss big parts of the installation e.g. the bindings and depictions. If there should be an install script, I think it should at least ask for a few common installation options. Also, I've never had make test not fail. At all my attempts, at least test_ffgaff_1 fails so then the install script won't install anything anyway with no clear indication. (With no clear indication, I mean something in the lines of ""Test(s) failed so OpenBabel will not be installed, to force installation, type 'sudo make install'"").",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/24#issuecomment-24222682:318,test,test,318,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/24#issuecomment-24222682,3,"['Test', 'test']","['Test', 'test']"
Testability,"Travis is simply intended to guard against test failures. To actually deal with them, you need to reproduce the failure locally. There is more info on running the tests at: https://open-babel.readthedocs.io/en/latest/Contributing/Testing.html. This describes how to run an individual test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-462028992:43,test,test,43,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-462028992,7,"['Test', 'test']","['Testing', 'test', 'tests']"
Testability,Travis use Swig 2.0.x ([log](https://travis-ci.org/openbabel/openbabel/jobs/145775600#L254)) and all tests pass. Defining arbitrary variable should not mess with anything (unless it is not meant for anything else). I may try building OB with Swig 3.0.7 which is just before that feature was used if you think it will help.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/326#issuecomment-233747055:24,log,log,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/326#issuecomment-233747055,2,"['log', 'test']","['log', 'tests']"
Testability,"Try a more recent version of Open Babel.; - Noel. On 9 March 2015 at 21:16, yujietia notifications@github.com wrote:. > Cmake Config is like following:; > [image: screen shot 2015-03-09 at 5 14 26 pm]; > https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png; > [image: screen shot 2015-03-09 at 5 14 38 pm]; > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > ; > And the Cmake Log is like following:; > Using included inchi library.; > checking for module 'cairo'; > package 'cairo' not found; > Could NOT find Cairo. PNG output will NOT be supported.; > GUI will not be built; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake W",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:479,Log,Log,479,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,"['Log', 'test']","['Log', 'test']"
Testability,"Try to replicate the following. ```shell; $ obabel -:""c1ccccc1"" -O aromatic.cml -A; 1 molecule converted; $ obabel aromatic.cml -ocan; c1ccccc1	; 1 molecule converted; ```. as observed with OpenBabel (version 3.1.1 provided by Debian 13/trixie). ----. Side notes:. - dash, colon, pairwise single/double quotes in `-:""c1ccccc1""` already indicate to OpenBabel ""the input enclosed by the quotes is going to be a SMILES string"". - if the file extension is one described by the manual (cf. [readthedocs](https://open-babel.readthedocs.io/en/latest/)), the explicit indication can be dropped. Indeed, `-icml` in the instruction `obabel -icml aromatic_cml.txt -osmi` only was necessary because the input file *of .cml syntax* uses a non-conventional file extension for a .cml, namely `.txt`. By similar token: the definition `-O test.png` of file name and file format is more compact. - check if your workflow allows to substitute old openbabel 2.4.1 by a more recent version of the program. Pick an executable from the [release page](https://github.com/openbabel/openbabel/releases). Many Linux distributions equally provide a package, the hourly updated survey by [repology.org](https://repology.org/project/openbabel/packages) can be a guide:. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=4)](https://repology.org/project/openbabel/versions)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819519293:822,test,test,822,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819519293,2,['test'],['test']
Testability,"Two fails in the tests. One is in testobconv_writers.py and I cannot see how that test has ever worked since the x- and y-coordinates in the expected output are the same. (https://github.com/openbabel/openbabel/blob/32cf131444c1555c749b356dab44fb9fe275271f/test/testobconv_writers.py#L2882-L2888); The other is a bigger problem. It's in canonstabletest and the problem is that the failing test there isn't stable.; ```sh; $ BABEL_LIBDIR=build/lib/ build/bin/obabel -ismi -ocan -:""C1[C@@H]2C[C@H]3C[C@H]1C[C@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3""; C1[C@H]2C[C@@H]3C[C@H]1C[C@@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3; 1 molecule converted. $ BABEL_LIBDIR=build/lib/ build/bin/obabel -ismi -ocan -:""C1[C@H]2C[C@@H]3C[C@H]1C[C@@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3""; C1[C@@H]2C[C@H]3C[C@H]1C[C@](C2)(C3)Nc1nc(nc(n1)N[C@]12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3)NC12C[C@@H]3C[C@@H](C2)C[C@H](C1)C3; ```. So somehow, there seem to be an edge case in the canonicalization algo that the new SSSR ring code breaks. I don't know the canon code well enough to understand why atm but I will try to look into it. But maybe someone more versed into it can help out?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988685209:17,test,tests,17,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1988685209,4,['test'],"['test', 'tests']"
Testability,Two problems:; (1) Handling of chiral N in SMILES reader (writer too?) not working.; (2) Handling of chrial N in CML writer (probably writer too) not working. Here's the test case: [N@@](C1)(C2)C(C2)CC1. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/996#issuecomment-281796861:170,test,test,170,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/996#issuecomment-281796861,1,['test'],['test']
Testability,"Use obabel instead of babel, which is deprecated. The handling of option parameters is much better and many of the current formats and ops rely on this. (It is also safer and has SMILES input built in.) Your example would be:; ./bin/obabel -:CC -O test.png -xp 300. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1259#issuecomment-281803522:248,test,test,248,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1259#issuecomment-281803522,1,['test'],['test']
Testability,V2000 test file. Original comment by: @ergo70,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/981#issuecomment-281796578:6,test,test,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/981#issuecomment-281796578,1,['test'],['test']
Testability,"WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESS",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:7031,test,test,7031,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,We should have a unit test for parsing SMARTS -- including everything on these two pages:; http://www.daylight.com/dayhtml/doc/theory/theory.smarts.html; http://www.daylight.com/dayhtml_tutorials/languages/smarts/smarts_examples.html. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/530#issuecomment-281776672:22,test,test,22,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/530#issuecomment-281776672,1,['test'],['test']
Testability,"We should minimize dumping to std::cerr in production code. If needed, there's the error log, but this can just get removed. Thanks!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1056#issuecomment-383383710:89,log,log,89,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1056#issuecomment-383383710,1,['log'],['log']
Testability,"Weirdly enough, the smartstest is ok when I run it locally. I cannot find a good reason for that. I also get more changes than expected in the formalcharge test results file so something is up with that as well... I'll need to look more at this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842984206:156,test,test,156,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842984206,1,['test'],['test']
Testability,"Well, I don't think spglib has the transforms. I don't know completely how it works, but I know it detects symmetry in the crystal and then assigns a space group based off the symmetry. The transforms are usually used for generating a crystal with symmetry (like filling a unit cell). I was using Bilbao to find the transforms. For example, for space group 210, here is one: http://www.cryst.ehu.es/cgi-bin/cryst/programs/nph-getgen?what=text&gnum=210. However, it is somewhat tricky to do. Bilbao only has the space groups organized as the 230 fundamental space group numbers. In Open Babel and spglib, though, we have the space groups organized as 530 hall numbers (several of which are just a different representation of the same space group, which is why there are extra). In some cases, there is only one Hall number that matches an international number, so that is easy to pair. other cases may not be, though. For the tests I did, I was filling a unit cell with Avogadro using the Open Babel transforms, and then I was just detecting the space group with spglib to make sure the right space group was being detected. Anyways, I think it'd be better if we found somewhere else to get the transforms from so it'd be less complicated. I just don't know where yet...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/367#issuecomment-273293983:925,test,tests,925,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/367#issuecomment-273293983,1,['test'],['tests']
Testability,"Well, in that case, can you provide a link to (or attach) a particular test file for which your code fails? I can at least check that ReadFile works for me with the latest code. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1060#issuecomment-281797970:71,test,test,71,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1060#issuecomment-281797970,1,['test'],['test']
Testability,"Well, you're adding a new type of test (a shell-based one) so it'll take slightly more work than just adding another Python script.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1826#issuecomment-383619641:34,test,test,34,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1826#issuecomment-383619641,1,['test'],['test']
Testability,"What I can't figure out is why it's not working for you, when it's working fine for me...if I can't reproduce the problem at this end, it'll be difficult to sort it out... I have access to a Centos 5.5, 64-bit system. Using CMake 2.8.0, building in a separate directory from the source, and ensuring that there are no other OpenBabel installations on my system, and that ""env | grep -i babel"" yields nothing, ""make test"" passes with flying colours. Can you try doing this also? If we can pinpoint the source of the problem, we can sort it out. BTW, it's instructive to look into $OBBUILDDIR/test/CTestTestfile.cmake and see how the environment for the tests has been set. You could try going in there and setting some more variables and seeing if it affects the outcome of a particular test. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797795:415,test,test,415,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797795,4,['test'],"['test', 'tests']"
Testability,"What I'm trying to do is read in an arbitrary number of xyz files (thousands) each representing the reactants of a reaction. Then I have atom indices of the atoms that are involved in each reaction and I'm trying to generate a vector representation of each of those atoms using things like atomic #, # of connections, hybridization, and similar information of atoms it's bonded to. Then I aggregate the vector representations of the atoms involved in each reaction into a vector representation of each reaction as a whole. Then I use those reaction vector representations as data in a machine learning pipeline. Thanks @baoilleach, I tried keeping a reference to each reactants Molecule in my Reaction class (which I had been planning on doing anyway but hadn't remembered and hadn't needed to use yet) and that seems to keep all of the Atom instances valid at least in my initial tests involving what hadn't worked previously. Destroying all atoms owned by a Molecule in the Molecule's destructor seems like reasonable design but is that documented anywhere? If not should it be added somewhere (by me or someone else)?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602#issuecomment-317216423:881,test,tests,881,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602#issuecomment-317216423,2,['test'],['tests']
Testability,What changed so much with the `tests/CMakeLists.txt` file?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2430#issuecomment-1151668051:31,test,tests,31,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2430#issuecomment-1151668051,1,['test'],['tests']
Testability,What on earth is invoking FindSSSR on reading? :) I will try disabling those calls with a flag and benchmark it against ZINC,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193298054:99,benchmark,benchmark,99,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193298054,1,['benchmark'],['benchmark']
Testability,"What version of CMake are you using? The CMakeLists.txt file definitely sets up environment variables for ""make test"", so I'm curious if you have an older version of CMake or something. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797792:112,test,test,112,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797792,1,['test'],['test']
Testability,"When I build the openbabel in the docker, I got the following errors:; ````; [ 98%] Building CXX object test/CMakeFiles/test_runner.dir/obtest.cpp.o; [ 99%] Linking CXX executable ../bin/test_runner; /usr/local/lib/clang/11.0.0/lib/linux/libclang_rt.asan-x86_64.a(asan_linux.cpp.o): In function `__asan::AsanDoesNotSupportStaticLinkage()':; /src/llvm-project/compiler-rt/lib/asan/asan_linux.cpp:87: undefined reference to `_DYNAMIC'; clang-11: error: linker command failed with exit code 1 (use -v to see invocation); test/CMakeFiles/test_runner.dir/build.make:1736: recipe for target 'bin/test_runner' failed; make[2]: *** [bin/test_runner] Error 1; CMakeFiles/Makefile2:1179: recipe for target 'test/CMakeFiles/test_runner.dir/all' failed; make[1]: *** [test/CMakeFiles/test_runner.dir/all] Error 2; Makefile:138: recipe for target 'all' failed; make: *** [all] Error 2; ````. However when I build openbabel locally, I didn't get errors. Do you know the reasons?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2135#issuecomment-631752076:104,test,test,104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2135#issuecomment-631752076,4,['test'],['test']
Testability,"When generating ring systems (and this includes coordination metal-containing rings) the current code uses a database of existing fragments. It's a large database, but compounds outside the database will either fail or generate poor structures. I'm currently working on an alternate coordinate generation routine (using distance geometry) for metals and other fall-back cases. If you can upload a few structures, I will definitely use them for testing. I anticipate having some code available in a few weeks time. Thanks!. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1200#issuecomment-281802121:444,test,testing,444,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1200#issuecomment-281802121,1,['test'],['testing']
Testability,"While I agree there's a deeper underlying problem, this isn't lipstick either - it's basic defensive programming. I'd love to turn the test file into an actual unit test (e.g., checking if there's an atom v. close to the origin). @baoilleach and I agree that we'd like all PR to include regression tests and this seems like an important one.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1981#issuecomment-489287920:135,test,test,135,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1981#issuecomment-489287920,3,['test'],"['test', 'tests']"
Testability,"While not necessarily meaningful for the computation in NWChem (*vide infra*), I created an input file for NWChem with [gabedit](http://gabedit.sourceforge.net/), `methane.com`. Past running; ```; nwchem methane.com > methane.nwout; ```; to collect NWChem's results, the subsequent conversion by OpenBabel with; ```; obabel -inwo methane.nwout -oxyz -O methane.xyz; ```; did not yield an error by OpenBabel. (One may argue that 1.18 A for single-bond C-H bond length is a bit too long, of course.). Setup: NWChem 7.0.2, OpenBabel 3.1.1, both as provided by the repositories of Linux Debian 11/bullseye, branch testing. [testcase_methane.zip](https://github.com/openbabel/openbabel/files/6975327/testcase_methane.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2290#issuecomment-897593003:610,test,testing,610,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2290#issuecomment-897593003,1,['test'],['testing']
Testability,"Why @dkoes did not check in a .tar.gz or the minimum number of test files to exercise the fixes, I don't understand. On a fresh clone, it's taking 16 seconds to run ""git status"". The cloning itself took an excessive amount of time, several minutes, enough that it eats into the time I have for development. We need to get these files out of the master asap; in fact, I would go further and argue for their removal from the git history; the project will be lumbered with these forever going forward otherwise.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552078074:63,test,test,63,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552078074,1,['test'],['test']
Testability,"Why are you using the -C option? Without it everything seems to be working. On the other hand, I don't see why it wouldn't work with the option so it is probably still a bug. (btw, the command could look cleaner written as `obabel Conformer3D_CID_60961.sdf -O test.png -C` file formats are gathered from file suffix and options should come after the files)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2195#issuecomment-624547262:260,test,test,260,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2195#issuecomment-624547262,1,['test'],['test']
Testability,Why don't you send a pull request and I can test it here on my machine.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1591#issuecomment-311285452:44,test,test,44,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1591#issuecomment-311285452,1,['test'],['test']
Testability,"Will do. On Wed, 14 Mar 2018, 17:26 David Koes, <notifications@github.com> wrote:. > master is not generating correct atom types when outputting pdbqt files.; > This is because the pdbqt writer works on copies (possibly fragments) of; > the original molecule. The copies have their perception flags reset. By; > default, nonpolar hydrogens are removed when outputting pdbqt files. When; > the aromaticity flags are recomputed on the molecule with the deleted; > hydrogens, atoms that should be aromatic are not marked as such.; >; > Note that this is a regression from 2.4. My suspicion is that there is a; > difference in how the new aromatic typer is dealing with molecules with; > deleted hydrogens. I would appreciate it if @baoilleach; > <https://github.com/baoilleach> could take a look.; >; > I think this fix is good in addition to any fixes that may be made to the; > aromatic typer as it will prevent an unnecessary recomputation of; > aromaticity, but would appreciate feedback. A test case is provided; > (without the fix the phenyl ring of the tyrosine is not marked aromatic).; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/openbabel/openbabel/pull/1790; > Commit Summary; >; > - fix bug with pdbqt atom typing; > - pdbqt testcase; >; > File Changes; >; > - *M* src/formats/pdbqtformat.cpp; > <https://github.com/openbabel/openbabel/pull/1790/files#diff-0> (6); > - *M* test/testbabel.py; > <https://github.com/openbabel/openbabel/pull/1790/files#diff-1> (66); >; > Patch Links:; >; > - https://github.com/openbabel/openbabel/pull/1790.patch; > - https://github.com/openbabel/openbabel/pull/1790.diff; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1790>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGX4j8B-DR0oprbp0HUfAan5t-v-1ks5teVLCgaJpZM4Sq25L>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1790#issuecomment-373112606:992,test,test,992,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1790#issuecomment-373112606,8,['test'],"['test', 'testbabel', 'testcase']"
Testability,"Will test the latest revision on branch. Just FMI here, is this simply a case of a malformed input file or is it a bug in OB?. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/851#issuecomment-281794389:5,test,test,5,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/851#issuecomment-281794389,2,['test'],['test']
Testability,"With Open Babel as currently provided in Linux Debian 10 (release 3.1.0), I copy-pasted you test data into `IN.smi` and run the instruction you mention, i.e., `obabel -i smi IN.smi -o sdf -O OUT.sdf -e --gen3D --fastest`. Contrary to your report, I did not observe any error report at all. I then read the `.sdf` in an old instance of Jmol (14.6.4_2016.11.05), the viewer recognized the presence of four models. It was possible to display them one by one (on Jmol's console, this requires an input in pattern of `load ""OUT.sdf"" 1`) and the geometries do not look terribly skewed either. Equally, there was no problem to import the `.sdf`import into [DataWarrior](http://openmolecules.org/datawarrior/index.html) (version 5.2.1, 2020) to write a `.dwar` file either. It looks like the problem does not occur (any more) in a (more) recent version of Open Babel. [3D_generation.zip](https://github.com/openbabel/openbabel/files/5673497/3D_generation.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2291#issuecomment-742562924:92,test,test,92,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2291#issuecomment-742562924,1,['test'],['test']
Testability,"With master sources updated today, I don't reproduce this and got this:; Traceback (most recent call last):; File ""test.py"", line 5, in <module>; m = mols.next(); StopIteration; Perhaps it's thank to fix of #1607? Indeed, I had reproduce the segfault on #1607 and with the fix, I got now the same result.; Of course, it may be completely unrelated.; Anyone to give it a try?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1298#issuecomment-381323372:115,test,test,115,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1298#issuecomment-381323372,1,['test'],['test']
Testability,"With openbabel 3.1.0 as provided in Linux Debian 11 / bullseye (branch testing) and your .pdb I performed the default protonation, i.e. `obabel -ipdb ligand_1.pdb -h -opdb add_h.pdb`. The newly written .pdb lists all atoms including the label `4CO`, too. Contrasting to the original file submitted, the new .pdb has an additional trailing column about the atom type. For most of the protonation suggested, chemically speaking (number of protons added, spatial arrangement vs. C, N, O), the results look plausible. The protonation of the phosphates _may_ be different. In the export of the protonated structure as .svg, the P=O in the terminal monophosphate is represented differently, than the P=O in the diphosphates. Possibly this is influenced on the P-O bond lengths determined. For a test, I reduced the information available in the .pdb about the protonated ligand to a SMILES string and let the structure recreate; the then displayed structure recreated from the SMILES does look plausible. Maybe this result already is good enough for your work. Maybe further evidence about the protonation at the terminal phosphate is important for you -- I don't know? Attached below, a .zip archive about the processing of the data so far. [ligand_1_revision.zip](https://github.com/openbabel/openbabel/files/6055089/ligand_1_revision.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-787115422:71,test,testing,71,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-787115422,2,['test'],"['test', 'testing']"
Testability,"With openbabel sources updated today, I've got this; ASAN:DEADLYSIGNAL; '=================================================================; ==8994==ERROR: AddressSanitizer: SEGV on unknown address 0x55a2cecbd435 (pc 0x7fb250916094 bp 0x7fff308992b0 sp 0x7fff30898a28 T0); ==8994==The signal is caused by a WRITE memory access.; #0 0x7fb250916093 (/lib/x86_64-linux-gnu/libc.so.6+0xa1093); #1 0x7fb25188054d (/usr/lib/x86_64-linux-gnu/libasan.so.4+0x7754d); #2 0x7fb2512e6503 in std::char_traits<char>::copy(char*, char const*, unsigned long) /usr/include/c++/7/bits/char_traits.h:350; #3 0x7fb2512f014b in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long) /usr/include/c++/7/bits/basic_string.h:340; #4 0x7fb251320497 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned long, unsigned long, char const*, unsigned long) /usr/include/c++/7/bits/basic_string.tcc:440; #5 0x7fb25131fe5e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::assign(char const*) /usr/include/c++/7/bits/basic_string.h:1420; #6 0x7fb25131f7aa in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*) /usr/include/c++/7/bits/basic_string.h:694; #7 0x7fb2514f0a6f in OpenBabel::OBSmartsPattern::Init(char const*) /home/julien/projects/openbabel/src/parsmart.cpp:1722; #8 0x55a2cecbd2f5 in main /home/julien/projects/openbabel/testjul/leak.cpp:5; #9 0x7fb250897b16 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x22b16); #10 0x55a2cecbd169 in _start (/home/julien/projects/openbabel/testjul/leak+0x1169). AddressSanitizer can not provide additional info.; SUMMARY: AddressSanitizer: SEGV (/lib/x86_64-linux-gnu/libc.so.6+0xa1093) ; ==8994==ABORTING; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1869#issuecomment-407356434:1507,test,testjul,1507,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1869#issuecomment-407356434,2,['test'],['testjul']
Testability,"With this patch:; diff --git a/src/formats/textformat.cpp b/src/formats/textformat.cpp; index dacc572e..e5a7a982 100644; --- a/src/formats/textformat.cpp; +++ b/src/formats/textformat.cpp; @@ -59,6 +59,8 @@ public:; {; //It's really text, not a molecule.; OBText* pText = dynamic_cast<OBText*>(pOb);; + if (!pText); + return false;; string fileText(istreambuf_iterator<char>(*pConv->GetInStream()), istreambuf_iterator<char>());; pText->SetText(fileText);; return !fileText.empty();. I get this:; Traceback (most recent call last):; File ""test.py"", line 4, in <module>; drug_3d = pybel.readfile(""text"", ""/home/julien/projects/openbabel/jul/drug.txt"").next(); StopIteration. Would it be ok?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1607#issuecomment-380680778:539,test,test,539,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1607#issuecomment-380680778,1,['test'],['test']
Testability,"Without having your exact file to test on I cannot say for sure but my best suggestion would be to change the command to a piped two-stage command:; `obabel --addtotitle ""_"" --append ""CAT"" in.sdf -osdf | obabel -isdf -Oout.sdf --delete ""CAT""`; (I also changed the property name in `--append` to match the one in `--delete`, in my testing it made a difference if I used upper or lower case); ``` sh; ➜ obabel -:""CCC title"" --gen2D -osdf --property CAT=test | obabel -isdf --addtotitle ""_"" --append ""CAT"" -osdf | obabel -; isdf -osdf --delete ""CAT""; 1 molecule converted; 1 molecule converted; title_ test; OpenBabel11232311102D. 3 2 0 0 0 0 0 0 0 0999 V2000; 1.7321 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.8660 0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; -0.0000 -0.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 2 3 1 0 0 0 0; M END; $$$$; 1 molecule converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2647#issuecomment-1824626028:34,test,test,34,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2647#issuecomment-1824626028,4,['test'],"['test', 'testing']"
Testability,"Without working knowledge about the `.fasta` format, I simply provided a sequence like `ATCG`, requested to OpenBabel to convert this into a joined SMILES string (`-j`, or `--join`) and to write a `.sdf` for visual inspection in Jmol, too. The result is ambivalence. For one, the result already looks «DNA-like» in a ladder-like motif:. ![test](https://user-images.githubusercontent.com/19709084/116211601-831fc480-a733-11eb-8511-1cec5160032b.png). For the other side, the output is about _two_ molecules instead of the single one I anticipated. In the SMILES, this is marked by the dot laying on the floor; this syntax pattern is seen elsewhere, e.g., to describe co-crystals (presence of more than one molecule in a model, for example a remaining solvent molecule), too. So I speculate, this is / might be «common sense» for the typical user of `.fasta` files (which I'm not), not necessarily an error in OpenBabel. It can't be all day Fortran (for its typical leading safeguard instruction `implicit none`) ... [2021-04-27.zip](https://github.com/openbabel/openbabel/files/6383115/2021-04-27.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2359#issuecomment-827433933:339,test,test,339,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2359#issuecomment-827433933,2,['test'],['test']
Testability,Working on this. Is due to a logic error introduced when distgeom was added. Just testing the patch now...,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/305#issuecomment-225238898:29,log,logic,29,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/305#issuecomment-225238898,2,"['log', 'test']","['logic', 'testing']"
Testability,"Works fine on 64-bit Windows. Strangely though, only 2 molecules are converted either with 32-bit or 64-bit:. C:\Tools\openbabel\trunk\windows-vc2008\build64\Release>babel ten.smi -ofs; This will prepare an index of ten.smi and may take some time...; It contains 10 molecules; It took 0 seconds; 2 molecules converted; 31 audit log messages. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796335:328,log,log,328,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796335,1,['log'],['log']
Testability,"Works for me. Can you uninstall everything to do with OpenBabel (Python modules, GUIs, etc.), and download and reinstall the GUI, and repeat the conversion (I just did this myself). Could you take a screenshot and attach it to this bug? (If it doesn't attach, send an email to baoilleach@gmail.com and I'll attach it). If you want to monitor this bug, you should create an a/c on sourceforge, log in and click monitor at the top of this page. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/838#issuecomment-281794191:393,log,log,393,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/838#issuecomment-281794191,1,['log'],['log']
Testability,"Works just fine for me - indeed there's test/tautomertest.cpp that exercises this code:; [ghutchis@Alumina] tools: obtautomer -c triazole.smi ; c1cnn[n]1 . [ghutchis@Alumina] openbabel: git grep CanonicalTautomer; doc/openbabel.tags: <name>CanonicalTautomer</name>; doc/openbabel.tags: <name>CanonicalTautomer</name>; doc/openbabel.tags: <name>CanonicalTautomer</name>; include/openbabel/tautomer.h: void OBAPI CanonicalTautomer(OBMol *mol);; src/tautomer.cpp: void CanonicalTautomer(OBMol *mol); test/tautomertest.cpp:void testCanonicalTautomers(const std::string &smiles); test/tautomertest.cpp: CanonicalTautomer(&mol2);; test/tautomertest.cpp: testCanonicalTautomers(""Nc1nc2ncnc2c([nH]1)O"");; tools/obtautomer.cpp: CanonicalTautomer(&mol);",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/216#issuecomment-128799026:40,test,test,40,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/216#issuecomment-128799026,6,['test'],"['test', 'testCanonicalTautomers']"
Testability,"Would it be possible to add a slightly expanded documentation string, and a testfile/testcase? Also, doesn't a CMakeLists.txt need to updated somewhere?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1904#issuecomment-434634644:76,test,testfile,76,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1904#issuecomment-434634644,2,['test'],"['testcase', 'testfile']"
Testability,"Wow. Okay, digging into the code some more shows that the CML output *never* worked for Write(). The relevant code is the end of the code block:. ```; bool OBConversion::Write(OBBase* pOb, ostream* pos); {; if(pos) SetOutStream(pos, false);. if(!pOutFormat || !pOutput) return false;. SetOneObjectOnly(); //So that IsLast() returns true, which is important for XML formats; ```. The problem is that SetOneObjectOnly() sets m_IsLast to true, which means it cannot be used to write multiple objects (with a header/footer) correctly. The CML writer has:; ```; //If more than one molecule to be output, write <cml> at start and </cml> at end.; if(!_pxmlConv->IsLast()); {; xmlTextWriterStartElementNS(writer(), prefix, C_CML, uri);; uri=NULL;; }; ```; but that test for IsLast() returns m_IsLast which is true, so the !-inversion makes it false, so that branch is not taken. To make things worse, the footer can only be written if IsLast() is set, which must be done for the last molecule. This means Write() cannot be called until you know if it will be the last molecule to write, and manual users must specify that flag. That is, I see what you mean by ""second-class citizen."" The fundamental problem is that format API doesn't have header/footer generation as an independent task from writing a molecule, so there needs to be a way for the write to know if a molecule is the first or last molecule. It *appears* that the right solution is to:. - remove SetOneObjectOnly() from Write; - document the full Write API so people know when to SetLast(); - update pybel so it delays the last Write() until the close(), which is when it knows if the previous molecule really is the last molecule. A simple implementation of the last will either break code which expects that it's possible to modify outputfile.write(mol) after writing the molecule (which it can't because the outputfile hasn't yet written it), or require a copy. A more complex one might default to making a copy, with a flag to enable non-co",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455228991:757,test,test,757,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455228991,2,['test'],['test']
Testability,"Yeah, I know ther are no tests, I did this on my Windows machine at work and I'm not in complete agreement with the build system... I'll try to add a test shortly, a simple one is to run gen2D on [H+].CC[O-].CC[O-] and make sure that all atoms have unique x- and y-positions (that is the real problem, the long bonds are just a symptom). Before the change I get the molfile (notice the coordinates for the last three atoms):; ; OpenBabel09241813522D; ; 7 4 0 0 0 0 0 0 0 0999 V2000; 0.8210 -0.3437 0.0000 H 0 3 0 0 0 0 0 0 0 0 0 0; 9.9282 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 8.1962 -2.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 6.4641 -1.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; 6.4641 -6.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 6.4641 -6.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 6.4641 -6.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; 2 3 1 0 0 0 0; 3 4 1 0 0 0 0; 5 6 1 0 0 0 0; 6 7 1 0 0 0 0; M CHG 3 1 1 4 -1 7 -1; M END. After the change I got:. ```; OpenBabel09241813522D. 7 4 0 0 0 0 0 0 0 0999 V2000; 3.2321 -3.0000 0.0000 H 0 3 0 0 0 0 0 0 0 0 0 0; 4.9641 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 4.0981 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.2321 -0.5000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; 2.2321 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.3660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -1.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; 2 3 1 0 0 0 0; 3 4 1 0 0 0 0; 5 6 1 0 0 0 0; 6 7 1 0 0 0 0; M CHG 3 1 1 4 -1 7 -1; M END; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957463:25,test,tests,25,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957463,4,['test'],"['test', 'tests']"
Testability,"Yeah, I understand it's not the root cause, but having fixed umpteen of these kinds of bugs, I'd really, *really* appreciate having a new unit test of some sort to make sure this lipstick doesn't come back.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1981#issuecomment-514214170:143,test,test,143,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1981#issuecomment-514214170,1,['test'],['test']
Testability,"Yes - to clarify, it's not read correctly. In fact, it causes a segfault (array out of bounds) when run thru the debugger on Windows. I'm leaving the test file here to help someone fix the bug. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802250:150,test,test,150,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1205#issuecomment-281802250,1,['test'],['test']
Testability,Yes it looks fine. On both `master` and `mdlextension` I get the same 1 test fail:. ```; 100/134 Test #100: test_ffgaff_1 ....................***Failed Error regular expression found in output. Regex=[not ok] 1.03 sec; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/18#issuecomment-22385686:72,test,test,72,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/18#issuecomment-22385686,2,"['Test', 'test']","['Test', 'test']"
Testability,"Yes, I did, so here are the logs: https://gist.github.com/bazitur/7bebdb03456beec290f77db682b6d28a",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1764#issuecomment-359927500:28,log,logs,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1764#issuecomment-359927500,1,['log'],['logs']
Testability,"Yes, as of commit a345105b28173eb7da14ecd1e5beebe94140c6d7 this bug also occurs with the git master. I confirmed the crash under strace to make sure it was loading the latest built-from-source shared libraries rather than the version packaged by Ubuntu. I built this software under Ubuntu 14.04 64 bit. This is how I built it:. ```; sudo apt-get install swig. mkdir -p /opt/science/openbabel/src; cd /opt/science/openbabel/src; wget http://bitbucket.org/eigen/eigen/get/3.2.4.tar.bz2; tar xjvf 3.2.4.tar.bz2; git clone https://github.com/openbabel/openbabel.git; cd openbabel; mkdir build; cd build. cmake .. -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DCMAKE_INSTALL_PREFIX=/opt/science/openbabel -DEIGEN3_INCLUDE_DIR=/opt/science/openbabel/src/eigen-eigen-10219c95fe65; make -j 4; make test; make install; ```. All tests passed when I ran make test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/135#issuecomment-89671284:780,test,test,780,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/135#issuecomment-89671284,3,['test'],"['test', 'tests']"
Testability,"Yes, as the open-source continuation of OpenSolaris it still identifies as SunOS and defines __sun.; Likely this change will also fix Oracle Solaris, but I haven't tested that.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2187#issuecomment-622973050:164,test,tested,164,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2187#issuecomment-622973050,1,['test'],['tested']
Testability,"Yes, it was my typo and it indeed makes an index file without any problem. The substructure search in the original example seems to work fine but it produces a bunch of message as follows. I am using CMake 2.8.0 and recompile OpenBabel today in case there may be some changes in codes. However, I encounter the same error messages during the “make test” process. Once Noel update the wiki, I will set up environments and test it. Makio. ----------------. $ babel ten.fs -ifs -s'Nc2nc(c1ccccc1)nc3ccccc23' out.smi ; 1 candidates from fingerprint search phase. 1 molecule converted. 1 info messages 57 audit log messages . *** glibc detected *** babel: double free or corruption (!prev): 0x000000000755ed10 ***. ======= Backtrace: =========. /lib64/libc.so.6[0x3cd4a722ef]. /lib64/libc.so.6(cfree+0x4b)[0x3cd4a7273b]. /path/to/local/lib/libopenbabel.so.4[0x2b0dae442328]. /path/to/local/lib/libopenbabel.so.4[0x2b0dae5e6164]. /lib64/libc.so.6(__cxa_finalize+0x8e)[0x3cd4a3368e]. /path/to/local/lib/libopenbabel.so.4[0x2b0dae43ee56]. ======= Memory map: ========. 00400000-00405000 r-xp 00000000 fd:00 30900304 /path/to/local/bin/babel. 00605000-00606000 rw-p 00005000 fd:00 30900304 /path/to/local/bin/babel. 07516000-07610000 rw-p 07516000 00:00 0 . 3cd4600000-3cd461c000 r-xp 00000000 fd:00 90997106 /lib64/ld-2.5.so. 3cd481b000-3cd481c000 r--p 0001b000 fd:00 90997106 /lib64/ld-2.5.so. 3cd481c000-3cd481d000 rw-p 0001c000 fd:00 90997106 /lib64/ld-2.5.so. 3cd4a00000-3cd4b4d000 r-xp 00000000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4b4d000-3cd4d4d000 ---p 0014d000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4d4d000-3cd4d51000 r--p 0014d000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4d51000-3cd4d52000 rw-p 00151000 fd:00 90997107 /lib64/libc-2.5.so. 3cd4d52000-3cd4d57000 rw-p 3cd4d52000 00:00 0 . 3cd4e00000-3cd4e82000 r-xp 00000000 fd:00 90997114 /lib64/libm-2.5.so. 3cd4e82000-3cd5081000 ---p 00082000 fd:00 90997114 /lib64/libm-2.5.so. 3cd5081000-3cd5082000 r--p 00081000 fd:00 90997114 /lib64/libm-2.5.so. ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354:348,test,test,348,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796354,3,"['log', 'test']","['log', 'test']"
Testability,"Yes, that is exactly the issue. How am I supposed to sort and compare torsions if the pathing is stochastic and not systematic? Surely, it should start at atom 1 and proceed logically to 2, then 3, and so forth? . I'm coding in Linux, as I have no experience coding in Python, and having to write a code to flip all those fields and compare would be a pain for something that shouldn't be a problem to begin with.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814461528:174,log,logically,174,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2644#issuecomment-1814461528,1,['log'],['logically']
Testability,"Yes. I imported OBDotNet.dll to my NET project from openbabel-3.0.0 directory. The C# code was built successfully. But l got the the error message above when I try to run it. In the 2.4.1 version, the same code runs perfectly.. I have also tried the the Java binding using the same method in openbabel-3.0.0. It worked will. . The test code. class Program; {; static void Main(string[] args); {; string molFile = ""N(CNC1)CC1"";; OBConversion conv = new OBConversion();; conv.SetInFormat(""smi"");; OBMol mol = new OBMol();; conv.ReadString(mol, molFile);; int numberAtoms = (int)mol.NumAtoms();; for (int i = 1; i <= numberAtoms; i++); {; OBAtom atom = mol.GetAtom(i);; string label = atom.GetAtomType();; uint hetero = atom.GetHeteroDegree(); // new method name for GetHeteroValence(); Console.WriteLine($""{label} : {hetero}"");; }; Console.ReadLine();; }; }",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2068#issuecomment-546955901:331,test,test,331,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2068#issuecomment-546955901,1,['test'],['test']
Testability,"You can see from Travis that ""make test"" works just fine, e.g.; https://travis-ci.org/openbabel/openbabel/builds/587511901",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2046#issuecomment-534708275:35,test,test,35,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2046#issuecomment-534708275,1,['test'],['test']
Testability,You can test with :; babel -ipdb dipep.pdb -opdb dipep2.pdb . Original comment by: lleell00,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/840#issuecomment-281794235:8,test,test,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/840#issuecomment-281794235,1,['test'],['test']
Testability,"You could have used mol.draw(show=False, update=True). On 24 January 2018 at 16:55, eloyfelix <notifications@github.com> wrote:. > I wanted to generate molfile with 2d coordinates from SMILES and I was not; > able to do it in a nice way using pybel.; >; > The only option I had was doing something like this:; >; > from pybel import _operations; > _operations['gen2D'].Do(mol.OBMol); >; > I think that would be nicer to have a mol.make2D() function.; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/openbabel/openbabel/pull/1765; > Commit Summary; >; > - add Molecule.make2D function; >; > File Changes; >; > - *M* scripts/python/examples/testpybel.py; > <https://github.com/openbabel/openbabel/pull/1765/files#diff-0> (10); > - *M* scripts/python/pybel.py; > <https://github.com/openbabel/openbabel/pull/1765/files#diff-1> (9); >; > Patch Links:; >; > - https://github.com/openbabel/openbabel/pull/1765.patch; > - https://github.com/openbabel/openbabel/pull/1765.diff; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1765>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGffFz0nimlVTkAJpdNLWHlhhnAm5ks5tN2B8gaJpZM4RrlB8>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1765#issuecomment-360206959:716,test,testpybel,716,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1765#issuecomment-360206959,1,['test'],['testpybel']
Testability,"You could set the environment in python, but you would have to make sure this is done before loadallplugins is called and you might poison all future plugin load attempts. It would have to be a standalone test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1826#issuecomment-384272681:205,test,test,205,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1826#issuecomment-384272681,1,['test'],['test']
Testability,"You don't want `-DBUILD_SHARED=OFF` .. among other things, this is not tested by the build actions. Can you post more of the issue from the initial compile error? It looks like you're building in parallel and the actual error is farther up in the compile log.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045663035:71,test,tested,71,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2688#issuecomment-2045663035,2,"['log', 'test']","['log', 'tested']"
Testability,"You will have to provide more information. For example, how do you do the substructure search? . Also, you should provide the input and query as files or as strings. We cannot test your examples if they are just pictures in a PDF. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795539:176,test,test,176,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/918#issuecomment-281795539,1,['test'],['test']
Testability,"You'll need to regenerate the aromaticity test to pass Travis. More importantly, there was some discussion about making sure we had ""flavors"" of aromaticity models - that is, there would be an OBDaylightAromaticityTyper and an OBXYZ AromaticityTyper, etc. Does that seem like a reasonable goal? I'm fine if we say this is step one in that direction and other aromaticity models will be implemented as needed in the future.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1638#issuecomment-329307775:42,test,test,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1638#issuecomment-329307775,1,['test'],['test']
Testability,Your recent changes should take care of what this was trying to fix... when I get some time I'll try and stress test your changes.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/295#issuecomment-282090277:112,test,test,112,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/295#issuecomment-282090277,1,['test'],['test']
Testability,"You’re welcome to make whatever changes you think are necessary, as long as all the tests get included eventually using the standard install procedure. IMO, it’s really really really important to have a suite of tests that _don’t_ fail to avoid unknown regressions. This is a sampling of pdb ligands, which is highly representative of what many people use openbabel for. I’m curious how you are getting such poor times. I just did a clean checkout and the times seem quite reasonable (<30s to clone and <1s to git status):; naboo:tmp dkoes$ time git clone git://github.com/openbabel/openbabel.git; Cloning into 'openbabel'...; remote: Enumerating objects: 9, done.; remote: Counting objects: 100% (9/9), done.; remote: Compressing objects: 100% (9/9), done.; remote: Total 78506 (delta 2), reused 1 (delta 0), pack-reused 78497; Receiving objects: 100% (78506/78506), 70.94 MiB | 4.27 MiB/s, done.; Resolving deltas: 100% (44526/44526), done.; Checking out files: 100% (37462/37462), done. real 0m28.723s; user 0m8.231s; sys 0m7.868s; naboo:tmp dkoes$ cd openbabel/; naboo:openbabel dkoes$ time git status; On branch master; Your branch is up to date with 'origin/master'. nothing to commit, working tree clean. real 0m0.386s; user 0m0.116s; sys 0m0.472s. David Koes. Assistant Professor; Computational & Systems Biology; University of Pittsburgh. On Nov 9, 2019, at 3:20 AM, baoilleach <notifications@github.com<mailto:notifications@github.com>> wrote:. Why @dkoes<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdkoes&data=02%7C01%7Cdkoes%40pitt.edu%7C9c9e72d6a5df4dc6150c08d764edc102%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637088844633071119&sdata=T0%2BcRh93S8kIrnN4NgrbKnZIcyrYeV7S0etDy8kklIg%3D&reserved=0> did not check in a .tar.gz or the minimum number of test files to exercise the fixes, I don't understand. On a fresh clone, it's taking 16 seconds to run ""git status"". The cloning itself took an excessive amount of time, several minutes, enough that it",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468:84,test,tests,84,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468,2,['test'],['tests']
Testability,[bennion1@czvnc2 ATBJOBS]$ /usr/gapps/bbs/TOSS-3/bin/obabel -igamess 317358/1/qm.out -osdf -O test; Segmentation fault (core dumped); Setting errorlevel doesn’t seem to produce any extra data.; [qm.txt](https://github.com/openbabel/openbabel/files/3561172/qm.txt),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2020#issuecomment-526710639:94,test,test,94,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2020#issuecomment-526710639,1,['test'],['test']
Testability,[test.zip](https://github.com/openbabel/openbabel/files/6621072/test.zip),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2381#issuecomment-857361001:1,test,test,1,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2381#issuecomment-857361001,2,['test'],['test']
Testability,"\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res;",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:19104,test,test,19104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:22063,test,test,22063,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testexample']"
Testability,"_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESS",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:9489,test,test,9489,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:4616,test,test,4616,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"`. I modified the install directory of the Python module to make them directly install at `python3.x/site-packages/openbabel`. The build dependency can be defined in `pyproject.toml`:; ```toml; [build-system]; requires = [; ""setuptools>=61"",; ""setuptools_scm[toml]>=6.2"",; ""wheel"",; ""cmake_build_extension"",; ""cmake"",; ""ninja"",; ""swig"",; ]; build-backend = ""setuptools.build_meta""; ```. 3. In the Python module, I have to set the environment `BABEL_LIBDIR` and `BABEL_DATADIR` at the beginning of the module. ```py; import os; base_dir = os.path.abspath(os.path.dirname(__file__)); os.environ[""BABEL_LIBDIR""] = os.path.join(base_dir, ""lib"", ""openbabel"", __version__); os.environ[""BABEL_DATADIR""] = os.path.join(base_dir, ""share"", ""openbabel"", __version__); ```. 4. Finally I defined the configs for cibuildwheel, where I copied some configs from rdkit-pypi to install some dependencies.; ```toml; [tool.cibuildwheel]; test-command = ""python -c 'from openbabel import openbabel'""; build = [""cp37-*"", ""cp38-*"", ""cp39-*"", ""cp310-*"", ""cp311-*""]; skip = [""*-win32"", ""*-manylinux_i686"", ""*-musllinux*""]. [tool.cibuildwheel.linux]; before-all = [; # Has eigen3-devel.aarch64; ""yum install -y epel-release"",; ""yum install -y wget freetype-devel libpng12-devel pixman-devel zlib-devel eigen3-devel libxml2-devel"",; # cairo-devel from the centos repo does not work, build here; ""wget https://www.cairographics.org/snapshots/cairo-1.15.14.tar.xz --no-check-certificate"",; ""tar xvf cairo-*"",; ""cd cairo-*"",; ""./configure"",; ""make -j 20"",; ""make install"",; ""cd .."",; ]; environment-pass = [""CIBW_BUILD""]. [tool.cibuildwheel.macos]. before-all = [; '''if [[ ""$CIBW_BUILD"" == *macosx_arm64* ]]; then; rm /usr/local/lib/libfreetype.dylib; install_arm=( libpng libx11 libxau libxcb libxdmcp libxext libxrender fontconfig glib lzo pixman cairo freetype ); for i in ""${install_arm[@]}""; do; response=$(brew fetch --force --bottle-tag=arm64_big_sur $i | grep Downloaded ); download_path=$(echo $response | xargs -n 1 | t",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122:2752,test,test-command,2752,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1288847122,1,['test'],['test-command']
Testability,```; -------------------------------------------------------------------------------; iterators-mol-atom; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:37; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumAtoms / GetAtom 100 57 1.3395 ms ; 239.704 ns 237.452 ns 242.998 ns ; 13.6856 ns 10.255 ns 17.355 ns ; ; OBMolAtomIter 100 63 1.3356 ms ; 213.093 ns 211.359 ns 215.806 ns ; 10.8516 ns 7.52759 ns 14.4128 ns ; ; BeginAtom / NextAtom 100 115 1.334 ms ; 119.102 ns 117.784 ns 120.949 ns ; 7.96645 ns 6.23579 ns 9.59511 ns ; ; FOR_ATOMS_OF_MOL 100 366 1.3176 ms ; 37.0429 ns 36.6542 ns 37.5867 ns ; 2.33947 ns 1.81348 ns 2.8415 ns ; ; BeginAtoms / EndAtoms 100 321 1.3161 ms ; 37.5913 ns 37.0588 ns 38.2691 ns ; 3.02309 ns 2.49616 ns 3.52564 ns ; ; GetAtoms 100 348 1.3224 ms ; 37.13 ns 36.7279 ns 37.7013 ns ; 2.4104 ns 1.85212 ns 2.89647 ns ; . -------------------------------------------------------------------------------; iterators-mol-bond; -------------------------------------------------------------------------------; /home/timvdm/openbabel-benchmark/main.cpp:103; ............................................................................... benchmark name samples iterations est run time; mean low mean high mean; std dev low std dev high std dev; -------------------------------------------------------------------------------; NumBonds / GetBond 100 56 1.3272 ms ; 244.13 ns 241.171 ns 248.033 ns ; 17.2515 ns 13.6996 ns 20.423 ns ; ; OBMolBondIter 100 62 1.3268 ms ; 218.45 ns 215.996 ns 221.761 ns ; 14.4162 ns 11.4463 ns 17.2281 ns ; ; BeginBond / NextBond 100 114 1.3338 ms ; 120.307 ns 119.038 ns 122.127 ns ; 7.69576 ns 5.91677 ns 9.36035 ns ; ; FOR_BONDS_OF_MOL 100 348 1.3224 m,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180:210,benchmark,benchmark,210,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2635#issuecomment-1773759180,2,['benchmark'],['benchmark']
Testability,"a test pdb file that fails to convert to cml, zipped to fit. Original comment by: eingersoll",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780729:2,test,test,2,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/744#issuecomment-281780729,1,['test'],['test']
Testability,"and object ../OBDESC.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDESC\Release\BuildLog.htm""; OBDESC - 0 error(s), 0 warning(s); ------ Build started: Project: gen3D, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; gen3d.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\gen3D\Release\BuildLog.htm""; gen3D - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCommonFormats:. ========== Build: 0 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBConsole:. ------ Build started: Project: OBConsole, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; babel.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConsole\Release\BuildLog.htm""; OBConsole - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBConv:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCSharp: (skip - requires swig). ------ Build started: Project: OBCSharp, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCSharp\Release\BuildLog.htm""; OBCSharp - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBDESC:. ========== Build: 0 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. OBDLL:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBError:. ========== Build: ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:2695,log,log,2695,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,"ared_ptr.hpp': No such . OBXMLFormats:; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . Results for All OB Components: . FastSearch:. ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. gen3D:. ------ Build started: Project: OBDESC, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smartsdescriptors.cpp; optransform.cpp; groupcontrib.cpp; filters.cpp; cmpdfilter.cpp; Generating Code...; Linking...; Creating library ../OBDESC.lib and object ../OBDESC.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDESC\Release\BuildLog.htm""; OBDESC - 0 error(s), 0 warning(s); ------ Build started: Project: gen3D, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; gen3d.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file:/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:1169,log,log,1169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,"arning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Ca",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:3569,test,test,3569,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testbabel']"
Testability,"ated into a .sdf with; > cod-tools, and submitted to OpenBabel to assign a SMILES string.; >; > codcif2sdf ./4021153.cif > reconstruct.sdf; >; > obabel reconstruct.sdf -osmi; >; > Not anticipated by mine, the result is not; > C(=O)(/C=C1\CN(CC/1=C\c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC; > but; > C(=O)(/C=C/1\CN(C\C1=C/c1ccccc1)S(=O)(=O)c1ccc(cc1)C)OC; > In other words, the then other double bond is «wavy».; >; > While the intermediate .sdf follows the v2000 dialect, it may be read by; > e.g., by DataWarrior <https://openmolecules.org/datawarrior/index.html>; >; > datawarrior ./reconstruct.sdf; >; > which promptly identifies both double bonds as (*Z*) configured (which; > indeed is .true.). No surprise,; > cod_cif_EZ_issue.zip; > <https://github.com/openbabel/openbabel/files/7529354/cod_cif_EZ_issue.zip>; > CDK Depict converts SMILES string; > Cc(cc1)ccc1S(N(C/C1=C\C(OC)=O)C/C1=C\c1ccccc1)(=O)=O; > into a structure without a wavy bond.; >; > Environment Information: OpenBabel (3.1.1+dfsf-6), Python (3.9.8), and; > cod-tools (3.3.0+dfsg-1) as provided in Linux Debian 12/bookworm [testing].; >; > [image: CDK_depict]; > <https://user-images.githubusercontent.com/19709084/141507918-85f9cc55-66f5-4076-a1ee-a4650613862d.png>; >; > cod_cif_EZ_issue.zip; > <https://github.com/openbabel/openbabel/files/7529359/cod_cif_EZ_issue.zip>; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2319#issuecomment-967290797>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGLXPMPSRSODXRI7SLDULVFO7ANCNFSM4WTZ5RNQ>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2319#issuecomment-967358461:1907,test,testing,1907,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2319#issuecomment-967358461,1,['test'],['testing']
Testability,"ave alternative settings with changed basis and/or shifted origin. Any two settings of the same space group can be transformed into each other by applying a 4x4 transformation matrix. The question is what settings are practical, useful and worth listing in a table. And what are their standard (H-M) names. (There is no problem with interpreting Hall names: they are unambiguous and they encode all the operations in the name). ITfC has a few tables that list spacegroup settings (in Vol. A and B). These tables list different sets of settings, and they may differ between editions of ITfC. The table that is most commonly used in computer programs is in Vol. B. It is the same table that is used by SgInfo and cctbx/sgtbx (and spglib) and it's available here: http://cci.lbl.gov/sginfo/hall_symbols.html. It has 530 entries (3 are duplicate, as @afonari wrote above; different standard names correspond to the same sets of operations). The only thing that differs is that Open Babel recognizes 14 (as @afonari calculated) extra settings. It's probably good, but there is no good reference for naming of these settings.; For example: ""C -4 2 b"" is listed on http://img.chem.ucl.ac.uk/sgp/MEDIUM/117cz1.htm, but not in ITfC. ITfC have a C-centered settings of the same spacegroup (117) named ""C -4 2 g1"". This name is listed in table 1.5.4.4 in Vol.A ch.1.5 (and without any further information), but not in the table with Hall symbols. So I'm not able to tell if ""C -4 2 g1"" from ITfC and ""C -4 2 b"" from Birkbeck collage website refer to the same settings. Regarding shared resources: most of the programs I've seen use either the list of [530 settings][1] or the [syminfo.lib][2] file from CCP4 (or the older version named `symop.lib`).; I guess it's unavoidable that different programs recognize different sets of symbols, as there is no definite list. [1]: http://cci.lbl.gov/sginfo/hall_symbols.html; [2]: http://fg.oisin.rc-harwell.ac.uk/scm/loggerhead/libccp4/trunk/view/head:/data/syminfo.lib",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1292#issuecomment-331963893:2365,log,loggerhead,2365,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1292#issuecomment-331963893,2,['log'],['loggerhead']
Testability,"b 3cd9ba8b 3b1ca892 3b1ca892 3a336052 275de761 ; 1c66c562 18eb4a1e 1170108b 1170108b 1170108b 1170108b ; 1170108b 1170108b 1170108b 09639408 094b2d63 026490f7"".Replace(Environment.NewLine, string.Empty);. string EthanolSmiles = ""CCO"";; string EthanolFP2 = @""00000000 00000000 00000000 00000000 00000000 00000000 ; 00000000 00000000 00000000 00000000 00000000 40000000 ; 00000000 00000000 00000000 00080008 00000000 00000000 ; 00000000 00000000 00000000 00000000 00000000 00000000 ; 00000000 00000000 00000000 00000000 00000000 00000000 ; 00000000 00000000"".Replace(Environment.NewLine, string.Empty);. VectorUInt res = new VectorUInt();. var blocks = KeggECFP2.Split(' ').ToList();; blocks.Reverse();; foreach (string block in blocks); {; uint uintValue = uint.Parse(block, System.Globalization.NumberStyles.HexNumber);; //byte[] bb = BitConverter.GetBytes(uintValue);; //Debug.WriteLine(formatter, uintValue, BitConverter.ToString(bb));. //parsed.Add(Big2Little3(uintValue));; res.Add(uintValue);; }. using (OBConversion conv = new OBConversion()); using (OBMol mol = new OBMol()); using (OBFingerprint fp = OBFingerprint.FindFingerprint(""ECFP2"")); using (VectorUInt vec = new VectorUInt()); {; conv.SetInFormat(""smi"");; mol.Clear();; conv.ReadString(mol, KeggSmiles);; fp.GetFingerprint(mol, vec);. System.Collections.Generic.List<uint> cmpFP = new System.Collections.Generic.List<uint>(vec);; //cmpFP.Reverse();. for (int i = 0; i < cmpFP.Count; i++); {; Debug.WriteLine(formatter,; i,; blocks[i].ToUpper(),; BitConverter.ToString(BitConverter.GetBytes(cmpFP[i])).Replace(""-"", string.Empty),; BitConverter.ToString(BitConverter.GetBytes(Big2Little3(cmpFP[i]))).Replace(""-"", string.Empty),; BitConverter.ToString(BitConverter.GetBytes(res[i])).Replace(""-"", string.Empty),; BitConverter.ToString(BitConverter.GetBytes(Big2Little3(res[i]))).Replace(""-"",string.Empty));; }. byte[] bytes = Converter.ToByteArray(vec);. for (int i = 0; i < vec.Count; i++); {; Debug.Assert(vec[i] == res[i]);; }; }; }; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2023#issuecomment-533148861:4121,Assert,Assert,4121,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2023#issuecomment-533148861,1,['Assert'],['Assert']
Testability,"baoilleach: even if I understand the interest of testcases, I'm not very interested in creating some. Fixing a bug is far more motivating.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1798#issuecomment-378018072:49,test,testcases,49,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1798#issuecomment-378018072,1,['test'],['testcases']
Testability,"bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > S",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:6449,test,test,6449,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,"ble' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1111) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; alias.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 15 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; LINK : fatal error LNK1181: cannot open input file 'OBError.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 1 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...;",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141:3333,log,log,3333,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141,1,['log'],['log']
Testability,c. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test .................... Passed 0.00 sec. Start 35: pytest_babel. 35/37 Test #35: pytest_babel .....................***Failed 0.03 sec. Start 36: pytest_sym. 36/37 Test #36: pytest_sym ....................... Passed 0.08 sec. Start 37: pytest_fastsearch. 37/37 Test #37: pytest_fastsearch ................***,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3325,Test,Test,3325,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,ceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3274,Log,Log,3274,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability,"ci_string>>,std::allocator<std::pair<const std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\vector(203) : warning C4503: 'std::_Tree<_Traits>::_Buynode' : decorated name length exceeded, name was truncated; with; [; _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::less<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; crkformat.cpp; CSRformat.cpp; cssrformat.cpp; dmolformat.cpp; Generating Code...; Compiling...; fastaformat.cpp; fchkformat.cpp; featformat.cpp; fhformat.cpp; freefracformat.cpp; gamessformat.cpp; gausscubeformat.cpp; ..\..\src\formats\gausscubeformat.cpp(576) : warning C4146: unary minus operator applied to unsigned type, result still unsigned; gaussformat.cpp; gausszmatformat.cpp; ghemicalformat.cpp; gromos96format.cpp; hinformat.cpp; jaguarformat.cpp; mmcifformat.cpp; mmodformat.cpp; moldenformat.cpp; mopacformat.cpp; mpdformat.cpp; mpqcformat.cpp; msiformat.cpp; Generating Code...; Compiling...; msmsformat.cpp; nwchemformat.cpp; pcmodelformat.cpp; PQSformat.cpp; qchemformat.cpp; shelxformat.cpp; tinkerformat.cpp; turbomoleformat.cpp; unichemformat.cpp; viewmolformat.cpp; xedformat.cpp; xyzformat.cpp; yasaraformat.cpp; zindoformat.cpp; Generating Code...; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; BSCMAKE: error BK1506 : cannot open file '.\Debug\ArrayList.sbr': No such file or directory; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMoreFormats\Debug\BuildLog.htm""; OBMoreFormats - 2 error(s), 21 warning(s); ========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781162:10962,log,log,10962,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781162,1,['log'],['log']
Testability,"clspec(dllimport) public: double __thiscall OpenBabel::OBAtom::GetY(void)const "" (__imp_?GetY@OBAtom@OpenBabel@@QBENXZ) referenced in function ""public: virtual bool __thiscall OpenBabel::MDLFormat::WriteMolecule(class OpenBabel::OBBase *,class OpenBabel::OBConversion *)"" (?WriteMolecule@MDLFormat@OpenBabel@@UAE_NPAVOBBase@2@PAVOBConversion@2@@Z); mol2format.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: double __thiscall OpenBabel::OBAtom::GetY(void)const "" (__imp_?GetY@OBAtom@OpenBabel@@QBENXZ); pdbformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: double __thiscall OpenBabel::OBAtom::GetY(void)const "" (__imp_?GetY@OBAtom@OpenBabel@@QBENXZ); mdlformat.obj : error LNK2019: unresolved external symbol ""__declspec(dllimport) public: double __thiscall OpenBabel::OBAtom::GetZ(void)const "" (__imp_?GetZ@OBAtom@OpenBabel@@QBENXZ) referenced in function ""public: virtual bool __thiscall OpenBabel::MDLFormat::WriteMolecule(class OpenBabel::OBBase *,class OpenBabel::OBConversion *)"" (?WriteMolecule@MDLFormat@OpenBabel@@UAE_NPAVOBBase@2@PAVOBConversion@2@@Z); mol2format.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: double __thiscall OpenBabel::OBAtom::GetZ(void)const "" (__imp_?GetZ@OBAtom@OpenBabel@@QBENXZ); pdbformat.obj : error LNK2001: unresolved external symbol ""__declspec(dllimport) public: double __thiscall OpenBabel::OBAtom::GetZ(void)const "" (__imp_?GetZ@OBAtom@OpenBabel@@QBENXZ); ..\Debug/OBCommonD.obf : fatal error LNK1120: 4 unresolved externals; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Debug\BuildLog.htm""; OBCommonFormats - 16 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786054:4622,log,log,4622,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/773#issuecomment-281786054,1,['log'],['log']
Testability,"cmake version 2.6-patch 4, on Centos 5.3 (2.6.18-164.el5), 64-bit. The environment variables set are those in the INSTALL file:. >Environment Variables; >==================; >Open Babel uses a few environment variables to find things at; >runtime. If Open Babel is installed to the location specified at; >compile time, none of these variables need to be set. >BABEL_LIBDIR - the location of Open Babel format plugins; >BABEL_DATADIR - the location of the data files. Since the standard way to build packages is to run:; make; make test; make install. the programs are not installed to the final destination yet, so it seems that the environment variables need to be set. I set them to the ""data"" and ""src/plugins"" directories under the source root. Original comment by: argenta",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797794:532,test,test,532,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1044#issuecomment-281797794,1,['test'],['test']
Testability,"counts since PR#1576. I wrote up an example; > failure in the first commit of this PR, where assigning a charge of -1 to; > an atom can give it 255 implicit hydrogens under certain conditions.; >; > I suspect the underlying cause is unsigned integer arithmetic in; > phmodel.cpp:321 (possibly also 343). Subtraction of two unsigned ints gives; > an unsigned int--if the difference would be negative, then the result is; > wrapped back to UINT_MAX, e.g. printing (j->second - old_bond_order); > gives 4294967295 instead of -1. Then there's some truncation to fit in the; > unsigned char. But even if the overall expression gives the right answer; > most of the time, I think it would be clearer to be more explicit about the; > math, which would fix special cases like this bug.; >; > How should we adjust the line(s) of code in phmodel.cpp? We could; > explicitly typecast everything to a signed int then ensure that there are; > at least zero implicit hydrogens, but that seems verbose. @baoilleach; > <https://github.com/baoilleach> Please feel free to directly commit on my; > PR if you have any ideas. Of course we'll need to update the test case with; > the correct answer as well (not H255).; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/openbabel/openbabel/pull/1895; > Commit Summary; >; > - Demonstrate example of unsigned integer wrapping; >; > File Changes; >; > - *M* test/regressionstest.cpp; > <https://github.com/openbabel/openbabel/pull/1895/files#diff-0> (10); >; > Patch Links:; >; > - https://github.com/openbabel/openbabel/pull/1895.patch; > - https://github.com/openbabel/openbabel/pull/1895.diff; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1895>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGZtUPRpAG_YSxBPjVEA0_yp-d5ahks5ugrXKgaJpZM4XDIFZ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1895#issuecomment-426314886:1354,test,test,1354,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1895#issuecomment-426314886,4,['test'],['test']
Testability,"d evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PRO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:12979,test,test,12979,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testkekule']"
Testability,"d evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PRO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:10687,test,test,10687,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testunique']"
Testability,"d is not explicitly defined and a crossed double bond conventionally indicates you refer either i) to a mixture of (*E*) and (*Z*) difluorodiazene, or ii) you know there is the N=N double bond, but don't assign its configuration (perhaps by lack of information). For writing a .mol/.mol2/.sdf file with atomic coordinates the situation is even worse than for an illustration: imagine you construct a physical model of this molecule and now don't know where to put the fluorine atoms. In this particular case, you might better describe either the (*E*) configuration with `F\N=N\F`, or the (*Z*) isomer by `F\N=N/F`. Don't forget CIP rules assign a non-bonding (here implicit) electron pair a priority `0`, i.e. even lower than for an atom of hydrogen. Daylight compiled a set of references to learn more about (basic) SMILES' rules, see the [tutorial](https://www.daylight.com/dayhtml_tutorials/languages/smiles/index.html) and its links to theory and static examples. Because SMILES and subsequently SMARTS can be very helpful to search in databases, I recommend to complement your study with the two blog posts by Noel O'Boyle [SMARTS for dummies](https://baoilleach.blogspot.com/2018/11/smarts-for-dummies.html), its sequel [Smarts for Dummies Part II ](https://baoilleach.blogspot.com/2023/02/smarts-for-dummies-part-ii.html) and the interactive [test pad](https://baoilleach.github.io/smartersmarts-js/) (requires only a web browser, JavaScript enabled). Finally, Marvin by ChemAxon introduced [extended SMILES](https://docs.chemaxon.com/display/docs/formats_chemaxon-extended-smiles-and-smarts-cxsmiles-and-cxsmarts.md) as a format to retain additional information some programs equally can process, too (e.g. [Marvin JS](https://marvinjs-demo.chemaxon.com/latest/); [CDK depict](https://www.simolecule.com/cdkdepict/depict.html), [RDKit](https://www.rdkit.org/docs/RDKit_Book.html#cxsmiles-cxsmarts-extensions)). As an illustration, `F\N=N/F |lp:0:3,1:1,2:1,3:3|` describes above (*Z*) isomer.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510:1433,test,test,1433,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510,2,['test'],['test']
Testability,"d/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PR",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:15735,test,test,15735,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testbindings']"
Testability,"e you missing `System' using directive?; ./VectorVecDouble.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; ./VectorVecInt.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; ./VectorVecOBVector3.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; ./VectorVecUInt.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; ./VectorpAtom.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; ./VectorpBond.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; ./VectorpData.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; ./VectorpInternalCoord.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; ./VectorpRing.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; ./VectorpRotor.cs(47,23): error CS0246: The type or namespace name `Action' could not be found. Are you missing `System' using directive?; Compilation failed: 22 error(s), 0 warnings; [100%] Building CXX object test/CMakeFiles/test_runner.dir/obtest.cpp.o; make[2]: *** [/Users/chengxiyang/Downloads/openbabel-master/scripts/csharp/openbabel-csharp.cpp] Error 1; make[2]: *** Deleting file `/Users/chengxiyang/Downloads/openbabel-master/scripts/csharp/openbabel-csharp.cpp'; make[1]: *** [scripts/CMakeFiles/bindings_csharp.dir/all] Error 2; make[1]: *** Waiting for unfinished jobs....; [100%] Linking CXX executable ../bin/test_runner; [100%] Built target test_runner; make: *** [all] Error 2",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1857#issuecomment-403115185:3202,test,test,3202,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1857#issuecomment-403115185,1,['test'],['test']
Testability,"e#step:12:740); 4408 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4pox_2w2.sdf; [740](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:741); pdbmol not equal: Could only match 0 of 41 atoms (41); [741](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:742); 6406 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4old_2uz.sdf; [742](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:743); pdbmol not equal: Could only match 0 of 24 atoms (24); [743](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:744); 6497 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1gs5_nlg.sdf; [744](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:745); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2j5v_pca.sdf; [748](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:749); pdbmol not equal: Could only match 0 of 15 atoms (15); [749](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:750); 10070 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5nbf_8s8.sdf; [750](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:751); pdbmol not equal: Could only match 0 of 87 atoms (87); [751](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:752); 10428 /hom",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:3406,test,test,3406,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,"e#step:12:742); 6406 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4old_2uz.sdf; [742](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:743); pdbmol not equal: Could only match 0 of 24 atoms (24); [743](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:744); 6497 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1gs5_nlg.sdf; [744](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:745); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2j5v_pca.sdf; [748](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:749); pdbmol not equal: Could only match 0 of 15 atoms (15); [749](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:750); 10070 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5nbf_8s8.sdf; [750](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:751); pdbmol not equal: Could only match 0 of 87 atoms (87); [751](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:752); 10428 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3c72_cx1.sdf; [752](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:753); pdbmol not equal: Could only match 0 of 80 atoms (80); [753](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:754); 11300 /ho",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:3735,test,test,3735,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,"e#step:12:744); 6497 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1gs5_nlg.sdf; [744](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:745); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2j5v_pca.sdf; [748](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:749); pdbmol not equal: Could only match 0 of 15 atoms (15); [749](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:750); 10070 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5nbf_8s8.sdf; [750](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:751); pdbmol not equal: Could only match 0 of 87 atoms (87); [751](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:752); 10428 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3c72_cx1.sdf; [752](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:753); pdbmol not equal: Could only match 0 of 80 atoms (80); [753](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:754); 11300 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot8_6db.sdf; [754](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:755); pdbmol not equal: Could only match 0 of 35 atoms (35); [755](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:756); 13301 /ho",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:4065,test,test,4065,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,"eam. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead of AWK as well.); #; # Write a list of SMILES into the same directory as this AWK script, e.g.,; # as file check01.smi. Then deploy this filter e.g., by; #; # awk -f filter.awk check01.smi; #; # to process the content of the list of SMILES. The output is a list of; # canonical SMILES which OpenBabel has no difficulty to process. Entries; # which cause a warning by OpenBabel (i.e., a five-line output during the; # test conversion) are not reported back. {test_convert = ""obabel -:\"""" $1 ""\"" -ocan > shuttle.txt 2>&1"";; system(test_convert);. filter = ""awk 'END{if (NR==2) {print $0;}}' shuttle.txt""; system(filter);; }; ```; Test input data (`check01.smi`):; ```; CO[C@@H]([C@@H](C[C@H]([C@@H]1OC)O)O)C1OC; COC(Cc(c(O)c(cc1OC)C(OC(c(cc(c(O)c2)OC)c2OC)=O)=O)c1O)=O; CC(OC(CCC(OC(c(ccc(O[C@@H](C(C(C=CC1)=C1O)=O)C(O)=O)c1)c1O)=O)=O)=O)=O; CC(O/C(\CCC[C@H]([C@H](C(CC=C)=C)OC(O)=C)O)=C(\COC)/OCO)=O; c1ccncc1; C1CCCC5; CC; CCC; ```; Reported SMILES passing the filter successfu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:1942,Test,Tests,1942,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737,1,['Test'],['Tests']
Testability,"er not found; ..\..\src\atom.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; alias.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 15 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; LINK : fatal error LNK1181: cannot open input file 'OBError.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 1 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; LINK : fatal error LNK1181: cannot open input file 'OBError.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 1 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Gen",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141:3761,log,log,3761,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781141,1,['log'],['log']
Testability,"ers/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > S",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:8749,test,test,8749,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,"evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESS",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:17305,test,test,17305,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"even with the funcion in obutils.cpp renamed to IsNear_mod as probably intended I get this error on ppc64le:. Start 10: rotor_Test; 10/60 Test #10: rotor_Test .......................***Failed Error regular expression found in output. Regex=[FAIL] 0.07 sec; /builddir/build/BUILD/openbabel-2.3.2/test/rotortest.cpp:77: IsNear_mod(fabs(RAD_TO_DEG * rotor.CalcTorsion(mol->GetCoordinates())), 180.0, 360.0, 1.0) (FAIL); /builddir/build/BUILD/openbabel-2.3.2/test/rotortest.cpp:109: IsNear_mod(fabs(RAD_TO_DEG * rotor.CalcTorsion(mol->GetCoordinates())), 180.0, 360.0, 1.0) (FAIL); /builddir/build/BUILD/openbabel-2.3.2/test/rotortest.cpp:123: IsNear(RAD_TO_DEG * rotor.CalcTorsion(mol->GetCoordinates()), 180.0, 1.0) (FAIL). Original comment by: kick_",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1325#issuecomment-281804560:138,Test,Test,138,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1325#issuecomment-281804560,4,"['Test', 'test']","['Test', 'test']"
Testability,fications@github.com wrote:; > ; > > Cmake Config is like following:; > > [image: screen shot 2015-03-09 at 5 14 26 pm]; > > <; > > https://cloud.githubusercontent.com/assets/10948687/6564526/ceb806b4-c67f-11e4-9833-a2e0e3b744ca.png; > > ; > > [image: screen shot 2015-03-09 at 5 14 38 pm]; > > <; > > https://cloud.githubusercontent.com/assets/10948687/6564527/ceb96ec8-c67f-11e4-813a-cfdbbf30bc30.png; > > ; > > And the Cmake Log is like following:; > > Using included inchi library.; > > checking for module 'cairo'; > > package 'cairo' not found; > > Could NOT find Cairo. PNG output will NOT be supported.; > > GUI will not be built; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:14; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppre,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:1271,test,test,1271,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,gzip-ed test file (in Mol2 format). Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809804:8,test,test,8,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809804,1,['test'],['test']
Testability,"he old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCE",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:6098,test,test,6098,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testsym']"
Testability,"his warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call St",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:3545,test,test,3545,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testbabel']"
Testability,http://folding.bmc.uu.se/images/butane-g4.log.gz,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200#issuecomment-125873699:42,log,log,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200#issuecomment-125873699,1,['log'],['log']
Testability,"hyl radical (there is a button name to structure) with an input of «methyl radical». ![2022-08-13_chemdraw_js](https://user-images.githubusercontent.com/19709084/184505193-d7e5ba2c-83d6-425a-85ab-9e9000eca693.png). and subsequently, run structure -> get mol to obtain the following file:. ```; ACS Document 1996; ChemDraw08132219512D. 1 0 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 C 0 4 0 0 0 0 0 0 0 0 0 0; M RAD 1 1 2; M STY 1 1 DAT; M SLB 1 1 1; M SAL 1 1 1; M SDD 1 -1.3654 -1.2329 DA ALL 1 5; M SED 1 methyl radical; M END; ```. Pasting this content into `test.mol` and running. ```bash; $ obabel test.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```; does not lead to an additional fourth hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the container form of `.sdf`) encodes singlet, doublet, or triplet radicals, I recommend Biovia's documentation (revised edition by 2020) which is public ([link to a .pdf file on archive.org](https://web.archive.org/web/20210219065450/https://discover.3ds.com/sites/default/files/2020-08/biovia_ctfileformats_2020.pdf), or the original [.pdf download from Biovia](https://discover.3ds.com/sites/default/files/2020-08/biovia_",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:1423,test,test,1423,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100,1,['test'],['test']
Testability,"ibdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:14890,test,test,14890,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testbindings']"
Testability,"ild/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:19831,test,test,19831,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"ild/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > Python bindings will be compiled; > Configuring done; > CMake Warning (dev):; > Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; > --help-policy CMP0042"" for policy details. Use the cmake_policy command to; > set the policy and suppress this warning.; > ; > MACOSX_RPATH is not specified for the following targets:; > ; > inchi; > openbabel; > ; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > Generating done; > ; > Need help! Thank you~; > ; > —; > Reply to this email direc",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:21246,test,test,21246,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testexample']"
Testability,"ils. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > T",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:5489,test,test,5489,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testsym']"
Testability,"ing.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:8491,test,test,8491,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testfastsearch']"
Testability,"inite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; mol.cpp; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; residue.cpp; ring.cpp; rotamer.cpp; rotor.cpp; transform.cpp; typer.cpp; Generating Code...; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Debug\BuildLog.htm""; OBDLL - 15 error(s), 0 warning(s); ------ Build started: Project: OBConv, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Debug\BuildLog.htm""; OBConv - 1 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Debug\BuildLog.htm""; OBFPRT - 1 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Debug\BuildLog.htm""; FastSearch - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 5 failed, 0 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138:2434,log,log,2434,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138,3,['log'],['log']
Testability,"input CIF file, python script, error log. Original comment by: stewenner",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800788:37,log,log,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800788,1,['log'],['log']
Testability,input test file. Original comment by: lleell00,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/840#issuecomment-281794234:6,test,test,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/840#issuecomment-281794234,1,['test'],['test']
Testability,"is a better (as in _more efficient_, thus _processing faster_) approach then the one identified in the following and welcome improvements. ----. The successful conversion of a SMILES string by OpenBabel into its canonical form yields an output worth two lines long:. ```bash; $ obabel -:""c1ccncc1"" -ocan; c1cccnc1	; 1 molecule converted; ```. However, the attempt to process an erroneous SMILES string extends over five lines:. ```bash; $ obabel -:""c1ccncc5"" -ocan; ==============================; *** Open Babel Warning in ParseSmiles; Invalid SMILES string: 2 unmatched ring bonds. 0 molecules converted; ```; Based on this observation, the AWK script below performs a conversion explicitly requesting both standard output as well as the error stream. For unproblematic SMILES (i.e., entries reporting back with two lines [or line-feed separated records, in parlance of AWK]) the canonical SMILES string is provided. Though written for Linux Debian 12/bookworm (branch testing), by use of AWK, this approach aims to be portable for other platforms (maybe others may check on this). Reporting only the (processed) canonical SMILES passing the filter successfully equally should be helpful when running OpenBabel with the optional `--errorlevel <N>` (default 2 out of 5, cf. [section 3.2](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html)). ```awk; #!/usr/bin/awk -f. # name: filter.awk; # author: nbehrnd@yahoo.com; # license: GPL v2, 2022; # date: <2022-03-23 Wed>; # edit: <2022-03-28 Mon>. # Retain ""reasonable"" SMILES strings OpenBabel may process gently.; #; # For a successful application of this filter, this AWK script depends; # on a running installation of OpenBabel and AWK. (Tests suggest you may; # use GNU AWK/gawk and nawk instead of AWK as well.); #; # Write a list of SMILES into the same directory as this AWK script, e.g.,; # as file check01.smi. Then deploy this filter e.g., by; #; # awk -f filter.awk check01.smi; #; # to process the content of the list",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737:1200,test,testing,1200,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081101737,1,['test'],['testing']
Testability,"is warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:13345,test,test,13345,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testkekule']"
Testability,"is warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:10895,test,test,10895,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testunique']"
Testability,"itValence, 3 != 4; [745](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:746); 6827 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2y2b_mhi.sdf; [746](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:747); pdbmol not equal: Could only match 0 of 53 atoms (53); [747](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:748); 8336 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2j5v_pca.sdf; [748](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:749); pdbmol not equal: Could only match 0 of 15 atoms (15); [749](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:750); 10070 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5nbf_8s8.sdf; [750](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:751); pdbmol not equal: Could only match 0 of 87 atoms (87); [751](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:752); 10428 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3c72_cx1.sdf; [752](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:753); pdbmol not equal: Could only match 0 of 80 atoms (80); [753](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:754); 11300 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot8_6db.sdf; [754](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:755); pdbmol not equal: Could only match 0 of 35 atoms (35); [755](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:756); 13301 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/2x94_x94.sdf; [756](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:757); pdbmol not equal: Could only match 0 of 52 atoms (52); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:4395,test,test,4395,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,3,['test'],['test']
Testability,ittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable: /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; 1/193 Test #1: unittest .........................***Not Run 0.00 sec. ```; After copying I get:; ```; Start 1: unittest; 1/193 Test #1: unitt,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1518,test,test,1518,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,ittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable: /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; 1/193 Test #1: unittest .........................***Not Run 0.00 sec. ```; After copying I get:; ```; Start 1: unittest; 1/193 Test #1: unittest ......................... Passed 0.09 sec; ```; I guess one potential,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1592,test,test,1592,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,"k-reused 78497; Receiving objects: 100% (78506/78506), 70.94 MiB | 4.27 MiB/s, done.; Resolving deltas: 100% (44526/44526), done.; Checking out files: 100% (37462/37462), done. real 0m28.723s; user 0m8.231s; sys 0m7.868s; naboo:tmp dkoes$ cd openbabel/; naboo:openbabel dkoes$ time git status; On branch master; Your branch is up to date with 'origin/master'. nothing to commit, working tree clean. real 0m0.386s; user 0m0.116s; sys 0m0.472s. David Koes. Assistant Professor; Computational & Systems Biology; University of Pittsburgh. On Nov 9, 2019, at 3:20 AM, baoilleach <notifications@github.com<mailto:notifications@github.com>> wrote:. Why @dkoes<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdkoes&data=02%7C01%7Cdkoes%40pitt.edu%7C9c9e72d6a5df4dc6150c08d764edc102%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637088844633071119&sdata=T0%2BcRh93S8kIrnN4NgrbKnZIcyrYeV7S0etDy8kklIg%3D&reserved=0> did not check in a .tar.gz or the minimum number of test files to exercise the fixes, I don't understand. On a fresh clone, it's taking 16 seconds to run ""git status"". The cloning itself took an excessive amount of time, several minutes, enough that it eats into the time I have for development. We need to get these files out of the master asap; in fact, I would go further and argue for their removal from the git history; the project will be lumbered with these forever going forward otherwise. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://nam05.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fopenbabel%2Fopenbabel%2Fissues%2F2048%3Femail_source%3Dnotifications%26email_token%3DAAR3Z7V4NMS3XHAQBSZZSWLQSZXGXA5CNFSM4I27UV4KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEDUAV6Q%23issuecomment-552078074&data=02%7C01%7Cdkoes%40pitt.edu%7C9c9e72d6a5df4dc6150c08d764edc102%7C9ef9f489e0a04eeb87cc3a526112fd0d%7C1%7C0%7C637088844633071119&sdata=lOxC%2B1UXZU3nS5d60G0W8VwT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468:1801,test,test,1801,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2048#issuecomment-552112468,1,['test'],['test']
Testability,lWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable: /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; 1/193 Test #1: unittest .........................***Not Run 0.00 sec. ```; After copying I get:; ```; Start 1: unittest; 1/193 Test #1: unittest ......................... Passed 0.09 sec; ```; I guess one potential difference could be that I'm aiming to do a local build in my home directory. I build with:; ```; cmake .. -DCMAKE_INSTALL_PREFIX=/home/kevin/software/openbabel/3.0.0; -DPYTHON_BINDINGS=ON -DENABLE_TESTS=ON -DPYTHON_EXECUTA,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1813,test,test,1813,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,"ld/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Python bindings will be compiled; > > Configuring done; > > CMake Warning (dev):; > > Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; > > --help-policy CMP0042"" for policy details. Use the cmake_policy command to; > > set the policy and suppress this warning.; > > ; > > MACOSX_RPATH is not specified for the following targets:; > > ; > > inchi; > > openbabel; > > ; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Generating done;",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:22744,test,test,22744,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testexample']"
Testability,ld/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable: /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; 1/193 Test #1: unittest .........................***Not Run 0.00 sec. ```; After copying I get:; ```; Start 1: unittest; 1/193 Test #1: unittest ......................... Passed 0.09 sec; ```; I guess one potential difference could be that I'm aiming to do a local build in my home directory. I build with:; ```; cmake .. -DCMAKE_INSTALL_PREFIX=/home/kevin/software/openbabel/3.0.0; -DPYTHON_BINDINGS=ON -DENABLE_TESTS=ON -DPYTHON_EXECUTABLE=/usr/bin/python3; -DRUN_SWIG=ON -DBOOST_ROOT=/usr/include/boost169 -DBOOST_LIBRARYDIR=/lib64/boost169/; ```; Not sure if that would make a difference,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1971,test,test,1971,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,8,"['Test', 'test']","['Test', 'test']"
Testability,"le://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; fingerprint.cpp; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:2804,log,log,2804,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,1,['log'],['log']
Testability,les_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1892,Test,Test,1892,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:17648,test,test,17648,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,"libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > );",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:20402,test,test,20402,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testexample']"
Testability,"log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. gen3D:. ------ Build started: Project: OBDESC, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smartsdescriptors.cpp; optransform.cpp; groupcontrib.cpp; filters.cpp; cmpdfilter.cpp; Generating Code...; Linking...; Creating library ../OBDESC.lib and object ../OBDESC.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDESC\Release\BuildLog.htm""; OBDESC - 0 error(s), 0 warning(s); ------ Build started: Project: gen3D, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; gen3d.cpp; Linking...; Generating code; Finished generating code; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\gen3D\Release\BuildLog.htm""; gen3D - 0 error(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCommonFormats:. ========== Build: 0 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBConsole:. ------ Build started: Project: OBConsole, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; babel.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConsole\Release\BuildLog.htm""; OBConsole - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBConv:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCSharp: (skip - requires swig). ------ Build started: Project: OBCSharp, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or extern",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:2157,log,log,2157,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,"ls. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:3199,test,test,3199,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testbabel']"
Testability,"m during working the developmental code on March 1st. I follow the instruction of the CMake (http://openbabel.org/wiki/CMake) OpenBabel to compile the development code on RedHad Linux of 64bit box. First, the newly compiled babel program fails making an index output file as follows. $ babel ten.smi -osf. babel: cannot write output format!. Open Babel 2.2.99 -- Mar 1 2010 -- 15:53:14. Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>. Try -H option for more information. However, it can convert the SMILES file into a SDF file without any problem by “babel -ismi ten.smi -osdf ten.sdf”. Yes, it can write SDF output, but not index.... . Second, during the “make test”, some tests failed as follows:; ; Running tests... Test project path/to/build/openbabel. Start 1: uniqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ...........",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1018,Test,Test,1018,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"ment. Same issue here, I have also tried manually specifying the locations by downloading the python part of the repository and running:; python setup.py build_ext -I ""C:\Program Files\OpenBabel-3.1.1"" -L ""C:\Program Files\OpenBabel-3.1.1"". Essentially the same error:; ```C:\ProgramData\Anaconda3\envs\testenv\lib\site-packages\setuptools\dist.py:479: UserWarning: The version specified ('${BABEL_VERSION}') is an invalid version, this may not work as expected with newer versions of setuptools, pip, and PyPI. Please see PEP 440 for more details.; ""details."" % version; running build_ext; Warning: invalid version number '${BABEL_VERSION}'.; Guessing Open Babel location:; - include_dirs: ['C:\\Program Files\\OpenBabel-3.1.1', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\include', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Program Files\\OpenBabel-3.1.1', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\libs', 'C:\\ProgramData\\Anaconda3\\envs\\testenv\\PCbuild\\amd64', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel\openbabel-python.i to openbabel\openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar ""-IC:\Program Files\OpenBabel-3.1.1"" -IC:\ProgramData\Anaconda3\envs\testenv\include -IC:\ProgramData\Anaconda3\envs\testenv\include -I/usr/local/include/openbabel3 -o openbabel\openbabel-python_wrap.cpp openbabel\openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ```. ### Edit:; I had also tried `conda install -c openbabel openbabel` upon some recommendation I found elsewhere, which installed an old version and did not fix the problems I was having with the whl I obtained from https://www.lfd.uci.edu/~gohlke/pythonlibs/#openbabel (s",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-826168002:1093,test,testenv,1093,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-826168002,2,['test'],['testenv']
Testability,"miley.h. So, it is a smiles parser error. If I am not mistaken, the allene or cumulene stereochemistry is not well implemented in the obabel smiles parser/system, which means that when smiles are parsed, the allene stereochemistry label is lost before the coordinate generation and thus the result is not useful... This is based on these examples, not the documentation, because when reading the documentation and testing the example from the documentation... It also fails, even though there are as many differing substituents as there can be. test:; ==============================. obabel -ismi -:""NC(Br)=[C@@]=C(F)I"" -ocan. output:; ==============================; *** Open Babel Warning in ParseSmiles; Ignoring stereochemistry. Not enough connections to this atom.; NC(=C=C(I)F)Br; 1 molecule converted. I think this needs to be fixed, or the implementation reconsidered. I'm not sure if I get it but I would like that allene stereochemistry is recognized also if the determining centers are further away from the central atom, even though I am aware that this becomes computationally exhaustive rather quickly, but I think it this needs to be implemented, as allenic groups are not that rare and the resulting downstream artifacts undesirable. . I drew something in chemdraw for fun and further testing :) It took chemdraw a few seconds to figure out whether it is S/R once I added the hydroxy groups, but it managed. CC(C)CC(CC(C)C)C(C(CC(C)C)CC(C)C)C(C(C(CC(C)C)CC(C)C)C(CC(C)C)CC(C)O)=[C@]=C(C(C(CC(C)C)CC(C)C)C(CC(C)C)CC(C)C)C(C(CC(C)C)CC(C)O)C(CC(C)C)CC(C)C. CC(C)CC(CC(C)C)C(C(CC(C)C)CC(C)C)C(C(C(CC(C)C)CC(C)C)C(CC(C)C)CC(C)O)=[C@]=C(C(C(CC(C)C)CC(C)C)C(CC(C)C)CC(C)C)\[C@H\](C(CC(C)C)CC(C)O)C(CC(C)C)CC(C)C. Cheers. ***EDIT; I forgot to mention, that I didn't have time to test --> Parser::disableExceptions(); so I don't know if that would mean you could pass the desired/specified stereochemistry to obabel without removing the stereolabel and then generate the coordinates correctly.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1891#issuecomment-447419567:2073,test,testing,2073,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1891#issuecomment-447419567,2,['test'],"['test', 'testing']"
Testability,n2/builds/openbabel/openbabel-3.0.0/build/test/unittest; Looked in the following places:; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1077,test,test,1077,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,nTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3470,Log,Log,3470,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability,"nbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the package if necessary.). \* The more explicit `python3 -m pip list` typically is necessary only if the computer used equally (still / intentionally) includes an instance of Python2. This however is more and more an exception.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:1346,log,log,1346,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138,2,['log'],['log']
Testability,"ne; -- Using included inchi library.; -- Found LibXml2: /usr/lib/libxml2.dylib (found version ""2.7.8""); -- Found ZLIB: /usr/lib/libz.dylib (found version ""1.2.5""); -- Could NOT find wxWidgets (missing: wxWidgets_FOUND); -- Looking for conio.h; -- Looking for conio.h - not found; -- Looking for sys/time.h; -- Looking for sys/time.h - found; -- Looking for time.h; -- Looking for time.h - found; -- Looking for strings.h; -- Looking for strings.h - found; -- Looking for rpc/xdr.h; -- Looking for rpc/xdr.h - not found; -- Looking for regex.h; -- Looking for regex.h - found; -- Looking for C++ include sstream; -- Looking for C++ include sstream - found; -- Looking for rint; -- Looking for rint - found; -- Looking for snprintf; -- Looking for snprintf - found; -- Looking for sranddev; -- Looking for sranddev - found; -- Looking for strcasecmp; -- Looking for strcasecmp - found; -- Looking for strncasecmp; -- Looking for strncasecmp - found; -- Looking for dlopen in dl; -- Looking for dlopen in dl - found; -- Looking for sys/types.h; -- Looking for sys/types.h - found; -- Looking for stdint.h; -- Looking for stdint.h - found; -- Looking for stddef.h; -- Looking for stddef.h - found; -- Check size of clock_t; -- Check size of clock_t - done; -- Performing Test SCANDIR_NEEDS_CONST; -- Performing Test SCANDIR_NEEDS_CONST - Failed; -- Found PkgConfig: /usr/local/bin/pkg-config (found version ""0.27.1""); -- checking for module 'cairo'; -- package 'cairo' not found; -- Could NOT find Cairo. PNG output will NOT be supported.; -- Looking for getopt; -- Looking for getopt - found; -- GUI will not be built; -- Found PythonInterp: /Library/Frameworks/Python.framework/Versions/2.7/bin/python (found version ""2.7.4""); -- Found PythonLibs: /usr/lib/libpython2.7.dylib (found version ""2.7.4""); -- Python bindings will be compiled; -- Configuring done; -- Generating done; -- Build files have been written to: /Volumes/Macintosh HD2/Software/libraries/obabel/ob-build. Original comment by: shyuep",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803566:2192,Test,Test,2192,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1263#issuecomment-281803566,2,['Test'],['Test']
Testability,ng places:; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/op,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1155,test,test,1155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,niqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1801,Test,Test,1801,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,nittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable: /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; 1/193 Test #1: unittest .........................***Not Run 0.00 se,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1444,test,test,1444,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,"ntation, not all elements are covered yet. To quote:; > ; > > Right now there is only limited support for element perception. It works for elements with one letter symbols if the atomtype starts with the same letter.; > ; > source: https://open-babel.readthedocs.io/en/latest/FileFormats/GRO_format.html; > ; > Let's say I generate a .gro about diethyl ether by; > ; > ```shell; > $ obabel -:""CCOCC"" -h --gen3d -ogro; > ; > 15; > 1UNL C 1 0.095 -0.007 0.005; > 1UNL C 2 0.247 -0.010 0.002; > 1UNL O 3 0.297 0.089 0.093; > 1UNL C 4 0.439 0.091 0.094; > 1UNL C 5 0.486 0.197 0.191; > 1UNL H 6 0.054 -0.082 -0.063; > 1UNL H 7 0.058 0.092 -0.024; > 1UNL H 8 0.058 -0.027 0.106; > 1UNL H 9 0.283 0.012 -0.099; > 1UNL H 10 0.283 -0.109 0.033; > 1UNL H 11 0.477 0.113 -0.006; > 1UNL H 12 0.477 -0.007 0.126; > 1UNL H 13 0.448 0.296 0.162; > 1UNL H 14 0.595 0.201 0.195; > 1UNL H 15 0.448 0.177 0.292; > 0.00000 0.00000 0.00000; > 1 molecule converted; > ```; > ; > As a permanent record (file `ether.gro.txt` attached below), this works fine for subsequent edits by obabel (e.g. conversion to .xyz). Substitution of the first atom entry to `C1` (see `ether_modified.gro.txt` attached) does not matter. Introduction of `Be` as second does not stop the conversion, however yields an .xyz with `B` instead of `Be`. An additional edit of atom 3 to either `Li`, `Mg`, `Na`, `Ca`, `Fe`, `Cl`, or `Br` currently yields; > ; > ```shell; > $ obabel ether_modified.gro -oxyz; > ==============================; > *** Open Babel Error in Convert; > Convert failed with an exception; > 0 molecules converted; > ```; > ; > equally in an instance of openbabel as provided by Linux Debian 13/trixie (branch testing, version 3.1.1 -- Jan 4 2023 -- 09:58:24).; > ; > [ether_modified.gro.txt](https://github.com/openbabel/openbabel/files/12237940/ether_modified.gro.txt) [ether.gro.txt](https://github.com/openbabel/openbabel/files/12237942/ether.gro.txt). Thank you~ I understand. May I ask if it will be fixed in the future?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2614#issuecomment-1662038070:1709,test,testing,1709,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2614#issuecomment-1662038070,1,['test'],['testing']
Testability,obgui doesn't crash for me anymore when I try to reproduce the error in #1555. nwchemformat.so doesn't crash my test program anymore either,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1556#issuecomment-290098383:112,test,test,112,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1556#issuecomment-290098383,1,['test'],['test']
Testability,"ode replicates the behavior of obabel commands above, generating the proper molecule only at the second pass:; <pre><code>; # Python Obabel/Pybel test; import pybel; ob = pybel.ob; from sys import argv; fp = open('benzoicAcid.smi', 'w'); fp.write('OC(=O)c1ccccc1 benzoicAcid\n'); fp.close(); """"""read SMI and generate Mol2 (first pass)""""""; obc = ob.OBConversion(); obc.SetInAndOutFormats('smi', 'mol2'); obc.OpenInAndOutFiles('benzoicAcid.smi', 'wrong.mol2'); mol = ob.OBMol(); notatend = obc.Read(mol); while notatend:; """"""pybel shortcut""""""; pmol = pybel.Molecule(mol); pmol.make3D(); mol = pmol.OBMol; mol.CorrectForPH(); mol.AddHydrogens(); obc.Write(mol); """"""XXX write molecule with wrong carboxylic atom typing: O.3 and O.2""""""; print ""Atoms count (first pass):"", mol.NumAtoms(); mol = ob.OBMol(); notatend = obc.Read(mol); """""" re-read the wrong molecule""""""; obc = ob.OBConversion(); obc.SetInAndOutFormats('mol2', 'mol2'); obc.OpenInAndOutFiles('op.mol2', 'right.mol2'); mol = ob.OBMol(); notatend = obc.Read(mol); while notatend:; """"""pybel shortcut""""""; pmol = pybel.Molecule(mol); #pmol.make3D(); mol = pmol.OBMol; mol.CorrectForPH(); mol.AddHydrogens(); obc.Write(mol); """"""XXX write molecule with correct carboxylic atom typing: O.co2 """"""; print ""Atoms count (second pass):"", mol.NumAtoms(); mol = ob.OBMol(); notatend = obc.Read(mol); </code></pre>; I've tried to dig into the problem a bit more, using the patterns from the phmodel.txt, and they seem to fail to identify the 'COO-' pattern in the mol2 files generated with the previous code.; <pre><code>; # pH model test; import pybel; from sys import argv; """"""patterns from phmodel.txt""""""; pre = 'O=C[OD1-0:1]'; post = 'O=C[O-:1]'; transform = pybel.ob.OBChemTsfm(); success = transform.Init(pre, post); mol = pybel.readfile('mol2', argv[1]).next(); smart = pybel.Smarts(pre); print ""PATTERN FOUND"", smart.findall(mol); transform.Apply(mol.OBMol); mol.write('mol2', 'obpython.mol2', overwrite=1); </code></pre>. Original comment by: @sforli",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800260:2449,test,test,2449,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800260,2,['test'],['test']
Testability,"oduce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:20400,test,test,20400,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,ok I messed the python binding tests...,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1887#issuecomment-420736651:31,test,tests,31,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1887#issuecomment-420736651,1,['test'],['tests']
Testability,"old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROC",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:3810,test,test,3810,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testbabel']"
Testability,"om.cpp(1168) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1213) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; ..\..\src\atom.cpp(1241) : error C3861: '_finite': identifier not found; mol.cpp; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; ..\..\src\mol.cpp(1908) : error C3861: '_finite': identifier not found; residue.cpp; ring.cpp; rotamer.cpp; rotor.cpp; transform.cpp; typer.cpp; Generating Code...; Creating browse information file...; Microsoft Browse Information Maintenance Utility Version 9.00.21022; Copyright (C) Microsoft Corporation. All rights reserved.; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Debug\BuildLog.htm""; OBDLL - 15 error(s), 0 warning(s); ------ Build started: Project: OBConv, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Debug\BuildLog.htm""; OBConv - 1 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Linking...; LINK : fatal error LNK1104: cannot open file 'odbccp32.libi'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Debug\BuildLog.htm""; OBFPRT - 1 error(s), 0 warning(s); ------ Build started: Project: FastSearch, Configuration: Debug Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138:2072,log,log,2072,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781138,1,['log'],['log']
Testability,"org/wiki/CMake) OpenBabel to compile the development code on RedHad Linux of 64bit box. First, the newly compiled babel program fails making an index output file as follows. $ babel ten.smi -osf. babel: cannot write output format!. Open Babel 2.2.99 -- Mar 1 2010 -- 15:53:14. Usage: babel [-i<input-type>] <name> [-o<output-type>] <name>. Try -H option for more information. However, it can convert the SMILES file into a SDF file without any problem by “babel -ismi ten.smi -osdf ten.sdf”. Yes, it can write SDF output, but not index.... . Second, during the “make test”, some tests failed as follows:; ; Running tests... Test project path/to/build/openbabel. Start 1: uniqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1126,Test,Test,1126,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"orm of C6H6. The result will be a neuter, uncharged molecule. I speculate this is behind the switch `Add hydrogens (make explicit)` if engaging the GUI of OpenBabel. The toggle `-p` adds protons to a structure deemed suitable for a certain pH value. Note: If not specified further, by an explicit number, `p` corresponds to a pH of 7.4 ([reference](https://open-babel.readthedocs.io/en/latest/Command-line_tools/babel.html?highlight=protonate), search section «If you want to add hydrogens appropriate for pH7.4 when doing the conversion the command would be:»). Assuming the basicity of the cyclic amine in your ligand to be somewhere in the range between triethylamine and morpholine, I would be fine if `-p` protonates the amine to yield an ammonium. However, check your input structure about the terminal sulfonic acid. It can't be a group attached to an alkyl chain _and simultaneously_ thrice protonated. What is the origin of your .pdb? With all three S-O distances equal to 1.47 Angstrom, the picture is _more likely_ you started with a deprotonated molecule in first place, than R-SO3H which formally distinguishes between two instances of S=O [shorter bond length between S and O), and one of S-O-H [longer bond length between S and O]. (Compare with the example about p-TsOH, attached below.). Addition: OpenBabel is _one_ popular engine to perform protonations. You may benchmark it in comparison with others in terms of accuracy and rate of processing, e.g. [Dimorphite](https://durrantlab.pitt.edu/dimorphite-dl/), equally from Pitsburgh, which may be used to screen multiple sites potentially subject to protonation in an adjustable range of pH value. If one submits the (still questionable) SMILES string about the above ligand as `OCCN1CCN(CCS(O)(O)O)CC1`, dimorphite-dl suggests the three species ; `OCCN1CC[NH+](CCS(O)(O)O)CC1`	; `OCC[NH+]1CC[NH+](CCS(O)(O)O)CC1`; `OCC[NH+]1CCN(CCS(O)(O)O)CC1`. [test_pTsOH.zip](https://github.com/openbabel/openbabel/files/6074985/test_pTsOH.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-789553896:1684,benchmark,benchmark,1684,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-789553896,1,['benchmark'],['benchmark']
Testability,"os; for filename in os.listdir(""mofs""):; with open(os.path.join(""mofs"", filename)) as in_file:; mof = in_file.read(); mol = pybel.readstring(""cif"", mof); mol.unitcell.FillUnitCell(mol.OBMol); print filename, len(mol.write(""cif"")); ```. and ran with. ```; python -m cProfile -s time test.py | grep FillUnitCell; ```. ""mofs"" is a directory with 13 files, all of which are non-P1 cifs and none of which break the old approach. **Test 1:** Old method vs new method in collision detection. Less characters means duplicates removed. Old:. ```; CoMOF74.cif 31809; FeMOF74.cif 530843; HKUST-1.cif 9622; MgMOF74.cif 418092; MIL-101.cif 991528; NiMOF74.cif 35987; NOTT-101.cif 334571; NU-125.cif 71438; SALEM-2.cif 95843; UiO-66.cif 578635; UTSA-20.cif 155004; ZIF-8.cif 7135; ```. New:. ```; CoMOF74.cif 9497; FeMOF74.cif 12043; HKUST-1.cif 8772; MgMOF74.cif 15118; MIL-101.cif 902758; NiMOF74.cif 10771; NOTT-101.cif 28685; NU-125.cif 64088; SALEM-2.cif 21477; UiO-66.cif 29745; UTSA-20.cif 13846; ZIF-8.cif 5908; ```. **Test 2:** Current hash vs 4x length hash, to test how an unoptimized hash performs. Shorter hash:. ``` c; snprintf(hash, 22, ""%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.026 0.310 4.026 0.310 {_openbabel.OBUnitCell_FillUnitCell}; ```. Longer hash:. ``` c; snprintf(hash, 88, ""%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f%03d,%.3f,%.3f,%.3f"", atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z(), atom->GetAtomicNum(), baseV.x(), baseV.y(), baseV.z());; ```. ```; ncalls tottime percall cumtime percall filename:lineno(function); 13 4.042 0.311 4.042 0.311 {_openbabel.OBUnitCell_FillUnitCell}; ```. They're basically the same. I'm guessing that 1. there are only O(N) string comparisons and 2. most of them short-circuit after the first few bytes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778:1087,Test,Test,1087,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-23977778,2,"['Test', 'test']","['Test', 'test']"
Testability,"ou added?. ```; 1102 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1q11_tye.sdf; [726](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:727); pdbmol not equal: Mismatched ExplicitValence, 3 != 4; [727](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:728); 1603 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/4isk_1jy.sdf; [728](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:729); pdbmol not equal: Could only match 0 of 80 atoms (80); [729](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:730); 2461 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1kmn_hso.sdf; [730](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:731); pdbmol not equal: Could only match 0 of 22 atoms (22); [731](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:732); 3216 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/5ot9_aoz.sdf; [732](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:733); pdbmol not equal: Could only match 0 of 29 atoms (29); [733](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:734); 3334 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/3hxb_bd5.sdf; [734](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:735); pdbmol not equal: Could only match 0 of 81 atoms (81); [735](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:736); 3516 /home/runner/work/openbabel/openbabel/test/pdb_ligands_sdf/1fmb_hyb.sdf; [736](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:737); pdbmol not equal: Could only match 0 of 82 atoms (82); [737](https://github.com/openbabel/openbabel/runs/7157139800?check_suite_focus=true#step:12:738); 3944 /home/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256:1104,test,test,1104,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2504#issuecomment-1203963256,1,['test'],['test']
Testability,penBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3372,Log,Log,3372,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability,"please excuse me, the two SMILES 1.) and 2.) are wrong.. - but the attached file 'test.smi' contains the correct SMILES. Original comment by: upgrayedd7",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1249#issuecomment-281803446:82,test,test,82,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1249#issuecomment-281803446,1,['test'],['test']
Testability,"possible, I recommend the use of of the `.sdf` format for the intermediate step because (in contrast to e.g., `.xyz`) it equally contains what MDL coined as _connection table_ about which (and how) atoms are bound. A) The more verbose approach consists of three distinct instructions to the CLI. This documents each step by a permanent record.; `obabel -:'OC(C1=NC=CC=C1CC2=CC=C(C3CCC(S(=O)(NC)=O)CC3)C=C2)=O' --gen2d -osdf -O 2D.sdf`; `obabel -isdf 2D.sdf --gen3d -osdf -O 3D.sdf`; And, because you want to continue with the `.mol2` format; `obabel -isdf 3D.sdf -omol2 -O 3D.mol2`. B) The more condensed approach uses the intermediate output of one of the steps mentioned above as input for the subsequent step. Thus, you start with the SMILES string to form the `.mol2` files without creation of intermediate permanent files. Call OpenBabel with one line of instruction in the pattern of; `obabel -:'OC(C1=NC=CC=C1CC2=CC=C(C3CCC(S(=O)(NC)=O)CC3)C=C2)=O' --gen2d -osdf | obabel -isdf --gen3d -osdf | obabel -isdf -omol2 -O 3D_relayed.mol2`. The comparison of the two approaches reveals that coordinates in the `.mol2` files written differ from each other. As shown, e.g. by vimdiff ([an introduction](https://www.tutorialspoint.com/vim/vim_diff.htm), but you may use a difference viewer of your preference), these differences however _do not_ affect the connection tables in the later part of the `.mol2` files:. ![diff_view](https://user-images.githubusercontent.com/19709084/114673269-878cbc00-9cf5-11eb-8cef-6c68f1e53f15.png). Depending on the intended use of the `.mol2`, these differences may not be relevant to you.*) Or, you use them anyway as a _starting point_ for further minimization with one of the force field options in OpenBabel or a third party program. *) Simplified into the `.xyz` format, you may quantify the difference of the geometries, e.g. by a [Kabsch test](https://github.com/charnley/rmsd). [test_run.zip](https://github.com/openbabel/openbabel/files/6309095/test_run.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2332#issuecomment-819325344:2109,test,test,2109,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2332#issuecomment-819325344,1,['test'],['test']
Testability,ppc64 fedora-devel build log (gzipped). Original comment by: dmierzej,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780557:25,log,log,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/736#issuecomment-281780557,1,['log'],['log']
Testability,pple.CoreFoundation 	0x00007fffac25b514 CFRunLoopRunSpecific + 420; 5 com.apple.AppKit 	0x00007fffa9f3b7d4 _NSEventThread + 205; 6 libsystem_pthread.dylib 	0x00007fffc16d0aab _pthread_body + 180; 7 libsystem_pthread.dylib 	0x00007fffc16d09f7 _pthread_start + 286; 8 libsystem_pthread.dylib 	0x00007fffc16d0221 thread_start + 13. Thread 2:; 0 libsystem_kernel.dylib 	0x00007fffc15e84e6 __workq_kernreturn + 10; 1 libsystem_pthread.dylib 	0x00007fffc16d0622 _pthread_wqthread + 1023; 2 libsystem_pthread.dylib 	0x00007fffc16d0211 start_wqthread + 13. Thread 3:; 0 libsystem_kernel.dylib 	0x00007fffc15e84e6 __workq_kernreturn + 10; 1 libsystem_pthread.dylib 	0x00007fffc16d07b5 _pthread_wqthread + 1426; 2 libsystem_pthread.dylib 	0x00007fffc16d0211 start_wqthread + 13. Thread 4:; 0 libsystem_kernel.dylib 	0x00007fffc15e84e6 __workq_kernreturn + 10; 1 libsystem_pthread.dylib 	0x00007fffc16d07b5 _pthread_wqthread + 1426; 2 libsystem_pthread.dylib 	0x00007fffc16d0211 start_wqthread + 13. Thread 5:; 0 libsystem_kernel.dylib 	0x00007fffc15e84e6 __workq_kernreturn + 10; 1 libsystem_pthread.dylib 	0x00007fffc16d07b5 _pthread_wqthread + 1426; 2 libsystem_pthread.dylib 	0x00007fffc16d0211 start_wqthread + 13. Thread 6:; 0 libsystem_kernel.dylib 	0x00007fffc15e84e6 __workq_kernreturn + 10; 1 libsystem_pthread.dylib 	0x00007fffc16d07b5 _pthread_wqthread + 1426; 2 libsystem_pthread.dylib 	0x00007fffc16d0211 start_wqthread + 13. Thread 0 crashed with X86 Thread State (64-bit):; rax: 0xc000000000000000 rbx: 0x00007fc173231660 rcx: 0x00007fc171b36700 rdx: 0x00007fc171bbf810; rdi: 0x00007fc173231660 rsi: 0x00007fff5c66b0a8 rbp: 0x00007fff5c66b160 rsp: 0x00007fff5c66b0e0; r8: 0x0000000000000000 r9: 0x00000000ffffffff r10: 0x0000000000000001 r11: 0x0000000000000001; r12: 0x0000000000000001 r13: 0x00007fc1730ca210 r14: 0x0000000000000003 r15: 0x0000000000000000; rip: 0x000000010367922e rfl: 0x0000000000010206 cr2: 0x0000000103676d48; ; Logical CPU: 0; Error Code: 0x00000000; Trap Number: 13; ```,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1555#issuecomment-289633742:7630,Log,Logical,7630,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1555#issuecomment-289633742,1,['Log'],['Logical']
Testability,"python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > S",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:4163,test,test,4163,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,r.cpp: AppleDouble encoded Macintosh file; ./data/._aromatic.txt: AppleDouble encoded Macintosh file; ./data/._types.txt: AppleDouble encoded Macintosh file; ./data/._psa.txt: AppleDouble encoded Macintosh file; ./data/._fragments.txt: AppleDouble encoded Macintosh file; ./data/._logp.txt: AppleDouble encoded Macintosh file; ./data/._space-groups.txt: AppleDouble encoded Macintosh file; ./data/._isotope-small.txt: AppleDouble encoded Macintosh file; ./data/._element.txt: AppleDouble encoded Macintosh file; ./data/._SMARTS_InteLigand.txt: AppleDouble encoded Macintosh file; ./data/._isotope.txt: AppleDouble encoded Macintosh file; ./data/._UFF.prm: AppleDouble encoded Macintosh file; ./data/._resdata.txt: AppleDouble encoded Macintosh file; ./data/._torlib.txt: AppleDouble encoded Macintosh file; ./data/._ringtyp.txt: AppleDouble encoded Macintosh file; ./data/._bondtyp.txt: AppleDouble encoded Macintosh file; ./data/._patterns.txt: AppleDouble encoded Macintosh file; ./scripts/._openbabel-java.i: AppleDouble encoded Macintosh file; ./scripts/perl/._Makefile.PL: AppleDouble encoded Macintosh file; ./scripts/._openbabel-perl.i: AppleDouble encoded Macintosh file; ./scripts/._openbabel-ruby.i: AppleDouble encoded Macintosh file; ./._INSTALL: AppleDouble encoded Macintosh file; ./include/openbabel/math/._transform3d.h: AppleDouble encoded Macintosh file; ./include/openbabel/math/._matrix3x3.h: AppleDouble encoded Macintosh file; ./include/openbabel/math/._vector3.h: AppleDouble encoded Macintosh file; ./include/openbabel/math/._spacegroup.h: AppleDouble encoded Macintosh file; ./include/openbabel/._mol.h: AppleDouble encoded Macintosh file; ./include/openbabel/._obiter.h: AppleDouble encoded Macintosh file; ./test/._aromatic.pl: AppleDouble encoded Macintosh file; ./test/files/._aromatics.smi: AppleDouble encoded Macintosh file; ./tools/._babel.cpp: AppleDouble encoded Macintosh file; ./doc/._roundtrip.1: AppleDouble encoded Macintosh file. Original comment by: dmierzej,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/783#issuecomment-281793259:2588,test,test,2588,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/783#issuecomment-281793259,2,['test'],['test']
Testability,"raw extra hydrogens. I'm quite sure these hydrogens are not supposed to be drawn. In the attached image, the ""CH"" on carbon monoxide is not numbered; I think this means it's not explicitly represented in the OBMol object, but the SVG writer decides to draw it anyway. In the SVG file, the text comes out as ""CH"" in a single element. I've tried almost all combinations of add/delete, implicit/explicit hydrogens in the input and output options. If I set {""C"":True} in write(), it won't draw the ""CH"" on carbon monoxide - in fact it doesn't draw any atoms to the right of the triple bond, but I do want it to draw ""C"". I could just edit the .svg file manually, but that's probably not the best solution. Generally speaking, all I want is for OpenBabel to draw exactly the same atoms that I gave it! :). In [1]: import pybel; In [2]: mol = pybel.readfile('can', 'can.txt', opt={""h"":True}) ; In [3]: mol.next().write(""svg"", ""can.svg"", opt={""a"":True,""P"":600,""i"":True}, overwrite=True). Thanks,. - Lee-Ping; ```. ```; The H atoms are drawn intentionally. See the docs for the 'a' option:; a draw all carbon atoms; So propane would display as H3C-CH2-CH3. What you want is an additional option that draws the C's but not the H's. I don't have time now to do development, but it should be pretty easy to see where option 'a' is in the C++ code and add a new option to do as you suggest. Perhaps you, or someone else reading this, would like to try this. - Noel; ```. ```; Hi there,. I think I got it to work! I added a “capital X” option to the SVG output format, which sets the “allExplicit” option in OBDepict. This option makes OBDepict ignore the implicit hydrogen count on atoms, so it only draws atoms that explicitly there. Examples attached. I’ve created a pull request and I’ll do a number of tests throughout the day. Please take a look and let me know what you think. - Lee-Ping; ```. ![products](https://cloud.githubusercontent.com/assets/1441560/4423294/c3703532-4593-11e4-83b8-2ce92b052904.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/93#issuecomment-56979153:1970,test,tests,1970,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/93#issuecomment-56979153,1,['test'],['tests']
Testability,"rning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:13429,test,test,13429,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testkekule']"
Testability,"rning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:10964,test,test,10964,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testunique']"
Testability,"ror(s), 0 warning(s); ========== Build: 2 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCommonFormats:. ========== Build: 0 succeeded, 0 failed, 4 up-to-date, 0 skipped ==========. OBConsole:. ------ Build started: Project: OBConsole, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; babel.cpp; Linking...; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConsole\Release\BuildLog.htm""; OBConsole - 0 error(s), 0 warning(s); ========== Build: 1 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBConv:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBCSharp: (skip - requires swig). ------ Build started: Project: OBCSharp, Configuration: Release Win32 ------; Swigify; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Swigify""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCSharp\Release\BuildLog.htm""; OBCSharp - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBDESC:. ========== Build: 0 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. OBDLL:. ========== Build: 0 succeeded, 0 failed, 2 up-to-date, 0 skipped ==========. OBError:. ========== Build: 0 succeeded, 0 failed, 1 up-to-date, 0 skipped ==========. OBFPRT:. ========== Build: 0 succeeded, 0 failed, 3 up-to-date, 0 skipped ==========. OBGUI: (skip - requires wxwidgets). ------ Build started: Project: OBGUI, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; OBGUI.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wxprec.h': No such file or directory; stdwx.cpp; ..\..\src\gui\stdwx.h(22) : fatal error C1083: Cannot open include file: 'wx/wx",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:3292,log,log,3292,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,s failed as follows:; ; Running tests... Test project path/to/build/openbabel. Start 1: uniqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21:,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1712,Test,Test,1712,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,s happening with SDF as it tries to correctly handle; stereo:. > # obabel tmp.mol -onul ---errorlevel 3; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule MDL MOL format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > ; > # Ran OpenBabel::Clear Molecule; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::AssignSpinMultiplicity; > ; > # Ran OpenBabel::AssignSpinMultiplicity; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Kekulize; > ; > # Ran OpenBabel::Kekulize; > ; > **\* Open Babel Audit Log in OpenBabel::StereoFrom3D; > ; > # Ran OpenBabel::StereoFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindSSSR; > ; > # Ran OpenBabel::FindSSSR; > ; > **\* Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; > ; > # Ran OpenBabel::AssignAromaticFlags; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindRingAtomsAndBonds; > ; > # Ran OpenBabel::FindRingAtomsAndBonds; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignImplicitValence; > ; > # Ran OpenBabel::AssignImplicitValence; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; > ; > # Ran OpenBabel::AssignHybridization; > ; > **\* Open Babel Audit Log in OpenBabel::OBBond::IsClosure; > ; > # Ran OpenBabel::PerceiveClosureBonds; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; > ; > # Ran OpenBabel::AssignHybridization; > ; > **\* Open Babel Audit Log in OpenBabel::TetrahedralFrom3D; > ; > # Ran OpenBabel::TetrahedralFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::CisTransFrom3D; > ; > # Ran OpenBabel::CisTransFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule MDL MOL format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > Ran OpenBabel::Clear Molecule; > 1 molecule converted. At least some of this work is unneccesary. Kekulisation? Assigning implicit; ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524:854,Log,Log,854,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524,16,['Log'],['Log']
Testability,"s. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:12367,test,test,12367,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testkekule']"
Testability,"s. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:10075,test,test,10075,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testunique']"
Testability,"sage: babel [-i<input-type>] <name> [-o<output-type>] <name>. Try -H option for more information. However, it can convert the SMILES file into a SDF file without any problem by “babel -ismi ten.smi -osdf ten.sdf”. Yes, it can write SDF output, but not index.... . Second, during the “make test”, some tests failed as follows:; ; Running tests... Test project path/to/build/openbabel. Start 1: uniqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***F",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1405,Test,Test,1405,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,sdf test file. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777321:4,test,test,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/559#issuecomment-281777321,1,['test'],['test']
Testability,sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test ..................,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3034,Test,Test,3034,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,sed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passe,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2838,Test,Test,2838,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,signAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:2686,Log,Log,2686,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability,"smart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; matrix3x3.cpp; kekulize.cpp; griddata.cpp; grid.cpp; Generating Code...; Compiling...; generic.cpp; descriptor.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; base.cpp; atom.cpp; alias.cpp; Generating Code...; Compiling...; vector3.cpp; typer.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 3 warning(s); ------ Build started: Project: OBConv, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; format.cpp; Compiling...; obconversion.cpp; Linking...; Creating library ../OBConv.lib and object ../OBConv.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBConv\Release\BuildLog.htm""; OBConv - 0 error(s), 0 warning(s); ------ Build started: Project: OBCommonFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; smilesformat.cpp; pdbformat.cpp; opendxformat.cpp; obmolecformat.cpp; mol2format.cpp; mdlformat.cpp; atomrecord.cpp; APIInterface.cpp; Generating Code...; Linking...; Creating library ../obcommon.lib and object ../obcommon.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBCommonFormats\Release\BuildLog.htm""; OBCommonFormats - 0 error(s), 0 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C424",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167:2237,log,log,2237,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781167,1,['log'],['log']
Testability,st; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; Unable to find executable: /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittes,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:1378,test,test,1378,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,"submitted to openbabel misses an indication that the molecule is a radical (`RAD`); otherwise, the algorithm seems to work fine. This applies at least for openbabel 3.1.1 as the repositories of Linux Debian 12/bookworm (testing) currently provides (i.e., Mar 29 2022 update). For example, let the test page of [ChemDraw JS](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) create a methyl radical (there is a button name to structure) with an input of «methyl radical». ![2022-08-13_chemdraw_js](https://user-images.githubusercontent.com/19709084/184505193-d7e5ba2c-83d6-425a-85ab-9e9000eca693.png). and subsequently, run structure -> get mol to obtain the following file:. ```; ACS Document 1996; ChemDraw08132219512D. 1 0 0 0 0 0 0 0 0 0999 V2000; 0.0000 0.0000 0.0000 C 0 4 0 0 0 0 0 0 0 0 0 0; M RAD 1 1 2; M STY 1 1 DAT; M SLB 1 1 1; M SAL 1 1 1; M SDD 1 -1.3654 -1.2329 DA ALL 1 5; M SED 1 methyl radical; M END; ```. Pasting this content into `test.mol` and running. ```bash; $ obabel test.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```; does not lead to an additional fourth hydrogen atom. What appears to be missing in the `.mol` you present to the assignment of an InChI is the statement to retain the molecule as a radical (the line including the keyword `RAD`). E.g. for a `.mol` file derived from the above eventually including three hydrogen atoms. ```bash; $ obabel test.mol -h --gen3d -O test_withH.mol; 1 molecule converted; $ cat test_withH.mol ; ACS Document 1996; OpenBabel081322. 4 3 0 0 0 0 0 0 0 0999 V2000; 1.0126 -0.1536 -0.1280 C 0 0 0 0 0 3 0 0 0 0 0 0; 2.0332 0.1727 0.0263 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5023 -0.7174 0.6425 H 0 0 0 0 0 0 0 0 0 0 0 0; 0.5022 0.0841 -1.0527 H 0 0 0 0 0 0 0 0 0 0 0 0; 1 2 1 0 0 0 0; 1 3 1 0 0 0 0; 1 4 1 0 0 0 0; M RAD 1 1 2; M END; $ obabel test_withH.mol -oinchi; InChI=1S/CH3/h1H3; 1 molecule converted; ```. To get more familiar how `.mol` (and if you want to process batches of models, the container form of `.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100:1023,test,test,1023,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214204100,1,['test'],['test']
Testability,"sue ""smiles to fasta conversion"" #2359, the peptide sequence is converted to a nonsense open SMILES. For example the following input:; > ; > `>Test ARFF` `ARFF`; > ; > produces the following SMILES output (either in the output pane or the GUI or in a file) :; > ; > `[H].[N].[C].[C].[O].[C].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[N].[C].[N].[N].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[O].[H]`; > ; > However, **IF** the 'Display in firefox' option is enabled before doing the conversion, then the output is instead:; > ; > `N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)O)Cc1ccccc1)Cc1ccccc1)CCCNC(=[NH2])N)C`; > ; > which creates the correct peptide structure when pasted into Marvin Sketch.; > ; > Also, by default OpenBabel expects the FASTA to contain nucleotide sequences not amino acid sequences, so the input:; > ; > `>Test AR` `AR`; > ; > produces the output:; > ; > `O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C]([C][C]1O)N1[C]=NC2=[C]N=C([N])N=C12)n1cnc2c(N)ncnc12.O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O)n1c(=O)[nH]c(=O)c(C)c1)N1C(=O)N=[C][C]=C1`; > ; > which does not represent the required peptide. I couldn't see any way to make OpenBabel treat the input FASTA as a peptide sequence, although it may exist. I guess providing a way to specify that an input FASTA is a peptide may be a feature request :); > ; > ## Steps to Reproduce; > In the OB GUI enable the ""Input below (ignore input file)"" option. In the left hand input pane enter:; > ; > `>Test ARFF` `ARFF`; > ; > Enable the ""Output below only (no output file)"" and make sure the ""Display in firefox"" option is NOT enabled. Click the CONVERT button. Thank you for your careful discovery.; And is it impossible to batch convert the format when the 'Display in firefox' option is enabled?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2367#issuecomment-2276983595:9065,Test,Test,9065,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2367#issuecomment-2276983595,2,['Test'],['Test']
Testability,"t (14 lines):; running install; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\include', 'C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\libs', 'C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\PCbuild\\amd64', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel\openbabel-python.i to openbabel\openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar -IC:\Users\Liu.D.H\anaconda3\envs\common\include -IC:\Users\Liu.D.H\anaconda3\envs\common\include -I/usr/local/include/openbabel3 -o openbabel\openbabel-python_wrap.cpp openbabel\openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; ----------------------------------------; ERROR: Command errored out with exit status 1: 'C:\Users\Liu.D.H\anaconda3\envs\common\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\Liu.D.H\\AppData\\Local\\Temp\\pip-install-ngq7bdyo\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\Liu.D.H\\AppData\\Local\\Temp\\pip-install-ngq7bdyo\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' install --record 'C:\Users\Liu.D.H\AppData\Local\Temp\pip-record-djk7941x\install-record.txt' --single-version-externally-managed --compile --install-headers 'C:\Users\Liu.D.H\anaconda3\envs\common\Include\openbabel' Check the logs for full command output. (common) C:\Users\Liu.D.H>obabel -V; Open Babel 3.1.1 -- May 16 2020 -- 11:57:55. (common) C:\Users\Liu.D.H>; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-820952949:5247,log,logs,5247,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-820952949,2,['log'],['logs']
Testability,"t 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test .................... Passed 0.00 sec. Start 35: pytest_babel. 35/37 Test #35: pytest_babel .....................***Failed 0.03 sec. Start 36: pytest_sym. 36/37 Test #36: pytest_sym ....................... Passed 0.08 sec. Start 37: pytest_fastsearch. 37/37 Test #37: pytest_fastsearch ................***Failed 0.03 sec. 68% tests passed, 12 tests failed out of 37. Total Test time (real) = 4.23 sec. The following tests FAILED:. 	 2 - smiles_Test (SEGFAULT). 	 3 - stereo_Test (SEGFAULT). 	 7 - cistrans_Test (SEGFAULT). 	 9 - aromatest_Test (SEGFAULT). 	 16 - ffghemical_Test (Failed). 	 17 - ffmmff94_Test (Failed). 	 18 - ffuff_Test (Failed). 	 26 - logp_psa_Test (SEGFAULT). 	 29 -",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3705,Test,Test,3705,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"tar.bz2 file, H2O_Std can be read via obabel -ig03 H2O_Std.log -ogau, however H2O_NoSym.log can not. Original comment by: dwondrousch",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1157#issuecomment-281801412:59,log,log,59,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1157#issuecomment-281801412,2,['log'],['log']
Testability,"tart 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test ..................... Passed 0.03 sec. Start 31: ringtest_Test. 31/37 Test #31: ringtest_Test .................... Passed 0.13 sec. Start 32: smartstest_Test. 32/37 Test #32: smartstest_Test .................. Passed 0.21 sec. Start 33: smilesmatch_Test. 33/37 Test #33: smilesmatch_Test .................***Exception: SegFault 1.44 sec. Start 34: unitcell_Test. 34/37 Test #34: unitcell_Test .................... Passed 0.00 sec. Start 35: pytest_babel. 35/37 Test #35: pytest_babel .....................***Failed 0.03 sec. Start 36: pytest_sym. 36/37 Test #36: pytest_sym ....................... Passed 0.08 sec. Start 37: pytest_fastsearch. 37/37 Test #37: pytest_fastsearch ................***Failed 0.03 sec. 68% tests passed, 12 tests failed out of 37. Total Test time (real) = 4.23 sec. The following tests FAILED:. 	 2 - smiles_Test (SEGFAULT). 	 3 - stereo_Test (SEGFAULT). 	 7 - cistrans_Test (SEGFAULT). 	 9 - aromatest_Test (SEGFAULT). 	 16 - ffghemical_Test (Failed). 	 17 ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:3612,Test,Test,3612,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"td::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; C:\Program Files\Microsoft Visual Studio 9.0\VC\include\vector(46) : warning C4503: 'std::_Tree<_Traits>::_Buynode' : . decorated name length exceeded, name was truncated; with; [; . _Traits=std::_Tmap_traits<std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>,std::le. ss<std::set<OpenBabel::ci_string>>,std::allocator<std::pair<const . std::set<OpenBabel::ci_string>,std::map<OpenBabel::ci_string,std::vector<std::string>>>>,false>; ]; chemtoolformat.cpp; Generating Code...; Compiling...; chemdrawct.cpp; chemdrawcdx.cpp; ../../include\openbabel/reaction.h(26) : fatal error C1083: Cannot open include file: 'boost/shared_ptr.hpp': No such . file or directory; chem3dformat.cpp; cccformat.cpp; carformat.cpp; cacheformat.cpp; cacaoformat.cpp; boxformat.cpp; bgfformat.cpp; balstformat.cpp; amberformat.cpp; alchemyformat.cpp; adfformat.cpp; acrformat.cpp; Generating Code...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBMoreFormats\Release\BuildLog.htm""; OBMoreFormats - 1 error(s), 10 warning(s); ========== Build: 0 succeeded, 1 failed, 4 up-to-date, 0 skipped ==========. OBPythonOBF: (skip - requires swig). ------ Build started: Project: OBPythonOBF, Configuration: Release Win32 ------; Running SWIG to generate openbabel-python_wrap.cpp; 'swig' is not recognized as an internal or external command,; operable program or batch file.; Project : error PRJ0019: A tool returned an error code from ""Running SWIG to generate openbabel-python_wrap.cpp""; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBPythonOBF\Release\BuildLog.htm""; OBPythonOBF - 1 error(s), 0 warning(s); ========== Build: 0 succeeded, 1 failed, 6 up-to-date, 0 skipped ==========. OBUtilFormats:. ------ Build started: Project: OBUtilFormats, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Com",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152:10896,log,log,10896,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781152,1,['log'],['log']
Testability,"ten.sdf”. Yes, it can write SDF output, but not index.... . Second, during the “make test”, some tests failed as follows:; ; Running tests... Test project path/to/build/openbabel. Start 1: uniqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1609,Test,Test,1609,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,test file of 40k smiles. Original comment by: nobody,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776393:0,test,test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776393,1,['test'],['test']
Testability,test molecule. Original comment by: dhouston6,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800245:0,test,test,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800245,1,['test'],['test']
Testability,testing porgram. Original comment by: yongjinxu,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/914#issuecomment-281795496:0,test,testing,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/914#issuecomment-281795496,1,['test'],['testing']
Testability,testing program. Original comment by: yongjinxu,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/909#issuecomment-281795438:0,test,testing,0,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/909#issuecomment-281795438,1,['test'],['testing']
Testability,this failure happens with `-march=native` GCC compiler flags on Skylake and Broadwell CPUs.; all tests pass on Ivybridge.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2138#issuecomment-599190721:97,test,tests,97,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2138#issuecomment-599190721,1,['test'],['tests']
Testability,"this recently burnt me. a simple test:. `echo 'C(=O)O' | obabel -ismi -r -p 14 -osdf --gen3d` # -OH, wrong. `echo 'C(=O)O' | obabel -ismi -r -p 14 -osmi | obabel -ismi --gen3d -osdf` # -O[-], correct",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823027185:33,test,test,33,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823027185,2,['test'],['test']
Testability,"this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:5993,test,test,5993,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testsym']"
Testability,"thon /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > S",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:13333,test,test,13333,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,"thon /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > S",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:11041,test,test,11041,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,tion ; ============================== ; *** Open Babel Audit Log in FindSSSR ; Ran OpenBabel::FindSSSR ; ============================== ; *** Open Babel Audit Log in IsClosure ; Ran OpenBabel::PerceiveClosureBonds ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:3078,Log,Log,3078,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,1,['Log'],['Log']
Testability,"tom Ids as follows: 20; Warning: Stereochemistry is wrong, using the distance geometry method instead; ^C; ```. (intentionally stopped by `Ctrl + C`, hence the `^C`) still displays the obstacle. So your report obabel in iOS would trade better than Debian is worth to note for those with access to both operating systems. Maybe the SMILES was derived from a .sdf already problematic?. Because I'm not aware (yet) of a checker for SMILES in regard of consistency (like for Python [online](https://www.online-ide.com/online_python_syntax_checker), or `pylint` for the CLI; or [checkcif](http://checkcif.iucr.org/) for crystal structure data; or the CIP validator by Hanson et al. ([2018JChemInfModel1755](https://pubs.acs.org/doi/10.1021/acs.jcim.8b00324))), the mentioned cdk-depict sometimes serves me to spot a (potentially) problematic SMILES string: enter e.g., `CC=CC` and the wavy bond indicates the configuration of the double bound is not defined. With the optional display of CIP labels, there equally will be an explicit question mark; this contrasts to `C\C=C\C`, `C\C=C/C`, `C/C=C\C`, and `C/C=C/C`:. ![butene_variations](https://user-images.githubusercontent.com/19709084/203751096-2be1d298-3c71-4a57-acc2-8098cb449534.png). Regarding the second part: thankfully, obabel is equally available as a `.deb` package *prêt-à-porter*/ready to go (Debian's [tracker](https://tracker.debian.org/pkg/openbabel)). There might be a delta in time and functionality between the executables either compiled from the source code here (GitHub), and the one *via* the repositories of DebiChem. With Debian *branch testing* (at present, Debian 12/bookworm) one may consider more like a *rolling release* (comparison to Debian stable, or LTS releases in the Ubuntu family), I do not perceive the delays as problematic. After preparing a package, improvements unrelated to security stay in the purgatory of Debian's branch *unstable* (or sid) for about 5 days; if accepted, they then percolate into *testing*.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644:2427,test,testing,2427,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2317#issuecomment-1326200644,2,['test'],['testing']
Testability,"tput); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testexample.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Python bindings will be compiled; > > Configuring done; > > CMake Warning (dev):; > > Policy CMP0042 is not set: MACOSX_RPATH is enabled by default. Run ""cmake; > > --help-policy CMP0042"" for policy details. Use the cmake_policy command; > > to; > > set the policy and suppress this warning.; > > ; > > MACOSX_RPATH is not specified for the following targets:; > > ; > > inchi; > > openbabel; > > ; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > Generating done; > > ; > > Need help! Thank you~; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/openbabel/openbabel/issues/131.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:23361,test,test,23361,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"tried to generate canonical smiles also? I was having issues with my allenes when converting smiles->to canonical smiles, so that's how I got here. test:; ==============================; obabel -ismi -:""C(Cl)=[C@]=CF"" -ocan. output:; ==============================; *** Open Babel Warning in ParseSmiles; Ignoring stereochemistry. Not enough connections to this atom.; FC=C=CCl; 1 molecule converted. also: always good to check the documentation; https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format_using_Smiley_parser.html or here; https://github.com/openbabel/openbabel/blob/master/src/formats/smiley.h. So, it is a smiles parser error. If I am not mistaken, the allene or cumulene stereochemistry is not well implemented in the obabel smiles parser/system, which means that when smiles are parsed, the allene stereochemistry label is lost before the coordinate generation and thus the result is not useful... This is based on these examples, not the documentation, because when reading the documentation and testing the example from the documentation... It also fails, even though there are as many differing substituents as there can be. test:; ==============================. obabel -ismi -:""NC(Br)=[C@@]=C(F)I"" -ocan. output:; ==============================; *** Open Babel Warning in ParseSmiles; Ignoring stereochemistry. Not enough connections to this atom.; NC(=C=C(I)F)Br; 1 molecule converted. I think this needs to be fixed, or the implementation reconsidered. I'm not sure if I get it but I would like that allene stereochemistry is recognized also if the determining centers are further away from the central atom, even though I am aware that this becomes computationally exhaustive rather quickly, but I think it this needs to be implemented, as allenic groups are not that rare and the resulting downstream artifacts undesirable. . I drew something in chemdraw for fun and further testing :) It took chemdraw a few seconds to figure out whether it is S/R once I adde",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1891#issuecomment-447419567:1186,test,testing,1186,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1891#issuecomment-447419567,1,['test'],['testing']
Testability,"uation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_P",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:8391,test,test,8391,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,2,['test'],"['test', 'testfastsearch']"
Testability,"uce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:17441,test,test,17441,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['test'],['test']
Testability,"uild/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > #WORKING_DIRECTORY; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PRO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:18491,test,test,18491,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['test'],['test']
Testability,uild/test I get:; Start 1: unittest; ```; Could not find executable /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; Looked in the following places:; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Deployment/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; /home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Development/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Release/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/Debug/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/MinSizeRel/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel/openbabel-3.0.0/build/test/RelWithDebInfo/unittest; home/kevin2/builds/openbabel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137:999,test,test,999,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2161#issuecomment-612347137,1,['test'],['test']
Testability,"vert the SMILES file into a SDF file without any problem by “babel -ismi ten.smi -osdf ten.sdf”. Yes, it can write SDF output, but not index.... . Second, during the “make test”, some tests failed as follows:; ; Running tests... Test project path/to/build/openbabel. Start 1: uniqueid_Test. 1/37 Test #1: uniqueid_Test .................... Passed 0.01 sec. Start 2: smiles_Test. 2/37 Test #2: smiles_Test ......................***Exception: SegFault 0.04 sec. Start 3: stereo_Test. 3/37 Test #3: stereo_Test ......................***Exception: SegFault 0.04 sec. Start 4: tetrahedral_Test. 4/37 Test #4: tetrahedral_Test ................. Passed 0.00 sec. Start 5: tetranonplanar_Test. 5/37 Test #5: tetranonplanar_Test .............. Passed 0.00 sec. Start 6: tetraplanar_Test. 6/37 Test #6: tetraplanar_Test ................. Passed 0.00 sec. Start 7: cistrans_Test. 7/37 Test #7: cistrans_Test ....................***Exception: SegFault 0.02 sec. Start 8: stereoperception_Test. 8/37 Test #8: stereoperception_Test ............ Passed 0.03 sec. Start 9: aromatest_Test. 9/37 Test #9: aromatest_Test ...................***Exception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19:",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:1518,Test,Test,1518,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"w evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESS",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:20217,test,test,20217,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['test'],['test']
Testability,"warning C4244: '=' : conversion from 'double' to 'int', possible loss of data; phmodel.cpp; patty.cpp; parsmart.cpp; obutil.cpp; obiter.cpp; molchrg.cpp; mol.cpp; kekulize.cpp; griddata.cpp; grid.cpp; generic.cpp; data.cpp; chiral.cpp; chains.cpp; canon.cpp; ..\..\src\canon.cpp(188) : warning C4305: '+=' : truncation from 'double' to 'float'; builder.cpp; bondtyper.cpp; bond.cpp; atom.cpp; Generating Code...; Compiling...; alias.cpp; Generating Code...; Compiling...; typer.cpp; transform.cpp; rotor.cpp; rotamer.cpp; ring.cpp; Generating Code...; Linking...; Creating library ../OBDLL.lib and object ../OBDLL.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBDLL\Release\BuildLog.htm""; OBDLL - 0 error(s), 2 warning(s); ------ Build started: Project: OBFPRT, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; forcefielduff.cpp; forcefieldmmff94.cpp; forcefieldghemical.cpp; forcefield.cpp; ..\..\src\forcefield.cpp(1828) : warning C4244: 'argument' : conversion from 'time_t' to 'unsigned int', possible loss of data; finger3.cpp; finger2.cpp; Generating Code...; Linking...; Creating library ../OBFPRT.lib and object ../OBFPRT.exp; Embedding manifest...; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFPRT\Release\BuildLog.htm""; OBFPRT - 0 error(s), 1 warning(s); ------ Build started: Project: FastSearch, Configuration: Release Win32 ------; Copying compiler-specific babelconfig.h (if out of date); 0 File(s) copied; Compiling...; fingerprintformat.cpp; fastsearchformat.cpp; Generating Code...; Linking...; LINK : fatal error LNK1181: cannot open input file 'obcommon.lib'; Build log was saved at ""file://c:\PFE.Sardonyx\OpenBabel.SVN\windows-vc2008\OBFS\Release\BuildLog.htm""; FastSearch - 1 error(s), 0 warning(s); ========== Build: 2 succeeded, 1 failed, 2 up-to-date, 0 skipped ==========. Original comment by: peterennis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148:1685,log,log,1685,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/767#issuecomment-281781148,2,['log'],['log']
Testability,"warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:6032,test,test,6032,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,2,['test'],"['test', 'testsym']"
Testability,"with master sources updated today, no segfault here:; julien@debian:~/projects/openbabel/build/bin$ ./babel ---errorlevel 4 -i mopout ~/projects/openbabel/bugs/methane.out -o xyz ~/projects/openbabel/bugs/methane.xyz; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in ConnectTheDots; Ran OpenBabel::ConnectTheDots; ==============================; *** Open Babel Audit Log in PerceiveBondOrders; Ran OpenBabel::PerceiveBondOrders; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Debugging Message in EndModify; _mod is negative - EndModify() called too many times; 1 molecule converted; 8 audit log messages 1 debugging messages",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1334#issuecomment-381322577:271,Log,Log,271,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334#issuecomment-381322577,9,"['Log', 'log']","['Log', 'log']"
Testability,xception: SegFault 0.03 sec. Start 10: atom_Test. 10/37 Test #10: atom_Test ........................ Passed 0.00 sec. Start 11: bond_Test. 11/37 Test #11: bond_Test ........................ Passed 0.00 sec. Start 12: cansmi_Test. 12/37 Test #12: cansmi_Test ...................... Passed 1.27 sec. Start 13: cmlreadfile_Test. 13/37 Test #13: cmlreadfile_Test ................. Passed 0.02 sec. Start 14: conversion_Test. 14/37 Test #14: conversion_Test .................. Passed 0.01 sec. Start 15: datatest_Test. 15/37 Test #15: datatest_Test .................... Passed 0.00 sec. Start 16: ffghemical_Test. 16/37 Test #16: ffghemical_Test ..................***Failed 0.01 sec. Start 17: ffmmff94_Test. 17/37 Test #17: ffmmff94_Test ....................***Failed 0.01 sec. Start 18: ffuff_Test. 18/37 Test #18: ffuff_Test .......................***Failed 0.01 sec. Start 19: formalcharge_Test. 19/37 Test #19: formalcharge_Test ................ Passed 0.12 sec. Start 20: format_Test. 20/37 Test #20: format_Test ...................... Passed 0.01 sec. Start 21: formula_Test. 21/37 Test #21: formula_Test ..................... Passed 0.21 sec. Start 22: internalcoord_Test. 22/37 Test #22: internalcoord_Test ............... Passed 0.00 sec. Start 23: invalidsmarts_Test. 23/37 Test #23: invalidsmarts_Test ............... Passed 0.00 sec. Start 24: invalidsmiles_Test. 24/37 Test #24: invalidsmiles_Test ............... Passed 0.01 sec. Start 25: iterators_Test. 25/37 Test #25: iterators_Test ................... Passed 0.13 sec. Start 26: logp_psa_Test. 26/37 Test #26: logp_psa_Test ....................***Exception: SegFault 0.02 sec. Start 27: math_Test. 27/37 Test #27: math_Test ........................ Passed 0.13 sec. Start 28: mol_Test. 28/37 Test #28: mol_Test ......................... Passed 0.02 sec. Start 29: phmodel_Test. 29/37 Test #29: phmodel_Test .....................***Exception: SegFault 0.05 sec. Start 30: residue_Test. 30/37 Test #30: residue_Test .....................,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345:2648,Test,Test,2648,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796345,1,['Test'],['Test']
Testability,"yFoahIRszi0hPANaCgYi5IGjFFCpy1DnddzFacFG/GGmsrdOCfFmgAuwTNCPCMwajKlIQVemMCPv7+wjDgDhOEBHStHGCZKOjNxvkG3pFl9LMJbbd5qCInIqi3NeTJOYHQs34XlQEuA34QxE51ihlexEpQ71cDtj4+JgNjwy3PchGUm9Jnwvc7y7Vq2rLq6hTc06fR9hySQOlC1CfID8nKt9W1RMi8qsisti2C3VV7VTrYrHYMzJcewKMtapP751ox/vHRfUTQOntBKB5FmeLiD4iqv9ThIXzSXFwaLBuB9Z875yzfVftW83lcz6KIj84UPKd91XEnJOWR2h874GXgF8BrqF1UOxtBAA6d3E6CNwPfBZ4lXpWtztfULfYvSTo9+7dc7Kvr5AEQWB9hcJ6AFTnVDVR1VngS9R/FbftrQvvkiGgoAXwy81gwQFbgXcA9wI3A9uBooiE9Q3UpitOKbAqIm8K+luCLXrsm2Z2BJq/XNmo1P52AXDeIUyBMeCKRjsAegXYAVUZDcMgVHWu+QuRJEl9LYmXzfu/wThJ/VT4YUQOITIVoauJ+fNmijdL/x/v//poGMN6aAAAACV0RVh0ZGF0ZTpjcmVhdGUAMjAyMi0wNy0wM1QwODo0NToxOCswMDowMLKMtZkAAAAldEVYdGRhdGU6bW9kaWZ5ADIwMjItMDctMDNUMDg6NDU6MTgrMDA6MDDD0Q0lAAAAAElFTkSuQmCC)).; > ; > ## Actual Behavior; > As also reported by shahik and fredrikw in issue ""smiles to fasta conversion"" #2359, the peptide sequence is converted to a nonsense open SMILES. For example the following input:; > ; > `>Test ARFF` `ARFF`; > ; > produces the following SMILES output (either in the output pane or the GUI or in a file) :; > ; > `[H].[N].[C].[C].[O].[C].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[N].[C].[N].[N].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[N].[C].[C].[O].[C].[C].[C].[C].[C].[C].[C].[H].[H].[H].[H].[H].[H].[H].[H].[H].[O].[H]`; > ; > However, **IF** the 'Display in firefox' option is enabled before doing the conversion, then the output is instead:; > ; > `N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)N[C@H](C(=O)O)Cc1ccccc1)Cc1ccccc1)CCCNC(=[NH2])N)C`; > ; > which creates the correct peptide structure when pasted into Marvin Sketch.; > ; > Also, by default OpenBabel expects the FASTA to contain nucleotide sequences not amino acid sequences, so the input:; > ; > `>Test AR` `AR`; > ; > produces the output:; > ; > `O[P@@](=O)([O])OC[C@H]1O[C@H](C[C@@H]1O[P@@](=O)([O])OC[C@H]1O[C]([C][C]1O)N1[C]=NC2=[C]N=C([N])N=C12)n1cnc2c(N)ncnc12.O[P@@]",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2367#issuecomment-2276983595:8197,Test,Test,8197,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2367#issuecomment-2276983595,1,['Test'],['Test']
Testability,yes that argument could be made 😄. logically sound!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-1237638493:35,log,logically,35,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-1237638493,1,['log'],['logically']
Testability,"} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:14003,test,test,14003,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testkekule']"
Testability,"} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > but the new evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:11553,test,test,11553,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,2,['test'],"['test', 'testunique']"
Usability, *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Debugging Message in GetAtom ; Requested Atom Out of Range ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignTypes ; Ran OpenBabel::AssignTypes ; ============================== ; *** Open Babel Audit Log in AssignPartialCharges ; Ran OpenBabel::AssignPartialCharges ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in WriteChemObjectImpl ; OpenBabel::Write molecule XYZ cartesian coordinates format; 1 molecule converted ; 1 info messages 45 audit log messages 1 debugging messages.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:5252,Clear,Clear,5252,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,2,['Clear'],['Clear']
Usability, ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ========================,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:1586,Clear,Clear,1586,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,2,['Clear'],['Clear']
Usability," at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > Syntax Warning in cmake code at; > ; > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > ; > Argument not separated from preceding token by whitespace.; > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:2092,Simpl,Simplify,2092,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['Simpl'],['Simplify']
Usability," produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:4814,Simpl,Simplify,4814,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Simpl'],['Simplify']
Usability," there should be some About info. The control menu ; is a possible place for this, but maybe nobody would think ; to look there. I agree there should be a minimize button. (3) and (4) are bugs. The failure of All Chemical Formats ; seems to be to a 256 character limit on the filter string ; and has only come to light when all the formats were ; included. Why this should occur needs tracking down. (5) illustrates a UI dilemma. Should ; a)the type of file requested, or ; b)the extension of the file selected by the user ; have priority on what format OB attempts to convert. I ; chose b), and I provided a Force this Format checkbox to ; cover the case where this was not what was required. You ; prefer a), giving priority to the user's earlier choice ; via the Format dropdown and an opportunity to Force file ; Extension via a checkbox. Both are reasonable, but I ; prefer a) on the principle that it uses a later deliberate ; user choice. (6) I agree that more feedback is needed to help the user ; to know whether local or file input is being used. Making ; it read-only when the file option is selected and ; automatically updating the contents from a file seem to be ; good ways. (8) This is not a bug. SMILES has no coordinate ; information; a straight conversion correctly gives zero ; coordinates. At present OpenBabel doesn't have the ; capability to generate coordinates. I'm not an expert, but ; I suspect that this can be done at many levels of realism, ; with the top ones being big computations. OB needs ; something though, and the user must be given it as an ; option and be made aware somehow of the possible ; deficiencies. The 4mols.smi wasn't really intended as an example; it ; just got left there. I agree that a 3D molecule would be ; better. The GUI really needs to display error/audit messages, and ; I guess this could be a pane at the bottom of the window. ; It also cannot handle some feature of the commandline ; interface - like specifying the target for a fastsearc",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307:1815,feedback,feedback,1815,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1441#issuecomment-281810307,2,['feedback'],['feedback']
Usability,"""git grep -n 'std::string'|wc -l"" on Openbabel root directory gives 2686; Any idea how to proceed incrementally without breaking the build?. Not related but to simplify mem management+to avoid mem leaks in case of exceptions+just to avoid mem leak errors from SWIG it could be useful to use unique_ptr but it needs C++11. Any roadmap to use C++11 on Openbabel?; I'm not unique_ptr expert and I know that some cases may need shared_ptr which is much more difficult to use for a C++ beginner like me.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1341#issuecomment-383457202:160,simpl,simplify,160,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1341#issuecomment-383457202,2,['simpl'],['simplify']
Usability,"(I've just been looking into this a bit, and I can't see any way to raise the warning I suggested, which is a pity.). As a last argument consider that keeping ``import openbabel`` means that people will try ``import pybel`` and get weird errors if they have pyBEL installed. The choice is between a clear problem for all users (at upgrade time) over a confusing problem for a small number of users (but forever). If the majority prefer the second, then so be it. But I hope everyone who chooses that path will be happy to help users that file issues about this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1946#issuecomment-469873048:299,clear,clear,299,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1946#issuecomment-469873048,2,['clear'],['clear']
Usability,", ostream* pos); {; if(pos) SetOutStream(pos, false);. if(!pOutFormat || !pOutput) return false;. SetOneObjectOnly(); //So that IsLast() returns true, which is important for XML formats; ```. The problem is that SetOneObjectOnly() sets m_IsLast to true, which means it cannot be used to write multiple objects (with a header/footer) correctly. The CML writer has:; ```; //If more than one molecule to be output, write <cml> at start and </cml> at end.; if(!_pxmlConv->IsLast()); {; xmlTextWriterStartElementNS(writer(), prefix, C_CML, uri);; uri=NULL;; }; ```; but that test for IsLast() returns m_IsLast which is true, so the !-inversion makes it false, so that branch is not taken. To make things worse, the footer can only be written if IsLast() is set, which must be done for the last molecule. This means Write() cannot be called until you know if it will be the last molecule to write, and manual users must specify that flag. That is, I see what you mean by ""second-class citizen."" The fundamental problem is that format API doesn't have header/footer generation as an independent task from writing a molecule, so there needs to be a way for the write to know if a molecule is the first or last molecule. It *appears* that the right solution is to:. - remove SetOneObjectOnly() from Write; - document the full Write API so people know when to SetLast(); - update pybel so it delays the last Write() until the close(), which is when it knows if the previous molecule really is the last molecule. A simple implementation of the last will either break code which expects that it's possible to modify outputfile.write(mol) after writing the molecule (which it can't because the outputfile hasn't yet written it), or require a copy. A more complex one might default to making a copy, with a flag to enable non-copy behavior when the API caller can promise that the molecule object won't be changed. I can look at this some more and improve the patch, but need feedback on which route to prioritize.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455228991:1691,simpl,simple,1691,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455228991,4,"['feedback', 'simpl']","['feedback', 'simple']"
Usability,"-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:2380,Simpl,Simplify,2380,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Simpl'],['Simplify']
Usability,"-h does not add hydrogens. It converts from implicit to explicit. These are; representations of the same molecule. On Wed, 11 Nov 2020, 04:48 Andrew S. Rosen, <notifications@github.com>; wrote:. > I can confirm this is an issue. A simple way to reproduce this is obabel; > -:""C[CH2]"" -O out.smi -h. It outputs the implicit version.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2266#issuecomment-725196141>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGKM3PCVWYSUZJ3RRC3SPIJTNANCNFSM4PSXZXCA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2266#issuecomment-726279899:231,simpl,simple,231,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2266#issuecomment-726279899,2,['simpl'],['simple']
Usability,"/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:20627,Simpl,Simplify,20627,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Simpl'],['Simplify']
Usability,"6100 -0.00100; C -0.92800 1.06000 -0.00000; C -2.25900 0.77200 -0.00000; C -2.68700 -0.45600 0.00100; C -1.84800 -1.53300 0.00100; C -0.47300 -1.33400 0.00100; C 0.00100 -0.00700 -0.00000; C 1.38700 0.25300 0.00000; C 2.28100 -0.83300 0.00100; C 1.82800 1.58700 0.00000; C 0.91800 2.60500 -0.00000; C -0.47300 -1.33400 0.00100; C 0.43200 -2.37200 -0.00400; C 1.80000 -2.10900 0.00100; C 2.28100 -0.83300 0.00100; C 1.38700 0.25300 0.00000; C 0.43200 -2.37200 -0.00400; C 1.80000 -2.10900 0.00100. Atoms #20 and #16, #19 and #15, #18 and #10 are identical: molecule contains only three rings, but perylene contains 5. babel 1.smi 1.xyz --gen3d ---errorlevel 4; ============================== ; *** Open Babel Audit Log in ReadChemObjectImpl ; OpenBabel::Read molecule SMILES format ; ============================== ; *** Open Babel Audit Log in Clear ; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignSpinMultiplicity ; Ran OpenBabel::AssignSpinMultiplicity ; ============================== ; *** Open Babel Audit Log in Kekulize ; Ran OpenBabel::Kekulize ; ============================== ; *** Open Babel Audit Log in FindRingAtomsAndBonds ; Ran OpenBabel::FindRingAtomsAndBonds ; ============================== ; *** Open Babel Information in NewPerceiveKekuleBonds ; Kekulize: Huckel rule not satisfied for molecule . ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule ; ============================== ; *** Open Babel Audit Log in AssignAromaticFlags; Ran OpenBabel::AssignAromaticFlags ; ============================== ; *** Open Babel Audit Log in AssignImplicitValence; Ran OpenBabel::AssignImplicitValence ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in AssignHyb ; Ran OpenBabel::AssignHybridization ; ============================== ; *** Open Babel Audit Log in FindSSSR",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048:999,Clear,Clear,999,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/830#issuecomment-281794048,2,['Clear'],['Clear']
Usability,"7 AM UTC; Owner: Noel O'Boyle; Hi guys---; I am in the process of incorporating some 'automatic' 3D-pharmacophore ; perception code into one of my programs. Nearly all works---except for the ; perception of ring atoms ---in the manner illustrated in the sample code below ; ---which mimics your example in the OBRing class description.; So I am puzzled --because this 'used to work for me'. Indeed it did back at ; OpenBabel 2.3.0 or so.; At this point when I compile and debug I wind up with a seg fault that traces to ; one of the OpenBabel ring iterators:; Specifically:; normal_iterator(const _Iterator& i) : _M_current(__i) { }; The SEG FAULT is:; Program received signal SIGSEGV, Segmentation fault.; 0x0000000000401a72 in gnu_cxx::normal_iterator > >::normal_iterator ; (this=0x7fffffffc580, i=@0x0) at ; /usr/lib/gcc/x86_64-redhat-linux6E/4.4.7/../../../../include/c++/4.4.7/bits/stl_iterator.h:686. (gdb) ; Trouble shooting I went back to the simplest example mimicking the snippet of ; example code in your OBRing class description ---; This 'used to work' and no longer does for me?.; It this operator error? Or a bug?; Just push me in the right direction for trouble shooting.; I am linking against the latest compiled libopenbabel.so in Version 2.3.2; Thank you for the gift of OpenBabel ---saves me time and effort each an every ; day.; Danni; ___SAMPLECODE____; include ; include ; include mol.h>; include obconversion.h>; include ring.h>; using namespace std;; using namespace OpenBabel;; // Include Open Babel classes for OBMol and OBConversion int main(int ; argc,char **argv) { // Read from STDIN (cin) and Write to STDOUT (cout) ifstream ; fin; fin.open(""c6h6.smi"",ios::in); OpenBabel::OBConversion conv(&fin,&cout); ; if(conv.SetInAndOutFormats(""SMI"",""CAN"")) { OBMol mol; if(conv.Read(&mol)) { ; conv.Write(&mol); . //cout << ""WE ARE ABOVE "" << endl;; vector vr;; vr = mol.GetSSSR();; vector::iterator i;; vector::iterator j;; vector rlist = (vector)mol.GetData(""RingList"");; for ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1245#issuecomment-281803282:2753,simpl,simplest,2753,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1245#issuecomment-281803282,2,['simpl'],['simplest']
Usability,":; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:4843,Simpl,Simplify,4843,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Simpl'],['Simplify']
Usability,"; ++i); Intensities.push_back(atof(vs[i].c_str()));. ifs.getline(buffer, BUFF_SIZE); // column labels or Raman intensity; if(strstr(buffer, ""Raman Activ"")) {; ifs.getline(buffer, BUFF_SIZE); // Depolar (P); ifs.getline(buffer, BUFF_SIZE); // Depolar (U); ifs.getline(buffer, BUFF_SIZE); // column labels; }; ifs.getline(buffer, BUFF_SIZE); // actual displacement data; tokenize(vs, buffer);; vector<vector3> vib1, vib2, vib3;; double x, y, z;; while(vs.size() >= 5) {; for (unsigned int i = 2; i < vs.size()-2; i += 3) {; x = atof(vs[i].c_str());; y = atof(vs[i+1].c_str());; z = atof(vs[i+2].c_str());; ```. In the files that `xtb` produces, the frequencies block has the following line headers:; ```; ...; 25 26 27; a a a ; Frequencies -- 3067.8451 3071.3773 3071.6466; Red. masses -- 1.7262 1.7831 1.7831; Frc consts -- 0.0000 0.0000 0.0000; IR Inten -- 0.0120 0.0352 0.0363; Raman Activ -- 0.0000 0.0000 0.0000; Depolar -- 0.0000 0.0000 0.0000; Atom AN X Y Z X Y Z X Y Z; 1 6 -0.09 0.05 -0.00 0.13 -0.07 0.00 0.02 -0.02 0.00; 2 6 0.09 0.05 0.00 -0.04 -0.03 -0.00 -0.12 -0.08 -0.00; ...; ```. i.e. with only a *single* ""Depolar"" line between ""Raman Activ"" and the column labels, whereas openbabel expects two and therefore throws away one line too many. Since the code is checking for specific strings anyway, it is presumably a simple change to get it to only throw away lines up until it finds one saying, for example, ""Atom AN""?. I tried to do a Freq calculation with Gaussian itself to see if `xtb` is formatting its Gaussian-style output files incorrectly, but the output only contained the headers:. ```; 1 2 3; A A A; Frequencies -- 31.0435 139.3587 381.0536; Red. masses -- 1.0167 1.1325 2.1534; Frc consts -- 0.0006 0.0130 0.1842; IR Inten -- 0.0000 0.2046 1.0684; Atom AN X Y Z X Y Z X Y Z; ```. which is the other case accounted for in the openbabel code. So it is not clear whether Gaussian itself would always produce two ""Depolar"" lines (`Depolar (P)` and `Depolar (U)`) or just one.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2652#issuecomment-1835053748:1950,simpl,simple,1950,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2652#issuecomment-1835053748,4,"['clear', 'simpl']","['clear', 'simple']"
Usability,"; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:14705,Simpl,Simplify,14705,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Simpl'],['Simplify']
Usability,"; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:12240,Simpl,Simplify,12240,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Simpl'],['Simplify']
Usability,"> -DPYTHON_BINDINGS=OFF -DRUN_SWIG=OFF. With you method, just as I've told in another thread, the pip install will use the older version of openbabel, instead of the latest version found on the pypi:. ```; $ pip install openbabel; Looking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple; Collecting openbabel; Downloading https://pypi.tuna.tsinghua.edu.cn/packages/9c/30/eb9c3d3d3b86981f6c6a7b8eceb6f4a13b9a12673efbc842b7cebe0ce39a/openbabel-2.4.1.tar.gz (74kB); |████████████████████████████████| 81kB 6.4MB/s ; Installing collected packages: openbabel; Running setup.py install for openbabel ... /^canceled; ```. I want to install the python binding shipped in the source-code and compile by me. Regards",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2137#issuecomment-597536872:285,simpl,simple,285,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2137#issuecomment-597536872,2,['simpl'],['simple']
Usability,"> ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:9775,Simpl,Simplify,9775,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Simpl'],['Simplify']
Usability,"> @SteelDominic In its current form, it is not clear what you want to achieve with an export to .stl except (now guessing:) perhaps some sort of 3D print with some properties. But which one?; > ; > There are instances a molecular surface around an individual molecule is good enough, e.g. for packing models and the .stl format provides enough information. There are instances where an additional information is provided, encoded in color, on an isosurface, e.g.; > ; > ![b818330a-f12](https://private-user-images.githubusercontent.com/19709084/311237059-e28f7ec1-763f-4f26-b91f-7b815ea9d3d0.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDk5NjY0NTYsIm5iZiI6MTcwOTk2NjE1NiwicGF0aCI6Ii8xOTcwOTA4NC8zMTEyMzcwNTktZTI4ZjdlYzEtNzYzZi00ZjI2LWI5MWYtN2I4MTVlYTlkM2QwLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAzMDklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMzA5VDA2MzU1NlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWYzOWQyYzgwMWNhZDEwMDVlNmIxZmU5NThjM2NhZDg2YWM4YzUzYTlhZDgwNmJjYzc4OTFlNjU0YjVlOTliZTAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.nhOUXKuy8hcbouX0LRQNsbF8gEC3SBWDhE8oVVoNst8) [ ![b818330a-f12](https://private-user-images.githubusercontent.com/19709084/311237059-e28f7ec1-763f-4f26-b91f-7b815ea9d3d0.gif?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDk5NjY0NTYsIm5iZiI6MTcwOTk2NjE1NiwicGF0aCI6Ii8xOTcwOTA4NC8zMTEyMzcwNTktZTI4ZjdlYzEtNzYzZi00ZjI2LWI5MWYtN2I4MTVlYTlkM2QwLmdpZj9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDAzMDklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwMzA5VDA2MzU1NlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWYzOWQyYzgwMWNhZDEwMDVlNmIxZmU5NThjM2NhZDg2YWM4YzUzYTlhZDgwNmJjYz",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1986783079:47,clear,clear,47,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1986783079,2,['clear'],['clear']
Usability,"> @schatzsc I redrew the structure on the test page of Marvin JS ([link](https://marvinjs-demo.chemaxon.com/latest/demo.html)) using the coordinate/dative bond. Pt was assigned a positive charge, Br for compensation a negative one:. @nbehrnd As also mentioned in the [Chemotion issue](https://github.com/ComPlat/chemotion_ELN/issues/1551) metal-ligand bonds MUST NOT be broken. This will also be the standard in the latest upcoming IUPAC InChI recommendations on organometallics. Furthermore, ""dative"" bonds have no relevancy at least in coordination and organometallic chemistry of the d- and f-elements - all those bonds are more or less polar covalent bonds. The best solution would actually for atoms and bonds to be marked with an attribute ""don't touch"" in terms of bond order and addition of implicit hydrogens and M-L ""lines"" simply be taken as an indication of a bonding interaction without any implication on the electron count. In the context of [TUCAN](https://github.com/TUCAN-nest/TUCAN) we have called these ""simple bonds"". Maybe some Zoom discussion of software developers together with the IUPAC InChi organometallics team would be helpful to work towards general solutions?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854358792:834,simpl,simply,834,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854358792,4,['simpl'],"['simple', 'simply']"
Usability,"> @schatzsc Not a solution, only a complementary observation: by default, obabel clearly indicates that the input structure is (in comparison to a ""more usual one"") problematic e.g., during the conversion from .mol to .png:; > ; > ```shell; > $ obabel -imol carbene_complex.mol.txt -O na.png; > ==============================; > *** Open Babel Warning in ReadMolecule; > WARNING: Problem interpreting the valence field of an atom; > The valence field specifies a valence 2 that is; > less than the observed explicit valence 3. @nbehrnd Well, the carbene carbon atoms are indeed another problematic case - the ""standard valence"" of 2 had to be set here because otherwise, the hydrogen count was too high by 3 not 1 (as you also observed with the Jmol picture). That of course is at conflict with the Lewis formula (and molfile) which features 3 bonds, two C-N and one C-Pt. The main problem seems to be that bonds which do not arise from combination of ""radical fragments"" like A* and B* -> A-B but Lewis acid/base pairs or otherwise not in line with the ""octet rule"" are not treated very well by most cheminformatics approaches.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854337760:81,clear,clearly,81,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1854337760,2,['clear'],['clearly']
Usability,"> Can an atom with a hydrogen and a lone pair be stereogenic? This is related to stereocenter perception. Let me ping @johnmay on this. I'm pretty sure there are cases of this related to S (maybe not N), but I think John can clear this up. Possible but unlikely, I can't think of any sane Sp3 that would exhibit this. However definitely not possible in SMILES since both would be ""implicit"". Remember that Daylight doesn't lone pairs at all, e.g. ``C[S@](=O)CC`` will have stereo stripped.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572578114:225,clear,clear,225,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572578114,2,['clear'],['clear']
Usability,> Can you revise the patch to detect for '-' in the next character?. I'm not sure what you mean. However I will revise it soon with some tests to make it purpose clear.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/259#issuecomment-184350293:162,clear,clear,162,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/259#issuecomment-184350293,2,['clear'],['clear']
Usability,"> Checkout `OBResidue`. Thanks @dkoes! I've been able to identify `GetInsertionCode()` already, but not the other three attributes. Sorry I should have stated that initially to be more clear.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2229652050:185,clear,clear,185,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2229652050,2,['clear'],['clear']
Usability,"> On Aug 21, 2017, at 9:07 PM, Geoff Hutchison <notifications@github.com> wrote:; > ; > If you're wondering why I'm not merging this, it's because there are a gazillion unrelated changes in this pull request.; > ; > . I think this patch only includes the changes related to obthermo. . https://github.com/openbabel/openbabel/pull/1598 <https://github.com/openbabel/openbabel/pull/1598>. > Please create a completely new branch for each change and use git cherry-pick to grab only the specific changes you want, e.g.; > ; > https://guides.github.com/introduction/flow/ <https://guides.github.com/introduction/flow/>; > I'm sorry to be picky, but I'd like to merge the obthermo changes and not the Gaussian partial charge revisions. The latter, IMHO, need further discussion and refinement. (I like the idea of accessing different kinds of partial charge models, just not your current code.); > ; > . I am happy to discuss it. ; Please let me know how the code need to change, then I will do it. Because, it will be very useful to extract different charges from the Gaussian output. . Cheers,; Mohammad; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub <https://github.com/openbabel/openbabel/pull/1600#issuecomment-323825612>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ANAeJNaXfKr9_X5SpRkRNtkUAwCAf2RSks5sadVogaJpZM4OVlnh>.; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1600#issuecomment-323836547:531,guid,guides,531,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1600#issuecomment-323836547,4,['guid'],['guides']
Usability,"> Open Babel already reads multiple coordinate sets from an XYZ (or others). On the command-line, it's the option `--readconformer`; > ; > You just need [`OBMol::AddConformer`](http://openbabel.org/api/3.0/classOpenBabel_1_1OBMol.shtml#a7b80e7015d000221e0cc92fd3cf6f9e4). Thanks @ghutchis. I need to make this work in python rather than command line I'm afraid though. I have been attempting to use OBMol.AddConformer(conf) where conf is a swig double * created from GetConformer or CopyConformer, but it's giving me some lovely memory errors. Example:. ```; def test_multipleconf(self):; obconversion = ob.OBConversion(); obconversion.SetInFormat(""xyz""); obmol = ob.OBMol(); notatend = obconversion.ReadFile(obmol, ""met_enkaph_movie.xyx""); obmol_master = ob.OBMol(); obconversion.ReadFile(obmol_master, ""met_enkaph_movie.xyx""); while notatend:; print(obmol.GetConformer(0)); temp = obmol.GetConformer(0); obmol_master.AddConformer(temp); obmol = ob.OBMol(); notatend = obconversion.Read(obmol); ```. Fatal error caused at `obmol_master.AddConformer(temp)`; ```; python(22713,0x7ff8476c27c0) malloc: double free for ptr 0x7fc42223da00; python(22713,0x7ff8476c27c0) malloc: *** set a breakpoint in malloc_error_break to debug; Fatal Python error: Aborted; ```. I haven't been able to find any documentation on how to create a multiconformer OBMol from a file with multiple conformers/timesteps with python bindings so I'd appreciate some guidance, if it is even possible...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2314383834:1437,guid,guidance,1437,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2708#issuecomment-2314383834,2,['guid'],['guidance']
Usability,"> The changes in povrayformat.cpp seem unrelated to the topic of the patch or am I missing something?. `std::bind1st` returns `std::binder1st`, both of which are deprecated and removed in C++17 (http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2014/n4190.htm). BTW the change was incorrect and now fixed. Let's simply use `std::remove`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2001#issuecomment-554062630:313,simpl,simply,313,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2001#issuecomment-554062630,2,['simpl'],['simply']
Usability,"> What version of ChemDraw do you use (release, Win or MacOS) to generate the .cdx?. I'm not sure ... but I had that file [since 2014](https://github.com/aminophen/chemobabel/tree/71b8511ae44f981122747c22366a1c985d1a11c9/doc/chemobabel/draw) (when I was a student). At that time ... * I had ChemBioDraw 12 on mac OS X 10.7.5 Lion,; * and I also had [ACD/ChemSketch Freeware 12.0](https://www.acdlabs.com/resources/free-chemistry-software-apps/chemsketch-freeware/) on Windows 7. but I don't clearly remember which I actually used to *draw* ATP.cdx. OTOH, I clearly remember that I *opened* that file with both of those software/machine to see the same molecule. FYI, OpenBabel 2.3.1 on the same machine generated with `$ obabel ATP.cdx -O ATP.svg` the following:. <img width=""400"" alt=""atpcdx-obmac231"" src=""https://user-images.githubusercontent.com/9957466/190418125-c90d4611-f09c-4720-b032-5f84ed08b204.png"">. (here no charge on oxygen, but seems reasonable!)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/338#issuecomment-1248122524:491,clear,clearly,491,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/338#issuecomment-1248122524,4,['clear'],['clearly']
Usability,> baoilleach: Usually its good to have one feature or fix per pull request. To be clear: should I split the patch in this case?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/287#issuecomment-201436910:82,clear,clear,82,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/287#issuecomment-201436910,2,['clear'],['clear']
Usability,@Artoria2e5 Thank you for your feedback.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2002#issuecomment-519079923:31,feedback,feedback,31,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2002#issuecomment-519079923,2,['feedback'],['feedback']
Usability,"@SteelDominic In its current form, it is not clear what you want to achieve with an export to .stl except (now guessing:) perhaps some sort of 3D print with some properties. But which one?. There are instances a molecular surface around an individual molecule is good enough, e.g. for packing models and the .stl format provides enough information. There are instances where an additional information is provided, encoded in color, on an isosurface, e.g. ![b818330a-f12](https://github.com/openbabel/openbabel/assets/19709084/e28f7ec1-763f-4f26-b91f-7b815ea9d3d0). (Mark A. Spackman and Dylan Jayatilaka, [CrystEngComm](https://doi.org/10.1039/1466-8033/1999), 2009, 11, 19-32). for which an .obj file (for the surface) and .mtl file (for the color) is an acceptable format for 3D printing. (Though .obj files can contain color information, and .vrml files are an other acceptable data container format.). ----. Else, do you want to generate a 3D print with either a single molecule on a plinth?. ![single_mol](https://github.com/openbabel/openbabel/assets/19709084/21839e69-0656-4e26-960f-3e3eeae330da). Or a crystal packing of a unit cell?. ![cell](https://github.com/openbabel/openbabel/assets/19709084/33686a20-33bc-4a2e-a377-6a61733f0b04). [concretization.zip](https://github.com/openbabel/openbabel/files/14538450/concretization.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1985674373:45,clear,clear,45,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2679#issuecomment-1985674373,2,['clear'],['clear']
Usability,"@UnixJunkie On an Ubuntu machine, you can fetch the sources for the Debian experimental package by doing:; `dget http://deb.debian.org/debian/pool/main/o/openbabel/openbabel_2.4.1-1.dsc`; You can then build locally, and create a PPA if desired. @baoilleach https://launchpad.net/openbabel appears to be a project in Launchpad's Bazaar VCS, I have no idea if it is possible to transfer ownership. You could trying asking a question 'for Launchpad itself' at https://answers.launchpad.net/launchpad. I'm not sure if having an openbabel project on Launchpad has any advantages over simply publishing a PPA from your own Launchpad account. You could base it on the version from Debian experimental, as above. https://launchpad.net/ubuntu/+source/openbabel is the source package for the versions available from the Ubuntu repositories. If a new version is uploaded to Debian unstable within the next 5 months or so, it will automatically be pulled into the 18.04 LTS development version. Once there, it can be backported to 16.04 LTS (or 17.10, etc.) by following the request for backports process: https://wiki.ubuntu.com/UbuntuBackports",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1668#issuecomment-338159207:579,simpl,simply,579,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1668#issuecomment-338159207,2,['simpl'],['simply']
Usability,"@Yannlefrancois To retain the hydrogens regardless if bound to (N,O,P,S) or C you can use `-h` as a *format modifier*. For the purpose of illustration, consider the example of diethyl ether (SMILES string `CCOCC`) either by simple addition of hydrogen atoms (`-h`). ```shell; $ obabel -:""CCOCC"" --gen3d -h -opdbqt; REMARK Name = ; REMARK 4 active torsions:; REMARK status: ('A' for Active; 'I' for Inactive); REMARK 1 A between atoms: C_1 and C_2; REMARK 2 A between atoms: C_2 and O_3; REMARK 3 A between atoms: O_3 and C_4; REMARK 4 A between atoms: C_4 and C_5; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ROOT; ATOM 1 O UNL 1 2.991 -0.912 -0.912 0.00 0.00 +0.000 OA; ENDROOT; BRANCH 1 3; ATOM 2 C UNL 1 0.979 0.074 -0.061 0.00 0.00 +0.000 C ; ATOM 3 C UNL 1 2.494 0.101 -0.038 0.00 0.00 +0.000 C ; ENDBRANCH 1 3; BRANCH 1 4; ATOM 4 C UNL 1 4.417 -0.929 -0.927 0.00 0.00 +0.000 C ; ATOM 5 C UNL 1 4.889 -2.020 -1.868 0.00 0.00 +0.000 C ; ENDBRANCH 1 4; TORSDOF 2; 1 molecule converted; ```. or one with the addition of hydrogen atoms (`-h`) and retaining them all explicit (`-xh`) in the new record to write:. ```shell; $ obabel -:""CCOCC"" --gen3d -h -opdbqt -xh; REMARK Name = ; REMARK 4 active torsions:; REMARK status: ('A' for Active; 'I' for Inactive); REMARK 1 A between atoms: C_1 and C_2; REMARK 2 A between atoms: C_2 and O_3; REMARK 3 A between atoms: O_3 and C_4; REMARK 4 A between atoms: C_4 and C_5; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ROOT; ATOM 1 O UNL 1 2.955 -0.517 1.197 0.00 0.00 +0.000 OA; ENDROOT; BRANCH 1 2; ATOM 2 C UNL 1 2.459 0.089 0.004 0.00 0.00 +0.000 C ; ATOM 3 H UNL 1 2.818 1.123 -0.060 0.00 0.00 +0.000 HD; ATOM 4 H UNL 1 2.818 -0.469 -0.869 0.00 0.00 +0.000 HD; BRANCH 2 5; ATOM 5 C UNL 1 0.943 0.075 0.031 0.00 0.00 +0.000 C ; ATOM 6 H UNL 1 0.535 0.534 -0.873 0.00 0.00 +0.000 HD; ATOM 7 H UNL 1 0.566 0.619 0.904 0.00 0.00 +0.000 HD; ATOM 8 H UNL 1 0.566 -0.950 0.107 0",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2709#issuecomment-2233512252:224,simpl,simple,224,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2709#issuecomment-2233512252,2,['simpl'],['simple']
Usability,"@apaydinemre Perhaps there is an accidental typo by you, because (obabel 3.1.1 as provided by Linux Debian 13/trixie) once provides the information, i.e. about the less likely ligand of pyridine and `partialcharge`. ```shell; $ obabel -:""c1ccncc1"" --gen3d -xr -p 7.4 --partialcharge Gasteiger -opdbqt; REMARK Name = ; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ATOM 1 C UNL 1 1.433 0.052 0.001 0.00 0.00 +0.003 A ; ATOM 2 C UNL 1 0.688 1.226 0.002 0.00 0.00 +0.020 A ; ATOM 3 C UNL 1 -0.694 1.126 0.002 0.00 0.00 +0.110 A ; ATOM 4 N UNL 1 -1.362 -0.049 0.006 0.00 0.00 -0.263 NA; ATOM 5 C UNL 1 -0.612 -1.172 0.007 0.00 0.00 +0.110 A ; ATOM 6 C UNL 1 0.774 -1.173 0.003 0.00 0.00 +0.020 A ; TER ; 1 molecule converted; ```. while using the plural `partialcharges` *does not*, i.e. `q` are all zero. ```shell; $ obabel -:""c1ccncc1"" --gen3d -xr -p 7.4 --partialcharges Gasteiger -opdbqt; REMARK Name = ; REMARK x y z vdW Elec q Type; REMARK _______ _______ _______ _____ _____ ______ ____; ATOM 1 C UNL 1 1.433 0.052 0.001 0.00 0.00 +0.000 A ; ATOM 2 C UNL 1 0.688 1.226 0.002 0.00 0.00 +0.000 A ; ATOM 3 C UNL 1 -0.694 1.126 0.002 0.00 0.00 +0.000 A ; ATOM 4 N UNL 1 -1.362 -0.049 0.006 0.00 0.00 +0.000 NA; ATOM 5 C UNL 1 -0.612 -1.172 0.007 0.00 0.00 +0.000 A ; ATOM 6 C UNL 1 0.774 -1.173 0.003 0.00 0.00 +0.000 A ; TER ; 1 molecule converted; ```. ----. For future reference: you can share input/output structure data as e.g., .pdb and .pdbqt files wrapped in a .zip archive attached which then is a file format the issue reports on GitHub know to process. Else (e.g., for a brief section of a data file, a snippet of code), as a (fenced) *code block* enclosed by a leading and a trailing line of three back ticks/accent graves (cf. [ref](https://learnxinyminutes.com/docs/markdown/)). If you opt-in for the alternative indentation by four spaces, this then has to be applied (i.e., added) to retain an empty line in the source code represented as such.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2690#issuecomment-2077180132:1793,learn,learnxinyminutes,1793,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2690#issuecomment-2077180132,2,['learn'],['learnxinyminutes']
Usability,"@arebruvold No, it is not twisted. However the configuration of the N=N double bond is not explicitly defined and a crossed double bond conventionally indicates you refer either i) to a mixture of (*E*) and (*Z*) difluorodiazene, or ii) you know there is the N=N double bond, but don't assign its configuration (perhaps by lack of information). For writing a .mol/.mol2/.sdf file with atomic coordinates the situation is even worse than for an illustration: imagine you construct a physical model of this molecule and now don't know where to put the fluorine atoms. In this particular case, you might better describe either the (*E*) configuration with `F\N=N\F`, or the (*Z*) isomer by `F\N=N/F`. Don't forget CIP rules assign a non-bonding (here implicit) electron pair a priority `0`, i.e. even lower than for an atom of hydrogen. Daylight compiled a set of references to learn more about (basic) SMILES' rules, see the [tutorial](https://www.daylight.com/dayhtml_tutorials/languages/smiles/index.html) and its links to theory and static examples. Because SMILES and subsequently SMARTS can be very helpful to search in databases, I recommend to complement your study with the two blog posts by Noel O'Boyle [SMARTS for dummies](https://baoilleach.blogspot.com/2018/11/smarts-for-dummies.html), its sequel [Smarts for Dummies Part II ](https://baoilleach.blogspot.com/2023/02/smarts-for-dummies-part-ii.html) and the interactive [test pad](https://baoilleach.github.io/smartersmarts-js/) (requires only a web browser, JavaScript enabled). Finally, Marvin by ChemAxon introduced [extended SMILES](https://docs.chemaxon.com/display/docs/formats_chemaxon-extended-smiles-and-smarts-cxsmiles-and-cxsmarts.md) as a format to retain additional information some programs equally can process, too (e.g. [Marvin JS](https://marvinjs-demo.chemaxon.com/latest/); [CDK depict](https://www.simolecule.com/cdkdepict/depict.html), [RDKit](https://www.rdkit.org/docs/RDKit_Book.html#cxsmiles-cxsmarts-extensions)).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510:875,learn,learn,875,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2699#issuecomment-2127061510,2,['learn'],['learn']
Usability,"@baoilleach - do you know if there's a guide to adding templates for the depiction code? It probably won't help in this case, but adding some additional heterocycles seems like a good idea.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1577#issuecomment-305909721:39,guid,guide,39,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1577#issuecomment-305909721,2,['guid'],['guide']
Usability,"@baoilleach : Thank you for your feedback, I added the modified test",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1818#issuecomment-388582619:33,feedback,feedback,33,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1818#issuecomment-388582619,2,['feedback'],['feedback']
Usability,"@baoilleach I'm inclined to merge this. We can add clear documentation in the installation instructions, but I think for most use, it's preferable to have portable binaries than perfect speed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/280#issuecomment-196846306:51,clear,clear,51,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/280#issuecomment-196846306,2,['clear'],['clear']
Usability,"@baoilleach Thank you very much, this is helpful at this point. I agree about the `[C, CR5]` simplification, it may have been a remnant of earlier queries when I was trying to be more specific on which atoms I am after. Regarding:; > OB matches the all-atom structure whereas the PDB file is often missing bonds and bond orders, so these must be inferred. I am not sure I fully understand what it means (?) but I may have come across this already, see if this is relevant:. Right after this ticket, I wrote my own matcher for the structure I am after, which is a simple recursive matcher starting on the N. If the N matches, it unrolls its bonds and tries to match the C, unrolls its bonds....and so on. In the end, if there is a match starting from an N, all the matching atoms are returned. Again, 1GCN matches just fine, but 6QWY fails. But now, since I am in complete control of the matching process, I traced each match level and realised that the graph is taking a ""detour"". The main chain proceeds uninterrupted (that is, there are `OBBond` s describing the `NCC(=O)`, **EXCEPT** in some residues. Here is an example:. <img src=""https://user-images.githubusercontent.com/1336337/78659371-5cda7d00-78c3-11ea-943c-c08a2afaf570.png"" width=""200""/>. Notice residue 16, Nam->C3->C2, Residue 17, Nam->C3 and then the C3-C2 bond is only described from the C2 end. After realising this, I decided to first create the implied graph and then run the matcher on the graph. *Is this what you mean by implied bonds further above?* (Please see edit). Regarding the version being old, I understand, will try to compile from the latest, this is the version that Ubuntu has in its repositories by the way. **EDIT:**. I think I see what the problem is here, that was not the best part of the graph to demonstrate the ""problem"" with. Granted, some bonds are described ""asymmetrically"" (so, the information exists only in one way but not the other, as implied by `OBBond`). But in addition to this, the molecule app",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2156#issuecomment-610311498:93,simpl,simplification,93,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2156#issuecomment-610311498,4,['simpl'],"['simple', 'simplification']"
Usability,"@baoilleach Thanks for the feedback. This PR is only fix the direction of `WedgedHashBond`.; It is an error, and our chemists complain it. This is nothing to do with coordinate inversion, since the coordinate inversion applies to all stereo and non-stereo molecules. As to the coordinate inversion, although it makes the graph change, molecules are still valid and the same.; I would like to create another PR to remove this inversion, because it is a different topic from my viewpoint. What do you think?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1777#issuecomment-378145038:27,feedback,feedback,27,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1777#issuecomment-378145038,2,['feedback'],['feedback']
Usability,"@baoilleach: the set of space group is indeed fixed -- there are 230 3D space groups.; *The* reference for the names of the space groups is International Tables for Crystallography.; But while it is clear what are the names and operations of the standard settings for each space groups, and of popular alternative settings, it may not be so clear for some obscure settings. To clarify: for many space groups you can have alternative settings with changed basis and/or shifted origin. Any two settings of the same space group can be transformed into each other by applying a 4x4 transformation matrix. The question is what settings are practical, useful and worth listing in a table. And what are their standard (H-M) names. (There is no problem with interpreting Hall names: they are unambiguous and they encode all the operations in the name). ITfC has a few tables that list spacegroup settings (in Vol. A and B). These tables list different sets of settings, and they may differ between editions of ITfC. The table that is most commonly used in computer programs is in Vol. B. It is the same table that is used by SgInfo and cctbx/sgtbx (and spglib) and it's available here: http://cci.lbl.gov/sginfo/hall_symbols.html. It has 530 entries (3 are duplicate, as @afonari wrote above; different standard names correspond to the same sets of operations). The only thing that differs is that Open Babel recognizes 14 (as @afonari calculated) extra settings. It's probably good, but there is no good reference for naming of these settings.; For example: ""C -4 2 b"" is listed on http://img.chem.ucl.ac.uk/sgp/MEDIUM/117cz1.htm, but not in ITfC. ITfC have a C-centered settings of the same spacegroup (117) named ""C -4 2 g1"". This name is listed in table 1.5.4.4 in Vol.A ch.1.5 (and without any further information), but not in the table with Hall symbols. So I'm not able to tell if ""C -4 2 g1"" from ITfC and ""C -4 2 b"" from Birkbeck collage website refer to the same settings. Regarding shared resources",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1292#issuecomment-331963893:199,clear,clear,199,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1292#issuecomment-331963893,4,['clear'],['clear']
Usability,@byte-for-byte it is indeed usable. I have built from the branch in that pull request and everything works as expected.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1934#issuecomment-1197382498:28,usab,usable,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1934#issuecomment-1197382498,2,['usab'],['usable']
Usability,"@cowsandmilk That is a nice counter example. It's clear that this will cause some bug reports, but there's no way around it apart from flagging it up in the docs, and perhaps also at the end of the configuration (I think Avogadro does a great job of summarising the configuration after running cmake). @jeffjanes: I don't think that's possible. I think we should just optimise for the architecture at build time, with an option to override it (which we flag up in the configuration summary somehow).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/184#issuecomment-105809983:50,clear,clear,50,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/184#issuecomment-105809983,2,['clear'],['clear']
Usability,"@dkoes Can you make the changes that @cryos suggests regarding OpenBabel3_LIBRARIES and undo the edit to openbabel-python.i. As a matter of interest, how is this used by the consuming project? I can add something to the docs.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2086#issuecomment-558719846:88,undo,undo,88,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2086#issuecomment-558719846,2,['undo'],['undo']
Usability,"@e-kwsm Complementary observation: entry VS001, spiro[4.5]dec-2-ene in the [cipvalidationsuite](https://cipvalidationsuite.github.io/ValidationSuite/) compiled by Robert Hanson *et al.* equally is assigned by them by the SMILES string `C1[C@]2(CCCC1)CC=CC2`. However, the submission of their 3D .sdf file to Open Babel (version 3.1.1 by Jan 10 2024 in Debian 13/trixie). ```; $ obabel VS001.sdf -ocan; C1CCC2(CC1)CC=CC2	VS001; 1 molecule converted; $ obabel -:""C1[C@]2(CCCC1)CC=CC2"" -ocan; C1CCC2(CC1)CC=CC2	; 1 molecule converted; ```. drops the `@`. The compilation of 300 structures may contain additional entries worth to test. Hanson, R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin, D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. J. Chem. Inf. Model. 2018, 58 (9), 1755–1765. https://doi.org/10.1021/acs.jcim.8b00324.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2674#issuecomment-1959364056:819,Guid,Guide,819,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2674#issuecomment-1959364056,1,['Guid'],['Guide']
Usability,"@ghutchis,; Thanks for your reply and apologies for the delayed response. The version of libcairo2 I have installed 1.15.10-2. Can I ask what you mean by ""clear out "". Should I be commenting the lines out?. Thanks,; Anu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838#issuecomment-393924416:155,clear,clear,155,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838#issuecomment-393924416,2,['clear'],['clear']
Usability,@ghutchis: thank you for your feedback.; I changed usage and modified the algo to search the -a and shift values after it to parse values more easily.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1835#issuecomment-395535782:30,feedback,feedback,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1835#issuecomment-395535782,2,['feedback'],['feedback']
Usability,"@ivzzognam Because there is no line with an `obabel` instruction, is it related to obabel? And if you want to report log from the shell in a GitHub issue, it is better to enclose it in a block starting / closing by a line of three back ticks as code block (see for example the 101 about markdown on [learnxinyminutes](https://learnxinyminutes.com/docs/markdown/)) to yield something in line of . ```shell; $ obabel -:""c1ccncc1"" -h --gen3d -oxyz; 11. C 1.43303 0.05159 0.00100; C 0.68800 1.22595 0.00151; C -0.69424 1.12564 0.00218; N -1.36237 -0.04853 0.00552; C -0.61197 -1.17189 0.00692; C 0.77379 -1.17331 0.00332; H 2.51852 0.09036 -0.00113; H 1.17153 2.19630 0.00127; H -1.31976 2.01344 0.00006; H -1.17257 -2.10232 0.01145; H 1.32543 -2.10632 0.00270; 1 molecule converted; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853615642:300,learn,learnxinyminutes,300,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2657#issuecomment-1853615642,4,['learn'],['learnxinyminutes']
Usability,"@johnmay has taken a look and come to a similar conclusion. It's missing the atom test, probably as the first line of matchCandidate. More problematic is that the built-in test is fairly simplistic and is not strictly speaking testing isomorphism exactly. Still, it'll be better than the current. I'll make the change and test it against @johnmay's VF2.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467501723:187,simpl,simplistic,187,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467501723,2,['simpl'],['simplistic']
Usability,"@kalinni Separate thought: perhaps your workflow does not require the addition; of the complete set of hydrogens either; in a separate conversation I learned; the (ligand) molecules submitted to /in silico/ docking carry hydrogens on; hydrogen donors like -OH, -NH2, but lack hydrogens on the alkyl skeleton.; (But I'm not a user of vina, either.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1974763178:150,learn,learned,150,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1974763178,2,['learn'],['learned']
Usability,"@merkys; > Are you positive that Open Babel adheres to CIP rules in its SMILES output?. While I recall an instance where OpenBabel reported stereogenic; centres as such (possibly in the documentation) including a scrutiny; if substitutents' priorities around a centre ascend/descend by turn to; the left/to the right, I simply forgot if there is an optional flag; for the /visual export/ of the structure as a .svg (or .png) to add; both. + the label of the atom indices, .and.; + (E)/(Z), (R)/(S), (P)/(M) next to the atom/bond. in question which would facilitate such a cross-check. I however; associate these optional decorations with e.g., RDKit and CDKDepict. Because the quick `obabel -L svg` only depicts a selection of options; OpenBabel offers, I welcome your input here.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1042758276:320,simpl,simply,320,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1042758276,2,['simpl'],['simply']
Usability,"@nbeaver There may situations where editing a single `.cif` file manually, directly in the file, is fine, especially if you know plausible entries. If not, [publcif](https://journals.iucr.org/services/cif/publcif/) is a freely available, multi-platform editor which guides you by internal dictionaries and checkers. Note, however, beside the crystallographic model (e.g., unit cell, symmetry operations, atom coordinates), a `.cif` file equally may contain instructions how this model was refined, as well as a reduced representation of the experimental diffraction data. Their consistency is probed with checksums (test [PLAT012](https://journals.iucr.org/services/cif/checking/PLAT012.html)) by Platon, because these two would both allow a) to replicate the construction of the model, and b) build an other, possibly improved, model. For the background, see A. Spek's recent open access publication (author of Platon) [here](http://scripts.iucr.org/cgi-bin/paper?S2056989019016244).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2261#issuecomment-666994769:266,guid,guides,266,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2261#issuecomment-666994769,2,['guid'],['guides']
Usability,"@nbehrnd . Furthermore, Brecher makes an argument for explicit hydrogen atoms on all ligand atoms directly coordinated (bonded) to a metal center:. ""Bonds representing coordination from one atom to a single other atom should be represented as normal plain single bonds. Any hydrogen atoms bonded to the atoms at either end of such a coordination bond must be shown clearly, even if that produces a diagram where some atoms appear to have non-standard valences, such as a nitrogen atom with four attached bonds."". This is particularly important for example with ammine (NH3) ligands, where most software mis-represents cisplatin as [PtCl2(NH2)2] instead of [PtCl2(NH3)2] without explicit hydrogens, since they do not recognize the use of the free electron pair on the ammonia ligands for bonding, which does along with increase of ""valence"" on N from 3 to 4 and try to maintain the ""standard valence"" of N as 3 by removing one H to NH2 instead of NH3",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1860585524:365,clear,clearly,365,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1860585524,2,['clear'],['clearly']
Usability,"@samseaver If you have a conda environment, using `conda install -c conda-forge openbabel` is a safer/simpler bet... That shouldn't need compiling.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1149800675:102,simpl,simpler,102,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-1149800675,2,['simpl'],['simpler']
Usability,"@schatzsc Not a solution, only a complementary observation: by default, obabel clearly indicates that the input structure is (in comparison to a ""more usual one"") problematic e.g., during the conversion from .mol to .png:. ```shell; $ obabel -imol carbene_complex.mol.txt -O na.png; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3. ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3.; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3. ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3.; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3.; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 4. 1 molecule converted; norwid@debian:~/Desktop$ obabel -imol carbene_complex.mol.txt -O check.sdf; ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3. ==============================; *** Open Babel Warning in ReadMolecule; WARNING: Problem interpreting the valence field of an atom; The valence field specifies a valence 2 that is; less than the observed explicit valence 3.; WARNING: Problem interpreting the valenc",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1853535825:79,clear,clearly,79,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2656#issuecomment-1853535825,2,['clear'],['clearly']
Usability,"A better test case is simply:. >>> import pybel; >>> mol = pybel.ob.OBMol(); >>> pybel.Molecule(mol).write(""inchi""). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/933#issuecomment-281795785:22,simpl,simply,22,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/933#issuecomment-281795785,2,['simpl'],['simply']
Usability,"Actually, the reproduction steps above rely on the error raised in #2363. In most cases, simple calling `.addh()` or `.removeh()` should not change the output formula (since it will always list all hydrogens explicitly). However, if the user does other modifications to the molecule, the issue still exists. ```python; >>> from openbabel import pybel; >>> mol = pybel.readstring(""smi"", ""COC""); >>> mol.formula; 'C2H6O'; >>> mol.OBMol.BeginModify(); >>> mol.OBMol.GetAtomById(1).SetAtomicNum(16); >>> mol.OBMol.EndModify(); >>> mol.formula # Does not recalculate since attr(""Formula"") already exists; 'C2H6O'; >>> mol.OBMol.GetSpacedFormula(1, """") # forces the recalculation; 'C2H6S'; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2364#issuecomment-828733464:89,simpl,simple,89,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2364#issuecomment-828733464,2,['simpl'],['simple']
Usability,"After a bit more digging, I can see that it's simply that there are no SMARTS rules in phmodel.txt that match the structure. Looks like Babel's protonation function has the following limitations:; - a limited SMARTS ruleset, giving poor matching and accuracy; - code in phmodel.cpp only able to remove Hs, relying on input or 'addHydrogens' to provide a fully protonated structure. Is that a reasonable assessment of affairs?. Cheers,. Matt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/162#issuecomment-97606018:46,simpl,simply,46,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/162#issuecomment-97606018,2,['simpl'],['simply']
Usability,"After reading the docs, I realise that in the Python interface all global variables are stuck into openbabel.cvar somehow, but dir(openbabel.cvar) doesn't work. However, accessing openbabel.cvar.obErrorLog works fine, e.g.:. >>> dir(openbabel.cvar.obErrorLog); ['ClearLog', 'GetAuditMessageCount', 'GetDebugMessageCount', 'GetErrorMessageCou; nt', 'GetInfoMessageCount', 'GetMaxLogEntries', 'GetMessageSummary', 'GetMessage; sOfLevel', 'GetOutputLevel', 'GetOutputStream', 'GetWarningMessageCount', 'SetMa; xLogEntries', 'SetOutputLevel', 'SetOutputStream', 'StartErrorWrap', 'StartLoggi; ng', 'StopErrorWrap', 'StopLogging', 'ThrowError', '__class__', '__del__', '__de; lattr__', '__dict__', '__doc__', '__getattr__', '__getattribute__', '__hash__',; '__init__', '__module__', '__new__', '__reduce__', '__reduce_ex__', '__repr__',; '__setattr__', '__str__', '__swig_destroy__', '__swig_getmethods__', '__swig_set; methods__', '__weakref__', 'this']; >>> pybel.ob.cvar.obErrorLog.StopLogging(). It's possible to rename cvar to something more catchy - I vote for 'globals' (see section 30.3.3). Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794169:263,Clear,ClearLog,263,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/837#issuecomment-281794169,1,['Clear'],['ClearLog']
Usability,"Agreed 110% - it should be fine. But I don't see the harm in turning on -fPIC if there's an issue with CMake. I see this patch as a workaround, since there's clearly an issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1575#issuecomment-304995714:158,clear,clearly,158,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1575#issuecomment-304995714,2,['clear'],['clearly']
Usability,"Ah interesting, thanks Fredrik. . Looking at the link you've found, that looks like a code/format no longer supported since 2005. The xbs code I mentioned is still available as part of the Ubuntu repository and is functioning (I downloaded and tested this morning). Maybe it would be more useful to switch the ""bs"" format in obabel to support the xbs format described above? At the moment the obabel user guide doesn't give information about the format it is applying or its usage:; https://openbabel.org/docs/dev/FileFormats/Ball_and_Stick_format.html; The xbs code is also still available on github and has been ported to JS:; https://github.com/Montmorency/XBS; https://observablehq.com/@montmorency/xbs-an-observable-ball-and-stick-viewer; What do you think?; Best wishes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2576#issuecomment-1481233956:405,guid,guide,405,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2576#issuecomment-1481233956,2,['guid'],['guide']
Usability,Ah right - it conflicted with #1728. It seemed a simple fix so I used Github's merge conflict tool to fix it. Hopefully it works...,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1727#issuecomment-354355339:49,simpl,simple,49,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1727#issuecomment-354355339,2,['simpl'],['simple']
Usability,"All is clear for now, except for the OBPointGroup::IdentifyPointGroup, which should be added to *.cpp file to create a symbol _ZN9OpenBabel12OBPointGroup18IdentifyPointGroupEv in the shared library. Original comment by: andrey-moscow",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800983:7,clear,clear,7,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800983,2,['clear'],['clear']
Usability,"All three geometries appear to differ slightly by comparison by a; Kabsch test, e.g. calculate_rmsd.py by Jimmy Charnley Kromann et; al.[1] Possible causes for only differences spot may be. + picking the wrong entry from the .nwo file (with multiple entries «geometry»); + indeed an unsuccessful optimization of the geometry submitted; + rounding errors within the implementation of the Kabsch test, or; + that the difference in geometry (especially as there are not this; many reference atoms in methane) by an optimization successfully; run is just little. However, C appears to move a little if; comparing in a diffview. On the other hand, the submission of NWChem's early test case of; nitrogen[2] which departs from; ```; title ""Nitrogen cc-pvdz SCF geometry optimization"" ; geometry ; n 0 0 0 ; n 0 0 1.08 ; end ; basis ; n library cc-pvdz ; end ; task scf optimize. ```; may be processed as mentioned earlier, i.e. after saving the above in; file `n2.nw` with; ```; nwchem n2.nw > n2.nwo; obabel -inwo n2.nwo -oxyz -O n2_out.xyz; ```; While this computation did not alter the interatomic distance (if; compared to the input), there is the move of the barycentre of the; molecule to (0,0,0) in the .xyz eventually written by OpenBabel:; ```; 2; n2.nwo; N 0.00000 0.00000 -0.54000; N 0.00000 0.00000 0.54000. ```; This observation contrasts with the hypothesis of an eventual report; of the input structure. (This is independent from the avenue to copy; and yank the tables from the .nwo into an .xyz file.). [1] https://github.com/charnley/rmsd; [2]; https://nwchemgit.github.io/Getting-Started.html#simple-input-file-scf-geometry-optimization",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2290#issuecomment-898298599:1606,simpl,simple-input-file-scf-geometry-optimization,1606,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2290#issuecomment-898298599,2,['simpl'],['simple-input-file-scf-geometry-optimization']
Usability,"And just to be clear, RDKit doesn't (yet) have this extension. However, it does generate SMILES that require it. Both OB and RDKit will write %100 at the moment in this situation (if it ever occurs), which is incorrect.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1677#issuecomment-339630672:15,clear,clear,15,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1677#issuecomment-339630672,2,['clear'],['clear']
Usability,Another Git skill learned. The only issue is that the commit date was used from the first one.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/42#issuecomment-29452960:18,learn,learned,18,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/42#issuecomment-29452960,2,['learn'],['learned']
Usability,"Apologies - yes, you're right. I hadn't previously viewed it. We clearly bail out at a certain ring size.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1858#issuecomment-402517016:65,clear,clearly,65,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1858#issuecomment-402517016,2,['clear'],['clearly']
Usability,"As a workaround, could I simply remove the faulty rigid fragments from the rigid-fragments.txt files and get a working (albeit slower) OpenBabel installation?. Get Outlook for iOS<https://aka.ms/o0ukef>; ________________________________; From: Geoff Hutchison <notifications@github.com>; Sent: Wednesday, March 25, 2020 3:16:21 PM; To: openbabel/openbabel <openbabel@noreply.github.com>; Cc: Van Dam, Hubertus <hvandam@bnl.gov>; Author <author@noreply.github.com>; Subject: Re: [openbabel/openbabel] obabel seg-faults converting SMILES into mol2 (#2144). Yes, we definitely want a check to detect such fragments in the future. I'll go back later today and look through the fragment generator and figure out why it created these too. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/openbabel/openbabel/issues/2144#issuecomment-604034362>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABDS7HUXXSDRYBF3LRQG2MTRJJKALANCNFSM4LRFJZFA>.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605023103:25,simpl,simply,25,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605023103,2,['simpl'],['simply']
Usability,"As background, have you seen my blog post?; http://baoilleach.blogspot.co.uk/2013/11/anatomy-of-bug-fix.html. So I have tested that the code makes things better. I think you are asking; about unit tests though. I don't see how this code is testable without exposing some of the; depiction internals, or reimplementing them in the tests. Specifically; measuring the ""clash overlap"", which was an existing function in the; depiction code but is not exposed in the API. I'll look into it - it might; be as simple as setting a data field on the molecule. On 21 November 2013 22:23, Geoff Hutchison notifications@github.com wrote:. > Can we get some layout tests? I'm not sure quite how we'd test this, but; > it seems like a good idea.; > ; > —; > Reply to this email directly or view it on GitHubhttps://github.com/openbabel/openbabel/pull/40#issuecomment-29030719; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/40#issuecomment-29059865:503,simpl,simple,503,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/40#issuecomment-29059865,2,['simpl'],['simple']
Usability,"As much as I'd like to fix inchi errors, they made it quite clear they don't want people messing with their code 🙄 I don't believe they've accepted any patches to 1.0.x, but hopefully there will be an open period to comment / question 2.0.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2074#issuecomment-620679340:60,clear,clear,60,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2074#issuecomment-620679340,2,['clear'],['clear']
Usability,"At present it is impossible to change the forcefield from MMFF94, so we cannot perform obconformer on some systems, e.g., borane. In this PR I simply add forcefield as the last argument—use it if passed, otherwise defaulted to MMFF94.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2154#issuecomment-607843604:143,simpl,simply,143,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2154#issuecomment-607843604,2,['simpl'],['simply']
Usability,"Based on the question, it is not clear if you want a machine-readable trace (a log file), or want to assist a visual inspection by a human checker. In case your project's interest is more on the later, are you aware of RDKit's cookbook with the entry ""Highlight a Substructure in a Molecule"" when using a Jupyter notebook?. http://rdkit.org/docs/Cookbook.html#highlight-a-substructure-in-a-molecule",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2534#issuecomment-1247709533:33,clear,clear,33,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2534#issuecomment-1247709533,2,['clear'],['clear']
Usability,"Being able to control the appearance at display time, for instance via CSS, is a nice idea and plays to the strengths of SVG. But it would be tricky to implement immediately because the code for the depiction of molecules is shared with other formats (e.g. PNG) and by the time it gets SVG specific it is just lines and letters (rather than atoms and bonds) being handled. Additional (virtual) functions in the depiction code with different effects for SVG, PNG, etc I think would be necessary. An alternative available now if the OBMol was being handled in C++ or a scripting language, is to color individual atoms and bonds by attaching an OBPairData object:. OBPairData* dp = new OBPairData;; dp->SetAttribute(""color"");; dp->SetValue(""green"");; pAtom->SetData(dp);; ; I think the Python code would be analogous, but Pybel has no simplified form. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1530#issuecomment-281811244:832,simpl,simplified,832,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1530#issuecomment-281811244,2,['simpl'],['simplified']
Usability,"Besides this being clearly a bug in VESTA (at worst), I think I found a workaround. I discovered that if, after doubling the cell, I click in the menu VESTA -> Utilities -> Standardization of Crystal Data and I export the CIF file, then I don't find this problem.; VESTA seems to correctly remove the contradictory symmetry operations from the file. It is hard to understand what this action does but it seems to produce the correct structure and OpenBabel doesn't complain. ; The volume and cell seems to change a little bit but maybe it is safe.; http://jp-minerals.org/vesta/archives/VESTA_Manual.pdf#91. ![image](https://user-images.githubusercontent.com/3047763/138957727-d62c5162-9115-4dbb-a97a-79dafc5eed6a.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414#issuecomment-952311422:19,clear,clearly,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-952311422,2,['clear'],['clearly']
Usability,"Better still would be to store the 'vector3' of coordinates from the first atom in a variable, and then call its distSq method to get the squared distance to the vector3 of the second atom. Also, while we are micro-optimising :-), you could replace your std::min with a basic ""if (newdist < mindist_so_far) mindist_so_dar = newdist;"". Using std::min does a comparison and then an assignment. The simpler ""if statement"" only does the assignment sometimes.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1585#issuecomment-306023466:396,simpl,simpler,396,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1585#issuecomment-306023466,2,['simpl'],['simpler']
Usability,"By ""3D builder"", I mean software to construct 3D structures like Gaussview, Avogadro, IQmol, Spartan... Creating inputs for calculations is not the issue. The issue is precisely that these inputs don't contain the explicit multiplicity of the molecule to prevent openbabel from adding hydrogens despite being instructed not to. We can't really expect all 3D builders to ask for or guess the multiplicity of molecules. However, it seems to me like _openbabel should simply not add hydrogens with the option ""DoNotAddH""_. Specifying the multiplicity is more like a workaround. That being said, I'm not familiar with the codebase, so this might be easier said than done. Nevertheless, it is confusing and can be avoided, as demonstrated by the official `inchi` software.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1215216840:465,simpl,simply,465,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1215216840,2,['simpl'],['simply']
Usability,"Confirmed. The two SMILES strings can be interconverted by swapping the order of two substituents (the amine and the amide) while changing the @ to @@, and thus they are identical (remember that swapping substituents inverts chirality). The error appears to be introduced in writing the CAN smiles string. The Clockwise or Anticlockwiseness in the original SMILES string should have been converted to an absolute configuration, and then converted back to Clockwise or Anticlockwise in the CAN smiles. Simply retaining the @ or @@ is incorrect as it is dependent on the order of substituents which is different. - Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/856#issuecomment-281794626:501,Simpl,Simply,501,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/856#issuecomment-281794626,1,['Simpl'],['Simply']
Usability,"Dear Dr. Hutchison,. I didn’t notice that there is also a defined testing on `OSError` inside `scripts/python/examples/testpybel.py` in `TestToolkit.testRFmissingfile` method, which caused the hidden error in my script `v2`, where I simply changed `OSError` to `ValueError` when input file does not exist. In this time, `v4`, I think everything should be fine. Exactly as the original codes behavior when error happens:. ```; Pseudocode, validation in sequence:. 1) If format is defined:; - ValueError on format itself will be raised if it does not work; else:; - try to guess from filename; * ValueError prompted for file not exists; * ValueError when format does not work. 2) If filename is not valid:; - OSError will be raised; ```. Besides, I also fixed a potential issue in `scripts/python/examples/testpybel.py`, when both `First try` in ""LINE: 14"" and `Second: try` in ""LINE 20"" not work, then global variable `rdkit` and `cdk` will **not** be defined in old codes, although this script is only built for `openbabel.pybel` itself.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480:233,simpl,simply,233,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2509#issuecomment-1204881480,2,['simpl'],['simply']
Usability,"Dear Sir,; Thank you very much for answering and helping me. ; recently, several chemoinformatic tools has been developed to either cluster existing reactions using molecular fingerprint and machinery learning techniques, or produce new reactions for a set of molecules using the concept of generalized reaction rules. these methods are dependant on molecular fingerprints or mol files. as far as I know, the concept of aromaticity is only available in canonical SMILES structure not in molecular fingerprint or mol file. so when we convert an aromatic SMILES to these kind of molecular descriptor, we only consider one tautomer out of all possible structures. that is why I was looking for a function to produce all valence tautomers. I could generate kekule forms by writing the following c++ function:. pair<string,string> getKekulizedSmiles(const vector<string>& newVector, int i); {; string canSmiles;; string kekSmiles;; OBMol mol;; OBConversion conv;; canSmiles = newVector[i];; if (! conv.SetInAndOutFormats(""smi"", ""smi"")); {; cout<<""Formats not available\n"";; }; conv.ReadString(&mol,canSmiles);; conv.SetOptions(""xC"", OBConversion::OUTOPTIONS);; conv.SetOptions(""xk"", OBConversion::OUTOPTIONS);; kekSmiles = conv.WriteString(&mol, true);; return {canSmiles, kekSmiles};; }. though, I still don't know what does '-xk' do. :)). Thanks,; Kiana,",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1840#issuecomment-395316679:201,learn,learning,201,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1840#issuecomment-395316679,2,['learn'],['learning']
Usability,"Do not call `-n`, but `-xn` (mnemonics _use_ or _execute_ a format specific option which `-n` is). As an illustration (obabel 3.1.1 as provided in Linux Debian 12/bookworm (branch testing):. ```bash; $ obabel -:""C"" --title ""methane (Angstroms, default)"" -h --gen3d -o gr96; #GENERATED BY OPEN BABEL 3.1.1; TITLE; methane (Angstroms, default); END; POSITION; 1 UNL C 1 0.95144 0.06266 -0.06096; 1 UNL H 2 2.04364 0.06266 -0.06096; 1 UNL H 3 0.58738 0.24046 -1.07523; 1 UNL H 4 0.58737 0.85214 0.60016; 1 UNL H 5 0.58737 -0.90463 0.29219; END; 1 molecule converted; ```; but; ```bash ; $ obabel -:""C"" --title ""methane (nanometers)"" -h --gen3d -o gr96 -xn; #GENERATED BY OPEN BABEL 3.1.1; TITLE; methane (nanometers); END; POSITION; 1 UNL C 1 0.10736 -0.00092 0.00671; 1 UNL H 2 0.21658 -0.00092 0.00671; 1 UNL H 3 0.07095 0.07563 -0.06216; 1 UNL H 4 0.07095 0.02045 0.10744; 1 UNL H 5 0.07095 -0.09884 -0.02515; END; 1 molecule converted; ```; ---. Given the simplicity of methane, GROMOS possibly is just fine with default `--gen3d` as starting geometry OpenBabel provides here. It often is the sweet spot of computational cost among the five levels of 3D coordinate generation offered. (The manual points to a dedicated publication to balance pros and cons.) For methane in particular, there is no need for an extended permutation of rotor search `--gen3d best` (or `--gen3d slowest`) offer, either. . Because you mention GROMOS, _I speculate_ you aim to provide multiple _conformers_ of one (more complex) molecule for GROMOS to start with. OpenBabel can provide you these geometries as individual, separate models, too.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2471#issuecomment-1119424828:957,simpl,simplicity,957,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2471#issuecomment-1119424828,2,['simpl'],['simplicity']
Usability,"Do you want to add a command-line switch to set the seed? This seems like it's a fairly simple way tweak the randomness (e.g., for unit tests).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1954#issuecomment-481755685:88,simpl,simple,88,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1954#issuecomment-481755685,2,['simpl'],['simple']
Usability,"Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:19064,Simpl,Simplify,19064,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['Simpl'],['Simplify']
Usability,"Error: Unable to find 'openbabel\graphsym.h'; openbabel\openbabel-python.i(353) : Error: Unable to find 'openbabel\isomorphism.h'; openbabel\openbabel-python.i(354) : Error: Unable to find 'openbabel\query.h'; openbabel\openbabel-python.i(355) : Error: Unable to find 'openbabel\canon.h'; openbabel\openbabel-python.i(357) : Error: Unable to find 'openbabel\stereo\stereo.h'; openbabel\openbabel-python.i(361) : Error: Unable to find 'openbabel\rotor.h'; openbabel\openbabel-python.i(363) : Error: Unable to find 'openbabel\rotamer.h'; openbabel\openbabel-python.i(364) : Error: Unable to find 'openbabel\spectrophore.h'; openbabel\openbabel-python.i(435) : Error: Unable to find 'openbabel\obiter.h'; openbabel\stereo.i(1) : Error: Unable to find 'openbabel\stereo\tetranonplanar.h'; openbabel\stereo.i(2) : Error: Unable to find 'openbabel\stereo\tetraplanar.h'; openbabel\stereo.i(3) : Error: Unable to find 'openbabel\stereo\tetrahedral.h'; openbabel\stereo.i(4) : Error: Unable to find 'openbabel\stereo\cistrans.h'; openbabel\stereo.i(5) : Error: Unable to find 'openbabel\stereo\squareplanar.h'; openbabel\stereo.i(6) : Error: Unable to find 'openbabel\stereo\bindings.h'. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]. note: This error originates from a subprocess, and is likely not a problem with pip.; error: legacy-install-failure. × Encountered error while trying to install package.; ╰─> openbabel. note: This is an issue with the package mentioned above, not pip.; hint: See above for output from the failure.; ```. Installing the source and providing the directories to them doesn't change anything either and it's trying to look in a Linux path for these files. It's not clear what's going on, why is it trying to compile it if binaries are already installed?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1301905197:7382,clear,clear,7382,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-1301905197,2,['clear'],['clear']
Usability,"FWIW:. This bugs stems from the unfortunate choice to give the Python extension the version 3.1.1.1, which seems to cause `StrictVersion(find_version())` to fail with `invalid version number '3.1.1.1'`, which is then printed as a warning. For my own purpose, I managed to work around this by ""tweaking"" the version number in the version check to `3.1.1`, so that pkgconfig finds the libs and can compile the extension against them (and the `setup.py` does not need to revert back to looking in `/usr/local`). ```diff; diff -u -r openbabel-3.1.1.1.orig/setup.py openbabel-3.1.1.1/setup.py; --- openbabel-3.1.1.1.orig/setup.py	2020-05-23 06:54:26.000000000 -0230; +++ openbabel-3.1.1.1/setup.py	2024-04-01 12:34:04.590770399 -0230; @@ -43,7 +43,10 @@; """"""Try use pkgconfig to locate Open Babel, otherwise guess default location.""""""; try:; # Warn if the (major, minor) version of the installed OB doesn't match these python bindings; - py_ver = StrictVersion(find_version()); + py_ver = find_version(); + if py_ver == '3.1.1.1':; + py_ver = '3.1.1'; + py_ver = StrictVersion(py_ver); py_major_ver, py_minor_ver = py_ver.version[:2]; pcfile = 'openbabel-{}'.format(py_major_ver); ob_ver = StrictVersion(pkgconfig(pcfile, '--modversion')); ```. For this to work `PKG_CONFIG_PATH` needs to contain `/path/to/openbabel/lib/pkgconfig` (assuming it's not in any standard location). Next time around it's needed to push an additional release, it would be safer to simply release the Python bindings by increasing the versions final digit instead of appending a new one.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2030299243:1454,simpl,simply,1454,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2030299243,2,['simpl'],['simply']
Usability,"Fair enough.; On 15 Mar 2016 2:32 p.m., ""Geoff Hutchison"" notifications@github.com; wrote:. > @baoilleach https://github.com/baoilleach I'm inclined to merge this.; > We can add clear documentation in the installation instructions, but I; > think for most use, it's preferable to have portable binaries than perfect; > speed.; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly or view it on GitHub:; > https://github.com/openbabel/openbabel/pull/280#issuecomment-196846306",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/280#issuecomment-196990242:178,clear,clear,178,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/280#issuecomment-196990242,2,['clear'],['clear']
Usability,"Finally closed. The final hurdle was 2D -> InChI. Regarding test cases, I'd prefer to start off with simpler structures and be methodological about it. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779574:101,simpl,simpler,101,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/683#issuecomment-281779574,2,['simpl'],['simpler']
Usability,Fixed! Now should work in revision 2906 or later. This bug with automatically close unless there's feedback from Noel. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/851#issuecomment-281794392:99,feedback,feedback,99,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/851#issuecomment-281794392,2,['feedback'],['feedback']
Usability,"For some time, I have intended to remove GetGenericValueDef() from the Open Babel API. This is a convenience function that should never have been added as the user can simply handle this at their end with a function in their own code.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1913#issuecomment-448524812:168,simpl,simply,168,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1913#issuecomment-448524812,2,['simpl'],['simply']
Usability,"Gotcha. I'll tell you what - with this info, I'll put together the test; with the testfiles from the original bug report. - Noel. On Mon, 24 Sep 2018 at 13:27, fredrikw <notifications@github.com> wrote:. > Yeah, I know ther are no tests, I did this on my Windows machine at work; > and I'm not in complete agreement with the build system... I'll try to add; > a test shortly, a simple one is to run gen2D on [H+].CC[O-].CC[O-] and make; > sure that all atoms have unique x- and y-positions (that is the real; > problem, the long bonds are just a symptom). Before the change I get the; > molfile (notice the coordinates for the last three atoms):; >; > OpenBabel09241813522D; >; > 7 4 0 0 0 0 0 0 0 0999 V2000; > 0.8210 -0.3437 0.0000 H 0 3 0 0 0 0 0 0 0 0 0 0; > 9.9282 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 8.1962 -2.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 6.4641 -1.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; > 6.4641 -6.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 6.4641 -6.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 6.4641 -6.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; > 2 3 1 0 0 0 0; > 3 4 1 0 0 0 0; > 5 6 1 0 0 0 0; > 6 7 1 0 0 0 0; > M CHG 3 1 1 4 -1 7 -1; > M END; >; > After the change I got:; >; > OpenBabel09241813522D; >; > 7 4 0 0 0 0 0 0 0 0999 V2000; > 3.2321 -3.0000 0.0000 H 0 3 0 0 0 0 0 0 0 0 0 0; > 4.9641 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 4.0981 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 3.2321 -0.5000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; > 2.2321 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 1.3660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; > 0.5000 -1.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; > 2 3 1 0 0 0 0; > 3 4 1 0 0 0 0; > 5 6 1 0 0 0 0; > 6 7 1 0 0 0 0; > M CHG 3 1 1 4 -1 7 -1; > M END; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957463>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGUgwxlZxsfb83ca",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957968:378,simpl,simple,378,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957968,2,['simpl'],['simple']
Usability,"Great. The ultimate problem is that the openbabel GUI supports either boolean options (uses a checkbox) or options with parameters (uses a textbox), but not a combination of the two. So the GUI right now cannot provide the user a way to choose the three combinations (no ""xw"", ""xw"" with no text, ""xw"" with text). But rather than change the GUI, it's clearer to the user if you just add another option. Regarding (2), it's up to you - I'm not familiar with the use cases. Here is my suggestion:; - no option: default order (presumably this is the order of atoms in the input molecule); - -xw : Sort atoms by atomic number; - -xy 'Al': Al first, then default order; - -xw -xy 'Al': Al first, then sort atoms by atomic number",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/188#issuecomment-225157627:350,clear,clearer,350,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/188#issuecomment-225157627,2,['clear'],['clearer']
Usability,"Great. Your comment is noted and I don't think there is any such documentation.; One more thing to add to the list. If you want to take a stab at it; yourself, it would be much appreciated. On Thu, 13 Sep 2018 at 08:30, Semen Yesylevskyy <notifications@github.com>; wrote:. > This solved the problem, thanks a lot!; > However, I have to admit that this is not intuitive at all. Is there any; > chapter of documentation which describes all the magic, which happens when; > new molecule is constructed?; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1884#issuecomment-420911523>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGVCqj5gnS1Em4dSzFTaAE-Joqi9rks5uagmhgaJpZM4WgOWp>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420931906:360,intuit,intuitive,360,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420931906,2,['intuit'],['intuitive']
Usability,Haha...nice! Never heard about the term Texas Carbon. ;) Thanks for clearing things up for me!; I guess this issue can be marked as question and closed now if nobody has any other questions about writing SMARTS correctly.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/274#issuecomment-193777076:68,clear,clearing,68,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/274#issuecomment-193777076,2,['clear'],['clearing']
Usability,"Hello, I am using miniconda and installed OpenBabel with `conda install -c conda-forge openbabel`. Then I install SWIG with brew, and install openbabel dependencies with. ```sh; pip install -U openbabel --global-option=build_ext \; --global-option=""-I/Users/myname/miniconda3/envs/py38/include/openbabel3"" \; --global-option=""-L/Users/myname/miniconda3/envs/py38/lib/openbabel""; ```. In my virtual env, the code hint seems to work. <img width=""1370"" alt=""image"" src=""https://user-images.githubusercontent.com/55699713/223072740-2818dded-03dd-418e-9008-cbbdf802249a.png"">. However, when I execute the code, it raises errors. ```sh; (py38) (plba); $ python src/test_pybel.py; Traceback (most recent call last):; File ""src/test_pybel.py"", line 16, in <module>; from openbabel import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/__init__.py"", line 3, in <module>; from . import openbabel; File ""/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/openbabel.py"", line 22, in <module>; from . import _openbabel; ImportError: dlopen(/Users/myname/Desktop/openbabel/plba/lib/python3.8/site-packages/openbabel/_openbabel.cpython-38-darwin.so, 0x0002): symbol not found in flat namespace '__ZN9OpenBabel9aromtyperE'; ```. And just simply importing openbabel like `from openbabel import openbabel` also raises errors. How to solve this? Thx!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337:1291,simpl,simply,1291,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2413#issuecomment-1455800337,2,['simpl'],['simply']
Usability,"Hello,. Thank you for your response. I am not using homebrew. I am using an; anaconda install of python and all packages are contained within that; install. I used conda-forge to install openbabel v3.1.0 and subsequently; pybel. The error output I sent was from Windows v2004 and I sent that one; because MACOS just said ""segmentation fault"". I figured the Windows output; was a little more useful. Both were generated from the same script. Both; scripts included:; from openbabel import openbabel; from openbabel import pybel; However, there is information I didn't include. These errors come about; after compiling with pyinstaller but the program works before compiling. I; didn't include this information originally because I can reproduce the; errors with the interpreter and simple code. Best,; Mike. On Thu, Apr 15, 2021 at 9:29 PM schluta ***@***.***> wrote:. > I'm guessing that being on mac you installed with homebrew. If that is not; > the case ignore the rest of this.; >; > If so you need to make sure your anaconda python knows about the package.; > You can make your python aware of the other package with something like; > below. You should amend the path below for where homebrew installs packages; > for you. Note that where the packages get symlinked to is fine, like below; > for me.; >; > I want to stress that it is not really recommended to use packages across; > separate python installs. At the very least you should make sure that the; > versions of python are the same.; >; > import syssys.path.append('/usr/local/lib/python3.9/site-packages')from openbabel import openbabelfrom openbabel import pybel; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2357#issuecomment-820843139>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AOVMFGOKTVPSMSDX5MCKQSDTI6HILANCNFSM43AM3UFA>; > .; >. -- ; ______________________________; Dr. Micha",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2357#issuecomment-821190882:781,simpl,simple,781,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357#issuecomment-821190882,2,['simpl'],['simple']
Usability,"Here's a simpler example, benzene:; ```; obabel -:C1=CC=CC=C1 -sC1=CC=CC=C1 -osmi; # no match; obabel -:C1=CC=CC=C1 -sc1ccccc1 -osmi; # match; obabel -:C1=CC=CC=C1 -s[#6]1=[#6][#6]=[#6][#6]=[#6]1 -osmi; # no match; ```; I'll chat with others at work about whether this is working as intended.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1065#issuecomment-306062094:9,simpl,simpler,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1065#issuecomment-306062094,2,['simpl'],['simpler']
Usability,Here's a simpler example. Cn1c(C)c(C)n2c1nc1c2c(=O)n(C)c(=O)n1C. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/963#issuecomment-281796268:9,simpl,simpler,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/963#issuecomment-281796268,2,['simpl'],['simpler']
Usability,Here's a simpler test case presumably stemming from the same problem:. <pre>; >obabel -:O[C@@H](C)N -oinchi | obabel -iinchi -osmi -h; C1[C@H](N)(O)[H]1; </pre>,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/134#issuecomment-94563971:9,simpl,simpler,9,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/134#issuecomment-94563971,2,['simpl'],['simpler']
Usability,"Hey Noel,. Hope all is well!. The connection to the H is implicit here, not explicit, isn't it? And I don't think the radical thing is having any effect. Take the following three molecules:. CC(=O)N; CC(=O)[NH]; CC(=O)[NH2]. the query [ND1] matches all of these molecules in Daylight, but only the first in OB. Equally the query [Nh2] (N with 2 implicit H's) matches the first and third molecules in Daylight, but only the first in OB. I agree OB is internally consistent here, it's just not agreeing with Daylight, which is what's giving me headaches as I try to port some old code. Here's the relevant bit from the SMILES manual:. <begin>. 3.4.1 Hydrogens; Hydrogen atoms do not normally need to be specified when writing SMILES for most organic structures. The presence of hydrogens may be specified in three ways: . Implicitly.....for atoms specified without brackets, from normal valence assumptions. Explicitly by count.....inside brackets, by the hydrogen count supplied; zero if unspecified. As explicit atoms.....as [H] atoms. <end>. So while I agree they've not made it very clear, my reading of the second point is that if you specify the H count inside the brackets, you've explicitly specified the implicit H count!. What fun cheminformatics can be!. P. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802030:1085,clear,clear,1085,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802030,2,['clear'],['clear']
Usability,"Hey guys, my pypi id is sswamida. If you give me yours, I can add you to the openbabel project on pypi. (and mcs07 does not appear to be a pypi user). As far as naming the package, it seems that there are really two issues at play.; 1. We want to be clear in our google searches, so people don't get mislead to think the pypi page is openbabel proper.; 2. We also want to follow python pypi conventions. For reason #2, it is ideal to call the package ""openbabel"", for reason #1 we might want to call it ""openbabel-python"". . As a compromise, I recommend calling it ""openbabel"" but improving the readme to include a link to openbabel proper website. The readme file will be included on the website, and any users that find it will be immediately redirected to the main website if desired. If we go with this option, I need to add some of you as maintainers/owners of the pypi openbabel project so you can push updates there. What do you guys think?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33240755:250,clear,clear,250,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33240755,2,['clear'],['clear']
Usability,"Hi @cmanion. Thanks for these fixes, additions. It's a good idea to put commits addressing separate issues in different pull requests / branches so that they can be easily reviewed separately. For more info, see https://guides.github.com/introduction/flow/",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1608#issuecomment-319610744:220,guid,guides,220,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1608#issuecomment-319610744,2,['guid'],['guides']
Usability,"Hi @fredrikw , thanks for the hint regarding `otool -l`. Interestingly, I wasn't able to find any `LC_RPATH` commands in the dylib images, even if `otool -L` shows that libs are linked with `@rpath` definition. In my case this affects libcairo, which is linked as `@rpath/./libcairo.2.dylib`. Of course, without an `@rpath` defined the lib can't be found and hence not loaded (leading to loss of functionality, for which I actually wanted to create another issue). Does this qualify as a bug in the build/linking process?. I guess a user wanting to compile openbabel with python bindings from source on OSX, using non-system python (like anaconda), now only has the option to manually fix library paths using `otool -L`. I wonder whether it's possible to do this during the build process. For example, if e.g. `-DPYTHON_LIBRARY` or `-DCAIRO_LIBRARY` are set, the linker could be instructed to use the provided path name instead of the install_name to link the library (maybe after checking if the install_name is valid). Alternatively, one could post-process the various libraries using `install_name_tool` to fix the path of dynamically linked objects. Clearly, the first option is more elegant.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/203#issuecomment-159563037:1154,Clear,Clearly,1154,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/203#issuecomment-159563037,1,['Clear'],['Clearly']
Usability,"Hi @timvdm, apart from a logical error in my own code (which I need to think about), the OB code still had trouble with the following pairs:. ```; *=Nc1[nH]cc2-c(c1)c1ccccc1n2,*=Nc1ncc2c(c1)c1ccccc1[nH]2; *=Nc1ccc(cc1)NC(Nc1ccccc1)=S,*=Nc1ccc(cc1)N=C(Nc1ccccc1)S; *=Nc1cccc(c1)NC(N*)=S,*=Nc1cccc(c1)NC(=N*)S; *=Nc1ccc(cc1)NC(=N*)S,*=Nc1ccc(cc1)NC(N*)=S; ```; It also had trouble with protonated nitrogens, which hopefully is a simple atom-typing issue:; ```; *N=CC(c1[nH]ncn1)=CN=[N+](c1ccccc1)*,*N=CC(c1n[nH]cn1)=CN=[N+](c1ccccc1)*; *NC(c1ccc[n+](c1)*)=O,*N=C(c1ccc[n+](c1)*)O; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2171#issuecomment-918953059:427,simpl,simple,427,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2171#issuecomment-918953059,2,['simpl'],['simple']
Usability,"Hi Hin-Tak, thanks for the comments and the fix. I want to ask whether you would be interested in running a nightly build on a Tru64 system. None of the developers have access to such a system and so errors like this occur from time to time, and are difficult to resolve. We have recently (i.e. in the last week) set up a build dashboard at http://my.cdash.org/index.php?project=Open%20Babel&date=2010-02-14 and are working through the warnings and test failures. The build procedure is simply a one command that should be run from cron. If you are happy to do so, please contact me off-list at baoilleach@gmail.com. . - Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796279:487,simpl,simply,487,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/964#issuecomment-281796279,2,['simpl'],['simply']
Usability,Hi please can anyone guide me on how to pip install openbabel in a virtual environment on a ubuntu system. I keep getting the same error mentioned in this issue. I am trying to do this with a python 3.10 virtual environment on ubuntu 22.04,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911769554:21,guid,guide,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2571#issuecomment-1911769554,2,['guid'],['guide']
Usability,"Hi, thank you I have succeed installed the 2.3.9, but there is another problem that I can not use pybel in python after install that. Maybe cause the wrong cmake arrgs I made, or others. Any suggestion and guide for installing pybel?; Thanks~",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78367179:206,guid,guide,206,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78367179,2,['guid'],['guide']
Usability,"Hi,; I would also be very interested in the suggested solution to provide the env var OB_RANDOM_SEED. I this change usable at all at this point?; thanks",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1934#issuecomment-908044690:116,usab,usable,116,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1934#issuecomment-908044690,2,['usab'],['usable']
Usability,"Hi,; I would need you to be a bit more specific. Are you experiencing a different problem now? You did not find the molecules responsible for the ""could not setup force field"" error? It is a lot better if you keep the different problems in different issues, if nothing else to help people arriving to the issues in the future.; So, using the ""-e"" flag, could you find out which molecules gave the original error?; Regarding the ""distortion"", please create a new issue, and be specific as to how you notice the distortion, be clear on what is the problem.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2311815101:525,clear,clear,525,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2719#issuecomment-2311815101,2,['clear'],['clear']
Usability,"I agree - if one file and no symlinks are possible, that would be simplest.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/137#issuecomment-90202917:66,simpl,simplest,66,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/137#issuecomment-90202917,2,['simpl'],['simplest']
Usability,"I also see only 2 molecules converted on 32bit Windows (with the development code). But the problem is data dependent and intermittent. Apparently irrelevant changes during debugging can make the problem go away and the read position in the input file apparently moves erratically. So an over-writing or alignment problem looks probable. The header is binary but its interpretation in C++ makes assumptions about how a C++ struct is laid out - clearly not a good idea. I have in the past written a version with the header in ASCII but did not proceed because correcting another bug seemed to solve the problem. . It seems likely that the bug is a more general I/O on the header and not confined to 64bit systems. I'll try revising the header reading and writing code. In the longer term I would like fastsearch files to be portable binary in Andrew Dalke's FPB format, if it ever comes to fruition. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796337:444,clear,clearly,444,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796337,2,['clear'],['clearly']
Usability,"I am also facing this issue. EDIT:; ### **Installation Guide Ubuntu 20.04**; Since I spent 4+ hours getting this to install, I thought I would write a small guide to save anyone else time. I am installing on Ubuntu 20.04, Python 3.6 with a miniconda3 environment for Jupyter. I am sure this will also be applicable to Ubuntu 18. Before starting:; ```!conda install -c anaconda swig --yes```; 1. Download openbabel-3.1.1-source.tar.bz2 and extract; 2. cd openbabel-3.1.1; 3. Use the following cmake command: ``` cmake ../openbabel-3.1.1 -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DCMAKE_INSTALL_PREFIX=~/miniconda3 -DPYTHON_INCLUDE_DIR=~/miniconda3/include/python3.6m -DCMAKE_LIBRARY_PATH=~/miniconda3/lib -DSWIG_DIR=~/miniconda3/share/swig/4.0.2/ -DSWIG_EXECUTABLE=~/miniconda3/bin/swig -DPYTHON_LIBRARY=~/miniconda3/lib/libpython3.6m.so -DCMAKE_BUILD_TYPE=DEBUG ```; 4. ```make -j8``` (or however many cores you have); 5. sudo make install",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2271#issuecomment-790051759:55,Guid,Guide,55,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2271#issuecomment-790051759,3,"['Guid', 'guid']","['Guide', 'guide']"
Usability,"I am aware of the pybel package that has nothing to do with openbabel. I have not installed that pybel package. I have only installed openbabel from conda-forge. Openbabel from conda-forge comes with the correct pybel. . The program I’m writing works when launching with Python in the conda environment. When I compile with pyinstaller in the same conda environment and then start the binary (again in the same environment) I get the error I posted. Mike. Sent from my iPhone. > On Apr 16, 2021, at 9:24 PM, schluta ***@***.***> wrote:; > ; > ﻿; > I am not familiar with the conda forge package so I do not know how much help I will be.; > ; > When you say you installed openbabel and subsequently pybel do you mean this?; > If so then that package is unrelated. The pybel module you want is included in the openbabel package (If installing manually its usually just a flag to include the python bindings). You could verify you have pybel by going to the openbabel install location and looking for the pybel.py script. I think I saw somewhere that having both pybel modules caused problems for some people.; > ; > I'm having trouble understanding when you say ""these errors come about after compiling with pyinstaller but the program works before compiling"" you then say ""but I can reproduce the errors with the interpreter and simple code""; so does the script work on its own or not?; > ; > If you can find pybel once and it works, then that suggests to me that whenever it is not you might be using a different virtual environment where it is not installed. Do you know if the pyinstaller is running in the same virtual environment that your conda is using?; > ; > You saying it is not working for Windows or MacOS seems to suggest there may be an issue with the conda-forge repo/install process. However, you say that it works sometimes? So I am not sure.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2357#issuecomment-821762664:1328,simpl,simple,1328,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357#issuecomment-821762664,2,['simpl'],['simple']
Usability,I am facing a similar issue with `xyz` format. The OpenBabel GUI doesn't include `xyz` in the ----INPUT FORMAT---- list. . I simply downloaded and installed the latest release `OpenBabel-3.1.1-x64.exe`. . I'm not sure how to troubleshoot this. Any ideas?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1722#issuecomment-872355598:125,simpl,simply,125,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1722#issuecomment-872355598,2,['simpl'],['simply']
Usability,"I am not familiar with the conda forge package so I do not know how much help I will be. When you say you installed openbabel and subsequently pybel do you mean [this](https://anaconda.org/bioconda/pybel)?; If so then that package is unrelated. The pybel module you want is included in the openbabel package (If installing manually its usually just a flag to include the python bindings). You could verify you have pybel by going to the openbabel install location and looking for the pybel.py script. I think I saw somewhere that having both pybel modules caused problems for some people. I'm having trouble understanding when you say ""these errors come about after compiling with pyinstaller but the program works before compiling"" you then say ""but I can reproduce the errors with the interpreter and simple code""; so does the script work on its own or not?. If you can find pybel once and it works, then that suggests to me that whenever it is not you might be using a different virtual environment where it is not installed. Do you know if the pyinstaller is running in the same virtual environment that your conda is using?. You saying it is not working for Windows or MacOS seems to suggest there may be an issue with the conda-forge repo/install process. However, you say that it works sometimes? So I am not sure.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2357#issuecomment-821743959:803,simpl,simple,803,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2357#issuecomment-821743959,2,['simpl'],['simple']
Usability,"I am trying to automate a reaction scheme with molecular fragments. So, I have two fragments in one smiles string i.e. CCCCO.CCCC(=O) I would like to connect them with an integer so that I can get an ester i.e. CCCCO%11.CCCC(%11)(=O) Reusing digits is not possible here. I would like to automate this for more than 100 connections. i'd like to increment the number of connections as I make them. In certain applications, not having more than 100 is problematic with the systems I consider. Maybe there is another way to do this, but the simplest right now (with my existing code and thought process) would be to have more than 2 digits available for these kinds of connections. Any suggestions? And thanks for the super-quick reply. Original comment by: sgarturo",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1529#issuecomment-281811237:537,simpl,simplest,537,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1529#issuecomment-281811237,2,['simpl'],['simplest']
Usability,"I am using Open Babel 2.4.0 and I got the same errors. . 1. I was doing a very similar task, splitting a multi-model PDB file into n PDB files ""model-n.pdb"". The first line in ""model-1.pdb"" is ""MODEL 1"", but it does not have a ""ENDMDL"" keyword. The rest of the output PDB files do not have the MODEL/ENDMDL keywords. . 2. I also tried to split the multi-model PDB file into SDF files. For the 2nd to nth output SDF files, the end of the file looks like this: . > ```; > M END; > > <ODEL>; > 46; > ; > $$$$; > ```. Where ""ODEL"" should be ""MODEL"". . 3. I tried to read the multiple-model PDB file and write multiple-model PDB simply by ""obabel <input-multi-model.pdb> -O <output-multi-model.pdb>"". In the output file, the ""MODEL"" line is duplicated for the first structure: . > ```; > MODEL 1; > MODEL 1; > COMPND input.pdb; > AUTHOR GENERATED BY OPEN BABEL 2.4.0; > ATOM 1 C1 UNL d 1 -12.057 -47.098 31.474 1.00 0.00 C; > ```. I feel there might be a minor issue with reading/writing lines with the ""MODEL"" keyword. The rest of the output file looks fine.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1986#issuecomment-892383570:624,simpl,simply,624,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1986#issuecomment-892383570,2,['simpl'],['simply']
Usability,"I appreciate your fast reply. As far as writing my own bond perception code, I track bonds using distance cutoffs during simulation and from there I build contact matrices. So I essentially know what the topology of each molecule is, but I still preferred to use SMILES strings as there are many tools for visualization. Do you know if it is possible for me to instead somehow pass my system's contact matrix to openbabel and have it generate the SMILES string? Or am I simply better off building my own visualization tools for my tracked contact matrices?. Thank you for the help!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1808#issuecomment-377671090:470,simpl,simply,470,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1808#issuecomment-377671090,2,['simpl'],['simply']
Usability,"I believe the problem with plugins has been resolved in 2.2.0 branch, so yes, this bug can be counted as closed.; I'd be happy to assist with the testing/feedback for MinGW installation of OB, I see that the questions show up moderately often. The compilation of executables (e.g. babel.exe) still fails even in 2.2.0 and this is something that I think will have to be addressed eventually. Original comment by: igor_filippov",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780073:154,feedback,feedback,154,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780073,2,['feedback'],['feedback']
Usability,"I bumped in this bug report while trying to understand why I couldn't generate the proper protonation state even for simple molecules. I've tried to identify the source of the problem with the version I'm using, v2.3.2 (Ubuntu).; I hope I'm not missing something trivial in my tests... ; Hopefully it can be useful to debugging, I apologize for the long post (and the horrible formatting... blame Markdown).; I've tried the test case Noel reported, and while the charge issue seems to be fixed, protonation state and atom typing are still wrong. Besides, I found the following behavior to be rather puzzling:; <pre><code>obabel -:""OC(=O)c1ccccc1"" -omol2 --gen3D -p 7.4 -O obabel_firstpass.mol2; obabel -imol2 obabel_firstpass.mol2 -omol2 -p 7.4 -O obabel_secondpass.mol2; </code></pre>The molecule obabel_secondpass.mol2 has correct typing and charge (~-1).; The following code replicates the behavior of obabel commands above, generating the proper molecule only at the second pass:; <pre><code>; # Python Obabel/Pybel test; import pybel; ob = pybel.ob; from sys import argv; fp = open('benzoicAcid.smi', 'w'); fp.write('OC(=O)c1ccccc1 benzoicAcid\n'); fp.close(); """"""read SMI and generate Mol2 (first pass)""""""; obc = ob.OBConversion(); obc.SetInAndOutFormats('smi', 'mol2'); obc.OpenInAndOutFiles('benzoicAcid.smi', 'wrong.mol2'); mol = ob.OBMol(); notatend = obc.Read(mol); while notatend:; """"""pybel shortcut""""""; pmol = pybel.Molecule(mol); pmol.make3D(); mol = pmol.OBMol; mol.CorrectForPH(); mol.AddHydrogens(); obc.Write(mol); """"""XXX write molecule with wrong carboxylic atom typing: O.3 and O.2""""""; print ""Atoms count (first pass):"", mol.NumAtoms(); mol = ob.OBMol(); notatend = obc.Read(mol); """""" re-read the wrong molecule""""""; obc = ob.OBConversion(); obc.SetInAndOutFormats('mol2', 'mol2'); obc.OpenInAndOutFiles('op.mol2', 'right.mol2'); mol = ob.OBMol(); notatend = obc.Read(mol); while notatend:; """"""pybel shortcut""""""; pmol = pybel.Molecule(mol); #pmol.make3D(); mol = pmol.OBMol; mol.Cor",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800260:117,simpl,simple,117,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1091#issuecomment-281800260,2,['simpl'],['simple']
Usability,"I can confirm this is an issue. A simple way to reproduce this is `obabel -:""C[CH2]"" -O out.smi -h`. It outputs the implicit version.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2266#issuecomment-725196141:34,simpl,simple,34,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2266#issuecomment-725196141,2,['simpl'],['simple']
Usability,"I clear the comments, but leave reference to VASP module in the license header. MDFF is not my program, so it is difficult to me to say the reason of having new format.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/91#issuecomment-54785881:2,clear,clear,2,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/91#issuecomment-54785881,2,['clear'],['clear']
Usability,"I confirm that it works this way :). However do you plan to fix the bug itself in the near future? In other words, when and how could I be informed that fixed and stable code is available?. In the mean time, I don't mind designing a special-case in my pipeline, but it would make life much simpler to consider those peptides like any other... . In the meantime, thanks for this little ""hack"" avoiding the problem :). Original comment by: kevinrue",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1150#issuecomment-281801285:290,simpl,simpler,290,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1150#issuecomment-281801285,2,['simpl'],['simpler']
Usability,"I don't think the install location is a big deal but moving to a package; would be a major (API) change. But isn't there a middle ground, e.g. a; directory for pybelassets or so?. I don't know how significant is ""breaks webGL for IPython <2.0."" - the OB; philosophy has been to provide backwards compatability as much as possible. On 6 June 2014 10:49, Matt Swain notifications@github.com wrote:. > One option to keep this more contained could be to change pybel from a; > module to a package — i.e. a directory called ""pybel"" that contains an; > _init_.py file. Then you can add supplementary files or subdirectories; > like ""static"" or ""js"" without polluting the main python site-packages; > directory.; > ; > In terms of the python code, it would be possible to keep the change; > transparent to the user. You could just put it all the code in _init_.py,; > or separate it out into multiple python files and use imports in _init_.py; > to define the interface.; > ; > The downside to this would be that you lose the simplicity of just having; > pybel as a single file. But with imolecule.min.js being added anyway,; > having a pybel directory containing everything might be better than having; > disparate files.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/pull/80#issuecomment-45320158.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/80#issuecomment-45352532:1019,simpl,simplicity,1019,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/80#issuecomment-45352532,2,['simpl'],['simplicity']
Usability,"I don't think we're going to fix this easily. My suggestion is that people either need to do what you advise (add formats/*.o) or try Cmake. If that's OK with you, I'm going to mark this as closed. I'd love to have better support with Cygwin and MinGW, but we don't seem to get much feedback. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780072:283,feedback,feedback,283,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/710#issuecomment-281780072,2,['feedback'],['feedback']
Usability,"I found a simple way to update the result files for SMARTS, formula and formal charge tests. But not for the canonstable test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842919659:10,simpl,simple,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2648#issuecomment-1842919659,2,['simpl'],['simple']
Usability,"I had some plans for eliminating GetSSSR - can you find me some of the call-tree for those? What is calling FindSmallestRing?. There's a fairly simple strategy to find ring closures - you do a bounded breadth-first search from a particular atom. If you haven't found your way back to the atom after X bonds, then you're probably not in a ring. The catch is for big macrocycles, but after discussion with a few people:; - X = 14 should be sufficient for real aromatics; - X = 20 should be more than sufficient for most cases",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347043185:144,simpl,simple,144,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1699#issuecomment-347043185,2,['simpl'],['simple']
Usability,"I have also hit into this issue while I was looking at 3D structures of nerve gases and insecticides. Here is a simpler example, using the SMILES of methamidophos:. obabel -:""O=P(OC)(SC)N"" -omol --gen3d -h",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1883#issuecomment-424259443:112,simpl,simpler,112,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1883#issuecomment-424259443,2,['simpl'],['simpler']
Usability,"I have been looking at this and I agree that it is a bug. The problem is that when pruning redundant rings (in https://github.com/openbabel/openbabel/blob/bcb790049bf43415a0b99adf725249c3f4da02bf/src/ring.cpp#L356), overlaps are checked through atoms instead of bonds.; In this case, that results in the central ring (marked in red:; ![image](https://github.com/openbabel/openbabel/assets/86855/c6dbee4d-6a19-4925-a526-6efa8f7fb38d); ) getting pruned.; I could make a try to fix this, but I'm not too familiar with all the inner workings of the OBRing to be certain to fix it in the best way possible. I suppose the easiest way would be to add the attribute _bondset to the class, parallell to the _pathset and use that for pruning instead. Do you think there might be a performance issue here? I think maybe @timvdm was the last one to touch the code?; Another option would be to add code in `OBRingSearch::RemoveRedundant` such as in `OBRing::visitRing`:; ```; // Translate ring atom indexes to ring bond indexes.; std::vector<unsigned int> bonds = atomRingToBondRing(mol, ring->_path);; OBBitVec bondset;; for (unsigned int i = 0; i < bonds.size(); ++i); bondset.SetBitOn(bonds[i]);. //; // Remove larger rings that cover the same bonds as smaller rings.; //; mask.Clear();; for (unsigned int j = 0; j < rlist.size(); ++j) {; std::vector<unsigned int> otherBonds = atomRingToBondRing(mol, rlist[j]->_path);; OBBitVec bs;; for (unsigned int i = 0; i < otherBonds.size(); ++i); bs.SetBitOn(otherBonds[i]);. // Here we select only smaller rings.; if (otherBonds.size() < bonds.size()); mask |= bs;; }; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930:1268,Clear,Clear,1268,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2641#issuecomment-1816436930,1,['Clear'],['Clear']
Usability,"I have compiled openbabel-2.3.0 from source on my linux box (Debian wheezy) following the instructions on you website and can confirm that the molecular coordinates from my g98 file are parsed correctly with 2.3.0. That is, I have compiled openbabel on the exact same computer with the exact same config that was crashing with openbabel 2.3.1. It clearly appears that I uncovered a regression. By the way, you library does exactly what I need with a nice API so that I am very interested in seeing it fixed!. Original comment by: mathias_laurin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1241#issuecomment-281803204:347,clear,clearly,347,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1241#issuecomment-281803204,2,['clear'],['clearly']
Usability,"I have the same issue. It's impossible to use `openbabel` with python virtual env. I really need the openbabel python binding in a poetry env. This is a simple way to reproduce the issue:. ```bash; docker run -i -t -v ""${PWD}"":/wdir -w /wdir ubuntu:latest bash. apt-get update; apt-get install -y python3-pip; pip3 install poetry; poetry add openbabel; ```. The error is the similar to the one described in the opening of this issue:; ```; ...; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include', '/usr/include/python3.8', '/usr/local/include/openbabel3']; - library_dirs: ['/usr/lib', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel/openbabel-python.i to openbabel/openbabel-python_wrap.cpp; swig -python -c++ -small -O -templatereduce -naturalvar -I/root/.cache/pypoetry/virtualenvs/acpype-_njGwaMt-py3.8/include -I/usr/include/python3.8 -I/usr/local/include/openbabel3 -o openbabel/openbabel-python_wrap.cpp openbabel/openbabel-python.i. Error: SWIG failed. Is Open Babel installed?; You may need to manually specify the location of Open Babel include and library directories. For example:; python setup.py build_ext -I/usr/local/include/openbabel3 -L/usr/local/lib; python setup.py install; [end of output]; ...; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572:153,simpl,simple,153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2412#issuecomment-1147689572,2,['simpl'],['simple']
Usability,"I have the same problems. I have installed OpenBabel into `C:\Program Files\OpenBabel-3.1.1`. And the location is in PATH environment. ```shell; (common) C:\Users\Liu.D.H>pip install -U openbabel; Looking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple; Collecting openbabel; Using cached https://pypi.tuna.tsinghua.edu.cn/packages/9d/3f/f08f5d1422d74ed0e1e612870b343bfcc26313bdf9efec9165c3ea4b3ae2/openbabel-3.1.1.1.tar.gz (82 kB); Building wheels for collected packages: openbabel; Building wheel for openbabel (setup.py) ... error; ERROR: Command errored out with exit status 1:; command: 'C:\Users\Liu.D.H\anaconda3\envs\common\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'C:\\Users\\Liu.D.H\\AppData\\Local\\Temp\\pip-install-ngq7bdyo\\openbabel\\setup.py'""'""'; __file__='""'""'C:\\Users\\Liu.D.H\\AppData\\Local\\Temp\\pip-install-ngq7bdyo\\openbabel\\setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' bdist_wheel -d 'C:\Users\Liu.D.H\AppData\Local\Temp\pip-wheel-k092nuj6'; cwd: C:\Users\Liu.D.H\AppData\Local\Temp\pip-install-ngq7bdyo\openbabel\; Complete output (15 lines):; running bdist_wheel; running build; running build_ext; Warning: invalid version number '3.1.1.1'.; Guessing Open Babel location:; - include_dirs: ['C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\include', 'C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\include', '/usr/local/include/openbabel3']; - library_dirs: ['C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\libs', 'C:\\Users\\Liu.D.H\\anaconda3\\envs\\common\\PCbuild\\amd64', '/usr/local/lib']; building 'openbabel._openbabel' extension; swigging openbabel\openbabel-python.i to openbabel\openbabel-python_wrap.cpp; swig.exe -python -c++ -small -O -templatereduce -naturalvar -IC:\Users\Liu.D.H\anaconda3\envs\common\include -IC:\Users\Liu.D.H\anaconda3\envs\common\include -I/usr/local/include/openbabel3 -o ope",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2018#issuecomment-820952949:251,simpl,simple,251,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2018#issuecomment-820952949,2,['simpl'],['simple']
Usability,"I installed it by simply just downloading the latest version of the 64 bit; binary installer. Thanks for also pointing out that -b is not needed for this command. On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:. > Yeah,; > https://open-babel.readthedocs.io/en/latest/Installation/install.html; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969533935:18,simpl,simply,18,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969533935,2,['simpl'],['simply']
Usability,"I knew `#1` and `#2` to be unspecific about the double bond both because of the wiggle bonds CDKDepict uses .and. because using the optional CIP labeling (second pull-down menu, last entry) thankfully assigns both (R)/(S) and (E)/(Z) if applicable. What I still lack with SMILES is e.g., to recognize manually well enough if the substitutents around a double bond are in cis, or trans relationship. As with but-2-ene, the four permutations are simpler to recognize (either `//`, or `\\` point to the same direction for the cis; and either opposing `/\`, or `\/` for the trans relationship):. ![2022-03-30_cdkdepict_CIP](https://user-images.githubusercontent.com/19709084/160873791-cd5ca720-9dbf-4a4c-96b1-e504890a1204.png). That's when tested programs may help. Ok. Thank you; case closed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083306380:444,simpl,simpler,444,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1083306380,2,['simpl'],['simpler']
Usability,"I know a little about C++ programming but almost nothing about chemistry (level high school only), would it be possible to have a simple example with corresponding 2 expected result depending on ""-c"" presence?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/227#issuecomment-388568261:130,simpl,simple,130,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/227#issuecomment-388568261,2,['simpl'],['simple']
Usability,"I like the two-pass approach, since it's simpler. Is this something we can revisit -- I think it addresses a few other bugs on here. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779169:41,simpl,simpler,41,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/660#issuecomment-281779169,2,['simpl'],['simpler']
Usability,"I managed to fix the memory issues in my local working copy of the trunk. OBMol::Clear() now completes fine too. Here is the output of diff:. ~~~~~~~~~; Index: src/formats/xtcformat.cpp; ===================================================================; --- src/formats/xtcformat.cpp	(revision 5041); +++ src/formats/xtcformat.cpp	(working copy); @@ -184,11 +184,10 @@; ; // Convert positions from single to double precision and convert from; // nm to A; - std::vector<double> confs;; - confs.resize(natoms * 3);; + double* confs=new double [natoms * 3];; for (int i=0; i < natoms * 3; ++i) // unroll??; - confs[i] = static_cast<double>(10.0 * floatCoord.at(i));; -; +	 confs[i] = static_cast<double>(10.0 * floatCoord.at(i));; + ; vconf.push_back(&confs[0]);; }; ~~~~~~~~~. I don't have the permissions to commit this though. Original comment by: zetadin",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1339#issuecomment-281804860:81,Clear,Clear,81,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1339#issuecomment-281804860,1,['Clear'],['Clear']
Usability,"I mean that at the moment users cannot control the seed of PRNG, which leads to irreproducible results. . ---. I believe this can be simplified into the following CML file:. ```xml; <?xml version=""1.0""?>; <cml xmlns=""http://www.xml-cml.org/schema"">; <name>ethylene</name>; <molecule>; <atomArray>; <atom id=""a1"" elementType=""C"" hydrogenCount=""2"" x3=""0.0"" y3=""0.0"" z3=""0.0""/>; <atom id=""a2"" elementType=""C"" hydrogenCount=""2"" x3=""0.0"" y3=""0.0"" z3=""1.3""/>; </atomArray>; <bondArray>; <bond id=""b1"" atomRefs2=""a1 a2"" order=""2""/>; </bondArray>; </molecule>; </cml>; ```. Here the carbon atoms are aligned on the *z*-axis.; The *z* coordinates of the added hydrogens (e.g., `obabel C2H4.cml -o xyz -h`) seem to be reproducible, but *x* and *y* are not. For acetylene, the coordinates of H are deterministic, independently of rotation.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2420#issuecomment-950258942:133,simpl,simplified,133,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2420#issuecomment-950258942,2,['simpl'],['simplified']
Usability,"I partially agree. I see your point about not relying on perceived data once you've made a modification. (Although even there ... what, exactly, invalidates perceived data? It's not clear at all.). On the other hand, getting a segfault for code that looks perfectly reasonable is always bad. Was it reasonable for me to guess that doing a SMARTS match for ""[Fe]"" was going to use the (invalidated) LSSR to recompute the aromaticity of every atom? It cost me a couple days to track this down. (The real code was much more complex than the example posted above ... the atom.Delete() was far, far removed in both time and space from the pattern.Match() call.). Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1253#issuecomment-281803484:182,clear,clear,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1253#issuecomment-281803484,2,['clear'],['clear']
Usability,I propose to default to the (simpler) format (a) in the case that there is only one grid associated with the molecule.; Having one grid is very common and it is also common that other programs only format (a) anyway. Please let me know if for some reason this is not acceptable and what I can do to fix it.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2580#issuecomment-1498474898:29,simpl,simpler,29,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2580#issuecomment-1498474898,2,['simpl'],['simpler']
Usability,"I released Open Babel 2.0 in 2005, and v3.0 was released in 2019. That's 14 years of API compatibility. One reason I *intentionally* added the version number to the pkg-config file was to signal a strong backwards-incompatible change. One should not just make a simple patch to switch a pkg-config arrangement. My guess is that whenever 4.0 comes out, the 100 projects (or whatever) will similarly need to make updates - and possibly significant ones. I don't have a problem with switching to `openbabel.pc` but frankly you, or any other package maintainer shouldn't just assume that projects will be compatible with another major version change by tinkering with the `pkg-config` or cmake files.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2216#issuecomment-627066415:262,simpl,simple,262,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2216#issuecomment-627066415,2,['simpl'],['simple']
Usability,"I see no problem moving to (signed) int unless we can find an example of a string being used here. It's an API change, but we're in the process of making several at the moment, so now's the time and it sounds like it's necessary. We should make sure to add a test case to make it clear that this is the desired behaviour. By the way, in your Python, you might prefer to use the triple quote ("""""") for multi-line strings.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1786#issuecomment-371507121:280,clear,clear,280,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1786#issuecomment-371507121,2,['clear'],['clear']
Usability,"I should add that it seems to work with ASCII for whatever reason. (Or maybe it just shows a collection of molecules as well? I can't tell because it's ASCII). I think this would be a very useful addition. My use case is automatically converting markdown files with embedded reaction SMILES into HTML (which means converting the SMILES strings to images). I had to go with RDKit instead for this application, but I love OpenBabel's simplicity. I would be very happy to migrate if this ever gets fixed. OpenBabel works very well for single molecules. (Additionally, using reaction SMARTS like RDKit does is arguably even better as it allows for R groups and searching over reactions using R groups). If you could tell me what the relevant classes / files would be I could take a look and see if I can get it fixed and submit a PR.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2306#issuecomment-736733682:432,simpl,simplicity,432,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2306#issuecomment-736733682,2,['simpl'],['simplicity']
Usability,I simply don't know enough about the details of the canonical numbering to debug this myself. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/833#issuecomment-281794102:2,simpl,simply,2,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/833#issuecomment-281794102,2,['simpl'],['simply']
Usability,"I started to convert your `.sdf` test files into `.pdb` by `obabel -isdf <ligand_name>.sdf -opdb -O <ligand_name>.pdb` with Open Babel (version 3.1.0 in Linux Debian, I suggest you check if you equally may update to this) and displayed them pairwise in an elder installation of Jmol (14.6.4_2016.11.05). Only the conversion about `PEMETREXED_1.sdb` yielded a reasonable display of the `.pdb` with different atom colors for C, H, N, O. You know that Open Babel may read and write `.sdf` and `.pdb` files. I knew there are multiple ways an `.xyz` or a `.pdb` file may be written and occasionally -- just for the sake of consistency -- I use Open Babel to «correct» these prior to further processing. Thanks to your test files, I learn that this apparently equally is the case for `.sdf` files and I thus issued conversions in pattern of `obabel -isdf NATEGLINIDE_1.sdf -osdf -O NATEGLINIDE_1_rewritten.sdf` for both `NATEGLINIDE` and `PEMETREXED`, and then converted these by e.g., `obabel -isdf NATEGLINIDE_1_rewritten.sdf -opdb NATEGLINIDE_1_rewritten.pdb`. The visualizations by Jmol then look considerably better. Could such an edit equally be helpful for you?. The obvious question is about the difference between the original and the modified `.sdf` files. According to a difference view with `vimdiff` (an extension of the vim editor) or [meld](http://meldmerge.org/) (version 3.20.2) is that both the number of columns in the upper part of the connectivity table increase, as well as the connectivities are in part defined differently. Archive `format_problem.zip` contains the files mentioned and some screen photos taken along to address the issue. [format_problem.zip](https://github.com/openbabel/openbabel/files/5673926/format_problem.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2303#issuecomment-742608516:727,learn,learn,727,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2303#issuecomment-742608516,2,['learn'],['learn']
Usability,"I started with the middle one: c12c(O[CH](C1=O)C(C)C)cc1c(c2)ccc(=O)o1. It has one undefined tetrahedral stereocenter. Conversion to InChI gave:; #0 :Wrong 0D stereo descriptor(s): #1; Omitted undefined stereo. I was setting the parity of the center to INCHI_PARITY_UNKNOWN. The docs aren't very clear. I also tried INCHI_PARITY_NONE. Same error. In the end, I've changed the code to not create a tetrahedral stereocenter at all, if the stereochemistry isn't specified. With this change, conversion gives:. #0 :Omitted undefined stereo. I don't think it produce a warning about this if it doesn't let you specify that it is unspecified. :-). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/945#issuecomment-281796050:296,clear,clear,296,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/945#issuecomment-281796050,2,['clear'],['clear']
Usability,I tested the changes on the resulting files read from VESTA and VisIt. ; Any feedback is welcome.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2580#issuecomment-1488054706:77,feedback,feedback,77,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2580#issuecomment-1488054706,2,['feedback'],['feedback']
Usability,I think it's more basic than this: the molecule is simply deleted.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/219#issuecomment-131895077:51,simpl,simply,51,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/219#issuecomment-131895077,2,['simpl'],['simply']
Usability,"I think the main plan would be to add `coordgen` as an optional compile and when available, it's used in preference to the `mcdlutil.cpp` code. The main hook is in `ops/gen2d.cpp` right now, which simply calls `generateDiagram()`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2015#issuecomment-522060171:197,simpl,simply,197,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2015#issuecomment-522060171,2,['simpl'],['simply']
Usability,"I think we're pretty clear up-front that SystematicRotorSearch does exactly what it says - systematically generate all possible rotamers. Even for a small molecule, this is exponential, roughly 3^n for n rotatable bonds. I'm not sure I'd suggest it for anything beyond 8-10 rotatable bonds. (We've done it, but yes, it takes a lot of memory.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2498#issuecomment-1163286170:21,clear,clear,21,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2498#issuecomment-1163286170,2,['clear'],['clear']
Usability,"I think you outline a need for a fast search ""server"" tool. Basically, you'd load the index and then be able to send searches to it. There's probably some minimal syntax with a ""reload"" to reload the index and ""terminate"" to quit the process. It can be much simpler than obabel because it's single-purpose.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/195#issuecomment-119047469:258,simpl,simpler,258,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/195#issuecomment-119047469,2,['simpl'],['simpler']
Usability,"I think you should rethink your approach a bit. You will not be able to properly do a force field minimization with a fragment. Better to add a dummy atom or something if that is what you are after. Or create the 3D structure with hydrogens and then replace the proper hydrogens. Since you seem to be working in python, there should be no need to go via the xyz file, you have all the coordinates on the molecule object so use that.; I would do something like:; 1. Create molecule from SMILES, possibly with attachment points as deuteriums or similar.; 2. Create 3D structure, probably a simple --gen3D would suffice since you are going to add substituents that would change the 3D-structure anyway.; 3. Add your attachments; 4. Optionally, minimize the resulting structure. This is a rather common procedure, so you should be able to find plenty of example codes by googling...",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149796371:588,simpl,simple,588,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2484#issuecomment-1149796371,2,['simpl'],['simple']
Usability,I use debian. The cmake command I simple copied from the cmake site of yours.; cmake -DCMAKE_INSTALL_PREFIX=/usr/local/openbabel ~/src/openbabel; I also tried using =/home/$USR$/build/openbabel; but even in the new repository 4514 the same error message keeps coming back. Original comment by: *anonymous,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800641:34,simpl,simple,34,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1111#issuecomment-281800641,2,['simpl'],['simple']
Usability,"I was able to workaround these problems as described at https://gist.github.com/baoilleach/1a7e517798804bdd96b3e9b4927092ce. In advance of starting the parallel threads:; ```; obErrorLog.StopLogging(); // not thread-safe; OBConversion conv;; conv.SetInFormat(""smi""); // loading of plugins not thread-safe so do it here; OBMol mol;; conv.ReadString(&mol, ""C""); // Init() of global typers not thread-safe so do it here; obLocale.SetLocale(); // Prevent Open Babel later get/setting the locale by doing it here; ```; and afterwards; ```; obLocale.RestoreLocale(); // Undo the SetLocale() above; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674420142:564,Undo,Undo,564,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674420142,1,['Undo'],['Undo']
Usability,"I was actually just looking at it. While I agree that the depiction looks better, with something like this, I always check stereochemistry from ChemDraw:; From mol:; ![screen shot 2018-02-20 at 4 29 06 pm](https://user-images.githubusercontent.com/41128/36450223-33941bee-165b-11e8-93aa-e021e45636b4.png). Current code (clearly weird, but 'S'):; ![screen shot 2018-02-20 at 4 29 30 pm](https://user-images.githubusercontent.com/41128/36450238-4115e18a-165b-11e8-9923-a434424a091a.png). Your patch:; ![screen shot 2018-02-20 at 4 30 06 pm](https://user-images.githubusercontent.com/41128/36450272-57e70ccc-165b-11e8-83ed-fa638111bb0d.png). Now, I agree that the way the wedge is drawn is just plain wrong. And it seems like there's an inversion in the coordinate scheme. But I'm not going to merge this unless you can convince me that your code is producing the correct stereochemistry.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1777#issuecomment-367126965:320,clear,clearly,320,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1777#issuecomment-367126965,2,['clear'],['clearly']
Usability,"I was looking at the fold code.. I think the problem is that you're folding to *larger* bit sizes, not *smaller* which was the intent of folding. That's clearly undefined behavior. Patch coming..",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1654#issuecomment-335045077:153,clear,clearly,153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1654#issuecomment-335045077,2,['clear'],['clearly']
Usability,"I was pretty sure that was the case, but just checking. We already have one; crazy function where GetTorsionAngle is radians and SetTorsionAngle is; degrees. Just to keep you on your toes. On 5 December 2013 20:25, andersx notifications@github.com wrote:. > No, the old code converts to degrees by getting an angle from the; > vectorAngle function (which returns in degrees).; > ; > I wrote it this way to make it clear that the return value is in degrees.; > (the vectorAngle function uses this notation as well); > ; > —; > Reply to this email directly or view it on GitHubhttps://github.com/openbabel/openbabel/pull/49#issuecomment-29934291; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/49#issuecomment-29934851:414,clear,clear,414,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/49#issuecomment-29934851,2,['clear'],['clear']
Usability,"I would probably suggest 3 for now. Clearly I should have added a bool return value for the method - and I'm happy to add to the ABI for the v3.1 release. Otherwise, I think the patch looks great - and clearly handling ~17k molecules with limited issues is a profound step forward.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2158#issuecomment-611150310:36,Clear,Clearly,36,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2158#issuecomment-611150310,3,"['Clear', 'clear']","['Clearly', 'clearly']"
Usability,"I wrote these files... and I *think* I was just trying to be consistent with the other CMake scripts. But looking at them now, they aren't very consistent anyway. Here are all the others:. 1. `FindInchi.cmake` added by @cryos (the referenced `COPYING-CMAKE-SCRIPTS` doesn't seem to exist) https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindInchi.cmake#L8-L10. 2. `FindCairo.cmake` added by @baoilleach https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindCairo.cmake#L9-L11. 3. `FindEigen2.cmake` added by @ghutchis; https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindEigen2.cmake#L13-L15. 4. `FindEigen3.cmake` added by @ghutchis (specifically says ""2-clause BSD license"") https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/FindEigen3.cmake#L13-L16. 5. `UsePythonTest.cmake` added by @baoilleach (specifically says ""New BSD license"" i.e. 3-clause, and again the referenced `COPYING-CMAKE-SCRIPTS` doesn't seem to exist) https://github.com/openbabel/openbabel/blob/f3ed2a9a5166dbd3b9ce386e636a176074a6c34c/cmake/modules/UsePythonTest.cmake#L15-L19. I'm not sure what the best way to clear up the confusion is - it would be good to have a consistent specific BSD license for all these files but it might be tricky to establish the intentions of all the copyright holders. . In the meantime, for the files that I am the copyright holder of (`OptimizeNative.cmake` and `FindRapidJSON.cmake`): By adding them to Open Babel, I consider them to be released under the GPLv2 that applies to the whole project, but I am also happy for them to be used/redistributed under the more permissive [3-Clause BSD License](https://opensource.org/licenses/BSD-3-Clause).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2425#issuecomment-964439389:1285,clear,clear,1285,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2425#issuecomment-964439389,2,['clear'],['clear']
Usability,"I'd be a bit happier if the comments were fixed so it wasn't quite so clear this came from the VASP format (e.g., references to POSCAR). Is there a reason for a new file format for your program?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/91#issuecomment-54498465:70,clear,clear,70,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/91#issuecomment-54498465,2,['clear'],['clear']
Usability,"I'll take down the other page so. On 28 January 2014 10:57, Matt Swain notifications@github.com wrote:. > OK I left the package name as 'openbabel' and updated the README to; > explain more clearly that this is just the python bindings along with a; > link to the main Open Babel site.; > ; > Here's what it will look like (on the test PyPI site):; > https://testpypi.python.org/pypi/openbabel; > ; > ## ; > ; > Reply to this email directly or view it on GitHubhttps://github.com/openbabel/openbabel/pull/65#issuecomment-33468494; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33470586:190,clear,clearly,190,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33470586,2,['clear'],['clearly']
Usability,I'm OK with this merge. Any complaints for this version. It seems like a clear step forward over the current code.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/23#issuecomment-24183132:73,clear,clear,73,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/23#issuecomment-24183132,2,['clear'],['clear']
Usability,"I'm closing this - please try to submit pull requests from a branch:; https://guides.github.com/introduction/flow/. When you're making a pull request from your master (like here), I can't isolate the changes for this particular change. I *think* they're all in #1739, correct?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1597#issuecomment-354309128:78,guid,guides,78,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1597#issuecomment-354309128,2,['guid'],['guides']
Usability,"I'm closing this. The best (simple) option on Mac is to install Anaconda, then `conda install -c conda-forge openbabel`",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1503#issuecomment-625455088:28,simpl,simple,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1503#issuecomment-625455088,2,['simpl'],['simple']
Usability,"I'm glad I can help. For more information on the problem and a snippet which reproduces de bug, check the issue I posted in the scikit-learn GitHub.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1702#issuecomment-347869795:135,learn,learn,135,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1702#issuecomment-347869795,2,['learn'],['learn']
Usability,"I've been thinkking about your last comment for a while. This a difference between Python and C++. In Python, nothing is destroyed so long as you kept a reference. In C++, everything is typically destroyed once the container is destroyed (this is the typical design decision or else memory leaks will be common). So I think this behaviour is not unexpected once you accept that the Python bindings are simply wrappers around a C++ library.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602#issuecomment-317240956:402,simpl,simply,402,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602#issuecomment-317240956,2,['simpl'],['simply']
Usability,"If I were you @dkoes, I would undo the last commit and rebase the branch on master.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-530862051:30,undo,undo,30,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-530862051,2,['undo'],['undo']
Usability,"If you check the spec, you'll see that it's not a bug. That's simply how the format works. Marked as pending. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1002#issuecomment-281796972:62,simpl,simply,62,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1002#issuecomment-281796972,2,['simpl'],['simply']
Usability,"If you start with a simple molecule, e.g. methane, or ethane, or water, you will only set a small number of bits. These should help you to work it out. Note that for most applications the exact order of bits is not important (e.g. calculating Tanimoto similarities), so long as you don't mix bit vectors with different orders.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2023#issuecomment-531505526:20,simpl,simple,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2023#issuecomment-531505526,2,['simpl'],['simple']
Usability,"If you're wondering why I'm not merging this, it's because there are a gazillion unrelated changes in this pull request. Please create a completely new branch for *each* change and use `git cherry-pick` to grab only the specific changes you want, e.g. https://guides.github.com/introduction/flow/. I'm sorry to be picky, but I'd like to merge the obthermo changes and *not* the Gaussian partial charge revisions. The latter, IMHO, need further discussion and refinement. (I like the idea of accessing different kinds of partial charge models, just not your current code.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1600#issuecomment-323825612:260,guid,guides,260,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1600#issuecomment-323825612,2,['guid'],['guides']
Usability,"In my opinion it looks much clearer .make2D() than .draw(show=False, update=True). ; It should be more efficient(I didn't time it) as there is much more code and checks in the draw function.; So I would add it :)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1765#issuecomment-360256427:28,clear,clearer,28,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1765#issuecomment-360256427,2,['clear'],['clearer']
Usability,"In this highly simplified case, I would expect the output to be just one line, C=COC=C, both with and without the -c flag. In the general case, the line returned with the -c option must be a member of the set of lines which are returned without the -c option. Also, your prior patch has gotten mangled by the markdown. Is the only change to reverse the sense of the 'if' test? If so, doing that causes the 'make test' test suite to fail, but without a useful error message.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/227#issuecomment-388594506:15,simpl,simplified,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/227#issuecomment-388594506,2,['simpl'],['simplified']
Usability,"Is `bind` necessary at all? It seems that what it is used for the criteria in `std::replace_if` is simply equality. In such case, `std::replace` can be used in place of `std::replace_if`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2001#issuecomment-850394706:99,simpl,simply,99,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2001#issuecomment-850394706,2,['simpl'],['simply']
Usability,"Is it time to think about making Eigen a requirement? We get a lot of bug; reports from people who don't have it and are wondering why they are; missing certain features. Alternatively we could beef up the output of; Cmake to make it clear at the very end what's been found and the; consequences. On 3 March 2016 at 05:50, Geoff Hutchison notifications@github.com wrote:. > ---; > ; > You can view, comment on, or merge this pull request online at:; > ; > https://github.com/openbabel/openbabel/pull/271; > Commit Summary; > - Only use distance geometry method if EIGEN is available. Fixes #270.; > ; > File Changes; > - _M_ src/ops/gen3d.cpp; > https://github.com/openbabel/openbabel/pull/271/files#diff-0 (4); > ; > Patch Links:; > - https://github.com/openbabel/openbabel/pull/271.patch; > - https://github.com/openbabel/openbabel/pull/271.diff; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/pull/271.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/271#issuecomment-191649847:234,clear,clear,234,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/271#issuecomment-191649847,2,['clear'],['clear']
Usability,"Is there a different way I should download and install?. On Wed, Feb 28, 2024 at 10:53 AM Cassandra Guffey ***@***.***>; wrote:. > I installed it by simply just downloading the latest version of the 64 bit; > binary installer.; >; > Thanks for also pointing out that -b is not needed for this command.; >; > On Wed, Feb 28, 2024 at 10:43 AM nbehrnd ***@***.***> wrote:; >; >> Yeah,; >> https://open-babel.readthedocs.io/en/latest/Installation/install.html; >>; >> —; >> Reply to this email directly, view it on GitHub; >> <https://github.com/openbabel/openbabel/issues/2676#issuecomment-1969515029>,; >> or unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/BB33FF4XCERUXXFXOKXG3MDYV5UEDAVCNFSM6AAAAABD6KRLYGVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTSNRZGUYTKMBSHE>; >> .; >> You are receiving this because you were mentioned.Message ID:; >> ***@***.***>; >>; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723:149,simpl,simply,149,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2676#issuecomment-1971837723,2,['simpl'],['simply']
Usability,"It appears the root error is:. ```; 1>c:\bld\openbabel_1550159794694\_h_env\library\include\eigen3\eigen\src/Core/arch/SSE/PacketMath.h(811) : fatal error C1001: An internal error has occurred in the compiler.; 8701>(compiler file 'msc1.cpp', line 1411); 8711> To work around this problem, try simplifying or changing the program near the locations listed above.; 8721>Please choose the Technical Support command on the Visual C++ ; 8731> Help menu, or open the Technical Support help file for more information; 8741>Internal Compiler Error in C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\bin\x86_amd64\cl.exe. You will be prompted to send an error report to Microsoft later.; ```. I'm not sure much can be done when the error message is that the compiler cannot handle the file. The best advice is probably to just have it target python 3.5-3.7 and drop python 2.7 support, which will cause condo-forge to use Visual Studio 14.0 (2017) instead of Visual Studio 9.0 (2008 aka over a decade old).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1930#issuecomment-466402135:294,simpl,simplifying,294,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1930#issuecomment-466402135,2,['simpl'],['simplifying']
Usability,"It is expected that packagers will make their own arrangements. It's trivial for them (a copy command). Builders will need to add the directory to PYTHONPATH, etc. Design decisions take place in the open on openbabel-devel. If you look back through the archive, as well as bug reports on the bindings especially related to new versions of MacOS, it will hopefully be clear why we made this choice. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1217#issuecomment-281802860:367,clear,clear,367,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1217#issuecomment-281802860,2,['clear'],['clear']
Usability,"It seems possible a/the reference you refer to is _Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation_ by Robert Hanson _et al._ (J. Chem. Inf. Model. 2018, 58, 1755-1765, [doi 10.1021/acs.jcim.8b00324](https://doi.org/10.1021/acs.jcim.8b00324)) with synopses like. ![Hanson_2018_01](https://user-images.githubusercontent.com/19709084/174974300-6556c416-c2b0-4b2c-a271-86e926645817.png). and. ![Hanson_2018_02](https://user-images.githubusercontent.com/19709084/174974348-81939aa1-e1d5-45c1-8015-55aaeb29c030.png). and their [validation suite](https://cipvalidationsuite.github.io/ValidationSuite/). In part it builds on a talk _The need for Open-CIP: Comparing Cahn-Ingold-Prelog rule implementations_ by John Mayfield _et al._ (link to the preserving [repository](https://www.nextmovesoftware.com/talks/Mayfield_BuildingOnSand_InChI_201708.pdf)) with comparisons about how well the programs applied the rules at time of the survey (e.g., slide 18):. ![Mayfield_2017_ACS08](https://user-images.githubusercontent.com/19709084/174975215-ce311803-953b-4ddf-85f4-bf5bb895bd9f.png). (Mayfield _et al._, 254th ACS National Meeting & Exposition. Aug 2017). This and other talks compiled by [nextmovesoftware](https://www.nextmovesoftware.com/talks.html) convey the message to be much more aware of limits of implementation, and to become a critic user, than the usual _click and go_. One instructive example / problem not anticipated by interaction _via_ the GUI:. ![Mayfield_2017_ACS08_b](https://user-images.githubusercontent.com/19709084/174977177-3e3768ac-1436-4c1a-b178-9f124508151d.png). (Mayfield talk, slide 22). (This reply is more to a future reader interested in the topic, than for the developers of openbabel.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162799766:154,Guid,Guide,154,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2497#issuecomment-1162799766,1,['Guid'],['Guide']
Usability,"It's a bug (nothing should break the build), but without further feedback or the ability to reproduce, we'll have to mark as closed for now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2033#issuecomment-542647090:65,feedback,feedback,65,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2033#issuecomment-542647090,2,['feedback'],['feedback']
Usability,"It's a bug, but a documentation bug. The function does not do what it says it does. It simply checks to see whether one of a limited number of atom types in the molecule returns true when asked are they chiral. . In short, this function should be removed unless someone writes code to work out whether a molecule is chiral.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1809#issuecomment-380783583:87,simpl,simply,87,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1809#issuecomment-380783583,2,['simpl'],['simply']
Usability,"It's a subtle point, but I disagree that we are interpreting the SMILES differently - we both read the same molecule. The real culprit here is any operation that's sensitive to explicit vs. implicit Hs, such as the use of this Dn notation. Anything like this is sensitive to the treatment of Hs by a particular toolkit, and I think is just a bad idea from the get go. To be honest I'm not a SMARTS guru, so...; (1) Could you spell out a specific example where D is useful, like the primary amine?; (2) I'll post something on my blog to get some feedback from people who may actually know what they are talking about. Regarding the X/v bug, I wouldn't hold my breath. That code is quite complex, and we are currently preparing for a release. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802038:545,feedback,feedback,545,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802038,2,['feedback'],['feedback']
Usability,"It's just an oversight. We would welcome support for it. It appears to be clearly documented at:; https://www.chemaxon.com/marvin-archive/5_3_0/marvin/help/formats/mrv-doc.html. If you need any help or guidance, let us know here or on the openbabel-devel list.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1685#issuecomment-343106604:74,clear,clearly,74,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1685#issuecomment-343106604,4,"['clear', 'guid']","['clearly', 'guidance']"
Usability,It's still not clear why you can't reuse digits. In your example CCCCO%11.CCCC(%11)(=O) you could reuse %11 after this point. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1529#issuecomment-281811239:15,clear,clear,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1529#issuecomment-281811239,2,['clear'],['clear']
Usability,"Just create the virtual environment (example for Linux Debian attached below); the isolated vessel of Python's standard library is available to you in a matter of a few seconds. I don't know how Python was installed to the computer you use (perhaps by an installer from python.org, maybe Winpython, maybe chocolately, maybe ...). It is possible other programs / utilities / the operating system (now) rely on Python; hence, the sudden removal of Python can unexpectedly hamper / corrupt the work elsewhere. *This* is a reason of the previous suggestion to simply set up a virtual environment (of Python) for your project because you know to eventually use some functionality outside the standard library & share a `requirements.txt` file. It equally helps you to build something in a reproducible way (share with a colleague, your script is written in partial fulfillment of a class, etc.). Regarding the GUI of openbabel: you don't have to use it. Like every GUI, the developers selected some functionality which now is presented in a hierarchy assumed to be logical and useful. If there is only one, or a few of structures to interconvert into an other file format, the GUI *can* be useful. The access from the CLI however is *more suitable* (or, the only reasonable way) to interact with openbabel to *pipe* and *tee* input, output, error streams with a script, or programs (grep, sed, awk; an other instance of openbabel; something written by you, etc.). In the case of a Debian based Linux operating system, for instance, the installation is modular: bindings to python, or the installation of the gui are optional (require an additional explicit opt-in) to `openbabel` and `libopenbabel7` for the executable to the CLI:. ![synaptic](https://github.com/openbabel/openbabel/assets/19709084/c40aa8e1-4551-4e89-8f44-d6fc35df2400). [log.txt](https://github.com/openbabel/openbabel/files/13270060/log.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432:556,simpl,simply,556,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1795509432,2,['simpl'],['simply']
Usability,Just looking at this now in the context of the 3.0.1 release. I see a couple of TODOs in there based on memory allocation and pointers. Do you need/want feedback on these?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1853#issuecomment-623063416:153,feedback,feedback,153,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1853#issuecomment-623063416,2,['feedback'],['feedback']
Usability,"Just make it clear that it's not confidential, but that they can email the lead developer confidentially if they want. I don't think you need to provide an email address - they'll figure it out.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1671#issuecomment-339111653:13,clear,clear,13,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1671#issuecomment-339111653,2,['clear'],['clear']
Usability,"Just to add my 2c to the discussion on atom typing. My recommendation would be to avoid SMARTS and do the atom typing in code. It will be faster, but I think also clearer and less prone to errors. You can find examples of both approaches in the Open Babel codebase.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1731#issuecomment-355772015:163,clear,clearer,163,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1731#issuecomment-355772015,2,['clear'],['clearer']
Usability,"Just to note that [C,CR5] simplifies to C and that OB 2.3.2 is quite old so I'd definitely try a newer version. That said, I'd guess that the problem is with the structures, or OB's perception thereof, not with the SMARTS matcher. OB matches the all-atom structure whereas the PDB file is often missing bonds and bond orders, so these must be inferred. If you convert the structure to a MOL file and look at the bonds and bond orders, there must be something messed up.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2156#issuecomment-610006374:26,simpl,simplifies,26,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2156#issuecomment-610006374,2,['simpl'],['simplifies']
Usability,"Keeping on the investigation, I displayed good() on the stream and as expected the second one returns 0 (so not good).; Then I displayed:; eof => 0 in both cases so ok; bad => 0 in both cases so ok; fail => 1 in the second time; This patch prevents the pb but it seems we enter an endless loop (I stopped after 6000 iterations):; `diff --git a/src/formats/chemdrawcdx.cpp b/src/formats/chemdrawcdx.cpp; index f6538cc1..e7eb591a 100644; --- a/src/formats/chemdrawcdx.cpp; +++ b/src/formats/chemdrawcdx.cpp; @@ -715,6 +715,8 @@ stringstream& CDXReader::data(); CDXReader::CDXReader(std::istream& is) : ifs(is), depth(0); {; //ReadHeader; + ifs.clear();; + ifs.seekg(0);; char buffer[kCDX_HeaderStringLen+1];; ifs.read(buffer,kCDX_HeaderStringLen);; buffer[kCDX_HeaderStringLen] = '\0';; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1690#issuecomment-381359620:642,clear,clear,642,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1690#issuecomment-381359620,2,['clear'],['clear']
Usability,"Let me explain (but not excuse) what's happening here. We have some code to short circuit InChI to InChIKey conversion. Basically on reading an InChI (and only an InChI), the InChI is stored as an attribute of the molecule. Any subsequent requests for the InChI just use this stored value rather than recalculating it. Without this short circuit, the conversion would be done by reading an InChI into an OBMol, converting the OBMol into an InChI and then subsequently into an InChIKey. The problem is that this might give a different result (as reading an InChI doesn't always sufficiently preserve the original structure). Modifying the molecule in-between clearly invalidates the InChI, but we don't have a mechanism internally to intercept modifications, so this is left to the user. If you ""print(inchi.data)"" you will see the offending data item. Deleting this (""del inchi.data['inchi']"") removes the cached value. In general I don't like automagic stuff like this, as it breaks code in complicated and unexpected ways. We could give up on accurate InChI->InChIKey conversion, or only cache the value if the user specifies an option. On a separate note, can I ask why you are reading an InChI?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2288#issuecomment-710995403:658,clear,clearly,658,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2288#issuecomment-710995403,2,['clear'],['clearly']
Usability,"Logged In: NO . I experiment the problem of memory leak when I work with sdf; files of 400MB or files with thousands of smiles.; I don't know C++, but I think the problem is in the; OBConversion class. When I measure the memory used by a subprogram where I have; created an object of this class, the result is that it; leaves data in memory after closing the subprogram. And if I; don't use this class, the memory after calling the; subprogram is 0. I send you the tiny perl program used to take this; conclusions, each '#number' tell you the memory usage. Thanks for all. #!/usr/bin/perl -W. use Chemistry::OpenBabel;; use Memchmark qw(memchmark);;; use strict;. my $mem=memchmark {main_program()};; print ""\n\nMemoria usada: $mem\n\n"";. exit;. sub main_program {; 	my; $molec=""C(Nc1ccc([S]([N]2[CH](c3cnccc3)CCCC2)(=O)=O)cc1)(c1c(Br)cccc1)=O"";; 	my $smarts_pattern=""[S]"";. 	#0; 	my $obConversion=new Chemistry::OpenBabel::OBConversion;; 	#2727936; 	my $obSmartsPattern = new; Chemistry::OpenBabel::OBSmartsPattern;; 	#2727936; 	$obConversion->SetInFormat(""sdf"");; 	#2727936; 	my $obMol=new Chemistry::OpenBabel::OBMol;; 	#2727936; 	$obConversion->ReadString($obMol,$molec);; 	#2863104; 	$obMol->ConvertDativeBonds();; 	#2863104; 	$obSmartsPattern->Init(""$smarts_pattern"");; 	#2863104; 	if ($obSmartsPattern->Match($obMol)) {; 		print ""\nOK\t$molec\n"";	; 	}; 	#2863104; 	$obMol->Clear();; 	#2863104. }. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776406:1380,Clear,Clear,1380,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776406,1,['Clear'],['Clear']
Usability,"Logged In: NO . The resolution was simply ""nothing to fix"". At the time I felt strongly they should be identical to Daylight. Now I realise this isn't so important. - Noel. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779788:35,simpl,simply,35,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/695#issuecomment-281779788,2,['simpl'],['simply']
Usability,"Logged In: NO . There is no such thing as ""The unique IUPAC name"". The IUPAC; recommendations (of which the two listed references are only; a small part) are *designed* to provide multiple acceptable; names. . IUPAC has started some projects to produce guidelines that; *would* generate unique names, but those projects are years; from completion. Until they are completed, it is impossible; to resolve this request. Jonathan Brecher; CambridgeSoft Corporation; jsb@cambridgesoft.com. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809870:253,guid,guidelines,253,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1400#issuecomment-281809870,2,['guid'],['guidelines']
Usability,"Logged In: NO . diff -ur openbabel-2.2.0b4-mopout/src/formats/mopacformat.cpp openbabel-2.2.0b4/src/formats/mopacformat.cpp; --- openbabel-2.2.0b4-mopout/src/formats/mopacformat.cpp	2008-05-28 10:32:53.000000000 +0400; +++ openbabel-2.2.0b4/src/formats/mopacformat.cpp	2008-05-30 01:16:37.000000000 +0400; @@ -80,7 +80,7 @@; mol.BeginModify();; while	(ifs.getline(buffer,BUFF_SIZE)); {; - if(strstr(buffer,""CARTESIAN COORDINATES"") != NULL); + if(strstr(buffer,"" CARTESIAN COORDINATES"") != NULL); {; // mol.EndModify();; mol.Clear();. Original comment by: nobody",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/763#issuecomment-281781087:524,Clear,Clear,524,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/763#issuecomment-281781087,1,['Clear'],['Clear']
Usability,"Logged In: YES ; user_id=1102637; Originator: YES. The good news: You already have man-pages for obminimize, obenergy and obrotamer in your SVN. The bad news: You don't ship nor install them :) They are not part of man_MANS in doc/Makefile.am. The fix is pretty simple and I attach it. However, a man-page for rountrip is missing and it would be nice, if you could ship one.; File Added: 1900675_patch.diff. Original comment by: dleidert",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/729#issuecomment-281780444:262,simpl,simple,262,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/729#issuecomment-281780444,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=1189615. Although I haven't compiled it, I think your program is; stopping when it finds a molecule it can't convert. The; first one is; b1ccccc1; Depict ( http://www.daylight.com/daycgi/depict ) also fails; with this, so it may not be correct SMILES. However it seems; a reasonable extension and when I get time I'll add code so; that it will be accepted. The molecule (about 49th) starting ; c12c3c4c5c1c6c7c8c2c9c%10c3c%11c%12c4c%13c%14c5c%15c...; ( a fullerene?) is causing my OB version to hang. I'll add; this as a bug in its own right. The loop in your program could be like the following,; although I haven't tested it:. int count = 0;; while(ifs) // Read the whole file; {; if(conv.Read(&mol, &ifs)) //Process the molecules; successfully converted; if (mol.NumHvyAtoms() > 1) count++;; mol.Clear();; }. This should ignore molecules that can't be converted, but; sadly not those that cause an infinite loop. Chris. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777388:824,Clear,Clear,824,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/563#issuecomment-281777388,1,['Clear'],['Clear']
Usability,"Logged In: YES ; user_id=1189615; Originator: NO. Fixed in revision 2145 in trunk.; It needed another flag on OBAtom to require implicit Hs even if there are explicit H. It is set for simple, non-aromatic SMILES atoms. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/702#issuecomment-281779931:184,simpl,simple,184,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/702#issuecomment-281779931,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=1189615; Originator: NO. Sorry about the glitch which caused double posting. I have committed the changes for simplifying the reading of alias blocks to the trunk development code. At least the first 1498 molecules of AliasProblem.sdf are read without OB reporting errors, although quite a lot of them have uninterpreted aliases. I'll mark as Pending to close in 2 weeks. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779758:135,simpl,simplifying,135,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/693#issuecomment-281779758,2,['simpl'],['simplifying']
Usability,Logged In: YES ; user_id=1189615; Originator: NO. These seem to be Kekulize failures.; The first molecule is output correctly to CML when using aromatic bonds (not Kekule). A simplified molecule showing the same behaviour is Cn2ccc(nc2=O) .; The second molecule reports an error in start_kekulize and the bonds are not marked aromatic. Anybody fancy doing some Kekulization?. Chris . Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779285:175,simpl,simplified,175,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779285,2,['simpl'],['simplified']
Usability,"Logged In: YES ; user_id=1189615; Originator: NO. This is known bug #1720529 which will be fixed in v2.1.1 to be released soon. By the way, the stereo info in 2.0 had a number of bugs with molecules like this; 2.1.1 should be better. Thanks for the feedback, sorry for the inconvenience. . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779121:249,feedback,feedback,249,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/658#issuecomment-281779121,2,['feedback'],['feedback']
Usability,"Logged In: YES ; user_id=1189615; Originator: YES. Replaced newlinebuf by code in lineend.h This is a FilteringInputStreambuf based on an article by James Kanze. This allows the tellg and seekg requests to be passed on to the original rdbuf. Fastsearch now seems to work ok. The method would potentially allow a decompression readbuf to be inserted as well. I considered using Boost iostreams, but the seek requirement would mean that a new filter would have to be written. The Boost code is large and complex and I preferred the very much simpler self-written approach.; Marked pending in case any problems are found. Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777717:540,simpl,simpler,540,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/585#issuecomment-281777717,2,['simpl'],['simpler']
Usability,Logged In: YES ; user_id=125666. DATADIR is certainly one of the installation problems.; AFAICS babelconfig.h is generated by ./configure on Unix; systems. There is no equivalent on Windows systems. However; there may be a bableconfig.h already in the CVS. Therefore; compiling with this will give compilation values based on; (some) arbitrary UNIX values for the environment. Is there is a need for a non-autoconfigured babelconfig.h?; Perhaps editable according to compiler?. It's also not very clear to newcomers what DATADIR should; point to. I assume it is actually normally the source directory. P. Original comment by: @petermr,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927:497,clear,clear,497,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774927,2,['clear'],['clear']
Usability,"Logged In: YES ; user_id=1444119. Here is another case that is probably the same bug. This is; particularly bad because it loses aromaticity on a simple; benzene ring. The SD File is parsed correctly can converted; to a SMILES, but when you re-parse the SMILES that OpenBabel; already produced, you get garbage. See the SD file below; (call it ""foo.sdf""), and use it for this test:. $ babel /tmp/foo.sdf -o smi ; c1(n(c2c(c(o1)=O)cccc2)CC(=O)OCC)=O; 1 molecule converted; [M6:cj] /emi/src/docs/patents $ babel /tmp/foo.sdf -o smi |; babel -i smi -o smi; 1 molecule converted; C1(OC(C2C(N1CC(=O)OCC)CCCC2)=O)=O; 1 molecule converted. ----------------------. OpenBabel05020621282D. 18 19 0 0 0 0 0 0 0 0999 V2000; 1.3509 0.4120 0.0000 C 0 0 0 0 0; 0.6384 -0.0005 0.0000 N 0 0 0 0 0; 1.3509 1.2370 0.0000 O 0 0 0 0 0; 0.6384 1.6537 0.0000 C 0 0 0 0 0; -0.0741 1.2370 0.0000 C 0 0 0 0 0; -0.0783 0.4120 0.0000 C 0 0 0 0 0; 0.6342 -0.8255 0.0000 C 0 0 0 0 0; 2.0634 -0.0005 0.0000 O 0 0 0 0 0; -0.0866 -1.2380 0.0000 C 0 0 0 0 0; 0.6384 2.4787 0.0000 O 0 0 0 0 0; -0.7991 -0.8255 0.0000 O 0 0 0 0 0; -0.7908 1.6495 0.0000 C 0 0 0 0 0; -0.0866 -2.0630 0.0000 O 0 0 0 0 0; -0.7908 -0.0005 0.0000 C 0 0 0 0 0; -0.7991 -2.4755 0.0000 C 0 0 0 0 0; -1.5033 1.2370 0.0000 C 0 0 0 0 0; -1.5033 0.4120 0.0000 C 0 0 0 0 0; -0.8033 -3.3005 0.0000 C 0 0 0 0 0; 2 1 1 0 0 0; 3 1 1 0 0 0; 8 1 2 0 0 0; 6 2 1 0 0 0; 7 2 1 0 0 0; 4 3 1 0 0 0; 5 4 1 0 0 0; 10 4 2 0 0 0; 12 5 2 0 0 0; 6 5 1 0 0 0; 14 6 2 0 0 0; 9 7 1 0 0 0; 11 9 2 0 0 0; 13 9 1 0 0 0; 16 12 1 0 0 0; 15 13 1 0 0 0; 17 14 1 0 0 0; 18 15 1 0 0 0; 17 16 2 0 0 0; M END; $$$$; -------------------. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776442:146,simpl,simple,146,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/516#issuecomment-281776442,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=1444119. Perl uses ""lazy"" garbage collection. Very lazy -- normally; objects are left alone unless the pointer (object) is about; to be reused. The example you give won't detect leaks,; because the $obMol object is never deallocated. And; furthermore, $obMol->Clear()) erases atoms and bonds, but; does not deallocate or resize the atom/bond arrays that held; them, so you would *not* expect memory usage to shrink when; you call $obMol->Clear(). The $obMol object and all of its; internal structures, still exist, waiting for the next time; you call $obMol->ReadString(). Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439:285,Clear,Clear,285,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/565#issuecomment-281777439,2,['Clear'],['Clear']
Usability,"Logged In: YES ; user_id=1444119; Originator: NO. This SD File from DrugBank is not valid. It's not a problem with OpenBabel. Last time I downloaded data from DrugBank, I had the same problem: The first line of many of the MOL records is simply missing. In this instance, look at each $$$$ line. Immediately following it, there are only two header lines, followed by the COUNTS line. A proper SD File has three lines. Two lines are illegal, and OpenBabel is correct to reject it. Original comment by: @cjames53",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/760#issuecomment-281781039:238,simpl,simply,238,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/760#issuecomment-281781039,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=1557018; Originator: NO. This is for 3x3 fixed-size matrices. So there's nothing to gain from multithreading (the size is too small). It is very important to use fixed-size matrices in order to avoid dynamic memory allocations and unroll loops; most scientific libraries focus on dynamic-size matrices instead. Using dynamic-size matrices would divide the speed by a factor of 10 at least. OpenBabel's matrix code now has pretty extensive unit-tests so I don't think there's much to improve in the area of reliability. As to vectorization, it might indeed improve speed, I don't know (3x3 might be a too small size, and isn't a power of two, so it isn't clear to me that vectorization will help). Just FYI, someone offered to add vectorized codepaths to Eigen. Also keep in mind that currently OpenBabel gains much from the inlining of small math functions. This is only possible with either a builtin math lib (like OpenBabel currently has) or a template lib. I don't think that a binary lib could compete with that, for the kind of small fixed-size matrices that OB is using. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737:679,clear,clear,679,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1485#issuecomment-281810737,2,['clear'],['clear']
Usability,"Logged In: YES ; user_id=1557018; Originator: YES. Yes, this is definitely a workaround. In fact we do completely agree :). That OpenBabel parses files in a locale-dependent way, is clearly an OpenBabel bug, which needs to be fixed there. The C library (sscanf) apparently always honor the locale. So any code using it must be changed to use the C++ library (ifstream...) and call .imbue() on the stream to tell it to assume LC_NUMERIC=C. A while ago part of this was fixed in OpenBabel but last time I checked many places (probably in file format plugins...) still had to be ported. Original comment by: benoitjacob",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356:182,clear,clearly,182,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/672#issuecomment-281779356,2,['clear'],['clearly']
Usability,"Logged In: YES ; user_id=164544. I can reproduce the component-level grouping problem. Below; are some interesting cases and a stack trace. This problem; seems pretty serious (assuming it's not simply missing; functionality). If it hasn't been implemented yet then it; should be mentioned in the documentation. [philip@darwin]$ obgrep '([#6]).([#6])' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(c)' methane.smi; C; [philip@darwin]$ obgrep '([#6]).(cc)' methane.smi; 0 1; Assert at File mol.cpp Line 689; Segmentation fault. (gdb) set args '([#6]).([#8]c)' methane.smi; (gdb) run; Starting program: /usr/local/bin/obgrep '([#6]).([#8]c)'; methane.smi; 0 1; Assert at File mol.cpp Line 689. Program received signal SIGSEGV, Segmentation fault.; OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220) at; mol.cpp:689; 689 obAssert(false);; (gdb) bt; #0 OpenBabel::OBMol::GetAtom (this=0x2b1, idx=1091774220); at mol.cpp:689; #1 0xb7f7c058 in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=0) at stl_vector.h:501; #2 0xb7f7c2dc in OpenBabel::OBSSMatch::Match; (this=0xbffff3b0, mlist=@0xbffff628, bidx=-1) at; parsmart.cpp:2768; #3 0xb7f7a403 in match (mol=@0xbffff450, pat=0x805da88,; mlist=@0xbffff628, single=false) at parsmart.cpp:2262; #4 0xb7f788dd in OpenBabel::OBSmartsPattern::Match; (this=0xbffff610, mol=@0xbffff450, single=false) at; parsmart.cpp:2087; #5 0x08049a7a in main (argc=-1073744816, argv=0xbffff4d8); at obgrep.cpp:137; (gdb) The program is running. Exit anyway? (y or n) y. Original comment by: pgr94",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152:194,simpl,simply,194,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775152,2,['simpl'],['simply']
Usability,Logged In: YES ; user_id=169818. ftp://dimacs.rutgers.edu/pub/challenge/graph/solvers/; http://portal.acm.org/citation.cfm?id=362367&coll=Portal&dl=GUIDE&CFID=69760523&CFTOKEN=72640023. Original comment by: wegner,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810028:148,GUID,GUIDE,148,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1404#issuecomment-281810028,1,['GUID'],['GUIDE']
Usability,"Logged In: YES ; user_id=196016; Originator: NO. Writing out the audit log messages, there is maybe a spurious second OpenBabel::Read molecule Gaussian Z-Matrix Input call. It might be trying to read in a second structure, and falss over; I don't have the source tree around currently to debug this. crease~$ babel ---errorlevel 20 -igzmat water.gzmat -oxyz water.xyz; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule Gaussian Z-Matrix Input; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in InternalToCartesian; Ran OpenBabel::InternalToCartesian; ==============================; *** Open Babel Audit Log in ConnectTheDots; Ran OpenBabel::ConnectTheDots; ==============================; *** Open Babel Audit Log in PerceiveBondOrders; Ran OpenBabel::PerceiveBondOrders; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in Kekulize; Ran OpenBabel::Kekulize; ==============================; *** Open Babel Audit Log in ReadChemObjectImpl; OpenBabel::Read molecule Gaussian Z-Matrix Input; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in WriteChemObjectImpl; OpenBabel::Write molecule XYZ cartesian coordinates format; 1 molecule converted; 11 audit log messages. Original comment by: @mbanck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793680:559,Clear,Clear,559,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/808#issuecomment-281793680,4,['Clear'],['Clear']
Usability,"Logged In: YES ; user_id=21420. Actually, the simplified case, shows how the bug occurs:. [C@@]1(F)(C)C(=O)O.Br1; Br1.[C@@]1(F)(C)C(=O)O. These are identical SMILES (e.g., check at http://www.daylight.com/daycgi/; depict). But these end up as very different SMILES because the atom ordering isn't ; handled by Open Babel:. F[C@@](Br)(C)C(=O)O test.smi; Br[C@@](F)(C)C(=O)O test.smi. Personally, I don't like this use of ring closure bonds, but you're correct that ; this is a bug. (The other bug report is essentially a duplicate -- the problem ; is that the ring closure isn't being performed correctly.). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258:46,simpl,simplified,46,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777258,2,['simpl'],['simplified']
Usability,"Logged In: YES ; user_id=21420. Hi Alexander,. Thanks for the bug report, I just fixed it for the 2.0.x and development (2.1) ; trees. This will go into the upcoming 2.0.2 release. If you'd like me to send ; you an updated snapshot, please let me know. If you have some hin files that you can contribute for testing, it would be ; greatly appreciated. As far as I can tell, HIN is undocumented, so any ; examples from HyperChem (particularly multi-molecule files) would be very ; helpful. Thanks!; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/543#issuecomment-281776925:381,undo,undocumented,381,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/543#issuecomment-281776925,2,['undo'],['undocumented']
Usability,"Logged In: YES ; user_id=21420. I'm closing this feature request. The Gasteiger model has clearly ; advanced, and new code is needed. (Adding other charge models would be ; helpful too.). I'll open a new feature request for updating the Gasteiger model.; -Geogg. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1371#issuecomment-281808308:90,clear,clearly,90,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1371#issuecomment-281808308,2,['clear'],['clearly']
Usability,"Logged In: YES ; user_id=21420. I'm marking this closed pending further comment. I have seen no concrete ; evidence of significant memory leaks in 2.0.x and I've been looking. Clearly we can do much to improve memory use, which is underway in the 2.1 ; development. But this goes more as a ""feature request"" than a bug report -- ; there isn't a bug to fix, but rather a variety of things we need to do to ; improve memory usage. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776397:176,Clear,Clearly,176,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776397,1,['Clear'],['Clearly']
Usability,"Logged In: YES ; user_id=21420. Ian,. Thanks for all the feedback. I was able to track down the largest source of ; memory use in multi-molecule files. The developer CVS is down at the ; moment, but I'll make sure the fix is in 2.0.1. I'm not sure this will solve all ; memory issues, but it certainly should solve the ""slope"" you found. Many thanks for the persistent feedback -- it wasn't a ""leak"" but more a ; ""stupid memory use"" issue that I eventually was able to find with your ; example file. Best,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776403:57,feedback,feedback,57,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/514#issuecomment-281776403,4,['feedback'],['feedback']
Usability,"Logged In: YES ; user_id=21420. In the CVS development branch openbabel-new-framework I have ; changed babelconfig.h to config.h and config.h is *NOT* installed. #if HAVE_CONFIG_H; #include config.h; #endif. This means that some #defines are needed by headers (e.g., ; HAVE_SSTREAM for the stringstream vs. strstream bits) and must be ; caught by user code. I think this seems to be the consensus solution on the automake/; autoconf mailing lists and with other library installations. I'm marking this bug report closed pending further comment. Ideally new ; comments should go in a new report to simplify bug tracking.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932:597,simpl,simplify,597,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774932,2,['simpl'],['simplify']
Usability,"Logged In: YES ; user_id=21420. Quoting from the Daylight SMARTS webpages:. All atomic expressions which are not simple primitives must be enclosed ; in brackets. The default operation is `&' (high precedence ""and""), i.e., ; two adjacent primitives without an intervening logical operator must both ; be true for the expression (or subexpression) to be true. Yes, '!C' is an invalid SMARTS expression. Marking this bug closed, though if you can get a gdb backtrace of the ; crash, I'd appreciate it. Even on invalid SMARTS strings, obgrep shouldn't ; crash. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775112:113,simpl,simple,113,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/441#issuecomment-281775112,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=21420. The ""Requested Atom Out of Range"" message will never appear in the ; current code since there's an assert right before it -- the code is set to ; kill itself before issuing that message. Interestingly on another test SMI file, if I switch the order of ; components to '([O&X1&-][O&X2]).([#6])' it doesn't crash. I'm still tracing the problem, but thanks for the report -- it's clear there ; are some bugs in the SMARTS code. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149:409,clear,clear,409,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/443#issuecomment-281775149,2,['clear'],['clear']
Usability,Logged In: YES ; user_id=21420. The CVS code should be a start on this. I'm marking the; feature request &quot;pending&quot; until I can get a bit more; feedback on whether this works. -Geoff. Original comment by: @ghutchis,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809806:153,feedback,feedback,153,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1395#issuecomment-281809806,2,['feedback'],['feedback']
Usability,"Logged In: YES ; user_id=21420. The Transformation code is used by the command-line babel program and ; isn't particularly intended for user code. (You can, but it's redundant, since ; every function in Transformation is available directly by other means.). As I e-mailed directly, OBMol::Center() certainly works for me in the 2.1 SVN ; trunk. For proof, I took a molecule, called:. m_molecule->Translate(vector3(-1.0f, 0.5f, 0.8f)); // or whatever vector you ; want; // Now I output the molecule, which shows a clear translation. Then:; obConversion.Write(&m_molecule, &cout);; m_molecule->Center();; obConversion.Write(&m_molecule, &cout);. After the call to OBMol::Center() the coordinates are indeed centered ; compared to the coords from the Translate() call. I'm marking this ""Works for Me."" What revision of the SVN code are you using?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311:513,clear,clear,513,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777311,2,['clear'],['clear']
Usability,"Logged In: YES ; user_id=21420. The first part of this ""@"" vs. ""@@"" specification in SMARTS was simply ; something that was apparently left unimplemented. It now works. As for cis/trans, I don't know what the problem is -- certainly the test for ; bond->IsUp and bond->IsDown are being run correctly. I'll debug that ; tomorrow. I suspect that it's trying to match in one direction and finding problems, ; since:; $ echo ""Cl/C=C/Cl"" | tools/obgrep ""Cl\C=C\Cl""; Cl/C=C/Cl. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777242:96,simpl,simply,96,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/553#issuecomment-281777242,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=21420. This is now fixed in CVS. To fix in your version, it's a simple edit ; of the atomtyp.txt file. (If this is under UNIX, make sure it's the ; *installed* atomtyp.txt file, as this is the one that's read on ; runtime.). Remove the &quot;#&quot; comment markers where it says &quot;Uncomment&quot; for ; Sybyl typing. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/428#issuecomment-281774845:89,simpl,simple,89,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/428#issuecomment-281774845,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=21420. This is now fixed in the CVS code. If you'd like, I can send you a copy of a snapshot for further testing?. Sorry for taking so long to fix this--pretty simple in the end. Cheers,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/411#issuecomment-281774550:185,simpl,simple,185,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/411#issuecomment-281774550,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=21420. Unfortunately, I can't reproduce this and am not allowed to see the original ; data file. The original bug reporter has not been able to give me debugging ; information, making this impossible to solve. For now, I'm marking this as ""Won't Fix"" and closing pending further ; comment. What would be really helpful is the result of:. gdb /usr/local/bin/babel; run /Users/user/Desktop/outputfile.fs -osmi /Users/user/Desktop/; outputfile.smi -s'C[NH2]'; bt. The ""gdb"" program is a debugging tool, the ""run"" command simply runs babel ; with the options listed (as if calling babel on the command-line) and the ""bt"" ; command will give a ""backtrace"" when the bus error occurs. The last bit is a ; sequence of function calls and sometimes line numbers in the code and is ; critical to debugging a problem like this. No confidential information should be passed. But unless we can get some sort of debugging information, I can't solve this ; bug. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018:543,simpl,simply,543,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/492#issuecomment-281776018,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=21420. Well, there's clearly a bug with www.chemistry-development-kit.org. The formulas are correct (although example 2 isn't in Hill Order, since F is ; last).; But I can pick any of several molecular weight calculators and show that those ; formulas do not give the masses calculated by c-d-k.org. I *can* confirm that before OBMol::AddHydrogens() the masses for the SMILES ; are correct from Open Babel. As of right now, I can't find the bug. But I'm attaching a PNG file with the ; three examples I gave, as well as the first four lines from attype.00.smi:; Oc1ccccc1c2nnco2 BIONET_10A-002 aryl; CC(=O)c1ccc(cc1)n2ccnc2 BIONET_10A-004 aryl; CN(C)/C=C/1\CCNC1=O BIONET_10A-007 hetatm; Cc1ccc(cc1)S(=O)(=O)Oc2ccccc2c3nnco3 BIONET_10A-008 aryl. As I said, OB calculates the formulas correctly (before and after ; AddHydrogens). But for whatever reason, the OBMol::GetMolWt() and OBMol::GetExactMass() ; do not return the correct values after AddHydrogens(). -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776754:46,clear,clearly,46,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/534#issuecomment-281776754,2,['clear'],['clearly']
Usability,"Logged In: YES ; user_id=21420. Works for me. I don't know when you checked out the CVS. The ; OBAtom::ClearBond() code is in mol.h and it's definitely compiling cleanly ; for me. Maybe try a ""make clean; make"" after running a ""cvs update"" now?. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/450#issuecomment-281775290:103,Clear,ClearBond,103,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/450#issuecomment-281775290,1,['Clear'],['ClearBond']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. Hmm. I wonder if this is just limited to PDB format... But this is relatively easy to fix (it's now in SVN trunk, revision 2613 or later). // Clear all virtual bond data; vector<OBGenericData*> vbonds = mol.GetAllData(OBGenericDataType::VirtualBondData);; mol.DeleteData(vbonds);. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/768#issuecomment-281781207:190,Clear,Clear,190,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/768#issuecomment-281781207,1,['Clear'],['Clear']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. I can confirm this bug, although it's clearly a very recent regression in the 2.1 trunk -- I do roundtrip tests every 1-2 months on the development snapshots and before every full release. If no one else gets to this, I'll fix it tomorrow.; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/582#issuecomment-281777667:86,clear,clearly,86,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/582#issuecomment-281777667,2,['clear'],['clearly']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. I'm closing this bug report. Let's try to keep each report to one and only one issue. Since this is a public bug database, others do take a look at what's been fixed -- so it's important to keep things separate. We clearly fixed the first report, which will be in 2.1.1. The second report works for me with the 2.1.1 code. If you have another GAMESS issue, please submit a new bug report and we'll fix it ASAP. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779046:263,clear,clearly,263,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/652#issuecomment-281779046,2,['clear'],['clearly']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. No, SMARTS queries do not support the disconnected '.' operator:; http://openbabel.sourceforge.net/wiki/SMARTS. However, ""went strange and hang Babel"" is clearly a problem. What exactly do you mean by that? Are you using the Windows interface? Can you be a bit more descriptive in terms of what you did (i.e., how big was the file you were using, etc.) and what happened?. Thanks,; -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778253:202,clear,clearly,202,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/615#issuecomment-281778253,2,['clear'],['clearly']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. That's strange. I'm attaching the file (since it's easier than copy/paste from this window). The bug also occurs through babel -h. In other words, it's not simply an obmm program problem (nor should it be). It's the call to OBMol::AddHydrogens that seems at fault. It's also not caused by the GPR format or missed atom typing: import from XYZ format and adding hydrogens also fails. File Added: test.gpr. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778185:204,simpl,simply,204,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/610#issuecomment-281778185,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. The simple cases are fixed in SVN trunk, but the full case is harder. The smallest fragment from above which seems to trigger the bug:; O=c1n(CCCC)c(nc(c21)nn3c2[nH]cc3)=O. Yields; CCCC[N]1=C(=O)C2=C(N=[N]3C=CNC23)N=C1=O. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779286:52,simpl,simple,52,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/667#issuecomment-281779286,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. This should now be fixed in the 2.1 SVN branch, as of revision 1981 or later. The problem is that AtomIsChiral assumed that all atoms (including 3D) should have wedge/hash bond flags. This is not true for 3D files, of course. The revised code simply adds a test if the atom is part of a 3D molecule -- in which case it does not need to check bonds to the atom for wedge/hash flags. The code should be correct, but I'm marking this pending any further comment from Craig. If no comment is made within 14 days, this bug will close as being fixed. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708:291,simpl,simply,291,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/635#issuecomment-281778708,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. This won't be fixed. These methods simply create pointers -- they're convenience functions. If you want more bookkeeping done, use NewAtom() or NewBond() or NewResidue() instead. I'm updating the documentation accordingly and perhaps we should deprecated these methods. But they should not perform anything additional. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778223:83,simpl,simply,83,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/613#issuecomment-281778223,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. While I agree that consistency is a good aim, I'm going to move this to ""Feature Requests"" rather than an explicit bug. I believe the difference is simply that the two files came from different sources and Chris attempted to retain the formatting for merging in future revisions. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1500#issuecomment-281810941:196,simpl,simply,196,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1500#issuecomment-281810941,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=21420; Originator: NO. Yes, you're correct -- the default should be ""at least one,"" according to the Daylight guide. This is now fixed in the SVN, revision 1881 or later. I'd be glad to send you a patch if you like. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/626#issuecomment-281778495:135,guid,guide,135,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/626#issuecomment-281778495,2,['guid'],['guide']
Usability,"Logged In: YES ; user_id=21420; Originator: YES. This is more of a feature request. Since the obgen tool won't be integrated into 2.1 (it's not ready yet), it's silly to complain about ""bugs"" that are simply unimplemented. -Geoff. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/572#issuecomment-281777511:201,simpl,simply,201,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/572#issuecomment-281777511,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=282988; Originator: NO. Using babel 2.1.1 (self compiled on Mac), a simple PDB with a Mn atom gets converted to a Xx atom in an XYZ file. Also, if a Fe atom is used, it gets converted to a F atom in translation. I can send a test file if needed. Original comment by: @atenderholt",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777487:93,simpl,simple,93,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/570#issuecomment-281777487,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=54358. Yes, the algorithm is simple indeed. ; Note, however, that the CDK fingerprinter implementation is; not complete (in the sense of not fully complying with the; daylight description) and has a few bugs. On the other hand,; we use it for substructure search prefiltering in our free; NMR database (http://www.nmrshiftdb.org) and it works nicely. ; If someone is going to implement the fingerprint based on; the CDK code, please get in touch with me, so that we can; plan a better, improved, debugged version for both OpenBabel; and CDK. Cheers, . Christoph Steinbeck (who implemented the fingerprinter in CDK). Original comment by: steinbeck",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809846:54,simpl,simple,54,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1398#issuecomment-281809846,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=677371; Originator: YES. Cygwin; gcc-3.4.4 with libtool-2.2; no error, just an immediate segfault. Could you give me some guidance into how to diagnose the problem?. Original comment by: yselkowitz",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/786#issuecomment-281793349:147,guid,guidance,147,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/786#issuecomment-281793349,2,['guid'],['guidance']
Usability,"Logged In: YES ; user_id=684210. Not sure why integration would be easier because OpenBabel ; will just but a couple of object-files and header for any ; other app, including KDE.; CMake is a Makefile-generator (or project-file-generator ; for example for KDevelop or MS-Visual (or however the ; MS-IDE is called)). But it is much *easier* to write CMake ; files compared to autotools. For example, you only need ; one language to learn (cmake) and not four. Everything is ; in one central file. Even if you have no clue about cmake ; the syntax is very easy to understand (unlike the cryptic ; m4/.in.in/Makefile.am-stuff which I never understood). And ; CMake is much faster. Not sure if that is important for ; OpenBabel, but the equivalent of ""make -f Makefile.am ; && ./configure"" takes like 10 seconds for kdelibs while ; the autotool-command took minutes!. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562:431,learn,learn,431,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1469#issuecomment-281810562,2,['learn'],['learn']
Usability,"Logged In: YES ; user_id=684210. Would you be so nice and post a code-snipped of yours? We ; don't get what to put in the std::map<> to be honest. ; In OB2.0.1 we simply called OBMol::Center() and were done, ; I wonder why this is no longer working. Original comment by: @cniehaus",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777305:163,simpl,simply,163,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/558#issuecomment-281777305,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=787122. There are sstill problems with the following variables; generated by AM_INIT_AUTOMAKE:; #define PACKAGE ""openbabel""; #define PACKAGE_BUGREPORT; ""openbabel-discuss@lists.sourceforge.net""; #define PACKAGE_NAME ""openbabel""; #define PACKAGE_STRING ""openbabel 1.100.2""; #define PACKAGE_TARNAME ""openbabel""; #define PACKAGE_VERSION ""1.100.2""; #define VERSION ""1.100.2"". Given the contents of the header files including; babelconfig.h, it is almost impossible to remove it from; each. It might be possible for mol.h (which is the most; important) replacing inclusion of some headers by forward; class declarations, but this is not so simple and might; introduce lots of instabilities. I also found an inconsistency in mol.h: fstream and iostream; are always included. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774929:660,simpl,simple,660,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/432#issuecomment-281774929,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=787122; Originator: NO. Hmm, I'm not guilty in the end:. r1754 | chrismorl | 2007-02-13 20:51:47 +0100 (mar, 13 fév 2007) | 1 line. Clear OBMol objects by default at start of ReadMolecule. The issue is that WriteMolecule was modified, not ReadMolecule, so the molecule was cleared before writing... Fixed in svn (both 2.1 and trunk).; Please mark as fixed. I'm not allowed to change the status. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778962:157,Clear,Clear,157,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/646#issuecomment-281778962,3,"['Clear', 'clear']","['Clear', 'cleared']"
Usability,"Logged In: YES ; user_id=787122; Originator: NO. I have that too. This comes from the cifformat plugin. Apparently the cifformat mixes all the data blocks with a logic I don't understand, and calls SpaceGroup::Find with a group which has no name, no id, and no transform, clearly an invalid group. I'll try to investigate when time permits. Original comment by: jbrefort",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780166:272,clear,clearly,272,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/715#issuecomment-281780166,2,['clear'],['clearly']
Usability,Logged In: YES ; user_id=840863. Another (simplier) example:. [C@@]%10(F)(C)C(=O)O.Br%10 is converted to; F[C@@](Br)(C)C(=O)O which is wrong. Correct would be e.g.; Br[C@@](F)(C)C(=O)O. --Andreas. Original comment by: archvile18,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777254:42,simpl,simplier,42,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/555#issuecomment-281777254,2,['simpl'],['simplier']
Usability,"Logged In: YES ; user_id=850620; Originator: NO. I cannot reproduce the bug either on Windows or on Linux with the current snapshot (b7). I think that this issue is resolved since r1958 (soon after the initial bug report). Previously I created a new instance of OBConversion for each readfile; after this, I used the same global instance. Note that I have not looked at the gz stuff, I am simply talking about regular files, for which Ahmet said he had the same problem. I am making this bug as Closed, but I should probably stress test the Pybel I/O code at some point in the future. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778876:389,simpl,simply,389,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/636#issuecomment-281778876,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=850620; Originator: NO. Still a bug. The problem is simply reading from the CML. Verified on Linux (using the SVN trunk r2217) with the following test file:; ===================; import pybel; mol = pybel.readfile(""cml"", ""3-methylbutanal.cml"").next(); ===================. Core dumped. ""gdb python core"", followed by ""bt"" gives:. Core was generated by `python test1815533.py'.; Program terminated with signal 11, Segmentation fault.; #0 0x00000169 in ?? (); (gdb) bt; #0 0x00000169 in ?? (); #1 0xb773eecf in ~OBConversion (this=0x81e1b70) at obconversion.cpp:253; #2 0xb78f7bd3 in _wrap_delete_OBConversion (args=0xb7b1efac); at openbabel_python.cpp:42252; #3 0x0805a84e in PyObject_CallFunctionObjArgs (); #4 0xb78ab5c5 in PySwigObject_dealloc (v=0xb7d90920); at openbabel_python.cpp:1434; #5 0x0807b88f in PyDict_GetItem (); #6 0x0808ba4e in PyType_GenericAlloc (); #7 0x080ff8c8 in PyFrame_Fini (); #8 0x080feea0 in PyDescr_NewMember (); #9 0x080fd57e in PyDictProxy_New (); #10 0x080b6918 in PyEval_EvalFrame (); #11 0x080ba735 in PyEval_EvalCodeEx (); #12 0x080ba799 in PyEval_EvalCode (); #13 0x080dd147 in PyRun_FileExFlags (); #14 0x080dd344 in PyRun_SimpleFileExFlags (); #15 0x08055ba8 in Py_Main (); #16 0x08055032 in main (). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779656:77,simpl,simply,77,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/688#issuecomment-281779656,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=850620; Originator: NO. Unfortunately (ahem, Chris :-) ), the 2.1.0 stable release does not exactly correspond to the code used for OpenBabelGUI 2.1.0c. You will need to get that code from the SVN HEAD of tags-2-1-0. (If this doesn't mean anything to you, let me know and I will explain more clearly.). However, the general problem is more worrying - thanks for bringing it to our attention. Someone more qualified than me will look into it. Please leave your name and/or email address so that we can keep in touch with you regarding this issue. Noel. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778914:317,clear,clearly,317,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/643#issuecomment-281778914,2,['clear'],['clearly']
Usability,"Logged In: YES ; user_id=850620; Originator: NO. Using the latest OBWinInstaller, I still get the same error. Here's a simple test case. D:\Tools\OpenBabel\OBBug>babel -ismi -osdf --gen3D; N#CSSC#N; ^Z. OpenBabel08190809343D. 6 5 0 0 0 0 0 0 0 0999 V2000; 1.0000 0.0000 0.0000 N 0 0 0 0 0; 2.5000 0.0000 0.0000 C 0 0 0 0 0; 4.0000 0.0000 0.0000 S 0 0 0 0 0; -1.#IND -1.#IND -1.#IND S 0 0 0 0 0; 1.#QNB 1.#QNB 1.#QNB C 0 0 0 0 0; 1.#QNB 1.#QNB 1.#QNB N 0 0 0 0 0; 1 2 3 0 0 0; 2 3 1 0 0 0; 3 4 1 0 0 0; 4 5 1 0 0 0; 5 6 3 0 0 0; M END; $$$$; 1 molecule converted; 47 audit log messages 1 debugging messages. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793436:119,simpl,simple,119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/793#issuecomment-281793436,2,['simpl'],['simple']
Usability,"Logged In: YES ; user_id=850620; Originator: YES. Great. That looks really nice. I knew that you had done some work on it, but I didn't see it in the help on 'babel'. Regarding regular expressions, I just mean an asterisk. Often all the actives (e.g. in drug docking) would come from a different database (e.g. drawn by hand) than the inactives, and can be simply identified by common elements in their title. Would it be possible to use an expression like ""MY_FIRST_DATAFIELD>1.4 && MY_SECOND_DATAFIELD='NOT_IN_STOCK'"". I note that a possible problem is data fields that contain spaces in the names. I think that you will have to enforce some rules such as, if there's a space in the name, use an underscore in the query. It would be good also if babel warned if no field matched one of the terms in the query (and perhaps printed out some possibilities), as I imagine that this will be a common error. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810760:357,simpl,simply,357,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1486#issuecomment-281810760,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=850620; Originator: YES. I'm a bit worried now about that patch...say if it wasn't necessary, or it's some horrible mistake? I'm not very confident with the whole C++ thing... The original problem remained, but has been resolved simply by defining a vector of OBAtom* in the interface file. Sorry about the big song and dance. In addition, I should have been using OBResidueAtomIter in any case (which works), rather than accessing GetAtoms() directly. So...were these two unrelated problems, or was openbabel genuinely unable to read these files...? I should try to convert 1ABE.pdb with babel.exe prior to the patch and see what happens... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898:254,simpl,simply,254,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778898,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=850620; Originator: YES. I've looked at a couple of solutions; the best one is simply to add the following to the Python scripting interface... %rename(__getitem__) *::operator[]; // Allows access to vector3 values by index. Then, v[0], v[1], v[2] can all be accessed. It would be great if vector3::Get() just returned a std::vector though. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196:104,simpl,simply,104,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/661#issuecomment-281779196,2,['simpl'],['simply']
Usability,"Logged In: YES ; user_id=850620; Originator: YES. This is my first time debugging in C++, but I think I've found the immediate problem. I'm working off the 2-1-x branch on WinXP. The PDB file was download from the PDB and is attached to the original bug report. If I just read in the PDB file with the following code, I get an error:; int main(int argc,char *argv[]); {; OBConversion conv;; 	OBMol mol;; 	conv.SetInFormat(""pdb"");; 	conv.ReadFile(&mol, ""1ABE.pdb"");; 	; 	cout << ""hey:"" << mol.NumAtoms() << endl;; 	system(""pause"");; }. The line of the file that causes the problem is:; HETATM 2338 O HOH 309 9.470 57.177 56.123 0.98 12.11 1ABE2423. Line 266 of pdbformat.cpp has a subscript out of range debug error:; ""if (atmid[2] == '\0' || atmid[2] == ' ') type = atmid.substr(0,2);"". At this point, atmid is simply ""O"" whereas the code (according to the comment on line 272) expects it to be "" O"" for a single character element. I hope this helps. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896:522,pause,pause,522,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/639#issuecomment-281778896,4,"['pause', 'simpl']","['pause', 'simply']"
Usability,Logged In: YES ; user_id=851435; Originator: YES. It was quite a simple fix after all - hopefully this change hasn't broken anything. All tests should be protected in this way. I have also patched Gentoo's openbabel ebuild for beta5. Original comment by: @cryos,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/764#issuecomment-281781113:65,simpl,simple,65,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/764#issuecomment-281781113,2,['simpl'],['simple']
Usability,"Look at ```ob.obErrorLog.GetMessagesOfLevel(0)``` in combination with the information at http://openbabel.org/api/3.0/classOpenBabel_1_1OBMessageHandler.shtml. You should check this log, and then perhaps clear it each time.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2728#issuecomment-2407106536:204,clear,clear,204,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2728#issuecomment-2407106536,2,['clear'],['clear']
Usability,"Maybe some awesome docs on the topic would be useful? Still up for the; sprint?. On 18 May 2017 at 16:40, Geoff Hutchison <notifications@github.com> wrote:. > To do this, we'd have to implement the AM1 semiempirical quantum method,; > which seems impractical.; >; > At the moment, there are several charge models implemented:; >; > - eem Assign Electronegativity Equilization Method (EEM) atomic; > partial charges. Bultinck B3LYP/6-31G*/MPA; > - eem2015ba Assign Electronegativity Equilization Method (EEM) atomic; > partial charges. Cheminf B3LYP/6-311G/AIM; > - eem2015bm Assign Electronegativity Equilization Method (EEM) atomic; > partial charges. Cheminf B3LYP/6-311G/MPA; > - eem2015bn Assign Electronegativity Equilization Method (EEM) atomic; > partial charges. Cheminf B3LYP/6-311G/NPA; > - eqeq Assign EQEq (charge equilibration) partial charges.; > - fromfile Assign charges from file containing {'atom-name', charge}; > pairs; > - gasteiger Assign Gasteiger-Marsili sigma partial charges; > - mmff94 Assign MMFF94 partial charges; > - none Clear all partial charges; > - qeq Assign QEq (charge equilibration) partial charges (Rappe and; > Goddard, 1991); > - qtpie Assign QTPIE (charge transfer, polarization and equilibration); > partial charges (Chen and Martinez, 2007); >; > There are actually quite a few EEM methods implemented.; >; > I'd be willing to implement the BCC part of AM1-BCC - as in, you can parse; > an AM1 calculation from MOPAC and generate AM1-BCC charges.; >; > But I think there are better models out there. (eem2015* are very good; > IMHO); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1571#issuecomment-302443905>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGUCrxqRO6-l8sYPAG4V4C5NGAuCKks5r7GZjgaJpZM4NeuYI>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1571#issuecomment-302472555:1053,Clear,Clear,1053,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1571#issuecomment-302472555,1,['Clear'],['Clear']
Usability,"Might be better to await PR #2152 to simplify merge handling, or include this change there.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2159#issuecomment-610272736:37,simpl,simplify,37,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2159#issuecomment-610272736,2,['simpl'],['simplify']
Usability,"Nice ;). ---. Pozdrawiam, | Best regards,; Maciek Wójcikowski; maciek@wojcikowski.pl. 2015-08-17 19:22 GMT+02:00 Jean-Noël Avila notifications@github.com:. > I think it's more basic than this: the molecule is simply deleted.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/openbabel/openbabel/issues/219#issuecomment-131895077; > .",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/219#issuecomment-131895705:209,simpl,simply,209,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/219#issuecomment-131895705,2,['simpl'],['simply']
Usability,"Nice testcase. I'll sort it out. On Tue, 2 Oct 2018 at 01:39, Ben Bucior <notifications@github.com> wrote:. > Some OBChemTsfm transformations, especially on radicals, can result in; > unexpected implicit hydrogen counts since PR#1576. I wrote up an example; > failure in the first commit of this PR, where assigning a charge of -1 to; > an atom can give it 255 implicit hydrogens under certain conditions.; >; > I suspect the underlying cause is unsigned integer arithmetic in; > phmodel.cpp:321 (possibly also 343). Subtraction of two unsigned ints gives; > an unsigned int--if the difference would be negative, then the result is; > wrapped back to UINT_MAX, e.g. printing (j->second - old_bond_order); > gives 4294967295 instead of -1. Then there's some truncation to fit in the; > unsigned char. But even if the overall expression gives the right answer; > most of the time, I think it would be clearer to be more explicit about the; > math, which would fix special cases like this bug.; >; > How should we adjust the line(s) of code in phmodel.cpp? We could; > explicitly typecast everything to a signed int then ensure that there are; > at least zero implicit hydrogens, but that seems verbose. @baoilleach; > <https://github.com/baoilleach> Please feel free to directly commit on my; > PR if you have any ideas. Of course we'll need to update the test case with; > the correct answer as well (not H255).; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/openbabel/openbabel/pull/1895; > Commit Summary; >; > - Demonstrate example of unsigned integer wrapping; >; > File Changes; >; > - *M* test/regressionstest.cpp; > <https://github.com/openbabel/openbabel/pull/1895/files#diff-0> (10); >; > Patch Links:; >; > - https://github.com/openbabel/openbabel/pull/1895.patch; > - https://github.com/openbabel/openbabel/pull/1895.diff; >; > —; > You are receiving this because you were mentioned.; > Reply to this email direc",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1895#issuecomment-426314886:899,clear,clearer,899,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1895#issuecomment-426314886,2,['clear'],['clearer']
Usability,"No - it's a bug, and looks pretty serious. The isomorphism should be of the labeled graph. Here's a simpler example:. ```; import pybel; ob = pybel.ob. smi = ""Cc1onc(C)c1""; mol = pybel.readstring(""smi"", smi). query = ob.CompileMoleculeQuery(mol.OBMol); mapper = ob.OBIsomorphismMapper.GetInstance(query); isomorph = ob.vpairUIntUInt(); mapper.MapFirst(mol.OBMol, isomorph); data = [isomorph[i] for i in range(len(isomorph))]; print(data); ```; giving...; ```; [(0, 5), (1, 4), (2, 3), (3, 2), (4, 1), (5, 0), (6, 6)]; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467172380:100,simpl,simpler,100,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1929#issuecomment-467172380,2,['simpl'],['simpler']
Usability,"No, I simply need to find the time to clean up the draft at https://openbabel.github.io/ and replace the wiki.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2479#issuecomment-1151355495:6,simpl,simply,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2479#issuecomment-1151355495,2,['simpl'],['simply']
Usability,"No, the old code converts to degrees by getting an angle from the vectorAngle function (which returns in degrees). . I wrote it this way to make it clear that the return value is in degrees. (the vectorAngle function uses this notation as well)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/49#issuecomment-29934291:148,clear,clear,148,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/49#issuecomment-29934291,2,['clear'],['clear']
Usability,"Noel, I can work with you to re-implement the SMARTS -- if you can help me learn the double-bond stereo code in the trunk. Original comment by: @ghutchis",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1479#issuecomment-281810663:75,learn,learn,75,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1479#issuecomment-281810663,2,['learn'],['learn']
Usability,"Not everybody deals with cmake, and not everybody wants to learn about is peculiarities.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/300#issuecomment-216895774:59,learn,learn,59,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/300#issuecomment-216895774,2,['learn'],['learn']
Usability,"Now I'm more confused: if setup.py is not to be used, then why bother pushing fixes for it?. Anyway, without any changes at all, the current 2.3.2 build/install leaves its python products (openbabel.py, pybel.py, _openbabel.so) in /usr/lib or /usr/lib64. Clearly they shouldn't stay there. Is it expected that builders & packagers will make their own arrangements to install them to the correct location, or have I missed something?. Original comment by: cwilling",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1217#issuecomment-281802859:255,Clear,Clearly,255,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1217#issuecomment-281802859,1,['Clear'],['Clearly']
Usability,OK I left the package name as 'openbabel' and updated the README to explain more clearly that this is just the python bindings along with a link to the main Open Babel site. Here's what it will look like (on the test PyPI site): https://testpypi.python.org/pypi/openbabel,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/65#issuecomment-33468494:81,clear,clearly,81,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/65#issuecomment-33468494,2,['clear'],['clearly']
Usability,"OK I made the fix to the double bond on the carbonyl and now when I read in the pdb file and write straight to pdb or just plain obabel pdb2pdb it makes a connection between atom 1374 CZ of ARG87 and atoms 682, 683, 684, & 681 of ARG44 which are atom types NH1, HH11, HH12, & CZ respectively. I have attached input PDB file and command line below. My question is now very simply: why do any sidechain atoms of any residues other than cysteines get a connection made to another residue's side chain atoms (suicide inhibition really). This is clearly a mistake and is turning a simple ""connections in sidechain of residues"" problem into a trying to learn to make connections problem which is making a problem out of nothing really. This hasn't changed in 50 years so I am really confused. ; https://drive.google.com/file/d/1U7_TEXpFldyS0AJbAR9jpKgYXS2fNTSx/view?usp=sharing; ```; obabel -ipdb -opdb Q00534_fill.BL00010001_ligand_conect.fixed.pdb -O obabel.out.pdb; ```. see this line below is clearly wrong in obabel.out.pdb. Can you point me to the C++ code for assigning sidechain connections when reading in of a pdb molecule so I can debug it? This is saying CZ of ARG44 is make a ""dicarbon"" (disulfide pun intended 😄) bond with CZ of ARG87.; ```; CONECT 682 683 684 681 1374 ; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1139328043:372,simpl,simply,372,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2481#issuecomment-1139328043,10,"['clear', 'learn', 'simpl']","['clearly', 'learn', 'simple', 'simply']"
Usability,"OK, no worries I can wait until tomorrow. I just wondered if there was something simple I could do, but this sounds like it would be more complicated than that. -----------------------------------------------------------------------------------------------------; Hubertus van Dam, 631-344-6020, hvandam@bnl.gov<mailto:hvandam@bnl.gov>; Brookhaven National Laboratory. From: Geoff Hutchison <notifications@github.com>; Reply-To: openbabel/openbabel <reply@reply.github.com>; Date: Friday, March 27, 2020 at 10:26; To: openbabel/openbabel <openbabel@noreply.github.com>; Cc: ""Van Dam, Hubertus"" <hvandam@bnl.gov>, Author <author@noreply.github.com>; Subject: Re: [openbabel/openbabel] obabel seg-faults converting SMILES into mol2 (#2144). I'll have a patch later today - there's an index / table of contents for faster access. —; You are receiving this because you authored the thread.; Reply to this email directly, view it on GitHub<https://github.com/openbabel/openbabel/issues/2144#issuecomment-605029470>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ABDS7HXOQA2SW2DZWDXSI5DRJSZPXANCNFSM4LRFJZFA>.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605044119:81,simpl,simple,81,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2144#issuecomment-605044119,2,['simpl'],['simple']
Usability,"OK, thanks for the feedback. I'll try to do it very soon.; I'm asking for feedback because I get really annoyed if I code something; then it is not accepted.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/74#issuecomment-39694266:19,feedback,feedback,19,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/74#issuecomment-39694266,4,['feedback'],['feedback']
Usability,Oh bugger. The merge pulled in more than the simple fix I was trying to send. I obviously screwed up somewhere.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1754#issuecomment-528169779:45,simpl,simple,45,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1754#issuecomment-528169779,2,['simpl'],['simple']
Usability,"Oh, thank you so much. It was a simple typo :D",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2690#issuecomment-2077472848:32,simpl,simple,32,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2690#issuecomment-2077472848,2,['simpl'],['simple']
Usability,"Okay, this isn't a valid fix. There is no simple fix. If the istream belongs to the user, you have no way of knowing if it has been deallocated or not by the time you get to the OBConversion destructor (if they were both declared as local variables, for instance, and go out of scope at the same time). It it is still valid, then the rdbuf needs to be replaced before deallocating pLineEndBuf. It is no longer valid, you can't do this. The correct solution is to install all filtering on top of the user provided stream. This could be done relatively easily as a general framework that would apply to the zlib filters (which I'm guessing, from looking at the code, also leak memory). I'd be willing to take the time to implement this, but would be much more enthusiastic about it if I could use the boost iostreams libraries. Is this acceptable?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/148#issuecomment-94911122:42,simpl,simple,42,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/148#issuecomment-94911122,2,['simpl'],['simple']
Usability,"One option to keep this more contained could be to change pybel from a module to a package — i.e. a directory called ""pybel"" that contains an `__init__.py` file. Then you can add supplementary files or subdirectories like ""static"" or ""js"" without polluting the main python site-packages directory. In terms of the python code, it would be possible to keep the change transparent to the user. You could just put it all the code in `__init__.py`, or separate it out into multiple python files and use imports in `__init__.py` to define the interface. The downside to this would be that you lose the simplicity of just having pybel as a single file. But with `imolecule.min.js` being added anyway, having a pybel directory containing everything might be better than having disparate files.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/80#issuecomment-45320158:597,simpl,simplicity,597,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/80#issuecomment-45320158,2,['simpl'],['simplicity']
Usability,"Oops -- you're right, I missed a couple. I've pushed r4600 which should clear these up. The PointGroup function has been fixed, too. Original comment by: @dlonie",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800982:72,clear,clear,72,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800982,2,['clear'],['clear']
Usability,"Options are the way to go, but kekulization is triggered during reading of; mol2 and sdf currently:. > # obabel tmp.mol2 -onul ---errorlevel 3; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule Sybyl Mol2 format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > ; > # Ran OpenBabel::Clear Molecule; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Kekulize; > ; > # Ran OpenBabel::Kekulize; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule Sybyl Mol2 format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > Ran OpenBabel::Clear Molecule. Even more stuff is happening with SDF as it tries to correctly handle; stereo:. > # obabel tmp.mol -onul ---errorlevel 3; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule MDL MOL format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > ; > # Ran OpenBabel::Clear Molecule; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::AssignSpinMultiplicity; > ; > # Ran OpenBabel::AssignSpinMultiplicity; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Kekulize; > ; > # Ran OpenBabel::Kekulize; > ; > **\* Open Babel Audit Log in OpenBabel::StereoFrom3D; > ; > # Ran OpenBabel::StereoFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindSSSR; > ; > # Ran OpenBabel::FindSSSR; > ; > **\* Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; > ; > # Ran OpenBabel::AssignAromaticFlags; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindRingAtomsAndBonds; > ; > # Ran OpenBabel::FindRingAtomsAndBonds; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignImplicitValence; > ; > # Ran OpenBabel::AssignImplicitValence; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; > ; > # Ran OpenBabel::AssignHybridization; > ; > **\* Open Babel Audit Log in Ope",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524:333,Clear,Clear,333,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524,4,['Clear'],['Clear']
Usability,"Or try EIGEN2 instead. I think both are supported, but the CMAKE; environment variable is different. On Fri, 22 Feb 2019 at 13:49, David Hall <notifications@github.com> wrote:. > It appears the root error is:; >; > 1>c:\bld\openbabel_1550159794694\_h_env\library\include\eigen3\eigen\src/Core/arch/SSE/PacketMath.h(811) : fatal error C1001: An internal error has occurred in the compiler.; > 8701>(compiler file 'msc1.cpp', line 1411); > 8711> To work around this problem, try simplifying or changing the program near the locations listed above.; > 8721>Please choose the Technical Support command on the Visual C++; > 8731> Help menu, or open the Technical Support help file for more information; > 8741>Internal Compiler Error in C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\bin\x86_amd64\cl.exe. You will be prompted to send an error report to Microsoft later.; >; > I'm not sure much can be done when the error message is that the compiler; > cannot handle the file.; >; > The best advice is probably to just have it target python 3.5-3.7 and drop; > python 2.7 support, which will cause condo-forge to use Visual Studio 14.0; > (2017) instead of Visual Studio 9.0 (2008 aka over a decade old).; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1930#issuecomment-466402135>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGQWf1XGtO8-yDR2XrEPV_BHKUEoxks5vP_VwgaJpZM4bJldO>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1930#issuecomment-466482459:477,simpl,simplifying,477,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1930#issuecomment-466482459,2,['simpl'],['simplifying']
Usability,"Perhaps I wasn't clear enough that it hangs for everything I've tried. For example, even converting this very simple water geometry hangs:. geom.xyz; ---. 3. 8 0 0 0; 1 .97 0 0; 1 -0.1741 .95296 0; ---. Original comment by: @jiahao",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1119#issuecomment-281800750:17,clear,clear,17,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1119#issuecomment-281800750,4,"['clear', 'simpl']","['clear', 'simple']"
Usability,"Please compare the above structure with the [pubchem 2D structure](https://pubchem.ncbi.nlm.nih.gov/compound/5761#section=2D-Structure), showing, in green, a H which 'protrudes towards the camera'. The same H is depicted as 'protruding' above the ring with the NCH3 group in [the wikipedia entry](https://en.wikipedia.org/wiki/Lysergic_acid_diethylamide#/media/File:LSD-2D-skeletal-formula-and-3D-models.png). The Pubchem 3D shows the hydrogen in more detail. My point is that obabel's depiction of this molecule with the flags I used provides an image structure where this H 'protrudes' below the molecule, but in line with a C-C bond in the ring it is a member of, so you have both lines running in the same direction, one on top of the other, and although this may structurally possible, for the purposes of depicting the structure, it is less clear than the two references included above. Now this may be because I'm using obabel incorrectly, and if so, totally cool. But although I'm new to the notion of implicit and explicit hydrogens in the context of cheminformatics and 2D structure depictions, the flags I have used have hidden all the implicit hydrogens, but not the case H in point which appears to be nonetheless plotted, but in a way which is confusing, and irrespective, I was urged to log this as a bug by Geoff, so assumed it was therefore a bug. Therefore, I'm hoping that either; 1. Someone with authority admits this is a bug; 2. Someone suitably knowledgeable informs me I'm using the wrong flags (and hopefully graciously corrects me) and obabel produces the same structure but with this H sticking out on its own or; 3. Someone suitably knowledgeable informs me that this is a feature of obabel, and irrespective of the flags, I will not be able to plot this H in such a way that it 'sticks out' without being plotted over another bond in which case, I can close this issue and use a different tool for those structures I have to plot where I find this anomaly.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341712084:847,clear,clear,847,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1681#issuecomment-341712084,2,['clear'],['clear']
Usability,"Please don't merge without discussion. These are not fixes as implied; by the title, but changes. On 22 October 2013 01:56, David Hall notifications@github.com wrote:. > This involves two commits that:; > 1. install the python files into site-packages corresponding to the python; > used, rather than next to the libraries. eg; > /usr/lib64/python2.7/site-packages instead of /usr/lib64; > 2. CMake's PythonLibs and PythonInterp can find different versions of; > python. In my case, I had python3.2 and python2.7 installed. the; > PythonInterp found python2.7 since it was /usr/bin/python , but PythonLibs; > found the devel files for Python3 . This clearly did not work very well.; > Now, I search for the python first, then restrict the libraries found based; > on the version of the python interpreter.; > ; > ---; > ; > You can merge this Pull Request by running; > ; > git pull https://github.com/Acpharis/openbabel cmake_python; > ; > Or view, comment on, or merge it at:; > ; > https://github.com/openbabel/openbabel/pull/33; > ; > Commit Summary; > ; > install python libraries in python site-packages directory instead of; > /usr/lib; > Use Python Library version of the found Python Interpreter; > ; > File Changes; > ; > M scripts/CMakeLists.txt (26); > ; > Patch Links:; > ; > https://github.com/openbabel/openbabel/pull/33.patch; > https://github.com/openbabel/openbabel/pull/33.diff",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/33#issuecomment-26786633:650,clear,clearly,650,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/33#issuecomment-26786633,2,['clear'],['clearly']
Usability,"Probably a good idea. :-) If could rewrite to use a straightforward ""if"" statement I think the intention would be clearer and avoid the self-assignments.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/370#issuecomment-276149075:114,clear,clearer,114,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/370#issuecomment-276149075,2,['clear'],['clearer']
Usability,"Re AWK: by default, one space, multiple free spaces, or a tabulator is all one white space. It is one argument e.g. to use [bioawk](https://github.com/vsbuffalo/bioawk-tutorial) to process pdb and FASTA. One however can explicitly define (by `FS`) what AWK should consider as *field separator*, between the columns in a line (a *record*), and by `RS` what should separate the lines. (There equally are the variables `OFS` and `ORS` to specify *output field separator* and *output record separator*. Regarding the task ahead, however, I recommend to substantiate your question with a typical .sdf you want to process, to document the intended workflow, and output format you aim for. So far, it is not clear if you want to remove (or retain) structures which could be considered as a sugar. Perhaps the filter intended shall be more specific (e.g., remove residues of galactose, but not glucose). The project [SugarRemoval](https://github.com/JonasSchaub/SugarRemoval) is an example of such a ""structure cleaner"".",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2611#issuecomment-1636174489:701,clear,clear,701,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2611#issuecomment-1636174489,2,['clear'],['clear']
Usability,"Referring to both comments, being a final degree project there were some time limits I had to stick to in order to finish it and make the changes (in about 3 to 5 months, including learning chemistry and understanding the base code from scratch). ; That's why we were not really considering to include too much external feedback, which could have made this process more complex. The project had specific goals, and in that time frame I came up with these solutions. I am by no means an expert in chemistry and my knowledge is quite scarce.; So you will probably find many things that can be improved, done in a more efficient way or better approaches that I might not have thought of. I'm not quite available right now and I am planning on doing other things in the near future. But I could dedicate some of my free time to it, and slowly modify the code until its acceptable. So I am at your disposal, I will need some guidance for this.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666933912:181,learn,learning,181,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666933912,6,"['feedback', 'guid', 'learn']","['feedback', 'guidance', 'learning']"
Usability,"Regarding integration into OB (or any other open source project) t's usual to discuss planned large changes before the work is started so as to receive feedback and address concerns or consider alternatives. In particular, modifications to core classes are considered carefully. Creating a new canonical nomenclature is a very interesting project though, and impressive as an end of degree project. However it probably merits quite a bit of discussion both within OB and the wider cheminf community we are part of before it is integrated. Having a reference implementation provides a basis for that discussion",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666474907:152,feedback,feedback,152,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2616#issuecomment-1666474907,2,['feedback'],['feedback']
Usability,"Reverted + put changes into a new commit, mainly because of the `openbabel-python.cpp` bloat. > Can you revert the portion of the PEP-compliance commit to return the docstrings for outformats, informats, etc.? Docstrings are part of the documentation. Done, but I've never seen this pattern before. I'm curious to learn more - is SWIG recognizing variable docstrings?. > Is your idea that the JS files be installed beside pybel.py?. Yes, I put them in a `js` folder. They could instead be linked to a remote URL, but then 3D rendering would be dependent on an internet connection. > The toggle could be done as RDKit does, just have a pybel global attribute with a default value which the user can assign to, e.g. pybel.ipython_whatever = True. Done. It's `pybel.ipython_3d`, and it defaults to False. I think 2D is more useful than 3D in common use cases. ![screenshot from 2013-12-09 09 09 34](https://f.cloud.github.com/assets/1449833/1706053/d2ebffa4-60e8-11e3-9526-be9603b1cc19.png)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/30#issuecomment-30142558:314,learn,learn,314,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/30#issuecomment-30142558,2,['learn'],['learn']
Usability,"Send me an e-mail and let's talk. There are already several SMILES output options: https://open-babel.readthedocs.io/en/latest/FileFormats/SMILES_format.html. It's not clear to me exactly what you're trying to accomplish. For example usually people start with a SMILES or similar for the initial 3D geometry. So usually the question is ""how do I make sure the bonds are assigned properly from this 3D geometry"" - since the first step in your process is not 100% guaranteed. So please send me an e-mail and we can discuss.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2534#issuecomment-1248552480:168,clear,clear,168,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2534#issuecomment-1248552480,2,['clear'],['clear']
Usability,Sorry for not providing this information initially. - Anaconda information (Python):; ```Current conda install:. platform : linux-64; conda version : 4.3.30; conda is private : False; conda-env version : 4.3.30; conda-build version : 2.1.13; python version : 3.5.4.final.0; requests version : 2.18.4; root environment : /home/henrique/anaconda3 (writable); default environment : /home/henrique/anaconda3; envs directories : /home/henrique/anaconda3/envs; /home/henrique/.conda/envs; package cache : /home/henrique/anaconda3/pkgs; /home/henrique/.conda/pkgs; channel URLs : https://repo.continuum.io/pkgs/main/linux-64; https://repo.continuum.io/pkgs/main/noarch; https://repo.continuum.io/pkgs/free/linux-64; https://repo.continuum.io/pkgs/free/noarch; https://repo.continuum.io/pkgs/r/linux-64; https://repo.continuum.io/pkgs/r/noarch; https://repo.continuum.io/pkgs/pro/linux-64; https://repo.continuum.io/pkgs/pro/noarch; config file : None; netrc file : None; offline mode : False; user-agent : conda/4.3.30 requests/2.18.4 CPython/3.5.4 Linux/3.19.0-32-generic debian/jessie/sid glibc/2.19 ; UID:GID : 1000:1000; ```. - Operating System: Linux Mint 17.3 Cinnamon Edition 64bits - Kernel 3.19.0-32-generic. - Versions:; The versions that *don't* work together (all using the above Anaconda Python):; ```; openbabel 2.4.1 <pip>; scikit-learn 0.19.1 py35hbf1f462_0; ```; ```; openbabel 2.4.1 <pip>; scikit-learn 0.19.0 py35hbf1f462_0; ```; The versions that *work* together:; ```; openbabel 2.4.1 <pip>; scikit-learn 0.18.2 np113py35_0; ```; ```; openbabel 2.4.1 py35_3 openbabel; scikit-learn 0.19.1 py35hbf1f462_0; ```. All the dependencies for the Python libraries were automatically satisfied by conda.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1702#issuecomment-347867756:1339,learn,learn,1339,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1702#issuecomment-347867756,8,['learn'],['learn']
Usability,Sorry for reopening this issue. I just found some new problem related to protonation and I think it's good to post here.; Here I have a ligand called EFE and I tried to protonated it with Openbabel. The structure is simple but the result is wrong I guess. I wondered in which scenario this would happen since I also have many successful ligand cases with Openbabel.; The command I used were:; `obabel -ipdb 1.pdb -h -opdb -O 2.pdb` or `obabel -ipdb 1.pdb -opdb -O 2.pdb --p 7.0` or in python with Pybel.; Input and output files are attached.; [EFE.zip](https://github.com/openbabel/openbabel/files/6073586/EFE.zip),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-789420813:216,simpl,simple,216,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-789420813,2,['simpl'],['simple']
Usability,"Sorry to keep adding to this, but I've been trying to think of other ways to run these queries, and I've come across something else. Taking the same three molecules from below, if I use the query [Nv2] (N with total bond order of 2), then none of them match in OB, whereas the second one (i.e. the radical) does in Daylight. I think that is less ambiguous - OB is simply wrong here, isn't it?. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802034:364,simpl,simply,364,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802034,2,['simpl'],['simply']
Usability,"Strange bug. When I try a simple convert to xyz, the error seems to occur when calling ConnectTheDots():; ##############################; vincent@quad:~/dev/perso/trunk/TEST/ob_files$ ../bin/babel input.cif input.xyz; *** glibc detected *** ../bin/babel: double free or corruption (out): 0x0000000002241fb0 ***; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x78a8f)[0x7f4837d5ca8f]; /lib/x86_64-linux-gnu/libc.so.6(cfree+0x73)[0x7f4837d608e3]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel5OBMol14ConnectTheDotsEv+0x753)[0x7f48379cd393]; /home/vincent/dev/perso/trunk/TEST/lib/openbabel/2.3.90/cifformat.so(_ZN9OpenBabel9CIFFormat12ReadMoleculeEPNS_6OBBaseEPNS_12OBConversionE+0xb7a)[0x7f48274a871a]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel16OBMoleculeFormat18ReadChemObjectImplEPNS_12OBConversionEPNS_8OBFormatE+0xa0c)[0x7f4837a3795c]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEv+0x18e)[0x7f48379d55ce]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion7ConvertEPSiPSo+0x1e8)[0x7f48379d6608]; /home/vincent/dev/perso/trunk/TEST/lib/libopenbabel.so.4(_ZN9OpenBabel12OBConversion11FullConvertERSt6vectorISsSaISsEERSsS4_+0x1f41)[0x7f48379d9231]; ../bin/babel(main+0x103b)[0x4042fb]; ###################; I'm trying to run it through valgrind/valkyrie to see if I catch something... Original comment by: @vincefn",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800794:26,simpl,simple,26,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1122#issuecomment-281800794,2,['simpl'],['simple']
Usability,"Sure, but I started by creating the test set. Any of the incremental changes were not sufficient to fully resolve all the failures. Nonetheless, I will try to do better in the future. I have learned that I need to rebase frequently to avoid headaches.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2008#issuecomment-533933434:191,learn,learned,191,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2008#issuecomment-533933434,2,['learn'],['learned']
Usability,"Taking in account that in any case i need to use development version since kekulization doesn't work on released version, I need to do some statements.; I knew that the major issue is the use of old version, it was the reason i put the cdk version for the two software. This could be simple to solve if you consider only an aromaticity model right.; Since you know that it depends of the degree of generalization you want to keep (tautomerism mesomerism, etc.) it could be more accurate to have the possibility to choose wich model you want to apply. I keep the same example (theobromine):; ![image](https://user-images.githubusercontent.com/335108/44911717-1a84ad80-ad28-11e8-9ac1-ed5ef924bb21.png); I've depicted the smiles with marvinsketch. The first is the kekulized form, the second the basic aromaticity model form, the third the general aromaticity model (daylight like- in this case doesn't take in account external double bonds) form.; You can see that both structure are right depending on the model you want to save.; If you use kekulized form every software ill accept the molecule but you will not know how it has interpreted your molecule. In other words, it seems that you have solved the problem, but then is more difficult to address some issues and understand some results.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1638#issuecomment-417647690:284,simpl,simple,284,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1638#issuecomment-417647690,2,['simpl'],['simple']
Usability,"Thank you for the code. I replaced it and it didn't work either. I'm afraid for the command I execute, system doesn't search in the folder where CMakeLists.txt exists, hence the persistence of the problem. To make it more clear, here is the output:; ```; File ""/home/lale/anaconda3/lib/python3.7/site-packages/openbabel.py"", line 6, in <module>; import DLFCN as dl; ModuleNotFoundError: No module named 'DLFCN'. ```; To overcome the problem arising from this Python library bindings, should I install again (using the code you provided) all over or go change the py script?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1947#issuecomment-469659496:222,clear,clear,222,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1947#issuecomment-469659496,2,['clear'],['clear']
Usability,"Thank you for the feedback. 1. Conflicts resolved; 2. One challenge I ran into was that some of the existing code wasn't declared as const. I can restore const to OBBond::GetLength if some of the other methods are declared as const. Before making a commit, does this [example change](https://github.com/openbabel/openbabel/files/2104595/fix_const.patch.txt) look reasonable, or are there other concerns about API compatibility, etc?; 3. I think I understand. I don't recall anything seeing anything context-specific in OBUnitCell, but keeping track of the molecule anyway probably wouldn't hurt. The line I was looking at is `newmol.SetData(parent_uc->Clone(NULL));` (in `OBMol::CopySubstructure`), so I think the relevant OBMol would be `&newmol`. Making sure the UFF code is PBC-compatible sounds like a great feature. I will work on that after porting some more PBC features from my research code (such as different formats than CIF) to another PR.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1853#issuecomment-397496387:18,feedback,feedback,18,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1853#issuecomment-397496387,2,['feedback'],['feedback']
Usability,"Thank you for the pointers.; I will take a look into these options. To not complicate things more than needed, I propose to default to the (simpler) format (a) in the case that there is only one grid associated with the molecule.; Having one grid is very common and it is also common that other programs only format (a) anyway. What do you think?. This is implemented in this PR:; https://github.com/openbabel/openbabel/pull/2580. Please let me know if for some reason this is not acceptable and what I can do to fix it.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1498474527:140,simpl,simpler,140,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2579#issuecomment-1498474527,2,['simpl'],['simpler']
Usability,"Thank you for the thoughtful questions and advice. My original intention was simple and mainly evolved around .cif files:; 1. if two OBMol objects are read from the same file, they should be equal.; 2. for crystal structures (such as in .cif file), the order of atoms that are defined doesn't matter (e.g. C1, C2, H3 vs. H3, C1, C2), so comparing OBMol from such two different .cif files should be equal. I will think of the other OBMol objects read from different file formats and keep this updated!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2713#issuecomment-2261853909:77,simpl,simple,77,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2713#issuecomment-2261853909,2,['simpl'],['simple']
Usability,"Thank you for your feedback, I could reproduce the segfault.; Here's the bt attached.; [bt.txt](https://github.com/openbabel/openbabel/files/1911057/bt.txt)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1331#issuecomment-381359945:19,feedback,feedback,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1331#issuecomment-381359945,2,['feedback'],['feedback']
Usability,"Thank you for your feedback, I submitted this patch:; https://github.com/openbabel/openbabel/pull/1825",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1056#issuecomment-383395888:19,feedback,feedback,19,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1056#issuecomment-383395888,2,['feedback'],['feedback']
Usability,Thank you for your feedback. I'd like to help you wirh debugging. What can I do?,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1792#issuecomment-373878948:19,feedback,feedback,19,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1792#issuecomment-373878948,2,['feedback'],['feedback']
Usability,Thank you ghutchis for your feedback. I submitted this pull request https://github.com/openbabel/openbabel/pull/1815,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1607#issuecomment-380898031:28,feedback,feedback,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1607#issuecomment-380898031,2,['feedback'],['feedback']
Usability,"Thank you so much for looking into my problem!; I tried `obabel -ipdb ligand_1.pdb -h -opdb -O add_h.pdb` in my environment and it results as you described. It kept the original atom label and the residue name. While, there are still 2 problems about this:; 1. The `--p ph` flag and the python usage `mol.OBMol.AddHydrogens(False, True, ph)` still do not keep atom label and residue name, which the ph will make big difference on the result. In my result with ph=7.0, the phosphates are all deprotonated and openbabel gives a good formal charge along with the connectivity. ; 2. Even in the way that keeps atom label and residue name, there's no different name for newly added Hydrogens. I looked into the naming rule of tleap in Amber and it is just simply adding element count after the element name. Like this:; ```; HETATM 59 H UNL 1 66.036 57.777 14.518 1.00 0.00 H ; HETATM 60 H1 UNL 1 69.447 60.888 17.041 1.00 0.00 H ; HETATM 61 H2 UNL 1 67.790 60.750 17.415 1.00 0.00 H ; HETATM 62 H3 UNL 1 72.206 58.616 13.563 1.00 0.00 H ; ```. I actually fixed my problem by writing a function in my workflow to fix the openbabel generated file (just count the element and give them new amber readable names.) ; Also I found some potential problems of the protonation function:; 1. The protonation will be plausible only when I start from a raw PDB without H and connectivity. Weird H will be added if you start from a protonated PDB (like ligand_1_aH.pdb), or remove H first with openbabel and then add H. . Thanks again for the help!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2330#issuecomment-787437807:751,simpl,simply,751,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2330#issuecomment-787437807,2,['simpl'],['simply']
Usability,"Thank you so much for your nice explanation @nbehrnd. . Actually, I admit that I modified on purpose the SMILE to be sure that the aromatic flag was not well determined. Just to simplify, I have a list of molecules in MOL2 file that have been dearomatized with another software and openbabel didn't recognize the aromaticity by atoms (example attached, just change the extension). [test.txt](https://github.com/openbabel/openbabel/files/9055935/test.txt). Because of that, I want to know how to use ""AssignAromaticFlags"" function. . Nevertheless, you give me the idea to transform the molecule first to new smile and re-read it, like that it is working! However, not sure if the main problem with the MOL2 corresponds to the both ways to present the aromaticity (Kekule or lower-case) or it is a bug. `mol = next(pybel.readfile(""mol2"", ""./test.mol2""))`. `[int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol)]`. > [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]. `mol.write(""can"")`. > `O=C(N[C@@H](C(=O)N[C@H](CNC1=CC=C(C=C1)N1CCCCC1)CCC1=CC=CC=C1)CC1=CC=CC=C1)OCC1=CC=CC=C1\tBDB50137400\n`. `mol = pybel.readstring(""can"", ""O=C(N[C@@H](C(=O)N[C@H]CNC1=CC=C(C=C1)N1CCCCC1)CCC1=CC=CC=C1)CC1=CC=CC=C1)OCC1=CC=CC=C1"")`. `mol.OBMol.AddHydrogens()`. > True. `[int(atom.IsAromatic()) for atom in openbabel.OBMolAtomIter(mol.OBMol)]`. > [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176334793:178,simpl,simplify,178,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1176334793,2,['simpl'],['simplify']
Usability,"Thanks @nbehrnd, I was able to fix my own issues by applying the patch that I included. I was (re-)installing OpenBabel into an environment module for the Canadian High Performance Computing infrastructure (Digital Research Alliance of Canada, formerly Compute Canada). Anaconda doesn't play well with our system and while our users often use virtual environments to install Python wheels that we provide, for simple Python-bindings to C/C++ libraries, we like to install them into environment module with the library/application itself. I just wanted to point out that distutils' `StrictVersion()` function expects a version-string; [that matches a specific pattern](https://epydoc.sourceforge.net/stdlib/distutils.version.StrictVersion-class.html), which '3.1.1.1' doesn't. ; Also the use of [distutils has been deprecated](https://peps.python.org/pep-0632/) for a while now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778:410,simpl,simple,410,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2408#issuecomment-2034551778,2,['simpl'],['simple']
Usability,"Thanks a lot, got it. See the following for the detail steps:. ```; $ git clone https://github.com/openbabel/openbabel.git openbabel.git; $ cd openbabel.git; $ mkdir build && cd build; # The pyenv-based virtubalenv used by me to do the job:; $ pyenv shell hpc; # Must use -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON, otherwise will meet errors and ; # the scripts/python/__init__.py won't be created:; $ cmake -DPYTHON_EXECUTABLE=$(pyenv which python) -DPYTHON_BINDINGS=ON -DRUN_SWIG=ON -DBUILD_GUI=ON ..; $ make -j24; # This will install the python binding into /usr/local/lib, let me hack it for installing it into the user's ; # currently activated virtualenv:; $ sudo make install. # Now install the python binding into the currently activated virtualenv:; $ cd scripts/python; # The following files must be put into the openbabel directory:; $ cp ../stereo.i ../openbabel-python.i openbabel/; # Finally, run any of the following commands will do the trick:; $ pip install -e .; or; $ pip install; or; $ python setup.py install; ```. Say, for using the following command, see the output obtained by me:; ; ```; $ pip install -e .; Looking in indexes: https://pypi.tuna.tsinghua.edu.cn/simple; Obtaining file:///home/werner/Public/hpc/tools/openbabel.git/scripts/python; Installing collected packages: openbabel; Attempting uninstall: openbabel; Found existing installation: openbabel 3.0.0; Uninstalling openbabel-3.0.0:; Successfully uninstalled openbabel-3.0.0; Running setup.py develop for openbabel; Successfully installed openbabel; ```. PS. I love anaconda/miniconda also, but still want to do the job by cpython. The conda-based workflow seems have the following shortcommings:. - Ofter too slow for running the SAT solver to find the requirements' packages list for the environment.; - Maybe problematic for mixing the usage of pip and conda to install packages, say for this problem:; https://github.com/conda/conda/issues/9752; - All of the packages are per-compiled. Regards",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2137#issuecomment-597689294:1180,simpl,simple,1180,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2137#issuecomment-597689294,2,['simpl'],['simple']
Usability,Thanks again for catching these. r4603 should clear the last bit up. Original comment by: @dlonie,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800984:46,clear,clear,46,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1131#issuecomment-281800984,2,['clear'],['clear']
Usability,Thanks for fast feedback. I'll try this shortly!,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674421361:16,feedback,feedback,16,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2269#issuecomment-674421361,2,['feedback'],['feedback']
Usability,"Thanks for looking into this Tim. My own feeling is that there are two separate issues here:. 1. Can an atom with a hydrogen and a lone pair be stereogenic? This is related to stereocenter perception. Let me ping @johnmay on this. I'm pretty sure there are cases of this related to S (maybe not N), but I think John can clear this up.; 2. Should RemoveHydrogens() suppress hydrogens involved in cis/trans stereo? I think the answer to this is no. One of the invariants of the toolkit should be that suppressing and expanding hydrogens should not change any information. Note that (1) and (2) are separate issues. I've changed the SMILES reader so that stereo perception is optional (""-aS""). By default, stereo is just read directly from the SMILES (same behaviour as OEChem and CDK, at least). This improves performance when reading SMILES, and preserves stereo present in the input even where our stereoperception would remove it:; ```; $ obabel -:""C[C@](C)(C)C"" -osmi; C[C@](C)(C)C	; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572458396:320,clear,clear,320,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2111#issuecomment-572458396,2,['clear'],['clear']
Usability,Thanks for opening this pull request! Please check out our contributing guidelines and please examine any build issues.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2383#issuecomment-858504943:72,guid,guidelines,72,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2383#issuecomment-858504943,52,['guid'],['guidelines']
Usability,Thanks for suggestion. So there are the changes I have made:. - property name changes; - `heavyvalence` -> `heavydegree`; - `heterovalence` -> `heterodegree`; - `valence` -> `degree`; - old property names will raise `AttributeError` to guide users to use the new property names.; - doc strings are updated,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2005#issuecomment-509888919:236,guid,guide,236,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2005#issuecomment-509888919,2,['guid'],['guide']
Usability,"Thanks for the catch, that's a clear fix.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2295#issuecomment-720730112:31,clear,clear,31,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2295#issuecomment-720730112,2,['clear'],['clear']
Usability,"Thanks for the detailed reply. I understand the source of the issue, but it seems very unpractical. I had never heard of the RAD specification and I don't know a 3D builder that uses it. I don't think anyone is going to go through the trouble of manually specifying radicals, especially with many structures. As a workaround, a unique identifier can be obtained with the `openbabel` InChI + the actual number of hydrogens in the input structure. Not ideal, but relatively simple. Adding some logging at least to indicate if the option has been registered and is valid would be helpful. It's unfortunate regarding the potential license issues, but it is true that the license is peculiar.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214210843:472,simpl,simple,472,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2526#issuecomment-1214210843,2,['simpl'],['simple']
Usability,"Thanks for the quick and kind reply, as well as for updating the guide.; Your help totally fixed the problem 1.; The final goal will be to be able to guess Heat Capacity, Enthalpy and Entropy for C/H/O compunds and for their radicals.; Problem 2 (ensuring that ALL groups are founded) seems to remain open.; I would like to contribute (in my spare time), and start fixing this problem.; I have donloaded and compiled (succesfully) open babel: but it is so big that I got lost before even starting.; Any suggestion on how to start understanding this huge code? Any tutorial I missed? Any help on how to properly ""debug"" to see open babel in action?; Samuele. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1159#issuecomment-281801451:65,guid,guide,65,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1159#issuecomment-281801451,2,['guid'],['guide']
Usability,"Thanks for the quick response!. I'm not sure if it's the radical per se that is causing the failure because I have successfully submitted many other radicals and gotten usable coordinates. Here's an example with a related radical that seems to work fine. ```; obabel -:""[CH2]C=C(C)C"" --gen3D --ff MMFF94 -h -oxyz; 14. C 1.01586 -0.21405 0.27494; C 2.43230 -0.08427 0.08158; C 3.08182 -0.05272 -1.09552; C 2.43297 -0.09102 -2.45461; C 4.58463 0.04185 -1.13598; H 0.58958 0.04472 1.23683; H 0.35675 -0.54678 -0.51556; H 3.00523 -0.00707 1.00744; H 1.34148 -0.06758 -2.41775; H 2.73125 -0.99784 -2.98980; H 2.74967 0.77684 -3.04304; H 5.02623 0.08437 -0.13465; H 4.89667 0.94248 -1.67511; H 5.00339 -0.83164 -1.64584; 1 molecule converted; ```. I suppose I was low-key wondering how I was getting results, given that I didn't think MMFF94 supported radicals either, but the geometry guesses I looked at were fine for my application and I assumed obabel had some special way of handling these radicals. So I guess now I'm not sure what's going on, and why most radicals work (or ""work"") but the aforementioned one does not. For what it's worth, I don't actually need perfect geometries for my application because my next step is to feed them to a more accurate optimization. In fact for my purposes I could even obtain the geometry of the anion from obabel and let the more accurate optimization fine-tune the anion to the radical. So getting this perfect isn't immediately crucial to me but I am now curious what obabel is actually doing (and if you have a recommendation for the best way to process radicals in obabel to generate a good starting guess for a more accurate method, I'm all ears). P.S. It's wonderful to hear from you! I think I went for a run with you and Alán when you both visited UCLA!",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2575#issuecomment-1465383306:169,usab,usable,169,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2575#issuecomment-1465383306,2,['usab'],['usable']
Usability,"Thanks for the quick responses and your time.; I used an pdb file with up to 20 residues and was surprised about the RAM consumption in contrast to the other methods, but it is clear now.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2498#issuecomment-1163290711:177,clear,clear,177,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2498#issuecomment-1163290711,2,['clear'],['clear']
Usability,"Thanks for your interest! This isn't so much of an issue - we have an e-mail list. A successful project would propose a set of filters / transformations similar (or identical to) the MolVS project for RDKit. I'll post a few links / article that can help you get started (e.g., what is standardization):; * https://depth-first.com/articles/2020/07/27/a-guide-to-molecular-standardization/; * MolVS is an example for RDKit - https://molvs.readthedocs.io/en/latest/guide/intro.html; * PubChem standardization - https://jcheminf.biomedcentral.com/articles/10.1186/s13321-018-0293-8; * ChemSpider standardization - https://jcheminf.biomedcentral.com/articles/10.1186/s13321-015-0072-8. The RDKit code is here:; * https://github.com/rdkit/rdkit/pull/2002; * https://github.com/rdkit/rdkit/blob/master/rdkit/Chem/MolStandardize/standardize.py; * https://github.com/rdkit/UGM_2018/blob/master/Presentations/Leung_GSoC_RDKit-MolVS_Integration.pdf. There are a few more recent articles on tautomers (including use of QM calculations to generate micro-pKa predictions):; * https://pubs.acs.org/doi/10.1021/acs.jcim.0c00232; * https://pubs.acs.org/doi/10.1021/acs.jcim.6b00338; * (InChI v2) https://pubs.acs.org/doi/abs/10.1021/acs.jcim.9b01080; * https://cactus.nci.nih.gov/tautomerizer/. As a first step, I'd suggest looking at the code in `src/ops` and submit a pull request for an OBOp that provides warnings for some simple things (e.g., carbon atoms beyond 4 bonds, total formal charge on a molecule isn't neutral, etc.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2334#issuecomment-798434217:352,guid,guide-to-molecular-standardization,352,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2334#issuecomment-798434217,6,"['guid', 'simpl']","['guide', 'guide-to-molecular-standardization', 'simple']"
Usability,"Thanks, Noel. I agree that it's probably not a bug, although it does mean you are interpreting SMILES strings differently to Daylight, which may not be what people expect. Do you know how other software handles these H's?. For my original purpose, a better query would be something like [Nv2H1], which is unambiguous (obviously once the other bug has been fixed). Coming from a background where our compounds are (nearly) always stored as SMILES, I'd probably been using the Dn descriptor a little lazily. If you can (almost) guarantee no explicit H's, it's phenomenally useful for generating simple queries for e.g. primary amines, pyridones etc. that are independent of tautomeric / protomeric state. Cheers,; Paul. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802037:593,simpl,simple,593,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802037,2,['simpl'],['simple']
Usability,"Thanks. I'll look into it. Before I do, if you write it out as SMILES, what; do you get?. On Tue, 11 Sep 2018 at 15:09, Semen Yesylevskyy <notifications@github.com>; wrote:. > This is the minimal example allowing to reproduce the problem:; >; > #include <openbabel/mol.h>; > #include <openbabel/isomorphism.h>; > #include ""openbabel/query.h""; > #include ""openbabel/obconversion.h""; >; > using namespace std;; >; > struct MyMol {; > vector<string> name;; > vector<int> element;; > vector<float> charge;; > vector<int> resid;; > vector<char> chain;; > vector<float> x;; > vector<float> y;; > vector<float> z;; > };; >; > // Convert custom molecule to OBMol; > void to_obmol(const MyMol& sel, OpenBabel::OBMol &mol); > {; > mol.Clear();; >; > // map of residues; > map<int,OpenBabel::OBResidue*> reslist;; >; > mol.BeginModify();; >; > for(int i=0;i<sel.element.size();++i){; >; > // Create new atom in this mol; > auto oba = mol.NewAtom();; >; > oba->SetAtomicNum(sel.element[i]);; > oba->SetPartialCharge(sel.charge[i]);; > oba->SetVector(10.0*sel.x[i],10.0*sel.y[i],10.0*sel.z[i]);; >; > // Create new residue if needed; > if(reslist.count(sel.resid[i])==0){; > OpenBabel::OBResidue* obr = mol.NewResidue();; > obr->SetNum(sel.resid[i]);; > obr->SetChain(sel.chain[i]);; > reslist[sel.resid[i]] = obr;; > }; >; > reslist[sel.resid[i]]->AddAtom(oba);; > reslist[sel.resid[i]]->SetAtomID(oba,sel.name[i]);; > }; >; > mol.ConnectTheDots();; > // Guess bond orders and aromaticity; > mol.PerceiveBondOrders();; >; > mol.EndModify();; >; > // Need to avoid recomputing partial charges on output; > mol.SetPartialChargesPerceived();; > }; >; > int main(int argc, char** argv); > {; > OpenBabel::OBMol src,sample1,sample2;; > // Read source molecule; > OpenBabel::OBConversion conv;; > conv.ReadFile(&src,""b.pdb"");; >; > // Read sample using babel; > conv.ReadFile(&sample1,""b_sample.pdb"");; >; > // Create another sample molecule by hand (it is identical to ""b_sample.pdb""); > MyMol mymol;; > mymol.name = {",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420307766:725,Clear,Clear,725,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420307766,1,['Clear'],['Clear']
Usability,"Thanks. It's not SWIG but Sphinx (and epydoc, which I use for Cinfony) that recognise this sort of docstring. But you may not have seen it as Python does not recognise it natively (i.e. python.informats.**doc** does not contain it). I'll leave this to Geoff to merge and then play with it a bit. I'll put it on the blog and we can see if we get some feedback on installation problems etc.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/30#issuecomment-30211079:350,feedback,feedback,350,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/30#issuecomment-30211079,2,['feedback'],['feedback']
Usability,Thanks. That's a pretty clear fix.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2596#issuecomment-1587733707:24,clear,clear,24,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2596#issuecomment-1587733707,2,['clear'],['clear']
Usability,"Thanks. Weird that it passes for me, but clearly wrong.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1568#issuecomment-302160242:41,clear,clearly,41,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1568#issuecomment-302160242,2,['clear'],['clearly']
Usability,"That worked, thank you very much. I didn't realise I had so many OpenBabel versions running on this thing. I'm rather new to command line, so I'll suspect the 'which' command will be very helpful.; I've aliased it to simply 'openbabel' for now, but I'll try and tidy up my system in future and change the default to the OpenBabel version that I want.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022192444:217,simpl,simply,217,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2446#issuecomment-1022192444,2,['simpl'],['simply']
Usability,"That's a great idea. I have to meet some deadlines first, but I'll see what I can come up with starting next week. Some of this work would help my own research code, too, so it's a clear win-win.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1895#issuecomment-426827467:181,clear,clear,181,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1895#issuecomment-426827467,2,['clear'],['clear']
Usability,"That's better, but we need to sort out the caching, which I previously reverted as it had broken existing behaviour around a local install. . If you run ""cmake"" and only afterwards run ""cmake -DCMAKE_INSTALL_PREFIX=whatever"", it will appear to build and install fine, but the rpaths will not be set correctly. I spent quite some time tracking down the origin of this regression. Could you describe what BINDINGS_ONLY is intended to do, as it's undocumented? There must be some way to solve the problem while preserving existing behaviour.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1977#issuecomment-487300310:444,undo,undocumented,444,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1977#issuecomment-487300310,2,['undo'],['undocumented']
Usability,"The AppVeyor thing is relatively new, but it's clearly a routine fail - since the Windows builds on GitHub are working, I'm going to ignore it.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2218#issuecomment-629654319:47,clear,clearly,47,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2218#issuecomment-629654319,2,['clear'],['clearly']
Usability,"The C# code is automatically generated by SWIG. Like the other language bindings it simply calls the native C++ OpenBabel library. As a result, it can not be used in Silverlight. You might want to check out webel instead, which is running on Silverlight at http://baoilleach.webfactional.com/site_media/webel/ (some functionality is missing at the moment due to maintainence upgrade). Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1523#issuecomment-281811216:84,simpl,simply,84,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1523#issuecomment-281811216,2,['simpl'],['simply']
Usability,"The application is number 2 in your list. ""2) to replicate this parallelepiped by translation in one/in multiple directions,"". I need to create a supercell (may need an even larger supercell n x n x n) to plugin in an electronic structure code for periodic systems (that doesn't use k-points). a. I am using (importing and exporting to CIF) only because it retains cell information; b. I am not using XYZ because the file itself doesn't retain cell information.; c. In principle I don't want to retain symmetry information although it may be useful in the future. VESTA seems to erase symmetry information after manipulating the cell and exporting the CIF file.; c. I am using OpenBabel programmatically, not the command line. I am using OpenBabel because it can read CIF files and store positions and cell information as a variable in my code (C++).; d. I am multiplying the unitcell with VESTA ""manually"" because OpenBabel cannot do it for me. If could use another programmatic library to multiply the cell I would use it. If I understand correctly the only difference between Mercury and VESTA is that Mercury produces CIF files that are better compliant and in particular understood without error from OpenBabel *library*. I have been looking for a programmatic library to generate crystal structures for a while (preferably in C or C++) but I couldn't find one. Thank you for all the work, but I think the bottom line is that VESTA is generating a well formed CIF file. ; I would be happy to use Mercury (need registration for download), or better yet a programmatic library to generate crystals if you can recommend one. (I am simply trying to avoid programming an ad hoc function to generate crystals myself, although I might end up doing that. I prefer to use a robust library that works with crystal symmetries and length units for example.)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733:1633,simpl,simply,1633,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2414#issuecomment-942024733,2,['simpl'],['simply']
Usability,"The code in `src/elements.cpp` GetAtomicNum() was rewritten to a set of switch statements - clearly many cases with capitalization need to be fixed (e.g., https://github.com/openbabel/openbabel/blob/master/src/elements.cpp#L257)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2333#issuecomment-798767474:92,clear,clearly,92,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2333#issuecomment-798767474,2,['clear'],['clearly']
Usability,"The dot notation in SMARTS is not supported by Open Babel. Hopefully it will be at some point, so I'll mark this as a feature request. Our docs should make this clear, though, so I'll also mark the docs to be fixed.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1612#issuecomment-323314445:161,clear,clear,161,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1612#issuecomment-323314445,2,['clear'],['clear']
Usability,"The fastsearch method uses fingerprints which describe molecules. This means, as you say, that the target of a fastsearch specified in the -s option has to be a molecule, i.e. SMILES - and SMARTS is not acceptable. I don't see that changing. The documentation and the error message, which is misleading, could do with improvement. I have altered the code in the SVN trunk so that now the error message is now:. Could not make a molecule from a1aaaaa1; This needs to be valid SMILES when using fastsearch.You can use the more versatile SMARTS in a normal substructure search. I've also altered the description of the format to make this clearer. Chris; . Original comment by: @chrismorl",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/819#issuecomment-281793873:636,clear,clearer,636,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/819#issuecomment-281793873,2,['clear'],['clearer']
Usability,"The first leak is fixed, the second is still in place.; Tested with latest trunk version (4012). I found the 'delete pLineEndBuf;' in the destructor commented out. If I uncomment it all leaks are gone for my testcases (most are for-loops with heavy OBConversion instantiation and ReadString usage.); I didnt look through all the OBConversion code, there might be cases where a delete of the pLineEndBuf in destructor segfaults, but for a simple OBConversion instantiation and ReadString usage the issue remains. Original comment by: runz",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/980#issuecomment-281796566:438,simpl,simple,438,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/980#issuecomment-281796566,2,['simpl'],['simple']
Usability,The issue with the tests is simply that you need to set some environment variables. I'll write them up on the wiki tomorrow - Noel. Original comment by: @baoilleach,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796352:28,simpl,simply,28,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/966#issuecomment-281796352,2,['simpl'],['simply']
Usability,The problem is clearly demonstrated on the image in attachment. The Dreading atom types on the right part of the image are correctly assigned by a commercial engine (Materials Studio) witch handle the fragment correctly automatically. The left part of the image shows OB results. OB was not able to identify the resonant bonds on the ionized aromatic cycle = atom types assignment is incorrect. I believe not only Dreading but the other force-fields atom type assignment will be incorrect as well. ![KAXWOV_inocrrect-atom_types](https://github.com/openbabel/openbabel/assets/55315298/e5f1d64f-6f6f-4dcc-8496-dddd567e3eaa),MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089792005:15,clear,clearly,15,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089792005,2,['clear'],['clearly']
Usability,"The problem is that the functions in data_utilities are not exposed from the openbabel DLL. On Linux, by default, everything is exposed, while on Windows you have to specify which ones to expose. More to the point, we tend to avoid extending the OB API unless necessary. I'd suggest you simply move the data_utilities.cpp out of the openbabel core and into the thermo target. Obviously there's no linking problem then. However, if you can make a case for keeping them where they are (e.g. are these functions of general use to OB users?), I'm happy to do the necessary to expose the functions.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/200#issuecomment-124572140:287,simpl,simply,287,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/200#issuecomment-124572140,2,['simpl'],['simply']
Usability,"The problem isn't with the OBDotNet.dll. It's with openbabel_csharp.dll. If; I were you, I would search my computer for all instances of this file and; consider which is being found when you run your application. On Mon, 28 Oct 2019 at 13:52, xjjius <notifications@github.com> wrote:. > Yes. I imported OBDotNet.dll to my NET project from openbabel-3.0.0; > directory. The C# code was built successfully. But l got the the error; > message above when I try to run it. In the 2.4.1 version, the same code; > runs perfectly..; >; > I have also tried the the Java binding using the same method in; > openbabel-3.0.0. It worked will.; >; > A simple test code:; >; > class Program; > {; > static void Main(string[] args); > {; > string molFile = ""N(CNC1)CC1"";; > OBConversion conv = new OBConversion();; > conv.SetInFormat(""smi"");; > OBMol mol = new OBMol();; > conv.ReadString(mol, molFile);; > int numberAtoms = (int)mol.NumAtoms();; >; > for (int i = 1; i <= numberAtoms; i++); > {; > OBAtom atom = mol.GetAtom(i);; > string label = atom.GetAtomType();; > uint hetero = atom.GetHeteroDegree(); // new method name for GetHeteroValence(); >; > Console.WriteLine($""{label} : {hetero}"");; > }; >; > Console.ReadLine();; > }; > }; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2068?email_source=notifications&email_token=AAALCGPTRYKWOTDHRQMP6Y3QQ3VBXA5CNFSM4JFP3FMKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOECM6E7I#issuecomment-546955901>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGJGSAN5UJSSOUWLKWLQQ3VBXANCNFSM4JFP3FMA>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2068#issuecomment-546998525:638,simpl,simple,638,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2068#issuecomment-546998525,2,['simpl'],['simple']
Usability,"The random numbers are *cough* a feature. For me on Windows, I have all; zeros for the first case, and a perfectly fine xyz file in the second.; Could you be more clear on which one crashed?. On 20 November 2017 at 18:16, hlambert17 <notifications@github.com> wrote:. >; > - [x ] I believe this to be a bug with Open Babel; > - This is a feature request; >; > Environment Information; >; > Open Babel version: 2.4.1.; > Operating system and version:; > My OS is; > Distributor ID: Ubuntu; > Description: Ubuntu 16.04.3 LTS; > Release: 16.04; > Codename: xenial; >; > I'm also getting the crash on RedHat; > LSB Version: :core-4.1-amd64:core-4.1-noarch; > Distributor ID: RedHatEnterpriseServer; > Description: Red Hat Enterprise Linux Server release 7.2 (Maipo); > Release: 7.2; > Codename: Maipo; >; > On both distribution, I installed the recommended packages on the; > openbabel website (Cairo, Eigen, SWIG, etc...); > Expected Behavior; >; > I'm trying to obtain the xyz cartesian coordinates for a molecule using; > the following command:; > obabel -:'C(CS(=O)(=O)O)C[As]CCO' -oxyz --gen3D; > or also:; > obabel -:'Cl- <http://CCO>Cl' -oxyz --gen3D; > Actual Behavior; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1694>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGVRIzBbTojk1uh0f_yeG1o_inEY0ks5s4cIRgaJpZM4Qkrqi>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1694#issuecomment-346045155:163,clear,clear,163,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1694#issuecomment-346045155,2,['clear'],['clear']
Usability,"The real problem was that the hydrogen atoms on the nitrogen atom were not correctly converted when writing out the results from obrotamer. A simple conversion also corrupted the file on output. (The atom ids were ""H 1"" instead of ""H1""). Now fixed in trunk. . Original comment by: @timvdm",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/802#issuecomment-281793571:142,simpl,simple,142,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/802#issuecomment-281793571,2,['simpl'],['simple']
Usability,"The simplicity of installation of openbabel is certainly nice, compared to rdkit.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2306#issuecomment-737038156:4,simpl,simplicity,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2306#issuecomment-737038156,2,['simpl'],['simplicity']
Usability,"The solution is much simpler than I've anticipated. There is `SWIG_PYTHON_2_UNICODE` variable that has to be defined to [support unicode in Python 2.x](http://www.swig.org/Doc3.0/Python.html). Although swig has to be at least 3.0.8 to work, which is the case for Anaconda - we should be fine. There shouldn't be any downside to this resolution for earlier versions.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/326#issuecomment-233581870:21,simpl,simpler,21,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/326#issuecomment-233581870,2,['simpl'],['simpler']
Usability,"The switch statement is generated by a Python script in the maintenance; repo (https://github.com/openbabel/maintenance/tree/master/scripts/elements).; A simple change should generate the uppercase versions. On Sat, 20 Mar 2021, 05:06 Aman Kumar, ***@***.***> wrote:. > Can i take this issue? @ghutchis <https://github.com/ghutchis>; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/2333#issuecomment-803250571>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AAALCGN7EHWSDHNDFPILIJDTEQUN3ANCNFSM4ZC3WLVQ>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2333#issuecomment-803289137:154,simpl,simple,154,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2333#issuecomment-803289137,2,['simpl'],['simple']
Usability,"There are a few example about how to use the OpenBabel Module here: https://open-babel.readthedocs.io/en/latest/UseTheLibrary/PythonDoc.html. Taking the SMILES example and adapting for .mol2, try using the following as a starting point:; ```python; from openbabel import openbabel. obConversion = openbabel.OBConversion(); obConversion.SetInAndOutFormats(""smi"", ""mol2""). mol = openbabel.OBMol(); obConversion.ReadString(mol, ""C1=CC=CS1""); mol.AddHydrogens(); openbabel.OBBuilder().Build(mol) # To get coordinates. # If you just want the string; mol2string = obConversion.WriteString(mol). # To save as a .mol2 file; obConversion.WriteFile(mol, ""out.mol2""); ```. Alternatively, you can use the `pybel` module, which is somewhat simplified:; ```python; from openbabel import pybel; mol = pybel.readstring(""smi"", ""C1=CC=CS1""); mol.addh(); mol.make3D(); mol.write(""mol2"", ""out.mol2""); ```. However, I believe it is much simpler to call the `obabel` executable:; ```sh; obabel -:""C1=CC=CS1"" --gen3D -O out.mol2; ```; which can be called from Python via:; ```python; import os; os.system(""obabel -:\""C1=CC=CS1\"" --gen3D -O out.mol2""); ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2351#issuecomment-817998811:727,simpl,simplified,727,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2351#issuecomment-817998811,4,['simpl'],"['simpler', 'simplified']"
Usability,"There is a peculiar observation that I made which is the following.; For simple compounds like benzamidine, the older and newer versions give correct NetCharge, but for a slightly complex molecule like the one I attached in the first message in the thread, both methods give zero charge.; I'm planning to test a few cases like benzoate anion and other anions with 3-4 rings, heteroatoms i.e. drug-like molecules. Thanks for sharing the references and insightful comments. I will try to find time to read and get back here soon in case of questions.; Best regards.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916590615:73,simpl,simple,73,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2404#issuecomment-916590615,2,['simpl'],['simple']
Usability,"There's a cascade at the moment with SDF (in particular) - it currently calls SSSR for aromaticity. Anyone who wants to take up the task of aromaticity detection from a breadth-first-search after simple ring detection is welcome. I just haven't had the time. Mol2 has fewer cascaded calls, since aromaticity is defined in the bonds (usually). One of the Google Summer of Code proposed projects is to replace Kekulize with a faster graph-based algorithm.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193363469:196,simpl,simple,196,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193363469,2,['simpl'],['simple']
Usability,"This don't believe this is an Open Babel bug. I don't know what version of Cairo you're using or whether you have the appropriate devel packages for that. The errors in the log above are:. ```; //usr/lib/x86_64-linux-gnu/libharfbuzz.so.0: undefined reference to `FT_Get_Var_Blend_Coordinates'; //usr/lib/x86_64-linux-gnu/libgtk-3.so.0: undefined reference to `g_log_structured_standard'; //usr/lib/x86_64-linux-gnu/libcairo.so.2: undefined reference to `FT_Get_Var_Design_Coordinates'; ```. I'd suggest you run `ccmake .` in your build directory and clear out the lines for:; ```; CAIRO_INCLUDE_DIR ; CAIRO_LIBRARY ; ```. By unsetting them, you'll build a version of Open Babel without Cairo (PNG) support, but I can guarantee it will build. Otherwise, you'll need to sort out the libcairo errors.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1838#issuecomment-391392437:550,clear,clear,550,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1838#issuecomment-391392437,2,['clear'],['clear']
Usability,"This is a DDL2 dictionary tag ; (symcif: http://oldwww.iucr.org/iucr-top/cif/cifdic_html/2/cif_sym.dic/index.html), which current OB code does not fully support. As Geoff said that tag is not supposed to be computer-readable, so the supplied CIF files are actually incomplete. But the ""_space_group.transform_*"" tags which should be used instead are not handled by openbabel right now (reading them is one thing, but the spacegroup routines would have to take those into account). It would be so much simpler if the files always included the unique Hall symbol, ot the list of transforms... All this being said, the list in spacegroup.txt does include all the origin choices 1 and 2 (e.g. ""P 4/n m m:1"" and ""P 4/n m m:2""). So I have now added a hack in cifformat.cpp, so that when a HM symbol is found an the _space_group.IT_coordinate_system_code is equal to '1' or '2', the HM symbol is appended with ':1' or ':2', which is then correctly interpreted by the spacegroup routines. This is available in SVN head. Since :1 and :2 probably are the most common cases for this tag, this should be helpful. Other values for this tag will generate an appropriate warning. Original comment by: @vincefn",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1152#issuecomment-281801325:501,simpl,simpler,501,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1152#issuecomment-281801325,2,['simpl'],['simpler']
Usability,"This is the minimal example allowing to reproduce the problem:. ```; #include <openbabel/mol.h>; #include <openbabel/isomorphism.h>; #include ""openbabel/query.h""; #include ""openbabel/obconversion.h"". using namespace std;. struct MyMol {; vector<string> name;; vector<int> element;; vector<float> charge;; vector<int> resid;; vector<char> chain;; vector<float> x;; vector<float> y;; vector<float> z;; };. // Convert custom molecule to OBMol; void to_obmol(const MyMol& sel, OpenBabel::OBMol &mol); {; mol.Clear();. // map of residues; map<int,OpenBabel::OBResidue*> reslist;. mol.BeginModify();. for(int i=0;i<sel.element.size();++i){. // Create new atom in this mol; auto oba = mol.NewAtom();. oba->SetAtomicNum(sel.element[i]);; oba->SetPartialCharge(sel.charge[i]);; oba->SetVector(10.0*sel.x[i],10.0*sel.y[i],10.0*sel.z[i]);. // Create new residue if needed; if(reslist.count(sel.resid[i])==0){; OpenBabel::OBResidue* obr = mol.NewResidue();; obr->SetNum(sel.resid[i]);; obr->SetChain(sel.chain[i]);; reslist[sel.resid[i]] = obr;; }. reslist[sel.resid[i]]->AddAtom(oba);; reslist[sel.resid[i]]->SetAtomID(oba,sel.name[i]);; }. mol.ConnectTheDots();; // Guess bond orders and aromaticity; mol.PerceiveBondOrders();. mol.EndModify();. // Need to avoid recomputing partial charges on output; mol.SetPartialChargesPerceived();; }. int main(int argc, char** argv); {; OpenBabel::OBMol src,sample1,sample2;; // Read source molecule; OpenBabel::OBConversion conv;; conv.ReadFile(&src,""b.pdb"");. // Read sample using babel; conv.ReadFile(&sample1,""b_sample.pdb"");. // Create another sample molecule by hand (it is identical to ""b_sample.pdb""); MyMol mymol;; mymol.name = {""C"", ""C"", ""C"", ""C"", ""C"", ""C""};; mymol.element = {6, 6, 6, 6, 6, 6};; mymol.charge = {0, 0, 0, 0, 0, 0};; mymol.resid = {1, 1, 1, 1, 1, 1};; mymol.chain = {' ', ' ', ' ', ' ', ' ', ' '};; mymol.x ={ -0.0584, 0.0520, 0.0328, -0.0957, -0.2058, -0.1883}; // In nm! Converted in to_obmol; mymol.y = {0.3470, 0.4363, 0.5748, 0.628, 0.5431, ",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420287938:504,Clear,Clear,504,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420287938,1,['Clear'],['Clear']
Usability,"This isn't a bug, but the behaviour is not very clear from the docs. If specified as -s ""O=c1cc[nH]c(=O)n1O"", then the [nH] is interpreted with the SMARTS meaning, i.e. must have exactly one hydrogen attached. If you drop the H, then you hit both. On the other hand, if the molecule is stored in a file query.smi, and you use -s query.smi, then it behaves in the first place as intended.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1318#issuecomment-356420893:48,clear,clear,48,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1318#issuecomment-356420893,2,['clear'],['clear']
Usability,This isn't a bug. You need:; `#include <openbabel/babelconfig.h>`. This sets appropriate HAVE_* macros. As far as LBFGS.h - that's clearly a bug - you need to make sure it's an installable header.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2098#issuecomment-559824947:131,clear,clearly,131,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2098#issuecomment-559824947,2,['clear'],['clearly']
Usability,"This solved the problem, thanks a lot!; However, I have to admit that this is not intuitive at all. Is there any chapter of documentation which describes all the magic, which happens when new molecule is constructed?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420911523:82,intuit,intuitive,82,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420911523,2,['intuit'],['intuitive']
Usability,"This will undoubtedly need more dependencies installed (C#, etc.) but I'll tackle those as they come up.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2183#issuecomment-620689648:10,undo,undoubtedly,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2183#issuecomment-620689648,2,['undo'],['undoubtedly']
Usability,Though I guess we need to improve the docs to make this clear...so both a bug *and* a feature request.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1616#issuecomment-323313988:56,clear,clear,56,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1616#issuecomment-323313988,2,['clear'],['clear']
Usability,"To be clear, I definitely agree that it's a problem and needs to be fixed. However I'm not familiar with that part of the code. Perhaps Geoff can comment further. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/892#issuecomment-281795293:6,clear,clear,6,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/892#issuecomment-281795293,2,['clear'],['clear']
Usability,"To be clear, my thought is to change this patch so it can be used (even if with effort) to generate a valid CML file using the low-level API (as well as the other formats which don't need a header/footer) and keep the existing pybel code valid for the formats which it does support. I don't plan to touch the pybel code with this patch. Some other patch will change it to generate valid CML output, which it doesn't currently do.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455447346:6,clear,clear,6,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-455447346,2,['clear'],['clear']
Usability,"To be honest I kind of agree with you on the whole Dn thing - using queries that rely on explicit vs implicit H's does just sound like a bad idea. Perhaps I shouldn't have waxed quite so lyrical in my previous response. I have been caught out a couple of times even in a SMILES + Daylight environment - deuterated compounds being one example.... To answer your question, if you do make the assumption that all H's are implicit, then a query for a primary amine is as simple as [ND1][CX4], and you can capture both pyridone tautomers with [nD2]c~[OD1]. ""Dn"" becomes a synonym for ""is bonded to n heavy atoms"", which can come in very handy. But to reiterate, on reflection I think this is slightly sloppy querying on my part, and I certainly wouldn't suggest changing the way OB works just so that these queries work as expected. (Though I'd be interested to know how many other people use similar kinds of queries). I do think it would be worth finding out what some of the other major software vendors do with the H descriptor in a SMILES string though, even if this is just a matter of internal representation. To put it another way, if everybody else does it the same way Daylight does, is there a good reason OB is different?. Anyway, thanks for making me think this through a bit more rigorously!. Original comment by: *anonymous",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802039:467,simpl,simple,467,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1188#issuecomment-281802039,2,['simpl'],['simple']
Usability,"To clear up the issue, do you still have a problem and use case for converting SMILES to Fasta @shahik? I still think that going that way is not something that we could expect OpenBabel to do so my suggestion is to close this issue.; On the other hand, Fasta to SMILES or any other ""normal chemistry format"" should work, without using -j in my opinion, but that is a different issue and it would be nice with example files from a real scenario. So if you have good examples there @shahik I would suggest creating a new issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2359#issuecomment-827444312:3,clear,clear,3,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2359#issuecomment-827444312,2,['clear'],['clear']
Usability,"To do this, we'd have to implement the AM1 semiempirical quantum method, which seems impractical. At the moment, there are several charge models implemented:. * eem Assign Electronegativity Equilization Method (EEM) atomic partial charges. Bultinck B3LYP/6-31G*/MPA; * eem2015ba Assign Electronegativity Equilization Method (EEM) atomic partial charges. Cheminf B3LYP/6-311G/AIM; * eem2015bm Assign Electronegativity Equilization Method (EEM) atomic partial charges. Cheminf B3LYP/6-311G/MPA; * eem2015bn Assign Electronegativity Equilization Method (EEM) atomic partial charges. Cheminf B3LYP/6-311G/NPA; * eqeq Assign EQEq (charge equilibration) partial charges.; * fromfile Assign charges from file containing {'atom-name', charge} pairs; * gasteiger Assign Gasteiger-Marsili sigma partial charges; * mmff94 Assign MMFF94 partial charges; * none Clear all partial charges; * qeq Assign QEq (charge equilibration) partial charges (Rappe and Goddard, 1991); * qtpie Assign QTPIE (charge transfer, polarization and equilibration) partial charges (Chen and Martinez, 2007). There are actually quite a few EEM methods implemented. I'd be willing to implement the BCC part of AM1-BCC - as in, you can parse an AM1 calculation from MOPAC and generate AM1-BCC charges. But I think there are better models out there. (eem2015* are very good IMHO)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1571#issuecomment-302443905:849,Clear,Clear,849,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1571#issuecomment-302443905,1,['Clear'],['Clear']
Usability,"To make the problem simple and clearly visible, I had separated the issue form CIF file usage and I will demonstrate it on .XYZ file.; [KAXWOV_cation_xyz.txt](https://github.com/openbabel/openbabel/files/15184837/KAXWOV_cation_xyz.txt); The file in attachment describes a cation separated from a CIF file.; I had proceed it by following command:; obabel.exe KAXWOV_cation.xyz -obgf -OKAXWOV_cation.bgf; The code had reported following issues:. _*** Open Babel Warning in OpenBabel::OBMol::PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is KAXWO; V)_. The generated .bgf file contains incorrect Dreading ff atom type assignments:; N_2 instead of N_R; C_2 instead of C_R; C_3 instead of C_R. After removing the hydrogen on the N atom, all works OK (can be tested by following file):; [KAXWOV_neutral_xyz.txt](https://github.com/openbabel/openbabel/files/15184893/KAXWOV_neutral_xyz.txt). I woul like to be able to specify the fragment is ionized or let OB to identify this.; And correctly identify the resonant bonds in the ionized fragments.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089772131:20,simpl,simple,20,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2691#issuecomment-2089772131,4,"['clear', 'simpl']","['clearly', 'simple']"
Usability,"To really use the potentials of OpenBabel, the INSTALL and README files are important reads, otherwise people will miss big parts of the installation e.g. the bindings and depictions. If there should be an install script, I think it should at least ask for a few common installation options. Also, I've never had make test not fail. At all my attempts, at least test_ffgaff_1 fails so then the install script won't install anything anyway with no clear indication. (With no clear indication, I mean something in the lines of ""Test(s) failed so OpenBabel will not be installed, to force installation, type 'sudo make install'"").",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/24#issuecomment-24222682:447,clear,clear,447,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/24#issuecomment-24222682,4,['clear'],['clear']
Usability,"Travis is simply intended to guard against test failures. To actually deal with them, you need to reproduce the failure locally. There is more info on running the tests at: https://open-babel.readthedocs.io/en/latest/Contributing/Testing.html. This describes how to run an individual test.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1923#issuecomment-462028992:10,simpl,simply,10,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1923#issuecomment-462028992,2,['simpl'],['simply']
Usability,"Try to replicate the following. ```shell; $ obabel -:""c1ccccc1"" -O aromatic.cml -A; 1 molecule converted; $ obabel aromatic.cml -ocan; c1ccccc1	; 1 molecule converted; ```. as observed with OpenBabel (version 3.1.1 provided by Debian 13/trixie). ----. Side notes:. - dash, colon, pairwise single/double quotes in `-:""c1ccccc1""` already indicate to OpenBabel ""the input enclosed by the quotes is going to be a SMILES string"". - if the file extension is one described by the manual (cf. [readthedocs](https://open-babel.readthedocs.io/en/latest/)), the explicit indication can be dropped. Indeed, `-icml` in the instruction `obabel -icml aromatic_cml.txt -osmi` only was necessary because the input file *of .cml syntax* uses a non-conventional file extension for a .cml, namely `.txt`. By similar token: the definition `-O test.png` of file name and file format is more compact. - check if your workflow allows to substitute old openbabel 2.4.1 by a more recent version of the program. Pick an executable from the [release page](https://github.com/openbabel/openbabel/releases). Many Linux distributions equally provide a package, the hourly updated survey by [repology.org](https://repology.org/project/openbabel/packages) can be a guide:. [![Packaging status](https://repology.org/badge/vertical-allrepos/openbabel.svg?exclude_unsupported=1&&columns=4)](https://repology.org/project/openbabel/versions)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819519293:1232,guid,guide,1232,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2646#issuecomment-1819519293,2,['guid'],['guide']
Usability,"UNL 3lcs_prot.pdb -c; 1500; ```. So I resort to AWK to extract them separately (attached below), i.e. ```shell; $ awk '{if ($0 ~ /UNK/) print}' 3lcs_prot.pdb > UNK.pdb; $ awk '{if ($0 ~ /UNL/) print}' 3lcs_prot.pdb > UNL.pdb; ```. but their individual display e.g., in Jmol does not look pretty. For a protein structure I anticipate a couple of unbounded / unlinked molecules of water, perhaps one/a few small ligands; but there are bit too many atoms/too large ensembles to feel comfortable here. In addition, (UNK_detail), there are a couple of motifs in the structure with added hydrogens which merit a check. E.g., the cyclopropane -- not that it is impossible, but for its ring strain less likely to be seen in a naturally occurring compound. The same frame equally features a carbon exceeding tetravalence .and. hydrogens seemingly sharing the same position; which is not good, chemically speaking. The small molecules [the report](https://www.rcsb.org/structure/3LCS) mentions as independent from the protein are not clearly visible (yet). So I thought one could split the original file (not yet protonated) into molecules Open Babel recognizes as separate:. ```shell; $ obabel 3lcs.pdb --separate -O fragment.pdb -m; ==============================; *** Open Babel Warning in PerceiveBondOrders; Failed to kekulize aromatic bonds in OBMol::PerceiveBondOrders (title is 3lcs.pdb). 142 molecules converted; 142 files output. The first is fragment1.pdb; ```. There are some which are large:. ```shell; $ wc -l fragment*.pdb | sort -k 1 -rn | head; 11135 total; 5517 fragment.pdb; 1422 fragment1.pdb; 894 fragment19.pdb; 832 fragment9.pdb; 502 fragment17.pdb; 468 fragment7.pdb; 274 fragment5.pdb; 224 fragment11.pdb; 200 fragment13.pdb; ```. -- fragment13.pdb includes the/a cyclopropane -- yet quite a number which are small (water), too:. ```shell; $ wc -l fragment*.pdb | sort -k 1 -n | grep ""5 frag"" -c; 122; $ wc -l fragment*.pdb | sort -k 1 -n | head; 5 fragment100.pdb; 5 fragment101.pdb; 5",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1974761024:1363,clear,clearly,1363,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2677#issuecomment-1974761024,2,['clear'],['clearly']
Usability,"Wait a second. Wait a second. The penny has just dropped. You are building from the wrong directory. It should be:. tar -xf openbabel-2.3.0.tar.gz --gunzip; mkdir build; cd build; cmake -DCMAKE_INSTALL_PREFIX=../openbabel-install ../openbabel-2.3.0. I understand now why you did this. In our installation instructions we talk about a ""src"" directory. I didn't mean the ""src"" directory in the openbabel tar.gz. I'll update the installation instructions to be more clear. Can you let me know if this works for you... Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1072#issuecomment-281799941:463,clear,clear,463,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1072#issuecomment-281799941,2,['clear'],['clear']
Usability,"Was all that you wanted to do filter out the error messages? In that case, a simple `obabel check01.smi -ocan -e 2>/dev/null` would do. Or `obabel check01.smi -O result01.can -e` to get the output in a file. I thought you needed to know which input SMILESs that didn't convert properly.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081651812:77,simpl,simple,77,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2455#issuecomment-1081651812,2,['simpl'],['simple']
Usability,"We don't have documentation of the keys anywhere, which is the important part of being able to use the files to create an actually usable data structure. (IOW schrodinger/maeparser deals with the syntax but not the semantics.). I think this is a good idea, but it is probably on us to first document or perhaps even implement.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1803#issuecomment-375453991:131,usab,usable,131,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1803#issuecomment-375453991,2,['usab'],['usable']
Usability,"What I'm trying to do is read in an arbitrary number of xyz files (thousands) each representing the reactants of a reaction. Then I have atom indices of the atoms that are involved in each reaction and I'm trying to generate a vector representation of each of those atoms using things like atomic #, # of connections, hybridization, and similar information of atoms it's bonded to. Then I aggregate the vector representations of the atoms involved in each reaction into a vector representation of each reaction as a whole. Then I use those reaction vector representations as data in a machine learning pipeline. Thanks @baoilleach, I tried keeping a reference to each reactants Molecule in my Reaction class (which I had been planning on doing anyway but hadn't remembered and hadn't needed to use yet) and that seems to keep all of the Atom instances valid at least in my initial tests involving what hadn't worked previously. Destroying all atoms owned by a Molecule in the Molecule's destructor seems like reasonable design but is that documented anywhere? If not should it be added somewhere (by me or someone else)?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1602#issuecomment-317216423:593,learn,learning,593,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1602#issuecomment-317216423,2,['learn'],['learning']
Usability,"What happens is that some minimalist CIF files do not list either the Hall name, or give a list of transforms. So all we have is the HM name, and a separate origin choice. If think I can handle it simply by adding the :1 extension to the HM name - which I added to OB yesterday. I'll just have to take care of removing the "":n"" extension when exporting the HM name for the formats that use it (currently: pdb, cif, mmcif). Original comment by: @vincefn",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1152#issuecomment-281801331:197,simpl,simply,197,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1152#issuecomment-281801331,2,['simpl'],['simply']
Usability,"While I understand the concept, this would be extremely difficult. Many formats lack coordinates, much less periodic boundary conditions. Is a molecule identical if the coordinates have simply shifted? etc. I'm happy to consider a pull request, but I think you need to carefully consider what ""equals"" means in the context of an OBMol or Pybel Molecule.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2713#issuecomment-2260862155:186,simpl,simply,186,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2713#issuecomment-2260862155,2,['simpl'],['simply']
Usability,"While it's clearly not a widely used format, I'm hesitant to merge a change that will now fail on old text-based responses. . Shouldn't you check if the response is non-numeric and handle with the existing code and then handle with the new code if it's a number? That seems the best solution, IMHO.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1596#issuecomment-313691663:11,clear,clearly,11,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1596#issuecomment-313691663,2,['clear'],['clearly']
Usability,"Will do. On Wed, 14 Mar 2018, 17:26 David Koes, <notifications@github.com> wrote:. > master is not generating correct atom types when outputting pdbqt files.; > This is because the pdbqt writer works on copies (possibly fragments) of; > the original molecule. The copies have their perception flags reset. By; > default, nonpolar hydrogens are removed when outputting pdbqt files. When; > the aromaticity flags are recomputed on the molecule with the deleted; > hydrogens, atoms that should be aromatic are not marked as such.; >; > Note that this is a regression from 2.4. My suspicion is that there is a; > difference in how the new aromatic typer is dealing with molecules with; > deleted hydrogens. I would appreciate it if @baoilleach; > <https://github.com/baoilleach> could take a look.; >; > I think this fix is good in addition to any fixes that may be made to the; > aromatic typer as it will prevent an unnecessary recomputation of; > aromaticity, but would appreciate feedback. A test case is provided; > (without the fix the phenyl ring of the tyrosine is not marked aromatic).; > ------------------------------; > You can view, comment on, or merge this pull request online at:; >; > https://github.com/openbabel/openbabel/pull/1790; > Commit Summary; >; > - fix bug with pdbqt atom typing; > - pdbqt testcase; >; > File Changes; >; > - *M* src/formats/pdbqtformat.cpp; > <https://github.com/openbabel/openbabel/pull/1790/files#diff-0> (6); > - *M* test/testbabel.py; > <https://github.com/openbabel/openbabel/pull/1790/files#diff-1> (66); >; > Patch Links:; >; > - https://github.com/openbabel/openbabel/pull/1790.patch; > - https://github.com/openbabel/openbabel/pull/1790.diff; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/pull/1790>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGX4j8B-DR0oprbp0HUfAan5t-v-1ks5teVLCgaJpZM4Sq25L>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1790#issuecomment-373112606:980,feedback,feedback,980,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1790#issuecomment-373112606,2,['feedback'],['feedback']
Usability,"Will test the latest revision on branch. Just FMI here, is this simply a case of a malformed input file or is it a bug in OB?. Original comment by: @baoilleach",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/851#issuecomment-281794389:64,simpl,simply,64,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/851#issuecomment-281794389,2,['simpl'],['simply']
Usability,"Without knowing the full specifications of the MOL2 file format it looks like OpenBabel is accepting the aromaticity specified in the infile and hence set the ""AromaticityPerceived"" flag to true which in turn will make IsAromatic to just report the values from the file.; The SMILES reader doesn't ""trust"" the incoming aromaticity designation since different toolkits have different aromaticity models so when you bounce through SMILES, OpenBabel unsets the ""AromaticityPerceived"" which is why IsAromatic finds the aromatic atoms.; So the simplest solution for you is to unset the flag before calling IsAromatic. (I also change the iteration to use pybel's mol.atoms to show a different way of iterate over atoms...); ```python; >>> [int(atom.OBAtom.IsAromatic()) for atom in mol.atoms]; [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; >>> mol.OBMol.SetAromaticPerceived(False); >>> [int(atom.OBAtom.IsAromatic()) for atom in mol.atoms]; [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177258041:539,simpl,simplest,539,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2508#issuecomment-1177258041,2,['simpl'],['simplest']
Usability,"Without working knowledge about the `.fasta` format, I simply provided a sequence like `ATCG`, requested to OpenBabel to convert this into a joined SMILES string (`-j`, or `--join`) and to write a `.sdf` for visual inspection in Jmol, too. The result is ambivalence. For one, the result already looks «DNA-like» in a ladder-like motif:. ![test](https://user-images.githubusercontent.com/19709084/116211601-831fc480-a733-11eb-8511-1cec5160032b.png). For the other side, the output is about _two_ molecules instead of the single one I anticipated. In the SMILES, this is marked by the dot laying on the floor; this syntax pattern is seen elsewhere, e.g., to describe co-crystals (presence of more than one molecule in a model, for example a remaining solvent molecule), too. So I speculate, this is / might be «common sense» for the typical user of `.fasta` files (which I'm not), not necessarily an error in OpenBabel. It can't be all day Fortran (for its typical leading safeguard instruction `implicit none`) ... [2021-04-27.zip](https://github.com/openbabel/openbabel/files/6383115/2021-04-27.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2359#issuecomment-827433933:55,simpl,simply,55,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2359#issuecomment-827433933,2,['simpl'],['simply']
Usability,Wow. The previous code was impressively convoluted. The new code is much clearer.,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1797#issuecomment-375130274:73,clear,clearer,73,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1797#issuecomment-375130274,2,['clear'],['clearer']
Usability,"Yeah, I know ther are no tests, I did this on my Windows machine at work and I'm not in complete agreement with the build system... I'll try to add a test shortly, a simple one is to run gen2D on [H+].CC[O-].CC[O-] and make sure that all atoms have unique x- and y-positions (that is the real problem, the long bonds are just a symptom). Before the change I get the molfile (notice the coordinates for the last three atoms):; ; OpenBabel09241813522D; ; 7 4 0 0 0 0 0 0 0 0999 V2000; 0.8210 -0.3437 0.0000 H 0 3 0 0 0 0 0 0 0 0 0 0; 9.9282 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 8.1962 -2.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 6.4641 -1.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; 6.4641 -6.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 6.4641 -6.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 6.4641 -6.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; 2 3 1 0 0 0 0; 3 4 1 0 0 0 0; 5 6 1 0 0 0 0; 6 7 1 0 0 0 0; M CHG 3 1 1 4 -1 7 -1; M END. After the change I got:. ```; OpenBabel09241813522D. 7 4 0 0 0 0 0 0 0 0999 V2000; 3.2321 -3.0000 0.0000 H 0 3 0 0 0 0 0 0 0 0 0 0; 4.9641 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 4.0981 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 3.2321 -0.5000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; 2.2321 -1.0000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 1.3660 -0.5000 0.0000 C 0 0 0 0 0 0 0 0 0 0 0 0; 0.5000 -1.0000 0.0000 O 0 5 0 0 0 0 0 0 0 0 0 0; 2 3 1 0 0 0 0; 3 4 1 0 0 0 0; 5 6 1 0 0 0 0; 6 7 1 0 0 0 0; M CHG 3 1 1 4 -1 7 -1; M END; ```",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957463:166,simpl,simple,166,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1890#issuecomment-423957463,2,['simpl'],['simple']
Usability,"Yes - this is working as intended. 'C' matches aliphatic carbon, so won't match benzene whether presented as Kekule or aromatic. Feel free to comment if not clear.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1065#issuecomment-306206550:157,clear,clear,157,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1065#issuecomment-306206550,2,['clear'],['clear']
Usability,"Yes, clearly a ""make install"" target for Travis would be useful - it would have caught this one.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/1617#issuecomment-323824183:5,clear,clearly,5,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/1617#issuecomment-323824183,2,['clear'],['clearly']
Usability,"Yes, it is not a clear win, but setting things to zero doesn't automatically mask memory errors - they may still segfault and in this case it become easier to debug since the bug is reproducible. I was instigated to put these changes in after tracking down a bug that would have been much easier to find if the memory had been zero alloced. Some of these changes are not slower - for example when the calloc is replacing individually setting each element of the array to zero.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/pull/2204#issuecomment-625898046:17,clear,clear,17,http://openbabel.org/,https://github.com/openbabel/openbabel/pull/2204#issuecomment-625898046,2,['clear'],['clear']
Usability,"You are correct that I must have given the wrong example input to match output. I tried the simplify the input as much as possible to reproduce the problem, and must have used a prior version of the input. However, the output you show has 4 more hydrogens in the first line then the second when passed through obabel again to get the MW. Apparently the problem is not in the output of the tautomer, but rather the reparsing of that output when used as input. It does work correctly with the ismy parser, but not the ismi parser. So the bug is somewhere other than where I thought.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/322#issuecomment-305345111:92,simpl,simplify,92,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/322#issuecomment-305345111,2,['simpl'],['simplify']
Usability,"You clearly have multiple versions of Python on your system. I don't know what version of Python you're using or what installed `openbabel`. I know that neither the source package, or `conda-forge` would install a _openbabel.cpython-38-darwin.so file, which is clearly from an old binary. I personally recommend using anaconda, which IIRC installs into a separate path, e.g. `/usr/local/anaconda/bin/python`. The `conda-forge` channel is updated within hours of a release:; `conda install -c conda-forge openbabel`. My suggestion for you would be to `rm -rf /usr/local/lib/python3.8/site-packages/openbabel*` - that install is clearly linked to old Open Babel binaries.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2244#issuecomment-636352251:4,clear,clearly,4,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2244#issuecomment-636352251,6,['clear'],['clearly']
Usability,"You may be correct. It's for exactly this reason that we had an extensive beta period at the release of 3.0 to solicit feedback like this. Changing it now again would be disruptive. When Open Babel 4.0 is being prepared, please raise this issue.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2216#issuecomment-626613645:119,feedback,feedback,119,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2216#issuecomment-626613645,2,['feedback'],['feedback']
Usability,"Your are right! A user can handle the functionality by himself, that's what I did in my own code to fix the bug. From another side, I think that convenience is important part of any libraries API. Users used to have such functionality: dictionaries in python, boost property tree etc. all of them have get(<default>) methods in API. I hope, that the solution I've proposed can be safe and convenient solution for users of your package (feedback is very welcome).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1913#issuecomment-448530709:436,feedback,feedback,436,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1913#issuecomment-448530709,2,['feedback'],['feedback']
Usability,"Your right: See the point Noel but I missed this back in February --when I was ; rushing through this. The example on the OBRINGS web page had two successive passages one where it ; assigned; and another where it read in the GetData(""RingList""). I naively (without ; thinking through it) appended these with thinking about . ""RingList"" issue. I subsequently resolved this ----eliminating the GetData(""RingList""). As you suggest elimination the GetData statement. --and merely using . vector<OBRing*> vr;; vr=mol.GetSSSR();; vector<OBRing*>::iterator i;; vector<int>::iterator j; for (i=vr.begin(); i !=vr.end();i++); {; for(j= (*i)->_path.begin(); j!=(*i)->_path.end();++); cout << *j << ' ';; cout <<end;; }. Does indeed give you 1 2 3 4 5 6 as the correct ring atom numbers e.g. for ; C6H6.smi as input. Have subsequently incorporated variants of this into pharmacophore point ; perception code. Thanks for your feedback. 'My bad' on this one. Case closed-my error. ________________________________; From: Noel O'Boyle <baoilleach@users.sf.net>; To: [openbabel:bugs] <865@bugs.openbabel.p.re.sf.net>; Sent: Sat, May 11, 2013 3:37:02 AM; Subject: [openbabel:bugs] #865 OBRing: Issue-retrieving atoms in each of the ; smallest set of smallest rings. I don't get why you assign vr, but then use mol.GetData(""RingList"") instead.; But anyway, I believe that the cause of your problem is that ; mol.GetData(""RingList"") returns NULL in the case where there is no such data. ; You forgot to check for NULL before using it in the loop.; Marking as pending....; ________________________________; ; [bugs:#865] OBRing: Issue-retrieving atoms in each of the smallest set of ; smallest rings; Status: pending; Labels: OBRing ; Created: Sun Feb 24, 2013 06:09 PM UTC by Dannil; Last Updated: Sat May 11, 2013 08:57 AM UTC; Owner: Noel O'Boyle; Hi guys---; I am in the process of incorporating some 'automatic' 3D-pharmacophore ; perception code into one of my programs. Nearly all works---except for the ; percept",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1245#issuecomment-281803282:914,feedback,feedback,914,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1245#issuecomment-281803282,2,['feedback'],['feedback']
Usability,[H] has to be treated as a special case. Thank you for the clear exposition of this overlooked edge case. Corrected in r3646 in the trunk code. Original comment by: @chrismorl,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/976#issuecomment-281796501:59,clear,clear,59,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/976#issuecomment-281796501,2,['clear'],['clear']
Usability,"]);; }. mol.ConnectTheDots();; // Guess bond orders and aromaticity; mol.PerceiveBondOrders();. mol.EndModify();. // Need to avoid recomputing partial charges on output; mol.SetPartialChargesPerceived();; }. int main(int argc, char** argv); {; OpenBabel::OBMol src,sample1,sample2;; // Read source molecule; OpenBabel::OBConversion conv;; conv.ReadFile(&src,""b.pdb"");. // Read sample using babel; conv.ReadFile(&sample1,""b_sample.pdb"");. // Create another sample molecule by hand (it is identical to ""b_sample.pdb""); MyMol mymol;; mymol.name = {""C"", ""C"", ""C"", ""C"", ""C"", ""C""};; mymol.element = {6, 6, 6, 6, 6, 6};; mymol.charge = {0, 0, 0, 0, 0, 0};; mymol.resid = {1, 1, 1, 1, 1, 1};; mymol.chain = {' ', ' ', ' ', ' ', ' ', ' '};; mymol.x ={ -0.0584, 0.0520, 0.0328, -0.0957, -0.2058, -0.1883}; // In nm! Converted in to_obmol; mymol.y = {0.3470, 0.4363, 0.5748, 0.628, 0.5431, 0.4044};; mymol.z = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};; // CreateOBMol; to_obmol(mymol,sample2);. // Work with babel molecule; OpenBabel::OBQuery* query = OpenBabel::CompileMoleculeQuery(&sample1);; OpenBabel::OBIsomorphismMapper *mapper = OpenBabel::OBIsomorphismMapper::GetInstance(query);; OpenBabel::OBIsomorphismMapper::Mappings maps;; mapper->MapAll(&src,maps);. std::cout << ""for babel found "" << maps.size() << "" unique mappings"" << std::endl;. // Work with ""custom"" molecule; query = OpenBabel::CompileMoleculeQuery(&sample2);; mapper = OpenBabel::OBIsomorphismMapper::GetInstance(query);; maps.clear();; mapper->MapAll(&src,maps);; std::cout << ""for custom found "" << maps.size() << "" unique mappings"" << std::endl;. delete mapper;; delete query;. // Write down custom molecule to demonstrate that it is Ok; conv.WriteFile(&sample2,""custom.pdb"");; }. ```. The code outputs:. for babel found 24 unique mappings; for custom found 0 unique mappings. Expected output is 24 in both cases. OpenBabel version is 2.4.90. Here are the PDB files used:; [pdb.zip](https://github.com/openbabel/openbabel/files/2371329/pdb.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420287938:2602,clear,clear,2602,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420287938,2,['clear'],['clear']
Usability,"_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:13552,Simpl,Simplify,13552,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['Simpl'],['Simplify']
Usability,"_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:11260,Simpl,Simplify,11260,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['Simpl'],['Simplify']
Usability,"b 3cd9ba8b 3b1ca892 3b1ca892 3a336052 275de761 ; 1c66c562 18eb4a1e 1170108b 1170108b 1170108b 1170108b ; 1170108b 1170108b 1170108b 09639408 094b2d63 026490f7"".Replace(Environment.NewLine, string.Empty);. string EthanolSmiles = ""CCO"";; string EthanolFP2 = @""00000000 00000000 00000000 00000000 00000000 00000000 ; 00000000 00000000 00000000 00000000 00000000 40000000 ; 00000000 00000000 00000000 00080008 00000000 00000000 ; 00000000 00000000 00000000 00000000 00000000 00000000 ; 00000000 00000000 00000000 00000000 00000000 00000000 ; 00000000 00000000"".Replace(Environment.NewLine, string.Empty);. VectorUInt res = new VectorUInt();. var blocks = KeggECFP2.Split(' ').ToList();; blocks.Reverse();; foreach (string block in blocks); {; uint uintValue = uint.Parse(block, System.Globalization.NumberStyles.HexNumber);; //byte[] bb = BitConverter.GetBytes(uintValue);; //Debug.WriteLine(formatter, uintValue, BitConverter.ToString(bb));. //parsed.Add(Big2Little3(uintValue));; res.Add(uintValue);; }. using (OBConversion conv = new OBConversion()); using (OBMol mol = new OBMol()); using (OBFingerprint fp = OBFingerprint.FindFingerprint(""ECFP2"")); using (VectorUInt vec = new VectorUInt()); {; conv.SetInFormat(""smi"");; mol.Clear();; conv.ReadString(mol, KeggSmiles);; fp.GetFingerprint(mol, vec);. System.Collections.Generic.List<uint> cmpFP = new System.Collections.Generic.List<uint>(vec);; //cmpFP.Reverse();. for (int i = 0; i < cmpFP.Count; i++); {; Debug.WriteLine(formatter,; i,; blocks[i].ToUpper(),; BitConverter.ToString(BitConverter.GetBytes(cmpFP[i])).Replace(""-"", string.Empty),; BitConverter.ToString(BitConverter.GetBytes(Big2Little3(cmpFP[i]))).Replace(""-"", string.Empty),; BitConverter.ToString(BitConverter.GetBytes(res[i])).Replace(""-"", string.Empty),; BitConverter.ToString(BitConverter.GetBytes(Big2Little3(res[i]))).Replace(""-"",string.Empty));; }. byte[] bytes = Converter.ToByteArray(vec);. for (int i = 0; i < vec.Count; i++); {; Debug.Assert(vec[i] == res[i]);; }; }; }; `",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2023#issuecomment-533148861:3384,Clear,Clear,3384,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2023#issuecomment-533148861,1,['Clear'],['Clear']
Usability,"bel-2.3.1/cmake/modules/UsePythonTest.cmake:54:31; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:25; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at test/CMakeLists.txt:174 (include):; > > Syntax Warning in cmake code at; > > ; > > /Users/YujieTian/Downloads/openbabel-2.3.1/cmake/modules/UsePythonTest.cmake:57:39; > > ; > > Argument not separated from preceding token by whitespace.; > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:2366,Simpl,Simplify,2366,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Simpl'],['Simplify']
Usability,"ce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DAT",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:7302,Simpl,Simplify,7302,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Simpl'],['Simplify']
Usability,"e set of CIP rules (i.e., even lower than hydrogen). To quote G. P. Moss searchable index of IUPAC's Blue Book:. > [P-93.4.2.1.3 Descriptors ‘E’ and ‘Z’ to denote double bonds linked to heteroatoms](https://iupac.qmul.ac.uk/BlueBook/P9.html#92): ... A lone pair of electrons, when present, is considered to have the atomic number ‘0’ (zero). Which applies e.g., on chiral sulfoxides, chiral amines (e.g., Troeger base), etc. The reason to point of *single lone pair* are suggestions how to deal with (supra)molecular structures with more than one lone pair around an atom (e.g., oxygen) e.g., by José Elguero. ---. Of tangential interest may be a paper by Robert Hanson *et al.* about the algorithmic application of the CIP rules for that the publication includes reference structures (.smi SMILES, 2D and 3D v2000 .sdf) of a cipvalidator ([GitHub repository](https://github.com/CIPValidationSuite/ValidationSuite), [web page](https://cipvalidationsuite.github.io/ValidationSuite/)). This set of 300 models includes four sulfoxides (three of them chiral), too:. ![sulfoxides](https://user-images.githubusercontent.com/19709084/153706252-f719c8ad-d6f6-4e00-97a8-fbc86f9b59da.png). (3D .sdf data of cipvalidator read by [DataWarrior](https://openmolecules.org/index.html) including a motif of DMSO as substructure; in addition to the original data, DataWarrior assigned SMILES strings (last column)). Elguero, J. Is it possible to extend the Cahn-Ingold-Prelog priority rules to supramolecular structures and coordination compounds using lone pairs? *Chem. Int.* **2016**, *38*; [doi 10.1515/ci-2016-0633](https://doi.org/10.1515/ci-2016-0633) (open access). Hanson R. M.; Musacchio, S.; Mayfield, J. W.; Vainio, M. J.; Yerin, A.; Redkin D. Algorithmic Analysis of Cahn–Ingold–Prelog Rules of Stereochemistry: Proposals for Revised Rules and a Guide for Machine Implementation. *J. Chem. Inf. Model.* **2018**, *58*, 1755-1765; [doi 10.1021/acs.jcim.8b00324](https://doi.org/10.1021/acs.jcim.8b00324l).",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176:1909,Guid,Guide,1909,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2451#issuecomment-1037101176,1,['Guid'],['Guide']
Usability,"es produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:7258,Simpl,Simplify,7258,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Simpl'],['Simplify']
Usability,"ib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > ; > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python; > > /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape; > > sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH}; > > /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH}; > > /Users/YujieTian/Downloads/build",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957:17668,Simpl,Simplify,17668,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78053957,1,['Simpl'],['Simplify']
Usability,"ings that are still; doable without hydrogens (and I think were also done; correctly before some recent changes). >At the very least, the current CVS version (on the; >openbabel-new-framework branch) looks OK to me. I cvs-checkedout this one, but it's still the same. >But it'd help a lot if you were a bit more specific about which; >bonds are assigned ""wrong."". Sorry, I feared that the one who programmed all the; complicated details of kekulize.cpp might take it as an; insult to be told about the location of double bonds in the; standard DNA base-pairs ;-). Anyway, here we go, looking at the attached kekubug.pdb:. Residue 630 is Guanosine. OpenBabel puts a double bond at; C2=N2, but it should instead be flipped over to C2=N3:; http://en.wikipedia.org/wiki/Guanosine_monophosphate. There is this general rule that oxygens bound to aromatic; rings get a double bond if possible (i.e. if it doesn't kill; aromaticity), because the keto form is more stable than the; enol tautomer:; http://www.nationmaster.com/encyclopedia/Keto_enol-tautomerism; (that's already handled well by OpenBabel). I think OpenBabel still needs to consider that nitrogens; bound to aromatic rings get a single bond if possible.; Couldn't find the theoretical justification for this; empirical rule, can anyone help?. Residue 631 is Cytidine, with essentially the same problem; again: The C4=N4 double bond belongs to C4=N3.; http://en.wikipedia.org/wiki/Cytidine. Residue 632 is an unusual one where OpenBabel puts a double; bond at C1*=C5, which is impossible because C1* is clearly; sp3 hybridized and non-planar.; So both the C1*=C5 and N1=C6 double bonds should be single; bonds, with a C6=C5 double bond in the middle. BTW: I don't have an example now, but I saw the kekulizer; generate different results for the same residue type, i.e.; in PDB file 1ASZ every residue type appears multiple times,; but didn't always get the same single/double bond pattern. Best regards,; Elmar. Original comment by: elmarkrieger",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775220:1752,clear,clearly,1752,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/446#issuecomment-281775220,2,['clear'],['clearly']
Usability,"n conv;; > conv.ReadFile(&src,""b.pdb"");; >; > // Read sample using babel; > conv.ReadFile(&sample1,""b_sample.pdb"");; >; > // Create another sample molecule by hand (it is identical to ""b_sample.pdb""); > MyMol mymol;; > mymol.name = {""C"", ""C"", ""C"", ""C"", ""C"", ""C""};; > mymol.element = {6, 6, 6, 6, 6, 6};; > mymol.charge = {0, 0, 0, 0, 0, 0};; > mymol.resid = {1, 1, 1, 1, 1, 1};; > mymol.chain = {' ', ' ', ' ', ' ', ' ', ' '};; > mymol.x ={ -0.0584, 0.0520, 0.0328, -0.0957, -0.2058, -0.1883}; // In nm! Converted in to_obmol; > mymol.y = {0.3470, 0.4363, 0.5748, 0.628, 0.5431, 0.4044};; > mymol.z = {0.0, 0.0, 0.0, 0.0, 0.0, 0.0};; > // CreateOBMol; > to_obmol(mymol,sample2);; >; > // Work with babel molecule; > OpenBabel::OBQuery* query = OpenBabel::CompileMoleculeQuery(&sample1);; > OpenBabel::OBIsomorphismMapper *mapper = OpenBabel::OBIsomorphismMapper::GetInstance(query);; > OpenBabel::OBIsomorphismMapper::Mappings maps;; > mapper->MapAll(&src,maps);; >; > std::cout << ""for babel found "" << maps.size() << "" unique mappings"" << std::endl;; >; > // Work with ""custom"" molecule; > query = OpenBabel::CompileMoleculeQuery(&sample2);; > mapper = OpenBabel::OBIsomorphismMapper::GetInstance(query);; > maps.clear();; > mapper->MapAll(&src,maps);; > std::cout << ""for custom found "" << maps.size() << "" unique mappings"" << std::endl;; >; > delete mapper;; > delete query;; >; > // Write down custom molecule to demonstrate that it is Ok; > conv.WriteFile(&sample2,""custom.pdb"");; > }; >; >; > The code outputs:; >; > for babel found 24 unique mappings; > for custom found 0 unique mappings; >; > Expected output is 24 in both cases.; >; > OpenBabel version is 2.4.90.; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/openbabel/openbabel/issues/1884#issuecomment-420287938>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AACxGdN9ikHgne58CVKLfjHgiqc8V5_7ks5uZ8QxgaJpZM4WgOWp>; > .; >",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420307766:2983,clear,clear,2983,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1884#issuecomment-420307766,2,['clear'],['clear']
Usability,"nloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:17532,Simpl,Simplify,17532,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Simpl'],['Simplify']
Usability,"o the lack of documentation in the original OpenBabel code. It appears that the notions of ""implicit hydrogens"" and ""implicit valence"" aren't documented, and it seems to be used to mean different things depending on who was writing code, where the molecule came from, and where it's going. * In some cases, the number of hydrogens is assumed to be the ImplicitHydrogen count (regardless of whether there are other explicit hydrogens). * In some cases, if there is at least one explicit hydrogen, the ImplicitHydrogen count is ignored and the total H count is just the explicit hydrogens. * In some cases, the total H count seems to be the implicit count plus the explicit hydrogens. In my humble opinion, the fundamental problem begins here:. void SetImplicitValence(int val); void IncrementImplicitValence(); void DecrementImplicitValence(). In my view, there is no such thing as ""implicit valence"". Valence is a well-defined property of an atom. Worse, the notion of ""implicit valence"" is never clearly documented, leading to different interpretations. On the other hand, for pragmatic reasons, we often choose to leave hydrogens out of our data structures, and have the notion of ""implicit hydrogens"", the number of hydrogens we would have to add to make our data structure match the molecule of interest. But -- and here's the problem -- it's almost impossible to deduce the actual hydrogen count from the valence, because the valence rules are built into different parsers and can be different depending on the parser. The obvious solution is to get rid of ""implicit valence"", and have either ""actual hydrogen count"" or ""actual valence"" on the OBAtom object, to handle cases where an atom is not in its normal valence state, or where the element's valence is not obvious. Once the actual-hydrogen or actual-valence values is defined, the ""implicit valence"" and ""implicit hydrogen"" count functions can be rewritten as derived properties rather than fundamental properties, and ""implicit valence"" f",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/867#issuecomment-281794888:1325,clear,clearly,1325,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/867#issuecomment-281794888,2,['clear'],['clearly']
Usability,"ort_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testsym.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:6668,Simpl,Simplify,6668,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['Simpl'],['Simplify']
Usability,"ownloads/build/lib:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/test_pybel.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:20444,Simpl,Simplify,20444,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Simpl'],['Simplify']
Usability,"pen data file 'space-groups.txt'; ==============================; *** Open Babel Warning in OpenBabel::OBGlobalDataBase::Init; Cannot initialize database 'space-groups.txt' which may cause further errors.; Processing residue B:SER222; [start] output filename is: C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\ligcovalent.pdb; WARNING! Residue [B:SER222] was not recognized; SMILES[ [NH][C@H]([C]=O)C[O] C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\3upo_protein.pdb [COPY]; ]; Guess was [ser], Pattern |[$([NX3H2,NX4H3+]),$([NX3H](C)(C))][CX4H]([CH2X4][OX2H])[CX3](=[OX1])|; Traceback (most recent call last):; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1319, in <module>; x = CovalentDockingMaster(); ^^^^^^^^^^^^^^^^^^^^^^^; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 871, in __init__; self.start(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1262, in start; self.processResidues(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 1298, in processResidues; aligner = self.x = CovalentDockingMaker(**self.alignerArgs); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 230, in __init__; self.initResidue(); ^^^^^^^^^^^^^^^^^^; File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 273, in initResidue; self.residueProfile(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 298, in residueProfile; self.setResidueParms(); File ""C:\Users\brett\Desktop\adCovalentDockResidue\adcovalent\prepareCovalent.py"", line 325, in setResidueParms; resInfo = self._residueParms[self.resType]; ~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^; TypeError: unhashable type: 'dict'; ```. To make it simple, should I install Python2.7 and try to run the script with that Python version?",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269389472:2784,simpl,simple,2784,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2714#issuecomment-2269389472,2,['simpl'],['simple']
Usability,"possible, I recommend the use of of the `.sdf` format for the intermediate step because (in contrast to e.g., `.xyz`) it equally contains what MDL coined as _connection table_ about which (and how) atoms are bound. A) The more verbose approach consists of three distinct instructions to the CLI. This documents each step by a permanent record.; `obabel -:'OC(C1=NC=CC=C1CC2=CC=C(C3CCC(S(=O)(NC)=O)CC3)C=C2)=O' --gen2d -osdf -O 2D.sdf`; `obabel -isdf 2D.sdf --gen3d -osdf -O 3D.sdf`; And, because you want to continue with the `.mol2` format; `obabel -isdf 3D.sdf -omol2 -O 3D.mol2`. B) The more condensed approach uses the intermediate output of one of the steps mentioned above as input for the subsequent step. Thus, you start with the SMILES string to form the `.mol2` files without creation of intermediate permanent files. Call OpenBabel with one line of instruction in the pattern of; `obabel -:'OC(C1=NC=CC=C1CC2=CC=C(C3CCC(S(=O)(NC)=O)CC3)C=C2)=O' --gen2d -osdf | obabel -isdf --gen3d -osdf | obabel -isdf -omol2 -O 3D_relayed.mol2`. The comparison of the two approaches reveals that coordinates in the `.mol2` files written differ from each other. As shown, e.g. by vimdiff ([an introduction](https://www.tutorialspoint.com/vim/vim_diff.htm), but you may use a difference viewer of your preference), these differences however _do not_ affect the connection tables in the later part of the `.mol2` files:. ![diff_view](https://user-images.githubusercontent.com/19709084/114673269-878cbc00-9cf5-11eb-8cef-6c68f1e53f15.png). Depending on the intended use of the `.mol2`, these differences may not be relevant to you.*) Or, you use them anyway as a _starting point_ for further minimization with one of the force field options in OpenBabel or a third party program. *) Simplified into the `.xyz` format, you may quantify the difference of the geometries, e.g. by a [Kabsch test](https://github.com/charnley/rmsd). [test_run.zip](https://github.com/openbabel/openbabel/files/6309095/test_run.zip)",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2332#issuecomment-819325344:2005,Simpl,Simplified,2005,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2332#issuecomment-819325344,1,['Simpl'],['Simplified']
Usability,"produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testkekule.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybu",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:14616,Simpl,Simplify,14616,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Simpl'],['Simplify']
Usability,"produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testunique.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:12166,Simpl,Simplify,12166,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Simpl'],['Simplify']
Usability,"put); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:8968,Simpl,Simplify,8968,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['Simpl'],['Simplify']
Usability,s happening with SDF as it tries to correctly handle; stereo:. > # obabel tmp.mol -onul ---errorlevel 3; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule MDL MOL format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > ; > # Ran OpenBabel::Clear Molecule; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::AssignSpinMultiplicity; > ; > # Ran OpenBabel::AssignSpinMultiplicity; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Kekulize; > ; > # Ran OpenBabel::Kekulize; > ; > **\* Open Babel Audit Log in OpenBabel::StereoFrom3D; > ; > # Ran OpenBabel::StereoFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindSSSR; > ; > # Ran OpenBabel::FindSSSR; > ; > **\* Open Babel Audit Log in OpenBabel::OBAromaticTyper::AssignAromaticFlags; > ; > # Ran OpenBabel::AssignAromaticFlags; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::FindRingAtomsAndBonds; > ; > # Ran OpenBabel::FindRingAtomsAndBonds; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignImplicitValence; > ; > # Ran OpenBabel::AssignImplicitValence; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; > ; > # Ran OpenBabel::AssignHybridization; > ; > **\* Open Babel Audit Log in OpenBabel::OBBond::IsClosure; > ; > # Ran OpenBabel::PerceiveClosureBonds; > ; > **\* Open Babel Audit Log in OpenBabel::OBAtomTyper::AssignHyb; > ; > # Ran OpenBabel::AssignHybridization; > ; > **\* Open Babel Audit Log in OpenBabel::TetrahedralFrom3D; > ; > # Ran OpenBabel::TetrahedralFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::CisTransFrom3D; > ; > # Ran OpenBabel::CisTransFrom3D; > ; > **\* Open Babel Audit Log in OpenBabel::OBMoleculeFormat::ReadChemObjectImpl; > ; > # OpenBabel::Read molecule MDL MOL format; > ; > **\* Open Babel Audit Log in OpenBabel::OBMol::Clear; > Ran OpenBabel::Clear Molecule; > 1 molecule converted. At least some of this work is unneccesary. Kekulisation? Assigning implicit; ,MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524:1012,Clear,Clear,1012,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/272#issuecomment-193279524,4,['Clear'],['Clear']
Usability,"s to an eventual successful installation of openbabel with `pip install openbabel-wheel` from PyPI *instead* of the standard openbabel (and `pip install openbabel`) reported [here](https://github.com/openbabel/openbabel/issues/2018). *Possibly* your Python environment still contains some data by previous attempts to install standard openbabel. Because `openbabel-wheel` aims to fill the gap of standard `openbabel` with a setup as similar as standard openbabel would do (within reason), the Python interpreter plausibly has a hard time to identify the correct files; all while the *installation* of `openbabel` or `openbabel-wheel` is mutually exclusive. Recommendation: set up a virtual Python environment for your project; see Python's documentation [here](https://docs.python.org/3/library/venv.html). With the virtual environment activated, install `pip install openbabel-wheel` only, then test your sample code. Once the work on your project is done, or the source code no longer is used by you, you can simply delete the folder containing the supporting virtual environment. This approach keeps your standard Python installation (outside the virtual environment) unaffected and easy to maintain. Notes:. - `pip list` will tabulate all pip installed Python packages.* The log is about the current environment used, i.e. if called while running the virtual environment, the listing is about the virtual environment only.; - as usual, you can remove a package by `pip uninstall name_of_the_package_to_remove`.; - use [pipreqs](https://pypi.org/project/pipreqs/) to generate a `requirements.txt` file based on the `import` statements in your project. A future user of your work (which could be you) then can run `pip install -r requirements.txt` to resolve the dependencies in a pristine virtual environment. (This package typically ships with [WinPython](https://winpython.github.io/); by now you know how to check/install the package if necessary.). \* The more explicit `python3 -m pip list` t",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138:1078,simpl,simply,1078,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2402#issuecomment-1792940138,2,['simpl'],['simply']
Usability,"t_output); > MESSAGE('; > ; > but the new evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NOTFOUND""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbabel.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} NOTFOUND); > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""NO",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:4382,Simpl,Simplify,4382,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['Simpl'],['Simplify']
Usability,"th the assignment of InChI (like a structure2InChI) as well as for the reversed approach InChI2structure. If it is for. > « Different input structures may give the same result; for example, acetic acid and acetate would both give the same core parent structure, that of acetic acid.»; >; > [Wikipedia](https://en.wikipedia.org/wiki/International_Chemical_Identifier). then a test, e.g., with the [ChemDraw JS page](https://chemdrawdirect.perkinelmer.cloud/js/sample/index.html#) reveals (contemporary) implementations of the assignment are going to assign the two *differently* by a layer describing charges only seen for the later. Thus,. ```; InChI HOAc: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4); InChI OAc-: InChI=1S/C2H4O2/c1-2(3)4/h1H3,(H,3,4)/p-1; ```; Referring to the `inchi-1` reference 64bit executable published by the InChI trust, it is possible to convert (lists of) InChI strings into an intermediate form (toggle `InChI2Struct`) and eventually into a `.sdf` (toggle `OutputSDF`). I agree InChI's regenerated `.sdf` (currently) have an extra line too many, and it seems a bit odd to that these put all atoms into one spot of coordinate (0,0,0). Yet OpenBabel's output is the same in this regard (and already did so converting SMILES strings into `.sdf`) *except if requested* to consider an additional `--gen2d` (or, `--gen3d`). In case InChI are systematically less good than, say (for example) the SMILES notation, then I would suggest to extend the documentation accordingly (e.g., section 18.1.3). The user guide shipped with v. 1.06 for example states. > «Standard InChI organometallic representation does not include bonds to metal for the time being.»; >; > InChI_UserGuide.pdf, page 2. which may fit as a constraint to consider. Do you know about other groups of chemical compounds where OpenBabel's InChI2structure approach may lead to unforeseen, unintended results? If you think it would be worth to discuss this in a separate issue in further detail, I would move this comment.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875:1598,guid,guide,1598,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2416#issuecomment-949795875,2,['guid'],['guide']
Usability,"thers to identify the possible cause; typically leading to an improvement how the program is used or/and an improvement of the program. You still can edit your question with the bits and bolts the template provides; perhaps especially to organize a report in sections (initiated by a head line following the `##`):. ```; ## Environment Information; Open Babel version:; Operating system and version:. ## Expected Behavior; <!-- Describe the intended output or what you expected to see. -->. ## Actual Behavior; <!--- If describing a bug, tell us what happens instead of the expected behavior -->; <!--- If suggesting a change/improvement, explain the difference from current behavior -->. ## Steps to Reproduce; <!--; If the problem occurs with a particular file, please either upload and attach the file or include a link here - this greatly improves our ability to test your problem.; Please include screenshots or text output if they help illustrate a behavior.; ```. In addition, the interface allows to discern running text on one hand, from snippets of code / output back to the CLI on the other hand by markup as a code block: add three backticks in a line prior, and three backticks in a line following the section. Do not confuse backticks with single quotes. Because some characters might have a particular meaning to (GitHub flavored) [markdown syntax](https://learnxinyminutes.com/docs/markdown/) used here, it equally is *safer* to enclose SMILES and SMARTS in backticks, too. This equally eases to copy-paste them from here to a local instance of running openbabel. To illustrate the above, see e.g. ```shell; obabel -:""C#Cc1ccccc1"" -h --gen3d -O phenylacetylene.sdf; ```. about a snippet of source code enclosed in a fenced code block, and . ```; CX4;!$([H0]);!$([!#6;!$([P,S]=O);!$(N(~O)~O)])[$([CX3]=[O,N,S]),$(C#[N]),$([S,P]=[OX1]),$([NX3]=O),$(NX3+[O-]);!$([S,O,N;H1,H2]);!$([+0][S,O;X1-])]; ```. about a longer string. For a short keyword, single backticks are fine, e.g. `print`.",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395:1545,learn,learnxinyminutes,1545,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2607#issuecomment-1614522395,2,['learn'],['learnxinyminutes']
Usability,"this recently burnt me. a simple test:. `echo 'C(=O)O' | obabel -ismi -r -p 14 -osdf --gen3d` # -OH, wrong. `echo 'C(=O)O' | obabel -ismi -r -p 14 -osmi | obabel -ismi --gen3d -osdf` # -O[-], correct",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823027185:26,simpl,simple,26,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2358#issuecomment-823027185,2,['simpl'],['simple']
Usability,"uce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > > MESSAGE(""NOTFOUND""); > > EXECUTE_PROCESS(; > > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testfastsearch.py; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > Using the old result for compatibility since the policy is not set.; > > Call Stack (most recent call first):; > > test/CMakeLists.txt:183 (ADD_PYTHON_TEST); > > This warning is for project developers. Use -Wno-dev to suppress it.; > > ; > > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > > cmake_policy command to set the policy and suppress this warning.; > > ; > > For input:; > > ; > > '; > > SET(ENV{PYTHONPATH} ${pyenv}); > > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > > MESSAGE(\""${pyenv}\""); > > EXECUTE_PROCESS(; > > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > > RESULT_VARIABLE import_res; > > OUTPUT_VARIABLE import_output; > > ERROR_VARIABLE import_output; > > ); > > ; > > # Pass the output back to ctest; > > ; > > IF(import_output); > > MESSAGE('; > > ; > > the old evaluation rules produce:; > > ; > > '; > > SET(ENV{PYTHONPATH} NOTFOUND); > > SET(ENV{LD_LIBRARY_PATH} NOTFOUND:$ENV{LD_LIBRARY_PATH}); > > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > > SET(ENV{BABEL_DATADI",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673:9716,Simpl,Simplify,9716,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78040673,1,['Simpl'],['Simplify']
Usability,"with master sources updated today, no segfault here:; julien@debian:~/projects/openbabel/build/bin$ ./babel ---errorlevel 4 -i mopout ~/projects/openbabel/bugs/methane.out -o xyz ~/projects/openbabel/bugs/methane.xyz; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in Clear; Ran OpenBabel::Clear Molecule; ==============================; *** Open Babel Audit Log in ConnectTheDots; Ran OpenBabel::ConnectTheDots; ==============================; *** Open Babel Audit Log in PerceiveBondOrders; Ran OpenBabel::PerceiveBondOrders; ==============================; *** Open Babel Audit Log in FindSSSR; Ran OpenBabel::FindSSSR; ==============================; *** Open Babel Debugging Message in EndModify; _mod is negative - EndModify() called too many times; 1 molecule converted; 8 audit log messages 1 debugging messages",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/1334#issuecomment-381322577:278,Clear,Clear,278,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/1334#issuecomment-381322577,10,['Clear'],['Clear']
Usability,"wnloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} /Users/YujieTian/Downloads/build/lib); > SET(ENV{BABEL_DATADIR} /Users/YujieTian/Downloads/openbabel-2.3.1/data); > MESSAGE(""/Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib""); > EXECUTE_PROCESS(; > COMMAND /usr/bin/python /Users/YujieTian/Downloads/openbabel-2.3.1/test/testbindings.py; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > Using the old result for compatibility since the policy is not set.; > Call Stack (most recent call first):; > test/CMakeLists.txt:209 (ADD_PYTHON_TEST); > This warning is for project developers. Use -Wno-dev to suppress it.; > ; > CMake Warning (dev) at cmake/modules/UsePythonTest.cmake:37 (FILE):; > Policy CMP0053 is not set: Simplify variable reference and escape sequence; > evaluation. Run ""cmake --help-policy CMP0053"" for policy details. Use the; > cmake_policy command to set the policy and suppress this warning.; > ; > For input:; > ; > '; > SET(ENV{PYTHONPATH} ${pyenv}); > SET(ENV{LD_LIBRARY_PATH} ${pyenv}:\$ENV{LD_LIBRARY_PATH}); > SET(ENV{BABEL_LIBDIR} ${ob_libdir}); > SET(ENV{BABEL_DATADIR} ${ob_datadir}); > MESSAGE(\""${pyenv}\""); > EXECUTE_PROCESS(; > COMMAND ${PYTHON_EXECUTABLE} ${loc} ${wo_semicolumn}; > #WORKING_DIRECTORY @LIBRARY_OUTPUT_PATH@; > RESULT_VARIABLE import_res; > OUTPUT_VARIABLE import_output; > ERROR_VARIABLE import_output; > ); > ; > # Pass the output back to ctest; > IF(import_output); > MESSAGE('; > ; > the old evaluation rules produce:; > ; > '; > SET(ENV{PYTHONPATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib); > SET(ENV{LD_LIBRARY_PATH} /Users/YujieTian/Downloads/build/scripts/pybuild:/Users/YujieTian/Downloads/build/lib:$ENV{LD_LIBRARY_PATH}",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865:16310,Simpl,Simplify,16310,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/131#issuecomment-78016865,1,['Simpl'],['Simplify']
Usability,"y seems to be an overkill, but I am probably missing something. What object is actually loaded with `dl_open`, is it because each format has to be treated as plugin, because they are too many?. > ; > * Move `OBConversion` out of the loop. First rule of optimization is move things out of loops that aren't _required_ to be in loops. A variable inside the loop is created / destroyed every iteration. Yes, there is a question of efficiency that one has to take into account and there a question of leaks.; The `for` loop was only to show that there is systematic leak and not a one off (e.g. static) leak. Moving the conversion out of scopes is many times the solution (for efficiency) but it has a design cost. (To the point that eventually one needs to make everything global).; Not to mention that it starts messing with the thread safety of the program. > ; > * The docs note that `ReadFile` retains the stream object, which is a small leak. . Ah, ok, so it is not purely a problem with `dl_open` then?. In any case, I didn't appreciate until that some compromised were made to fit the Python bindings. > If you want to convert a ton of files, use `Convert()` and handle your own streams. The reason for the `ReadFile()` method is that Python and other scripting languages can't directly access the C++ stream objects. `Convert` seems to be to handle complete format round trips, what I am doing now is programmatically reading files into the program. Since I am writing a library this reading could happen in some deep call. ; I can make my classes more ""stateful"" to contain a whole (more) persistent OBConvert. (As you see this can complicate somewhat the design, but it is doable). > ; > ; > http://openbabel.org/api/2.3/classOpenBabel_1_1OBConversion.shtml#acc3cc99e2ff0113c9ca6a64f3de71300; > ; > There are plenty of examples in the `tools` directory... Yes, I am learning how to use the library from the `/tools` directory and from other programs using the library, like Avogadro. Thank you",MatchSource.ISSUE_COMMENT,openbabel,openbabel,openbabel-3-1-1,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167:2796,learn,learning,2796,http://openbabel.org/,https://github.com/openbabel/openbabel/issues/2370#issuecomment-848232167,2,['learn'],['learning']
