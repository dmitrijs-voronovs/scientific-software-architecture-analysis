quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Performance,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67357/console).; ### Errors:; - 957/1991 Test #866: tutorial-v7-concurrentfill.cxx ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.92 sec ; - 969/1991 Test #878: tutorial-v7-perf.cxx ..............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.06 sec ; - 970/1991 Test #879: tutorial-v7-perfcomp.cxx ..........................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.03 sec ; - 972/1991 Test #880: tutorial-v7-simple.cxx ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.09 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_concurrentfill.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67357/testReport/projectroot/runtutorials/tutorial_v7_concurrentfill_cxx/); - [projectroot.runtutorials.tutorial_v7_perf.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67357/testReport/projectroot/runtutorials/tutorial_v7_perf_cxx/); - [projectroot.runtutorials.tutorial_v7_perfcomp.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67357/testReport/projectroot/runtutorials/tutorial_v7_perfcomp_cxx/); - [projectroot.runtutorials.tutorial_v7_simple.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67357/testReport/projectroot/runtutorials/tutorial_v7_simple_cxx/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67357/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4354#issuecomment-528910405:175,concurren,concurrentfill,175,https://root.cern,https://github.com/root-project/root/pull/4354#issuecomment-528910405,1,['concurren'],['concurrentfill']
Performance,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/console).; ### Errors:; - 958/1991 Test #866: tutorial-v7-concurrentfill.cxx ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.01 sec ; - 969/1991 Test #878: tutorial-v7-perf.cxx ..............................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.91 sec ; - 971/1991 Test #879: tutorial-v7-perfcomp.cxx ..........................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.00 sec ; - 972/1991 Test #880: tutorial-v7-simple.cxx ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.01 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_concurrentfill.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_concurrentfill_cxx/); - [projectroot.runtutorials.tutorial_v7_perf.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_perf_cxx/); - [projectroot.runtutorials.tutorial_v7_perfcomp.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_perfcomp_cxx/); - [projectroot.runtutorials.tutorial_v7_simple.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_simple_cxx/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/); - [projectroot.roottest.root.meta.enums.roottest_root_meta_enums_enumsInNamespaces](,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4358#issuecomment-528926777:175,concurren,concurrentfill,175,https://root.cern,https://github.com/root-project/root/pull/4358#issuecomment-528926777,1,['concurren'],['concurrentfill']
Performance,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67395/console).; ### Errors:; - 961/1991 Test #866: tutorial-v7-concurrentfill.cxx ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.99 sec ; - 971/1991 Test #878: tutorial-v7-perf.cxx ..............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.73 sec ; - 972/1991 Test #879: tutorial-v7-perfcomp.cxx ..........................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.78 sec ; - 974/1991 Test #880: tutorial-v7-simple.cxx ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.89 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_concurrentfill.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67395/testReport/projectroot/runtutorials/tutorial_v7_concurrentfill_cxx/); - [projectroot.runtutorials.tutorial_v7_perf.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67395/testReport/projectroot/runtutorials/tutorial_v7_perf_cxx/); - [projectroot.runtutorials.tutorial_v7_perfcomp.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67395/testReport/projectroot/runtutorials/tutorial_v7_perfcomp_cxx/); - [projectroot.runtutorials.tutorial_v7_simple.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67395/testReport/projectroot/runtutorials/tutorial_v7_simple_cxx/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67395/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4358#issuecomment-529028304:175,concurren,concurrentfill,175,https://root.cern,https://github.com/root-project/root/pull/4358#issuecomment-529028304,1,['concurren'],['concurrentfill']
Performance,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67407/console).; ### Errors:; - 961/1991 Test #866: tutorial-v7-concurrentfill.cxx ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 2.16 sec ; - 971/1991 Test #878: tutorial-v7-perf.cxx ..............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.43 sec ; - 972/1991 Test #879: tutorial-v7-perfcomp.cxx ..........................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.69 sec ; - 973/1991 Test #880: tutorial-v7-simple.cxx ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.65 sec,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3760#issuecomment-529046076:175,concurren,concurrentfill,175,https://root.cern,https://github.com/root-project/root/pull/3760#issuecomment-529046076,1,['concurren'],['concurrentfill']
Performance,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67527/console).; ### Errors:; - 962/1991 Test #866: tutorial-v7-concurrentfill.cxx ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.84 sec ; - 971/1991 Test #878: tutorial-v7-perf.cxx ..............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.20 sec ; - 973/1991 Test #879: tutorial-v7-perfcomp.cxx ..........................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.28 sec ; - 975/1991 Test #880: tutorial-v7-simple.cxx ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.82 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_concurrentfill.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67527/testReport/projectroot/runtutorials/tutorial_v7_concurrentfill_cxx/); - [projectroot.runtutorials.tutorial_v7_perf.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67527/testReport/projectroot/runtutorials/tutorial_v7_perf_cxx/); - [projectroot.runtutorials.tutorial_v7_perfcomp.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67527/testReport/projectroot/runtutorials/tutorial_v7_perfcomp_cxx/); - [projectroot.runtutorials.tutorial_v7_simple.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67527/testReport/projectroot/runtutorials/tutorial_v7_simple_cxx/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4358#issuecomment-529553525:175,concurren,concurrentfill,175,https://root.cern,https://github.com/root-project/root/pull/4358#issuecomment-529553525,1,['concurren'],['concurrentfill']
Performance,"By any means I am not against this change. However, since such overhead is a significant problem for your O(N) microservices and saving a few calls makes a difference, have you considered using checkpointing to cache ROOT startup operations altogether? A very simplistic way to achieve the checkpointing is to implement a core dump. That would probably yield better results AFAICT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12613#issuecomment-1496294487:211,cache,cache,211,https://root.cern,https://github.com/root-project/root/pull/12613#issuecomment-1496294487,1,['cache'],['cache']
Performance,"Concerning the ScientificColourMaps, more than having 'all of them', it would be useful to have them in a 'classified manner', clearly identified in the TColor documentation. Or maybe have one of each type. - Centric value type (only use when symmetric bin contents) + ""Inverted variant""; - Sequential type (usual case) + ""Inverted variant""; - Discrete variants; Here the full description: https://www.nature.com/articles/s41467-020-19160-7/figures/6. Another option I was thinking was that one could follow the approach of ""Themes"" used in many programs to define their color set. If a user downloads some themes from ScientificColourMaps and puts them in $HOME/.config/root/color-palettes/. then gStyle->SetPalette(""batlow"") would automatically load that one, if existing, using something like the script I posted above. This would make it pretty flexible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8098#issuecomment-832859001:747,load,load,747,https://root.cern,https://github.com/root-project/root/issues/8098#issuecomment-832859001,1,['load'],['load']
Performance,"Correct, RDF was not used at all -- flamegraphs show the full call stacks. These are Jakob's I/O benchmarks from ACAT 2017, which showed TTreeReader's excessive overhead for the first time (as far as I know). There is a version that uses RDF but I did not run it, this is TTree vs TTreeReader (pre- and post-patch). It would be great if you could confirm that there is no sensible difference in performance with the patch, at least for this benchmark. A simplified version of Jakob's setup with (hopefully clear enough) instructions in the README can be found in my rootonly branch that I linked above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3216#issuecomment-456478794:395,perform,performance,395,https://root.cern,https://github.com/root-project/root/pull/3216#issuecomment-456478794,1,['perform'],['performance']
Performance,"Current screenshot:. ```; root [0] .?. Cling (C/C++ interpreter) meta commands usage; All commands must be preceded by a '.', except; for the evaluation statement { }; ==============================================================================================; Syntax: .Command [arg0 arg1 ... argN]. .Tab				- Autocomplete or print suggestions. .L <filename>		- Load the given file or library. .(x|X) <filename>(args)	- Same as .L and runs a function with; 				 signature: ret_type filename(args). .> <filename>		- Redirect command to a given file; '>' or '1>'		- Redirects the stdout stream only; '2>'			- Redirects the stderr stream only; '&>' (or '2>&1')		- Redirects both stdout and stderr; '>>'			- Appends to the given file. .undo [n]			- Unloads the last 'n' inputs lines. .U <filename>		- Unloads the given file. .(I|include) [path]		- Shows all include paths. If a path is given,; 				 adds the path to the include paths. .O <level>			- Sets the optimization level (0-3); 				 If no level is given, prints the current setting. .class <name>		- Prints out class <name> in a CINT-like style (one-level).; 				 If no name is given, prints out list of all classes. .Class <name>			- Prints out class <name> in a CINT-like style (all-levels).; 				 If no name is given, prints out list of all classes. .namespace			- Prints list of all known namespaces. .typedef <name>		- Prints out typedef <name> in a CINT-like style; 				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics; 				 as well as a list of their names. .g <var>				- Prints out information about global variable; 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the; 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes; 				 and the late binding. .debug <level>		- ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10121#issuecomment-1084927674:958,optimiz,optimization,958,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674,1,['optimiz'],['optimization']
Performance,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do; ``` ; g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe ; ./arrow.exe; ```; and get. ```; $ ./arrow.exe . *** Break *** floating point exception. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc; entry=0x7ffc45f54860, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408; #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275; #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85; ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same.; Then the code divides over their difference which is 0. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6513#issuecomment-702670088:860,optimiz,optimized,860,https://root.cern,https://github.com/root-project/root/pull/6513#issuecomment-702670088,7,['optimiz'],['optimized']
Performance,"Excellent work, @bendavid and apologies for not doing this myself, in time. Would it be an option to simply repeat the lookup without the RAII in case of failure to find an overload? It's only in the error case, where performance isn't as crucial anyway, and simplifies the interplay between PyROOT/cppyy and cling.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854#issuecomment-1455544084:218,perform,performance,218,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1455544084,1,['perform'],['performance']
Performance,FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module Gviz; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; Failed to load module Thread; input_line_4:1:2: error: unknown type name 'ifdef'; #ifdef complex; ^; <<< cling interactive line includer >>>:1:1: error: expected unqualified-id; input_line_5:1:2: error: unknown type name 'ifdef'; #ifdef PI; ^; <<< cling interactive line includer >>>:1:1: error: expected unqualified-id; input_line_6:1:2: error: unknown type name 'ifdef'; #ifdef ERROR;,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4782,load,load,4782,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3643,load,load,3643,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore;,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2657,load,load,2657,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,"For completeness dev3/Fri vs dev3/Thu. ```; ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt ; ...; real	0m45.976s; user	0m36.305s; sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ); ... real	0m31.001s; user	0m12.790s; sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11927#issuecomment-1361014198:825,perform,performance,825,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1361014198,1,['perform'],['performance']
Performance,Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module Gviz; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; Failed to load module Thread; input_line_4:1:2: error: unknown type name 'ifdef'; #ifdef complex; ^; <<< cling interactive line includer >>>:1:1: error: expected unqualified-id; input_line_5:1:2: error: unknown type name 'ifdef'; #ifdef PI; ^; <<< cling interactive line includer >>>:1:1: error: expected unqualified-id; input_line_6:1:2: error: unknown type name 'ifdef'; #ifdef ERROR; ^; <<< cling interactive line,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4812,load,load,4812,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"Ha, that was again a nice rabbit hole. Here's a summary of what I found:; 1. We'll never run into problems with GCC's `libstdc++` since [version 4.5](https://gcc.gnu.org/gcc-4.5/changes.html): ""The default behavior for comparing typeinfo names has changed, so in `<typeinfo>`, `__GXX_MERGED_TYPEINFO_NAMES` now defaults to zero"", which means that `operator==` performs the string comparison in all cases.; 2. `libc++` by now has three different implementations: https://github.com/llvm/llvm-project/blob/066b8f2fc6d584635a017a0a15494ce4460744e3/libcxx/include/typeinfo#L120-L169 For all platforms except Windows and Apple M1, the library ""assume[s] the Itanium C++ ABI and use[s] the Unique implementation"". This may be fine for compiled programs where the linker can unify the `type_info`s, but not if the JIT emits a new copy. I have yet to find an example where this can go wrong, it would be great to have a test that fails if somebody attempts to ""simplify"" things. For this particular method however, the Itanium ABI mandates that the `std::type_info` objects of the checked types live in the run-time support library: https://itanium-cxx-abi.github.io/cxx-abi/abi.html#rtti-emission With exactly one object for those types, even `operator==` cannot mess up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7776#issuecomment-823939722:360,perform,performs,360,https://root.cern,https://github.com/root-project/root/pull/7776#issuecomment-823939722,1,['perform'],['performs']
Performance,"Hello @sinnfashen, thank you very much for your PR!. I have rebased it on master, fixed the conflicts and ran your demo in `PTKDTree.C`. Unfortunately, depending on the number of `MAXN`, the code was either crashing, or the parallelization even resulted in a slowdown. As pointed out by @lmoneta and @dpiparo, to merge this it would be necessary to demonstrate a clear speedup in at least some usecases, and even better to show that these usecases also correspond to real-world problems. Since these concerns were not addressed and there was no further reply to the last comment of @lmoneta, I assume that you, @sinnfashen, have moved on from the project and I'll close this PR. Still, if you ever feel like playing with this again, and you can show that the parallelized algorithms performance scales well with the number of threads and gives the correct results, feel free to reopen this PR or open a new one!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2202#issuecomment-1808849990:783,perform,performance,783,https://root.cern,https://github.com/root-project/root/pull/2202#issuecomment-1808849990,1,['perform'],['performance']
Performance,Here are the failing tests (without the `-fno-threadsafe-statics` flag):; ```; 7 - gtest-core-meta-test-testHashRecursiveRemove (Failed); 104 - gtest-tree-treeplayer-test-treetreeplayertestUnit (Failed); 105 - gtest-tree-treeplayer-test-dataframe-friends (Failed); 106 - gtest-tree-treeplayer-test-dataframe-alias (Failed); 107 - gtest-tree-treeplayer-test-dataframe-cache (Failed); 108 - gtest-tree-treeplayer-test-dataframe-callbacks (Failed); 110 - gtest-tree-treeplayer-test-dataframe-interface (Failed); 112 - gtest-tree-treeplayer-test-dataframe-regression (Failed); 113 - gtest-tree-treeplayer-test-dataframe-simple (Failed); 114 - gtest-tree-treeplayer-test-dataframe-snapshot (Failed); 116 - gtest-tree-treeplayer-test-datasource-more (Failed); 125 - tutorial-dataframe-tdf001_introduction (Failed); 126 - tutorial-dataframe-tdf002_dataModel (Failed); 127 - tutorial-dataframe-tdf003_profiles (Failed); 128 - tutorial-dataframe-tdf004_cutFlowReport (Failed); 129 - tutorial-dataframe-tdf005_fillAnyObject (Failed); 130 - tutorial-dataframe-tdf006_ranges (Failed); 131 - tutorial-dataframe-tdf007_snapshot (Failed); 132 - tutorial-dataframe-tdf008_createDataSetFromScratch (Failed); 133 - tutorial-dataframe-tdf009_FromScratchVSTTree (Failed); 134 - tutorial-dataframe-tdf010_trivialDataSource (Failed); 135 - tutorial-dataframe-tdf011_ROOTDataSource (Failed); 136 - tutorial-dataframe-tdf012_DefinesAndFiltersAsStrings (Failed); ```; With errors like:; ```; 131: Processing C:/Users/bellenot/git/master/tutorials/dataframe/tdf003_profiles.C...; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_header' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_10_'!; 131: You are probably missing the definition of _Init_thread_header; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1607#issuecomment-364363584:367,cache,cache,367,https://root.cern,https://github.com/root-project/root/pull/1607#issuecomment-364363584,1,['cache'],['cache']
Performance,"Hi @VanyaBelyaev ,; I ran your reproducer with LCG97apython3(ROOT 6.20/06) and LCG98python3(ROOT 6.22/00).; With the latter it seems that the call to `dill.dumps` is executed but I get a different error with a long stacktrace, I report the main parts:; ```; ...; input_line_38:16:29: error: allocating an object of abstract class type 'TInterpreter'; *ret = new (arena) TInterpreter[nary];; ^; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ...; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: TInterpreter; Error in <TClass::New>: cannot create object of class TInterpreter; Error in <TBufferFile::ReadObject>: could not create object of class TInterpreter; TBufferFile::WriteObjectAny:0: RuntimeWarning: since TROOT has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it. <class cppyy.gbl.TH1D at 0x560bc237aa20>. Error in atexit._run_exitfuncs:; Traceback (most recent call last):; File ""/home/vpadulan/Programs/rootproject/rootinstall/v6-22-00-patches/lib/ROOT/__init__.py"", line 119, in cleanup; backend.gROOT.EndOfProcessCleanups(); ReferenceError: attempt to access a null-pointer; ```. The line `<class cppyy.gbl.TH1D at 0x560bc237aa20>` is there because I added a print to your reproducer just to check that `dill.loads` is executed. Actually this is the simplest command to reproduce the same stacktrace:. ```; python -c ""import ROOT; import dill; print(type(dill.loads(dill.dumps(ROOT.TH1D()))))""; ```. So it's possible that something in the new pyroot (default since 6.22) fixes the `dill` issue but triggers this other error.; @etejedor any thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370#issuecomment-696687077:1538,load,loads,1538,https://root.cern,https://github.com/root-project/root/issues/6370#issuecomment-696687077,2,['load'],['loads']
Performance,"Hi @VanyaBelyaev,. I confirm the following simple commands both work with ROOT 6.22/08 and ROOT master; ```; $ python2 -c ""import ROOT; import dill; print(type(dill.loads(dill.dumps(ROOT.TH1D()))))""; <class cppyy.gbl.TH1D at 0x564a995e04e0>; $ python3 -c ""import ROOT; import dill; print(type(dill.loads(dill.dumps(ROOT.TH1D()))))""; <class cppyy.gbl.TH1D at 0x559369cdb3a0>; ```. They should be similar to your original reproducer, can you confirm this is fixed for you as well now?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370#issuecomment-819457468:165,load,loads,165,https://root.cern,https://github.com/root-project/root/issues/6370#issuecomment-819457468,2,['load'],['loads']
Performance,"Hi @breitwieserCern ,; the functionality now looks good. Could you add a test in roottest about the new functionality?; This one should:; - Generate a dictionary with a selection xml; - Have a macro that loads it and checks that the custom streamer works fine; In order to achieve that, you can have a look to https://github.com/root-project/roottest/blob/master/root/meta/genreflex/CMakeLists.txt . Here you find the instructions about how to run tests: https://root.cern.ch/run-tests. In your case the CMake section could be something like:; ```. ROOTTEST_GENERATE_REFLEX_DICTIONARY(customStreamer customStreamer.h SELECTION customStreamer_selection.xml). ROOTTEST_ADD_TEST(customStreamer; MACRO customStreamer.C; OUTREF customStreamer.ref; DEPENDS ${GENERATE_REFLEX_TEST}); ```; This will generate the dictionary from *customStreamer.h* and *customStreamer_selection.xml*. The macro *customStreamer.C* will be then executed and you can check there that your streamer does what is supposed to do (print something? your call :) ). The output will be compared to customStreamer.ref . You can start from a simplified version of the actual classes you are working with.; Do not hesitate to contact me privately if you need more info!. Cheers,; D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/864#issuecomment-325595999:204,load,loads,204,https://root.cern,https://github.com/root-project/root/pull/864#issuecomment-325595999,1,['load'],['loads']
Performance,"Hi Enrico, thank you very much for taking a look. > 1. I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases?. I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning?. Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has?. Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. ; https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8334#issuecomment-854977563:660,perform,perform,660,https://root.cern,https://github.com/root-project/root/pull/8334#issuecomment-854977563,2,"['multi-thread', 'perform']","['multi-threading', 'perform']"
Performance,"Hi Olivier,. I had a similar situation with a Fermilab server and requested computing support to install missing libraries. I do not have a CERN account so can't open a ticket for lxplus9, but it makes sense to install the libraries there to make the machine usable with ROOT. Andrei. ________________________________________; From: Olivier Couet ***@***.***>; Sent: Tuesday, August 15, 2023 9:27 AM; To: root-project/root; Cc: Andrei Gaponenko; Author; Subject: Re: [root-project/root] clip edit in GL viewer is still broken (Issue #13418). Gl does not seem properly installed there:. $ glxgears; libGL error: No matching fbConfigs or visuals found; libGL error: failed to load driver: swrast; Error: glXCreateContext failed. —; Reply to this email directly, view it on GitHub<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_root-2Dproject_root_issues_13418-23issuecomment-2D1679025586&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=O47fc5vzDTR2V_gla4Ub0Q&m=pYI_UukDspkvToM08be43rqW1Ini373CaTW7YzYzXvzaAbgFN1hfOxDILOY5LkIt&s=ejeOXHRM6NnnTa4TA470cGD4wj63fFxBITffmOQ02lc&e=>, or unsubscribe<https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_AAXVCGSO4HWIKORE7ZRV24LXVOBONANCNFSM6AAAAAA3I665NU&d=DwMCaQ&c=gRgGjJ3BkIsb5y6s49QqsA&r=O47fc5vzDTR2V_gla4Ub0Q&m=pYI_UukDspkvToM08be43rqW1Ini373CaTW7YzYzXvzaAbgFN1hfOxDILOY5LkIt&s=Qa0IvEvjeyrinJUtkFkmyfcNPybfsSDQQI7cpx17nBw&e=>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13418#issuecomment-1679169141:674,load,load,674,https://root.cern,https://github.com/root-project/root/issues/13418#issuecomment-1679169141,1,['load'],['load']
Performance,"Hi! I think the global caches are a bad idea, I'm still thinking of how to get rid of them without losing cache efficiency. For now, the workaround is to clear the global cache with:; ```C++; RooExpensiveObjectCache::instance().clearAll();; ```; Another solution is to use the RooWorkspace factory pattern to create your model, because then it uses a model local cache in the workspace that gets cleared when the workspace goes out of scope. Hope that helps for now!. edit 1: corrected ""mode local"" to ""model local""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10577#issuecomment-1133924183:23,cache,caches,23,https://root.cern,https://github.com/root-project/root/issues/10577#issuecomment-1133924183,4,['cache'],"['cache', 'caches']"
Performance,"Hi, some comments/questions:. 1. I guess the behavior of `TTaskGroup` should mimic what `TThreadExecutor` does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases?; 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning?; 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has?. P.S.; this stuff is always tricky to reason about for me, sorry if i'm missing obvious stuff. the rationale behind my question is that we should not have N different multi-threading behaviors for N components (because then we can't reason about how these components interact with each other because there are too many possibilities), we should not surprisingly use more cores than users might expect (and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8334#issuecomment-854489805:507,multi-thread,multi-threading,507,https://root.cern,https://github.com/root-project/root/pull/8334#issuecomment-854489805,2,['multi-thread'],['multi-threading']
Performance,"Hi, thanks for reporting this!. It is indeed a bug that you can't read the 6.26 workspace in 6.28. The other way around is expected, with RooFit you can't read back a RooWorkspace with any ROOT version that is older that the version it was created with. When I run the reproducer in the debugger, I get this stack trace:; ```; Program received signal SIGABRT, Aborted.; 0x00007ffff4a9f26c in ?? () from /usr/lib/libc.so.6; (gdb) bt; #0 0x00007ffff4a9f26c in ?? () from /usr/lib/libc.so.6; #1 0x00007ffff4a4fa08 in raise () from /usr/lib/libc.so.6; #2 0x00007ffff4a38538 in abort () from /usr/lib/libc.so.6; #3 0x00007ffff4c9ca6f in __gnu_cxx::__verbose_terminate_handler () at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #4 0x00007ffff4cb011c in __cxxabiv1::__terminate (handler=<optimized out>) at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #5 0x00007ffff4cb0189 in std::terminate () at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #6 0x00007ffff4cb03ed in __cxxabiv1::__cxa_throw (obj=<optimized out>, tinfo=0x7ffff4e6c0d0 <typeinfo for std::length_error>,; dest=0x7ffff4cc8580 <std::length_error::~length_error()>) at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/eh_throw.cc:98; #7 0x00007ffff4ca01ca in std::__throw_length_error (__s=__s@entry=0x7ffff79711aa ""basic_string::_M_replace_aux""); at /usr/src/debug/gcc/gcc/libstdc++-v3/src/c++11/functexcept.cc:82; #8 0x00007ffff76f2ae8 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check_length (__s=<optimized out>,; __n2=<optimized out>, __n1=<optimized out>, this=<optimized out>) at /usr/include/c++/13.1.1/bits/basic_string.h:403; #9 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux (__c=<optimized out>, __n2=<optimized out>,; __n1=<optimized out>, __pos1=<optimized out>, this=<optimized out>) at /usr/include/c++/13.1.1/bits/basic_string.tcc:450; #10 std::__cxx11::basic_string<char, std::c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:800,optimiz,optimized,800,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,1,['optimiz'],['optimized']
Performance,"Hi, thanks for the reports! Okay, the problem with the `RooRealSumPdf` hinted me that this new optimization was part of the problem (look for ""binned likelihood fit optimization"").; https://root.cern/doc/v628/release-notes.html. This optimization was used inside ATLAS for a long time to great success (speedups), so I was enabling it by default. However, it seems to be problematic here, maybe it doesn't work with the RooBarlowBeestonLL. You should for now disable it when the demo is compiled with ROOT 6.28. So the line with `MakeModelAndMeasurementFast` in `histfact_demo.cpp` would become:; ```C++; #if ROOT_VERSION_CODE < ROOT_VERSION(6,28,00); auto ws = RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; #else; // Disable the binned fit optimization that was enabled by default in ROOT 6.28.; // This optimization skips the normalization of the RooRealSumPdf, because; // the unnormalized bin contents already represent the yields that can be; // used by the RooNLLVar to sum the Poisson terms. However, this optimization; // doesn't work for this demo, maybe because it's not compatible with the; // RooBarlowBeestonLL. See also https://root.cern/doc/v628/release-notes.html.; HistoToWorkspaceFactoryFast::Configuration cfg;; cfg.binnedFitOptimization = false;; auto ws = RooStats::HistFactory::MakeModelAndMeasurementFast(meas, cfg);; #endif; ```. With this, the results I get with 6.28 are already more comparable to 6.24. Here the results of `fit-noshapes`:; ## ROOT 6.28. ```txt; FVAL = -1581.9159109118475; Edm = 0.000441898404860980383; Nfcn = 187; Lumi	 = 0.937281	 +/- 0.041571	(limited); Nmu	 = 68079	 +/- 3149.09	(limited); RawRDst	 = 0.0394995	 +/- 0.00466377	(limited); alpha_BFD1	 = -1.56966	 +/- 0.268056	(limited); Info in <Minuit2>: Minuit2Minimizer::Hesse Using max-calls 2000; Info in <Minuit2>: Minuit2Minimizer::Hesse Hesse is valid - matrix is accurate; 0.000441626; Fit ran with status 0; Stat error on R(D*) is 0.004650; EDM at end was 0.000442; RooArgList:: =",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12729#issuecomment-1527829256:95,optimiz,optimization,95,https://root.cern,https://github.com/root-project/root/issues/12729#issuecomment-1527829256,5,['optimiz'],['optimization']
Performance,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:; * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF; * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` ; * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue?. Best,; Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14575#issuecomment-1940996892:71,perform,performed,71,https://root.cern,https://github.com/root-project/root/issues/14575#issuecomment-1940996892,2,['perform'],"['performance', 'performed']"
Performance,"Hi,; yes following the linked example of the VavilovAccuratePdf is fine. It is true you have made a class, but only with static functions. Like this is not needed to be a class, can be simple function in a namespace. The advantage of having as a class is that one can cache some information as class data members. . Then test of the Vavilov is also a good example, however it is better to use the google test framework, resulting in a much simpler test to write. You need just to use the macro defined by test to compare the function value with the reference one. ; You have many examples in ROOT for gtest, for example in `hist/hist/test` directory like `test_TH1.cxx` or `test_TFormula.cxx`, `test_TF123_Moments.cxx`. If you need any help for the test, please let me know",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049#issuecomment-1202195997:268,cache,cache,268,https://root.cern,https://github.com/root-project/root/pull/11049#issuecomment-1202195997,1,['cache'],['cache']
Performance,"Hii @guitargeek ! ; cmake output shows these errors while generating cache ; ```; `system runtime library file does not exist:; 2> [CMake] 'MSVC_REDIST_DIR-NOTFOUND/x64/Microsoft.VC142.CRT/msvcp140.dll'`; ```; ```; system runtime library file does not exist:; 2> [CMake] 'MSVC_REDIST_DIR-NOTFOUND/x64/Microsoft.VC142.CRT/vcruntime140.dll'; ```; ```; system runtime library file does not exist:; 2> [CMake] 'MSVC_REDIST_DIR-NOTFOUND/x64/Microsoft.VC142.CRT/concrt140.dll'; ```; and while building ; `error : 'LZMA/src/LZMA/lib/liblzma.lib', needed by 'bin/Core.dll'` . Sadly I don't have any other system apart from this one, but I will try to reach my university's Linux system once my exams get over (which ends in Feb 3rd week ) and hopefully by that time there will be relaxation in covid guidelines . Until then I guess I will try to build this in my windows. ; Thanks for replying to my queries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8777#issuecomment-1029050145:69,cache,cache,69,https://root.cern,https://github.com/root-project/root/issues/8777#issuecomment-1029050145,1,['cache'],['cache']
Performance,"I actually remember trying `Evaluate` but it crashed. Didn't look into too many details as to why; it does have a couple of fewer ""protection pieces"" (such as the mutex lock) than does `Calc()`, so that may be the reason. But even then, I gave up on all that when I realized that Python readily outperforms. I mean, talk about optimization, even for your integer case and compare these two macro's:. ```; int noleak() {; int result = 0;; for (int i = 0; i < 1000000; ++i) {; result += (int)TPython::Eval(""1+1"");; }; return result;; }; ```; and; ```; int leak() {; int result = 0;; for (int i = 0; i < 10000; ++i) {; result += (int)gInterpreter->Calc(""1+1"");; }; return result;; }; ```; Please note the constant: the `TPython::Eval()` is called _100x more_ than `TInterpreter::Calc()` and it is _still 4x faster_ on my box. So, my conclusion is that if you are in Cling and need to evaluate a run-time constructed expression represented in string-form, then the optimizily thing to do, is to call into Python ... (and if in a loop, then even if Python uses cppyy in turn, which uses Cling again, it will still outperform). And, of course, bonus points for not leaking ... There is one case where `cppyy` still fails: if the `operator+` in the expression above is a global `friend` (with the operands instances of some class), as so far, I've been unable to locate that method. So, I do still care, but my main problem is the leak on failed lookups, as those are very common. And I don't believe it is just the allocator, which as you tell it would re-use the memory, but I'll see first whether I can construct a pure Cling-only reproducer then. Aside, if/when the lookup helper is inverted (i.e. being able to tell what some _is_ rather than what it _isn't_), many of the failed lookups will simply go away.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7201#issuecomment-806058368:327,optimiz,optimization,327,https://root.cern,https://github.com/root-project/root/issues/7201#issuecomment-806058368,2,['optimiz'],"['optimization', 'optimizily']"
Performance,"I agree that it is an unfortunate circumstance to have the test not passing. However, I still urge you to consider the effect on debugability removing strict tests will have. I have wasted a lot of time trying to track down a subtle bug due to loose tests which left me unable to determine where the bug came from. Conversely, setting tests strictly and tracing discrepancies, I found a different bug in the Kahan sum: #11940. Unit tests especially should be as strict as possible. In absence of unit tests (which unfortunately is the case for the parts of RooFit I worked on), strict ""integration"" tests like these are the closest I could get. Note also that it was simply part of my original assignment: to ensure users can trust the new parallelized methods, I built them to be bit-wise exactly equal to the old methods. So, I know from experience how tedious it is to trace down these bit-wise differences to their actual concrete source, but also think that because we are dealing with scientific software, precision, robustness, reliability and interpretability (of components and hence the whole) are important. Of course, performance is an important factor too, but it's just one of the aspects. We want the end-results of experiments to be accurate and explainable, right? I personally at least don't like when I have to sell a ""because of floating point errors"", because I've been bitten by them a few times now. Now, I'm also well aware that the project only has a given amount of resources and I myself am currently more or less out of resources (I can spend only my free time), so my vote probably doesn't count strongly :) If I could be of more practical help in this, I would definitely be happy to, but I also don't have a non-x86 machine, so it's not feasible for me to do much right now. So, feel free to make a call on this as you all best see fit!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1538758017:1130,perform,performance,1130,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1538758017,1,['perform'],['performance']
Performance,"I agree that there is a problem here. That might involve the `DeclCollector` or the `DeclUnloader` or some other parts of ROOT. However, IMHO https://github.com/root-project/root/issues/13815#issuecomment-1759250811 clearly shows that the underlying problem is much bigger and older than just the failing test with LLVM 16. So I'd be very much interested in a pragmatic solution to resolve this last blocker for the upgrade. P.S.: One idea I had was to split the test into two parts, ie one ""bad"" part that tests the behavior with an incomplete class and one ""good"" part that loads `inst2lib`. However I quickly got stuck because just removing `o->Print();` on the first loaded object leads to many errors of the form `Error parsing payload code for class Inner` that I can't make sense of...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13815#issuecomment-1768325139:576,load,loads,576,https://root.cern,https://github.com/root-project/root/issues/13815#issuecomment-1768325139,2,['load'],"['loaded', 'loads']"
Performance,"I am able to reproduce the failure with a simple standalone reproducer (2 threads one loading and unloading a library, the other interogating `TClassTable`). I will prepare a PR with the fine grained locking (or whatever is needed to make the crash go away :) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11263#issuecomment-1483286941:86,load,loading,86,https://root.cern,https://github.com/root-project/root/pull/11263#issuecomment-1483286941,1,['load'],['loading']
Performance,"I had a look ant it seems very nice. About the discrepancy between `REntry::Get` and `RNTupleModel::MakeField`, one may argue that `MakeField` might return a raw pointer too as the memory of the field is owned by the model. OTOH, while it's kind of easy to keep track of the lifetime of an `REntry` (I get it, I use it, I drop it), it seems more difficult to keep track of `RNTupleModel` lifetime, which is bound to the lifetime of `RNTupleWriter`.; Using raw pointers from `MakeField` is fine if we assume that the writer of the code only accesses the fields within the scope of `RNTupleWriter` (but the fields are accessible before the writer is created... more confusing). My personal opinion is that the `CreateEntry` way is the best option for the single thread case too:; - I define a model; - create a writer based on the model; - get the *buffer* (`REntry`) to write to (one per thread, for example, even if I have only one thread); - commit the *buffer* to the writer. In this way I own the `REntry`, but it has a layout in memory that is directly understood by the serialization process without the need of extra copies. We can also think of a way of constructing the writer from an *inlined* model, without the need for repeated calls to `MakeField`. Something like:; ```cpp; auto ntuple = RNTupleWriter::Recreate({; Field<std::uint32_t>(""id""),; Field<std::vector<float>>(""vpx""),; Field<std::vector<float>>(""vpy""),; Field<std::vector<float>>(""vpz""); }, ""NTuple"", kNTupleFileName);. auto entry = ntuple->CreateEntry();; // cache the pointer for faster access in single thread,; // but I could use TLS (or a framework equivalent) for multithreading; auto& vpx = *entry->Get<std::vector<float>>(""vpx"");; for(auto& event: all_events) {; vpx.clear();; vpx.push_back(42.);; ntuple->Fill(entry); // I would prefer ntuple->Write(entry) but it's a matter of taste; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8688#issuecomment-883396155:1533,cache,cache,1533,https://root.cern,https://github.com/root-project/root/pull/8688#issuecomment-883396155,1,['cache'],['cache']
Performance,"I have more strange effect. I do not compile davix and therefore after opening the file with:; `TFile::Open(""https://cernbox.cern.ch/remote.php/dav/public-files/1Cy1HIf03Ca76Dm/test_ntuples_200123.root"");` ; I getting instance of `TWebFile`. And if enable `gDebug=1`, one clearly sees ~1.5s per each http request. Moreover, when I try to perform `TTree::Draw()` from the `TBrowser` (web and normal one), `TWebFile` submits multirange request, but not able to parse result of it. Producing several errors - it fully crashes, including my console. Seems to be, it is another issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13018#issuecomment-1592493876:338,perform,perform,338,https://root.cern,https://github.com/root-project/root/issues/13018#issuecomment-1592493876,1,['perform'],['perform']
Performance,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9479#issuecomment-1006504826:96,cache,cache,96,https://root.cern,https://github.com/root-project/root/pull/9479#issuecomment-1006504826,3,['cache'],['cache']
Performance,"I think that is sufficient efficient evidence albeit there is one more simple test to do, is to introduce a synchronization point every once in a while to insure that the queue is actually filled/used and then later emptied.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14034#issuecomment-1821703597:171,queue,queue,171,https://root.cern,https://github.com/root-project/root/pull/14034#issuecomment-1821703597,1,['queue'],['queue']
Performance,"I would propose to change the title to ""[ci] Further speedup mac and linux builds by caching dependencies"". The word ""instead"" can be misleading. Our goal is to have feedback from the CI as soon as possible. Having several nodes, allows to scale horizontally. We are not increasing the number of nodes in the CI because we are lazy, we just need many nodes AND fast CI, e.g. through caches or quicker tests :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14987#issuecomment-2001914193:383,cache,caches,383,https://root.cern,https://github.com/root-project/root/issues/14987#issuecomment-2001914193,1,['cache'],['caches']
Performance,"I've been able to get somewhere but now I need guidance. I created a `dict.modulemap` file:; ```; module dict {; header ""MyClass.h""; header ""OtherClass.h""; export *; }; ```; and the module-aware dictionary:; ```bash; $ ls; LinkDef.h MyClass.h OtherClass.h dict.modulemap; $ rootcling -cxxmodule -f dict.cpp MyClass.h OtherClass.h -moduleMapFile=dict.modulemap LinkDef.h; $ ls; LinkDef.h MyClass.h OtherClass.h dict.cpp dict.modulemap dict.pcm dict_rdict.pcm; $ g++ -shared -std=c++14 -fPIC -I$ROOTSYS/include dict.cpp -o libDict.so ; $ ls; LinkDef.h MyClass.h OtherClass.h dict.cpp dict.modulemap dict.pcm dict_rdict.pcm libDict.so; ```; but I cannot load the dictionary on the root shell:; ```; $ root; root [0] .L libDict.so ; Module dict not found.; ```; I put `$PWD` in `LD_LIBRARY_PATH` and `ROOT_INCLUDE_PATH` but the error is still there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512#issuecomment-1149766446:651,load,load,651,https://root.cern,https://github.com/root-project/root/issues/10512#issuecomment-1149766446,1,['load'],['load']
Performance,"If we enable ORCV2 asynchronous compilation, it is clear we have to enable threading support in LLVM. So the question is whether we do want to enable ORCV2 asynchronous compilation or not, some things to consider:; * cost to all or most (?) of the interpreter calls (which then would likely takes 2 locks instead of one); * risk of dead locks; now that the interpreter takes 2 locks, if there is any way that code that takes the LLVM lock calls code directly or indirectly (via user function or even dlopen) take the ROOT locks then they will be dead locks.; * risk of over-subscribing the CPU (i.e. see the many back and forth in the PPP between the way we setup resource sharing between the experiment framework and the implicit multi-threading). ; * size of the gain; given than most (but indeed not all) compilation are very small, is it worth the costs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11699#issuecomment-1312791296:731,multi-thread,multi-threading,731,https://root.cern,https://github.com/root-project/root/issues/11699#issuecomment-1312791296,1,['multi-thread'],['multi-threading']
Performance,"In CMSSW; - we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB; - we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call; - every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call. By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled? Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14807#issuecomment-1965316725:456,concurren,concurrently,456,https://root.cern,https://github.com/root-project/root/pull/14807#issuecomment-1965316725,1,['concurren'],['concurrently']
Performance,It does not hit the cache because the unloading clears the memory buffers behind the FileID. This means we have cache but it is unreachable after unloading by design.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2483#issuecomment-413987265:20,cache,cache,20,https://root.cern,https://github.com/root-project/root/pull/2483#issuecomment-413987265,2,['cache'],['cache']
Performance,"It's not an issue for adoption. The underlying issue is still there, though. ROOT still loads a bunch of unneeded PCM when simply opening a file, it's just the cost is half what it was before and the reproducer is the same as above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-2304636324:88,load,loads,88,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-2304636324,1,['load'],['loads']
Performance,MVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3364,load,load,3364,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"Many of the tests in the list above were renamed in master, but they all succceed:; ```; 1027/1220 Test #1028: tutorial-v7-histops.cxx ............................................. Passed 6.00 sec; 1029/1220 Test #1031: tutorial-v7-simple.cxx .............................................. Passed 8.82 sec; 1033/1220 Test #1026: tutorial-v7-concurrentfill.cxx ...................................... Passed 20.39 sec; 1034/1220 Test #1036: tutorial-rcanvas-rframe.cxx ......................................... Passed 2.93 sec; 1035/1220 Test #1037: tutorial-rcanvas-rh1.cxx ............................................ Passed 2.91 sec; 1037/1220 Test #1038: tutorial-rcanvas-rh1_large.cxx ...................................... Passed 3.14 sec; 1039/1220 Test #1040: tutorial-rcanvas-rh2.cxx ............................................ Passed 4.41 sec; 1040/1220 Test #1041: tutorial-rcanvas-rh2_colz.cxx ....................................... Passed 4.62 sec; 1041/1220 Test #1042: tutorial-rcanvas-rh2_large.cxx ...................................... Passed 4.85 sec; 1042/1220 Test #1045: tutorial-rcanvas-rlegend.cxx ........................................ Passed 2.46 sec; 1047/1220 Test #1034: tutorial-rcanvas-rcanvas_mt.cxx ..................................... Passed 25.33 sec; 1051/1220 Test #1043: tutorial-rcanvas-rh3.cxx ............................................ Passed 13.34 sec; 1053/1220 Test #1044: tutorial-rcanvas-rh3_large.cxx ...................................... Passed 13.14 sec; 1059/1220 Test #1056: tutorial-rcanvas-subpads.cxx ........................................ Passed 2.22 sec; 1066/1220 Test #1029: tutorial-v7-perf.cxx ................................................ Passed 55.03 sec; 1199/1220 Test #1030: tutorial-v7-perfcomp.cxx ............................................ Passed 105.92 sec; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8073#issuecomment-1000999629:341,concurren,concurrentfill,341,https://root.cern,https://github.com/root-project/root/issues/8073#issuecomment-1000999629,1,['concurren'],['concurrentfill']
Performance,"Many thanks Danilo and Olivier for picking this up so quickly! The issue appears only when `TColorBug.root` is loaded in a new ROOT session. Sorry for not being clear about this in my original post. If I first run `createTestFile();` from Olivier's macro to create the .root file and then close ROOT and start a new ROOT session that only runs `readTestFile();`, `TColor::GetFreeColorIndex();`returns the index of the already defined `myColor`. So the problem seems to be related to how custom colors that are not yet existing in the ROOT session are restored from a .root file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16051#issuecomment-2256214014:111,load,loaded,111,https://root.cern,https://github.com/root-project/root/issues/16051#issuecomment-2256214014,1,['load'],['loaded']
Performance,MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module Gviz; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; Failed to load module Thread; input_line_4:1:2: error: unknown type name 'ifdef'; #ifdef complex; ^; <<< cling interactive line includer >>>:1:1: error: expected unqualified-id; input_line_5:1:2: error: unknown type name 'ifdef'; #ifdef PI; ^; <<< cling int,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4653,load,load,4653,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"My personal preference is to store std::string instead of a hash, as it's simpler and hashing anyway doesn't give us any improvement in performance. About transaction, I'm testing something like what I asked but it gives me an error like this which seems very cryptic to me, have you ever seen this error before?; https://gist.github.com/yamaguchi1024/b137f5313dfca23abbe890a5c4440a7d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2434#issuecomment-411910183:136,perform,performance,136,https://root.cern,https://github.com/root-project/root/pull/2434#issuecomment-411910183,1,['perform'],['performance']
Performance,"My two cents about the naming; * `GenerateValueFor` doesn't work since the value is not being generated for the other instance, but for this one (AFAIU).; * `GenerateValueBy` sounds fine in principle since the `GenerateValue` call is called *by* the other instance. I have to admit that I personally do not get this immediately and I have to stop half a second to think about the meaning of the function name.; * `GenerateValueOn` also doesn't work because the value is being generated by the other instance, not on.; * `GenerateValueFrom` personally has a similar meaning to `GenerateValueBy` and is easier to get intuitively.; * The `GenerateValueFrom` naming works for `Generate` but not for `Append`. I.e. I don't like `AppendFrom` since that sounds like we are appending some value *from* the other instance *into* this one; * To me it looks like all these functions are performing a call of the same function name on another instance. Thus, personally I would go with a naming like `CallGenerateValueOn`, `CallAppendOn`, `CallReadOn` etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13317#issuecomment-1651710380:876,perform,performing,876,https://root.cern,https://github.com/root-project/root/pull/13317#issuecomment-1651710380,1,['perform'],['performing']
Performance,"My version of os/compiler/valgrind seems to work better and I got some useful information. For `root.exe -b -l -q callfuncbench.cxx+(1000)`. The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`. Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions). The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions). So it is getting better and `Value::Value` is a potential source of further optimization (see related comment). [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1261020879:654,optimiz,optimization,654,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1261020879,1,['optimiz'],['optimization']
Performance,NTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to lo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3582,load,load,3582,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"Needs some more work as suggested by Philippe:; - [x] use namespace-scope functions with local statics instead of global channel variables (as agreed on by @eguiraud but I forgot...);; - [x] fwd declare that channel function and even its return type `RLogChannel` in the relevant headers, to reduce `#include` ""load"";; - [x] move ""ROOT"" prefix into channel ctor args (`RLogChannel(""ROOT.FitPanel"")`) to make it usable by non-ROOT code;. And #6931 which will go into a subsequent PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6875#issuecomment-740762392:311,load,load,311,https://root.cern,https://github.com/root-project/root/pull/6875#issuecomment-740762392,1,['load'],['load']
Performance,"Note that I do not understand how we can define a canonical namespace in the context of libraries.; For example with two trivial libraries that contains solely what is described in one of those two simple headers:; ```; // header A.h for library A.so; namespace Generic {; void functionA(int) {};; }; ```; ```; // header B.h for library B.so; namespace Generic {; void functionB(int) {};; }; ```; which of those 'two' library should be loaded when 'autoloading [the] canonical namespace'. I.e. A priori autoloading namespaces is the wrong granularity and we should/can autoload things like classes, enum ... and (what we are currently missing) free standing functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1547#issuecomment-387210735:436,load,loaded,436,https://root.cern,https://github.com/root-project/root/pull/1547#issuecomment-387210735,1,['load'],['loaded']
Performance,"Now I start understanding problem with cernbox http server.; It returns wrong http response header on multi-range request.; Therefore ROOT not able to recognize it and either fail or fall-back to single http requests - ; which is VERY slow method due to 1.5s latency per single request. Here is example of ""normal"" response on multipart http request:; ```; curl -ik https://root.cern/js/files/hsimple.root -H ""Range: bytes=0-15,1000-1015"" --output - (15.06. 11:15:48) !11391 ; HTTP/1.1 206 Partial Content; Date: Thu, 15 Jun 2023 09:16:57 GMT; Server: Apache/2.4.41 (Ubuntu); X-Frame-Options: SAMEORIGIN; Last-Modified: Thu, 04 Jul 2013 08:21:05 GMT; ETag: ""6521f-4e0ab42683e40""; Accept-Ranges: bytes; Content-Length: 177; Cache-Control: max-age=1800; Expires: Thu, 15 Jun 2023 09:46:57 GMT; Content-Security-Policy: frame-ancestors 'self';; Strict-Transport-Security: max-age=15768000; Access-Control-Allow-Origin: *; Access-Control-Allow-Headers: range; Access-Control-Expose-Headers: content-range,content-length,content-type,accept-ranges; Access-Control-Allow-Methods: HEAD,GET; Content-Type: multipart/byteranges; boundary=61c842e35204a0c7. --61c842e35204a0c7; Content-range: bytes 0-15/414239. root�mdR; --61c842e35204a0c7; Content-range: bytes 1000-1015/414239. 1ZGqP��; --61c842e35204a0c7--; ```. And here is result from cernbox:; ```; curl -ik https://cernbox.cern.ch/remote.php/dav/public-files/1Cy1HIf03Ca76Dm/test_ntuples_200123.root -H ""Range: bytes=0-15,1000-1015"" --output - (15.06. 11:15:25) !11380 ; HTTP/1.1 206 Partial Content; Access-Control-Allow-Origin: *; Content-Disposition: attachment; filename=""test_ntuples_200123.root""; Content-Length: 389; Content-Range: ; Content-Security-Policy: default-src 'none';; Content-Type: application/octet-stream; Date: Thu, 15 Jun 2023 09:15:48 GMT; Etag: ""329762575417868288:9d274a18""; Last-Modified: Wed, 24 May 2023 12:22:19 +0000; Oc-Etag: ""329762575417868288:9d274a18""; Oc-Fileid: eoshome-t!103034857; Server: nginx/1.20.1; Strict-Tran",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13018#issuecomment-1592696000:259,latency,latency,259,https://root.cern,https://github.com/root-project/root/issues/13018#issuecomment-1592696000,1,['latency'],['latency']
Performance,"One potential reason - huge latency for simple request of 4 bytes. Just submitting simple request:; ```; time curl -ik https://cernbox.cern.ch/remote.php/dav/public-files/1Cy1HIf03Ca76Dm/test_ntuples_200123.root -H ""Range: bytes=0-4,100-104"" --output -; ```. Gives me: `1.423 sec` total time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13018#issuecomment-1592003325:28,latency,latency,28,https://root.cern,https://github.com/root-project/root/issues/13018#issuecomment-1592003325,1,['latency'],['latency']
Performance,P; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBen,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2622,load,load,2622,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,P; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3425,load,load,3425,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,Painter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2833,load,load,2833,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,"Regarding the titular issue, I have been thinking about it for a bit and I don't think we can do much better than what @pieterdavid already implemented. Solutions considered:. 1. Implicitly converting `TClonesArrays` to `RVecs` would be a) backward-incompatible and b) a silent perf degradation, as it requires a copy. Moreover, if we did this I don't see a migration path that doesn't require that users revise all their TClonesArrays-related logic; 2. Adding a `TClonesArrays2RVec` helper function: it would require a copy (or it would have to return a clunky `RVec<T*>`). It is also trivial to implement for users that need it and don't mind the downsides.; 3. Adding a RDF toggle to tweak ""read TClonesArrays as RVecs"" or not: requires adding a bunch of extra logic to the column-reading mechanism for a feature that might end up being mostly unused (modern data models don't use TClonesArrays), and it would require the extra copy (i.e. silent performance degradation). The best seems to be 3, but feature toggles complicate internals and are typically not easy to discover (might end up mostly unused). It seems simpler to ask users to explicitly do the conversion in a `Redefine` if they need/want to. Sorry I could not come up with something nice :confused: . I will close this in a few days unless people have something against it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8644#issuecomment-883552286:949,perform,performance,949,https://root.cern,https://github.com/root-project/root/issues/8644#issuecomment-883552286,1,['perform'],['performance']
Performance,"Small update to give further context, the following seemingly similar but subtly different snippet works also for ROOT 6.32. ```python; import ROOT. def main():; ROOT.gInterpreter.ProcessLine(""const auto myvec = TVectorT<float>();""); print(ROOT.myvec). if __name__ == ""__main__"":; raise SystemExit(main()); ```. And it is clear that in this case ProcessLine tries much harder than Declare to automatically load libraries that might be necessary to evaluate the line. Also, the reproducer from the issue description fails with the same error in ROOT latest master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16601#issuecomment-2393259545:406,load,load,406,https://root.cern,https://github.com/root-project/root/issues/16601#issuecomment-2393259545,1,['load'],['load']
Performance,"Some debug symbols seem to be missing so we don't have line number information, but this log is already enough to confirm my hypothesis above: 2.9 GB come from std::vector allocations performed by `RDF::FillHelper::Exec<ROOT::VecOps::RVec<float>, 0>`. The simplest workaround is to specify a binning for the histograms. I am not sure whether this is a common enough problem to warrant a fix in RDF if the fix involves thread synchronization or other potential performance pessimizations. Alternatively, if we can come up with a mutex-free algorithm to automatically select binnings that are compatible among threads that might be the best option -- some related discussion on this topic is [here](https://sft.its.cern.ch/jira/browse/ROOT-8883). Moving this to priority ""default"" since there is a workaround. EDIT: another workaround is to run on fewer events, which might be reasonable since this kind of usecase is typically part of an exploratory phase of the analysis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6676#issuecomment-716447711:184,perform,performed,184,https://root.cern,https://github.com/root-project/root/issues/6676#issuecomment-716447711,2,['perform'],"['performance', 'performed']"
Performance,"Some measurements from `ntpl-perf01`; `ttreeTBufferMerger` is a simple program that writes 20000000 entries (2 branches) with each thread. The first timing is with `master`, then the first commit from this PR, and finally the second commit (removing the queue):; <details>; <summary>full data</summary>. ```; ntpl-perf01:/data/ssdext4/jonas/20231113; ttreeTBufferMerger 20000000 16; User time (seconds): 406.16; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.30; Maximum resident set size (kbytes): 3392068. ttreeTBufferMerger 20000000 16; User time (seconds): 404.52; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24; Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16; User time (seconds): 407.27; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89; Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128; User time (seconds): 6726.12; Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26; Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128; User time (seconds): 4558.00; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53; Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128; User time (seconds): 4089.10; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39; Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113; ttreeTBufferMerger 20000000 16; User time (seconds): 406.02; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20; Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16; User time (seconds): 405.00; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22; Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16; User time (seconds): 406.67; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26; Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128; User time (seconds): 6967.42; Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79; Maximum resident set size (kbytes): 892528",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14034#issuecomment-1808248792:254,queue,queue,254,https://root.cern,https://github.com/root-project/root/pull/14034#issuecomment-1808248792,1,['queue'],['queue']
Performance,"Sorry guys I've been on holidays :-) good to see that this is solved :-). > ""You"" was Axel and Philippe + whoever is doing TXNetNG these days :); > Michal (main developer of XrdCl) and I assumed the crash happens because libXrdCl was already unloaded, see xrootd issue: [xrootd/xrootd#1487](https://github.com/xrootd/xrootd/issues/1487); > ; > Now, you say the library is still loaded ... then it's probably more likely that destruction ob XrdCl global objects has already happened or was in progress (I just learned c++ is rather relaxed about how this is allowed to happen).; > ; > @simonmichal ... what do you think?. we use a nifty counter to protect against static-destruction-order-fiasco so in principle if the `libXrdCl` has not been unloaded it should not crash",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767#issuecomment-895029183:378,load,loaded,378,https://root.cern,https://github.com/root-project/root/issues/8767#issuecomment-895029183,1,['load'],['loaded']
Performance,TBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2456,load,load,2456,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,"TConfiguredAction::operator() (object=0x55555855a0c0, buffer=..., this=0x55555812a1b0); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #28 TBufferFile::ApplySequence (this=0x7fffffffd9d0, sequence=..., obj=0x55555855a0c0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3580; #29 0x00007ffff76f1b94 in TBufferFile::ReadClassBuffer (this=0x7fffffffd9d0, cl=0x555558490b70, pointer=<optimized out>, onFileClass=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3499; #30 0x00007ffff778a22e in TClass::Streamer (onfile_class=0x0, b=..., obj=0x55555855a0c0, this=0x555558490b70); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:610; #31 TKey::ReadObjectAny (this=0x5555569f77a0, expectedClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TKey.cxx:1108; #32 0x00007ffff774aa1b in TDirectoryFile::GetObjectChecked (this=0x555556a15ce0, namecycle=<optimized out>, expectedClass=0x555558490b70); at /home/rembserj/spaces/master/root/src/root/io/io/src/TDirectoryFile.cxx:1111; #33 0x00005555555551f6 in TDirectory::Get<RooStats::HistFactory::Measurement> (this=0x555556a15ce0, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/build/../install/include/root/TDirectory.h:207; #34 TDirectoryFile::Get<RooStats::HistFactory::Measurement> (this=0x555556a15ce0, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/build/../install/include/root/TDirectoryFile.h:84; #35 repro () at repro.C:10; ```. So the crash is here (https://github.com/root-project/root/blob/master/io/io/src/TBufferFile.cxx#L245):; ```c++; if (nwh == 255) {; *this >> nbig;; obj->resize(nbig,'\0');; ReadFastArray((char*)obj->data(),nbig);; }; ```; I have put some debug printouts. When it crashes, `nbig` is `-1`, and resize() expects and unsigned int. The -1 becomes a very large unsigned number that exceeds the maximum allowed length of a `std::string",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:7233,optimiz,optimized,7233,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,1,['optimiz'],['optimized']
Performance,"Thank you! I made the modification. Still not clear to me, why it is necessary. But this is not a (very) performance-critical path, so it's fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14731#issuecomment-1948143634:105,perform,performance-critical,105,https://root.cern,https://github.com/root-project/root/pull/14731#issuecomment-1948143634,1,['perform'],['performance-critical']
Performance,"Thanks everyone for the valuable feedback! I changed the behaviour of the feature to make it simpler to use correctly, and also added one or two perks:. * `OnParameterUpdate` (was `RegisterCallback`) now takes a callable that will be invoked once every specified number of entries on a partial result in _one_ of the worker threads. It will never be invoked concurrently; * `OnParameterUpdateSlot` takes a callable that will be invoked once every specified number of entries on a partial result in each of the worker threads. It will be invoked concurrently, and will also take as argument the ""processing slot"" number the partial result belongs to; * passing `0` as `everyNEvents` parameter to `OnParameterUpdate[Slot]` makes it so that the callback is invoked just once [per slot] before starting the event loop",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331721438:358,concurren,concurrently,358,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331721438,2,['concurren'],['concurrently']
Performance,"Thanks for the quick feedback!. I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9429#issuecomment-992593304:680,queue,queueing-system-walltime-killing-workers,680,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992593304,1,['queue'],['queueing-system-walltime-killing-workers']
Performance,"The attached image shows a summary of differences on KNL with 128 threads. Notice how the wait time is significantly reduced from 1485.7s to 1105s. There are also 2936 less waits than before. CPU time of all threads is reduced by ~50s. These are not hugely visible in real runtime, because we are limited by I/O to the disk, essentially, but it would be clearly visible if I/O ceases to be the main bottleneck. The two figures on the bottom show that the time during which the threads run is shorter after the changes introduced in this PR. For reference, the running time without using VTune is about 40s. ![screenshot](https://user-images.githubusercontent.com/249404/27963876-988c7862-6336-11e7-9598-e48c4c760a5e.png). ![screenshot](https://user-images.githubusercontent.com/249404/27964106-678b94b8-6337-11e7-9464-5cc1f4312bd1.png). ![screenshot](https://user-images.githubusercontent.com/249404/27964127-7ed03c78-6337-11e7-8832-7c61643b4939.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/747#issuecomment-313710392:399,bottleneck,bottleneck,399,https://root.cern,https://github.com/root-project/root/pull/747#issuecomment-313710392,1,['bottleneck'],['bottleneck']
Performance,"The code looks fine to me. I don't think using vector::reserve is needed in this case. . It would be nice to test the performance in a complex fix which takes some time and uses heavily the cache, The tutorial are maybe too simple and the fitting is too fast. ; If you can maybe simplify your workspace and make a standalone running example would be great. ; Also, did you observe a substantial performance penalty when creating the std::vector in recalculateCache instead of having as a data member of the class ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/116#issuecomment-293337111:118,perform,performance,118,https://root.cern,https://github.com/root-project/root/pull/116#issuecomment-293337111,3,"['cache', 'perform']","['cache', 'performance']"
Performance,"The functionality of Cache is all there. The only issue remaining is caching a cached TDF (let's call this latter ""A"") without destroying the cache of the cached (meaning ""A""). This is a side effect of the optimisation in place to deliver data with zero-copies to transformations and actions requesting it. As for testing, checking the caching works with IMT on needs to be done. The extra mile would consist in checking statically that T does not have a copy constructor and react. How to react is not completely clear to me yet. There are two ways perhaps to solve this problem: 1. Act on the container, keeping in mind that the containers which form the cache must support random access for MT execution. 2. Act on the contained type, wrapping objects in some way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1056#issuecomment-332682497:79,cache,cached,79,https://root.cern,https://github.com/root-project/root/pull/1056#issuecomment-332682497,4,['cache'],"['cache', 'cached']"
Performance,"The issue in CMSSW is fixed now by just not doing a ranged fit, but in ROOT master this performance regression still needs to be fixed. Here is a simple reproducer for the problem, with the code extracted from the CMSSW source linked in the initial post:; ```c++; void script(); {; using namespace RooFit;. RooRealVar x(""x"", """", 0, 10);. RooRealVar mean(""mu"", """", 5.0, 0, 10);; RooRealVar width(""width"", """", 1.0, 0.1, 10);; RooRealVar sigma(""sigma"", """", 2.0, 0.1, 10);; RooVoigtian voigt(""voigt"", """", x, mean, width, sigma);. RooRealVar lambda(""lambda"", """", -0.01, -100., 1.);; RooExponential expo(""expo"", """", x, lambda);. RooRealVar b(""n_bkg"", """", 100., 0, 1000);; RooRealVar s(""n_sig"", """", 1000., 0, 10000);. RooAddPdf model(""model"", """", {voigt, expo}, {s, b});. std::unique_ptr<RooDataSet> data{model.generate(x)};. model.fitTo(*data, Range(0.0, 10.0), PrintLevel(-1));; }; ```. Most likely, this issue was caused by https://github.com/root-project/root/pull/11455. I set the priority to `high` now, because this is a regression that also affects experiment workflows and it needs to be fixed before the 6.28 release for sure! Therefore, this issue is also added to the 6.28 milestone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11637#issuecomment-1297108209:88,perform,performance,88,https://root.cern,https://github.com/root-project/root/issues/11637#issuecomment-1297108209,1,['perform'],['performance']
Performance,"The problem with trying one after the other is that the number of combinations quickly goes through the roof. Consider that a python-side proxy can be freely converted from/to `T*`, `T**`, `T[]`, `T&`, `T&&`, and their `std::shared_ptr<>` and `std::unique_ptr<>` equivalents. So, that may mean 15 tries. If there are 3 arguments, the number of combinations is 455, faculty being what it is. Sure, I can make some educated guess to put the most likely candidates first, and that is basically when is currently going on. But a single lookupHelper call for template instantiation can already be too slow to be usable: e.g. for PCL they run (after the first 7-14s loading, which modules should fix) they are still of the order of 0.1s. (We have discussed that problem, too: contrary to normal Clang usage, Cling dumps everything in a single translation unit, vastly increasing the number of possible matches. Try going after `operator<<(std::ostream&)` or `operator==` in the global namespace, for example.). You mention int, but there are `int8_t`, `uint8_t` (these are often `char` varieties), `short`, `unsigned short`, `int16_t`, `uint16_t`, `int`, `unsigned int`, `long`, `unsigned long`, `long long`, and `unsigned long long` to try. Sure, let's do `str` to `const char*`, but that won't work for `std::string&`, and `std::string` usage is more common. But ah, what about `wchar_t`, `char16_t`, `char32_t`, `std::wstring`?. Collections, sure, but what if instead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-696889449:660,load,loading,660,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-696889449,1,['load'],['loading']
Performance,"They do, but they are not at odd. libImt is presently the tool used via TROOT to get the status of the activation of ImplicitMT. That requires the load of libImt and the invocation of a function. This PR made of 1 commit simplifies the mechanism, avoiding to load libImt (and initialise the entire TROOT) in case only the activation status of ImplicitMT is required.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1127#issuecomment-334141079:147,load,load,147,https://root.cern,https://github.com/root-project/root/pull/1127#issuecomment-334141079,2,['load'],['load']
Performance,"This is critical because we might load who knows what into the frameworks. But because the fix is rather intrusive, and the OP has a simple workaround, I'll *not* backport the fixes to our existing release branches.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7955#issuecomment-856839812:34,load,load,34,https://root.cern,https://github.com/root-project/root/issues/7955#issuecomment-856839812,1,['load'],['load']
Performance,This looks like a nasty mix of runtime reflection information and IO (we use TEmulatedTuple to abstract from implementation details of the tuple class in the stl to perform IO in a simple way). @pcanal would you be able to suggest a path to improve the current situation?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8875#issuecomment-2076689182:165,perform,perform,165,https://root.cern,https://github.com/root-project/root/issues/8875#issuecomment-2076689182,1,['perform'],['perform']
Performance,"To be clear, it seems to me that the following:. ```C++; diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx; index c69a3a95e3..e80e45d8be 100644; --- a/tree/tree/src/TBranch.cxx; +++ b/tree/tree/src/TBranch.cxx; @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,; /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may; /// still fail, depending on the contents of the individual TBaskets loaded.; Bool_t TBranch::SupportsBulkRead() const {; + return true;; return (fNleaves == 1) &&; (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);; }; @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf); // TODO: eventually support multiple leaves.; if (R__unlikely(fNleaves != 1)) return -1;; TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));; - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}; +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}; ; // Remember which entry we are reading.; fReadEntry = entry;; @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf); Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;; //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);; if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {; - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");; - return -1;; + leaf->ReadBasket(user_buf);; }; user_buf.SetBufferOffset(bufbegin);; ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520#issuecomment-701704099:326,perform,perform,326,https://root.cern,https://github.com/root-project/root/issues/6520#issuecomment-701704099,2,"['load', 'perform']","['loaded', 'perform']"
Performance,"We are still discussing the names. The current proposal is:; ```; using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with; /// that name does not exist, an invalid RFilePtr will be returned.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid; /// `RFilePtr`) if a file with this name already exists.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name; /// already exists, delete it and create a new one. Else simply create a new file.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());; ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14017#issuecomment-1821818413:179,multi-thread,multi-threaded,179,https://root.cern,https://github.com/root-project/root/pull/14017#issuecomment-1821818413,4,['multi-thread'],['multi-threaded']
Performance,"We intentionally keep macros ""illegal C++"": we have a C++ interpreter and we should benefit from this, removing parts of C++ not needed for interactive use, *especially* for tutorials. We find this simplifies the tutorials. We have exceptions for tutorials where we believe many uses will be compiled. . Being able to compile the tutorials isn't a benefit in and by itself. This PR here came out of https://github.com/root-project/root/pull/10004 which claims ""Precompiles C++ script to potentially speedup (slightly) documentation building"". If that's indeed correct then that's a bug in cling. cling must be as fast as compiled code (if using the same optimizer, the same clang version as cling links against etc). So I'd like to better understand the motivation of this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10195#issuecomment-1075129814:654,optimiz,optimizer,654,https://root.cern,https://github.com/root-project/root/pull/10195#issuecomment-1075129814,1,['optimiz'],['optimizer']
Performance,"What can be done here is rather simple. The bottleneck last time I checked is rootcling (dictionary generation). There are two reasons:; * cmake -- dictionary generation depends on LinkDef and header files and both artifacts are available from the beginning. However, the cmake build system does not have separate targets for dictionary generation and library generation. That leads to forcing rootcling to wait for the expensive linking step of each library. For example, instead of building `Y.pcm` once we are done with building `X.pcm` we wait for the linker to link `X.so`.; * rootcling is unnecessary slow -- the tool has grown organically and in many cases we make many iterations over the AST where we don't need them. Some of the larger scale ideas have been outlined here since years: https://github.com/root-project/root-evolution/pull/5 In fact, we don't need to get so much into the refactoring rootcling, attaching a profiler and seeing the bottlenecks should be easy. For example, iirc, we make several passes over the AST to harvest the selection rules instead of making a single pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432#issuecomment-2001956688:44,bottleneck,bottleneck,44,https://root.cern,https://github.com/root-project/root/issues/6432#issuecomment-2001956688,2,['bottleneck'],"['bottleneck', 'bottlenecks']"
Performance,"While the current behaviour is clearly a bug and needs to be fixed, I would also appreciate a workaround that I could use right now. Maybe there is some function/static method to call to clean up the global caches (if that is indeed a problem of caching).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10577#issuecomment-1126366016:207,cache,caches,207,https://root.cern,https://github.com/root-project/root/issues/10577#issuecomment-1126366016,1,['cache'],['caches']
Performance,"With the following changes; ```; diff --git a/bindings/pyroot/pythonizations/python/ROOT/__init__.py b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; index 52d23a6fc3..790432eb3d 100644; --- a/bindings/pyroot/pythonizations/python/ROOT/__init__.py; +++ b/bindings/pyroot/pythonizations/python/ROOT/__init__.py; @@ -79,6 +79,7 @@ def cleanup():; # Hard teardown: run part of the gROOT shutdown sequence.; # Running it here ensures that it is done before any ROOT libraries; # are off-loaded, with unspecified order of static object destruction.; + print(""Calling EndOfProcessCleanups from __init__.py""); backend.gROOT.EndOfProcessCleanups(); ; atexit.register(cleanup); diff --git a/core/base/src/TApplication.cxx b/core/base/src/TApplication.cxx; index 8bdaa03f8d..9a02160611 100644; --- a/core/base/src/TApplication.cxx; +++ b/core/base/src/TApplication.cxx; @@ -86,6 +86,7 @@ static void CallEndOfProcessCleanups(); // set gROOT in its end-of-life mode which prevents executing code, like; // autoloading libraries (!) that is pointless ...; if (gROOT) {; + std::cout << ""Calling EndOfProcessCleanups from TApplication\n"";; gROOT->SetBit(kInvalidObject);; gROOT->EndOfProcessCleanups();; }; ```. I get this; ```; $: python -c ""import ROOT""; Calling EndOfProcessCleanups from __init__.py; $: python -c ""import ROOT; ROOT.TH1F""; Calling EndOfProcessCleanups from __init__.py; Calling EndOfProcessCleanups from TApplication; ```. i.e. it looks to me that as long as anything is done in the PyROOT application other than simply importing the module, the second cleanup routine is called at the end of the process (after the Python one). Either one of these should probably not be called",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10743#issuecomment-1154462514:492,load,loaded,492,https://root.cern,https://github.com/root-project/root/issues/10743#issuecomment-1154462514,1,['load'],['loaded']
Performance,"Without a better place to put this (should I open a follow-up issue?):. > 1. Try to reproduce the problem with vanilla lli of LLVM 9 to check that this is not related to the way Cling incrementally JITs and executes. I can reproduce the problem with vanilla `lli -O0` of LLVM 9.0.1 for the following simple C program compiled to LLVM IR with `clang -S -emit-llvm print.c`:; ```c; #include <stdio.h>. int main() {; printf(""Hello from JIT\n"");; }; ```. Higher optimization levels (default is `-O2`) make the problem go away, as does `--global-isel=0`. So far, so consistent. > 2. Figure out exactly why GlobalISel emits different branch instructions, and whether this is a problem in the framework or of the generated IR.; > 3. Verify if the same happens with LLVM 11/12 (whatever Cling will move to next), and possibly fix the underlying issue in LLVM upstream's `main`. LLVM 11.1.0 does not show the problem with `lli -O0` by default due to https://github.com/llvm/llvm-project/commit/366ab0d086a457b085e3c9ba1c987d5499079cd6, but forcing `--global-isel=1` still fails. The commit message is light on details, but I'd say this confirms it's a framework problem of GlobalISel. I would guess that the problem persists in `main` (unless somebody fixed since the last release).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7419#issuecomment-799389082:458,optimiz,optimization,458,https://root.cern,https://github.com/root-project/root/pull/7419#issuecomment-799389082,1,['optimiz'],['optimization']
Performance,XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module Gviz; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; Failed to load module Thread; input_line_4:1:2: error: unknown type name 'ifdef'; #ifdef complex; ^; <<< cling interactive line includer >>>:1:1: error: expected unqualified-id; input_line_5:1:2: error: unknown type name 'if,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4620,load,load,4620,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"Yes, I know about rootbrowse. The TBrowser was just the simplest example I have. It's not the only custom command line option I'm using, I also use this to manipulate gStyle, load .so files, etc. . Of course I am fully aware that my complaint feels a lot like https://xkcd.com/1172/...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8850#issuecomment-1079234719:175,load,load,175,https://root.cern,https://github.com/root-project/root/issues/8850#issuecomment-1079234719,1,['load'],['load']
Performance,ad/); - [projectroot.roottest.cling.stl.dicts.roottest_cling_stl_dicts_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.stl/dicts/roottest_cling_stl_dicts_build/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stl_makeproject_test_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stl_makeproject_test_build/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_MyClass_v1_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_MyClass_v1_libgen_build/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadtest_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadtest_build/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_read_leaves_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_read_leaves_build/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_classWithComplex_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_classWithComplex_libgen_build/); - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_forwardList_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_forwardList_libgen_build/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_classes_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2454#issuecomment-411275022:4076,load,load,4076,https://root.cern,https://github.com/root-project/root/pull/2454#issuecomment-411275022,1,['load'],['load']
Performance,"after very long pause (sorry), I've rerun my tests with dev3 LCG nightly slot and I see that performance is close to values from the start of December. Likely the the problem is solved and the issue can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11927#issuecomment-1399911161:93,perform,performance,93,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1399911161,1,['perform'],['performance']
Performance,ailed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3802,load,load,3802,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,ailed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module Proo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3245,load,load,3245,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,ailed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4111,load,load,4111,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"alizing::~Deserializing (this=0x7ffffffe27d8) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:89; #23 0x00007ffff07e3cc0 in clang::ASTReader::ReadAST (this=0x555555609330, FileName=..., Type=clang::serialization::MK_PrebuiltModule, ImportLoc=..., ClientLoadCapabilities=0, Imported=0x0); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:4379; #24 0x00007ffff0495e2e in clang::CompilerInstance::loadModule (this=0x55555562fb60, ImportLoc=..., Path=..., Visibility=clang::Module::AllVisible, IsInclusionDirective=false); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1710; #25 0x00007ffff117e1dd in clang::Sema::ActOnModuleImport (this=0x5555556b5680, StartLoc=..., ExportLoc=..., ImportLoc=..., Path=...); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; #26 0x00007fffef9655fa in cling::Interpreter::loadModule (this=0x5555555ef460, M=0x555555956a90, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; #27 0x00007fffef965326 in cling::Interpreter::loadModule (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; moduleName=, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:872; #28 0x00007fffef85f5f6 in TClingCallbacks::findInGlobalModuleIndex (this=0x5555563ffde0, Name=..., loadFirstMatchOnly=false) at /home/jun/dev/root/core/metacling/src/TClingCallbacks.cxx:339; #29 0x00007fffef85f7ca in TClingCallbacks::LookupObject (this=0x5555563ffde0, DC=0x5555564f80b8, Name=...) at /home/jun/dev/root/core/metacling/src/TClingCallbacks.cxx:376; #30 0x00007fffef9735b7 in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x5555556b8b30, DC=0x5555564f80b8, DN=...); at /home/jun/dev/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:70; #31 0x00007fffef97e8f5 in cling::InterpreterExternalSemaSour",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253760320:9601,load,loadModule,9601,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320,1,['load'],['loadModule']
Performance,an; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2716,load,load,2716,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; Failed to load module ROOT_Foundation_C; Failed to load module ROOT_Rtypes; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Core; Failed to load module Rint; Failed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:2782,load,load,2782,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"arch order to search for first the one; > that are not marked RTLD_GLOBAL.; >; > So any other client that wants to open thing's with RTLD_LOCAL will ; > then expose what they thought were private symbols to the JIT as a whole?; >; > One of the issues is that it is not clear to me is what exactly is; > your use case and this is why there are misunderstandings.; >; > I also don't understand why there are mis-understandings, but have ; > explained the use case a few times now and *3* will explicitly break ; > that as well as provide bizarre default behavior:; >; > libc++.so, libA.so; > libA.so defines an overload for global operator new/delete; >; > |DynamicLibrary::getPermanentLibrary(NULL) // Other code; > DynamicLibrary::getPermanentLibrary(""libA.so"") |; >; > In your scheme the JIT can pull operator new/delete from libA.so,; > and worse is that whether it pulls operator new/delete from; > libA.so is dependent on whether operator new/delete has been; > resolved in *// Other code* before libA.so has been loaded.; >; > The example can be expanded to RTTI information, exceptions, and a ; > host of other problems.; >; No, this would not break the case you mentioned. The case that will ; have a special behavior is if you called ; `DynamicLibrary::addPermanentLibrary(handle)`. So you should be safe there.; >; > And even worse than that is that in your scheme there is no way of ; > hiding symbols from the global scope, in fact it promotes everything ; > that the user reasonably expected to be private (via RTLD_LOCAL) to ; > take dominance over anything else.; >; I understand that and I am totally fine for fixing this the right way ; after the llvm release.; >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub ; > <https://github.com/root-project/root/pull/744#issuecomment-313799028>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/AGNuU_J817GPmYooZ_jUyw85N6Y9ayBUks5sLqTrgaJpZM4OO5d2>.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313802370:3045,load,loaded,3045,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313802370,1,['load'],['loaded']
Performance,"are of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```; Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'; aborting; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Exit code 0xc0000374; ```. ```; 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```; 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; CMake Error at C:/ROOT-CI/build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1915527940:1503,concurren,concurrentfill,1503,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1915527940,1,['concurren'],['concurrentfill']
Performance,ase/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.cling.dict.fwd-decl-stdless.roottest_cling_dict_fwd_decl_stdless_execLessyTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.cling.dict/fwd-decl-stdless/roottest_cling_dict_fwd_decl_stdless_execLessyTest/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_runTTestClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.cling/parsing/roottest_cling_parsing_runTTestClass/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadNamespace](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadNamespace/); - [projectroot.roottest.root.meta.roottest_root_meta_runautoload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root/meta/roottest_root_meta_runautoload_auto/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root/meta/roottest_root_meta_runtemplateAutoload_auto/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoloadInclude_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root/meta/roottest_root_meta_runtemplateAutoloadInclude_auto/); - [projectroot.roottest.root.meta.rootcling.roottest_root_meta_rootcling_includeInLinkdef](https://eps,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395599631:3414,load,load,3414,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395599631,1,['load'],['load']
Performance,ast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolutio,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-398607736:3204,cache,cache,3204,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-398607736,1,['cache'],['cache']
Performance,ast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolutio,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400118785:3204,cache,cache,3204,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400118785,1,['cache'],['cache']
Performance,aw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2686,load,load,2686,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.core.imt.test.gtest_core_imt_test_coreimttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_core_imt_test_coreimttestUnit/); - [projectroot.core.imt.test.gtest_core_imt_test_testTFuture](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411701514:3150,cache,cache,3150,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411701514,1,['cache'],['cache']
Performance,cm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2366,load,load,2366,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,"d 6.42 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```; 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ```; 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```; 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec; ; Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]!; CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```. ```; 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec; ; Processing /Users/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1915527940:2602,concurren,concurrentfill,2602,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1915527940,1,['concurren'],['concurrentfill']
Performance,d module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module Gviz; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; Failed to load module Thread; input_line_4:1:2: error: unknown type name 'ifdef'; #ifdef complex; ^; <<< cling interactive line includer >>>:1:1: error: expected unqualified-id; input_line_5:1:2: error: unknown type name 'ifdef'; #ifdef PI; ^; <<< cling interactive line includer >>>:1:1: error: expected unqualified-id; input_line_6:1:2: error: unknown type name 'ifdef'; #ifdef ERROR; ^; <<< cling interactive line includer >>>:1:1: error: expected unqualified-id.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4874,load,load,4874,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,17,['load'],['load']
Performance,d module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module Gviz; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; Failed to load module Thread; input_line_4:1:2: error: unknown type name 'ifdef'; #ifdef complex; ^; <<< cling interactive line includer >>>:1:1: error: expected unqualified-id; input_lin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4583,load,load,4583,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,d module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module Gviz; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4399,load,load,4399,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,d to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to lo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3957,load,load,3957,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,d to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module st,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3122,load,load,3122,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,d to load module _Builtin_intrinsics; Failed to load module ROOT_Foundation_C; Failed to load module ROOT_Rtypes; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Core; Failed to load module Rint; Failed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load modu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:2867,load,load,2867,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,d* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.cling.dict.fwd-decl-stdless.roottest_cling_dict_fwd_decl_stdless_execLessyTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.cling.dict/fwd-decl-stdless/roottest_cling_dict_fwd_decl_stdless_execLessyTest/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_runTTestClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.cling/parsing/roottest_cling_parsing_runTTestClass/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadNamespace](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadNamespace/); - [projectroot.roottest.root.meta.roottest_root_meta_runautoload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root/meta/roottest_root_meta_runautoload_auto/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root/meta/roottest_root_meta_runtemplateAutoload_auto/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoloadInclude_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root/meta/roottest_root_meta_runtemplateAutoloadInclude_auto/); - [projectroot.roottest.root.meta.rootcling.roottest_root_meta_rootcling_includeInLinkdef](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.meta/rootcling/roottest_root_meta_rootcling_includeInLinkdef/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395599631:3570,load,load,3570,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395599631,1,['load'],['load']
Performance,"d64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1154135015:2013,load,load,2013,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015,3,['load'],['load']
Performance,dule Core; Failed to load module Rint; Failed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3051,load,load,3051,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,dule RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2515,load,load,2515,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,dule Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2485,load,load,2485,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,e ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3610,load,load,3610,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"e do not read CSV files with ROOT and `RDataFrame` will be mostly used to interact in a simple and quick way with trees. > ; > > there should be a function that allows us to merge them; > ; > If I have to think about this function you propose, I don't see it going much further than the example you already have above. Since RDataFrame **is not** the dataset itself, but just an interface to it, it still needs to open the file where the dataset is contained and read data from it. Thus, merging two RDF objects would still involve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; > ; > ```python; > # Opening files and loading pre-existing datasets; > df_1=ROOT.RDataFrame('tree', file_path_1); > df_2=ROOT.RDataFrame('tree', file_path_2); > ; > # creating new columns in the datasets; > df_1=df_1.Define('identity', '+1'); > df_2=df_2.Define('identity', '+2'); > ; > # Merging the datasets in memory; > df_3 = df_1.Merge(df_2); > # Opening a new file and save the merged dataset into the new file; > df_3.Snapshot('tree', 'file.root'); > ```; > ; > I admit that I might not be able to see some internal optimizations that RDF might do while merging, but the logical steps seem to be equivalent to me. Or I also might be misinterpreting your proposal. No, the approaches are different. In the approach without `RDataFrame::Merge` I save twice the modified trees with the new column added, so the whole thing is slower than the second approach where the looping and saving can be done only once. . > ; > ## Current possible approaches; > If you need to process a dataset with RDF and need t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-927331768:2026,load,loading,2026,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927331768,1,['load'],['loading']
Performance,"e it back upstream.; > ; > I think all of us appreciate the time and brain power Vincenzo invests in improving the code. I bet it's useful to propose changes coming out of this upstream where relevant, @sudo-panda ?. Hi @Axel-Naumann ,. I am really grateful to @vepadulano for investing his precious time in reviewing this PR and suggesting changes to improve it. If not for his suggestions about the `namespace NumbaExt` code, I wouldn't have been able to simplify it. On the other hand, @vgvassilev is right about the global statements being a non-critical change and wouldn't be accepted upstream. And I am sure when he said that, he didn't mean that Vincenzo's efforts were wasteful. Finally, AFAIU Vincenzo thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [SO answer](https://stackoverflow.com/a/4693392), Python use",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11096#issuecomment-1603484912:1060,cache,cache,1060,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912,1,['cache'],['cache']
Performance,"e/c++/13.1.1/bits/basic_string.h:403; #9 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux (__c=<optimized out>, __n2=<optimized out>,; __n1=<optimized out>, __pos1=<optimized out>, this=<optimized out>) at /usr/include/c++/13.1.1/bits/basic_string.tcc:450; #10 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append (__c=<optimized out>, __n=<optimized out>, this=<optimized out>); at /usr/include/c++/13.1.1/bits/basic_string.h:1489; #11 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::resize (__c=<optimized out>, __n=<optimized out>, this=<optimized out>); at /usr/include/c++/13.1.1/bits/basic_string.tcc:401; #12 TBufferFile::ReadStdString (this=0x7fffffffd9d0, obj=0x7fffa8bd2d68) at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:247; #13 0x00007ffff76eb1f1 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x555555cc34b0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:610; #14 TBufferFile::ReadFastArray (this=0x7fffffffd9d0, start=<optimized out>, cl=0x555555cc34b0, n=<optimized out>, streamer=<optimized out>, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:1609; #15 0x00007ffff7931e28 in TStreamerInfo::ReadBuffer<TVirtualCollectionProxy> (this=0x555558509890, b=..., arr=..., compinfo=0x5555585140d0,; first=first@entry=0, last=4, narr=16777216, eoffset=0, arrayMode=1); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1297; #16 0x00007ffff787d2bd in TStreamerInfo::ReadBufferSTL (v7=<optimized out>, eoffset=<optimized out>, nc=<optimized out>, cont=<optimized out>, b=...,; this=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1741; #17 TStreamerInfo::ReadBufferSTL (this=<optimized out>, b=..., cont=<optimized out>, nc=<optimized out>, eoffset=<optimized out>, v7=<opti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:2605,optimiz,optimized,2605,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,1,['optimiz'],['optimized']
Performance,e/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-398607736:3352,cache,cache,3352,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-398607736,1,['cache'],['cache']
Performance,e/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400118785:3352,cache,cache,3352,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400118785,1,['cache'],['cache']
Performance,e; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2400,load,load,2400,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,ecorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module Gviz; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; Failed to load module Thread; input_line_4:1:2: error: unknown type name 'ifdef'; #ifdef complex; ^; <<< cling interactive line includer >>>:1:1: error: expected unqualified-id; input_line_5:1:2: error: unknown type name 'ifdef'; #ifdef PI; ^; <<< cling interactive line includer >>>:1:1: error: expected unqualified-id; input_line_6:1:2: error: unknown type name 'ifdef'; #ifdef ERROR; ^; <<< cling interactive line includer >>>:1:1: error: ex,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4840,load,load,4840,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"ed out>,; __n1=<optimized out>, __pos1=<optimized out>, this=<optimized out>) at /usr/include/c++/13.1.1/bits/basic_string.tcc:450; #10 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append (__c=<optimized out>, __n=<optimized out>, this=<optimized out>); at /usr/include/c++/13.1.1/bits/basic_string.h:1489; #11 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::resize (__c=<optimized out>, __n=<optimized out>, this=<optimized out>); at /usr/include/c++/13.1.1/bits/basic_string.tcc:401; #12 TBufferFile::ReadStdString (this=0x7fffffffd9d0, obj=0x7fffa8bd2d68) at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:247; #13 0x00007ffff76eb1f1 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x555555cc34b0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:610; #14 TBufferFile::ReadFastArray (this=0x7fffffffd9d0, start=<optimized out>, cl=0x555555cc34b0, n=<optimized out>, streamer=<optimized out>, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:1609; #15 0x00007ffff7931e28 in TStreamerInfo::ReadBuffer<TVirtualCollectionProxy> (this=0x555558509890, b=..., arr=..., compinfo=0x5555585140d0,; first=first@entry=0, last=4, narr=16777216, eoffset=0, arrayMode=1); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1297; #16 0x00007ffff787d2bd in TStreamerInfo::ReadBufferSTL (v7=<optimized out>, eoffset=<optimized out>, nc=<optimized out>, cont=<optimized out>, b=...,; this=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1741; #17 TStreamerInfo::ReadBufferSTL (this=<optimized out>, b=..., cont=<optimized out>, nc=<optimized out>, eoffset=<optimized out>, v7=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1737; #18 0x00007ffff7931b46 in TStreamerInfo::ReadBuffer<TVirtualCollection",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:2777,optimiz,optimized,2777,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,3,['optimiz'],['optimized']
Performance,ed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3153,load,load,3153,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,ed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:3036,load,load,3036,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,27,['load'],['load']
Performance,ed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module Gviz; Failed to load module R,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4267,load,load,4267,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,ed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtyp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3094,load,load,3094,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,ed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO;,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3218,load,load,3218,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,ed to load module std; Failed to load module _Builtin_intrinsics; Failed to load module ROOT_Foundation_C; Failed to load module ROOT_Rtypes; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Core; Failed to load module Rint; Failed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module R,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:2839,load,load,2839,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"elevant, @sudo-panda ?. Hi @Axel-Naumann ,. I am really grateful to @vepadulano for investing his precious time in reviewing this PR and suggesting changes to improve it. If not for his suggestions about the `namespace NumbaExt` code, I wouldn't have been able to simplify it. On the other hand, @vgvassilev is right about the global statements being a non-critical change and wouldn't be accepted upstream. And I am sure when he said that, he didn't mean that Vincenzo's efforts were wasteful. Finally, AFAIU Vincenzo thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [SO answer](https://stackoverflow.com/a/4693392), Python used to differentiate between having a global statement or not. And even though the answer is more than ten years old, I experienced this firsthand when I started using Python (about four years b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11096#issuecomment-1603484912:1242,cache,cache,1242,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912,1,['cache'],['cache']
Performance,"ess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37576/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.compression.roottest_root_io_compression_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37576/testReport/projectroot.roottest.root.io/compression/roottest_root_io_compression_make/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37576/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_hadd_autoload/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37576/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2492#issuecomment-414426779:2673,cache,cache,2673,https://root.cern,https://github.com/root-project/root/pull/2492#issuecomment-414426779,2,['cache'],['cache']
Performance,"ess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37859/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.compression.roottest_root_io_compression_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37859/testReport/projectroot.roottest.root.io/compression/roottest_root_io_compression_make/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37859/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_hadd_autoload/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37859/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2492#issuecomment-415001212:2673,cache,cache,2673,https://root.cern,https://github.com/root-project/root/pull/2492#issuecomment-415001212,2,['cache'],['cache']
Performance,"essage):; error code: Access violation; ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```; 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ```; 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```; 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec; ; Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]!; CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```. ```; 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec; ; Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1915527940:2742,concurren,concurrentfill,2742,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1915527940,1,['concurren'],['concurrentfill']
Performance,"etion; (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion; (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method); (C++ compiled) class TQObject //Base class for object communication mechanism; (C++ compiled) class TFunction public:TDictionary //Dictionary for global function; (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers; (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries; (C++ compiled) class TTask public:TNamed //Base class for tasks; (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action.; (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo; (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling system events; (C++ compiled) struct SysInfo_t //System information - OS, CPU, RAM.; (C++ compiled) struct CpuInfo_t //CPU load information.; (C++ compiled) struct MemInfo_t //Memory utilization information.; (C++ compiled) class TVirtualPad public:TObject public:TAttLine public:TAttFill public:TAttPad public:TQObject //Abstract base class for Pads and Canvases; (C++ compiled) class TPMERegexp protected:TPRegexp //Wrapper for Perl-like regular expression matching.; (C++ compiled) class TStringToken public:TString //String tokenizer using PCRE for finding next tokens.; (C++ compiled) class TClassGenerator public:TObject //interface for TClass generators; (C++ compiled) class TROOT public:TDirectory //Top level (or root) structure for all classes; (C++ compiled) class TVirtualStreamerInfo public:TNamed //Abstract Interface describing Streamer information for one class; (C++ compiled) class TStreamerElement public:TNamed //Base class for one element (data member) to be Streamed; (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations; (C++ compiled) class TVirtualP",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:3142,load,load,3142,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,1,['load'],['load']
Performance,f; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3275,load,load,3275,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"fffffd9d0, cl=0x555558490b70, pointer=<optimized out>, onFileClass=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3499; #30 0x00007ffff778a22e in TClass::Streamer (onfile_class=0x0, b=..., obj=0x55555855a0c0, this=0x555558490b70); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:610; #31 TKey::ReadObjectAny (this=0x5555569f77a0, expectedClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TKey.cxx:1108; #32 0x00007ffff774aa1b in TDirectoryFile::GetObjectChecked (this=0x555556a15ce0, namecycle=<optimized out>, expectedClass=0x555558490b70); at /home/rembserj/spaces/master/root/src/root/io/io/src/TDirectoryFile.cxx:1111; #33 0x00005555555551f6 in TDirectory::Get<RooStats::HistFactory::Measurement> (this=0x555556a15ce0, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/build/../install/include/root/TDirectory.h:207; #34 TDirectoryFile::Get<RooStats::HistFactory::Measurement> (this=0x555556a15ce0, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/build/../install/include/root/TDirectoryFile.h:84; #35 repro () at repro.C:10; ```. So the crash is here (https://github.com/root-project/root/blob/master/io/io/src/TBufferFile.cxx#L245):; ```c++; if (nwh == 255) {; *this >> nbig;; obj->resize(nbig,'\0');; ReadFastArray((char*)obj->data(),nbig);; }; ```; I have put some debug printouts. When it crashes, `nbig` is `-1`, and resize() expects and unsigned int. The -1 becomes a very large unsigned number that exceeds the maximum allowed length of a `std::string`. To me that looks more like a problem with IO than with HistFactory (the memory layout of the `HistFactory::Measurement` classes hasn't changed from 6.26 to 6.28. Is that something that makes sense to you, @pcanal? What does this `nbig` stand for, and in which circumstances can this be `-1`?. Maybe in the best case, the fix would just be adding a simple `if(nbig >= 0)` before the call to `resize()`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:7671,optimiz,optimized,7671,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,1,['optimiz'],['optimized']
Performance,"foActions::ReadSTLMemberWiseSameClass (buf=..., addr=<optimized out>, conf=conf@entry=0x555558626dd0,; vers=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1155; #26 0x00007ffff781f896 in TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray>; (buf=..., addr=0x55555855a0c0, conf=0x555558626dd0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1405; #27 0x00007ffff76e9c05 in TStreamerInfoActions::TConfiguredAction::operator() (object=0x55555855a0c0, buffer=..., this=0x55555812a1b0); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #28 TBufferFile::ApplySequence (this=0x7fffffffd9d0, sequence=..., obj=0x55555855a0c0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3580; #29 0x00007ffff76f1b94 in TBufferFile::ReadClassBuffer (this=0x7fffffffd9d0, cl=0x555558490b70, pointer=<optimized out>, onFileClass=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3499; #30 0x00007ffff778a22e in TClass::Streamer (onfile_class=0x0, b=..., obj=0x55555855a0c0, this=0x555558490b70); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:610; #31 TKey::ReadObjectAny (this=0x5555569f77a0, expectedClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TKey.cxx:1108; #32 0x00007ffff774aa1b in TDirectoryFile::GetObjectChecked (this=0x555556a15ce0, namecycle=<optimized out>, expectedClass=0x555558490b70); at /home/rembserj/spaces/master/root/src/root/io/io/src/TDirectoryFile.cxx:1111; #33 0x00005555555551f6 in TDirectory::Get<RooStats::HistFactory::Measurement> (this=0x555556a15ce0, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/build/../install/include/root/TDirectory.h:207; #34 TDirectoryFile::Get<RooStats::HistFactory::Measurement> (this=0x555556a15ce0, namecycle=<optimized out",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:6684,optimiz,optimized,6684,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,2,['optimiz'],['optimized']
Performance,"gesting changes to improve it. If not for his suggestions about the `namespace NumbaExt` code, I wouldn't have been able to simplify it. On the other hand, @vgvassilev is right about the global statements being a non-critical change and wouldn't be accepted upstream. And I am sure when he said that, he didn't mean that Vincenzo's efforts were wasteful. Finally, AFAIU Vincenzo thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [SO answer](https://stackoverflow.com/a/4693392), Python used to differentiate between having a global statement or not. And even though the answer is more than ten years old, I experienced this firsthand when I started using Python (about four years back). So even though Python changed how it treats the variable binding in the newer versions, I would say it doesn't harm us by keeping them",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11096#issuecomment-1603484912:1356,cache,cache,1356,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912,1,['cache'],['cache']
Performance,"gth,content-type,accept-ranges; Access-Control-Allow-Methods: HEAD,GET; Content-Type: multipart/byteranges; boundary=61c842e35204a0c7. --61c842e35204a0c7; Content-range: bytes 0-15/414239. root�mdR; --61c842e35204a0c7; Content-range: bytes 1000-1015/414239. 1ZGqP��; --61c842e35204a0c7--; ```. And here is result from cernbox:; ```; curl -ik https://cernbox.cern.ch/remote.php/dav/public-files/1Cy1HIf03Ca76Dm/test_ntuples_200123.root -H ""Range: bytes=0-15,1000-1015"" --output - (15.06. 11:15:25) !11380 ; HTTP/1.1 206 Partial Content; Access-Control-Allow-Origin: *; Content-Disposition: attachment; filename=""test_ntuples_200123.root""; Content-Length: 389; Content-Range: ; Content-Security-Policy: default-src 'none';; Content-Type: application/octet-stream; Date: Thu, 15 Jun 2023 09:15:48 GMT; Etag: ""329762575417868288:9d274a18""; Last-Modified: Wed, 24 May 2023 12:22:19 +0000; Oc-Etag: ""329762575417868288:9d274a18""; Oc-Fileid: eoshome-t!103034857; Server: nginx/1.20.1; Strict-Transport-Security: max-age=63072000; Vary: Origin; X-Content-Type-Options: nosniff; X-Download-Options: noopen; X-Frame-Options: SAMEORIGIN; X-Permitted-Cross-Domain-Policies: none; X-Robots-Tag: none; X-Xss-Protection: 1; mode=block. --1941f188e1f15cbc8af2c2ce8ba24411209981093834f193e96822568cbb; Content-Range: bytes 0-15/4667337; Content-Type: application/octet-stream. root��dG7�; --1941f188e1f15cbc8af2c2ce8ba24411209981093834f193e96822568cbb; Content-Range: bytes 1000-1015/4667337; Content-Type: application/octet-stream. .�J.�f6��M�����m; --1941f188e1f15cbc8af2c2ce8ba24411209981093834f193e96822568cbb--; ```. That is wrong?; First of all content type must be: ""Content-Type: multipart/something""; In the same line one should have boundary like ""boundary=61c842e35204a0c7""; Such line is not present in cernbox response.; Without clearly specified ""boundary"" it is not possible to decode data afterwards. My conclusion - malformed http response and large latency make impossible to use cernbox http server.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13018#issuecomment-1592696000:2961,latency,latency,2961,https://root.cern,https://github.com/root-project/root/issues/13018#issuecomment-1592696000,1,['latency'],['latency']
Performance,"guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases?. I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning?. Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has?. Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. ; https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L66-L76",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8334#issuecomment-854977563:1233,multi-thread,multi-threading,1233,https://root.cern,https://github.com/root-project/root/pull/8334#issuecomment-854977563,1,['multi-thread'],['multi-threading']
Performance,"his=0x555555986c30, attrs=..., DS=0x0) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:938; #128 0x00007ffff07ad84e in clang::Parser::ParseTopLevelDecl (this=0x555555986c30, Result=..., IsFirstDecl=false) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:689; #129 0x00007fffefaf16cb in cling::IncrementalParser::ParseInternal (this=0x5555555ff9a0, input=...) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:923; #130 0x00007fffefaf36fe in cling::IncrementalParser::Compile (this=0x5555555ff9a0, input=..., Opts=...) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #131 0x00007fffef964af5 in cling::Interpreter::DeclareInternal (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; input=, CO=..., T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1353; #132 0x00007fffef967c9a in cling::Interpreter::loadHeader (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; filename=, T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1491; #133 0x00007fffef9683bd in cling::Interpreter::loadFile (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; filename=, allowSharedLib=true, T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1585; #134 0x00007fffefbfe37d in cling::MetaSema::actOnLCommand (this=0x555556003f90, file=..., transaction=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; #135 0x00007fffefbfef12 in cling::MetaSema::actOnxCommand (this=0x555556003f90, file=..., args=..., result=0x7fffffffa830) at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146; #136 0x00007fffefc13e0b in cling::MetaParser::isXCommand (this=0x7fffffffa138, actionResult=@0x7fffffffa11c: cling::MetaSema:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253760320:35958,load,loadHeader,35958,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320,1,['load'],['loadHeader']
Performance,i; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module R,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4138,load,load,4138,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"ike a TTree. Otherwise I would also have to say that RDF is meant to be treated like a CSV file or something similar. I did not refer to the documentation but to how people would actually use this class. 99% of people do not read CSV files with ROOT and `RDataFrame` will be mostly used to interact in a simple and quick way with trees. > ; > > there should be a function that allows us to merge them; > ; > If I have to think about this function you propose, I don't see it going much further than the example you already have above. Since RDataFrame **is not** the dataset itself, but just an interface to it, it still needs to open the file where the dataset is contained and read data from it. Thus, merging two RDF objects would still involve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; > ; > ```python; > # Opening files and loading pre-existing datasets; > df_1=ROOT.RDataFrame('tree', file_path_1); > df_2=ROOT.RDataFrame('tree', file_path_2); > ; > # creating new columns in the datasets; > df_1=df_1.Define('identity', '+1'); > df_2=df_2.Define('identity', '+2'); > ; > # Merging the datasets in memory; > df_3 = df_1.Merge(df_2); > # Opening a new file and save the merged dataset into the new file; > df_3.Snapshot('tree', 'file.root'); > ```; > ; > I admit that I might not be able to see some internal optimizations that RDF might do while merging, but the logical steps seem to be equivalent to me. Or I also might be misinterpreting your proposal. No, the approaches are different. In the approach without `RDataFrame::Merge` I save twice the modified trees with the new",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-927331768:1655,load,loading,1655,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927331768,1,['load'],['loading']
Performance,iled to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3676,load,load,3676,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,iled to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3772,load,load,3772,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,iled to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3462,load,load,3462,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,iled to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3829,load,load,3829,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,iled); 132 - tutorial-dataframe-tdf008_createDataSetFromScratch (Failed); 133 - tutorial-dataframe-tdf009_FromScratchVSTTree (Failed); 134 - tutorial-dataframe-tdf010_trivialDataSource (Failed); 135 - tutorial-dataframe-tdf011_ROOTDataSource (Failed); 136 - tutorial-dataframe-tdf012_DefinesAndFiltersAsStrings (Failed); ```; With errors like:; ```; 131: Processing C:/Users/bellenot/git/master/tutorials/dataframe/tdf003_profiles.C...; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_header' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_10_'!; 131: You are probably missing the definition of _Init_thread_header; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_10_'!; 131: You are probably missing the definition of __emutls_get_address; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_footer' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_10_'!; 131: You are probably missing the definition of _Init_thread_footer; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '__emutls_v._Init_thread_epoch' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_10_'!; 131: You are probably missing the definition of __emutls_v._Init_thread_epoch; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_abort' unresolved while linking function '??__Eid@?$num_pu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1607#issuecomment-364363584:1869,load,load,1869,https://root.cern,https://github.com/root-project/root/pull/1607#issuecomment-364363584,3,['load'],['load']
Performance,"lSafeRead (fd=3, inbuf=inbuf; entry=0x7ffd70966680 ""\001"", timeout=timeout; entry=-1, len=1) at /home/bockelman/zhan0915/root/core/unix/src/TUnixSigHandling.cxx:195; #2 0x00007f8b05fa4435 in TUnixSigHandling::StackTraceTriggerThread () at /home/bockelman/zhan0915/root/core/unix/src/TUnixSigHandling.cxx:816; #3 0x00007f8b05fa450c in TUnixSigHandling::DispatchSignals (this=0x1534f70, sig=kSigSegmentationViolation) at /home/bockelman/zhan0915/root/core/unix/src/TUnixSigHandling.cxx:552; #4 <signal handler called>; #5 0x0000003fa1e811a1 in __strlen_sse2 () from /lib64/libc.so.6; #6 0x00007f8b0255f728 in length (__s=0x0) at /opt/rh/devtoolset-2/root/usr/include/c++/4.8.2/bits/char_traits.h:259; #7 assign (__s=0x0, this=0x7ffd70966c40) at /opt/rh/devtoolset-2/root/usr/include/c++/4.8.2/bits/basic_string.h:1131; #8 operator= (__s=0x0, this=0x7ffd70966c40) at /opt/rh/devtoolset-2/root/usr/include/c++/4.8.2/bits/basic_string.h:555; #9 TCling::TCling (this=0x1594620, name=<optimized out>, title=<optimized out>) at /home/bockelman/zhan0915/root/core/meta/src/TCling.cxx:1068; #10 0x00007f8b025602ae in CreateInterpreter (interpLibHandle=<optimized out>) at /home/bockelman/zhan0915/root/core/meta/src/TCling.cxx:578; #11 0x00007f8b05e2daa8 in TROOT::InitInterpreter (this=0x7f8b062a5520 <ROOT::Internal::GetROOT1()::alloc>) at /home/bockelman/zhan0915/root/core/base/src/TROOT.cxx:1821; #12 0x00007f8b05e2de26 in ROOT::Internal::GetROOT2 () at /home/bockelman/zhan0915/root/core/base/src/TROOT.cxx:363; #13 0x00007f8b05f03845 in TApplication::TApplication (this=0x1582e40, appClassName=0x401350 ""Rint"", argc=0x7ffd70968f4c, argv=0x7ffd70969048, numOptions=0) at /home/bockelman/zhan0915/root/core/base/src/TApplication.cxx:144; #14 0x00007f8b05ad1b71 in TRint::TRint (this=0x1582e40, appClassName=<optimized out>, argc=<optimized out>, argv=<optimized out>, options=<optimized out>, numOptions=<optimized out>, noLogo=false) at /home/bockelman/zhan0915/root/core/rint/src/TRint.cxx:144; #15 0x000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/134#issuecomment-195488572:1373,optimiz,optimized,1373,https://root.cern,https://github.com/root-project/root/pull/134#issuecomment-195488572,2,['optimiz'],['optimized']
Performance,le Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module Gviz; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; Failed to load module Thread; input_line_4:1:2: error: unknown type name 'ifdef'; #ifdef complex; ^; <<< cling interactive line includer >>>:1:1: error: expected unqualified-id; input_line_5:1:2: error: unknown type name 'ifdef'; #ifdef PI; ^; <<< cling interactive line includer >>>:1:1: error: expected unqualified-id; input_line_6:1:2: error: unknown ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4750,load,load,4750,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,le RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module Gviz; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; Failed to load module Thread; input_line_4:1:2: error: unknown type name 'ifdef'; #ifdef complex; ^; <<< cling interactive line includer >>>:1:1: error: expected unqualified-id; input_line_5:1:2: error: unknown type name 'ifdef'; #ifdef PI; ^; <<< cling interactive line includer >>>:1:1,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4683,load,load,4683,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,le output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144990827:1108,load,load,1108,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827,1,['load'],['load']
Performance,led to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/ll,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2999,load,load,2999,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,"lly grateful to @vepadulano for investing his precious time in reviewing this PR and suggesting changes to improve it. If not for his suggestions about the `namespace NumbaExt` code, I wouldn't have been able to simplify it. On the other hand, @vgvassilev is right about the global statements being a non-critical change and wouldn't be accepted upstream. And I am sure when he said that, he didn't mean that Vincenzo's efforts were wasteful. Finally, AFAIU Vincenzo thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [SO answer](https://stackoverflow.com/a/4693392), Python used to differentiate between having a global statement or not. And even though the answer is more than ten years old, I experienced this firsthand when I started using Python (about four years back). So even though Python changed how it treats the",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11096#issuecomment-1603484912:1329,cache,cache,1329,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912,1,['cache'],['cache']
Performance,load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Ext,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4018,load,load,4018,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3187,load,load,3187,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,ls_v._Init_thread_epoch' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_10_'!; 131: You are probably missing the definition of __emutls_v._Init_thread_epoch; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_abort' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_10_'!; 131: You are probably missing the definition of _Init_thread_abort; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_abort' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of _Init_thread_abort; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_header' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of _Init_thread_header; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of __emutls_get_address; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_footer' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of _Init_thread_footer; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '__emutls_v._Init_thread_epoch' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of __emutls_v._Init_thread_epoch; 131: Maybe you need to load the corresponding shared library?; 131: CMake Error at,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1607#issuecomment-364363584:2956,load,load,2956,https://root.cern,https://github.com/root-project/root/pull/1607#issuecomment-364363584,6,['load'],['load']
Performance,m; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Fa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3919,load,load,3919,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,missing the definition of __emutls_v._Init_thread_epoch; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_abort' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_10_'!; 131: You are probably missing the definition of _Init_thread_abort; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_abort' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of _Init_thread_abort; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_header' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of _Init_thread_header; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of __emutls_get_address; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_footer' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of _Init_thread_footer; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '__emutls_v._Init_thread_epoch' unresolved while linking [cling interface function]!; 131: You are probably missing the definition of __emutls_v._Init_thread_epoch; 131: Maybe you need to load the corresponding shared library?; 131: CMake Error at C:/Users/bellenot/git/master/cmake/modules/RootTestDriver.cmake:232 (message):; 131: error code: -529697949; 131:; 131:; 1/1 Test #131: tutorial-dataframe-tdf003_profiles ...***Failed 3.13 sec; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1607#issuecomment-364363584:4619,load,load,4619,https://root.cern,https://github.com/root-project/root/pull/1607#issuecomment-364363584,1,['load'],['load']
Performance,module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module Gviz; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4367,load,load,4367,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"next time such breaking changes before asking for a llvm review and land patches in these particularly sensitive areas. I explicitly added you to the list of reviewers for the original patch, there is little more I can do than that. And more coordination is exactly what I am trying to do now. If we cannot reach a conclusion may I at least be added to review whatever your solution looks like?. > 1. I plan to remove the NDEBUG assert. Already done in D33529. > 2. Make the std::vector<void*> a std::vector<llvm::PointerIntPair<void*, 1, bool>>. How can you guarantee that the platform will deliver a pointer with proper alignment for that?. > 3. I will change the search order to search for first the one that are not marked RTLD_GLOBAL. So any other client that wants to open thing's with RTLD_LOCAL will then expose what they thought were private symbols to the JIT as a whole?. > One of the issues is that it is not clear to me is what exactly is your use case and this is why there are misunderstandings. I also don't understand why there are mis-understandings, but have explained the use case a few times now and **3** will explicitly break that as well as provide bizarre default behavior:. > libc++.so, libA.so; > libA.so defines an overload for global operator new/delete; > ; > ```; > DynamicLibrary::getPermanentLibrary(NULL); > // Other code; > DynamicLibrary::getPermanentLibrary(""libA.so""); > ```; > In your scheme the JIT can pull operator new/delete from libA.so, and worse is that whether it pulls operator new/delete from libA.so is dependent on whether operator new/delete has been resolved in **// Other code** before libA.so has been loaded.; > . The example can be expanded to RTTI information, exceptions, and a host of other problems.; And even worse than that is that in your scheme there is no way of hiding symbols from the global scope, in fact it promotes everything that the user reasonably expected to be private (via RTLD_LOCAL) to take dominance over anything else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313799028:2630,load,loaded,2630,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313799028,1,['load'],['loaded']
Performance,"ng binary ready to use.; > > ; > > ; > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.; > ; > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:; > ; > ```c++; > if(!m_Opts.CompilerOpts.CUDADevice); > ExeRes = m_Executor->runStaticInitializersOnce(T);; > ```; > ; > I need to verify, if this is a good solution. That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction. I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-777250984:5103,perform,performance,5103,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-777250984,1,['perform'],['performance']
Performance,nterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144980019:1720,load,load,1720,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019,1,['load'],['load']
Performance,nterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145207749:1720,load,load,1720,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749,1,['load'],['load']
Performance,"nterpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:689; #129 0x00007fffefaf16cb in cling::IncrementalParser::ParseInternal (this=0x5555555ff9a0, input=...) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:923; #130 0x00007fffefaf36fe in cling::IncrementalParser::Compile (this=0x5555555ff9a0, input=..., Opts=...) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:838. #131 0x00007fffef964af5 in cling::Interpreter::DeclareInternal (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; input=, CO=..., T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1353; #132 0x00007fffef967c9a in cling::Interpreter::loadHeader (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; filename=, T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1491; #133 0x00007fffef9683bd in cling::Interpreter::loadFile (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; filename=, allowSharedLib=true, T=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1585; #134 0x00007fffefbfe37d in cling::MetaSema::actOnLCommand (this=0x555556003f90, file=..., transaction=0x7fffffff9d88) at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; #135 0x00007fffefbfef12 in cling::MetaSema::actOnxCommand (this=0x555556003f90, file=..., args=..., result=0x7fffffffa830) at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146; #136 0x00007fffefc13e0b in cling::MetaParser::isXCommand (this=0x7fffffffa138, actionResult=@0x7fffffffa11c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa830); at /home/jun/dev/root/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:315; #137 0x00007fffefc132f9 in cling::MetaParser::isCommand (this=0x7fffffffa138, actionResult=@0x7fffffffa11c: cling::MetaSema::AR_Success,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253760320:36215,load,loadFile,36215,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320,1,['load'],['loadFile']
Performance,o load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module Gviz; Failed to load module ROOTGraphicsPrimitives; Failed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4298,load,load,4298,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,o load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2575,load,load,2575,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,o load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module Gviz; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4326,load,load,4326,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,o load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module Gviz; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; Failed to load module Thread; input_line_4:1:2: error: unknown,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4458,load,load,4458,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,o load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module Mat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4047,load,load,4047,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,oad module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to lo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3991,load,load,3991,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,oad module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2543,load,load,2543,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,oad module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Core; Failed to load module Rint; Failed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:2992,load,load,2992,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,odule RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module Gviz; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; Failed to load module Thread; input_line_4:1:2: error: unknown type name 'ifdef'; #ifdef complex; ^; <<< cling interactive line incl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4528,load,load,4528,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,omBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module Gviz; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; Failed to load module Thread; input_line_4:1:2: error: unknown type name 'ifdef'; #ifdef complex; ^; <<< cling interactive line includer >>>:1:1: error: expected unqualified-id; input_line_5:1:2: error: unknown type name 'ifdef'; #ifdef PI; ^; <<< cling interactive line includer >>>:1:1: error: expected unqualified-id; inp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4720,load,load,4720,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"ons */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails; // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works; C->cd();; Double_t w=20, h=20, xl=0, yb=20;; TBox* o=new TBox();; TPad* c= new TPad();; c->SetPad(0,0,1,1);; c->cd(1);; c->PlaceBox(o,w,h,xl,yb);; return 0;; }. ```. I see. ```; [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc; entry=0x7ffeea3c7360, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408; #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0: 0, yb=; 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the E",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428#issuecomment-698590998:2740,optimiz,optimized,2740,https://root.cern,https://github.com/root-project/root/issues/6428#issuecomment-698590998,1,['optimiz'],['optimized']
Performance,"oot/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1741; #17 TStreamerInfo::ReadBufferSTL (this=<optimized out>, b=..., cont=<optimized out>, nc=<optimized out>, eoffset=<optimized out>, v7=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1737; #18 0x00007ffff7931b46 in TStreamerInfo::ReadBuffer<TVirtualCollectionProxy> (this=0x555556c6f630, b=..., arr=..., compinfo=0x55555864f9a0,; first=first@entry=0, last=16, narr=2, eoffset=0, arrayMode=1) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1274; #19 0x00007ffff787d2bd in TStreamerInfo::ReadBufferSTL (v7=<optimized out>, eoffset=<optimized out>, nc=<optimized out>, cont=<optimized out>, b=...,; this=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1741; #20 TStreamerInfo::ReadBufferSTL (this=<optimized out>, b=..., cont=<optimized out>, nc=<optimized out>, eoffset=<optimized out>, v7=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1737; #21 0x00007ffff793f598 in TStreamerInfo::ReadBuffer<char**> (this=0x555558602630, b=..., arr=@0x7fffffffd740: 0x55555862ab20,; compinfo=compinfo@entry=0x55555862ab08, first=first@entry=0, last=last@entry=1, narr=2, eoffset=0, arrayMode=3); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1274; #22 0x00007ffff77f92ac in TStreamerInfoActions::VectorLooper::GenericRead (buf=..., start=<optimized out>, end=0x555556a3aaa0, loopconfig=<optimized out>,; config=0x55555862aaf0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1883; #23 0x00007ffff76e978c in TStreamerInfoActions::TConfiguredAction::operator() (loopconf=0x55555862a9e0, end_collection=0x555556a3aaa0,; start_collection=0x555556a3a850, buffer=..., this=0x55555862a9b0) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:131; #24 TBufferFile::ApplyS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:4382,optimiz,optimized,4382,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,4,['optimiz'],['optimized']
Performance,oottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.tree/addresses/roottest_root_tree_addresses_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175116758:2305,load,load,2305,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758,2,['load'],['load']
Performance,"ot produce a simpler reproducer, but I noticed that we have also problematic workspaces that are about 6 times smaller (from the same repo linked above):; ```; auto f = TFile::Open(""toyws/WS-HGam-STXS_xs_toy.root"");; auto w = (RooWorkspace*)f->Get(""combWS"");; ```. With this one, I can reproduce the problem without messing around with the stack size limit. Also, your PR #10230 actually affects also this issue, but it does not resolve it. There is now a different crash with a different stack trace, that looks like there is interference of your changes with some `RooWorkspace::Streamer` hackery:; ```; #0 0x000015555276f34c in __pthread_kill_implementation () from /usr/lib/libc.so.6; #1 0x00001555527224b8 in raise () from /usr/lib/libc.so.6; #2 0x000015555270c534 in abort () from /usr/lib/libc.so.6; #3 0x000015555299e7ee in __gnu_cxx::__verbose_terminate_handler () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #4 0x00001555529aac4c in __cxxabiv1::__terminate (handler=<optimized out>); at /usr/src/debug/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #5 0x00001555529aacb9 in std::terminate () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #6 0x00001555529aba77 in __cxxabiv1::__cxa_deleted_virtual () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/pure.cc:57; #7 0x0000155553413509 in RooWorkspace::Streamer (this=0x55555698ea60, R__b=...); at /home/rembserj/spaces/master/root/src/root/roofit/roofitcore/src/RooWorkspace.cxx:2591; #8 0x0000155554e2df7e in TKey::ReadObj (this=0x555556757fc0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TKey.cxx:834; #9 0x0000155554df25e0 in TDirectoryFile::Get (this=0x5555556e2510, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TDirectoryFile.cxx:975; #10 0x0000555555555235 in repro () at repro.C:25; #11 0x00005555555551d9 in main () at /tmp/root-compile/repro/main.cpp:4; ```. Fortunately, the stack trace is shorter now! Does this tell you anything? Maybe your insig",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1087909663:1017,optimiz,optimized,1017,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1087909663,1,['optimiz'],['optimized']
Performance,ot/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:2910,cache,cache,2910,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,1,['cache'],['cache']
Performance,"ound is expected, with RooFit you can't read back a RooWorkspace with any ROOT version that is older that the version it was created with. When I run the reproducer in the debugger, I get this stack trace:; ```; Program received signal SIGABRT, Aborted.; 0x00007ffff4a9f26c in ?? () from /usr/lib/libc.so.6; (gdb) bt; #0 0x00007ffff4a9f26c in ?? () from /usr/lib/libc.so.6; #1 0x00007ffff4a4fa08 in raise () from /usr/lib/libc.so.6; #2 0x00007ffff4a38538 in abort () from /usr/lib/libc.so.6; #3 0x00007ffff4c9ca6f in __gnu_cxx::__verbose_terminate_handler () at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #4 0x00007ffff4cb011c in __cxxabiv1::__terminate (handler=<optimized out>) at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #5 0x00007ffff4cb0189 in std::terminate () at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #6 0x00007ffff4cb03ed in __cxxabiv1::__cxa_throw (obj=<optimized out>, tinfo=0x7ffff4e6c0d0 <typeinfo for std::length_error>,; dest=0x7ffff4cc8580 <std::length_error::~length_error()>) at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/eh_throw.cc:98; #7 0x00007ffff4ca01ca in std::__throw_length_error (__s=__s@entry=0x7ffff79711aa ""basic_string::_M_replace_aux""); at /usr/src/debug/gcc/gcc/libstdc++-v3/src/c++11/functexcept.cc:82; #8 0x00007ffff76f2ae8 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check_length (__s=<optimized out>,; __n2=<optimized out>, __n1=<optimized out>, this=<optimized out>) at /usr/include/c++/13.1.1/bits/basic_string.h:403; #9 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux (__c=<optimized out>, __n2=<optimized out>,; __n1=<optimized out>, __pos1=<optimized out>, this=<optimized out>) at /usr/include/c++/13.1.1/bits/basic_string.tcc:450; #10 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append (__c=<optimized out>, __n=<optimized out>, this=<optimized out>);",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:1052,optimiz,optimized,1052,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,1,['optimiz'],['optimized']
Performance,"paces/master/root/src/root/core/meta/inc/TClass.h:610; #14 TBufferFile::ReadFastArray (this=0x7fffffffd9d0, start=<optimized out>, cl=0x555555cc34b0, n=<optimized out>, streamer=<optimized out>, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:1609; #15 0x00007ffff7931e28 in TStreamerInfo::ReadBuffer<TVirtualCollectionProxy> (this=0x555558509890, b=..., arr=..., compinfo=0x5555585140d0,; first=first@entry=0, last=4, narr=16777216, eoffset=0, arrayMode=1); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1297; #16 0x00007ffff787d2bd in TStreamerInfo::ReadBufferSTL (v7=<optimized out>, eoffset=<optimized out>, nc=<optimized out>, cont=<optimized out>, b=...,; this=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1741; #17 TStreamerInfo::ReadBufferSTL (this=<optimized out>, b=..., cont=<optimized out>, nc=<optimized out>, eoffset=<optimized out>, v7=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1737; #18 0x00007ffff7931b46 in TStreamerInfo::ReadBuffer<TVirtualCollectionProxy> (this=0x555556c6f630, b=..., arr=..., compinfo=0x55555864f9a0,; first=first@entry=0, last=16, narr=2, eoffset=0, arrayMode=1) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1274; #19 0x00007ffff787d2bd in TStreamerInfo::ReadBufferSTL (v7=<optimized out>, eoffset=<optimized out>, nc=<optimized out>, cont=<optimized out>, b=...,; this=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1741; #20 TStreamerInfo::ReadBufferSTL (this=<optimized out>, b=..., cont=<optimized out>, nc=<optimized out>, eoffset=<optimized out>, v7=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1737; #21 0x00007ffff793f598 in TStreamerInfo::ReadBuffer<char**> (this=0x555558602630, b=..., arr=@0x7fffffffd740",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:3585,optimiz,optimized,3585,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,4,['optimiz'],['optimized']
Performance,pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; Failed to load module ROOT_Foundation_C; Failed to load module ROOT_Rtypes; Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:1819,load,load,1819,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,29,['load'],['load']
Performance,pcm'; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:1383,load,load,1383,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,32,['load'],['load']
Performance,"power Vincenzo invests in improving the code. I bet it's useful to propose changes coming out of this upstream where relevant, @sudo-panda ?. Hi @Axel-Naumann ,. I am really grateful to @vepadulano for investing his precious time in reviewing this PR and suggesting changes to improve it. If not for his suggestions about the `namespace NumbaExt` code, I wouldn't have been able to simplify it. On the other hand, @vgvassilev is right about the global statements being a non-critical change and wouldn't be accepted upstream. And I am sure when he said that, he didn't mean that Vincenzo's efforts were wasteful. Finally, AFAIU Vincenzo thinks that global statements are unnecessary because the code acts in the same way whether you keep them or not. I have a few counterpoints to this:. 1. It gives programmers an idea about where the variable was initialized before use. Modifying the code provided by Vincenzo:. ```python; cache = {}. def foo():; .....; .... Many lines of code ...; .....; cache[""foo""] = 1. .....; .... Many lines of code ...; ..... def bar():; .....; .... Many lines of code ...; .....; cache[""bar""] = 2; ```. I hope you can see it becomes difficult to understand where did cache come from. A `global cache` statement at the top of the function or before its use clarifies the intent. 2. Removing the `global` statement doesn't affect the scope of the variable. It is purely meant to [guide Python for the code block it is used in.](https://docs.python.org/3/reference/simple_stmts.html#the-global-statement). 3. ROOT already uses `global` keyword in [JupyROOT](https://github.com/root-project/root/blame/a90d76b7798dc4332425d29794089fceaebccb60/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L126 ). So unless ""we should never use `global`"" is a new convention being followed in ROOT, I believe it doesn't seem to track. 4. As seen in this [SO answer](https://stackoverflow.com/a/4693392), Python used to differentiate between having a global statement or not. And even thoug",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11096#issuecomment-1603484912:1127,cache,cache,1127,https://root.cern,https://github.com/root-project/root/pull/11096#issuecomment-1603484912,1,['cache'],['cache']
Performance,pullrequests-build/36231/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.core.meta.test.gtest_core_meta_test_testHashRecursiveRemove](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.core.meta/test/gtest_core_meta_test_testHashRecursiveRemove/). And 134 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411309441:4618,cache,cache,4618,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411309441,2,['cache'],['cache']
Performance,quests-build/146424/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143358479:1201,load,load,1201,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479,1,['load'],['load']
Performance,quests-build/146495/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143554468:1201,load,load,1201,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468,1,['load'],['load']
Performance,quests-build/147284/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnl,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1153748598:1201,load,load,1201,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598,1,['load'],['load']
Performance,roottest_cling_dict_ROOT_8096_load](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_load/); - [projectroot.roottest.cling.stl.dicts.roottest_cling_stl_dicts_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.stl/dicts/roottest_cling_stl_dicts_build/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stl_makeproject_test_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stl_makeproject_test_build/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_MyClass_v1_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_MyClass_v1_libgen_build/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadtest_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadtest_build/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_read_leaves_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_read_leaves_build/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_classWithComplex_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_classWithComplex_libgen_build/); - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_forwardList_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_forwardList_libgen_build/); - ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2454#issuecomment-411275022:3919,load,load,3919,https://root.cern,https://github.com/root-project/root/pull/2454#issuecomment-411275022,1,['load'],['load']
Performance,rt/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/). And 92 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-414258112:4652,cache,cache,4652,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-414258112,2,['cache'],['cache']
Performance,rt/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143358479:1362,load,load,1362,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479,1,['load'],['load']
Performance,rt/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143554468:1362,load,load,1362,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468,1,['load'],['load']
Performance,rt/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1153748598:1362,load,load,1362,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598,1,['load'],['load']
Performance,"s spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this ; example2: ; ```cpp; {; // my_subroutines.C; unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {; x.reset(); ; x.reset(new TH1F());; // .. do something with it.; }; ```; except for maybe quick temporary scripts. So we have about 2.5 issues. ; 1) The global command,; 2) the interface and ownership model, and; 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. Of course you can edit the PR to make new key names on each call so that the RDirectory call can create more things. But scalable means I did it without needing to modify the underlying implementation or interface (which someone else might maintain) to get three plots instead of one. Furthermore, coming back to issue 1, **if you do edit the PR to have flexible (sequential or passed) RDirectory names, you also (edit: might) need to add explicit deletes (more lines of code) somewhere if you run it all in a batch loop, or you'll have a leak.**(**edit**: depending on exactly how the looping and naming is done, but it can easily happen) In other words a portion of the new/delete problem has just been hidden under new with a different name. This is exactly what I mean by modern ownership models. In example 1 the top level code asked for memory that it owns. In my class version it made an instance that it owns.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791104038:3808,scalab,scalable,3808,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791104038,1,['scalab'],['scalable']
Performance,s; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3491,load,load,3491,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,s; Failed to load module ROOT_Foundation_C; Failed to load module ROOT_Rtypes; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Core; Failed to load module Rint; Failed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiB,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:2902,load,load,2902,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"serj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1274; #22 0x00007ffff77f92ac in TStreamerInfoActions::VectorLooper::GenericRead (buf=..., start=<optimized out>, end=0x555556a3aaa0, loopconfig=<optimized out>,; config=0x55555862aaf0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1883; #23 0x00007ffff76e978c in TStreamerInfoActions::TConfiguredAction::operator() (loopconf=0x55555862a9e0, end_collection=0x555556a3aaa0,; start_collection=0x555556a3a850, buffer=..., this=0x55555862a9b0) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:131; #24 TBufferFile::ApplySequence (this=0x7fffffffd9d0, sequence=..., start_collection=0x555556a3a850, end_collection=0x555556a3aaa0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3646; #25 0x00007ffff781f65e in TStreamerInfoActions::ReadSTLMemberWiseSameClass (buf=..., addr=<optimized out>, conf=conf@entry=0x555558626dd0,; vers=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1155; #26 0x00007ffff781f896 in TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray>; (buf=..., addr=0x55555855a0c0, conf=0x555558626dd0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1405; #27 0x00007ffff76e9c05 in TStreamerInfoActions::TConfiguredAction::operator() (object=0x55555855a0c0, buffer=..., this=0x55555812a1b0); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #28 TBufferFile::ApplySequence (this=0x7fffffffd9d0, sequence=..., obj=0x55555855a0c0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3580; #29 0x00007ffff76f1b94 in TBufferFile::ReadClassBuffer (this=0x7fffffffd9d0, cl=0x555558490b70, pointer=<optimized out>, onFileClass=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3499;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:5737,optimiz,optimized,5737,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,2,['optimiz'],['optimized']
Performance,sics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4076,load,load,4076,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"so.6; #2 0x00007ffff4a38538 in abort () from /usr/lib/libc.so.6; #3 0x00007ffff4c9ca6f in __gnu_cxx::__verbose_terminate_handler () at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #4 0x00007ffff4cb011c in __cxxabiv1::__terminate (handler=<optimized out>) at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #5 0x00007ffff4cb0189 in std::terminate () at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #6 0x00007ffff4cb03ed in __cxxabiv1::__cxa_throw (obj=<optimized out>, tinfo=0x7ffff4e6c0d0 <typeinfo for std::length_error>,; dest=0x7ffff4cc8580 <std::length_error::~length_error()>) at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/eh_throw.cc:98; #7 0x00007ffff4ca01ca in std::__throw_length_error (__s=__s@entry=0x7ffff79711aa ""basic_string::_M_replace_aux""); at /usr/src/debug/gcc/gcc/libstdc++-v3/src/c++11/functexcept.cc:82; #8 0x00007ffff76f2ae8 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check_length (__s=<optimized out>,; __n2=<optimized out>, __n1=<optimized out>, this=<optimized out>) at /usr/include/c++/13.1.1/bits/basic_string.h:403; #9 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux (__c=<optimized out>, __n2=<optimized out>,; __n1=<optimized out>, __pos1=<optimized out>, this=<optimized out>) at /usr/include/c++/13.1.1/bits/basic_string.tcc:450; #10 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append (__c=<optimized out>, __n=<optimized out>, this=<optimized out>); at /usr/include/c++/13.1.1/bits/basic_string.h:1489; #11 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::resize (__c=<optimized out>, __n=<optimized out>, this=<optimized out>); at /usr/include/c++/13.1.1/bits/basic_string.tcc:401; #12 TBufferFile::ReadStdString (this=0x7fffffffd9d0, obj=0x7fffa8bd2d68) at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:247; #13 0x00007f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:1557,optimiz,optimized,1557,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,4,['optimiz'],['optimized']
Performance,st; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ProofDraw; Failed to load module Unuran; Failed to load module Quadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2427,load,load,2427,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,"t offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35925/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_CacheRange](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35925/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_CacheRange/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2425#issuecomment-410838838:2895,cache,cache,2895,https://root.cern,https://github.com/root-project/root/pull/2425#issuecomment-410838838,2,['cache'],['cache']
Performance,"t offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35934/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_CacheRange](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35934/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_CacheRange/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2424#issuecomment-410842792:2895,cache,cache,2895,https://root.cern,https://github.com/root-project/root/pull/2424#issuecomment-410842792,2,['cache'],['cache']
Performance,"t offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35943/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_CacheRange](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35943/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_CacheRange/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2423#issuecomment-410846925:2895,cache,cache,2895,https://root.cern,https://github.com/root-project/root/pull/2423#issuecomment-410846925,2,['cache'],['cache']
Performance,"t offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35952/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_CacheRange](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35952/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_CacheRange/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2445#issuecomment-410850862:2895,cache,cache,2895,https://root.cern,https://github.com/root-project/root/pull/2445#issuecomment-410850862,2,['cache'],['cache']
Performance,t; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3302,load,load,3302,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"t=4, narr=16777216, eoffset=0, arrayMode=1); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1297; #16 0x00007ffff787d2bd in TStreamerInfo::ReadBufferSTL (v7=<optimized out>, eoffset=<optimized out>, nc=<optimized out>, cont=<optimized out>, b=...,; this=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1741; #17 TStreamerInfo::ReadBufferSTL (this=<optimized out>, b=..., cont=<optimized out>, nc=<optimized out>, eoffset=<optimized out>, v7=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1737; #18 0x00007ffff7931b46 in TStreamerInfo::ReadBuffer<TVirtualCollectionProxy> (this=0x555556c6f630, b=..., arr=..., compinfo=0x55555864f9a0,; first=first@entry=0, last=16, narr=2, eoffset=0, arrayMode=1) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1274; #19 0x00007ffff787d2bd in TStreamerInfo::ReadBufferSTL (v7=<optimized out>, eoffset=<optimized out>, nc=<optimized out>, cont=<optimized out>, b=...,; this=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1741; #20 TStreamerInfo::ReadBufferSTL (this=<optimized out>, b=..., cont=<optimized out>, nc=<optimized out>, eoffset=<optimized out>, v7=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1737; #21 0x00007ffff793f598 in TStreamerInfo::ReadBuffer<char**> (this=0x555558602630, b=..., arr=@0x7fffffffd740: 0x55555862ab20,; compinfo=compinfo@entry=0x55555862ab08, first=first@entry=0, last=last@entry=1, narr=2, eoffset=0, arrayMode=3); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1274; #22 0x00007ffff77f92ac in TStreamerInfoActions::VectorLooper::GenericRead (buf=..., start=<optimized out>, end=0x555556a3aaa0, loopconfig=<optimized out>,; config=0x55555862aaf0) at /home/rembserj/spaces/master/root/src/root/io/io/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:4110,optimiz,optimized,4110,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,4,['optimiz'],['optimized']
Performance,tPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3330,load,load,3330,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,tage1_NoRTTI; Failed to load module Core; Failed to load module Rint; Failed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3020,load,load,3020,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"ted me that this new optimization was part of the problem (look for ""binned likelihood fit optimization"").; https://root.cern/doc/v628/release-notes.html. This optimization was used inside ATLAS for a long time to great success (speedups), so I was enabling it by default. However, it seems to be problematic here, maybe it doesn't work with the RooBarlowBeestonLL. You should for now disable it when the demo is compiled with ROOT 6.28. So the line with `MakeModelAndMeasurementFast` in `histfact_demo.cpp` would become:; ```C++; #if ROOT_VERSION_CODE < ROOT_VERSION(6,28,00); auto ws = RooStats::HistFactory::MakeModelAndMeasurementFast(meas);; #else; // Disable the binned fit optimization that was enabled by default in ROOT 6.28.; // This optimization skips the normalization of the RooRealSumPdf, because; // the unnormalized bin contents already represent the yields that can be; // used by the RooNLLVar to sum the Poisson terms. However, this optimization; // doesn't work for this demo, maybe because it's not compatible with the; // RooBarlowBeestonLL. See also https://root.cern/doc/v628/release-notes.html.; HistoToWorkspaceFactoryFast::Configuration cfg;; cfg.binnedFitOptimization = false;; auto ws = RooStats::HistFactory::MakeModelAndMeasurementFast(meas, cfg);; #endif; ```. With this, the results I get with 6.28 are already more comparable to 6.24. Here the results of `fit-noshapes`:; ## ROOT 6.28. ```txt; FVAL = -1581.9159109118475; Edm = 0.000441898404860980383; Nfcn = 187; Lumi	 = 0.937281	 +/- 0.041571	(limited); Nmu	 = 68079	 +/- 3149.09	(limited); RawRDst	 = 0.0394995	 +/- 0.00466377	(limited); alpha_BFD1	 = -1.56966	 +/- 0.268056	(limited); Info in <Minuit2>: Minuit2Minimizer::Hesse Using max-calls 2000; Info in <Minuit2>: Minuit2Minimizer::Hesse Hesse is valid - matrix is accurate; 0.000441626; Fit ran with status 0; Stat error on R(D*) is 0.004650; EDM at end was 0.000442; RooArgList:: = (Lumi,Nmu,RawRDst,alpha_BFD1); CURRENT NUISANCE PARAMETERS:; 0: Lumi			 ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12729#issuecomment-1527829256:1026,optimiz,optimization,1026,https://root.cern,https://github.com/root-project/root/issues/12729#issuecomment-1527829256,1,['optimiz'],['optimization']
Performance,test.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.event.roottest_root_io_event](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/event/roottest_root_io_event/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/). And 142 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411089672:4798,cache,cache,4798,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411089672,2,['cache'],['cache']
Performance,test_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_cachedChain/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/). And 3 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400118785:4682,cache,cache,4682,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400118785,2,['cache'],['cache']
Performance,tic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module Tr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2775,load,load,2775,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,tion/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/). And 127 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411436247:4892,cache,cache,4892,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411436247,2,['cache'],['cache']
Performance,to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3708,load,load,3708,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HE,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2968,load,load,2968,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3743,load,load,3743,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"tored in TTree, CSV's and other data formats. `. Just by the fact that I can read and process other formats than TTree I would say that in general RDF is not meant to be treated like a TTree. Otherwise I would also have to say that RDF is meant to be treated like a CSV file or something similar. I did not refer to the documentation but to how people would actually use this class. 99% of people do not read CSV files with ROOT and `RDataFrame` will be mostly used to interact in a simple and quick way with trees. > ; > > there should be a function that allows us to merge them; > ; > If I have to think about this function you propose, I don't see it going much further than the example you already have above. Since RDataFrame **is not** the dataset itself, but just an interface to it, it still needs to open the file where the dataset is contained and read data from it. Thus, merging two RDF objects would still involve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; > ; > ```python; > # Opening files and loading pre-existing datasets; > df_1=ROOT.RDataFrame('tree', file_path_1); > df_2=ROOT.RDataFrame('tree', file_path_2); > ; > # creating new columns in the datasets; > df_1=df_1.Define('identity', '+1'); > df_2=df_2.Define('identity', '+2'); > ; > # Merging the datasets in memory; > df_3 = df_1.Merge(df_2); > # Opening a new file and save the merged dataset into the new file; > df_3.Snapshot('tree', 'file.root'); > ```; > ; > I admit that I might not be able to see some internal optimizations that RDF might do while merging, but the logical steps seem to be equivalent",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-927331768:1570,load,loading,1570,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927331768,1,['load'],['loading']
Performance,tualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:2982,cache,cache,2982,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,1,['cache'],['cache']
Performance,uadp; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module RO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2743,load,load,2743,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,ule EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module Gviz; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; Failed to load module Thread; input_line_4:1:2: error: unknown type name 'ifdef'; #ifdef complex; ^; ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:4497,load,load,4497,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,ule ROOT_Rtypes; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Core; Failed to load module Rint; Failed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load modul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:2964,load,load,2964,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"und containers (or C++ objects in general), the right question to ask is whether they implement the iterator protocol. E.g. an `std::list` is a sequence and can be iterated over, but not through indexing, as it's not random-access. For `std::map` the same issues exist as for Python, but of course with no special-case exception made in `PySequence_Check` and `std::map<int, T>` is a particular hot mess. Then there's the fact that `operator[](T)` can be redefined in both C++ and Python to mean whatever ... Note that an iterator protocol check would be for `hasattr(obj, '__iter__')` and not `iter(obj)`, as the latter would succeed b/c of that index-based `iterator` mentioned. I'm not really convinced by the `is_sequence()` method proposed, as it would currently fail for this:; ```; import cppyy. cppyy.cppdef(""""""\; struct MyStruct {};; MyStruct* fff = nullptr;; """"""). def is_sequence(obj):; try:; obj[0]; return True; except TypeError as e:; print(e); return False. print(is_sequence(cppyy.gbl.fff)); ```; which prints `True` as all data members are presumed both `*` and `[]`. This should perhaps also be extended to function return types, but returning arrays that way seems to be much less common in practice. Or at least, I've never had that request. Regardless, the problem remains that C++ is simply ambiguous here and I even think it would be fair to assume that `obj[0]` is only every done if `obj` is in fact an array. (Currently not the case, but why not.). Maybe `__getitem__` can be refined to only appear after lookup through `__getattr__`, i.e. to make it fully instance-specific. The result might be confusing as it would still have to be permissive to cover all cases. However, if the check for `__getitem__` is then performed on the class, instead of on the object, it would give you the old behavior back. (I know that that's not how `PySequence_Check` is supposed to work here, but as already explained, it's not the thing that gives the correct answer in all cases anyhow.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15161#issuecomment-2057616934:1907,perform,performed,1907,https://root.cern,https://github.com/root-project/root/issues/15161#issuecomment-2057616934,1,['perform'],['performed']
Performance,undation_C; Failed to load module ROOT_Rtypes; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Core; Failed to load module Rint; Failed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:2934,load,load,2934,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"ut>); at /usr/include/c++/13.1.1/bits/basic_string.tcc:401; #12 TBufferFile::ReadStdString (this=0x7fffffffd9d0, obj=0x7fffa8bd2d68) at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:247; #13 0x00007ffff76eb1f1 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x555555cc34b0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:610; #14 TBufferFile::ReadFastArray (this=0x7fffffffd9d0, start=<optimized out>, cl=0x555555cc34b0, n=<optimized out>, streamer=<optimized out>, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:1609; #15 0x00007ffff7931e28 in TStreamerInfo::ReadBuffer<TVirtualCollectionProxy> (this=0x555558509890, b=..., arr=..., compinfo=0x5555585140d0,; first=first@entry=0, last=4, narr=16777216, eoffset=0, arrayMode=1); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1297; #16 0x00007ffff787d2bd in TStreamerInfo::ReadBufferSTL (v7=<optimized out>, eoffset=<optimized out>, nc=<optimized out>, cont=<optimized out>, b=...,; this=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1741; #17 TStreamerInfo::ReadBufferSTL (this=<optimized out>, b=..., cont=<optimized out>, nc=<optimized out>, eoffset=<optimized out>, v7=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1737; #18 0x00007ffff7931b46 in TStreamerInfo::ReadBuffer<TVirtualCollectionProxy> (this=0x555556c6f630, b=..., arr=..., compinfo=0x55555864f9a0,; first=first@entry=0, last=16, narr=2, eoffset=0, arrayMode=1) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1274; #19 0x00007ffff787d2bd in TStreamerInfo::ReadBufferSTL (v7=<optimized out>, eoffset=<optimized out>, nc=<optimized out>, cont=<optimized out>, b=...,; this=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1741; #20 TStr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:3313,optimiz,optimized,3313,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,4,['optimiz'],['optimized']
Performance,ve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2803,load,load,2803,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,volution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_cachedChain/); - [projectroot.roottest.root.treeformula.retobj.roottest_root_treeformula_retobj_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.treeformula/retobj/roottest_root_treeformula_retobj_make/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-398607736:4682,cache,cache,4682,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-398607736,2,['cache'],['cache']
Performance,"volve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; > ; > ```python; > # Opening files and loading pre-existing datasets; > df_1=ROOT.RDataFrame('tree', file_path_1); > df_2=ROOT.RDataFrame('tree', file_path_2); > ; > # creating new columns in the datasets; > df_1=df_1.Define('identity', '+1'); > df_2=df_2.Define('identity', '+2'); > ; > # Merging the datasets in memory; > df_3 = df_1.Merge(df_2); > # Opening a new file and save the merged dataset into the new file; > df_3.Snapshot('tree', 'file.root'); > ```; > ; > I admit that I might not be able to see some internal optimizations that RDF might do while merging, but the logical steps seem to be equivalent to me. Or I also might be misinterpreting your proposal. No, the approaches are different. In the approach without `RDataFrame::Merge` I save twice the modified trees with the new column added, so the whole thing is slower than the second approach where the looping and saving can be done only once. . > ; > ## Current possible approaches; > If you need to process a dataset with RDF and need to concatenate parts of it, the current best approach is to use the `RDataFrame(TTree &tree)` constructor after having created the correct tree with all the information you need. If for example you need to concatenate vertically 2 or more TTrees (i.e. if all have the same schema with column `a` and you want to append values of the same column into a single entity), than you can create a TChain and add all the trees to it. If you need horizontal concatenation (i.e. the trees have different schema but same number of entries",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-927331768:2511,optimiz,optimizations,2511,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927331768,1,['optimiz'],['optimizations']
Performance,"w (obj=<optimized out>, tinfo=0x7ffff4e6c0d0 <typeinfo for std::length_error>,; dest=0x7ffff4cc8580 <std::length_error::~length_error()>) at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/eh_throw.cc:98; #7 0x00007ffff4ca01ca in std::__throw_length_error (__s=__s@entry=0x7ffff79711aa ""basic_string::_M_replace_aux""); at /usr/src/debug/gcc/gcc/libstdc++-v3/src/c++11/functexcept.cc:82; #8 0x00007ffff76f2ae8 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check_length (__s=<optimized out>,; __n2=<optimized out>, __n1=<optimized out>, this=<optimized out>) at /usr/include/c++/13.1.1/bits/basic_string.h:403; #9 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux (__c=<optimized out>, __n2=<optimized out>,; __n1=<optimized out>, __pos1=<optimized out>, this=<optimized out>) at /usr/include/c++/13.1.1/bits/basic_string.tcc:450; #10 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append (__c=<optimized out>, __n=<optimized out>, this=<optimized out>); at /usr/include/c++/13.1.1/bits/basic_string.h:1489; #11 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::resize (__c=<optimized out>, __n=<optimized out>, this=<optimized out>); at /usr/include/c++/13.1.1/bits/basic_string.tcc:401; #12 TBufferFile::ReadStdString (this=0x7fffffffd9d0, obj=0x7fffa8bd2d68) at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:247; #13 0x00007ffff76eb1f1 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x555555cc34b0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:610; #14 TBufferFile::ReadFastArray (this=0x7fffffffd9d0, start=<optimized out>, cl=0x555555cc34b0, n=<optimized out>, streamer=<optimized out>, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:1609; #15 0x00007ffff7931e28 in TStreamerInfo::ReadBuffer<TVirtualCollectionProxy> (this=0x555558",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:2056,optimiz,optimized,2056,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,3,['optimiz'],['optimized']
Performance,"w users can register a drawing of a result histogram in the same way in single- and multi-thread analysis, like this:. ```c++; // Draw partial result on canvas every 500 events; TCanvas c(""c"", ""Running event loop..."");; h.OnPartialResult(100, [&c](TH1D &h_) {; c.cd();; h_.Draw();; c.Update();; });; ```; @Axel-Naumann users can open a `TBrowser` and check result updates while the event loop is running quite easily:; ```c++; // create ""TDFResults"" directory in TBrowser; TBrowser b(""b"", ""event loop peeper"");; TMemFile m(""TDFResults"", ""RECREATE"");. // add partial result to the ""TDFResults""; m.Browse(&b); // it would be cool if we could change the current directory in the TBrowser to `TDFResults` here; h.OnPartialResult(decltype(h)::kOnce, [&m](TH1D &h_) { m.Add(&h_); });. // call ProcessEvents every once in a while during the event loop to allow users to navigate the TBrowser; h.OnPartialResult(50, [](TH1D &hist) { gSystem->ProcessEvents(); });; ```; @peremato here is how one would implement a thread-safe progress bar for a TDF multi-thread analysis; ```c++; // Update progress bar every 100 events; std::string progress;; std::mutex bar_mutex;; c.OnPartialResultSlot(nEvents / 100, [&progress, &bar_mutex](unsigned int, ULong64_t &c_) {; std::lock_guard<std::mutex> lg(bar_mutex);; progress.push_back('#');; std::cout << ""\r["" << std::left << std::setw(100) << progress << ']' << std::flush;; });; ```. Here are the corresponding self-contained, fully working code examples:; [draw_partial_result.txt](https://github.com/root-project/root/files/1327464/draw_partial_result.txt); [inspect_analysis.txt](https://github.com/root-project/root/files/1327466/inspect_analysis.txt); [progress_bar.txt](https://github.com/root-project/root/files/1327469/progress_bar.txt); (for some reason github does not allow files with `.cpp` extension :man_shrugging: ). For common-enough callbacks one can always imagine to provide helper functions of course.; I like this feature a lot. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331722007:1050,multi-thread,multi-thread,1050,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331722007,1,['multi-thread'],['multi-thread']
Performance,"w,h,xl,yb);; return 0;; }. ```. I see. ```; [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc; entry=0x7ffeea3c7360, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408; #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0: 0, yb=; 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0: 0, yb=; 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428#issuecomment-698590998:3176,optimiz,optimized,3176,https://root.cern,https://github.com/root-project/root/issues/6428#issuecomment-698590998,1,['optimiz'],['optimized']
Performance,w; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3524,load,load,3524,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['load'],['load']
Performance,"w=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35709/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_CacheRange](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35709/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_CacheRange/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2423#issuecomment-410609447:2895,cache,cache,2895,https://root.cern,https://github.com/root-project/root/pull/2423#issuecomment-410609447,2,['cache'],['cache']
Performance,"we have also problematic workspaces that are about 6 times smaller (from the same repo linked above):; ```; auto f = TFile::Open(""toyws/WS-HGam-STXS_xs_toy.root"");; auto w = (RooWorkspace*)f->Get(""combWS"");; ```. With this one, I can reproduce the problem without messing around with the stack size limit. Also, your PR #10230 actually affects also this issue, but it does not resolve it. There is now a different crash with a different stack trace, that looks like there is interference of your changes with some `RooWorkspace::Streamer` hackery:; ```; #0 0x000015555276f34c in __pthread_kill_implementation () from /usr/lib/libc.so.6; #1 0x00001555527224b8 in raise () from /usr/lib/libc.so.6; #2 0x000015555270c534 in abort () from /usr/lib/libc.so.6; #3 0x000015555299e7ee in __gnu_cxx::__verbose_terminate_handler () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #4 0x00001555529aac4c in __cxxabiv1::__terminate (handler=<optimized out>); at /usr/src/debug/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #5 0x00001555529aacb9 in std::terminate () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #6 0x00001555529aba77 in __cxxabiv1::__cxa_deleted_virtual () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/pure.cc:57; #7 0x0000155553413509 in RooWorkspace::Streamer (this=0x55555698ea60, R__b=...); at /home/rembserj/spaces/master/root/src/root/roofit/roofitcore/src/RooWorkspace.cxx:2591; #8 0x0000155554e2df7e in TKey::ReadObj (this=0x555556757fc0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TKey.cxx:834; #9 0x0000155554df25e0 in TDirectoryFile::Get (this=0x5555556e2510, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TDirectoryFile.cxx:975; #10 0x0000555555555235 in repro () at repro.C:25; #11 0x00005555555551d9 in main () at /tmp/root-compile/repro/main.cpp:4; ```. Fortunately, the stack trace is shorter now! Does this tell you anything? Maybe your insights can also help me to build a reproducer. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1087909663:1707,optimiz,optimized,1707,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1087909663,1,['optimiz'],['optimized']
Performance,wer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2871,load,load,2871,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['load'],['load']
Performance,"x 7 root wheel 224 21 Aug 17:15 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 19 Sep 13:56 MacOSX15.sdk -> MacOSX15.0.sdk; sftnight@macphsft18 ~ % clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: x86_64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple x86_64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=all; -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=2 -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu penryn -tune-cpu generic -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -I/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/usr/lib/clang/16/include -internal-externc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:2014,tune,tune-cpu,2014,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['tune'],['tune-cpu']
Performance,"ystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```; struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; .L lib/libStrip.so ; Marker m2;; gInterpreter->AutoParse(""SiStripCluster"");; .undo 2; SiStripCluster obj;; ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```; struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; .L lib/libStrip.so ; SiStripCluster obj;; ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there?. It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:; ```; commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms); Author: Philippe Canal <pcanal@fnal.gov>; Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback.; ; For each autoparse record to under which transaction it is being done. If this transaction is; rolled back, make sure to clear the caches that noted that this autoparsing had be done.; ```. Cheers,; Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852#issuecomment-434478365:2265,cache,caches,2265,https://root.cern,https://github.com/root-project/root/pull/2852#issuecomment-434478365,1,['cache'],['caches']
Performance,"zed out>) at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #5 0x00007ffff4cb0189 in std::terminate () at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #6 0x00007ffff4cb03ed in __cxxabiv1::__cxa_throw (obj=<optimized out>, tinfo=0x7ffff4e6c0d0 <typeinfo for std::length_error>,; dest=0x7ffff4cc8580 <std::length_error::~length_error()>) at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/eh_throw.cc:98; #7 0x00007ffff4ca01ca in std::__throw_length_error (__s=__s@entry=0x7ffff79711aa ""basic_string::_M_replace_aux""); at /usr/src/debug/gcc/gcc/libstdc++-v3/src/c++11/functexcept.cc:82; #8 0x00007ffff76f2ae8 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check_length (__s=<optimized out>,; __n2=<optimized out>, __n1=<optimized out>, this=<optimized out>) at /usr/include/c++/13.1.1/bits/basic_string.h:403; #9 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux (__c=<optimized out>, __n2=<optimized out>,; __n1=<optimized out>, __pos1=<optimized out>, this=<optimized out>) at /usr/include/c++/13.1.1/bits/basic_string.tcc:450; #10 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append (__c=<optimized out>, __n=<optimized out>, this=<optimized out>); at /usr/include/c++/13.1.1/bits/basic_string.h:1489; #11 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::resize (__c=<optimized out>, __n=<optimized out>, this=<optimized out>); at /usr/include/c++/13.1.1/bits/basic_string.tcc:401; #12 TBufferFile::ReadStdString (this=0x7fffffffd9d0, obj=0x7fffa8bd2d68) at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:247; #13 0x00007ffff76eb1f1 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x555555cc34b0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:610; #14 TBufferFile::ReadFastArray (this=0x7fffffffd9d0, start=<optimized out>, cl=0x555555cc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:1797,optimiz,optimized,1797,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,5,['optimiz'],['optimized']
Performance,"zhan0915/root/core/unix/src/TUnixSigHandling.cxx:195; #2 0x00007f8b05fa4435 in TUnixSigHandling::StackTraceTriggerThread () at /home/bockelman/zhan0915/root/core/unix/src/TUnixSigHandling.cxx:816; #3 0x00007f8b05fa450c in TUnixSigHandling::DispatchSignals (this=0x1534f70, sig=kSigSegmentationViolation) at /home/bockelman/zhan0915/root/core/unix/src/TUnixSigHandling.cxx:552; #4 <signal handler called>; #5 0x0000003fa1e811a1 in __strlen_sse2 () from /lib64/libc.so.6; #6 0x00007f8b0255f728 in length (__s=0x0) at /opt/rh/devtoolset-2/root/usr/include/c++/4.8.2/bits/char_traits.h:259; #7 assign (__s=0x0, this=0x7ffd70966c40) at /opt/rh/devtoolset-2/root/usr/include/c++/4.8.2/bits/basic_string.h:1131; #8 operator= (__s=0x0, this=0x7ffd70966c40) at /opt/rh/devtoolset-2/root/usr/include/c++/4.8.2/bits/basic_string.h:555; #9 TCling::TCling (this=0x1594620, name=<optimized out>, title=<optimized out>) at /home/bockelman/zhan0915/root/core/meta/src/TCling.cxx:1068; #10 0x00007f8b025602ae in CreateInterpreter (interpLibHandle=<optimized out>) at /home/bockelman/zhan0915/root/core/meta/src/TCling.cxx:578; #11 0x00007f8b05e2daa8 in TROOT::InitInterpreter (this=0x7f8b062a5520 <ROOT::Internal::GetROOT1()::alloc>) at /home/bockelman/zhan0915/root/core/base/src/TROOT.cxx:1821; #12 0x00007f8b05e2de26 in ROOT::Internal::GetROOT2 () at /home/bockelman/zhan0915/root/core/base/src/TROOT.cxx:363; #13 0x00007f8b05f03845 in TApplication::TApplication (this=0x1582e40, appClassName=0x401350 ""Rint"", argc=0x7ffd70968f4c, argv=0x7ffd70969048, numOptions=0) at /home/bockelman/zhan0915/root/core/base/src/TApplication.cxx:144; #14 0x00007f8b05ad1b71 in TRint::TRint (this=0x1582e40, appClassName=<optimized out>, argc=<optimized out>, argv=<optimized out>, options=<optimized out>, numOptions=<optimized out>, noLogo=false) at /home/bockelman/zhan0915/root/core/rint/src/TRint.cxx:144; #15 0x0000000000400fee in main (argc=3, argv=0x7ffd70969048) at /home/bockelman/zhan0915/root/main/src/rmain.cxx:27; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/134#issuecomment-195488572:1538,optimiz,optimized,1538,https://root.cern,https://github.com/root-project/root/pull/134#issuecomment-195488572,6,['optimiz'],['optimized']
Performance,} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker](https://epsft-jenkins.cern.ch/job/r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:3058,cache,cache,3058,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,1,['cache'],['cache']
Safety," CI. For the failure on Mac ARM, we are hitting https://github.com/root-project/cling/issues/370 which I wasn't even aware of 😄 . Yet another reason not to merge these changes 🙂 . ### Windows 64 bit. https://github.com/root-project/root/actions/runs/7693740131/job/20963073314?pr=14472. ```; Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'; aborting; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Exit code 0xc0000374; ```. ```; 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```; 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1915527940:1347,abort,aborting,1347,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1915527940,1,['abort'],['aborting']
Safety," with the same compiler ABI) to compile libA and libB (this is a common behavior), the compiler ABI condition is automatically met. On the other hand, the C++ standard library API is specified by ISO C++, and we can believe that the implementation of the standard library is compatible between different standards. So generally speaking, libA and libB are compatible even if they are compiled by different standards. However, in practice, the sequence of tokens of the same entity in the library may be different between different C++ standards, so the same symbol (such as a function) may correspond to different binaries, which indeed violates the ODR. However, as long as their behaviors are compatible, no matter which version of the linker is selected, there should be no serious problems. In other words, it can be considered that this is only a minor ODR violation, because it does not produce observable effects. The GCC document does not seem to clearly indicate whether compiling with mixed standards would work, but its [ABI policy](https://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) seems to imply that this is feasible. In addition, this issue has also been [discussed on StackOverflow](https://stackoverflow.com/questions/46746878/is-it-safe-to-link-c17-c14-and-c11-objects), and the view is that it is feasible to do so. Back to our current issue, ideally, as long as there is no explicit ODR violation in the header file, the only thing left is to ensure ABI compatibility, which should be guaranteed by the compiler. It can be said that if the current `span` implementation of ROOT is compatible with the implementation of the standard library, the problem of mixed standards is not serious, but it is difficult to always guarantee. But as I said, if there is something like `cxx20::span` instead of crashing with the standard library, this issue can be solved from its source. The rest is just the ABI compatibility of this `cxx20::span`, which is guaranteed by the compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11311#issuecomment-1254026839:1817,safe,safe-to-link-,1817,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1254026839,1,['safe'],['safe-to-link-']
Safety,"- Shows this information (also .?). .q				- Exit the program. ROOT special commands.; ===============================================================================; .L <filename>[flags]: load the given file with optional flags like; + to compile or ++ to force recompile.; Type .? TSystem::CompileMacro for a list of all flags.; .(x|X) <filename>[flags](args) :; same as .L <filename>[flags] and runs then a function; with signature: ret_type filename(args).; .credits : show credits; .demo : launch GUI demo; .help Class::Member : open reference guide for that class member (or .?).; Specifying '::Member' is optional.; .help edit : show line editing shortcuts (or .?); .license : show license; .ls : list contents of current TDirectory; .pwd : show current TDirectory, pad and style; .quit (or .exit) : quit ROOT (long form of .q); .R [user@]host[:dir] [-l user] [-d dbg] [script] :; launch process in a remote host; .qqq : quit ROOT - mandatory; .qqqqq : exit process immediately; .qqqqqqq : abort process; .which [file] : show path of macro file; .![OS_command] : execute OS-specific shell command; .!root -? : print ROOT usage (CLI options); ```. ```; root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readline style).; ==============================================================================; Arrow_Left : move cursor left [Ctrl+B]; Arrow_Right : move cursor right [Ctrl+F] [Ctrl+G]; Home : move cursor to beginning of line [Ctrl+A]; End : move cursor to end of line [Ctrl+E]; Ctrl+Arrow_Left : jump to previous word [Esc,B] [Alt,B]; Ctrl+Arrow_Right : jump to next word [Esc,F] [Alt,F]; Backspace : delete previous character [Ctrl+H]; Del : delete next character [Ctrl+D]; Esc,Backspace : delete previous word [Ctrl+W] [Esc,Ctrl+H] [Alt+Backspace] [Esc,Del] [Esc,Ctrl+Del]; Ctrl+Del : delete next word [Esc,D] [Alt,D]; Ctrl+U : cut all characters between cursor and start of line; Ctrl+K : cut all characters between cursor and end of line; Ctrl+T : transpose characters; Esc,C :",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10121#issuecomment-1084927674:3692,abort,abort,3692,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674,1,['abort'],['abort']
Safety,"; Thanks for the link to the docs. I got a little confused about Heap().Create details when I looked at first (and there you go) but I get it now. I learned two things:. a) RDirectory can take an existing shared_ptr using Add() instead of Create(), super!; b) Little thing but it looks like Create() syntax cannot cast a TH1F to a TH1. I've learned to always want a TH1 and never a TH1F, as their interfaces are identical after construction (nothing sliced). Implicit casts make it not a huge issue but I'd still prefer to cast to a TH1 smart pointer first and then use Add(), a trivial nuisance. Maybe Create has a way to cast that I'm missing, or could. Now, There's a lot to unpack here. Let's just stick with my pure subroutine version (not class version) for direct comparison for now. I could pass a structure anyway obviously. Now I can do this, with a TH1F... example 1: ; ```cpp; //my_subtrounes.C. // my_subroutines.C; void my_subroutine(shared_ptr<TH1> &x) {; x.reset(); // not needed for TH1F, but safer in general.; x.reset(new TH1F());; // .. do something with it.; }; ```; ```cpp; //make_th1.C; #include <ROOT/RDirectory.hxx> // one extra line ;); #ifdef __CINT__; // shared_ptr<TH1> mc_global_x,mc_global_y,mc_global_z; // but saved one line here...; #endif. void make_th1() {; shared_ptr<TH1> x,y,z;; my_subroutine(x);; my_subroutine(y);; my_subroutine(z);. // and the last we do is leave globals on the heap for interactive user if needed:; #ifdef __CINT__ // I wouldn't leave the globals in compiled code. ; RDirectory::Heap().Add(""test1"",x); // this line is ""extra"" compared to PR, but puts caller in control.; RDirectory::Heap().Add(""test2"",y); // but using RDirectory requires 3 lines now ;); RDirectory::Heap().Add(""test3"",z); // ; #endif; }; ```; I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loop",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791104038:1134,safe,safer,1134,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791104038,1,['safe'],['safer']
Safety,"> > @grasph please fork also [roottest](https://github.com/root-project/roottest) to prevent timeouts on the Windows build nodes. Thanks; > ; > Done. Do I need to create a branch with the same name ?. Thanks. And no, simply forking is good enough",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8717#issuecomment-885523144:93,timeout,timeouts,93,https://root.cern,https://github.com/root-project/root/pull/8717#issuecomment-885523144,1,['timeout'],['timeouts']
Safety,"> > I take it from the warnings that I might have to add the other FindObject method (that accepts a TObject pointer) to satisfy the builds? Please confirm and I can do this.; > ; > Exactly. Something like `auto ptr = dynamic_cast<const RooAbsArg*>; return ptr ? find(*ptr) : nullptr;` should do it.; > ; > Could you include a one-line doxygen-readable comment (`///`) to avoid having two undocumented functions? Also note that `find(RooAbsArg&)` will find objects with the same name, not necessarily with the same pointer. You should decide with @guitargeek if that's actually desired when called from the Python side. In a second sentence, you should document whether that function will find objects with the same name (= equivalent objects as far as RooFit is concerned) or if it should only find the exact same object. Indeed I thought about having `auto arg = dynamic_cast<const RooAbsArg*>(obj); return (arg && containsInstance(*arg)) ? obj : nullptr;` but given the 'find' method matches by name I think for consistency the FindObject should behave the same for these classes, unless there is some additional benefit to FindObject(obj) returning obj??",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8177#issuecomment-841340893:372,avoid,avoid,372,https://root.cern,https://github.com/root-project/root/pull/8177#issuecomment-841340893,1,['avoid'],['avoid']
Safety,"> > Please also add a line with a comment explaining why `make_unique` is not used in that case, so that nobody will accidentally change it back and re-introduce the issue.; > ; > That doesn't help at all, you can introduce this issue in any place you use these `static constexpr`. We have to _understand_ `constexpr` and not add comments in one place where the issue popped up. On top, I'd argue that `std::make_unique` was wrong here anyway since it's relying on a temporary object + move semantics instead of just setting the address of the already constructed `std::unique_ptr`. Ok then let's use the `constexpr` correctly here. So with what @jalopezg-r00t said, the correct fix is to also add the definition even if it looks strange? If you go for that, please also add a comment explaining why the line is necessary so it is not accidentally removed because it looks superfluous. As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. [1] https://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#Rr-make_unique",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10263#issuecomment-1081652232:1101,safe,safety,1101,https://root.cern,https://github.com/root-project/root/pull/10263#issuecomment-1081652232,1,['safe'],['safety']
Safety,"> @dpiparo, since you wrote this code last year: #13532; > ; > You have any idea why `Py_GetProgramName` was necessary?. I think I was simply trying to evolve the existing Python 2 code existing at the time, there is no sophisticated strategy behind. If the usage of the deprecated function can be avoided, great.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16785#issuecomment-2446725220:298,avoid,avoided,298,https://root.cern,https://github.com/root-project/root/pull/16785#issuecomment-2446725220,1,['avoid'],['avoided']
Safety,"> @hahnjo I did not want to let this sit for too long and as days ahead are even busier for me I invested now some more time on this. The good news is that I can pretty confidently say that the memory leak reported [above in the left plot](https://github.com/root-project/root/issues/14055#issuecomment-1814642915) has nothing to do with ROOT 🎉 and it was an unlucky coincidence which made me think it is due to ROOT. 😓 I still have to understand this memory behaviour in detail, but it is off-topic here. 🙈. Ok, thanks for cross-checking!. > I was about simply closing the issue, when I remembered checking old issues in our project that our tests were just passing with ROOT `v6.26` and started to fail reporting the above mentioned sanitiser complaint from `v6.28`. I now checked and these failure occur as well with `v6.30` and `v6.32`. As far as I understand from our exchange above, we can safely suppress these adding `leak:libCling'` to `lsan-root.supp` file (I would not exclude more than the bare minimum in order to avoid suppress potential real problems/errors in the future). Yes, I believe from an application point of view, you can treat `libCling` as a black box. > However, I would like to ask you a feedback about the fact this suppression was not necessary in `v6.26`. Is this expected for you? 🤔. If the leaks are about `TemplateId` (as they were in the log file(s) you shared), then yes this is a problem we introduced in v6.28. It was eventually fixed in https://github.com/root-project/root/pull/16150 which will appear in v6.34 (later this year). Sorry for not recognizing this as a real problem earlier (the fix was also made difficult because it was ""caused"" by an upstream change in LLVM/Clang when we upgraded).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-2382239702:896,safe,safely,896,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-2382239702,2,"['avoid', 'safe']","['avoid', 'safely']"
Safety,> And again let me ask for providing a modern memory safe API with proper memory management in place by default. This need redesign of pad list of primitives. Finally we just need other pad classes. This PR is not change of `TPad` memory management but simple extension of existing API. I had in mind `df027` tutorial which now looks like:. ```; new TCanvas(); // assign gPad - unreliable; ...; histo->Draw(); ```. I want to avoid gPad - for that I need to write now:; ```; auto c1 = new TCanvas();; ...; if (c1->GetListOfPrimitives()) {; c1->GetListOfPrimitives()->Add(histo);; c1->Modified();; }; ```. This is main pattern for 90% of graphical tutorials which I want to be looking:; ```; auto c1 = new TCanvas();; ...; c1->Add(histo);; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15822#issuecomment-2162904388:53,safe,safe,53,https://root.cern,https://github.com/root-project/root/pull/15822#issuecomment-2162904388,2,"['avoid', 'safe']","['avoid', 'safe']"
Safety,"> As far as I can tell this requires the user code to be thread safe, which does not seem to be the case of the example. Yes the example is meant to be single threaded. If users run the analysis on multiple threads they have to make sure the callback can be called by multiple threads concurrently. > it is not clear whether the call back will see the global partial result or the partial result so far on the 'current' thread. No guarantees there: it's going to be a ""partial result"".; If it's ""thread-local partial"" or ""global partial"" depends on what each action's `PartialUpdate` method will do in practice. For some kind of actions it might be fine in terms of RAM and runtime to expose the ""global"" partial result, for others it could be an issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331171774:64,safe,safe,64,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331171774,1,['safe'],['safe']
Safety,"> As for the `make_unique`, I think it's correct to use it there. According to the core guidelines [1], it is always preferred because it ""gives a more concise statement of the construction. It also ensures exception safety in complex expressions"". And moving a unique pointer is cheap, temporary `unique_ptr` are not a problem. This guideline entry talks about construction, ie `auto q = make_unique<Foo>(7);`. Here we already have `weightVar` constructed and want to assign to it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10263#issuecomment-1081654215:217,safe,safety,217,https://root.cern,https://github.com/root-project/root/pull/10263#issuecomment-1081654215,1,['safe'],['safety']
Safety,"> But how do you solve the modules.idx creation, can you link to a patch?. The build is actually cross-compiling as requested in the `conda-forge.yml` file (e.g. [here](https://github.com/conda-forge/root-feedstock/blob/1987df5fb087fb149f114dab14f6dd5f99e3156d/conda-forge.yml#L4)). Then the conda forge CI is able to automatically detect that an executable e.g. `rootcling_stage1` that is being invoked during the build was built for a different target platform than the build one. In such cases, it runs that executable via `qemu` (which in turn is enabled by `binfmt_misc`). There's some hint of it in the CI files such as https://github.com/conda-forge/root-feedstock/blob/1987df5fb087fb149f114dab14f6dd5f99e3156d/.azure-pipelines/azure-pipelines-linux.yml#L90-L96 (these are generated automatically by conda-forge). This does not explain alone the fact that there is also a patch to disable `hsimple.root` generation in the conda forge ROOT feedstock. At some point in the past that was generating some other problem at build time (unclear whether that was only fault of ROOT or also a bug in qemu itself, see [this bug report](https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=999421)), so that patch was added. IMHO clearly the better approach is to have less patches and walk towards a fully cross-compilable ROOT build, albeit this PR might be just a very small step.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15930#issuecomment-2205465973:332,detect,detect,332,https://root.cern,https://github.com/root-project/root/pull/15930#issuecomment-2205465973,1,['detect'],['detect']
Safety,"> Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)].; > ; > For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here). Ah ok. I recently learned what rebase -i is, so I'll use that next time. Thanks for the tip",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8425#issuecomment-865186362:87,avoid,avoid,87,https://root.cern,https://github.com/root-project/root/pull/8425#issuecomment-865186362,1,['avoid'],['avoid']
Safety,"> For the `TObject` documentation I would add something along the line of:; > ; > ```; > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly.; > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15469#issuecomment-2151703325:258,detect,detection,258,https://root.cern,https://github.com/root-project/root/pull/15469#issuecomment-2151703325,1,['detect'],['detection']
Safety,"> Hi Hanna, thank you very much for the PR!; > ; > Code changes look fine, but can you please change the commit message to explain why it was possible to use `setValFast` in `setBin`? That it's redundant to do the range, check in `getVal`, because the value you pass to `setBin` is a bin center which is in the variable range by definition anyway. Thank you for the comment, I hope the new commit message is clearer!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11090#issuecomment-1202401228:194,redund,redundant,194,https://root.cern,https://github.com/root-project/root/pull/11090#issuecomment-1202401228,1,['redund'],['redundant']
Safety,"> I also have a general comment,; > ; > https://github.com/root-project/root/blob/5d2c835d1c707dbbb9d7f1a82425c0567d5527dd/tree/ntuple/v7/doc/specifications.md?plain=1#L341-L342; > ; > it's not yet clear what are the expectation around these strings, my hunch is at write-time they come from reflection, and at read-time ROOT's internal compiler will be used to restore the field to a known (maybe user-defined) C++ type. However, in principle all the logical layout of data and types are encoded without these strings, so my questions are:; > ; > 1. for non-ROOT reader, can these be safely ignored (e.g. instead of getting back a named data struct, you get an anonymous struct by ignoring the type name); > ; > 2. for non-ROOT writer, if these are left empty, can ROOT figure out based on primitive types and compositions?. This is a good question. If you omit the type name for structs or collections, they become untyped structs or untyped collections. RDF can deal with this fully, the `RNTupleReader` currently only with untyped collections (transparently cast to an `std::vector`). In general, C++/framework code is likely to have problems with untyped structs because there is no class to read data into... Still, untyped structs and untyped collections are valid RNTuple data. For basic types, we cannot omit the type because the column only specify the on-disk type while the field type information gives the in-memory type. The two don't have to be identical (e.g. `double` in memory and `Real32` on disk). I thought we already documented the allowed combinations of POD type and column types but I now realized we didn't. We'll update the docs in a follow-up PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13779#issuecomment-1820886920:585,safe,safely,585,https://root.cern,https://github.com/root-project/root/pull/13779#issuecomment-1820886920,1,['safe'],['safely']
Safety,"> I am seeing a similar issue with TSystem.h, TSeqCollection *fTimers{nullptr}; //List of timers. I think we should tackle this in a separate PR. The simplest solution though is to always create the fTimers (i.e. move its creation to the constructor or init routine) and to mark it as a 'thread safe' collection:; ```; fTimers->UseRWLock();; ```; thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8379#issuecomment-857765612:295,safe,safe,295,https://root.cern,https://github.com/root-project/root/pull/8379#issuecomment-857765612,1,['safe'],['safe']
Safety,"> I don't agree with these changes for two reasons:; > ; > * The default is `cuda=OFF`, and if the user passes `cuda=ON` explicitly, it can be annoying if it is switched off at compile time because for example some environment variables were missing. We had complaints about this in the past. That's why I suggested to not have this fallback for features that are by default `OFF`. See also: [[cmake] Some improvements related to feature detection #14834](https://github.com/root-project/root/pull/14834).; > ; > * I would argue that it's not correct to set `cuda=ON` if `all=ON`. Enabling cuda disables TMVA CPU, so clearly you don't get `all` features but different ones. That's why many distros like Arch Linux have a separate `root` and `root-cuda` package. Unless this is fixed, I think the right solution to the problem is to not switch cuda on if `all=ON`. Indeed, I was wrong with the second bullet point here. I remembered it wrongly because when building with `tmva-gpu`, some tutorials use the GPU backend of TMVA by default. This first argument still holds though!. I made an alternative suggestion: https://github.com/root-project/root/pull/15155. This one also fixes the problem that the `cuda` flag is checked before it is set. It simplifies the logic also a bit: the `cuda` flag is not determining anymore if CMake will look for the CUDA language and add it to the project. It only determines if ROOTs CUDA sources are actually built.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15149#issuecomment-2039816688:438,detect,detection,438,https://root.cern,https://github.com/root-project/root/pull/15149#issuecomment-2039816688,1,['detect'],['detection']
Safety,"> I don't agree with these changes for two reasons:; > ; > * The default is `cuda=OFF`, and if the user passes `cuda=ON` explicitly, it can be annoying if it is switched off at compile time because for example some environment variables were missing. We had complaints about this in the past. That's why I suggested to not have this fallback for features that are by default `OFF`. See also: [[cmake] Some improvements related to feature detection #14834](https://github.com/root-project/root/pull/14834).; > ; > * I would argue that it's not correct to set `cuda=ON` if `all=ON`. Enabling cuda disables TMVA CPU, so clearly you don't get `all` features but different ones. That's why many distros like Arch Linux have a separate `root` and `root-cuda` package. Unless this is fixed, I think the right solution to the problem is to not switch cuda on if `all=ON`. This sounds like a perfectly legitimate solution",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15149#issuecomment-2039583205:438,detect,detection,438,https://root.cern,https://github.com/root-project/root/pull/15149#issuecomment-2039583205,1,['detect'],['detection']
Safety,"> I don't think ROOT is at fault here for relying on this feature of CMake. As described in the blob post by a CMake maintainer (emphasis is mine):. > Even if find_package() were only redefined once though, it would still be relying on **undocumented** CMake behavior which may be modified or removed completely in a future version. Reliance on such behavior should be discouraged and as the above discussion shows, the technique is not safe to use in general. It's mostly sad that vcpkg did the same trick, making ROOT incompatible with it. Given the circumstances I think this cannot be fixed at the moment, since neither ROOT nor vcpkg can easily change and I also don't expect CMake to make such behavior defined and allow overriding build-ins multiple times. So I guess we need to close this is won't-fix?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633#issuecomment-898355331:437,safe,safe,437,https://root.cern,https://github.com/root-project/root/issues/8633#issuecomment-898355331,1,['safe'],['safe']
Safety,> I still don't understand this. All discussions we had so far ended with agreeing that the LLVM upgrade will change nothing wrt the JSON library. After LLVM upgrade we can use `json.hpp` directly in header files.; Thus one can simply avoid complication with `json_fwd.hpp`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11268#issuecomment-1230211903:235,avoid,avoid,235,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1230211903,1,['avoid'],['avoid']
Safety,"> I take it from the warnings that I might have to add the other FindObject method (that accepts a TObject pointer) to satisfy the builds? Please confirm and I can do this. Exactly. Something like `auto ptr = dynamic_cast<const RooAbsArg*>; return ptr ? find(*ptr) : nullptr;` should do it. Could you include a one-line doxygen-readable comment (`///`) to avoid having two undocumented functions? Also note that `find(RooAbsArg&)` will find objects with the same name, not necessarily with the same pointer. You should decide with @guitargeek if that's actually desired when called from the Python side. In a second sentence, you should document whether that function will find objects with the same name (= equivalent objects as far as RooFit is concerned) or if it should only find the exact same object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8177#issuecomment-841335386:356,avoid,avoid,356,https://root.cern,https://github.com/root-project/root/pull/8177#issuecomment-841335386,1,['avoid'],['avoid']
Safety,"> I think it should live in InternalTreeUtils?. I was thinking this is generic enough that we may want to use it in places that do not strictly depend from `libTree`, but maybe I'm just overthinking. > How can we be sure that this function returns the same files in the same order as the previous one in all cases?. I hope we already get a (very good?) degree of certainty by not breaking existing test cases. I can come up with a few more just to add extra safety. Irrespective of this, the function is taken verbatim from the logic in `TChain::Add`. Do you see any part of the function that intuitively might lead to different results? I was thinking about this and the only place that remotely gives me a slight doubt is using `std::sort` instead of `TList::Sort`, but I really hope that doesn't introduce a different behaviour. > the new one throws if a directory cannot be opened. Yes indeed that's a different behaviour. The existing logic never throws. In case `dir == nullptr`, which I guess happens if the expanded directory cannot be found/opened (?), then it will just fall to the end of the `TChain::Add` method and `return nf`, where `nf` will be zero since no files have been added. In this regard I see two options:. 1. The new function throws (because subjectively is the correct behaviour). Then in `TChain::Add` we can keep the old behaviour, by catching the error and not re-raising it.; 2. The new function can return an empty vector, in case `dir == nullptr`. This is more similar in spirit with the old behaviour.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13160#issuecomment-1619057225:458,safe,safety,458,https://root.cern,https://github.com/root-project/root/pull/13160#issuecomment-1619057225,1,['safe'],['safety']
Safety,"> I understand this will be simplified when we can pass a configuration object to RDataFrame where we specify the range. When reading trees/chains, I'm not sure the configuration object will allow anything more than what we can already do with TEntryLists?. IIUC the redundant info is that `globalend = globalstart + (localends - localstarts).sum()` (i.e. we could avoid passing `globalend`). However: do you still need `globalstart` and `globalend` at all when using TEntryLists?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8646#issuecomment-895318380:267,redund,redundant,267,https://root.cern,https://github.com/root-project/root/pull/8646#issuecomment-895318380,2,"['avoid', 'redund']","['avoid', 'redundant']"
Safety,"> I'd leave the backport decision up to you. We can patch this into our user environments without a backport too. Ok, I prefer backports over people patching ROOT :slightly_smiling_face: There is a very low risk of breaking something here, since the PF only affects the case where `exe` contains qemu, which simply didn't work before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14251#issuecomment-1860177688:207,risk,risk,207,https://root.cern,https://github.com/root-project/root/pull/14251#issuecomment-1860177688,1,['risk'],['risk']
Safety,"> If I read correctly the code, it means that in the pch we could have had garbage anytime in the past, even without VC. Is this correct? If yes, is it only by chance that everything worked?. No, by design. I just screwed up patching the PCH writer; this is a fairly well-controlled piece of clang that I broke. I broke it in a very safe way (because the PCH is safe by design), wasting lots of bytes. > Would we have seen this with valgrind/memory sanitiser if we had given a pass to rootcling generating the pch? If yes, perhaps it makes sense to do it when generating pcms. No. It's all valid memory, we have just been writing and reading long buffers out of which only a few leading bytes were actually needed. Additionally, this broken original patch of mine is pending review with clang, and they would have definitely pinpointed this bug. But we were first!. So I don't really think there's anything to learn or improve here. Please move on ;-)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/848#issuecomment-321400176:333,safe,safe,333,https://root.cern,https://github.com/root-project/root/pull/848#issuecomment-321400176,2,['safe'],['safe']
Safety,"> In `AddColumnsFromField` and `CollectColumns` we now produce both, the vector of `RColumnInfo` records and the `RCluster::ColumnSet_t`. To me it seems that the source of truth is the `RColumnInfo` vector, and it may be clearer to generate and `RCluster::ColumnSet_t` from the `RColumnInfo` vector. It was a small optimization to avoid looping over all columns twice and get all the data we need at once. I can separate the loops if you prefer, it should make little difference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15954#issuecomment-2210678615:331,avoid,avoid,331,https://root.cern,https://github.com/root-project/root/pull/15954#issuecomment-2210678615,1,['avoid'],['avoid']
Safety,"> In principle `begin` can absolutely return a raw pointer (I _think_ LLVM's SmallVector was designed like that for simplicity, to avoid having to define a custom iterator type). But raw pointers make for fine iterators 😄 Seems like a bug in PyROOT?. I just had a quick look, but it seems to me that this is a corner case which doesn't trigger any mechanic for a proper pythonization, which enables the `for x in rvec` syntax in Python. Let's see, the final word is not yet spoken ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-806482531:131,avoid,avoid,131,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-806482531,1,['avoid'],['avoid']
Safety,"> In what situation is `R__HAS_STD_SPAN` not sufficient? If `ROOT` has been configured to build in C++20 mode and properly installed, it must be set in `RConfigure.h`. If it is not set, this means that the `ROOT` code will use an alternative to `std::span` (because at configure and build time, it detected it was not available). In fact, I have a project that uses C++20, and uses ROOT compiled with C++17, and I encountered compilation errors in the ROOT header file RSpan.hxx as mentioned (redefinition of std::span). However, once the restriction of this preprocessor macro is resolved, the compilation could pass, and no related problems have been encountered for the time being. I also checked RStringView.hxx, this header file also uses a similar technique, so I submitted this patch. I believe that I may not be considerate about this in depth, but I hope that the issues of ""mixing standards"", which seems not to be issues, can be solved. If there are indeed many restrictions/issues on this issue, I admit that this is not such simple...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11311#issuecomment-1252761771:298,detect,detected,298,https://root.cern,https://github.com/root-project/root/pull/11311#issuecomment-1252761771,1,['detect'],['detected']
Safety,"> It wasn't clear from what you said whether you were aware of that. There are zounds of things that I'm not aware of, but as said, the kind of C++ that folks outside of HEP expect to ""just work"" with cppyy is rather more advanced that the basic C++98 that most folk in HEP still use. Heck, you guys are even still hung up on Python2.7! Anyway, the reason I changed the implementation is b/c it is already not working _today_. C++20 (which Clang5 doesn't support anyway) is just gravy. As for #6389, I'm too far diverged from since I forked ROOT/meta to apply it, so have no interest in it. I'm also not familiar with how the ""special functions"" boil upward. Note that, going back to the initiation of this thread: there was/is no issue with constructors for cppyy proper on Windows: both 32b and 64b, work fine. So, I see no benefit even in trying it out. I'm currently fixing that crash in lookupHelper with unnamed namespaces. Seems the solution is upgrading Cling _and_ a judiciously placed `Interpreter::PushTransactionRAII` (the crash is actually an abort b/c of an open transaction). Then still modules, have to see how Windows looks now; after that, this change to lookupHelper's handling of templates is high on my list.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-697676086:1056,abort,abort,1056,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-697676086,1,['abort'],['abort']
Safety,"> Maybe we can just make RPageSource::UnsealPage a public method?. In principle yes, I guess for now it's ok to keep it private as it's not clear (to me at least) which use cases in the open this method would cater to. So we can avoid exposing an interface that we might want to take back/change at a later stage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14403#issuecomment-1912119472:229,avoid,avoid,229,https://root.cern,https://github.com/root-project/root/pull/14403#issuecomment-1912119472,1,['avoid'],['avoid']
Safety,"> My general comment is that I would try to avoid doing a plain copy of code that is somewhere else.; > ; > I checked `rootx/src/rootx.cxx` and it not only parses `--notebook`, but also several other options such as `-b`, `-l`, etc. This makes me wonder: is `rootx/src/rootx.cxx` the right place to parse options or it's not?; > ; > Also, is there a place where options are parsed no matter the platform? If yes, we should put there the code for `--notebook`, shouldn't we?. `rootx` is used to create the `root` executable, which then may call `root.exe`. One cannot do that on Windows, we can only have one root executable, which is `root.exe`. Now, if someone find another, better solution, fine with me. As I said, this is the simplest and less intrusive solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9142#issuecomment-946778407:44,avoid,avoid,44,https://root.cern,https://github.com/root-project/root/pull/9142#issuecomment-946778407,1,['avoid'],['avoid']
Safety,> Note that concurrent access to different elements of a std::vector is guaranteed to be safe. Do you have a reference and/or clear explanation :) ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2708#issuecomment-425180877:89,safe,safe,89,https://root.cern,https://github.com/root-project/root/pull/2708#issuecomment-425180877,1,['safe'],['safe']
Safety,"> Note that we might still face the problem with DLLs loaded from somewhere else, and for which there is no .lib,. Yes, I agree. This is clearly a problem/risk. > but it looks like an overkill to me, especially if I have to search all volumes (imagine NFS). Why ""all"" volumes? Wouldn't we be limited with the set of ""directory of the dll"" and directorys in %PATH% and other path variables?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6156#issuecomment-672220061:155,risk,risk,155,https://root.cern,https://github.com/root-project/root/pull/6156#issuecomment-672220061,1,['risk'],['risk']
Safety,"> Note: at least on Intel architectures, a single 64bit pointer cannot be split into more than one cache line due to alignment of 8 bytes (i.e. it's thread-safe to read it). . Even-though this might be true, the C++ standard explicit says that it is undefined behavior to read a value concurrently with an update with any explicit synchronization mechanism (for example std::atomic). In practice, this means that the same 'happenstance' you describe might not be true on other platforms. Furthermore the compiler is also allowed to re-order code in 'surprising ways' that would thwart/foil the assumption on the happenstance you describe. Thus our policy, consistent with the standard is that if a value can be updated while being read, it either must be an atomic or both the read and write must be protected by a lock. [This is not meant to preclude any other means of synchronization to achieve the same goal]. > Therefore, any thread will either see fBase == nullptr and acquire a lock to create the list of bases, or it will find the value already computed and return it immediately. In this case this true simply due to the fact that fBase is already an std::atomic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/957#issuecomment-327819102:156,safe,safe,156,https://root.cern,https://github.com/root-project/root/pull/957#issuecomment-327819102,1,['safe'],['safe']
Safety,"> Ok, let me know if you have other tests which you would like me to do. I was a bit surprised to learn that:. > > Thank you for the nice investigations. What are the next steps? I tried #13139 but that does not help us. I see a different memory profile, but the extra memory due to ROOT is stil around 70MB (even a bit more with that PR, AFAICT).; > ; > Is that with or without opening the file? My expectation is that `root.exe -l -b -q` will take a lot less rss. ping. > One more question for my understanding. Are those big vectors actually needed at all when reading a file? If not why aren't they swapped out to disk either implicitly via some madvise or by simply caching to disk the results? The latter might even give some startup advantage, assuming they are offsets to the pcms and they do not change (not the basic root ones, at least). They are not needed upon module loads. We tried to implement some sparse vectors to mitigate this issue. However, I feel like we did not have the persistence to make it work. That is, we can implement a lazy vector structure that behaves just like vector but the reserve operation does not allocate. Instead, we allocate slabs around the access pattern (we override the subscript operator, etc). This would help us avoid eager allocations and hopefully, depending on whether there is a clear access pattern to optimize things. Our implementation seems to be still [here](https://github.com/Teemperor/llvm/commit/a06b21cbc55c6d2f1d2bf6f39771411ccc17342b). Another easier thing to try is reviving https://reviews.llvm.org/D89749",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1629035353:1264,avoid,avoid,1264,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1629035353,1,['avoid'],['avoid']
Safety,"> So somehow -vfsoverlay is triggering the false positive warning detection (it is not clear for me why, maybe it is clang bug. There are much more options.; May be some of them mix up system include files. Especially following option is very suspicious:. -isystem /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-slc6-gcc62-opt/include . Could you try compilation of my simple example without all these extra includes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2581#issuecomment-418887676:66,detect,detection,66,https://root.cern,https://github.com/root-project/root/pull/2581#issuecomment-418887676,1,['detect'],['detection']
Safety,"> So, I think it is better to make it clear a Clone is needed to avoir deletion. Then this object is drawn ... but the primary thing is to avoid deletion. OK, then I think, the std::unique_ptr should not be used at least in this tutorial, I would close this pr and try another one",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5680#issuecomment-633546122:139,avoid,avoid,139,https://root.cern,https://github.com/root-project/root/pull/5680#issuecomment-633546122,1,['avoid'],['avoid']
Safety,"> The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-795003958:666,avoid,avoids,666,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-795003958,1,['avoid'],['avoids']
Safety,"> To reiterate on why we ""only"" need to fix gzip and lzma: The other compression algorithms already do this,. Indeed. The diffs was made less obvious because:; ZLIB decompression is already doing the right thing.; ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different.; ; > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:; ```; Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap; ```; and used via; ```; char *bufcur = &fBuffer[fKeylen];; ```; so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:; * why are those added?; * why doesn't RNTuple need it?. 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14523#issuecomment-1932803605:814,risk,risk,814,https://root.cern,https://github.com/root-project/root/pull/14523#issuecomment-1932803605,1,['risk'],['risk']
Safety,"> We measured that sweeping a dataset with 59 files on eos within CERN network checking entries numbers in trees took ~.3s per file. Isn't this perf hit too large?. I am not 'too' worried about the user side (albeit, some TChain may have 1000s of files) but on the server side (i.e. trying to avoid a denial-of-services attack on the server). I still strongly recommend that we do not open all the files at once we 'stop'/'throttle' once you reach the number of task/threads you are going to have (then take a pause, start the actual tasks/jobs and then restart 'slowly' to get the rest of the information).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3051#issuecomment-442089455:293,avoid,avoid,293,https://root.cern,https://github.com/root-project/root/pull/3051#issuecomment-442089455,1,['avoid'],['avoid']
Safety,"> Yes, better than the ""That should fix a recent nightly failure with gcc11"" that Philippe commented on, thanks for improving it!; > ; > Compared to just including the actual diagnostic (something Philippe and I generally try to do these days, something that has proven super helpful several times), your current log:; > ; > ```; > That should fix a recent nightly failure with gcc11 avoiding to require; > module ""bits/ranges_base.h"" in C++20 context.; > ```; > ; > does not call out; > ; > * that it's during dictionary generation; > ; > * that the modulemap requires the module feature 'cplusplus20' (your log seems to suggest that the error surfaces when compiled in C++20 mode, while this error shows up when compiling in C++14 or 17); > ; > * that the issue is also with GCC12 headers (your message seems to suggest that it's only with GCC11 headers); > ; > * the ""stack trace"", i.e. `/usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here` and then `/home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'` and then `#include ""TIsAProxy.h""`; > ; > ; > In general we tell our users (+/- always) ""can we please see the actual diagnostic"", and for the same reasons it's super helpful to include them here. The time we discussed this is waaay larger than the time it would have taken you to update the log to what Philippe proposes, rather than updating it to something that tries to address the issues (but seemingly fails?); > ; > But it's Philippe's review, I let him comment / deal with this if you still prefer to keep your current commit log. I simply wanted to add an explanation why Philippe suggests the inclusion of the actual diagnostic (and why I found it convincing and do it ever since he propose it to me). This issue exists on gcc11 and gcc12 (and I guess any gcc that made changes to libstdc++ and the exp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1430019305:384,avoid,avoiding,384,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1430019305,1,['avoid'],['avoiding']
Safety,"> but the same callback; might be invoked concurrently by different worker threads if implicit multi-threading; is enabled. As far as I can tell this requires the user code to be thread safe, which does not seem to be the case of the example. Also, in the blur, in it is not clear whether the call back will see the global partial result or the partial result so far on the 'current' thread. The case 'global partial result' requires merging of the thread's histograms in the case there is one histo copy per thread/worker.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331163715:186,safe,safe,186,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331163715,1,['safe'],['safe']
Safety,"@alja Should I merge it?; The only small doubt I have - probably we should use `override` specifier when implementing such ""complex"" interfaces. Otherwise at some point simple mistake in list of args will lead to error, which could be detected by compiler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4030#issuecomment-509813570:235,detect,detected,235,https://root.cern,https://github.com/root-project/root/pull/4030#issuecomment-509813570,1,['detect'],['detected']
Safety,"@bellenot Please check if it is ok. I tried to simplify code, avoid many intermediate and duplicated classes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3759#issuecomment-487943921:62,avoid,avoid,62,https://root.cern,https://github.com/root-project/root/pull/3759#issuecomment-487943921,1,['avoid'],['avoid']
Safety,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:; ```; (compiling source file '../BUILTIN_CFITSIO/eval_y.c'); ; C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]; (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'); ```; This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:; https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15508#issuecomment-2112196842:1734,avoid,avoid,1734,https://root.cern,https://github.com/root-project/root/pull/15508#issuecomment-2112196842,1,['avoid'],['avoid']
Safety,"@hageboeck @lmoneta : these are super simple additional classes. following up on our discussion on the ""RooAbsPdf"" vs. ""RooAbsReal"" business: do you think it would be useful for me to template these classes in such a way as to meet my suggestion of avoiding code duplication?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4015#issuecomment-507052809:249,avoid,avoiding,249,https://root.cern,https://github.com/root-project/root/pull/4015#issuecomment-507052809,1,['avoid'],['avoiding']
Safety,"@hahnjo I did not want to let this sit for too long and as days ahead are even busier for me I invested now some more time on this. The good news is that I can pretty confidently say that the memory leak reported [above in the left plot](https://github.com/root-project/root/issues/14055#issuecomment-1814642915) has nothing to do with ROOT 🎉 and it was an unlucky coincidence which made me think it is due to ROOT. 😓 I still have to understand this memory behaviour in detail, but it is off-topic here. 🙈 . I was about simply closing the issue, when I remembered checking old issues in our project that our tests were just passing with ROOT `v6.26` and started to fail reporting the above mentioned sanitiser complaint from `v6.28`. I now checked and these failure occur as well with `v6.30` and `v6.32`. As far as I understand from our exchange above, we can safely suppress these adding `leak:libCling'` to `lsan-root.supp` file (I would not exclude more than the bare minimum in order to avoid suppress potential real problems/errors in the future). However, I would like to ask you a feedback about the fact this suppression was not necessary in `v6.26`. Is this expected for you? 🤔",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-2379654469:861,safe,safely,861,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-2379654469,2,"['avoid', 'safe']","['avoid', 'safely']"
Safety,"@linev @Axel-Naumann . my apologies, now slowly reducing amount of flags used for C++ modules build I see that modulemap.overlay file with libc and stl modulemap files is causing these problem. I think it is missing pthead modulemap file, I am testing it..; ```; -ivfsoverlay /mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include/modulemap.overlay.yaml; ```; So somehow -vfsoverlay is triggering the false positive warning detection (it is not clear for me why, maybe it is clang bug):; ```; [sftnight@lcgapp-slc6-x86-64-32 civetweb]$ clang -DHTTP_WITHOUT_FASTCGI -DNO_SSL_DL -DUSE_WEBSOCKET -I/mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include -I/cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-slc6-gcc62-opt/lib/cmake/VecCore/../../../include -isystem /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-slc6-gcc62-opt/include -Qunused-arguments -fcolor-diagnostics -pipe -m64 -Wall -W -pthread -fmodules -fmodules-cache-path=/mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include/pcms/ -fno-autolink -fdiagnostics-show-note-include-stack -Wno-module-import-in-extern-c -ivfsoverlay /mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include/modulemap.overlay.yaml -Xclang -fmodules-local-submodule-visibility -g -fPIC -pthread civetweb.c example.c -ldl -o test; civetweb.c:2701:8: warning: implicit declaration of function 'pthread_setname_np' is invalid in C99 [-Wimplicit-function-declaration]; (void)pthread_setname_np(pthread_self(), threadName);; ^; 1 warning generated.; example.c:3:14: warning: unused parameter 'argc' [-Wunused-parameter]; int main(int argc, char **argv); ^; example.c:3:27: warning: unused parameter 'argv' [-Wunused-parameter]; int main(int argc, char **argv); ^; 2 warnings generated. ```. We will investigate why and",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2581#issuecomment-418769386:484,detect,detection,484,https://root.cern,https://github.com/root-project/root/pull/2581#issuecomment-418769386,1,['detect'],['detection']
Safety,"@olifre this was an oversight so it does not appear in the release notes. I totally agree that we should avoid wasting other people time trying to debug the same thing, but the release notes of 6.20 may not be the first place people look, in particular since this affects several versions. I was thinking to put a short description of the incompatibility and fix in the reference guide of [TGeoMaterial](https://root.cern/doc/master/classTGeoMaterial.html) since this is the class where the users will actually see the different behaviour. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9383#issuecomment-987815314:105,avoid,avoid,105,https://root.cern,https://github.com/root-project/root/issues/9383#issuecomment-987815314,1,['avoid'],['avoid']
Safety,"@pcanal right, that seems a possible way forward. That said, it absolutely requires our own `FindGTest.cmake` while I personally think we should rather move towards standard ways of detecting ROOT dependencies (cf the saga around XRootD). For that reason, I would prefer to *not* make the setup more complicated in this PR than it already is - I argue that removing the dead compatibility code is simply acknowledging the fact that we silently depend on GTest 1.10 already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15355#issuecomment-2082181170:182,detect,detecting,182,https://root.cern,https://github.com/root-project/root/pull/15355#issuecomment-2082181170,1,['detect'],['detecting']
Safety,@stwunsch I simplified the docs to avoid repetition by referencing the documentation on base classes.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6293#issuecomment-685789931:35,avoid,avoid,35,https://root.cern,https://github.com/root-project/root/pull/6293#issuecomment-685789931,1,['avoid'],['avoid']
Safety,"@vgvassilev Let me clarify the disconnect. The title says ""Add **a** module for experimental/string_view""; The commit says:. That should fix a recent nightly failure with gcc11 avoiding to require; module ""bits/ranges_base.h"" in C++20 context. The code says:; ```; module ""experimental/string_view"" {; export *; header ""experimental/algorithm""; }; ```; ; The commit content as-is seems completely unrelated to the commit log as far as I could tell (without doing research on the relationship between `range_base`, `string_view` and `algorithm`.; ; So I pondered whether the fix was the right fix for a problem I did not know anything about ... ; ; The right thing to do would have probably be have been to request a complete explanation of what the original problem was, what was the mechanism leading to the error and why this solution was the best solution. This was obviously much more than this seemingly simple fix required. So instead I thought to ask for a very low cost, straight forward solution: simply copy/pasting the error with no additional effort to explain in detail. > Can you suggest a commit message which adds enough information which makes me happy as well?. That requires to paraphrase the error and add a few more details. ```; That should fix a recent nightly failure with gcc11. The failure presented during dictionary generation in a C++14 and C++17 build and incorrectly complained about needing the 'cplusplus20' feature for the 'std.bits/ranges_base.h' module. The issue was triggered by an inclusion of `<bits/ranges_base.h>` from `string_view`. This issue exists on gcc11 and gcc12 (and I guess any gcc that made changes to libstdc++ and the experimental/string_view header file). . It seems the issue is solved by exporting `algorithm` as part of the `string_view` module.; ```. Actually, I still don't know why adding `algorithm` fixes a problem with `range_base.h`, so I can't add that to the commit ... maybe it is something like ""... by avoiding to use the module m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1430326540:177,avoid,avoiding,177,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1430326540,1,['avoid'],['avoiding']
Safety,"As I said we do not spend time on the users guide now. The .md files are still there though. So if someone is willing to do a valid PR on them we will considered it and merge it when finalised. So please convert this into is PR. And, once again, the User's guide is now frozen and not updated. It has never been update by the way. After the first writing developers did not put any new stuff in it. We found out that developers put the doc in the code. That why we choose doxygen which allow to produce the reference guide. Having a separated User's Guide often implies to duplicate the information with the risk of not being in sync. But we still need an entry point for people starting with ROOT. That is why we made the ""Manual"" which is still under development. The Manual has a much higher view that the reference Guide and helps to navigate into it. But it does not duplicate the information !! that's the key ! ... also, for beginners, we have the Primer also referenced from the web site.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785870186:608,risk,risk,608,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785870186,1,['risk'],['risk']
Safety,"As a completely anecdotical evidence, I have been running on the `root-ubuntu-2004-1` machine the distributed RDF test which used to fail, which included calls to DefinePerSample. After applying this patch, currently ~1800 iterations of the test passed without failures. ```; test_all.py::TestPropagateExceptions::test_runtime_error_is_propagated <- check_backend.py PASSED; test_all.py::TestDefinePerSample::test_definepersample_simple <- check_definepersample.py PASSED; test_all.py::TestDefinePerSample::test_definepersample_withinitialization <- check_definepersample.py PASSED; =============================== warnings summary ===============================; test_all.py::TestPropagateExceptions::test_runtime_error_is_propagated; /home/sftnight/vpadulan/rootproject/rootbuild/master-like-jenkins/lib/ROOT/_facade.py:154: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations; return _orig_ihook(name, *args, **kwds). test_all.py::TestPropagateExceptions::test_runtime_error_is_propagated; /usr/local/lib/python3.8/dist-packages/dask_jobqueue/core.py:20: FutureWarning: tmpfile is deprecated and will be removed in a future release. Please use dask.utils.tmpfile instead.; from distributed.utils import tmpfile. -- Docs: https://docs.pytest.org/en/latest/warnings.html; ==================== 3 passed, 2 warnings in 32.72 seconds =====================. Running test 1864; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13787#issuecomment-1744852013:998,safe,safe,998,https://root.cern,https://github.com/root-project/root/pull/13787#issuecomment-1744852013,1,['safe'],['safe']
Safety,"As a side note, the feature of ""snapshot merging""/""peeping at results in the making"" is something we had already in the first implementation of TThreadedObject (see https://root.cern/doc/master/mt201__parallelHistoFill_8C.html). This was a rudimental building block, which needed the user to asynchronously invoke a method. I see this functionality as something quite interesting. In general, ""callbacks""/""hooks"" of different sorts are a fundamental piece of data processing frameworks of which TDF is de facto an example. I welcome this feature warmly, also when thinking about the direction we have taken with the datasource, which consists in giving users the possibility to customise the usage of TDF according to their needs - we provide a rocksolid platform to solve their problems in an optimised way. A Crazy (?) example: right now we would be able to:; - Write a datasource that reads measurements coming from an oscilloscope/simple detector; - TDF loops and processes these measurements; - Histograms are produced, among other kind of data, and shown while refreshing in real time; - A file with the data acquired and manipulated is produced",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331348710:942,detect,detector,942,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331348710,1,['detect'],['detector']
Safety,"Cool, thanks! I don't have a strong opinion on it either, but if it works this should be the simplest solution to avoid replacing `find_package` and we can close #8633.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16274#issuecomment-2298776505:114,avoid,avoid,114,https://root.cern,https://github.com/root-project/root/pull/16274#issuecomment-2298776505,1,['avoid'],['avoid']
Safety,"Dear @couet thank you very much. Is this something that could be implemented soon in ROOT. If it's a simple change to add the copy CTOR to the API it would avoid us in CMSSW to have to create a custom-made wrapper for TH2Poly.; Many thanks in advance, Pedro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13075#issuecomment-1891586098:156,avoid,avoid,156,https://root.cern,https://github.com/root-project/root/issues/13075#issuecomment-1891586098,1,['avoid'],['avoid']
Safety,"DrawClone also create a new object object see line 225 [here](https://root.cern/doc/master/TObject_8cxx_source.html#l00219) . The problem with DrawClone is that it will go in the SelectedPad, not in the Pad define by cd()... They may coincide sometime but not always. So, I think it is better to make it clear a Clone is needed to avoir deletion. Then this object is drawn ... but the primary thing is to avoid deletion.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5680#issuecomment-633535272:405,avoid,avoid,405,https://root.cern,https://github.com/root-project/root/pull/5680#issuecomment-633535272,1,['avoid'],['avoid']
Safety,"Fair enough. The LLVM 16 is revealing a part of the problem we had not solved yet :) [Note the simplified example is different from the real use case in that there is no expectation of recovery in that case while inside Core/Meta there is; i.e. once the problem is fixed, the command line reproducer will (and should) still fail ]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13815#issuecomment-1757758714:185,recover,recovery,185,https://root.cern,https://github.com/root-project/root/issues/13815#issuecomment-1757758714,1,['recover'],['recovery']
Safety,"Final note: In the commits left on the branch there was a ""merge"" commit, we want to avoid them. When updating your branch with the content of the master branch, please use 'git rebase' rather than `git merge`. Also we tend to prefer to simplify the history by keeping only the effective commits. [For example, in this case, you could (have done)/do `git rebase -i` to remove the commit that was reverse and its reversal :)]. For this PR, I effectively handled these changes by doing a ""merge and squash"" but this works out only for PR that have one effective commit (the case here).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8425#issuecomment-865184527:85,avoid,avoid,85,https://root.cern,https://github.com/root-project/root/pull/8425#issuecomment-865184527,1,['avoid'],['avoid']
Safety,"Fixed the Travis build, moved build script, and added the cmake build-and-test test to the tests (Turns out, CMake's own source has lots of examples of that since that's what a test of CMake itself is generally doing). Fixed a bug in the calculation of the standalone directory, and simplified the CMake code a bit. `make package_source` now produces an error if in used in the wrong configuration. I've tried to avoid making any changes to the parts of Travis that are not affected, but there's a bug in the yaml: making a node anchor is also a normal definition; so if no packages are added, they get the default (which includes a non-existent timeout package). I'll see if I can make a separate PR with some improvements for Travis clarity/speed not related to Minuit2. This PR should be ready for review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-375310840:413,avoid,avoid,413,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-375310840,2,"['avoid', 'timeout']","['avoid', 'timeout']"
Safety,"Here is the stack trace of the error. Now I just simply use type casting gSystem to TUnixSystem to get rid of defining DispatchTimers() in TSystem. . ```; [zhan0915@hcc-zhan root]$ root -l. A fatal system signal has occurred: segmentation violation error; Thread 1 (Thread 0x7f8b05aa0920 (LWP 10908)):; #0 0x0000003fa220e82d in read () from /lib64/libpthread.so.0; #1 0x00007f8b05fa3c64 in SignalSafeRead (fd=3, inbuf=inbuf; entry=0x7ffd70966680 ""\001"", timeout=timeout; entry=-1, len=1) at /home/bockelman/zhan0915/root/core/unix/src/TUnixSigHandling.cxx:195; #2 0x00007f8b05fa4435 in TUnixSigHandling::StackTraceTriggerThread () at /home/bockelman/zhan0915/root/core/unix/src/TUnixSigHandling.cxx:816; #3 0x00007f8b05fa450c in TUnixSigHandling::DispatchSignals (this=0x1534f70, sig=kSigSegmentationViolation) at /home/bockelman/zhan0915/root/core/unix/src/TUnixSigHandling.cxx:552; #4 <signal handler called>; #5 0x0000003fa1e811a1 in __strlen_sse2 () from /lib64/libc.so.6; #6 0x00007f8b0255f728 in length (__s=0x0) at /opt/rh/devtoolset-2/root/usr/include/c++/4.8.2/bits/char_traits.h:259; #7 assign (__s=0x0, this=0x7ffd70966c40) at /opt/rh/devtoolset-2/root/usr/include/c++/4.8.2/bits/basic_string.h:1131; #8 operator= (__s=0x0, this=0x7ffd70966c40) at /opt/rh/devtoolset-2/root/usr/include/c++/4.8.2/bits/basic_string.h:555; #9 TCling::TCling (this=0x1594620, name=<optimized out>, title=<optimized out>) at /home/bockelman/zhan0915/root/core/meta/src/TCling.cxx:1068; #10 0x00007f8b025602ae in CreateInterpreter (interpLibHandle=<optimized out>) at /home/bockelman/zhan0915/root/core/meta/src/TCling.cxx:578; #11 0x00007f8b05e2daa8 in TROOT::InitInterpreter (this=0x7f8b062a5520 <ROOT::Internal::GetROOT1()::alloc>) at /home/bockelman/zhan0915/root/core/base/src/TROOT.cxx:1821; #12 0x00007f8b05e2de26 in ROOT::Internal::GetROOT2 () at /home/bockelman/zhan0915/root/core/base/src/TROOT.cxx:363; #13 0x00007f8b05f03845 in TApplication::TApplication (this=0x1582e40, appClassName=0x401350 ""Rint""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/134#issuecomment-195488572:454,timeout,timeout,454,https://root.cern,https://github.com/root-project/root/pull/134#issuecomment-195488572,2,['timeout'],['timeout']
Safety,"Hi @VanyaBelyaev, thanks for posting about this!. As explained in [this PR](https://github.com/root-project/root/pull/11909/files) and later also dicussed in [this forum post](https://root-forum.cern.ch/t/retreiving-the-calculation-strategy-of-a-roonll/55715/2), saving test statistics objects to ROOT files like `RooNLLVar` is now prohibited since ROOT 6.28. It only technically seemed to work without error, but in fact the read-back RooNLLVars are corrupted and give wrong results when you read them back even for simple Gaussian cases, as I showed in the description of the linked PR. This and other reasons lead us to the decision to disallow the IO of `RooNLLVar` and other test statistics classes. From your warnings and error messages, it seems like you're trying to do IO of the RooNLLVar. Is there a way you can avoid this in your workflow? As I said it's not allowed anymore and in older ROOT versions it was not reliable. What people usually do is to save the pdf and the datasets in a RooWorkspace, and maybe a `ModelConfig` to simplify the NLL creation when reading back the data and pdf. Is that not an option for your?. Certainly I was not expecting that the removal of this accidental and buggy IO feature would cause some friction with some users, so I'm happy to help you finding an alternative and better solution!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13280#issuecomment-1644053557:822,avoid,avoid,822,https://root.cern,https://github.com/root-project/root/issues/13280#issuecomment-1644053557,1,['avoid'],['avoid']
Safety,"Hi @acampove, thanks for reporting this issue!. I have opened a to avoid the overly-verbose printout in the unbinned case:; https://github.com/root-project/root/pull/14309. However, I would refrain from implementing a progress bar, because this makes the output more difficult to digest when reading log files from e.g. grid jobs. So while I agree it would be nice for interactive use, it would do more harm that good in batch jobs. One could maybe hack something that detects the context in which RooFit is used, but these hacks are usually fragile and I would prefer not to do it. I'll close this issue after merging the PR with the log in the unbinned case. If you *really* want this progress bar, feel free to open a new issue about this, but I'm afraid I can't justify giving that one a high priority. Thanks for your understanding!; Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9489#issuecomment-1881439092:67,avoid,avoid,67,https://root.cern,https://github.com/root-project/root/issues/9489#issuecomment-1881439092,2,"['avoid', 'detect']","['avoid', 'detects']"
Safety,"Hi @guitargeek, yeah that does sound like a good idea. The reason why I kept the GetName() just as the class name for now is that I wanted to avoid building the full name as a char* to not have to deal with messy c-string concatenation in a very simple function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10043#issuecomment-1058334840:142,avoid,avoid,142,https://root.cern,https://github.com/root-project/root/pull/10043#issuecomment-1058334840,1,['avoid'],['avoid']
Safety,"Hi @pcanal! I could not produce a simpler reproducer, but I noticed that we have also problematic workspaces that are about 6 times smaller (from the same repo linked above):; ```; auto f = TFile::Open(""toyws/WS-HGam-STXS_xs_toy.root"");; auto w = (RooWorkspace*)f->Get(""combWS"");; ```. With this one, I can reproduce the problem without messing around with the stack size limit. Also, your PR #10230 actually affects also this issue, but it does not resolve it. There is now a different crash with a different stack trace, that looks like there is interference of your changes with some `RooWorkspace::Streamer` hackery:; ```; #0 0x000015555276f34c in __pthread_kill_implementation () from /usr/lib/libc.so.6; #1 0x00001555527224b8 in raise () from /usr/lib/libc.so.6; #2 0x000015555270c534 in abort () from /usr/lib/libc.so.6; #3 0x000015555299e7ee in __gnu_cxx::__verbose_terminate_handler () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #4 0x00001555529aac4c in __cxxabiv1::__terminate (handler=<optimized out>); at /usr/src/debug/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #5 0x00001555529aacb9 in std::terminate () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #6 0x00001555529aba77 in __cxxabiv1::__cxa_deleted_virtual () at /usr/src/debug/gcc/libstdc++-v3/libsupc++/pure.cc:57; #7 0x0000155553413509 in RooWorkspace::Streamer (this=0x55555698ea60, R__b=...); at /home/rembserj/spaces/master/root/src/root/roofit/roofitcore/src/RooWorkspace.cxx:2591; #8 0x0000155554e2df7e in TKey::ReadObj (this=0x555556757fc0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TKey.cxx:834; #9 0x0000155554df25e0 in TDirectoryFile::Get (this=0x5555556e2510, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TDirectoryFile.cxx:975; #10 0x0000555555555235 in repro () at repro.C:25; #11 0x00005555555551d9 in main () at /tmp/root-compile/repro/main.cpp:4; ```. Fortunately, the stack trace is shorter now! Does this tell you anyth",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1087909663:794,abort,abort,794,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1087909663,1,['abort'],['abort']
Safety,"Hi @ynikitenko, thanks for the request! There are several reasons for not supporting PyPy. PyROOT, which is building on top of cppyy, is very deeply connected to the CPython implementation of CPyCppyy. Just like the CPython version of cppyy, PyROOT consists of a Python module and a compiled CPython extension (`libROOTPythonization`). And you can't use CPython extensions in PyPy. So to support PyPy, we would have to rewrite [all this code](https://github.com/root-project/root/tree/master/bindings/pyroot/pythonizations/src), and work closely with the cppyy team to make sure it's PyPy implementation also provides the interfaces that PyROOT expects. That would be a *huge* amount of work with no usecase to justify it. And there are so many alternative of fast analysis frameworks that people are trying out right now: RDataFrame, NumPy, numba, awkward arrays, etc. And let's not forget that pypy has it's limitations! It only supports a restricted subset of Python, and it would require large efforts to port PyROOT to this. One final point: the future of PyPy development is not very clear. Right now, they don't support Python 3.11 yet, for example. Builds are only available for [Python 3.9 and Python 3.10](https://www.pypy.org/download_advanced.html). So investing in PyPy compatibility is also risky because of that. Imagine we would spend half a year trying to support it, and then PyPy would not be maintained anymore :(. I'll therefore close this issue as ""not planned"". tldr; the HEP community is gravitation towards other C++ native of jit-based Python packages to speed up analysis, and at this point investing in pypy is not worth it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8110#issuecomment-2148504771:1305,risk,risky,1305,https://root.cern,https://github.com/root-project/root/issues/8110#issuecomment-2148504771,1,['risk'],['risky']
Safety,"Hi Luca,. nice job. Some comments about aspects that need improving before merging, namely all of the following items with equal priority:; 1) Remove all variable names in Italian language; 2) The help of the individual switches for the command line is there to be helpful. Please take some time to write proper text there, for example avoiding contentless tautologies like ""inputFile is the input file""; 3) The script is missing a description to be prompted when the user requires help with the -h switch. This description does not need to be a long text but a short synopsis of the utility. Adding example invocations would greatly increase its usefulness.; 4) You do not need to parse the header. I saw you now have a dictionary for the class. The autoloating and autoparsing will kick in and provide the ROOT typesystem with the necessary info. The direct usage of RunSumpleAnalysis should be discarded in favour of an explicit instantiation of a TSimpleAnalysis object (ROOT cannot autoload based on free function names); 5) ""Invalid argument set"" shall be printed on stderr; 6) The script must be compatible python2 and python3, e.g. for what concerns the print function; 7) The deciding factor for invoking the constructor with only the configuration file or the separate arguments is the presence of the ""inputfile"". The rest of the checks are not useful. One should rather make very clear in the documentation of the switches that the priority is given to the config file and perhaps print in case both a config and other parameters are present a warning about the non-config parameters being ignored. Cheers,; Danilo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/236#issuecomment-245232939:336,avoid,avoiding,336,https://root.cern,https://github.com/root-project/root/pull/236#issuecomment-245232939,1,['avoid'],['avoiding']
Safety,"Hi Patrick, thanks for the explanation, things make more sense for me now! Interesting that you also experimented with making the full RooAbsMinimizer templated. I agree that making the RooAbsMinimizer a templated class is not the best solution, but I still think we can even avoid the templated constructor, making the code more clear and reducing compile time/binary size. You already have this nice `FcnMode` enum class which I think is great because enum class is typesafe while enum is not. Taking this enum, you could have a RooMinimizer constructor with the signature:; ```; RooMinimizer(RooAbsReal &function, FcnMode fcnMode);; ```; Then depending on `fcnMode`, you can create the correct function instance. You would not even have to check for the `logic_error`, because with the enum class is is ensured that the value is either `classic` or `gradient`. You would just need a little helper struct to make the `RooMinimizer::create()` function work, something to translate from the function class to the FcnMode:. ```C++; class RooMinimizer { ; ; ... ; private: ; ; template <typename MinimizerFcn ; struct GetFcnMode { ; static const FcnMode value = FcnMode::classic; ; }; ; ; ... ; ; } ; ; ; template<> ; struct RooMinimizer::GetFcnMode<RooGradMinimizerFcn> { ; static const FcnMode value = FcnMode::gradient; ; }; ; ; ; // static function ; template <typename MinimizerFcn> ; std::unique_ptr<RooMinimizer> RooMinimizer::create(RooAbsReal &function) { ; return std::make_unique<RooMinimizer>(function, GetFcnMode<MinimizerFcn>::value); ; } ; ```. Would this approach also work with your upcoming developments?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8596#issuecomment-879770741:276,avoid,avoid,276,https://root.cern,https://github.com/root-project/root/pull/8596#issuecomment-879770741,1,['avoid'],['avoid']
Safety,"Hi! I'm not sure if this is a good idea. The ROOT Fitter is not meant to be inherited from in C++, right? It has no virtual functions, and nowhere do we inherit from it. I'm worried that encouraging users to inherit from the Fitter like this will cause further complications, so maybe it's good that it doesn't work? What is the benefit of this?. If you think this is really necessary, maybe better add a comment to the destructor explaining why it needs to be `virtual` for PyROOT, because when reading the C++ code it's not clear why it should be there and there is the risk that future developers interpret it as an accidentally added keyword and remove it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12397#issuecomment-1448506389:572,risk,risk,572,https://root.cern,https://github.com/root-project/root/pull/12397#issuecomment-1448506389,1,['risk'],['risk']
Safety,"Hi, thanks for reporting this!. It is indeed a bug that you can't read the 6.26 workspace in 6.28. The other way around is expected, with RooFit you can't read back a RooWorkspace with any ROOT version that is older that the version it was created with. When I run the reproducer in the debugger, I get this stack trace:; ```; Program received signal SIGABRT, Aborted.; 0x00007ffff4a9f26c in ?? () from /usr/lib/libc.so.6; (gdb) bt; #0 0x00007ffff4a9f26c in ?? () from /usr/lib/libc.so.6; #1 0x00007ffff4a4fa08 in raise () from /usr/lib/libc.so.6; #2 0x00007ffff4a38538 in abort () from /usr/lib/libc.so.6; #3 0x00007ffff4c9ca6f in __gnu_cxx::__verbose_terminate_handler () at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/vterminate.cc:95; #4 0x00007ffff4cb011c in __cxxabiv1::__terminate (handler=<optimized out>) at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:48; #5 0x00007ffff4cb0189 in std::terminate () at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/eh_terminate.cc:58; #6 0x00007ffff4cb03ed in __cxxabiv1::__cxa_throw (obj=<optimized out>, tinfo=0x7ffff4e6c0d0 <typeinfo for std::length_error>,; dest=0x7ffff4cc8580 <std::length_error::~length_error()>) at /usr/src/debug/gcc/gcc/libstdc++-v3/libsupc++/eh_throw.cc:98; #7 0x00007ffff4ca01ca in std::__throw_length_error (__s=__s@entry=0x7ffff79711aa ""basic_string::_M_replace_aux""); at /usr/src/debug/gcc/gcc/libstdc++-v3/src/c++11/functexcept.cc:82; #8 0x00007ffff76f2ae8 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check_length (__s=<optimized out>,; __n2=<optimized out>, __n1=<optimized out>, this=<optimized out>) at /usr/include/c++/13.1.1/bits/basic_string.h:403; #9 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux (__c=<optimized out>, __n2=<optimized out>,; __n1=<optimized out>, __pos1=<optimized out>, this=<optimized out>) at /usr/include/c++/13.1.1/bits/basic_string.tcc:450; #10 std::__cxx11::basic_string<char, std::c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:573,abort,abort,573,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,1,['abort'],['abort']
Safety,"Hi, thanks for the question!. The standard way of do this in ROOT is to use [TParameter](https://root.cern.ch/doc/v612/classTParameter.html) or an `std::` container, as also discussed here:; https://root-forum.cern.ch/t/writing-simple-variable-in-root-files/11094/5. For example:; ```C++; void write() {. TParameter<int> x1{""x1"", 5};; std::vector<int> x2{4};. std::unique_ptr<TFile> file{TFile::Open(""myfile.root"", ""RECREATE"")};. file->WriteObject(&x1, ""x1"");; file->WriteObject(&x2, ""x2"");; }; ```; Therefore, having this functionality is redundant as therefore it was removed. If you still need to use `RooInt` in your framework for backwards compatibility, please just copy-paste its source code into your framework. It's very simple:; * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/inc/RooInt.h; * https://github.com/root-project/root/blob/v6-28-00-patches/roofit/roofitcore/src/RooInt.cxx; You can even remove the sorting interface if you don't need it. Are these possible ways forward? I would be very reluctant to bring this class back, because RooFit is for statistical analysis. Using its classes to store metadata in a ROOT file is really not the idea.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16380#issuecomment-2335109569:540,redund,redundant,540,https://root.cern,https://github.com/root-project/root/issues/16380#issuecomment-2335109569,1,['redund'],['redundant']
Safety,"Hi,. On Thursday 2015-09-03 10:56, xantares wrote:. > Forgive me but your objections do not seem rock-solid:; > - '""distutils.sysconfig"" is far from robust as claimed' : afaik it; > works very well from 2.6-2.7, 3.1,3.2, 3.3 to 3.4. sure, on Linux. Did you try all main platforms? (And do add at least p2.5,; as that for sure is still in use.). > - ""package as a whole gets split, which risks that one part gets updated; > whereas another doesn't"": how would that be possible for users ? a; > decent package manager should handle that well. A package manager can install wherever it wants and can make its own; adjustment (simply copy over the two files, or put symlinks); this will; affect users building from source. I don't worry about package managers,; only about the latter users. As to 'how': the common case mixing; installations (e.g. from packagers and building from source), versions; (different pythons), system upgrades (that wipe out site-packages), or; simply a user doing 'rm -rf' for only half the installation. Users are; very, very inventive in creating trouble. :P None of that if all of ROOT; is kept in a single directory. So the only upside there seems to be is removing of this teeny-weeny; inconvenience of having to setup PYTHONPATH if you install in /usr/local.; But A) most from-source builders don't do that, they use bin/thisroot.sh,; which sets up PYTHONPATH; and B) installing in /usr/local is not; recommended to begin with, b/c of the same problem with remnants. Debugging a setup problem is very time consuming and frustrating: the; error messages are spurious and only occur on the user's machine to which; I have no access. In sum, I see no upside to speak of, but do see enormous downsides. And; if you really believe otherwise: sign that blood contract. Best regards,. ## Wim. WLavrijsen@lbl.gov -- +1 (510) 486 6411 -- www.lavrijsen.net",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/73#issuecomment-137538771:387,risk,risks,387,https://root.cern,https://github.com/root-project/root/pull/73#issuecomment-137538771,1,['risk'],['risks']
Safety,"Hi,; thank you very much, that you spend time on this!. I do not understand some things:; * In the Doc the packages that do need internet access are usually named - this does not seem to be correct; * Furthermore, all packages that need internet access should be turned off in installation by default - they are not; * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?); * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks; Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-864610580:465,detect,detect,465,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-864610580,2,['detect'],['detect']
Safety,"Hmmh, but then I'd need to stream path information with every REveText object, now only the font name is streamed. It is indeed a reasonable thing to check if the font files exist before object's json is sent over to the client --- but creating a font during the streaming traversal would be pushing it a bit. Is it possible to register custom prefixes and callbacks from REveManager (via RWebWindow) so they can be handled when requests come in? Like: http://server/sdf-fonts/. I went through the code a bit (but clearly do not have the full picture) ... one way would be to add THttpServer::fActiveLocations, where instead of replacement string one provides a lambda [](TString& prefix, TString& reminder, THttpRequest& req, THttpServer &srv) so one can then do appropriate lookup in the callback, potentially generating the font, and then calling srv->SendFile() (or sending back the default font, if the desired one can not be found/generated). I think this functionality could be useful for other cases in REve, where semi-static data needs to be provided. The font-generation code in REveText invokes TGL generator through the interpreter now, via gROOT->ProcessLine(), to avoid dependency of REve on RGL. Is this OK to do from a request handler thread or should cross-thread request to the main thread be made (and request told to try again in N seconds)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2176441216:1179,avoid,avoid,1179,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2176441216,1,['avoid'],['avoid']
Safety,"Humm .. the files are ""Closed"" but not deleted .. the comment relevant comment from `TROOT.cxx:1086` is:; ```; // Now were done, clear the list but do not delete the objects as; // they have been moved to the list of closed objects and must be; // deleted from there in order to avoid a double delete from a; // use objects (on the interpreter stack).; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767#issuecomment-890403157:279,avoid,avoid,279,https://root.cern,https://github.com/root-project/root/issues/8767#issuecomment-890403157,1,['avoid'],['avoid']
Safety,"I also have a general comment, . https://github.com/root-project/root/blob/5d2c835d1c707dbbb9d7f1a82425c0567d5527dd/tree/ntuple/v7/doc/specifications.md?plain=1#L341-L342. it's not yet clear what are the expectation around these strings, my hunch is at write-time they come from reflection, and at read-time ROOT's internal compiler will be used to restore the field to a known (maybe user-defined) C++ type. However, in principle all the logical layout of data and types are encoded without these strings, so my questions are:. 1. for non-ROOT reader, can these be safely ignored (e.g. instead of getting back a named data struct, you get an anonymous struct by ignoring the type name); 2. for non-ROOT writer, if these are left empty, can ROOT figure out based on primitive types and compositions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13779#issuecomment-1806758875:566,safe,safely,566,https://root.cern,https://github.com/root-project/root/pull/13779#issuecomment-1806758875,1,['safe'],['safely']
Safety,I know but it was just to avoid more noise from a simple mistake :-),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1239#issuecomment-341526163:26,avoid,avoid,26,https://root.cern,https://github.com/root-project/root/pull/1239#issuecomment-341526163,1,['avoid'],['avoid']
Safety,"I made minimal change concerning thread safety.; As I learned in workshop, one should use ROOT::EnableThreadSafety() to enable proper locking for I/O.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2603#issuecomment-422001206:40,safe,safety,40,https://root.cern,https://github.com/root-project/root/pull/2603#issuecomment-422001206,1,['safe'],['safety']
Safety,"I see https://github.com/root-project/root/pull/11311. Is missing the R__HAS_STD_SPAN, I would say to avoid more improper reporting, it should be made more clear when those header are imported that this is the intended behaviour. I would say you should add a ; ```; #if __cplusplus >= 202002L; ```. inside those code block if they are enabled due to this mismatched compilation version and report the error",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13042#issuecomment-1595270233:102,avoid,avoid,102,https://root.cern,https://github.com/root-project/root/issues/13042#issuecomment-1595270233,1,['avoid'],['avoid']
Safety,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert).; * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5034#issuecomment-589272246:113,abort,abort,113,https://root.cern,https://github.com/root-project/root/pull/5034#issuecomment-589272246,4,"['abort', 'avoid', 'recover']","['abort', 'avoid', 'recover']"
Safety,"I think we can get away with something simpler where when IMT is on (or more precisely when TBB has been detected by cmake), we turn on a flag (`#define` in RConfigure.h) that change the way core/thread is build (and yes, in this optional mode, libThread would link against libTBB.so (or however it is spelt)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-780926697:105,detect,detected,105,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-780926697,1,['detect'],['detected']
Safety,I wonder if a simple compare and swap could be used in TSlotStack to avoid the need for a mutex.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3189#issuecomment-448442077:69,avoid,avoid,69,https://root.cern,https://github.com/root-project/root/pull/3189#issuecomment-448442077,1,['avoid'],['avoid']
Safety,"If we enable ORCV2 asynchronous compilation, it is clear we have to enable threading support in LLVM. So the question is whether we do want to enable ORCV2 asynchronous compilation or not, some things to consider:; * cost to all or most (?) of the interpreter calls (which then would likely takes 2 locks instead of one); * risk of dead locks; now that the interpreter takes 2 locks, if there is any way that code that takes the LLVM lock calls code directly or indirectly (via user function or even dlopen) take the ROOT locks then they will be dead locks.; * risk of over-subscribing the CPU (i.e. see the many back and forth in the PPP between the way we setup resource sharing between the experiment framework and the implicit multi-threading). ; * size of the gain; given than most (but indeed not all) compilation are very small, is it worth the costs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11699#issuecomment-1312791296:324,risk,risk,324,https://root.cern,https://github.com/root-project/root/issues/11699#issuecomment-1312791296,2,['risk'],['risk']
Safety,"If you try fitting the obtained slice (slice 21), you will see that in both Minuit and Minuit2 the fit did not work. ; Just run this simple code: ; ```; auto f = TFile::Open(""histo.root"", ""READ"");; auto hist = f->Get<TH2>(""dxyres_vs_eta"");. auto h20 = hist->ProjectionY(""h20"",20,20);; auto h21 = hist->ProjectionY(""h21"",21,21);; auto c1 = new TCanvas();; c1->Divide(1,2);; c1->cd(1);; h20->Fit(""gaus"");; c1->cd(2);; // second fit fails ; h21->Fit(""gaus"");; ```. If you run only the second fit, it works because some default steps sizes are used at the beginning. ; You will get better slice fits if using option `L` when fitting the slices:; ```; hist->FitSlicesY(nullptr, 10, 21, 0, ""LR"");; ```; and defining a restricted range for the fitted functions to avoid fitting the outlier events. Close the issue since it is not a bug.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13852#issuecomment-1777016344:757,avoid,avoid,757,https://root.cern,https://github.com/root-project/root/issues/13852#issuecomment-1777016344,1,['avoid'],['avoid']
Safety,"In all actual ABIs, pointers to non-member function are simply addresses, a raw pointer. The return type doesn't matter for the storage. For type-safety, correcting the function's return type to be `void* &` would be indeed an improvement. The cost and complexity of going through lambdas seems fairly high to me. Let's see what @pcanal thinks about this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3208#issuecomment-449357187:146,safe,safety,146,https://root.cern,https://github.com/root-project/root/pull/3208#issuecomment-449357187,1,['safe'],['safety']
Safety,"In reply to: https://github.com/root-project/root/pull/8703#issuecomment-920044106. > You mean keeping the average of the last $x$ MB written per column? . Not quite, I meant simply an overall average, i.e. simply keeping `total_number_of_bytes` and `total_number_of_compressed_bytes` for each column and then average compression ration is a simple division. But ... actually ... closer to the original proposal is simply the ""total_number_of_bytes_in_all_flushed_clusters"" and ""corresponding_compressed_size"" (i.e. a per RNtuple running total). However this makes me thing of another (potential more noticeable) instability. If there is 2 columns; column A with an constant/average compression ration of 100 and column B with a constant/average compression ration of 1 (or 1.1 :) ) but both columns are collections. If for most of the entries (for more proposal) or only the last cluster (for the PR's proposal), column A has a lot of data and column B has very little data, then the compression ration use for prediction will be 100 (ish). If suddenly the cardinality flip/flop and column A has very little data but column B has a lot of data, then the compression ration of that cluster will be 1 but it would still contains `100 * target_cluster_size_in_compressed_bytes`, namely in this case 100 times larger (on disk) than any other cluster. Obviously this is an extreme example but it points to the benefit of using `per column` compression ratio rather than overall compression ratio (whether it is whole-ntuple or last (few) clusters). The cost for implementation seems to be that after each `Fill`, each column would have to increment a (global-per-RNtuple) counter with `data_written / estimated_compression_ratio` which:; * for collection column should be a small over-head; * for single value column should be a large over-head. however conversely, an accurate estimate is ""only important"" for collection column, so maybe an hybrid solution is a workable compromise?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8703#issuecomment-920229853:1012,predict,prediction,1012,https://root.cern,https://github.com/root-project/root/pull/8703#issuecomment-920229853,1,['predict'],['prediction']
Safety,"My 2 cents:. 1. It is extremly weird/ a bug that the webgui needs to depend on `TObject`.; 2. `RBrowserDataCleanup` derives from `TObject`, so it *must* have a `ClassDef` as per https://root.cern/manual/io_custom_classes/#the-classdef-macro . I am not sure about what using `ClassDefInline` as suggested by @pcanal would change; 2a. Can `RBrowserDataCleanup` just avoid inheriting from `TObject` completely? ; 3. `RBrowserData` has a dictionary and allows I/O, as it is defined in `LinkDef.h`, so it is only natural that its data members need a dictionary as well. As @hahnjo commented, the particular error coming from a `std::tuple` is due to the fact that the class uses ` std::unique_ptr<RBrowserDataCleanup>`. Bottom line, to me everything looks very clear and I don't understand the comments regarding looking for a deeper reason behind the error. The only thing I don't understand is the dependency from `TObject` itself, but that's beyond the scope of this PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1637626198:364,avoid,avoid,364,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1637626198,1,['avoid'],['avoid']
Safety,"Oh I was too fast: So the `BranchTypes` part of the template was simply not used? In case I undestand this correctly, is it possible to detect something like this at compile time?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5208#issuecomment-603090920:136,detect,detect,136,https://root.cern,https://github.com/root-project/root/pull/5208#issuecomment-603090920,1,['detect'],['detect']
Safety,"Ok, I'll leave this to @dpiparo then. I think the changes are simple enough and can be safely merged, though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1046#issuecomment-331808979:87,safe,safely,87,https://root.cern,https://github.com/root-project/root/pull/1046#issuecomment-331808979,1,['safe'],['safely']
Safety,"So I finally managed to get back to this and try a few things and as a result in my tests I managed to go from 82 MB of overhead to 62 MB. See https://github.com/root-project/root/pull/13641 for the actual code. While there is still a few things to cleanup, I think what I have is fairly general and quite self contained change, so I would appreciate feedback and if people like it, instructions on how to proceed to make sure this ends up upstream. The solution is based on a newly introduced `PagedVector<T>` which allows registering callbacks which get invoked whenever the associated range is accessed the first time. At such point, the range is actually allocated and each element of the range is passed to the callback. Initially I developed a mechanism to be general enough to do complex initialisations of the elements, however I later realised this is not actually needed. In order to optimise the issue with the large vectors `TypesLoaded` and `DeclsLoaded` one only needs to have something which does the default construction of their elements for ranges which are small enough to avoid to large upfront allocations. The code which is currently there in root / clang is already smart enough to lazily initialise only the elements which are actually needed, so the whole issue is to find a good tradeoff between number of ranges and sparse enough ones. A few caveats:. - `PagedVector` is a bad name, I agree. Suggestions are welcome.; - At the moment the implementation allows generic callbacks for ranges, however as I said we only need default initialisation. Removing such flexibility should buy another 1 MB from my test.; - In case `DeclID*` and `QualType` can default to all 0, one could probably achieve the same result in a more elegant way using calloc / realloc.; - There are probably other vectors which can be optimised in the same way, in particular IdentifiersLoaded as already mentioned by @vgvassilev. Comments?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1715921216:1092,avoid,avoid,1092,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1715921216,1,['avoid'],['avoid']
Safety,"So this problem has been known for 5 years :( https://github.com/root-project/root/pull/4320 but we manage to indeed lose track of it. That PR used the following more concise pattern:; ```; TView() {} // NOLINT: not allowed to use = default because of TObject::kIsOnHeap detection, see ROOT-10300; ```; where both the `NOLINT` is indeed useful to avoid spurious tool recommendation and the wording was clear but should probably be updated (`ROOT-10300` is a ticket number in the JIRA instance which is now read-only). It would be good to add some wording in the `TObject` documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15469#issuecomment-2150303383:271,detect,detection,271,https://root.cern,https://github.com/root-project/root/pull/15469#issuecomment-2150303383,2,"['avoid', 'detect']","['avoid', 'detection']"
Safety,"Sorry too much info, too little bandwidth :sweat_smile: If I understand correctly:. - the `is_equal` redefinition is a real issue but unrelated to RVec 2.0 (thanks @wlav for pointing that out) and now tracked by #7678 ; - you have a patch that works around the cppyy bug with `operator[]`; - iteration is broken because `RVec::begin` returns a raw pointer. In principle `begin` can absolutely return a raw pointer (I _think_ LLVM's SmallVector was designed like that for simplicity, to avoid having to define a custom iterator type). But raw pointers make for fine iterators :smile: Seems like a bug in PyROOT?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-806477941:486,avoid,avoid,486,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-806477941,1,['avoid'],['avoid']
Safety,"TCP_NODELAY, (char*)val, &optlen) == -1) {; | ^~~~~~~; | |; | int*; In file included from /builddir/root-6.24.06/core/unix/src/TUnixSystem.cxx:101:; /usr/include/sys/socket.h:348:50: note: initializing argument 5 of 'int getsockopt(int, int, int, void*, socklen_t*)'; 348 | int getsockopt (int, int, int, void *__restrict, socklen_t *__restrict);; | ^~~~~~~~~~~~~~~~~~~~~; ```; is the next error. The problem stems from the fact, that the condition for using `socklen_t` is (among others) glibc:; ```c; #if (defined(R__AIX) && !defined(_AIX43)) || \; (defined(R__SUNGCC3) && !defined(__arch64__)); # define USE_SIZE_T; #elif defined(R__GLIBC) || defined(R__FBSD) || \; (defined(R__SUNGCC3) && defined(__arch64__)) || \; defined(R__OBSD) || defined(MAC_OS_X_VERSION_10_4) || \; (defined(R__AIX) && defined(_AIX43)) || \; (defined(R__SOLARIS) && defined(_SOCKLEN_T)); # define USE_SOCKLEN_T; #endif; ```; [Here](https://pubs.opengroup.org/onlinepubs/9699919799/xrat/V4_xsh_chap02.html#tag_22_02_10_06) is some context:; > All socklen_t types were originally (in BSD UNIX) of type int. During the development of POSIX.1-2017, it was decided to change all buffer lengths to size_t, which appears at face value to make sense. When dual mode 32/64-bit systems came along, this choice unnecessarily complicated system interfaces because size_t (with long) was a different size under ILP32 and LP64 models. Reverting to int would have happened except that some implementations had already shipped 64-bit-only interfaces. The compromise was a type which could be defined to be any size by the implementation: socklen_t. I am not sure how to approach this, because the standardization of `socklen_t` seems fairly recent, but in the long run, avoiding this whole types dance altogether and simply using explicit `socklen_t` seems to make most sense and will make for a simpler code. I will appreciate any comments, especially regarding any compatibility issues this might cause - else I will add this to the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9253#issuecomment-963600314:7286,avoid,avoiding,7286,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963600314,1,['avoid'],['avoiding']
Safety,Thanks for all the feedback. A more comprehensive solution to avoid spurious lookups triggered by TClass::GetClass will be proposed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13341#issuecomment-1862225290:62,avoid,avoid,62,https://root.cern,https://github.com/root-project/root/pull/13341#issuecomment-1862225290,1,['avoid'],['avoid']
Safety,"Thanks for the comment! I agree that it's not clear how meaningful `weightError` is for RooDataSet, but still the only two classes that derive from RooAbsData are RooDataHist and RooDataSet. Both of them reimplement `weightError` in a non-trivial way. Or are you thinking about some user classes that might inherit from `RooAbsData`? In that case they would not compile because not all purely virtual functions are implemented. But I'd argue that this a good thing, because then the user is made aware that `weightError` should be implemented with a dummy value. Actually, it can even be dangerous that we choose this dummy value ourselves (why zero and not `nan` for example?). I think purely virtual functions are safer than ""dummy functions"", and they are also more self-documenting because we know that every inheriting class will be overloading this function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8137#issuecomment-838795380:716,safe,safer,716,https://root.cern,https://github.com/root-project/root/pull/8137#issuecomment-838795380,1,['safe'],['safer']
Safety,"Thanks for your proposal! We won't need `std::shared_ptr<std::vector<Double_t>>` as datatype; `std::vector<Double_t>` would be enough as this allows cheap move operations. Then again, so does `Double_t *`. Did you consider simply implementing a move operator for `TGraph`?. We must avoid all backward incompatible interface changes. I didn't look in detail but the amount of code changes here suggests that this isn't the case for this draft?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9610#issuecomment-1056797487:282,avoid,avoid,282,https://root.cern,https://github.com/root-project/root/pull/9610#issuecomment-1056797487,1,['avoid'],['avoid']
Safety,That was already discussed many time in the past. The problem is that doing that de pdf and ps files generated will be super huge and people will not realize it if they are running in batch. Some people had disk saturated. Col2 was explicitly created for that. So if we do what we suggest we do exactly what we wanted to avoid. All that is explained in de reference guide,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6822#issuecomment-728877631:321,avoid,avoid,321,https://root.cern,https://github.com/root-project/root/issues/6822#issuecomment-728877631,1,['avoid'],['avoid']
Safety,"The PR speeds up by factors (5x-7x) the simple reproducer of the issue we now have thanks to @sawenzel : ; ```.cpp; // Inspired by Alice production code, extracted from the surrounding context; #include ""TF1.h"". void Foo(int N) {; double am = 90;; double awidth = 1;; for (int i = 0; i < N; ++i) {; static TF1 rbw(""rbw"", ""pow([1],2)*pow([0],2)/(pow(x*x-[0]*[0],2)+pow(x*x*[1]/[0],2))"", -10, 10);; rbw.SetRange(am - 5 * awidth, am + 5 * awidth);; rbw.SetParameter(0, am);; rbw.SetParameter(1, awidth);; am = rbw.GetRandom();; if (am <-100000000) std::cout << am << std::endl; // to avoid compiler optimisations; }; }. int main(); {; Foo(1000);; return 0;; }; ```; The code is faster because the fast code path is taken in the PluginHandler because the right type is used in the GSLIntegratorPlugin (unsigned long, via the size_t typedef), and not just a compatible one (unsigned int).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15579#issuecomment-2161409421:581,avoid,avoid,581,https://root.cern,https://github.com/root-project/root/issues/15579#issuecomment-2161409421,2,['avoid'],['avoid']
Safety,"The code in TTree is known to not be ""exception safe"" (it was written before exceptions were usable in practice), so it should never throw any exception . But also it should not interfere and should not change the return value of GetEntry. If I understood correctly and just catching the exception is changing the return value, could you confirm that it does so ""also"" in C++?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9154#issuecomment-951163261:48,safe,safe,48,https://root.cern,https://github.com/root-project/root/issues/9154#issuecomment-951163261,1,['safe'],['safe']
Safety,"The fix works in my standalone ROOT test. To test the integration with DD4hep and the LHCb detector, the simplest is to add it to the SFT nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11272#issuecomment-1232170822:91,detect,detector,91,https://root.cern,https://github.com/root-project/root/issues/11272#issuecomment-1232170822,1,['detect'],['detector']
Safety,"The problem is that RDF tries to open the file to check that it's valid. The logic for the file opening is at https://github.com/root-project/root/blob/962009b8c2057199c2229c3ef9938ac4d315d10a/tree/dataframe/src/RLoopManager.cxx#L1133 . In particular, because of the presence of the `?` token, the string is parsed as a glob. Now in many cases that would be harmless albeit a tiny overhead (it would just return the same file name to open), but in this particular case it triggers a faulty behaviour. The glob parsing attempts at traversing the remote xrootd directory (see [here](https://github.com/root-project/root/blob/962009b8c2057199c2229c3ef9938ac4d315d10a/tree/tree/src/InternalTreeUtils.cxx#L471)), but since the permission is just for the single file with the token and not for the entire directory, it leads to the `user access restricted` error you post above. Now, I believe the most sane course of action would be to refine the logic that checks whether the input file name is a glob. I could simply add a check for the `xrd.wantprot` token, but probably we want to have a more authoritative list of all the tokens that should make the file name not be parsed as a glob. This probably includes not only xrootd tokens but also anything https-related. Or we could adopt a different strategy for glob detection altogether. Thoughts @dpiparo @pcanal ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16475#issuecomment-2365248206:1312,detect,detection,1312,https://root.cern,https://github.com/root-project/root/issues/16475#issuecomment-2365248206,1,['detect'],['detection']
Safety,"The problem is that both shapes are composite, and TGeoCompositeShape does not currently support generating mesh points on segments. If you were to replace the pvPipeBottom with a simple tube the overlap would probably be detected, but of course you cannot do that. So you are hitting the boolean-boolean combination which is worst supported unfortunately by the geometry checker and can miss overlaps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6556#issuecomment-705445777:222,detect,detected,222,https://root.cern,https://github.com/root-project/root/issues/6556#issuecomment-705445777,1,['detect'],['detected']
Safety,"They do, but they are not at odd. libImt is presently the tool used via TROOT to get the status of the activation of ImplicitMT. That requires the load of libImt and the invocation of a function. This PR made of 1 commit simplifies the mechanism, avoiding to load libImt (and initialise the entire TROOT) in case only the activation status of ImplicitMT is required.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1127#issuecomment-334141079:247,avoid,avoiding,247,https://root.cern,https://github.com/root-project/root/pull/1127#issuecomment-334141079,1,['avoid'],['avoiding']
Safety,"This works now fine on 6.28/04, it no longer crashes. ```; root -l; root [0] int x; (int) 0; root [1] .undo; root [2] x; (int) 0; root [3] .undo; root [4] .undo; root [5] x; input_line_12:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [6] x; input_line_14:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [7] int x; (int) 0; root [8] int x; (int) 0; root [9] x; (int) 0; root [10] x; (int) 0; root [11] x; (int) 0; root [12] x; (int) 0; root [13] .undo; root [14] x; (int) 0; root [15] .undo 5; root [16] x; input_line_23:2:3: error: use of undeclared identifier 'x'; (x); ^; Error in <HandleInterpreterException>: Error evaluating expression (x); Execution of your code was aborted.; root [17] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10178#issuecomment-1812233608:341,abort,aborted,341,https://root.cern,https://github.com/root-project/root/issues/10178#issuecomment-1812233608,3,['abort'],['aborted']
Safety,Those `VecCore not found` bugs should be fixed by clearing the build directory. They are related to my own changes to avoid copying headers to the build directory.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/855#issuecomment-321843681:118,avoid,avoid,118,https://root.cern,https://github.com/root-project/root/pull/855#issuecomment-321843681,1,['avoid'],['avoid']
Safety,"Well, it was never needed as such ... it was just to make includes simpler and avoid ifdefs in every TGL file :) I'm just saying you had to change every file that used it and this is really not necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4095#issuecomment-535595924:79,avoid,avoid,79,https://root.cern,https://github.com/root-project/root/pull/4095#issuecomment-535595924,1,['avoid'],['avoid']
Safety,"Yes I would like some feedback on the use of std::vector so I can take care of that appropriately together with rebasing. If this strategy is agreed I can also clean up a bit more to avoid the redundant size counters, etc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7499#issuecomment-828637952:183,avoid,avoid,183,https://root.cern,https://github.com/root-project/root/pull/7499#issuecomment-828637952,2,"['avoid', 'redund']","['avoid', 'redundant']"
Safety,"Yes, better than the ""That should fix a recent nightly failure with gcc11"" that Philippe commented on, thanks for improving it!. Compared to just including the actual diagnostic (something Philippe and I generally try to do these days, something that has proven super helpful several times), your current log:; ```; That should fix a recent nightly failure with gcc11 avoiding to require; module ""bits/ranges_base.h"" in C++20 context.; ```. does not call out; - that it's during dictionary generation; - that the modulemap requires the module feature 'cplusplus20' (your log seems to suggest that the error surfaces when compiled in C++20 mode, while this error shows up when compiling in C++14 or 17); - that the issue is also with GCC12 headers (your message seems to suggest that it's only with GCC11 headers); - the ""stack trace"", i.e. `/usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here` and then `/home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'` and then `#include ""TIsAProxy.h""`. In general we tell our users (+/- always) ""can we please see the actual diagnostic"", and for the same reasons it's super helpful to include them here. The time we discussed this is waaay larger than the time it would have taken you to update the log to what Philippe proposes, rather than updating it to something that tries to address the issues (but seemingly fails?). But it's Philippe's review, I let him comment / deal with this if you still prefer to keep your current commit log. I simply wanted to add an explanation why Philippe suggests the inclusion of the actual diagnostic (and why I found it convincing and do it ever since he propose it to me).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1429251757:368,avoid,avoiding,368,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1429251757,1,['avoid'],['avoiding']
Safety,_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_assertBranchCount](http,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:3658,recover,recover,3658,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,1,['recover'],['recover']
Safety,"arch order to search for first the one; > that are not marked RTLD_GLOBAL.; >; > So any other client that wants to open thing's with RTLD_LOCAL will ; > then expose what they thought were private symbols to the JIT as a whole?; >; > One of the issues is that it is not clear to me is what exactly is; > your use case and this is why there are misunderstandings.; >; > I also don't understand why there are mis-understandings, but have ; > explained the use case a few times now and *3* will explicitly break ; > that as well as provide bizarre default behavior:; >; > libc++.so, libA.so; > libA.so defines an overload for global operator new/delete; >; > |DynamicLibrary::getPermanentLibrary(NULL) // Other code; > DynamicLibrary::getPermanentLibrary(""libA.so"") |; >; > In your scheme the JIT can pull operator new/delete from libA.so,; > and worse is that whether it pulls operator new/delete from; > libA.so is dependent on whether operator new/delete has been; > resolved in *// Other code* before libA.so has been loaded.; >; > The example can be expanded to RTTI information, exceptions, and a ; > host of other problems.; >; No, this would not break the case you mentioned. The case that will ; have a special behavior is if you called ; `DynamicLibrary::addPermanentLibrary(handle)`. So you should be safe there.; >; > And even worse than that is that in your scheme there is no way of ; > hiding symbols from the global scope, in fact it promotes everything ; > that the user reasonably expected to be private (via RTLD_LOCAL) to ; > take dominance over anything else.; >; I understand that and I am totally fine for fixing this the right way ; after the llvm release.; >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub ; > <https://github.com/root-project/root/pull/744#issuecomment-313799028>, ; > or mute the thread ; > <https://github.com/notifications/unsubscribe-auth/AGNuU_J817GPmYooZ_jUyw85N6Y9ayBUks5sLqTrgaJpZM4OO5d2>.; >",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313802370:3335,safe,safe,3335,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313802370,1,['safe'],['safe']
Safety,"bviously, but 2) also because the full source is needed to build `zmq::ppoll`. `ppoll` was written as an extension to libzmq itself. In the ideal world, I would have committed this back to libzmq (which they are open to, and which I'll do later, see https://github.com/zeromq/libzmq/issues/4220), but haven't had time yet. The interim solution is to just ship it with ROOT, but this requires (part of) the libzmq source to build against. We can do this in two ways: a) just include the necessary libzmq files or b) get them externally on the fly. I actually went with option a) first. However, when people started trying out this branch on their machines, it turned out that the `conda` libzmq build (which I was using in my dev setup) had a more favorable configuration than for instance most Linux native builds, especially because those native builds lack CMake configuration files. That latter fact made me decide to just make the built-in dependency the default; this way I wouldn't have to figure out how to best detect libzmq on each platform (or find / cobble together a good and freely licensed FindZeroMQ.cmake, but the general feeling around the ZeroMQ community is that this is a waste of effort, because the CMake config files that come along with libzmq itself already solve this finding problem; it's just unfortunate that the Linux distro's won't include them...). So in the end, because of time constraints, I made the choice to prioritize other things over putting a lot of effort into this dependency which will probably end up different in the near future anyway (because of the ppoll PR, which will make things a lot easier on the ROOT side). So, long story, I hope it is clear. Do you think that given this (temporary) situation, the choice for built-in only is acceptable?. Then about the RooFitZMQ option: agreed, I should add an option for that. The only catch is that this PR is part of a bigger series and the ""real"" end-product that should be optional in my opinion is Roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870411730:1201,detect,detect,1201,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870411730,1,['detect'],['detect']
Safety,e vs. Mix_1_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.028 % IntLen: 1.1 % ; TEST PASSED Fe vs. Mix_2_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST PASSED Fe vs. Mix_3_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0.019 % IntLen: 1.1 % ; TEST PASSED Mat_Fe_TGeo vs. Mat_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 2.2e-14 % IntLen: 0 % ; TEST PASSED Mix_1_Fe_TGeo vs. Mix_1_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_2_Fe_TGeo vs. Mix_2_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 2.2e-14 % IntLen: 0 % ; TEST PASSED Mix_3_Fe_TGeo vs. Mix_3_Fe_G4 Units: G4 Deviation density: 0 % RadLen: 2.2e-14 % IntLen: 0 % ; TEST PASSED U vs. Mat_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_1_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.0093 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_2_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_3_U_TGeo Units: TGeo Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mat_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_1_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.0093 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_2_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED U vs. Mix_3_U_G4 Units: G4 Deviation density: 0 % RadLen: 0.11 % IntLen: 3.8 % ; TEST PASSED Mat_U_TGeo vs. Mat_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_1_U_TGeo vs. Mix_1_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_2_U_TGeo vs. Mix_2_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % ; TEST PASSED Mix_3_U_TGeo vs. Mix_3_U_G4 Units: G4 Deviation density: 0 % RadLen: 0 % IntLen: 0 % . TEST PASSED Hurray!!!! 0 failures detected.; ```; [test_material_units.C.txt](https://github.com/root-project/root/files/9212397/test_material_units.C.txt),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11060#issuecomment-1198355345:5259,detect,detected,5259,https://root.cern,https://github.com/root-project/root/pull/11060#issuecomment-1198355345,1,['detect'],['detected']
Safety,"ee/ntuple/v7/inc/ROOT/RField.hxx; @@ -570,7 +570,7 @@ public:; RFieldBase(RFieldBase&&) = default;; RFieldBase& operator =(const RFieldBase&) = delete;; RFieldBase& operator =(RFieldBase&&) = default;; - virtual ~RFieldBase() = default;; + virtual ~RFieldBase();; ; /// Copies the field and its sub fields using a possibly new name and a new, unconnected set of columns; std::unique_ptr<RFieldBase> Clone(std::string_view newName) const;; diff --git a/tree/ntuple/v7/src/RField.cxx b/tree/ntuple/v7/src/RField.cxx; index ef04fec76c..41d4962ac5 100644; --- a/tree/ntuple/v7/src/RField.cxx; +++ b/tree/ntuple/v7/src/RField.cxx; @@ -410,6 +410,10 @@ ROOT::Experimental::RFieldBase::RFieldBase(std::string_view name, std::string_vi; {; }; ; +ROOT::Experimental::RFieldBase::~RFieldBase(); +{; +}; +; std::string ROOT::Experimental::RFieldBase::GetQualifiedFieldName() const; {; std::string result = GetFieldName();; ```. Alternatively it helps to switch the `if constexpr` around to avoid the compiler instantiate the `RField<void>`:; ```diff; diff --git a/tree/ntuple/v7/inc/ROOT/REntry.hxx b/tree/ntuple/v7/inc/ROOT/REntry.hxx; index 1f3ec47095..b7b70b24cb 100644; --- a/tree/ntuple/v7/inc/ROOT/REntry.hxx; +++ b/tree/ntuple/v7/inc/ROOT/REntry.hxx; @@ -124,12 +124,11 @@ public:; if (v.GetField().GetFieldName() != fieldName); continue;; ; - if constexpr (std::is_void_v<T>); - return v.GetPtr<void>();; -; - if (v.GetField().GetTypeName() != RField<T>::TypeName()) {; - throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +; - v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));; + if constexpr (!std::is_void_v<T>) {; + if (v.GetField().GetTypeName() != RField<T>::TypeName()) {; + throw RException(R__FAIL(""type mismatch for field "" + std::string(fieldName) + "": "" +; + v.GetField().GetTypeName() + "" vs. "" + RField<T>::TypeName()));; + }; }; return std::static_pointer_cast<T>(v.GetPtr<void>());; }; ```. Finally we can either disable `CreateValue` in th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14468#issuecomment-1916371964:1785,avoid,avoid,1785,https://root.cern,https://github.com/root-project/root/pull/14468#issuecomment-1916371964,1,['avoid'],['avoid']
Safety,"le features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config; -- Performing Test HAVE_FFI_CALL; -- Performing Test HAVE_FFI_CALL - Success; -- Found FFI: /usr/lib64/libffi.so; -- Performing Test Terminfo_LINKABLE; -- Performing Test Terminfo_LINKABLE - Success; -- Found Terminfo: /usr/lib64/libtinfo.so; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""); -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""); -- Linker detection: GNU ld; -- Performing Test C_SUPPORTS_FPIC; -- Performing Test C_SUPPORTS_FPIC - Success; -- Performing Test CXX_SUPPORTS_FPIC; -- Performing Test CXX_SUPPORTS_FPIC - Success; -- Building with -fPIC; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDDEN_FLAG - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:449 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_WARNINGS'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Performing Test C_SUPPORTS_WERROR_DATE_TIME; -- Performing Test C_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME; -- Performing Test CXX_SUPPORTS_WERROR_D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:1482,detect,detection,1482,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,1,['detect'],['detection']
Safety,"loop over 3 parallel histograms, you'd need the global to be a vector and you'd have to push_back() onto it, but you're in the same (bad) place then. I wrote a script just like that this week exactly to fit a number of peaks determined by a file read inside one routine, and looped over outside, and I used example 1, not example 2, and future use of the base routine will never cause leaks. . The code structure is problematic to me. RDirectory itself isn't terrible, but I just don't see what it solves other than more syntax to remember. A final point, the shared pointers supposedly perform worse than unique pointers. I don't know how much it matters, but when you're fitting millions of waveforms maybe it does. Of course then you shouldn't be using RDirectory, but you can still use my_subroutines.C to do your fit if you're looping the million without RDirectory or to examining one of those fits with RDirectory, without rewriting the routine. I'm going to skip the point about empty root objects just to limit the scope for now. ### How to skip globals entirely. Of course you can just let the top level code return an object or structure. The downside is just that you have to .L the code and call it with auto ret=make_th1(). It can't be a complied main(), but that's no big deal. It violates the spirit of ""scripting"" but is of course very clean:. example 3: ; ```cpp; //subroutine.C. // my_subroutines.C; void my_subroutine(unique_ptr<TH1> &x) {; x.reset(); // not needed for TH1F, but safer in general.; x.reset(new TH1F());; // .. do something with it.; }; ```; ```cpp; //make_th1.C. vector<unique_ptr<TH1>> make_th1() { //edit: changed to TH1's here; vector<unique_ptr<TH1>> retvec(3); // and here, as intended.; for (int i=0; i<3; i++) {; my_subroutine(retvec[i]);; }; return retvec;; }; ```. But the end-user can decide. Again, the subroutine works regardless. The PR is an improvement, and I don't object to it. I think more improvement is possible. (minor edits made for cleanup)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791104038:6736,safe,safer,6736,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791104038,1,['safe'],['safer']
Safety,"ls using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF][HS3] Consistent range for nominal alpha params with HistFactory; [RF][HS3] Remember simultaneous channel names when writing JSON; [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip; [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints; [RF][HS3] Don't mix up free functions and class impl in JSON tool; [RF][HS3] Consistently have implicit fallback for HistFactory variables; [RF][HS3] Don't import datasets that are parts of a combined dataset; [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`; [RF][HS3] Generate input file for testHS3HistFactory on the fly; [RF][HS3] Improvements to the HS3 HistFactory implementation; [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; [RF][HS3] Some refactoring for less lines of code; [RF][HS3] Ordering fixes; [RF][HS3] Achieved closure for ATLAS ttW workspace; [RF][HS3] Sorting distributions; [RF][HS3] Bugfixes for histfactory workspaces; [RF][HS3] Small renamings; [RF][HS3] Improved attribute handling, caught some typecast-errors; [RF][HS3] Bugfix for FlexibleInterpVar; [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF][HS3] Re-retrieve element after exporting dependants; [RF][HS3] Don't write `histfactory_dist` axes redundantly; [RF] Exclude RooHistError from IO; [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; [RF] Code-format `testRooDataHist.cxx`; [RF][HS3] Change analysis and likelihoods fields to match HS3 standard; [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`; [RF] Modernize `RooVectorDataStore::RealF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:3686,redund,redundantly,3686,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,2,['redund'],['redundantly']
Safety,"n RooFit JSON IO; [RF] Add test for a simultaneous model written and read from JSON; [RF] Skip the RooSimultaneous in JSON IO; [RF] Don't export `factory_tag` in JSON; [RF][HS3] Move the default variable values to the estimates section; [RF] RooFit JSON: no need to tag variables, just export them; [RF] Rename fields in JSON file to match new standard; [RF] Complete also the reading of likelihoods and analysis fields; [RF] Add likelihoods and analyses fields for HS3 v2; [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3; [RF] Some refactoring of RooFit HS3; [RF] New `domains` section in JSON to store variable ranges; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Clearly mark `RooFit::CloneData()` as deprecated; [RF] Again code-format RooMinimizer; [RF] Avoid overhead of tracking evaluation error msgs when not needed; [RF] Implement safe way to set eval error logging in RooMinimizer; [RF] Use proper infinity checks in RooFit HS3; [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code; [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable; [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Inline infinity constant and checks in `RooNumber`; [RF] Code-format RooNumber.h and RooNumber.cxx; [RF] Fill weight errors when importing RooDataHists to RooDataSet; [RF] Make it possible to directly import RooDataHist to RooDataSet; [RF] Reduce code duplication in RooDataSet constructor; [RF] Always create weight var in RooDataSet when importing weighted data; [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist; [RF] Support also importing `RooDataHists` into RooDataSets; [RF] Avoid some code duplication in `RooDataSet` with importing slices; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:8385,safe,safe,8385,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,1,['safe'],['safe']
Safety,"other compression algorithms already do this,. Indeed. The diffs was made less obvious because:; ZLIB decompression is already doing the right thing.; ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different.; ; > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:; ```; Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap; ```; and used via; ```; char *bufcur = &fBuffer[fKeylen];; ```; so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:; * why are those added?; * why doesn't RNTuple need it?. 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is most likely talking about a space 'freed' inside a ROOT file.~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14523#issuecomment-1932803605:1803,risk,risk,1803,https://root.cern,https://github.com/root-project/root/pull/14523#issuecomment-1932803605,1,['risk'],['risk']
Safety,"says ""Add **a** module for experimental/string_view""; The commit says:. That should fix a recent nightly failure with gcc11 avoiding to require; module ""bits/ranges_base.h"" in C++20 context. The code says:; ```; module ""experimental/string_view"" {; export *; header ""experimental/algorithm""; }; ```; ; The commit content as-is seems completely unrelated to the commit log as far as I could tell (without doing research on the relationship between `range_base`, `string_view` and `algorithm`.; ; So I pondered whether the fix was the right fix for a problem I did not know anything about ... ; ; The right thing to do would have probably be have been to request a complete explanation of what the original problem was, what was the mechanism leading to the error and why this solution was the best solution. This was obviously much more than this seemingly simple fix required. So instead I thought to ask for a very low cost, straight forward solution: simply copy/pasting the error with no additional effort to explain in detail. > Can you suggest a commit message which adds enough information which makes me happy as well?. That requires to paraphrase the error and add a few more details. ```; That should fix a recent nightly failure with gcc11. The failure presented during dictionary generation in a C++14 and C++17 build and incorrectly complained about needing the 'cplusplus20' feature for the 'std.bits/ranges_base.h' module. The issue was triggered by an inclusion of `<bits/ranges_base.h>` from `string_view`. This issue exists on gcc11 and gcc12 (and I guess any gcc that made changes to libstdc++ and the experimental/string_view header file). . It seems the issue is solved by exporting `algorithm` as part of the `string_view` module.; ```. Actually, I still don't know why adding `algorithm` fixes a problem with `range_base.h`, so I can't add that to the commit ... maybe it is something like ""... by avoiding to use the module maps provided by the standard library in those case""?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1430326540:1973,avoid,avoiding,1973,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1430326540,1,['avoid'],['avoiding']
Safety,t.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_assertBranchCount](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_assertBranchCount/). And 5 mo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:3801,recover,recover,3801,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,1,['recover'],['recover']
Safety,"tead I have a tuple or list on the Python side and the template expects some STL container? Then it can not just be that STL container of say `T*`, but also the STL container of pointer any of the base classes, or worse, a mix thereof. And what if the tuple isn't actually targeting a container, but is an initalizer_list? There is often no (relevant) type information available at that point in Python, but many cases can still be resolved b/c the C++ side has some hints. For example `template<typename T, int N> void func(const std::array<T, N>&)` being given a Python tuple `(1, 2, 3)`. Absolutely clear what needs to be done for the conversion to work, but otherwise yet another case to add to the combinatorics. The above, current, situation is very much ""eeew"" and ""might not like the result."" It has also reached its breaking point, as you can see from the open bug reports and the constant hacking on workarounds. I appreciate that for the old PyROOT no-one actually seriously used templates, as folks avoided it in their interfaces b/c of non-support in the CINT world. The only client with moderately interesting templates would be RDataFrame. But in the real world, folks write modern C++ and template usage is much more pervasive. Just last week, I was looking at a massive series of variadically templated constructors: each peeled of an argument to eventually initialize a grand total of 3 data members. It was just a struct with an `unsigned int`, a `double`, and an `std::array<double, 3>`. The point of the whole set of constructors being that you can use initializer syntax with the data member in every order, either the ""naked"" types or with casts of explicitly named typedefs. Oh, it works _now_, with yet another workaround, but it actually crashed `lookupHelper` (segfault and die; and it's not the only one; I have a few more for Vassil, e.g. lookup in an unnamed namespace also crashes deep, deep inside Cling/Clang). So, I consider that another strong argument against ""tryi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-696889449:2471,avoid,avoided,2471,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-696889449,1,['avoid'],['avoided']
Safety,"th weight errors; [RF] Add weight errors and not weight squared when filling split data; [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`; [RF][HS3] Don't assume that combined dataset name is always `""obsData""`; [RF][HS3] Use less `c_str()` conversions in RooFitHS3; [RF][HS3] New `wsEmplace()` method for creating objects in workspace; [RF][HS3] New `wsImport()` function to avoid repeating command args; [RF] Less manual memory management in RooAbsArg and RooProdGenContext; [RF] Code modernization of RooAbsReal; [RF][HS3] Renaming some distributions to conform with HS3 standard; [RF][HS3] Use HistFunc variables instead of underlying hist variables; [RF] Added protection against invalid variable names in createHistogram; [RF][HS3] Correct error messages when IO keys are missing; [RF][HS3] Code improvements in HS3 HistFactory; [RF][HS3] Small HS3 closure fixes; [RF][HS3] Import HistFactory constraints directly upon creation; [RF][HS3] Cleanup of generic functions to avoid using arguments; [RF][HS3] Don't import embedded data directly to RooWorkspace; [RF] Avoid false warnings in RooAbsReal::createHistogram(); [RF][HS3] Reduce verbosity of unit tests; [RF][HS3] Less usage of TString; [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets; [RF][HS3] Remove unused functions from JSONFactories_HistFactory; [RF][HS3] Export `staterror` correctly for HistFactory; [RF][HS3] Major restructuring of HistFactory in HS3 - part 2; [RF][HS3] Major refactoring of `JSONFactories_HistFactory`; [RF][HS3] Correctly consider weight errors in `readBinnedData()`; [RF][HS3] Small code style improvement (renaming); [RF][HS3] Make `testHS3HistFactory` less verbose; [RF][HS3] Changed some JSON keywords to comply with new HS3 standard; [RF][HS3] Moved `DependencyMissingError` to public to make it catchable; [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup; [RF][HS3] Added helper function for writing matrices in JSONInterface; [RF][HS3] JSON IO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:5778,avoid,avoid,5778,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,2,['avoid'],['avoid']
Safety,"try *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-only projects.; import os, sys, tokenize; ; try:; import setuptools; except ImportError as error:; print(; ""ERROR: Can not execute `setup.py` since setuptools is not available in ""; ""the build environment."",; file=sys.stderr,; ); sys.exit(1); ; __file__ = %r; sys.argv[0] = __file__; ; if os.path.exists(__file__):; filename = __file__; with tokenize.open(__file__) as f:; setup_py_code = f.read(); else:; filename = ""<auto-generated setuptools caller>""; setup_py_code = ""from setuptools import setup; setup()""; ; exec(compile(setup_py_code, filename, ""exec"")); '""'""''""'""''""'""' % ('""'""'.../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-req-build-02hlcwf_/setup.py'""'""',), ""<pip-setuptools-caller>"", ""exec""))' egg_info --egg-base .../py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/cmsdist-tmp/pip-pip-egg-info-pxqkc5sy; cwd: .../py3-hepdata-lib/0.8.1-ec986c2493f6",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1154135015:3290,avoid,avoids,3290,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015,1,['avoid'],['avoids']
Safety,"w users can register a drawing of a result histogram in the same way in single- and multi-thread analysis, like this:. ```c++; // Draw partial result on canvas every 500 events; TCanvas c(""c"", ""Running event loop..."");; h.OnPartialResult(100, [&c](TH1D &h_) {; c.cd();; h_.Draw();; c.Update();; });; ```; @Axel-Naumann users can open a `TBrowser` and check result updates while the event loop is running quite easily:; ```c++; // create ""TDFResults"" directory in TBrowser; TBrowser b(""b"", ""event loop peeper"");; TMemFile m(""TDFResults"", ""RECREATE"");. // add partial result to the ""TDFResults""; m.Browse(&b); // it would be cool if we could change the current directory in the TBrowser to `TDFResults` here; h.OnPartialResult(decltype(h)::kOnce, [&m](TH1D &h_) { m.Add(&h_); });. // call ProcessEvents every once in a while during the event loop to allow users to navigate the TBrowser; h.OnPartialResult(50, [](TH1D &hist) { gSystem->ProcessEvents(); });; ```; @peremato here is how one would implement a thread-safe progress bar for a TDF multi-thread analysis; ```c++; // Update progress bar every 100 events; std::string progress;; std::mutex bar_mutex;; c.OnPartialResultSlot(nEvents / 100, [&progress, &bar_mutex](unsigned int, ULong64_t &c_) {; std::lock_guard<std::mutex> lg(bar_mutex);; progress.push_back('#');; std::cout << ""\r["" << std::left << std::setw(100) << progress << ']' << std::flush;; });; ```. Here are the corresponding self-contained, fully working code examples:; [draw_partial_result.txt](https://github.com/root-project/root/files/1327464/draw_partial_result.txt); [inspect_analysis.txt](https://github.com/root-project/root/files/1327466/inspect_analysis.txt); [progress_bar.txt](https://github.com/root-project/root/files/1327469/progress_bar.txt); (for some reason github does not allow files with `.cpp` extension :man_shrugging: ). For common-enough callbacks one can always imagine to provide helper functions of course.; I like this feature a lot. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331722007:1022,safe,safe,1022,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331722007,1,['safe'],['safe']
Safety,"yDataFrame({id_column: arr_id}); df_id.Snapshot(treename, idfilepath). ch_data = ROOT.TChain(treename, '') ; for _, filepath in l_tp_file:; ch_data.Add(filepath). size_ch = ch_data.GetEntries(); size_id = arr_id.size. if size_ch != size_id:; print('Different id and chain sizes: {}/{}'.format(size_id, size_ch)); raise. ch_data.AddFriend(treename, idfilepath). df = ROOT.RDataFrame(ch_data). return (df, ch_data); #------------------------------------------; def test():; #----------------------; #Make input; #----------------------; index = 0 ; l_tp_file = [] ; for val in range(0, 100, 10):; filepath = make_data(val); l_tp_file.append((index, filepath)); index+=1; #----------------------; #Merge; #----------------------; df, _ = get_df(l_tp_file, 'tree', id_column='id'); df.Display(['a', 'id'], -1).Print(); #df.Snapshot('tree', 'file.root'); #------------------------------------------; test(); ```. I will add `get_df` to my personal library. The approach seems safe and clean enough, however the return value needs to include the chain (i.e. _) because otherwise I get a crash. Which seems to indicate that the chain's reference is not kept inside the dataframe. So once the function returns, the chain is removed by the garbage collector and the dataframe does not have anything to save (the script above is self contained and you can try it yourself). That should not be right, if I tell the dataframe to use the chain, the chain should be kept alive by the dataframe. > ; > The simplest solution: with the upcoming `DefinePerSample` method you can solve this more easily, but the feature will only be merged in ROOT master in a few days ([PR here](https://github.com/root-project/root/pull/8841)). With `DefinePerSample` you could write something like this:; > ; > ```c++; > df.DefinePerSample(""index"", ""GetIndex(rdfsampleinfo_.AsString())""); > ```; > ; > where `rdfsampleinfo_.AsString()` will be of the form `<filename>/<treename>`. I expect to merge this feature in master today or to",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-932494638:4286,safe,safe,4286,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638,1,['safe'],['safe']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 101 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_VectorizedTMathUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31655/testReport/projectroot.m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-401785227:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-401785227,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 101 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_VectorizedTMathUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31664/testReport/projectroot.m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-401790307:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-401790307,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393485196:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393485196,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2118#issuecomment-393467051:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2118#issuecomment-393467051,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117#issuecomment-393471686:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2117#issuecomment-393471686,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393458046:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393458046,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2119#issuecomment-393426877:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2119#issuecomment-393426877,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28759/testReport/projectroot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-394339120:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-394339120,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35916/testReport/projectroot.roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-410833810:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-410833810,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35925/testReport/projectroot.roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2425#issuecomment-410838838:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2425#issuecomment-410838838,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35934/testReport/projectroot.roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2424#issuecomment-410842792:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2424#issuecomment-410842792,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35943/testReport/projectroot.roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2423#issuecomment-410846925:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2423#issuecomment-410846925,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35952/testReport/projectroot.roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2445#issuecomment-410850862:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2445#issuecomment-410850862,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28399/testReport/pro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-393586302:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-393586302,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28429/testReport/pro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-393644259:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-393644259,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395599631:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395599631,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_semaphore](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29029/testReport/projectroot.roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2147#issuecomment-394741633:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2147#issuecomment-394741633,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37576/testReport/projectroot.roott",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2492#issuecomment-414426779:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2492#issuecomment-414426779,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37859/testReport/projectroot.roott",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2492#issuecomment-415001212:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2492#issuecomment-415001212,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28469/testReport/projectroo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2125#issuecomment-393740963:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2125#issuecomment-393740963,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28709/testReport/projectroo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394293761:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394293761,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 175 more. ### Failing tests:; - [projectroot.roottest.python.basic.roottest_python_basic_operator](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29705/testReport/projectroot.roottest.pyt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-396066340:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-396066340,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 175 more. ### Failing tests:; - [projectroot.roottest.python.basic.roottest_python_basic_operator](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29736/testReport/projectroot.roottest.pyt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-396162096:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-396162096,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 178 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-393462547:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-393462547,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2495#issuecomment-414953063:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2495#issuecomment-414953063,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414956948:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414956948,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.pytho",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2496#issuecomment-414946221:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2496#issuecomment-414946221,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.tmva.tmva.test.DNN.CNN.TMVA_DNN_CNN_Backpropagation_CPU](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37832/testReport/projectroot.tmva.tmva.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414965082:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414965082,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30090/testReport/projectroot.io.io/test/gtest_io_io_test_te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396975222:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396975222,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30136/testReport/projectroot.t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2192#issuecomment-397195445:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2192#issuecomment-397195445,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30425/testReport/projectroot.bindings.p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2201#issuecomment-398086881:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2201#issuecomment-398086881,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.math",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2454#issuecomment-411275022:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2454#issuecomment-411275022,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411059605:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411059605,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411101883:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411101883,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2366#issuecomment-407829804:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2366#issuecomment-407829804,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411165572:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411165572,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411177216:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411177216,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411129604:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411129604,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-411277208:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-411277208,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.pytho",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411089672:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411089672,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31418/testReport/projectroot.roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400455069:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400455069,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31484/testReport/projectroot.roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400820416:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400820416,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36568/testReport/projectroot.roottest.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2424#issuecomment-411685113:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2424#issuecomment-411685113,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36577/testReport/projectroot.roottest.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411689618:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411689618,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36743/testReport/projectroot.roottest.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2412#issuecomment-411882917:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2412#issuecomment-411882917,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36752/testReport/projectroot.roottest.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411900558:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411900558,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36864/testReport/projectroot.roottest.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2449#issuecomment-412084096:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2449#issuecomment-412084096,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36873/testReport/projectroot.roottest.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2449#issuecomment-412090993:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2449#issuecomment-412090993,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37080/testReport/projectroot.roottest.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-412985127:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-412985127,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37513/testReport/projectroot.roottest.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-414352157:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-414352157,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_invalidref](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30217/testReport/projectr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2195#issuecomment-397357824:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2195#issuecomment-397357824,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_invalidref](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36411/testReport/projectr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2459#issuecomment-411401046:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2459#issuecomment-411401046,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_invalidref](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36502/testReport/projectr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2459#issuecomment-411478809:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2459#issuecomment-411478809,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411701514:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411701514,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/pro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411436247:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411436247,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-414258112:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-414258112,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30614/testReport/projectroot.roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2200#issuecomment-398742839:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2200#issuecomment-398742839,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30623/testReport/projectroot.roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2220#issuecomment-398762202:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2220#issuecomment-398762202,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30632/testReport/projectroot.roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2221#issuecomment-398776137:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2221#issuecomment-398776137,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30650/testReport/projectroot.roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2200#issuecomment-398788089:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2200#issuecomment-398788089,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testRepor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-398607736:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-398607736,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testRepor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400118785:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400118785,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testRepor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-410966153:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-410966153,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execNamingMatchesNoHeader_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34446/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2396#issuecomment-409268102:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2396#issuecomment-409268102,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30389/testReport/projectroot.roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2201#issuecomment-398001738:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2201#issuecomment-398001738,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.treeformula.formulaio.roottest_root_treeformula_formulaio_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36530/testReport/p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2434#issuecomment-411495922:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2434#issuecomment-411495922,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot/test/test_stressHistFactory/); - [proj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411084210:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411084210,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tmva.tmva.test.DNN.CNN.TMVA_DNN_CNN_Backpropagation_CPU](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34984/testReport/projectroot.tmva.tmva.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-409881305:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-409881305,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tmva.tmva.test.DNN.CNN.TMVA_DNN_CNN_Backpropagation_CPU](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35889/testReport/projectroot.tmva.tmva.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-410732358:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-410732358,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_MethodDL_Optimization_Cpu](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33809/testReport/projectroot.tmva.tmva.te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2379#issuecomment-408399396:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2379#issuecomment-408399396,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 93 more. ### Failing tests:; - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_typedefSelection_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35147/t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2421#issuecomment-409967337:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2421#issuecomment-409967337,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 93 more. ### Failing tests:; - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_typedefSelection_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35291/t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2421#issuecomment-410083254:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2421#issuecomment-410083254,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 93 more. ### Failing tests:; - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_typedefSelection_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35300/t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2421#issuecomment-410090281:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2421#issuecomment-410090281,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1775:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-415844036:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-415844036,1,['access'],['accessing']
Security," 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1775:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_helpers](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38691/testReport/projectroot.tr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2523#issuecomment-416212209:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2523#issuecomment-416212209,1,['access'],['accessing']
Security," and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.directory.roottest_root_io_directory_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32357/testReport/projectroot.roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319#issuecomment-405050428:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2319#issuecomment-405050428,1,['access'],['accessing']
Security," layout, with some datasets/samples having to be left-joined and others having to be inner-joined (for example), involves some design work and I would like to discuss it further, although I'd like to get a better idea of the use cases that need any joins other than left join. > Entry ranges: I don't think this is very useful data to record. This is either kept track of as a good-luminosity block list, or specified at execution time by the user. During the meeting a few weeks ago there was quite a large consensus on this information being useful when written at the datasets/samples level. I also agree with you that an entry range is usually specified when testing before running the full thing. Nonetheless, the important part of this feature was the ability to tie a specific entry range to a specific dataset/sample and not to the global dataset, so that even when testing at least N entries from each dataset/sample would be processed. If this is not specified when definining the dataset metadata, then I suppose we should expose some API like:. ```python; entry_ranges = [(0,1000), (50000, 60000)] # taken from my initial specification example; df = RDataFrame(...); df.SetEntryRanges(entry_ranges); ```; And similarly for coffea and other frameworks. What I don't like about this is that I need to remember how many datasets/samples I have in my specification so that `len(entry_ranges)` corresponds to that number. Of course the tool can error and say ""You have specified too many entry ranges, please use only N"", maybe that's good enough but I'm not sure. One other comment could be that we don't need to have exactly one entry range per dataset/sample, maybe some datasets just need to be processed fully. But the API from above would not be able to distinguish whether the user actually didn't want to provide an entry range for a certain dataset or just forgot how many datasets were there. How would you address this part?. > To take all this and mutate your original suggestion. T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11624#issuecomment-1297411993:3622,expose,expose,3622,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1297411993,1,['expose'],['expose']
Security," sprintf(char *string,char *format,arglist,...);; int fscanf(FILE *fp,char *format,arglist,...);; int scanf(char *format,arglist,...);; int sscanf(char *string,char *format,arglist,...);; (C++ compiled) class TClass public:TDictionary //Dictionary containing class information; (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects; (C++ compiled) class TMemberInspector //ABC for inspecting class data members; (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title); (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics; (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup; (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information; (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information; (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information; (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion; (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion; (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method); (C++ compiled) class TQObject //Base class for object communication mechanism; (C++ compiled) class TFunction public:TDictionary //Dictionary for global function; (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers; (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries; (C++ compiled) class TTask public:TNamed //Base class for tasks; (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action.; (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo; (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:1721,hash,hashtable,1721,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,1,['hash'],['hashtable']
Security," to generally work, user-provided types are necessary to cover corner cases, e.g. by handing template arguments to std::make_tuple. Python's three-way comparison operator is only syntax, not semantics, so the spaceship would simply be broken down in Python's richcompare and the only real issue again is ROOT/meta giving wrong overloads. That said, I'm moving away from operator lookups: not only are the overloads often wrong, so I'm doing my own ADL, but also TClingCallFunc generates broken code on Mac and Windows. Rather, I want to use a generic comparison template and let SFINAE deal with it. The difference between removing std::, giving wrong overloads, etc. and string <-> decl is that the former is a problem b/c ROOT/meta gives the _wrong_ results. Strings are sometimes clunky, but perfectly fine if they are correct. Yes, letting clang parse names (as done for function template lookups already) is exactly what should happen. But the next step is to funnel the results to the Python mappings, not expose cppyy to decls or their intricate details. E.g. the converters and executor lookups should be a combination of strings and categories, just like it is now (except that the categories are derived from string parsing, like looking for ends_in('*')). Doing that selection based on decls as suggested here and in the e-mail thread with Gerhard makes no sense whatsoever: you'd have to maintain three times the same functionality. I would want something like this:. ```; opaque_handle h = what_is(parent, name); type_category t = what_type(h); qual_category q = what_qualifiers(h); true_name = unqualified_true(h); opaque_handle p = true_parent(h); etc.; ```. with opaque_handle possibly the decl, and with t and q some enums or flags, and that would get rid of the name parsing in converters/executors, but NOT the string-based name lookups there. I do not need listings per se, not even for classes, but see GetAllCppNames(): something to feed to dir(), tab-completion, and help() rema",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3579#issuecomment-478718847:1482,expose,expose,1482,https://root.cern,https://github.com/root-project/root/pull/3579#issuecomment-478718847,1,['expose'],['expose']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2119#issuecomment-393426877:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2119#issuecomment-393426877,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393458046:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393458046,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-393462547:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-393462547,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2118#issuecomment-393467051:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2118#issuecomment-393467051,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117#issuecomment-393471686:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2117#issuecomment-393471686,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393485196:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393485196,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28399/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-393586302:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-393586302,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28429/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-393644259:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-393644259,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28469/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2125#issuecomment-393740963:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2125#issuecomment-393740963,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28539/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2093#issuecomment-393862245:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2093#issuecomment-393862245,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28629/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2131#issuecomment-394076468:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2131#issuecomment-394076468,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28639/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2134#issuecomment-394078799:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2134#issuecomment-394078799,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28649/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2131#issuecomment-394125476:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2131#issuecomment-394125476,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28659/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-394158267:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-394158267,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28669/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-394166550:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-394166550,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28679/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2131#issuecomment-394193738:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2131#issuecomment-394193738,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28699/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-394286909:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-394286909,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28709/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394293761:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394293761,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28739/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2137#issuecomment-394298798:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2137#issuecomment-394298798,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28759/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-394339120:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-394339120,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28769/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2138#issuecomment-394339523:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2138#issuecomment-394339523,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28789/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1971#issuecomment-394340120:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/1971#issuecomment-394340120,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28809/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394348659:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394348659,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28839/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2139#issuecomment-394372250:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2139#issuecomment-394372250,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28869/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-394385534:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-394385534,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28879/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2140#issuecomment-394386078:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2140#issuecomment-394386078,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28899/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2141#issuecomment-394409589:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2141#issuecomment-394409589,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28909/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2142#issuecomment-394456063:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2142#issuecomment-394456063,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28929/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2141#issuecomment-394601269:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2141#issuecomment-394601269,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28939/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2141#issuecomment-394610671:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2141#issuecomment-394610671,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29029/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2147#issuecomment-394741633:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2147#issuecomment-394741633,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395599631:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395599631,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29705/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-396066340:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-396066340,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29736/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-396162096:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-396162096,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30090/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396975222:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396975222,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30136/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2192#issuecomment-397195445:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2192#issuecomment-397195445,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30217/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2195#issuecomment-397357824:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2195#issuecomment-397357824,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30389/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2201#issuecomment-398001738:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2201#issuecomment-398001738,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30425/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2201#issuecomment-398086881:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2201#issuecomment-398086881,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-398607736:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-398607736,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30614/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2200#issuecomment-398742839:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2200#issuecomment-398742839,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30623/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2220#issuecomment-398762202:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2220#issuecomment-398762202,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30632/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2221#issuecomment-398776137:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2221#issuecomment-398776137,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30650/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2200#issuecomment-398788089:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2200#issuecomment-398788089,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400118785:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400118785,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31418/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400455069:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400455069,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31484/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400820416:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400820416,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31655/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-401785227:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-401785227,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31664/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-401790307:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-401790307,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32483/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-405239017:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-405239017,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2366#issuecomment-407829804:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2366#issuecomment-407829804,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33773/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2371#issuecomment-408384332:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2371#issuecomment-408384332,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33809/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2379#issuecomment-408399396:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2379#issuecomment-408399396,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34446/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2396#issuecomment-409268102:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2396#issuecomment-409268102,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34984/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-409881305:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-409881305,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35147/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2421#issuecomment-409967337:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2421#issuecomment-409967337,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35291/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2421#issuecomment-410083254:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2421#issuecomment-410083254,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35300/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2421#issuecomment-410090281:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2421#issuecomment-410090281,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35889/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-410732358:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-410732358,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35916/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-410833810:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-410833810,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35925/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2425#issuecomment-410838838:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2425#issuecomment-410838838,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35934/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2424#issuecomment-410842792:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2424#issuecomment-410842792,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35943/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2423#issuecomment-410846925:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2423#issuecomment-410846925,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35952/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2445#issuecomment-410850862:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2445#issuecomment-410850862,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-410966153:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-410966153,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411059605:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411059605,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411084210:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411084210,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411089672:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411089672,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411101883:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411101883,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411129604:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411129604,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411165572:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411165572,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411177216:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411177216,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-411277208:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-411277208,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2454#issuecomment-411275022:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2454#issuecomment-411275022,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36249/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411324665:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411324665,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36276/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411329443:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411329443,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36411/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2459#issuecomment-411401046:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2459#issuecomment-411401046,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411436247:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411436247,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36502/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2459#issuecomment-411478809:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2459#issuecomment-411478809,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36530/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2434#issuecomment-411495922:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2434#issuecomment-411495922,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36568/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2424#issuecomment-411685113:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2424#issuecomment-411685113,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36577/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411689618:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411689618,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411701514:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411701514,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36743/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2412#issuecomment-411882917:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2412#issuecomment-411882917,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36752/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411900558:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411900558,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36864/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2449#issuecomment-412084096:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2449#issuecomment-412084096,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36873/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2449#issuecomment-412090993:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2449#issuecomment-412090993,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37080/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-412985127:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-412985127,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-414258112:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-414258112,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37513/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-414352157:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-414352157,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37576/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2492#issuecomment-414426779:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2492#issuecomment-414426779,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37612/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2491#issuecomment-414596245:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2491#issuecomment-414596245,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37621/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-414605121:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-414605121,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2496#issuecomment-414946221:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2496#issuecomment-414946221,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2495#issuecomment-414953063:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2495#issuecomment-414953063,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414956948:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414956948,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37832/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414965082:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414965082,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37859/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2492#issuecomment-415001212:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2492#issuecomment-415001212,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-415844036:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-415844036,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38691/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2523#issuecomment-416212209:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2523#issuecomment-416212209,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42004/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2691#issuecomment-424741755:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2691#issuecomment-424741755,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42551/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - include/ROOT/RConcurrentHashColl.hxx:39:19: warning: variable ‘d’ set but not used [-Wunused-but-set-variable] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - include/ROOT/RConcurrentHashColl.hxx:39:19: warning: variable ‘d’ set but not used [-Wunused-but-set-variable] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2715#issuecomment-425565118:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2715#issuecomment-425565118,1,['access'],['accessing']
Security,"(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42560/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2715#issuecomment-425580897:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2715#issuecomment-425580897,1,['access'],['accessing']
Security,) to be Streamed; (C++ compiled) class TVirtualFFT public:TObject //abstract interface for FFT calculations; (C++ compiled) class TVirtualPadEditor //Abstract interface for graphics pad editor; (C++ compiled) class TMethodArg public:TDictionary //Dictionary for a method argument; (C++ compiled) class TToggle public:TNamed //Facility for toggling datamembers on/off; (C++ compiled) class TVirtualPadPainter //Painter interface for pad.; (C++ compiled) class TVirtualGLPainter //Interface for OpenGL painter; (C++ compiled) class TVirtualGLManip //Interface for GL manipulator; (C++ compiled) class TGLManager public:TNamed //Interface for OpenGL manager; (C++ compiled) class TGLPaintDevice //Base class for GL widgets and GL off-screen rendering; (C++ compiled) class TGuiFactory public:TNamed //Abstract factory for GUI components; (C++ compiled) class TAttBBox //Helper for management of bounding-box information; (C++ compiled) class TDictAttributeMap public:TObject //Container for name/value pairs of TDictionary attributes; (C++ compiled) class TDataMember public:TDictionary //Dictionary for a class data member; (C++ compiled) class TStreamerBasicType public:TStreamerElement //Streamer element for a basic type; (C++ compiled) class TStreamerBasicPointer public:TStreamerElement //Streamer element for a pointer to a basic type; (C++ compiled) class TStreamerLoop public:TStreamerElement //Streamer element for a pointer to an array of objects; (C++ compiled) class TStreamerArtificial public:TStreamerElement //StreamerElement injected by a TSchemaRule. Transient only to preverse forward compatibility.; (C++ compiled) class TTabCom //Perform command line completion when hitting <TAB>; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformFunction public:ROOT::Math::IGradientFunctionMultiDim ; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class ROOT::Math::MinimTransformVariable ; /opt/root/root_v5.34.34/lib/libMathCore.so -1 class TVirtualFitter public:TNam,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:5531,inject,injected,5531,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,1,['inject'],['injected']
Security,"// ; #endif; }; ```; I'm ok with this. I like vanilla better, but I got a clean ownership model up until the end here, and made the globals right before exiting, almost like a return statement. If I want to put this in a compiled batch code that loops over this 50 times, pauses 1 second, and displays 3 things each time, I'd just add a loop with sleeps, and Bob's your uncle without even modifying the underlying implementation to get three instances. But this RDirectory version shown here and the C++ global version here are certainly not different in that respect. The C++ globals actually win on line count here if you like this code structure better (I do). I'd argue if one needs the extern header declarations to pass things around in compiled code, he should ask if he's doing it wrong, and that's not an usual sentiment. The whole point is I think to make things visible from the interpreter or other things spawned from it. That's surely why we got here, and if C++ globals makes it tedious to access them everywhere in compiled code, I call that a bonus. . On the other hand I don't like this ; example2: ; ```cpp; {; // my_subroutines.C; unique_ptr<TH1> x // used in my_subroutine. void my_subroutine() {; x.reset(); ; x.reset(new TH1F());; // .. do something with it.; }; ```; except for maybe quick temporary scripts. So we have about 2.5 issues. ; 1) The global command,; 2) the interface and ownership model, and; 2.5) with the way it's done in the PR also the non-castable syntax issue. Issue 2.5 is already covered. I do still like C++ globals better even in example 2. It separates how to make a TH1 from how to make it global. The RDirectory is more self-documenting than ""new"", but C++ one makes the file self documenting, not just the line of code. And, all else equal, vanilla is better. But by far the more important point is that I don't like example 2 or the PR. Regarding point 2, example 1 is surely more scalable. I already scaled it more than is possible with the PR. O",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-791104038:2879,access,access,2879,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-791104038,1,['access'],['access']
Security,"/usr/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/pcanal/root_working/builds/master.module -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin23.6.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frame",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2377172429:8819,hash,hash-protocols,8819,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2377172429,1,['hash'],['hash-protocols']
Security,"/usr/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/pcanal/root_working/builds/master.module -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin23.6.0; ignoring nonexistent directory ""/usr/local/include""; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include; /Applications/Xcode.app/Contents/Developer/Plat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2377172429:4193,hash,hash-protocols,4193,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2377172429,1,['hash'],['hash-protocols']
Security,"0 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 175 more. ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42004/testReport/proj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2691#issuecomment-424741755:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2691#issuecomment-424741755,1,['access'],['accessing']
Security,"0 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 175 more. ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42560/testReport/proj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2715#issuecomment-425580897:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2715#issuecomment-425580897,1,['access'],['accessing']
Security,"47483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFuncti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411309441:1471,access,accessing,1471,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411309441,1,['access'],['accessing']
Security,"6015/console).; ### Errors:; - collect2: error: ld returned 1 exit status . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2448#issuecomment-411004184:1034,access,accessing,1034,https://root.cern,https://github.com/root-project/root/pull/2448#issuecomment-411004184,1,['access'],['accessing']
Security,"7:33: error: expected primary-expression before ‘&gt;’ token . And 62 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-401591340:2409,access,accessing,2409,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-401591340,1,['access'],['accessing']
Security,":AutoLoad&gt;: failure loading library libHistPainter.so for THistPainter . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395489730:1401,access,accessing,1401,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395489730,1,['access'],['accessing']
Security,"> > > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > > ; > > ; > > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.; > ; > Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?. Can you add to cling -fno-rtti? I don’t think this can be done automatically it is not automatic for compilers as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1193095859:965,expose,expose,965,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193095859,1,['expose'],['expose']
Security,"> > @bellenot, could you submit the two patches we have in this area to reviews.llvm.org?; > ; > @vgvassilev thanks for the review, but what do you mean? Should I do a PR? Where exactly? I'm not sure to understand what to do in reviews.llvm.org. The http://reviews.llvm.org is a website where llvm changes are reviewed before being merged (something like github for svn, historically). The idea is to propose the two changes we got in that header file (the warnings and the other issue that we had to fix with is_trivial) and ask somebody to review it and/or give us guidance. The whole process is not hard -- just get `git show -U9999 hash` and upload the patch. You can add me as a subscriber/reviewer and I will add some relevant people for reviewing it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7446#issuecomment-796556844:636,hash,hash,636,https://root.cern,https://github.com/root-project/root/pull/7446#issuecomment-796556844,1,['hash'],['hash']
Security,"> > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > ; > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well. Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1193060988:944,expose,expose,944,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060988,1,['expose'],['expose']
Security,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9301#issuecomment-973325971:64,expose,exposed,64,https://root.cern,https://github.com/root-project/root/pull/9301#issuecomment-973325971,1,['expose'],['exposed']
Security,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it?. If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6532#issuecomment-722648289:231,access,access,231,https://root.cern,https://github.com/root-project/root/pull/6532#issuecomment-722648289,1,['access'],['access']
Security,"> Although the ProgressBar won't be a progress bar when we don't know the number of events ... You're right, better name pending (`AddProgressIndicator`?). > It would actually be amazing if I could get access to the LoopManager, because then I could just register the callback using RLoopManager::RegisterCallback. Yes that's a great idea, there are actually several advantages:. - as you mention, in the callback you wouldn't have to discard a partially evaluated result anymore; - `AddProgressIndicator` wouldn't need to return anything, it can just do what it says without users having to deal with the returned object; - probably the biggest: we wouldn't have to do any magic to make sure that the method is called _on the head node_ (because if you call it on a `Filter`, now you are updating the progress bar every N _filtered_ entries) . Now -- of course we don't just expose the `RLoopManager` to _anyone_, but we trust you, so you can add a `ROOT::Internal::ExtractLoopManager` function as a friend of `RInterface` that just returns `interface.fLoopManager`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8675#issuecomment-880538021:202,access,access,202,https://root.cern,https://github.com/root-project/root/pull/8675#issuecomment-880538021,2,"['access', 'expose']","['access', 'expose']"
Security,"> And it seem that there is no ""Issues"" tab in this repository. I have got some suspicious places and > I'm not sure how to fix them. Indeed we only use github for merge request. Issues are being tracked in JIRA at:. https://sft.its.cern.ch/jira/issues/?jql=project%20%3D%20ROOT. To create an issue: https://sft.its.cern.ch/jira/secure/CreateIssue.jspa?pid=10010&issuetype=1. See also https://root.cern.ch/guidelines-submitting-bug",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/249#issuecomment-248249682:329,secur,secure,329,https://root.cern,https://github.com/root-project/root/pull/249#issuecomment-248249682,1,['secur'],['secure']
Security,"> As far as I can tell this requires the user code to be thread safe, which does not seem to be the case of the example. Yes the example is meant to be single threaded. If users run the analysis on multiple threads they have to make sure the callback can be called by multiple threads concurrently. > it is not clear whether the call back will see the global partial result or the partial result so far on the 'current' thread. No guarantees there: it's going to be a ""partial result"".; If it's ""thread-local partial"" or ""global partial"" depends on what each action's `PartialUpdate` method will do in practice. For some kind of actions it might be fine in terms of RAM and runtime to expose the ""global"" partial result, for others it could be an issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331171774:685,expose,expose,685,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331171774,1,['expose'],['expose']
Security,"> Can we simply add const TROOT *&GetROOTPtrRef(), in the source file of where gROOT is injected in the list of globals?. Question - should this function be public? ; And that about other gInterpreter and gClient?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3208#issuecomment-457718764:88,inject,injected,88,https://root.cern,https://github.com/root-project/root/pull/3208#issuecomment-457718764,1,['inject'],['injected']
Security,"> Hmmh, so you don't want to give me an active directory? :). For the moment there is no direct support of such feature with `RWebWindow`.; But can be provided - if really necessary. In my mind, solution with direct access of font files via `currentdir/` path is much clear.; And does not require any extra threads locking. You always can implement active directory - but does it necessary with fonts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2177936944:216,access,access,216,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2177936944,1,['access'],['access']
Security,"> I agree that we should use a ""proper"", existing option parsing library; I very much like that change! 50 lines less of our code is strictly better, hurray!; > ; > We should use that option parsing for all of ROOT's binaries. I'm extremely hesitant to select llvm's option parsing for that purpose: we want to hide llvm's symbols; only libCling and rootcling are able to access them. But that means we cannot use the same option parsing for all of ROOT - and we'll be back in an inconsistent state where everyone and their binary will roll their own. Using e.g. the head-only http://optionparser.sourceforge.net or https://github.com/jarro2783/cxxopts . root.exe argument parsing is a lot simpler (eg, we need to handle -l -b -q and hardly something more complex). The advantage of using `llvm::cl` in rootcling is that we can encapsulate the arguments in data structures which are compatible with cling. For instance, after rootcling parses the arguments it can call a future overload of `cling::Interpreter::Interpreter(llvm::cl...` where it will pass already the processed arguments. Currently we have to convert back to `const char **argv`. This would be a drawback if we use a library different than `llvm::cl`. In theory, we can make `llvm::cl` work with the argument parser of root.exe by compiling the symbols of libLLVMSupport with -fvisibility=hidden (or instruct the linker to hide them). This way we will not leak symbols outside. Having that said, the value of this PR is the refactoring itself and not the library we use. As long as the library we chose as flexible as the `llvm::cl` we can easily migrate away from it if needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4171#issuecomment-524868233:372,access,access,372,https://root.cern,https://github.com/root-project/root/pull/4171#issuecomment-524868233,1,['access'],['access']
Security,> I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear?. Can be done.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5066#issuecomment-592453596:161,sanitiz,sanitizer,161,https://root.cern,https://github.com/root-project/root/pull/5066#issuecomment-592453596,1,['sanitiz'],['sanitizer']
Security,"> I still think that the suffix Ptr is a bit misleading due to the fact that operator-> is/can-be a very heavy operation and as such we may want to consider TResultHandle. I think `TResultHandle` would suffer from the same problems as `TResultProxy`: the name is too generic, the average physicist will not know how to use it, it's not clear if I can make a `std::vector` of those, default construct one, assign one, copy.... `operator->` will be heavy for the first time the first result is accessed, and that is _the one thing_ to know about TDataFrame: event loop runs upon first access to one of the results.; Subsequent usages of `operator->` will be fast.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1855#issuecomment-381100053:492,access,accessed,492,https://root.cern,https://github.com/root-project/root/pull/1855#issuecomment-381100053,2,['access'],"['access', 'accessed']"
Security,"> I think TResultHandle would suffer from the same problems as TResultProxy: the name is too generic, the average physicist will not know how to use it, it's not clear if I can make a std::vector of those, default construct one, assign one, copy.... One could give the exact same argument against TResultPtr ;) .... One difference with a pointer is the life-time of the pointee. > the average physicist will not know how to use it,. A lot of the frameworks have the concept of 'Handle' already to indicate this kind of delay-loaded accessor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1855#issuecomment-381102689:532,access,accessor,532,https://root.cern,https://github.com/root-project/root/pull/1855#issuecomment-381102689,1,['access'],['accessor']
Security,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9271#issuecomment-968052222:944,secur,secure,944,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222,1,['secur'],['secure']
Security,"> In particular, I tried to add a trivial unit test file [...] and compiling as the other ones, i.e. linking it to [...] makes the sanitiser running the test still complain as above. Depending on how you compile it, you might get `-fsanitize=address` from the ROOT C++ flags. But in general yes, the libraries are sanitized and will operate no matter if your application itself is built with sanitizers or not. > I guess I could create a standalone hello-world C++ code and compile it with the sanitiser linking to ROOT as our unit test does and I should get the same report. Let me know if you need so. That would be as expected, so I don't think it's worth the effort. > Now, this behaviour (leaking just linking) should make it not too difficult to locate the issue. Do you do something [with globals or static variables](https://stackoverflow.com/a/8353892/14967071)? Or do you have [a `_init` and/or `_fini` function](https://stackoverflow.com/a/6412445/14967071)?. As explained before, what the AddressSanitizer is complaining about is well understood and it also doesn't explain growing memory usage when not interacting with ROOT. This latter is what needs a clear reproducer to dig out the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-1818478493:314,sanitiz,sanitized,314,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-1818478493,2,['sanitiz'],"['sanitized', 'sanitizers']"
Security,"> It is really simple to check what gets linked in with a debugger if you have the setup done already. If I can get ssh access to a node somewhere I can do that. Unfortunately I don't have a public instance where you get ssh into. I created a simple example that links against ROOT and a different LLVM version, that worked without issue. While doing that I noticed that by default everything is linked using the static libraries from LLVM. This is probably what we want?. In `llvm-config`, one needs to pass `--link-static`, and that's about it. Will try it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1666915077:120,access,access,120,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1666915077,1,['access'],['access']
Security,"> It is unclear whether havoc will break. Actually, it _is_ clear. A priori your implementation as-is can't work, but if it did, remember that e.g. Gaudi/Athena like to expose only the interfaces and not the actual classes, so with this, you kill their use case. You're roughly on the right path, though, but you have to make this an optional feature. I.e. track a boolean parameter, with a default value that keeps the old behavior, through the full chain, and only add the class name if a) it is possible (this you're missing even above) and b) it is requested. Works like a charm in cppyy (already released).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7290#issuecomment-786085845:169,expose,expose,169,https://root.cern,https://github.com/root-project/root/pull/7290#issuecomment-786085845,1,['expose'],['expose']
Security,"> Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields?. This is a very good point, I've only considered the reading side of things. I would be in favor of the last possibility and just completely disallow creating writers from models with registered subfields.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16693#issuecomment-2443706354:165,access,access,165,https://root.cern,https://github.com/root-project/root/pull/16693#issuecomment-2443706354,1,['access'],['access']
Security,> Note that concurrent access to different elements of a std::vector is guaranteed to be safe. Do you have a reference and/or clear explanation :) ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2708#issuecomment-425180877:23,access,access,23,https://root.cern,https://github.com/root-project/root/pull/2708#issuecomment-425180877,1,['access'],['access']
Security,"> Ok, let me know if you have other tests which you would like me to do. I was a bit surprised to learn that:. > > Thank you for the nice investigations. What are the next steps? I tried #13139 but that does not help us. I see a different memory profile, but the extra memory due to ROOT is stil around 70MB (even a bit more with that PR, AFAICT).; > ; > Is that with or without opening the file? My expectation is that `root.exe -l -b -q` will take a lot less rss. ping. > One more question for my understanding. Are those big vectors actually needed at all when reading a file? If not why aren't they swapped out to disk either implicitly via some madvise or by simply caching to disk the results? The latter might even give some startup advantage, assuming they are offsets to the pcms and they do not change (not the basic root ones, at least). They are not needed upon module loads. We tried to implement some sparse vectors to mitigate this issue. However, I feel like we did not have the persistence to make it work. That is, we can implement a lazy vector structure that behaves just like vector but the reserve operation does not allocate. Instead, we allocate slabs around the access pattern (we override the subscript operator, etc). This would help us avoid eager allocations and hopefully, depending on whether there is a clear access pattern to optimize things. Our implementation seems to be still [here](https://github.com/Teemperor/llvm/commit/a06b21cbc55c6d2f1d2bf6f39771411ccc17342b). Another easier thing to try is reviving https://reviews.llvm.org/D89749",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1629035353:1187,access,access,1187,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1629035353,2,['access'],['access']
Security,"> Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar?. The user complains about the error message, then I'm not sure changing the text of the message will help in this case. And the error is `ENOENT`, meaning the file doesn't exists, which is not necessarily true, so telling this is a system protected file is not even reflecting the reality on all OSes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14865#issuecomment-1973063708:112,access,access,112,https://root.cern,https://github.com/root-project/root/pull/14865#issuecomment-1973063708,1,['access'],['access']
Security,"> Tell me though: An RDF (= RNode I think?) doesn't take callbacks. I need a `RResultPtr`, correct? Do I have to attach a dummy result or did I miss something?. OK, I had a look, and it would actually be amazing if I could get access to the LoopManager, because then I could just register the callback using `RLoopManager::RegisterCallback` (cannot link to docs because undocumented functions don't get an anchor in doxygen, any more 🤷‍♂️ ).; I don't see a way to get to the [LoopManager](https://root.cern.ch/doc/master/classROOT_1_1Detail_1_1RDF_1_1RLoopManager.html), though. ... and it would be cool because I wouldn't need to throw away the payload of the resultptr, because I'm not using it anyway.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8675#issuecomment-880524867:227,access,access,227,https://root.cern,https://github.com/root-project/root/pull/8675#issuecomment-880524867,1,['access'],['access']
Security,"> Thanks Jonas! We might have to call some ROOT clean-up routine that is usually called by the ROOT-injected exit handler to make sure TFiles are closed correctly and similar. @pcanal might know if there is a simple way to do that. I think that's `gSystem->Exit(0)` that was used before. You can pass a second parameter (called `mode` and effectively undocumented AFAICT) that makes it call `_exit()` instead of `exit()`. However, I'm not sure if we need to close `TFile`s because the workers don't open them, the parent should handle them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7075#issuecomment-764677587:100,inject,injected,100,https://root.cern,https://github.com/root-project/root/pull/7075#issuecomment-764677587,1,['inject'],['injected']
Security,> Usability. The drawing options are the more common entity to be accessed. I will add a DrawAndGetDrawable in a future revision. Yes but it is counter intuitive ... Add a drawable and get back an option ... will have to see in tutorials what it looks like ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1130#issuecomment-334249466:66,access,accessed,66,https://root.cern,https://github.com/root-project/root/pull/1130#issuecomment-334249466,1,['access'],['accessed']
Security,"> We measured that sweeping a dataset with 59 files on eos within CERN network checking entries numbers in trees took ~.3s per file. Isn't this perf hit too large?. I am not 'too' worried about the user side (albeit, some TChain may have 1000s of files) but on the server side (i.e. trying to avoid a denial-of-services attack on the server). I still strongly recommend that we do not open all the files at once we 'stop'/'throttle' once you reach the number of task/threads you are going to have (then take a pause, start the actual tasks/jobs and then restart 'slowly' to get the rest of the information).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3051#issuecomment-442089455:301,denial-of-service,denial-of-services,301,https://root.cern,https://github.com/root-project/root/pull/3051#issuecomment-442089455,2,"['attack', 'denial-of-service']","['attack', 'denial-of-services']"
Security,"> While thinking about collisions and the index storage, one thought that crossed my mind is to template the index based on the index field type(s). I'm not sure if that's a good idea, one of the immediate question being ""do we want `RNTupleIndex<std::string>` and `RNTupleIndex<std::uint64_t>` to be different types?"" But still maybe something to consider, it might simplify the field value storage (if needed) and the entire hashing business... This is how I initially implemented it. Indeed it makes the index itself much more straightforward. However, when I started prototyping the actual join/unaligned friends it really didn't work without making that interface overly complicated so in the end I opted for a non-templated version. Perhaps there's some template trickery to still make it play nice with the foreseen interface (or allow for a slightly different but still simple enough interface), I will think about it for a bit.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15116#issuecomment-2285578132:427,hash,hashing,427,https://root.cern,https://github.com/root-project/root/pull/15116#issuecomment-2285578132,1,['hash'],['hashing']
Security,"> cling startup scripts are different from rootlogon.C and rootrc . rootrc is a config file while .clingrc is a regular cling script. cling startup scripts are executed also in invocation of standalone cling binary (not from root interpreter).; > ; > Question:; > ; > 1. Renaming `.cling_profile` and `.clingrc` with suffix `.C` ?; > ; > 2. Rename `.clingrc` to something else so that `.clingrc` can be reserved for cling config file in the future (if any)?; > Making it a config file instead of a cling script aligns with rootrc but not with bashrc, zshrc.; > ; > 3. Drop `.clingrc` for now and keep `.cling_profile` only ? If a cling script can easily tell if it is in interactive mode then keeping only 1 script makes sense. Otherwise it is better to keep both to align with bash and other interpreter inspired by bash design. By easily telling I mean a macro like `CLING_INTERACTIVE` or something simple that does not access `gCling`. How about a `~/.cling.d` folder where we glob all files and execute?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11262#issuecomment-1255476176:922,access,access,922,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1255476176,1,['access'],['access']
Security,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```; root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'; Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }; ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15891#issuecomment-2180639835:963,inject,injected,963,https://root.cern,https://github.com/root-project/root/pull/15891#issuecomment-2180639835,1,['inject'],['injected']
Security,> so if you could try to compare before/after by running something simple using data at CERN. CMS currently does not mount CERN's eos through fuse at FNAL and does not export (without grid certificate) any data.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1309267711:189,certificate,certificate,189,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1309267711,1,['certificate'],['certificate']
Security,"@Axel-Naumann @eguiraud One of my dataframe tests fails because of this:; ```; 27/155 Test #1500: roottest-root-dataframe-test_snapshot .........................***Failed 13.13 sec; ...; --- /srv/root/src/roottest/root/dataframe/test_snapshot.ref	Tue Mar 17 09:11:36 2020; +++ /srv/root/build/roottest/root/dataframe/test_snapshot.log	Fri Apr 23 09:56:40 2021; @@ -1,4 +1,5 @@; ; +cling::DynamicLibraryManager::loadLibrary():/srv/root/build/roottest/root/dataframe/par:cannotdynamicallyloadposition-independentexecutable; ----Nowwithatreeintherootdirectory; Branch:b1; Branch:b1_square. -- END OUTDIFF OUTPUT --; CMake Error at /srv/root/build/RootTestDriver.cmake:264 (message):; compare 'stdout' error: 1; ```; Somehow ROOT should address the case of binaries built with -fpie, as at least Gentoo has enabled that by default in GCC to improve security. Other distros may do the same in the future. See e.g. https://docs.fedoraproject.org/en-US/packaging-guidelines/#_pie",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-825474655:845,secur,security,845,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-825474655,1,['secur'],['security']
Security,@bellenot : The new executables are signed. ; ![image](https://github.com/root-project/root/assets/73365079/89bf755e-dfd3-4bcd-a70f-e58d6d23b5d4); But they still present an issue. The certificate used to sign was not issued by a trusted root authority. ; ![image](https://github.com/root-project/root/assets/73365079/e101fbfa-4bad-473d-b197-e274431d1147); Code signing certificates must be provided by a Windows approved certificate authority. [They have them listed here](https://learn.microsoft.com/en-us/windows-hardware/drivers/dashboard/code-signing-cert-manage#get-or-renew-a-code-signing-certificate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15896#issuecomment-2213690136:184,certificate,certificate,184,https://root.cern,https://github.com/root-project/root/issues/15896#issuecomment-2213690136,4,['certificate'],"['certificate', 'certificates']"
Security,"@dpiparo , we could start some simple APIs and I hope we could validate that ~3% does be caused by TTaskGroup.Run.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-330704409:63,validat,validate,63,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-330704409,1,['validat'],['validate']
Security,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9012#issuecomment-922713482:313,access,access,313,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482,1,['access'],['access']
Security,@vepadulano . All information is in the description of the PR.; THttpServer implements different kind of http requests.; Most of them described here:. https://root.cern/root/htmldoc/guides/HttpServer/HttpServer.html#data-access-from-command-shell. This PR adds one more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14614#issuecomment-1931846997:221,access,access-from-command-shell,221,https://root.cern,https://github.com/root-project/root/pull/14614#issuecomment-1931846997,1,['access'],['access-from-command-shell']
Security,"@vgvassilev In theory, everybody with commit access can review and approve patches. In practice Lang's commits didn't touch the instruction selection, and I'd really prefer to get feedback from an expert on this. I'll ping the patch probably tomorrow, people might have been off last week.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7757#issuecomment-813881052:45,access,access,45,https://root.cern,https://github.com/root-project/root/pull/7757#issuecomment-813881052,1,['access'],['access']
Security,"@vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue https://github.com/root-project/root/issues/9312 to keep track.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9301#issuecomment-972998223:62,expose,exposed,62,https://root.cern,https://github.com/root-project/root/pull/9301#issuecomment-972998223,1,['expose'],['exposed']
Security,"A priori Python code is protected by the GIL, so this access wouldn't be an issue for threaded code (GIL release is ever only on the actual call into C++, not on any setup code to reach that point). Additionally, this is a workaround for ROOT/meta's buggy handling of enums. Since that is now fixed, this particular workaround is no longer necessary and can simply be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6566#issuecomment-704347919:54,access,access,54,https://root.cern,https://github.com/root-project/root/issues/6566#issuecomment-704347919,1,['access'],['access']
Security,"Apologies for joining the party only after it's over. My opinion:. `ptr` is fine because I don't see how (regular) people would notice / care *when* the cost occurs, this should be opaque to them. If they ever notice, they can be told and learn. `TTree::Draw()` sort of suffers from a similar mismatch of interface announcement (""register in the pad"") and runtime cost that `ptr` has in this case. And we survived. I find the argument convincing that `ptr`, unlike `handle`, conveys the usage: `handle` often means ""opaque thing that you don't know what to do with but someone else will"" and is thus not very helpful for interfaces. I find the usage cost for separating trigger and value access too high.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1855#issuecomment-381906840:688,access,access,688,https://root.cern,https://github.com/root-project/root/pull/1855#issuecomment-381906840,1,['access'],['access']
Security,"Applied patch:; ```.diff; --- interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp~	2023-01-06 05:04:43.000000000 -0600; +++ interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp	2023-01-10 13:21:47.554190854 -0600; @@ -26,6 +26,8 @@; using namespace clang;; using namespace serialization;; ; +#include <cstdio>; +; //===----------------------------------------------------------------------===//; // Declaration serialization; //===----------------------------------------------------------------------===//; @@ -361,6 +363,8 @@; Record.push_back(D->isTopLevelDeclInObjCContainer());; Record.push_back(D->getAccess());; Record.push_back(D->isModulePrivate());; + D->dump();; + if (D->getOwningModule()) fprintf(stderr, ""D->getOwningModule()->Name=%s"", D->getOwningModule()->Name.c_str());; Record.push_back(Writer.getSubmoduleID(D->getOwningModule()));; ; // If this declaration injected a name into a context different from its; ```; with result:; ```ConsoleSession; <snip/>; LinkageSpecDecl 0xbf7b930 <<module-includes>:1:1, line:3:1> line:1:8 C; |-CXXRecordDecl 0xbf7b988 </usr/include/xlocale.h:27:9, line:39:1> line:27:16 in xlocale.h hidden struct __locale_struct definition; | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal; | | |-DefaultConstructor exists trivial needs_implicit; | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveConstructor exists simple trivial needs_implicit; | | |-CopyAssignment simple trivial has_const_param needs_implicit implicit_has_const_param; | | |-MoveAssignment exists simple trivial needs_implicit; | | `-Destructor simple irrelevant trivial needs_implicit; | |-CXXRecordDecl 0xbf7bad0 <col:9, col:16> col:16 in xlocale.h hidden implicit struct __locale_struct; | |-CXXRecordDecl 0xbf7bb88 parent 0xbf3f498 <line:30:3, col:10> col:10 in xlocale.h hidden struct __locale_data; | |-FieldDecl 0xbf7be08 <col:3, col:37> col:2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377744663:911,inject,injected,911,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663,1,['inject'],['injected']
Security,"Back to an alternative... Myself, I do the following to find out whether a C++ class had an `operator[]`: https://github.com/wlav/CPyCppyy/blob/master/src/Pythonize.cxx#L38 , but it may not work for you as-is, b/c an important point of that code is to not search for `__getitem__` in base classes, which I think you do want. Maybe something much simpler would be something along these lines:. ```; import cppyy; import cppyy.types. cppyy.cppdef(""""""\; struct MyStruct1 {};; struct MyStruct2 {; int operator[](int) { return 42; }; };. #include ""CPyCppyy/API.h"". bool CheckSequence(PyObject* obj, PyObject* base) {; if (CPyCppyy::Instance_Check(obj)) {; PyObject* gi1 = PyObject_GetAttrString((PyObject*)Py_TYPE(obj), ""__getitem__"");; PyObject* gi2 = PyObject_GetAttrString(base, ""__getitem__"");; bool ret = gi1 && gi1 != gi2;; Py_XDECREF(gi2);; Py_XDECREF(gi1);; return ret;; }; return false;; }; """"""). print(cppyy.gbl.CheckSequence(cppyy.gbl.MyStruct1(), cppyy.types.Instance)); print(cppyy.gbl.CheckSequence(cppyy.gbl.MyStruct2(), cppyy.types.Instance)); ```. (Where you'd import `cppyy.types.Instance` on the C-side, not pass it as an argument, but this Q&D code was simpler.). This can be greatly simplified/sped up, by explicitly adding `op_getitem` as a method for `tp_as_sequence` and then do a straight-up pointer comparison. Can probably also expose it as a `CPyCppyy::Sequence_Check` in the API.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15161#issuecomment-2058191558:1350,expose,expose,1350,https://root.cern,https://github.com/root-project/root/issues/15161#issuecomment-2058191558,1,['expose'],['expose']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2113#issuecomment-393289526:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2113#issuecomment-393289526,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28689/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-394262891:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-394262891,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28729/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2130#issuecomment-394298233:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2130#issuecomment-394298233,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1973#issuecomment-394348081:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/1973#issuecomment-394348081,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28889/console).; ### Errors:; - collect2: error: ld returned 1 exit status . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2141#issuecomment-394388968:1034,access,accessing,1034,https://root.cern,https://github.com/root-project/root/pull/2141#issuecomment-394388968,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31336/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2251#issuecomment-400304937:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2251#issuecomment-400304937,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31399/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400351100:750,access,accessing,750,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400351100,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31493/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2260#issuecomment-400865752:750,access,accessing,750,https://root.cern,https://github.com/root-project/root/pull/2260#issuecomment-400865752,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32357/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319#issuecomment-405050428:779,access,accessing,779,https://root.cern,https://github.com/root-project/root/pull/2319#issuecomment-405050428,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32672/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319#issuecomment-405627002:750,access,accessing,750,https://root.cern,https://github.com/root-project/root/pull/2319#issuecomment-405627002,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32748/console).; ### Errors:; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/src/TClingUtils.cxx:3377:82: error: ‘interpreter’ was not declared in this scope . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2331#issuecomment-405843696:1138,access,accessing,1138,https://root.cern,https://github.com/root-project/root/pull/2331#issuecomment-405843696,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33965/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2381#issuecomment-408677038:750,access,accessing,750,https://root.cern,https://github.com/root-project/root/pull/2381#issuecomment-408677038,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:750,access,accessing,750,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409277662:750,access,accessing,750,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409277662,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34737/console).; ### Errors:; - ERROR in cling::CIFactory::createCI(): ; - Error: Error loading the default header files. . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-409554854:1081,access,accessing,1081,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-409554854,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35709/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2423#issuecomment-410609447:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2423#issuecomment-410609447,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411201963:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411201963,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411309441:506,access,accessing,506,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411309441,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36679/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-411746107:750,access,accessing,750,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-411746107,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37008/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-412504856:974,access,accessing,974,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-412504856,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37035/console).; ### Errors:; - ERROR in cling::CIFactory::createCI(): ; - Error: Error loading the default header files. . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-412837784:1081,access,accessing,1081,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-412837784,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37062/console).; ### Errors:; - ERROR in cling::CIFactory::createCI(): ; - Error: Error loading the default header files. . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-412940246:1081,access,accessing,1081,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-412940246,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37071/console).; ### Errors:; - ERROR in cling::CIFactory::createCI(): ; - Error: Error loading the default header files. . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-412957016:1081,access,accessing,1081,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-412957016,1,['access'],['accessing']
Security,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43493/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:186:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2768#issuecomment-427830089:750,access,accessing,750,https://root.cern,https://github.com/root-project/root/pull/2768#issuecomment-427830089,1,['access'],['accessing']
Security,"Can we simply add `const TROOT *&GetROOTPtrRef()`, in the source file of where `gROOT` is injected in the list of globals?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3208#issuecomment-457495268:90,inject,injected,90,https://root.cern,https://github.com/root-project/root/pull/3208#issuecomment-457495268,1,['inject'],['injected']
Security,"Correct - and I wanted to start small (`vector`, `string`) and see what roottest has to say about that. I did expect some test failures?! That would guide me what else we should expose. Which makes me wonder whether this works at all - nope, it doesn't. Let me fix that...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11027#issuecomment-1192710542:178,expose,expose,178,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1192710542,1,['expose'],['expose']
Security,"DFInterface.hxx:660:4: error: no template named 'RResultPtr' . And 10 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2232#issuecomment-399775824:2328,access,accessing,2328,https://root.cern,https://github.com/root-project/root/pull/2232#issuecomment-399775824,1,['access'],['accessing']
Security,"Dear @lgray,. Thanks a lot for your input! Let me try to comment on the various parts. > I think optional and union types are very convenient here. Absolutely, I agree. Thank you also for the info about the data validation in coffea. The decision on the keys that need a union type should also be part of this formalization effort. > Decide what term to use instead of ""groups"" (dataset is probably best). I see there are these two schools of thought but I cannot grasp how much of the community leans towards one vs the other. Do you think we should poll the larger audience at some point, for this and probably other questions? One other option could be just accepting both ""datasets"" and ""samples"" as the top-level key in the JSON object. > Cover TTree but plan for RNTuple support (metadata should not care about file formats, your program does). Indeed, this point was more directed towards us developers rather than user-facing. Metadata will definitely be orthogonal to the data format. > Allowing them opens up many possibilities, including mixed modes and joins across rather heterogenous datasets. This is an interesting comment, something that I hadn't put too much thought into. I think that it is much related with the other comment regarding joins. Mixed modes sounds intriguing although I can't see a clear path for its implementation in the I/O layer, rather we may be better off doing this at the analysis tool layer directly. In general, the usecase of reading the output of some ML pipeline during the execution of the analysis is definitely something we want to address. For what concerns this specification, the easy part is just deciding for something more generic than ""treenames"" when specifying these other data formats; the trickier part is deciding how these other input data should be read. See the next comment for more discussion about this. > The more general term for this is a a join, and I think you should use that concept here rather than the precise concept of fri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11624#issuecomment-1297411993:212,validat,validation,212,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1297411993,1,['validat'],['validation']
Security,"Discussed and checked the problem with @pcanal . The root cause is that `TTree::CopyAddresses` has an implicit assumption that the input and output branches are of the same kind, while in this case we have a `TBranchElement` in input and a simple `TBranch` in output. In particular, `TBranchElement::SetAddress` would apply a correction to the wrong offset returned by `TBranchElement::GetAddress`, but `TBranch::SetAddress` does not. This bug is absolutely terrible: if the input dataset consists of multiple trees, starting from the second tree data members of types that were saved as TBranchElements are written out wrongly by Snapshot. The plan is the following:. 1. add a check in `TTree::CopyAddresses` that input and output branches are of the same kind, print an error otherwise; 2. refactor `Snapshot` so that instead of relying on `TChain::AddClone` and `TTree::CopyAddresses` to update the addresses of the output branches we instead reset the branches manually based on the addresses provided by TTreeReaderValue access -- we'll use the `TNotify` mechanism to reset the branches every time TChain switches input tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8295#issuecomment-852277296:1026,access,access,1026,https://root.cern,https://github.com/root-project/root/issues/8295#issuecomment-852277296,1,['access'],['access']
Security,"From a user point of view, the text in the ROOT manual now seems sufficiently clear:. - Behaviour for non-TTree objects [1]:. ""By default, existing objects are not replaced when writing new objects with the same name. Instead, a new namecycle is created, denoted by ;2, ;3, etc. When retrieving the object from the file, ROOT will automatically pick the highest namecycle. Some objects, such as histograms, automatically register themselves with the current TDirectory (e.g. the last TFile opened): these objects will appear as OBJ entries, without a namecycle. See also → [Object ownership](https://root.cern/manual/object_ownership). For the particular case of TTree, cycles only store metadata, see [Baskets, clusters and the tree header](https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header)."". - Behaviour for TTree objects [2]:. ""Multiple updates of these headers can often be found in files (treename;1, treename;2 etc, called cycles, see → [Opening and inspecting a ROOT file](https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file)). Only the last one (also accessible as treename) knows about all written baskets."". [1] https://root.cern/manual/root_files/#opening-and-inspecting-a-root-file; [2] https://root.cern/manual/trees/#baskets-clusters-and-the-tree-header",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14584#issuecomment-1943874457:1100,access,accessible,1100,https://root.cern,https://github.com/root-project/root/issues/14584#issuecomment-1943874457,1,['access'],['accessible']
Security,"Hi - this is an excellent start but I'd like to offer a few considerations given that not everyone uses root files these days. Specifically, friend trees are not a widely accepted concept outside of TTrees and RNtuple. It is, however, easy to abstract away from this so that this metadata specification is more universal. In coffea, we didn't go all the way to formalizing it in a schema since there are many details but you can see the basic validation we do here:; https://github.com/CoffeaTeam/coffea/blob/master/coffea/processor/executor.py#L1353; We allow forms like:; ```; fileset = { ""dataset"" : [""some"", ""list"", ""of"", ""files""], ...}; # and; fileset = { ""dataset"": { ""files"": [""file1"", ""file2"", ...], ""treename"": ""Events"", ""metadata"": { ""stuff"": ""about stuff""}, ...}, { .... } }; ```; depending on user need.; I think optional and union types are very convenient here since not every user will need or want to specify all components of the full schema on each use (but uniformizing the description when needed is very important). . To repeat from above here is the suggested metadata requirements (with annotations).; """"""; This new standard schema should support a few key features of the definition of a dataset:. * Specify groups of several input files, each with associated metadata; * Decide what term to use instead of ""groups"" (dataset is probably best); * Cover TTree but plan for RNTuple support (metadata should not care about file formats, your program does); * Should support friend trees per group *** (see below); * Should support entry ranges per group (why? this makes little operational sense from the POV of an analyst); * No indexed friend trees (at least for now) *** (also); """"""; This specification of requirements mixes things that are describing the data (metadata) and and how to react to it (something in a program, not part of the schema). I believe a clean factorization along these lines is very important to creating a well-adopted schema if you intend to develop a ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11624#issuecomment-1293743624:443,validat,validation,443,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1293743624,1,['validat'],['validation']
Security,"Hi @AlkaidCheng ,. Thanks for reaching out! I am not sure I understand where the problem stands. You are purposely injecting a different namespace at runtime, so I don't see how the package can act in order to prevent the wrong namespace being used. The error is unfortunately not clear as to which call site is provoking the lookup to `ROOT.Math.Internal`. Judging by your short snippet, I can imagine that one place could be [here](https://github.com/root-project/root/blob/a29e81cb1cd217ca2096a44d01fb273e085b4e8b/bindings/experimental/distrdf/python/DistRDF/HeadNode.py#L457), but as you can see the correct full namespace is being called there. Can you give more context as to what is your use case so I can better understand how to help?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15035#issuecomment-2015329409:115,inject,injecting,115,https://root.cern,https://github.com/root-project/root/issues/15035#issuecomment-2015329409,1,['inject'],['injecting']
Security,"Hi @Harshalzzzzzzz ,; ROOT has a high-level data analysis interface called [RDataFrame](https://root.cern/doc/master/classROOT_1_1RDataFrame.html), you can take a look at the docs and try reading and running some of the tutorials [here](https://root.cern/doc/master/group__tutorial__dataframe.html). `RDataFrame` returns results wrapped in the [RResultPtr](https://root.cern/doc/master/classROOT_1_1RDF_1_1RResultPtr.html) type, through which we implement lazy execution (data processing is triggered when a user accesses the contents of a `RResultPtr`, _not_ when they request the result). RResultPtr has interface and semantics similar to [std::shared_ptr](https://en.cppreference.com/w/cpp/memory/shared_ptr), but currently it's missing a way to release ownership of its contents. `RResultPtr<T>::Release` is a simple method that would mimic the semantics of `std::shared_ptr::release`: it must return a `T*` and empty the `RResultPtr`. What needs to be done concretely:. - [x] add the `RResultPtr::Release` method in RResultPtr.hxx. It should be implemented in terms of `fObjPtr.release()` and it should also set `fActionPtr` and `fLoopManager` to null; - [x] add tests for the feature in `tree/dataframe/test/dataframe_resptr.cxx`, in particular making sure that `Release` and the ResultPtr's move-constructor have consistent behavior; - [x] add logic to the current method `RResultPtr::GetValue` to throw an exception if it's called on a null `RResultPtr`. Thank you in advance for any contribution, and feel free to ask more questions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7047#issuecomment-771507725:513,access,accesses,513,https://root.cern,https://github.com/root-project/root/issues/7047#issuecomment-771507725,1,['access'],['accesses']
Security,"Hi @VanyaBelyaev ,; I ran your reproducer with LCG97apython3(ROOT 6.20/06) and LCG98python3(ROOT 6.22/00).; With the latter it seems that the call to `dill.dumps` is executed but I get a different error with a long stacktrace, I report the main parts:; ```; ...; input_line_38:16:29: error: allocating an object of abstract class type 'TInterpreter'; *ret = new (arena) TInterpreter[nary];; ^; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ...; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: TInterpreter; Error in <TClass::New>: cannot create object of class TInterpreter; Error in <TBufferFile::ReadObject>: could not create object of class TInterpreter; TBufferFile::WriteObjectAny:0: RuntimeWarning: since TROOT has no public constructor; 	which can be called without argument, objects of this class; 	can not be read with the current library. You will need to; 	add a default constructor before attempting to read it. <class cppyy.gbl.TH1D at 0x560bc237aa20>. Error in atexit._run_exitfuncs:; Traceback (most recent call last):; File ""/home/vpadulan/Programs/rootproject/rootinstall/v6-22-00-patches/lib/ROOT/__init__.py"", line 119, in cleanup; backend.gROOT.EndOfProcessCleanups(); ReferenceError: attempt to access a null-pointer; ```. The line `<class cppyy.gbl.TH1D at 0x560bc237aa20>` is there because I added a print to your reproducer just to check that `dill.loads` is executed. Actually this is the simplest command to reproduce the same stacktrace:. ```; python -c ""import ROOT; import dill; print(type(dill.loads(dill.dumps(ROOT.TH1D()))))""; ```. So it's possible that something in the new pyroot (default since 6.22) fixes the `dill` issue but triggers this other error.; @etejedor any thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370#issuecomment-696687077:1381,access,access,1381,https://root.cern,https://github.com/root-project/root/issues/6370#issuecomment-696687077,1,['access'],['access']
Security,"Hi @couet ,. > so it won't be really useful. Yes. But the size is set during the execution of GUI. > By chance do you have a simple reproducer ?. Simple -- no. But in a scope of elimination of this issue I can provide an access to a private github repository with these codes.; The application itself is not large. Would that work for you?. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-692118820:221,access,access,221,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-692118820,1,['access'],['access']
Security,"Hi @ktf , the travis log could be clearer, but it indicates how to run the same command it does:. ```; Running clang-format-3.9 against branch master, with hash 7554be95715898fa2a93528254ce3646764ab3d2; clang-format failed.; To reproduce it locally please run; 	git checkout master; 	git-clang-format --commit 7554be95715898fa2a93528254ce3646764ab3d2 --diff --binary /usr/local/clang-5.0.0/bin/clang-format; ```. This system is not perfect and you might have to adapt hashes/paths to your case, but this is it.; If you do not get any corrections you might somehow be overriding ROOT's clang-format configuration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-371771090:156,hash,hash,156,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-371771090,2,['hash'],"['hash', 'hashes']"
Security,"Hi @ktf, as discussed yesterday the test failures are related to an issue in our incremental builds where Clad is not rebuilt after changes to the Clang headers. This leads to very weird symptoms because some ""stale"" functions access memory where they shouldn't and so on. I was hit by this problem already twice and it's tracked in https://github.com/root-project/root/issues/7977, so one would suppose that I remember by now but evidently I didn't... Apologies for the confusion and the delay it caused in integrating this. I've now synchronized the changes to https://github.com/root-project/llvm-project/releases/tag/ROOT-llvm16-20240116-01, moving the header to `clang/include/clang/Basic` as mentioned yesterday to keep the ability to build against a vanilla version of LLVM). @vgvassilev I put the commit only into `ROOT-llvm16`, not `cling-llvm16` because I think it's not that relevant for Cling standalone. Let me know if you disagree and I can of course move it. Some measurements of this change on my machine: for a simple `./bin/root.exe -q`, it reduces the maximum RSS from 217MB to 192MB and for `./bin/root.exe -q -e ""std::vector<int> v"" -e ""return 0;""` from 255MB to 230MB :clap:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1893308958:227,access,access,227,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1893308958,1,['access'],['access']
Security,"Hi Will!. We try to bring the behavior of the `RooAbsCollection`s closer to the STL containers like [std::vector](https://en.cppreference.com/w/cpp/container/vector). This means that `operator[]` should simply access an element as quickly as possible without any bounds checking for no overhead. That's why it changed from 6.24 to master. Only the `at()` member should do the bounds checking. I still have some work to do here because its behavior is inconsistent with `std::vector` (it returns a `nullptr` if the bounds check fails). So bringing the element-accessing behavior closer to Python behavior would unfortunately bring us further away from the STL behavior, and I would advise against the suggested change. However, I would agree that on the pyROOT side, the `RooAbsCollections` should behave more pythonic and we should absolutely implement a pythonization to support element access from the back with negative indices!. Is that a fair compromise? Did you intend to use the negative indices in C++?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8174#issuecomment-842217657:210,access,access,210,https://root.cern,https://github.com/root-project/root/pull/8174#issuecomment-842217657,3,['access'],"['access', 'accessing']"
Security,"Hi there,. OK, I think that I have found the culprit, but I don't understand the reasons. The main difference of our current 'minitree production' jobs this round is that we included a build of the MCFM physics generator with the build of our analysis code and we use it while running to calculate physics matrix elements for each event. . So to test this, I rebuilt our analysis code without building MCFM, and of course no longer calculate the matrix elements. I submitted this to the BNL site, and we read the files fine:. H4lAnalRun2 INFO processEvents: try to open file: root://dcgftp.usatlas.bnl.gov:1096//pnfs/usatlas.bnl.gov/BNLT0D1/rucio/mc16_13TeV/84/1f/DAOD_HIGG2D1.23315636._000001.pool.root.1; H4lAnalRun2 INFO processEvents: called TFile Open ; H4lAnalRun2 INFO processEvents - opened file 0 root://dcgftp.usatlas.bnl.gov:1096//pnfs/usatlas.bnl.gov/BNLT0D1/rucio/mc16_13TeV/84/1f/DAOD_HIGG2D1.23315636._000001.pool.root.1; H4lAnalRun2 INFO notifyNewFile: Entering. which as you may remember is the TFile::Open on a file which would use xrootd access. The job continues fine, reading 6 files, as one would expect. Now there is no matrix element calculated before we start reading the events. So it must be that somehow linking in the MCFM libraries causes problems for calling the gethostname. I must admit that I have no idea how/why this would 'interfere', since MCFM is not run at all before the TFile::Open. . So I think that we can let this bug report rest for now. If anyone might have ideas on how to check or fix the MCFM problem, suggestions are welcome. But I no longer think that xrootd has a problem. This is clearly a problem in how we have set up our client code. Thanks all for your time spent on this!. see you, RD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760749391:1057,access,access,1057,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760749391,1,['access'],['access']
Security,"Hi, Danilo. I missed the inheritance chain comment the first time, although I seriously considered your feedback. My justification for changing the executors in 6.12 is that If we can reduce the damage to user code (e.g. reducing the time a soon to be changed interface is exposed and providing the new one) we should go for it. But I'm not taking a hard stance on this and that's why I opened the PR, to discuss it :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1312#issuecomment-343753485:273,expose,exposed,273,https://root.cern,https://github.com/root-project/root/pull/1312#issuecomment-343753485,1,['expose'],['exposed']
Security,"Hi,. I started to take a look to this issue: the boundary check is not performed by the `TH1` methods that access a bin, e.g., `TH1C h(""h"","""",10,0,10); h.AddBinContent(12312312); ` and it can lead to undefined behavior (there is a piece of memory spoiled by this action). After reading the methods of TH1S, TH1I, TH1F, TH1D that access a bin content I can say:; * Each histogram class derives from the corresponding TArray class, e.g., TH1F derives from TArrayF; * Internally, the access to the bin is done _a la C_, straight to the element of the array , e.g. `fArray[nbin]` ; * The boundary check is already implemented for the methods `TArray::operator()[]` . A potential solution would be to use `TArray::operator()[]`, which actually check the boundary of the array. Another solution could be a simple `if` to check of the boundary without using the `TArray` features. . It is likely that this methods `SetBin*`, `AddBin*` may be called quite often, and such boundary check could have a great impact in performance. Is there experience of such case? @lmoneta , may I ask for your advice on this issue?. Best,; Alvaro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14575#issuecomment-1940996892:107,access,access,107,https://root.cern,https://github.com/root-project/root/issues/14575#issuecomment-1940996892,3,['access'],['access']
Security,"Hi,. On Thursday 2015-09-03 10:56, xantares wrote:. > Forgive me but your objections do not seem rock-solid:; > - '""distutils.sysconfig"" is far from robust as claimed' : afaik it; > works very well from 2.6-2.7, 3.1,3.2, 3.3 to 3.4. sure, on Linux. Did you try all main platforms? (And do add at least p2.5,; as that for sure is still in use.). > - ""package as a whole gets split, which risks that one part gets updated; > whereas another doesn't"": how would that be possible for users ? a; > decent package manager should handle that well. A package manager can install wherever it wants and can make its own; adjustment (simply copy over the two files, or put symlinks); this will; affect users building from source. I don't worry about package managers,; only about the latter users. As to 'how': the common case mixing; installations (e.g. from packagers and building from source), versions; (different pythons), system upgrades (that wipe out site-packages), or; simply a user doing 'rm -rf' for only half the installation. Users are; very, very inventive in creating trouble. :P None of that if all of ROOT; is kept in a single directory. So the only upside there seems to be is removing of this teeny-weeny; inconvenience of having to setup PYTHONPATH if you install in /usr/local.; But A) most from-source builders don't do that, they use bin/thisroot.sh,; which sets up PYTHONPATH; and B) installing in /usr/local is not; recommended to begin with, b/c of the same problem with remnants. Debugging a setup problem is very time consuming and frustrating: the; error messages are spurious and only occur on the user's machine to which; I have no access. In sum, I see no upside to speak of, but do see enormous downsides. And; if you really believe otherwise: sign that blood contract. Best regards,. ## Wim. WLavrijsen@lbl.gov -- +1 (510) 486 6411 -- www.lavrijsen.net",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/73#issuecomment-137538771:1653,access,access,1653,https://root.cern,https://github.com/root-project/root/pull/73#issuecomment-137538771,1,['access'],['access']
Security,"Hi,. very last time and then I give up ... > B) of course, users shouldn't install anything to /usr[/local] without; > using package management. But they do. > but it will simplify packaging too by not having to install an ugly; > script somewhere that sets PYTHONPATH. Ugly scripts that are seldom seen. I care more about humans than computers.; Additionally, the removal scripts can be simpler, as the package manager; knows where it put what, rather than the package stuffing portions in; different places, so I'd say its a wash. > As for the downsides, I think this solution is just simpler (not; > mentioning cleaner), maybe this will get you less bug reports. Straight of the bat, the whole nightly build system would roll over and; all developers that use cmake (not me, luckily) would have to change their; workflow. Why? B/c most of these setups are 1 python installation and; multiple ROOT installations, or different users for both so no access; rights to site packages. Add that packagers for LCG experiments now need; to know that ROOT puts stuff in $ROOTSYS and in $PYTHONHOME and fix what; they pick up from where. For that matter, I think there will be far more; 'ugly scripts' being created here to work around the mess this would add,; that I dare claim that even that argument of yours holds no water. Like I said, this is my last word on it. It's not worth my time if you; refuse to look beyond that one use case. Best regards,. ## Wim. WLavrijsen@lbl.gov -- +1 (510) 486 6411 -- www.lavrijsen.net",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/73#issuecomment-139309263:949,access,access,949,https://root.cern,https://github.com/root-project/root/pull/73#issuecomment-139309263,1,['access'],['access']
Security,"Hi,; thank you very much, that you spend time on this!. I do not understand some things:; * In the Doc the packages that do need internet access are usually named - this does not seem to be correct; * Furthermore, all packages that need internet access should be turned off in installation by default - they are not; * I think it is a difference if a system is cut off from the internet by a firewall, or if a system has no network (maybe that's why cmake does not detect it properly?); * I do not understand why I have to make -Dsuchalognoption to make a simple basic installation. If you can't put out that packages from the default installation and if cmake can't detect that there is not valid connection and if you do not want to make an extra option please: write a chapter in the docs what you have to do in case you want to compile on a local system. Thanks; Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-864610580:138,access,access,138,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-864610580,3,"['access', 'firewall']","['access', 'firewall']"
Security,I agree that it would be best for users to have all functions in one place. Menu access to that place should be good and clear though.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7440#issuecomment-801758247:81,access,access,81,https://root.cern,https://github.com/root-project/root/issues/7440#issuecomment-801758247,1,['access'],['access']
Security,I appreciate the build option! Though I'm a little concerned that the name of the build option is not self explanatory enough for everyone. Why not `-Daddress-sanitizer` or so to make it very clear?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5066#issuecomment-592428824:159,sanitiz,sanitizer,159,https://root.cern,https://github.com/root-project/root/pull/5066#issuecomment-592428824,1,['sanitiz'],['sanitizer']
Security,"I had a look ant it seems very nice. About the discrepancy between `REntry::Get` and `RNTupleModel::MakeField`, one may argue that `MakeField` might return a raw pointer too as the memory of the field is owned by the model. OTOH, while it's kind of easy to keep track of the lifetime of an `REntry` (I get it, I use it, I drop it), it seems more difficult to keep track of `RNTupleModel` lifetime, which is bound to the lifetime of `RNTupleWriter`.; Using raw pointers from `MakeField` is fine if we assume that the writer of the code only accesses the fields within the scope of `RNTupleWriter` (but the fields are accessible before the writer is created... more confusing). My personal opinion is that the `CreateEntry` way is the best option for the single thread case too:; - I define a model; - create a writer based on the model; - get the *buffer* (`REntry`) to write to (one per thread, for example, even if I have only one thread); - commit the *buffer* to the writer. In this way I own the `REntry`, but it has a layout in memory that is directly understood by the serialization process without the need of extra copies. We can also think of a way of constructing the writer from an *inlined* model, without the need for repeated calls to `MakeField`. Something like:; ```cpp; auto ntuple = RNTupleWriter::Recreate({; Field<std::uint32_t>(""id""),; Field<std::vector<float>>(""vpx""),; Field<std::vector<float>>(""vpy""),; Field<std::vector<float>>(""vpz""); }, ""NTuple"", kNTupleFileName);. auto entry = ntuple->CreateEntry();; // cache the pointer for faster access in single thread,; // but I could use TLS (or a framework equivalent) for multithreading; auto& vpx = *entry->Get<std::vector<float>>(""vpx"");; for(auto& event: all_events) {; vpx.clear();; vpx.push_back(42.);; ntuple->Fill(entry); // I would prefer ntuple->Write(entry) but it's a matter of taste; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8688#issuecomment-883396155:540,access,accesses,540,https://root.cern,https://github.com/root-project/root/pull/8688#issuecomment-883396155,3,['access'],"['access', 'accesses', 'accessible']"
Security,"I have not yet tried building llvm. Will try later this week. nvc++ has an implementation for std::par which allows seamless execution of both CPUs and NVIDIA GPUs (depending on a compile time flag). This could be a huge win for GPU portability (once other manufactures create the AMD/Intel backends), and allows much simpler user access to GPUs without having to learn CUDA (or hip, dpc++, etc). I was trying to compile some parts of a project with gcc and the bits that use std::par with nvc++, but immediately got some runtime segfaults at startup, so tried to compile the whole thing (including ROOT) with nvc++.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9036#issuecomment-933532217:331,access,access,331,https://root.cern,https://github.com/root-project/root/issues/9036#issuecomment-933532217,1,['access'],['access']
Security,"I think we gain by having in 6.28 to expose this to the users. This will fix issues happening with fits using the `G` option (external gradient) and in addition, will give us more feedback on using an external Hessian computation. This will be certainly useful. ; In addition, the PR, improves significantly the Minuit2/Fumili algorithm, especially for the case of binned likelihood fit. I think also this is worth having in 6.28.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11755#issuecomment-1357810874:37,expose,expose,37,https://root.cern,https://github.com/root-project/root/pull/11755#issuecomment-1357810874,1,['expose'],['expose']
Security,"I understand where `PySequence_Check` is coming from (there is e.g. a standard Python `iterator` that will try indexing an object from 0 with integers), but for C++ bound containers (or C++ objects in general), the right question to ask is whether they implement the iterator protocol. E.g. an `std::list` is a sequence and can be iterated over, but not through indexing, as it's not random-access. For `std::map` the same issues exist as for Python, but of course with no special-case exception made in `PySequence_Check` and `std::map<int, T>` is a particular hot mess. Then there's the fact that `operator[](T)` can be redefined in both C++ and Python to mean whatever ... Note that an iterator protocol check would be for `hasattr(obj, '__iter__')` and not `iter(obj)`, as the latter would succeed b/c of that index-based `iterator` mentioned. I'm not really convinced by the `is_sequence()` method proposed, as it would currently fail for this:; ```; import cppyy. cppyy.cppdef(""""""\; struct MyStruct {};; MyStruct* fff = nullptr;; """"""). def is_sequence(obj):; try:; obj[0]; return True; except TypeError as e:; print(e); return False. print(is_sequence(cppyy.gbl.fff)); ```; which prints `True` as all data members are presumed both `*` and `[]`. This should perhaps also be extended to function return types, but returning arrays that way seems to be much less common in practice. Or at least, I've never had that request. Regardless, the problem remains that C++ is simply ambiguous here and I even think it would be fair to assume that `obj[0]` is only every done if `obj` is in fact an array. (Currently not the case, but why not.). Maybe `__getitem__` can be refined to only appear after lookup through `__getattr__`, i.e. to make it fully instance-specific. The result might be confusing as it would still have to be permissive to cover all cases. However, if the check for `__getitem__` is then performed on the class, instead of on the object, it would give you the old behavior back. (I ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15161#issuecomment-2057616934:391,access,access,391,https://root.cern,https://github.com/root-project/root/issues/15161#issuecomment-2057616934,1,['access'],['access']
Security,"Is mangling supposed to address those characters too? Maybe there is something simple which could be done for names of objects in ROOT, for example keeping only letters and numbers and postponing the hash of the name? In the end we need this for autogenerated code, but maybe I am wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15377#issuecomment-2084946546:200,hash,hash,200,https://root.cern,https://github.com/root-project/root/pull/15377#issuecomment-2084946546,1,['hash'],['hash']
Security,It is really simple to check what gets linked in with a debugger if you have the setup done already. If I can get ssh access to a node somewhere I can do that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1665604004:118,access,access,118,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1665604004,1,['access'],['access']
Security,It seems clear that the two name `RNTupleUnownedView` and `RNTupleOwnedView` are too ambiguous (no way to know who the subject of the '[un]owned' is (Is the the user or the system that owns (or not)). Furthermore I am confused by the question itself. A `view` is typically a 'small' object that does not own what it gives access to (e.g. `std::string_view` or its cousin `std::span`). So is `view` even the right term? Completely related can you remind me what information we are trying to pass to the user with the 2 distinct names (what do they need to do differently)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16363#issuecomment-2327424850:322,access,access,322,https://root.cern,https://github.com/root-project/root/pull/16363#issuecomment-2327424850,1,['access'],['access']
Security,"Looks good from my point of view, I'll let Jakob have the final say. One point we should clarify at some point (but doesn't need to block this PR) is how subfield access plays with writing: It intuitively makes sense for reading as you can just have the same value multiple times in memory. But I guess we only want to take the top-level fields from the entry for writing? Should we forbid creating a (parallel) writer passing a model with registered subfields?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16693#issuecomment-2443511035:163,access,access,163,https://root.cern,https://github.com/root-project/root/pull/16693#issuecomment-2443511035,1,['access'],['access']
Security,"MVA::DNN::VGeneralLayer&lt;TMVA::DNN::TCpu&lt;float&gt; &gt;::Matrix_t&)’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2219#issuecomment-411905157:1236,access,accessing,1236,https://root.cern,https://github.com/root-project/root/pull/2219#issuecomment-411905157,1,['access'],['accessing']
Security,"MakeUnique.hxx:28:30: error: invalid use of array with unspecified bounds . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2246#issuecomment-409925477:1079,access,accessing,1079,https://root.cern,https://github.com/root-project/root/pull/2246#issuecomment-409925477,2,['access'],['accessing']
Security,"My personal preference is to store std::string instead of a hash, as it's simpler and hashing anyway doesn't give us any improvement in performance. About transaction, I'm testing something like what I asked but it gives me an error like this which seems very cryptic to me, have you ever seen this error before?; https://gist.github.com/yamaguchi1024/b137f5313dfca23abbe890a5c4440a7d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2434#issuecomment-411910183:60,hash,hash,60,https://root.cern,https://github.com/root-project/root/pull/2434#issuecomment-411910183,2,['hash'],"['hash', 'hashing']"
Security,"OK, interactively, this is what I do:. cd /afs/cern.ch/work/s/schaffer/public/work-21.xAOD.RD_devRel21_prod25_2/build; setupATLAS; lsetup ""asetup 21.2.139,AnalysisBase""; source ../build/x86_64-centos7-gcc8-opt/setup.sh; ../run (or to any directory which you can write in); runH4lAnalRun2 -i root://eosatlas.cern.ch:1094//eos/atlas/atlasdatadisk/rucio/mc16_13TeV/85/26/DAOD_HIGG2D1.21658940._000001.pool.root.1 -d mc16_13TeV.345706.Sherpa_222_NNPDF30NNLO_ggllll_130M4l.deriv.DAOD_HIGG2D1.e6213_s3126_r9364_p4191 -e 5000. -e 5000 is just to read 5k events. This is reading an input file, what we call a derived AOD, and writes out a root file with simple trees. the setupATLAS is defined by:. export ATLAS_LOCAL_ROOT_BASE=/cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase; alias setupATLAS='source ${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'. But you'll need 'atlas' access, I presume. This is built with:. cmake ../source; make -jxx <as you like>. Not sure if this helps...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-757827313:866,access,access,866,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-757827313,1,['access'],['access']
Security,"OK, thanks for the feedback. The certificate used to sign the binaries is the official CERN one. I'll check with IT but I doubt they will purchase any Windows approved certificate... Isn't the CERN certificate good enough for you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15896#issuecomment-2213801755:33,certificate,certificate,33,https://root.cern,https://github.com/root-project/root/issues/15896#issuecomment-2213801755,3,['certificate'],['certificate']
Security,"Possible reason for the problem, in Cling (also Clang) some headers are included automatically at startup to simplify the operation. In the case of CUDA, the order of the headers is really important because CUDA has to annotate the `stl` functions to be available on CPU and GPU (e.g. `int std::abs(int n)` -> `__device__ __host__ std::abs(int n))`. If the order is not correct, various things can happen (no GPU version available, redefinition errors, error messages that have nothing to do with the actual problem ...). A good starting point for bug hunting is to compare the startup process of vanilla cling and ROOT cling.; * A good starting point for Cling the is the function [`CIFactory::createCIImpl()`](https://github.com/root-project/root/blob/de3514c2a88f653584108d2be64e28f50a2b29da/interpreter/cling/lib/Interpreter/CIFactory.cpp#L1214); * In ROOT, some extra headers are injected (before?) in the [TCling](https://github.com/root-project/root/blob/a56901942dfefa6e7e2e7df397a60c9d1cda31a0/core/metacling/src/TCling.cxx#L1327) class",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7518#issuecomment-808738232:885,inject,injected,885,https://root.cern,https://github.com/root-project/root/issues/7518#issuecomment-808738232,1,['inject'],['injected']
Security,"Rebased to fix conflicts, the last 3 commits are the only new ones. A type `RVecN` has been introduced which exposes the small buffer size as a template parameters, and `RVec` inherits publicly from it fixing the small buffer size to a reasonable value. For now all mathematical operators and helper functions still deal with `RVec`, simply switching everything to taking _and returning_ `RVecN` instead is a breaking change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-869834863:109,expose,exposes,109,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-869834863,1,['expose'],['exposes']
Security,"See the linked PR for a hack to fix the issue. Looking at the issue in a debug build, I could find out that cppyy is the culprit. The issue is that if you import ROOT in another process (and the import happens in a previously pickled function), then cppyy is not there and some random INCREF on the cppyy module segfaults because of accessing a nullptr. It's to be discussed how to fix this properly since the implicit contracts done by pickle are not clear to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6765#issuecomment-730306449:333,access,accessing,333,https://root.cern,https://github.com/root-project/root/issues/6765#issuecomment-730306449,1,['access'],['accessing']
Security,"Since the errors are true and valid, shouldn't we keep them? Or make them more clear as in `you are trying to access a system-protected file"" or something similar?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14865#issuecomment-1973061065:110,access,access,110,https://root.cern,https://github.com/root-project/root/pull/14865#issuecomment-1973061065,1,['access'],['access']
Security,"So I finally managed to get back to this and try a few things and as a result in my tests I managed to go from 82 MB of overhead to 62 MB. See https://github.com/root-project/root/pull/13641 for the actual code. While there is still a few things to cleanup, I think what I have is fairly general and quite self contained change, so I would appreciate feedback and if people like it, instructions on how to proceed to make sure this ends up upstream. The solution is based on a newly introduced `PagedVector<T>` which allows registering callbacks which get invoked whenever the associated range is accessed the first time. At such point, the range is actually allocated and each element of the range is passed to the callback. Initially I developed a mechanism to be general enough to do complex initialisations of the elements, however I later realised this is not actually needed. In order to optimise the issue with the large vectors `TypesLoaded` and `DeclsLoaded` one only needs to have something which does the default construction of their elements for ranges which are small enough to avoid to large upfront allocations. The code which is currently there in root / clang is already smart enough to lazily initialise only the elements which are actually needed, so the whole issue is to find a good tradeoff between number of ranges and sparse enough ones. A few caveats:. - `PagedVector` is a bad name, I agree. Suggestions are welcome.; - At the moment the implementation allows generic callbacks for ranges, however as I said we only need default initialisation. Removing such flexibility should buy another 1 MB from my test.; - In case `DeclID*` and `QualType` can default to all 0, one could probably achieve the same result in a more elegant way using calloc / realloc.; - There are probably other vectors which can be optimised in the same way, in particular IdentifiersLoaded as already mentioned by @vgvassilev. Comments?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1715921216:597,access,accessed,597,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1715921216,1,['access'],['accessed']
Security,"TMath.cxx:3201:44: error: ‘x’ was not declared in this scope . And 30 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-400583007:2483,access,accessing,2483,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-400583007,1,['access'],['accessing']
Security,"TMemFile.cxx:182:38: error: ‘mustRegister’ was not declared in this scope . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2248#issuecomment-400272955:1391,access,accessing,1391,https://root.cern,https://github.com/root-project/root/pull/2248#issuecomment-400272955,1,['access'],['accessing']
Security,Thanks Jonas! We might have to call some ROOT clean-up routine that is usually called by the ROOT-injected exit handler to make sure TFiles are closed correctly and similar. @pcanal might know if there is a simple way to do that.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7075#issuecomment-764675439:98,inject,injected,98,https://root.cern,https://github.com/root-project/root/pull/7075#issuecomment-764675439,1,['inject'],['injected']
Security,"Thanks, @egpbos and @jspaaks ! Validation succeeds now. > suggest to add a GitHub Actions workflow. AFAICT we need this to be integrated with our release workflow. Once that's a GH Action we can also migrate the `CITATION.cff` generation and validation there. I *think* it's fairly hard to break the file given that it's generated by a script; I also dislike the pile of dependencies of `cffconvert` for a simple thing like validation, IMO it's too heavy to add it to the script producing `CITATION.cff`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8626#issuecomment-876311455:242,validat,validation,242,https://root.cern,https://github.com/root-project/root/pull/8626#issuecomment-876311455,2,['validat'],['validation']
Security,"The functionality of Cache is all there. The only issue remaining is caching a cached TDF (let's call this latter ""A"") without destroying the cache of the cached (meaning ""A""). This is a side effect of the optimisation in place to deliver data with zero-copies to transformations and actions requesting it. As for testing, checking the caching works with IMT on needs to be done. The extra mile would consist in checking statically that T does not have a copy constructor and react. How to react is not completely clear to me yet. There are two ways perhaps to solve this problem: 1. Act on the container, keeping in mind that the containers which form the cache must support random access for MT execution. 2. Act on the contained type, wrapping objects in some way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1056#issuecomment-332682497:683,access,access,683,https://root.cern,https://github.com/root-project/root/pull/1056#issuecomment-332682497,1,['access'],['access']
Security,"The problem is that RDF tries to open the file to check that it's valid. The logic for the file opening is at https://github.com/root-project/root/blob/962009b8c2057199c2229c3ef9938ac4d315d10a/tree/dataframe/src/RLoopManager.cxx#L1133 . In particular, because of the presence of the `?` token, the string is parsed as a glob. Now in many cases that would be harmless albeit a tiny overhead (it would just return the same file name to open), but in this particular case it triggers a faulty behaviour. The glob parsing attempts at traversing the remote xrootd directory (see [here](https://github.com/root-project/root/blob/962009b8c2057199c2229c3ef9938ac4d315d10a/tree/tree/src/InternalTreeUtils.cxx#L471)), but since the permission is just for the single file with the token and not for the entire directory, it leads to the `user access restricted` error you post above. Now, I believe the most sane course of action would be to refine the logic that checks whether the input file name is a glob. I could simply add a check for the `xrd.wantprot` token, but probably we want to have a more authoritative list of all the tokens that should make the file name not be parsed as a glob. This probably includes not only xrootd tokens but also anything https-related. Or we could adopt a different strategy for glob detection altogether. Thoughts @dpiparo @pcanal ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16475#issuecomment-2365248206:832,access,access,832,https://root.cern,https://github.com/root-project/root/issues/16475#issuecomment-2365248206,1,['access'],['access']
Security,"We are still discussing the names. The current proposal is:; ```; using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with; /// that name does not exist, an invalid RFilePtr will be returned.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid; /// `RFilePtr`) if a file with this name already exists.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name; /// already exists, delete it and create a new one. Else simply create a new file.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());; ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14017#issuecomment-1821818413:194,access,accesses,194,https://root.cern,https://github.com/root-project/root/pull/14017#issuecomment-1821818413,4,['access'],['accesses']
Security,"While thinking about collisions and the index storage, one thought that crossed my mind is to template the index based on the index field type(s). I'm not sure if that's a good idea, one of the immediate question being ""do we want `RNTupleIndex<std::string>` and `RNTupleIndex<std::uint64_t>` to be different types?"" But still maybe something to consider, it might simplify the field value storage (if needed) and the entire hashing business...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15116#issuecomment-2242991029:425,hash,hashing,425,https://root.cern,https://github.com/root-project/root/pull/15116#issuecomment-2242991029,1,['hash'],['hashing']
Security,"_One_ of the results will do something similar to a future (but not quite, because futures in C++ are associated with asynchronous execution). I still think that the average physicist will get as little insight in the semantics of the type from the denomination ""Handle"" as they get from ""Proxy"". Even ROOT has a `TFileOpenHandle` which does not have the semantics you describe.; There is a slice of our users which are not familiar with the experiment frameworks and/or do not use one. If you feel strongly that this is not the way to go and we need a name that clearly conveys both pointer semantics and the fact that the first access triggers the event loop, I think we'll need a discussion outside of this PR :smile:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1855#issuecomment-381109118:630,access,access,630,https://root.cern,https://github.com/root-project/root/pull/1855#issuecomment-381109118,1,['access'],['access']
Security,"__alloc_traits&lt;std::allocator&lt;double&gt;, double&gt;::value_type*)’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2340#issuecomment-406283785:1235,access,accessing,1235,https://root.cern,https://github.com/root-project/root/pull/2340#issuecomment-406283785,1,['access'],['accessing']
Security,"`sysctl -n hw.logicalcpu` works. I still think that a simple ""`-j8` where ""8"" is the number of cores you have"" is easier to access for our readers. I don't think it's the readme's job to explain how to find one's number of cores. ""`-j8` where ""8"" is the number of cores you have"" is the change I suggested you to do. Would you agree to do that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5079#issuecomment-597561877:124,access,access,124,https://root.cern,https://github.com/root-project/root/pull/5079#issuecomment-597561877,1,['access'],['access']
Security,"a/src/TClass.cxx:648:20: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TMethod.cxx:235:28: warning: ‘snprintf’ output may be truncated before the last format character [-Wformat-truncation=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TMethod.cxx:243:31: warning: ‘%s’ directive output may be truncated writing up to 63 bytes into a region of size 61 [-Wformat-truncation=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:696:48: warning: ‘%s’ directive output may be truncated writing up to 1024 bytes into a region of size 64 [-Wformat-truncation=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] . And 179 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataf",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851#issuecomment-408947574:1593,access,accessing,1593,https://root.cern,https://github.com/root-project/root/pull/1851#issuecomment-408947574,1,['access'],['accessing']
Security,"anding read data remaining ; - ERROR: Error fetching remote repo 'origin' . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2141#issuecomment-394672680:1173,access,accessing,1173,https://root.cern,https://github.com/root-project/root/pull/2141#issuecomment-394672680,1,['access'],['accessing']
Security,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx; > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7186#issuecomment-801496369:3054,access,access,3054,https://root.cern,https://github.com/root-project/root/pull/7186#issuecomment-801496369,1,['access'],['access']
Security,"cling startup scripts are different from rootlogon.C and rootrc .; rootrc is a config file while .clingrc is a regular cling script. cling startup scripts are executed also in invocation of standalone cling binary (not from root interpreter). Question:; 1. Renaming `.cling_profile` and `.clingrc` with suffix `.C` ?; 2. Rename `.clingrc` to something else so that `.clingrc` can be reserved for cling config file in the future (if any)?; Making it a config file instead of a cling script aligns with rootrc but not with bashrc, zshrc.; 3. Drop `.clingrc` for now and keep `.cling_profile` only ? If a cling script can easily tell if it is in interactive mode then keeping only 1 script makes sense. Otherwise it is better to keep both to align with bash and other interpreter inspired by bash design. By easily telling I mean a macro like `CLING_INTERACTIVE` or something simple that does not access `gCling`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11262#issuecomment-1229254493:894,access,access,894,https://root.cern,https://github.com/root-project/root/pull/11262#issuecomment-1229254493,1,['access'],['access']
Security,"eTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/stognini -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin24.0.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Lib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2374779123:8463,hash,hash-protocols,8463,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2374779123,1,['hash'],['hash-protocols']
Security,"egion of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2113#issuecomment-393289526:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2113#issuecomment-393289526,1,['access'],['accessing']
Security,"egion of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35709/testReport/projectroot.roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2423#issuecomment-410609447:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2423#issuecomment-410609447,1,['access'],['accessing']
Security,"egion of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1973#issuecomment-394348081:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/1973#issuecomment-394348081,1,['access'],['accessing']
Security,"egion of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory/); - [proj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,1,['access'],['accessing']
Security,"egion of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testRe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411201963:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411201963,1,['access'],['accessing']
Security,"egion of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31336/testReport/projectroot.roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2251#issuecomment-400304937:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2251#issuecomment-400304937,1,['access'],['accessing']
Security,"eloper/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/stognini -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin24.0.0; ignoring nonexistent directory ""/usr/local/include""; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include; /Applications/Xcode.app/Contents/Deve",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2374779123:3881,hash,hash-protocols,3881,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2374779123,1,['hash'],['hash-protocols']
Security,"er applying D33529 and setting `DynamicLibrary::SearchOrder = SO_LoadedFirst; // or SO_LoadedLast (don't know the problem)` 500+ tests are broken?. > I would appreciate if we can coordinate next time such breaking changes before asking for a llvm review and land patches in these particularly sensitive areas. I explicitly added you to the list of reviewers for the original patch, there is little more I can do than that. And more coordination is exactly what I am trying to do now. If we cannot reach a conclusion may I at least be added to review whatever your solution looks like?. > 1. I plan to remove the NDEBUG assert. Already done in D33529. > 2. Make the std::vector<void*> a std::vector<llvm::PointerIntPair<void*, 1, bool>>. How can you guarantee that the platform will deliver a pointer with proper alignment for that?. > 3. I will change the search order to search for first the one that are not marked RTLD_GLOBAL. So any other client that wants to open thing's with RTLD_LOCAL will then expose what they thought were private symbols to the JIT as a whole?. > One of the issues is that it is not clear to me is what exactly is your use case and this is why there are misunderstandings. I also don't understand why there are mis-understandings, but have explained the use case a few times now and **3** will explicitly break that as well as provide bizarre default behavior:. > libc++.so, libA.so; > libA.so defines an overload for global operator new/delete; > ; > ```; > DynamicLibrary::getPermanentLibrary(NULL); > // Other code; > DynamicLibrary::getPermanentLibrary(""libA.so""); > ```; > In your scheme the JIT can pull operator new/delete from libA.so, and worse is that whether it pulls operator new/delete from libA.so is dependent on whether operator new/delete has been resolved in **// Other code** before libA.so has been loaded.; > . The example can be expanded to RTTI information, exceptions, and a host of other problems.; And even worse than that is that in your scheme t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313799028:1786,expose,expose,1786,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313799028,1,['expose'],['expose']
Security,"ess `c_str()` conversions in RooFitHS3; [RF][HS3] New `wsEmplace()` method for creating objects in workspace; [RF][HS3] New `wsImport()` function to avoid repeating command args; [RF] Less manual memory management in RooAbsArg and RooProdGenContext; [RF] Code modernization of RooAbsReal; [RF][HS3] Renaming some distributions to conform with HS3 standard; [RF][HS3] Use HistFunc variables instead of underlying hist variables; [RF] Added protection against invalid variable names in createHistogram; [RF][HS3] Correct error messages when IO keys are missing; [RF][HS3] Code improvements in HS3 HistFactory; [RF][HS3] Small HS3 closure fixes; [RF][HS3] Import HistFactory constraints directly upon creation; [RF][HS3] Cleanup of generic functions to avoid using arguments; [RF][HS3] Don't import embedded data directly to RooWorkspace; [RF] Avoid false warnings in RooAbsReal::createHistogram(); [RF][HS3] Reduce verbosity of unit tests; [RF][HS3] Less usage of TString; [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets; [RF][HS3] Remove unused functions from JSONFactories_HistFactory; [RF][HS3] Export `staterror` correctly for HistFactory; [RF][HS3] Major restructuring of HistFactory in HS3 - part 2; [RF][HS3] Major refactoring of `JSONFactories_HistFactory`; [RF][HS3] Correctly consider weight errors in `readBinnedData()`; [RF][HS3] Small code style improvement (renaming); [RF][HS3] Make `testHS3HistFactory` less verbose; [RF][HS3] Changed some JSON keywords to comply with new HS3 standard; [RF][HS3] Moved `DependencyMissingError` to public to make it catchable; [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup; [RF][HS3] Added helper function for writing matrices in JSONInterface; [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation; [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation; [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`; [RF] Add intiial minimizer interface for RooFuncWrapper.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:6935,access,access,6935,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,2,['access'],['access']
Security,"ets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31493/testReport/projectroot.roottes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2260#issuecomment-400865752:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2260#issuecomment-400865752,1,['access'],['accessing']
Security,"ets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.math",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409277662:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409277662,1,['access'],['accessing']
Security,"ets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31399/testReport/projectroot.roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400351100:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400351100,1,['access'],['accessing']
Security,"ets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36679/testReport/projectroot.roottest.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-411746107:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-411746107,1,['access'],['accessing']
Security,"ets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,1,['access'],['accessing']
Security,"ets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_treeCloneTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33965/testReport/projectroo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2381#issuecomment-408677038:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2381#issuecomment-408677038,1,['access'],['accessing']
Security,"ets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.treeformula.scan.roottest_root_treeformula_scan_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32672/testReport/projectroot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319#issuecomment-405627002:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2319#issuecomment-405627002,1,['access'],['accessing']
Security,"externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/pcanal/root_working/builds/master.debug/src/tutorials/v7/ntuple -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin23.6.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frame",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2375170248:8891,hash,hash-protocols,8891,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2375170248,1,['hash'],['hash-protocols']
Security,"externc-isystem /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/pcanal/root_working/builds/master.debug/src/tutorials/v7/ntuple -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin23.6.0; ignoring nonexistent directory ""/usr/local/include""; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1; /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16/include; /Applications/Xcode.app/Contents/Developer/Plat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2375170248:4219,hash,hash-protocols,4219,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2375170248,1,['hash'],['hash-protocols']
Security,"float]::&lt;lambda(UInt_t)&gt;’, is used but never defined [-fpermissive] . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2219#issuecomment-409979112:2384,access,accessing,2384,https://root.cern,https://github.com/root-project/root/pull/2219#issuecomment-409979112,2,['access'],['accessing']
Security,"h.cxx:3300:27: error: ‘mask3’ was not declared in this scope . And 64 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-400713921:2433,access,accessing,2433,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-400713921,1,['access'],['accessing']
Security,"ith SO_LoadedLast.; >; > I would appreciate if we can coordinate next time such breaking; > changes before asking for a llvm review and land patches in these; > particularly sensitive areas.; >; > I explicitly added you to the list of reviewers for the original ; > patch, there is little more I can do than that. And more coordination ; > is exactly what I am trying to do now. If we cannot reach a conclusion ; > may I at least be added to review whatever your solution looks like?; >; > 1. I plan to remove the NDEBUG assert; >; > Already done in D33529; >; > 2. Make the std::vector<void*> a; > std::vector<llvm::PointerIntPair<void*, 1, bool>>; >; > How can you guarantee that the platform will deliver a pointer with ; > proper alignment for that?; >; > 3. I will change the search order to search for first the one; > that are not marked RTLD_GLOBAL.; >; > So any other client that wants to open thing's with RTLD_LOCAL will ; > then expose what they thought were private symbols to the JIT as a whole?; >; > One of the issues is that it is not clear to me is what exactly is; > your use case and this is why there are misunderstandings.; >; > I also don't understand why there are mis-understandings, but have ; > explained the use case a few times now and *3* will explicitly break ; > that as well as provide bizarre default behavior:; >; > libc++.so, libA.so; > libA.so defines an overload for global operator new/delete; >; > |DynamicLibrary::getPermanentLibrary(NULL) // Other code; > DynamicLibrary::getPermanentLibrary(""libA.so"") |; >; > In your scheme the JIT can pull operator new/delete from libA.so,; > and worse is that whether it pulls operator new/delete from; > libA.so is dependent on whether operator new/delete has been; > resolved in *// Other code* before libA.so has been loaded.; >; > The example can be expanded to RTTI information, exceptions, and a ; > host of other problems.; >; No, this would not break the case you mentioned. The case that will ; have a special be",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313802370:2185,expose,expose,2185,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313802370,1,['expose'],['expose']
Security,"ke_canvas.C; namespace root_global { ; unique_ptr<TCanvas> c1;; }. void make_canvas() {; // we decide at the top level to use a global here:; my_subroutine(root_global::c1);. //This one doesn't use a global and will die, our choice; unique_ptr<TCanvas> local_canvas;; my_subroutine(local_canvas);; }; ```; or if being a little more lazy, I'd likely use static instead of the namespace, but the root interpreter doesn't respect translation unit boundaries well. Really I'd use a class though in case I need to add more global things easily:. ```; //display.h. class display {; private:; unique_ptr<TCanvas> c1;; public:; void make_canvas() {; c1.reset(); ; c1.reset(new TCanvas());; }; };; ```; And use it like:; ```; //make_display.C; #include ""display.h"". namespace root_global { ; display my_display;; }. // main routine:; void make_display() { ; // This one will stick around; root_global::my_display.make_canvas();. // This one wont. ; display local_display;; local_display.make_canvas();; }; ```. There are two main differences compared to the PR. 1) I'm not letting the subroutine allocate heap objects that aren't handled explicitly by the caller. 2) I'm using standard C++ that even works fine right now in root 6. That's nice because it's easier to learn, recognize, understand, and apply elsewhere. Maybe it's a bonus that syntax for creating the TCanvas is always the same and separated from syntax for keeping it. Maybe (1) can be done with RDirectory, and just isn't done in the PR example. I don't know enough about it. If the root objects all had some kind of empty non-displayed initial state, and their own reset() re-initializer, we wouldn't even need the unique_ptr. . Of course you could still end up calling make_display() as a subtroutine from another file, and if you do then it's still become a subroutine allocating ""its own"" heap objects. I just wouldn't, but with a little extra work for the usual extern declarations you could still access the memory elsewhere if you did.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-787621241:2621,access,access,2621,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-787621241,1,['access'],['access']
Security,"kspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 3 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-405239017:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-405239017,1,['access'],['accessing']
Security,"kspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 4 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1971#issuecomment-394340120:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/1971#issuecomment-394340120,23,['access'],['accessing']
Security,"kspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 5 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2248#issuecomment-400272955:2161,access,accessing,2161,https://root.cern,https://github.com/root-project/root/pull/2248#issuecomment-400272955,1,['access'],['accessing']
Security,"kspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 7 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-400583007:3253,access,accessing,3253,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-400583007,2,['access'],['accessing']
Security,"mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2448#issuecomment-411004184:1804,access,accessing,1804,https://root.cern,https://github.com/root-project/root/pull/2448#issuecomment-411004184,1,['access'],['accessing']
Security,"niffer.cxx:921:41: error: expected primary-expression before ‘&gt;’ token . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2487#issuecomment-413888726:1272,access,accessing,1272,https://root.cern,https://github.com/root-project/root/pull/2487#issuecomment-413888726,1,['access'],['accessing']
Security,"or: expected constructor, destructor, or type conversion before ‘(’ token . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2248#issuecomment-400268284:1541,access,accessing,1541,https://root.cern,https://github.com/root-project/root/pull/2248#issuecomment-400268284,1,['access'],['accessing']
Security,"or: no declaration matches ‘TGeoHMatrix TGeoIdentity::GetInverse() const’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2369#issuecomment-408012154:1156,access,accessing,1156,https://root.cern,https://github.com/root-project/root/pull/2369#issuecomment-408012154,1,['access'],['accessing']
Security,"other compression algorithms already do this,. Indeed. The diffs was made less obvious because:; ZLIB decompression is already doing the right thing.; ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different.; ; > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:; ```; Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap; ```; and used via; ```; char *bufcur = &fBuffer[fKeylen];; ```; so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:; * why are those added?; * why doesn't RNTuple need it?. 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is most likely talking about a space 'freed' inside a ROOT file.~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14523#issuecomment-1932803605:1794,secur,security,1794,https://root.cern,https://github.com/root-project/root/pull/14523#issuecomment-1932803605,1,['secur'],['security']
Security,"pace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 131 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2369#issuecomment-408012154:1926,access,accessing,1926,https://root.cern,https://github.com/root-project/root/pull/2369#issuecomment-408012154,1,['access'],['accessing']
Security,"pace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2141#issuecomment-394672680:1943,access,accessing,1943,https://root.cern,https://github.com/root-project/root/pull/2141#issuecomment-394672680,2,['access'],['accessing']
Security,"ring.h:144:83: error: expected ';' at end of declaration list . And 9 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2530#issuecomment-416270073:1799,access,accessing,1799,https://root.cern,https://github.com/root-project/root/pull/2530#issuecomment-416270073,1,['access'],['accessing']
Security,"root-pullrequests-build/build/lib/libROOTVecOpsdb4fa43d24_dictUmbrella.h) . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2157#issuecomment-395141831:1180,access,accessing,1180,https://root.cern,https://github.com/root-project/root/pull/2157#issuecomment-395141831,1,['access'],['accessing']
Security,"space/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 15 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-401591340:3179,access,accessing,3179,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-401591340,1,['access'],['accessing']
Security,"space/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 16 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-400713921:3203,access,accessing,3203,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-400713921,1,['access'],['accessing']
Security,"space/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 34 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2487#issuecomment-413888726:2042,access,accessing,2042,https://root.cern,https://github.com/root-project/root/pull/2487#issuecomment-413888726,1,['access'],['accessing']
Security,"space/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 48 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2232#issuecomment-399775824:3098,access,accessing,3098,https://root.cern,https://github.com/root-project/root/pull/2232#issuecomment-399775824,1,['access'],['accessing']
Security,"space/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 52 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2219#issuecomment-409982556:3154,access,accessing,3154,https://root.cern,https://github.com/root-project/root/pull/2219#issuecomment-409982556,1,['access'],['accessing']
Security,"space/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-414605121:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-414605121,3,['access'],['accessing']
Security,"space/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2219#issuecomment-409646068:2707,access,accessing,2707,https://root.cern,https://github.com/root-project/root/pull/2219#issuecomment-409646068,7,['access'],['accessing']
Security,"space/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1775:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2530#issuecomment-416270073:2569,access,accessing,2569,https://root.cern,https://github.com/root-project/root/pull/2530#issuecomment-416270073,1,['access'],['accessing']
Security,"tching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2219#issuecomment-409646068:1937,access,accessing,1937,https://root.cern,https://github.com/root-project/root/pull/2219#issuecomment-409646068,2,['access'],['accessing']
Security,"te at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 4 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-394262891:1744,access,accessing,1744,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-394262891,2,['access'],['accessing']
Security,"ter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and forth approach (learning more `gtest` along the way so I can better contribute tests in the future) ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090#issuecomment-1064634456:2044,access,accessible,2044,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456,2,"['access', 'inject']","['accessible', 'inject']"
Security,"ternc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/sftnight -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin24.0.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<bui",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:16011,hash,hash-protocols,16011,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['hash'],['hash-protocols']
Security,"ternc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/sftnight -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin24.0.0; ignoring nonexistent directory ""/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework direct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:11966,hash,hash-protocols,11966,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['hash'],['hash-protocols']
Security,"ternc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/sftnight -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin24.1.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<bui",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:24815,hash,hash-protocols,24815,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['hash'],['hash-protocols']
Security,"ternc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/sftnight -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target arm64-apple-darwin24.1.0; ignoring nonexistent directory ""/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework direct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:20770,hash,hash-protocols,20770,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['hash'],['hash-protocols']
Security,"ternc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/sftnight -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target x86_64-apple-darwin23.6.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<bu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:7088,hash,hash-protocols,7088,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['hash'],['hash-protocols']
Security,"ternc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reserved-identifier -Wno-gnu-folding-constant -fdeprecated-macro -fdebug-compilation-dir=/Users/sftnight -ferror-limit 19 -stack-protector 1 -fstack-check -mdarwin-stkchk-strong-link -fblocks -fencode-extended-block-signature -fregister-global-dtors-with-atexit -fgnuc-version=4.2.1 -fno-cxx-modules -fcxx-exceptions -fexceptions -fmax-type-align=16 -fcommon -fcolor-diagnostics -clang-vendor-feature=+disableNonDependentMemberExprInCurrentInstantiation -fno-odr-hash-protocols -clang-vendor-feature=+enableAggressiveVLAFolding -clang-vendor-feature=+revert09abecef7bbf -clang-vendor-feature=+thisNoAlignAttr -clang-vendor-feature=+thisNoNullAttr -clang-vendor-feature=+disableAtImportPrivateFrameworkInImplementationError -D__GCC_HAVE_DWARF2_CFI_ASM=1 -o - -x c++ /dev/null; clang -cc1 version 16.0.0 (clang-1600.0.26.3) default target x86_64-apple-darwin23.6.0; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include""; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/Library/Frameworks""; #include ""..."" search starts here:; #include <...> search starts here:; /usr/local/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1; /Library/Developer/CommandLineTools/usr/lib/clang/16/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 """,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:3473,hash,hash-protocols,3473,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['hash'],['hash-protocols']
Security,"torizedTMath.h:726:43: error: call to 'BesselJ0' is ambiguous . And 2 more. ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-405616154:2279,access,accessing,2279,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-405616154,1,['access'],['accessing']
Security,"ullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - include/ROOT/RConcurrentHashColl.hxx:39:19: warning: variable ‘d’ set but not used [-Wunused-but-set-variable] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - include/ROOT/RConcurrentHashColl.hxx:39:19: warning: variable ‘d’ set but not used [-Wunused-but-set-variable] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] . And 387 more. ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42551/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2715#issuecomment-425565118:2224,access,accessing,2224,https://root.cern,https://github.com/root-project/root/pull/2715#issuecomment-425565118,1,['access'],['accessing']
Security,"you should see the warnings regarding the comparisons of `unsigned long` and `int` as well on your system. can you check? the tests for all builds seem to be fine. is it possible for you to access [cdash.cern.ch](cdash.cern.ch)?. as well, please rebase and squash your commits in a single commit with a meaningful message. last change: please put a `[TMVA]` tag at the begin of your commit message so that it's clear what you've worked on in the commit history.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2309#issuecomment-404080279:190,access,access,190,https://root.cern,https://github.com/root-project/root/pull/2309#issuecomment-404080279,1,['access'],['access']
Testability," 'std::size_t () const' (aka 'unsigned long () const'); std::size_t size() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:189:19: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:193:9: error: multiple overloads of 'step' instantiate to the same signature 'int () const'; T step() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:193:9: note: previous declaration is here; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:197:12: error: multiple overloads of 'empty' instantiate to the same signature 'bool () const'; bool empty() const {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:197:12: note: previous declaration is here ; ```; Here's a relevant backtrace:; ```c++; Breakpoint 3, clang::ASTReader::FinishedDeserializing (this=0x555555609330) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:12113; 12113 assert(NumCurrentElementsDeserializing &&; (gdb) bt; #0 clang::ASTReader::FinishedDeserializing (this=0x555555609330) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:12113; #1 0x00007ffff0811ffc in clang::ExternalASTSource::Deserializing::~Deserializing (this=0x7ffffffdea48) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:89; #2 0x00007ffff07f37b2 in clang::ASTReader::FindExternalVisibleDeclsByName (this=0x555555609330, DC=0x555556423dd0, Name=...); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:8059; #3 0x00007fffef97eed2 in cling::ExternalASTSourceWrapper::FindExternalVisibleDeclsByName (this=0x5555556b8500, DC=0x555556423dd0, Name=...); at /home/jun/dev/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:146; #4 0x00007ffff09e4a0a in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName (this=0x5555556b8130, DC=0x555556423dd0, Name=...); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSourc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253760320:4240,assert,assert,4240,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320,1,['assert'],['assert']
Testability, . And 91 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:3573,test,test,3573,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,1,['test'],['test']
Testability," 2022 MacOSX13.1.sdk; drwxr-xr-x 7 root wheel 224 Sep 18 15:25 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 Sep 18 14:57 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 Sep 18 15:25 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 Sep 18 14:56 MacOSX15.sdk -> MacOSX15.0.sdk; + clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/pcanal/root_working/builds/master.debug/src/tutorials/v7/ntuple -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Applications/Xcode.app",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2375170248:1866,stub,stubs,1866,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2375170248,1,['stub'],['stubs']
Testability," 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/project",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-398607736:2798,test,testReport,2798,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-398607736,1,['test'],['testReport']
Testability," 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/project",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400118785:2798,test,testReport,2798,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400118785,1,['test'],['testReport']
Testability," 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-410966153:2798,test,testReport,2798,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-410966153,1,['test'],['testReport']
Testability, ; - [2022-09-13T17:43:20.121Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1245798559:1409,test,testReport,1409,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245798559,1,['test'],['testReport']
Testability," AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1154135015:1864,test,tests,1864,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015,2,['test'],"['testBuildDir', 'tests']"
Testability, Error regular expression found in output. Regex=[: error:] 0.91 sec ; - 971/1991 Test #879: tutorial-v7-perfcomp.cxx ..........................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.00 sec ; - 972/1991 Test #880: tutorial-v7-simple.cxx ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.01 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_concurrentfill.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_concurrentfill_cxx/); - [projectroot.runtutorials.tutorial_v7_perf.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_perf_cxx/); - [projectroot.runtutorials.tutorial_v7_perfcomp.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_perfcomp_cxx/); - [projectroot.runtutorials.tutorial_v7_simple.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_simple_cxx/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/); - [projectroot.roottest.root.meta.enums.roottest_root_meta_enums_enumsInNamespaces](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot.roottest.root.meta/enums/roottest_root_meta_enums_enumsInNamespaces/); - [projectroot.roottest.root.meta.enums.roottest_root_meta_enums_duplicateEnums](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot.roottest.root.meta/enums/roottest_root_meta_enums_duplicateEnums/); - [projectroot.roottest.root.meta.enums.roottest_root_meta_enums_execEnumsTes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4358#issuecomment-528926777:1451,test,testReport,1451,https://root.cern,https://github.com/root-project/root/pull/4358#issuecomment-528926777,1,['test'],['testReport']
Testability," [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_load](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_load/); - [projectroot.roottest.cling.stl.dicts.roottest_cling_stl_dicts_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.stl/dicts/roottest_cling_stl_dicts_build/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stl_makeproject_test_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stl_makeproject_test_build/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_MyClass_v1_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2454#issuecomment-411275022:2784,test,testReport,2784,https://root.cern,https://github.com/root-project/root/pull/2454#issuecomment-411275022,1,['test'],['testReport']
Testability," [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.bind",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:2784,test,testReport,2784,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,1,['test'],['testReport']
Testability, [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411177216:3586,test,testReport,3586,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411177216,1,['test'],['testReport']
Testability," [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35916/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_CacheRange](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35916/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_CacheRange/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35916/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-410833810:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-410833810,4,['test'],"['testReport', 'tests']"
Testability, [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.datafra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:2820,test,test,2820,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['test']
Testability," `staterror` correctly for HistFactory; [RF][HS3] Major restructuring of HistFactory in HS3 - part 2; [RF][HS3] Major refactoring of `JSONFactories_HistFactory`; [RF][HS3] Correctly consider weight errors in `readBinnedData()`; [RF][HS3] Small code style improvement (renaming); [RF][HS3] Make `testHS3HistFactory` less verbose; [RF][HS3] Changed some JSON keywords to comply with new HS3 standard; [RF][HS3] Moved `DependencyMissingError` to public to make it catchable; [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup; [RF][HS3] Added helper function for writing matrices in JSONInterface; [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation; [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation; [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; [RF] No need for `RooAbsMinimizerFcn::fit()` method; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`; Add AD based derivatives for RooFuncWrapper.; [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; [RF] Make it possible to switch to `ryml` backend after building ROOT; [RF] Add a C/C++ function wrapper class in roofit.; [RF] Fix implementation error from typo in `RooGenProdProj`; [RF] New mechanism to implicitly convert numbers to RooRealVar&; [RF] Remove RooFormula code for gcc <= 4.8; [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; [RF] More use of `snapshot()` overload with output parameter; [RF] ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12618#issuecomment-1497317057:7023,test,tests,7023,https://root.cern,https://github.com/root-project/root/pull/12618#issuecomment-1497317057,1,['test'],['tests']
Testability," a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc; entry=0x7ffeea3c7360, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408; #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0: 0, yb=; 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0: 0, yb=; 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87; ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```; sour",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428#issuecomment-698590998:3393,test,test,3393,https://root.cern,https://github.com/root-project/root/issues/6428#issuecomment-698590998,1,['test'],['test']
Testability," benchmarking the change I discovered something fascinating.; This simple benchmark only tests retrieval of a custom column:; ```c++; TDataFrame d(1000000000ull);; d.Define(""ans"", [] { return 42; }); .Foreach([](int) {}, {""ans""});; ```. The relevant code path that changes between master and this PR is the following:; ```patch; T &TColumnValue<T>::Get(Long64_t entry); {; - if (!fReaderValues.empty()) {; - return *(fReaderValues.back()->Get());; - } else {; - fCustomColumns.back()->Update(fSlot, entry);; - return fIsDataSourceColumn ? **fDSValuePtrs.back() : *fCustomValuePtrs.back();; + switch (fColumnKind) {; + case EColumnKind::kTreeArray: /*dealt with in the other `Get` overload*/; + case EColumnKind::kTreeValue: return *(fReaderValues.back()->Get());; + case EColumnKind::kCustomColumn: fCustomColumns.back()->Update(fSlot, entry); return *fCustomValuePtrs.back();; + case EColumnKind::kDataSource: fCustomColumns.back()->Update(fSlot, entry); return **fDSValuePtrs.back();; }; +; ```; Looks _faster_ right?. On my workstation `perf stat` yields the following instruction counts and runtimes (single-thread executable compiled with `-g -O2`):; ```; # MASTER; 99,494,923,915 instructions:u; 9.844 seconds. # PR; 103,495,337,205 instructions:u; 11.049 seconds; ```. The `switch-case` is sensibly slower and results in more cpu instructions than the `if-else` over `std::vector::empty` on this artificial yet very representative benchmark. I thought this might have been a cache-friendliness issue and was almost ready to give up on this PR, but luckily plotting stacktraces showed that the culprit is inlining:. **MASTER**; ![image](https://user-images.githubusercontent.com/10999034/30910728-3b607ff4-a386-11e7-928e-6a404a485cf6.png). **PR**; ![image](https://user-images.githubusercontent.com/10999034/30910790-7f808562-a386-11e7-90f9-f1417c712f86.png). The `Get` method is not inlined when it contains the `switch-case`!; I will come up with a change that maintains inlining intact soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1060#issuecomment-332489724:1443,benchmark,benchmark,1443,https://root.cern,https://github.com/root-project/root/pull/1060#issuecomment-332489724,1,['benchmark'],['benchmark']
Testability, between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_pyt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411084210:3463,test,testReport,3463,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411084210,1,['test'],['testReport']
Testability," bool) (./cling+0xace867); > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17); > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161); > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7); > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840); > > > > #14 0x0000000000a32349 _start (./cling+0xa32349); > > > > Stack dump:; > > > > 0.	Program arguments: ./cling -xcuda ; > > > > Segmentation fault (core dumped); > > > > ```; > > > ; > > > ; > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session.; > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.; > > > ; > > > ; > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.; > > ; > > ; > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.; > ; > I found the problem and a p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-777250984:2948,test,test,2948,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-777250984,1,['test'],['test']
Testability, from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_load](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_load/); - [projectroot.roottest.cling.stl.dicts.roottest_cling_stl_dicts_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.stl/dicts/roottest_cling_stl_dicts_build/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stl_makeproject_test_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stl_makeproject_test_build/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_MyClass_v1_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_MyClass_v1_libgen_build/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadtest_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadtest_build/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_read_leaves_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_read_leaves_build/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_classWithComplex_libgen_build](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2454#issuecomment-411275022:3499,test,testReport,3499,https://root.cern,https://github.com/root-project/root/pull/2454#issuecomment-411275022,1,['test'],['testReport']
Testability, information necessary to reconstruct combined datas; [RF] Move loop management for code generation into CodeSquashContext; [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); [RF] Add 'translate' to RooNllVarNew.; [RF] Remove function declarations in RooStats LinkDef.h; [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx; [RF] Move `ModelConfig` from RooStats to RooFit; [RF] Don't add `weightVar` to observables in HistFactory; [RF] Minor improvements to RooFit evaluation code generation; [RF][NFC] Fix typo.; [RF] Disable RooFuncWrapper test if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF][HS3] Put exported `histosys` in the correct vector; [RF][HS3] Avoid creating temporary objects to import into workspace; [RF][HS3][HF] General cleanup of HS3 HistFactory implementation; [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF][HS3] Consistent range for nominal alpha params with HistFactory; [RF][HS3] Remember simultaneous channel names when writing JSON; [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip; [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints; [RF][HS3] Don't mix up free functions and class impl in JSON tool; [RF][HS3] Consistently have implicit fallback for HistFactory variables; [RF][HS3] Don't import datasets that are parts of a combined dataset; [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`; [RF][HS3] Generate input file for testHS3HistFactory on the fly; [RF][HS3] Improveme,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12618#issuecomment-1497317057:1830,test,test,1830,https://root.cern,https://github.com/root-project/root/pull/12618#issuecomment-1497317057,1,['test'],['test']
Testability," ls -l /Library/Developer/CommandLineTools/SDKs/; total 0; lrwxr-xr-x 1 root wheel 14 17 Sep 14:08 MacOSX.sdk -> MacOSX15.0.sdk; drwxr-xr-x 7 root wheel 224 17 Sep 14:10 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 17 Sep 14:07 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 17 Sep 14:09 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 17 Sep 14:07 MacOSX15.sdk -> MacOSX15.0.sdk; sftnight@macphsft34 ~ % clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.1.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -I/usr/local/include -internal-isystem /Library/Developer/CommandLine",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:18808,stub,stubs,18808,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['stub'],['stubs']
Testability," offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2496#issuecomment-414946221:2770,test,testReport,2770,https://root.cern,https://github.com/root-project/root/pull/2496#issuecomment-414946221,1,['test'],['testReport']
Testability," offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.event.roottest_root_io_event](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/event/roottest_root_io_event/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/cmdLineUtils/roottest_p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411089672:2770,test,testReport,2770,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411089672,1,['test'],['testReport']
Testability," size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.directory.roottest_root_io_directory_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32357/testReport/projectroot.roottest.root.io/directory/roottest_root_io_directory_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32357/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32357/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.cling.offset.roottest_cling_offset_compiled](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32357/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_compiled/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319#issuecomment-405050428:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2319#issuecomment-405050428,5,['test'],"['testReport', 'tests']"
Testability, tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_operator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_operator/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.cling.roottest_python_cling_cling](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/cling/roottest_python_cling_cling/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp11](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp11/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.pyth,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5692#issuecomment-633509680:1856,test,testReport,1856,https://root.cern,https://github.com/root-project/root/pull/5692#issuecomment-633509680,1,['test'],['testReport']
Testability, tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2118#issuecomment-393467051:3637,test,testReport,3637,https://root.cern,https://github.com/root-project/root/pull/2118#issuecomment-393467051,1,['test'],['testReport']
Testability, tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2366#issuecomment-407829804:3636,test,testReport,3636,https://root.cern,https://github.com/root-project/root/pull/2366#issuecomment-407829804,1,['test'],['testReport']
Testability, tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2113#issuecomment-393289526:3637,test,testReport,3637,https://root.cern,https://github.com/root-project/root/pull/2113#issuecomment-393289526,1,['test'],['testReport']
Testability, tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-393462547:3637,test,testReport,3637,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-393462547,1,['test'],['testReport']
Testability," that combined dataset name is always `""obsData""`; [RF][HS3] Use less `c_str()` conversions in RooFitHS3; [RF][HS3] New `wsEmplace()` method for creating objects in workspace; [RF][HS3] New `wsImport()` function to avoid repeating command args; [RF] Less manual memory management in RooAbsArg and RooProdGenContext; [RF] Code modernization of RooAbsReal; [RF][HS3] Renaming some distributions to conform with HS3 standard; [RF][HS3] Use HistFunc variables instead of underlying hist variables; [RF] Added protection against invalid variable names in createHistogram; [RF][HS3] Correct error messages when IO keys are missing; [RF][HS3] Code improvements in HS3 HistFactory; [RF][HS3] Small HS3 closure fixes; [RF][HS3] Import HistFactory constraints directly upon creation; [RF][HS3] Cleanup of generic functions to avoid using arguments; [RF][HS3] Don't import embedded data directly to RooWorkspace; [RF] Avoid false warnings in RooAbsReal::createHistogram(); [RF][HS3] Reduce verbosity of unit tests; [RF][HS3] Less usage of TString; [RF][HS3] Avoid code duplication when requesting RooArgLists and Sets; [RF][HS3] Remove unused functions from JSONFactories_HistFactory; [RF][HS3] Export `staterror` correctly for HistFactory; [RF][HS3] Major restructuring of HistFactory in HS3 - part 2; [RF][HS3] Major refactoring of `JSONFactories_HistFactory`; [RF][HS3] Correctly consider weight errors in `readBinnedData()`; [RF][HS3] Small code style improvement (renaming); [RF][HS3] Make `testHS3HistFactory` less verbose; [RF][HS3] Changed some JSON keywords to comply with new HS3 standard; [RF][HS3] Moved `DependencyMissingError` to public to make it catchable; [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup; [RF][HS3] Added helper function for writing matrices in JSONInterface; [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation; [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation; [RF] Avoid invalid pointer access in `RooAbsPdf::print",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:5959,test,tests,5959,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,2,['test'],['tests']
Testability, to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.meta/test/gtest_core_meta_test_testStatusBitsChecker/); - [projectroot.core.meta.test.gtest_core_meta_test_testHashRecursiveRemove](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.meta/test/gtest_core_meta_test_testHashRecursiveRemove/); - [projectroot.core.metacling.test.gtest_core_metacling_test_coremetaclingtestUnit](https://eps,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:3491,test,test,3491,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,1,['test'],['test']
Testability, type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_pythonizations](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_pythonizations/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.python.stl.roottest_python_stl_stl](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/stl/roottest_python_stl_stl/); - [projectroot.tmva.pymva.test.PyMVA_Keras_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.tmva.pymva/test/PyMVA_Keras_Classification/); - [projectroot.tmva.pymva.test.PyMVA_Keras_Regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.tmva.pymva/test/PyMVA_Keras_Regression/); -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13577#issuecomment-1701582600:1692,test,testReport,1692,https://root.cern,https://github.com/root-project/root/pull/13577#issuecomment-1701582600,1,['test'],['testReport']
Testability, use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411309441:2801,test,testReport,2801,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411309441,1,['test'],['testReport']
Testability, {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2495#issuecomment-414953063:3073,test,testReport,3073,https://root.cern,https://github.com/root-project/root/pull/2495#issuecomment-414953063,1,['test'],['testReport']
Testability, {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineU,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411059605:3073,test,testReport,3073,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411059605,1,['test'],['testReport']
Testability, {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411201963:3073,test,testReport,3073,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411201963,1,['test'],['testReport']
Testability, {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411165572:3073,test,testReport,3073,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411165572,1,['test'],['testReport']
Testability, {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testRep,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411177216:3073,test,testReport,3073,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411177216,1,['test'],['testReport']
Testability, {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root.io,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411129604:3073,test,testReport,3073,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411129604,1,['test'],['testReport']
Testability, {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.cling/specialobj/roottest_cli,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411309441:3073,test,testReport,3073,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411309441,1,['test'],['testReport']
Testability, {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.rootte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-411277208:3073,test,testReport,3073,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-411277208,1,['test'],['testReport']
Testability, {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_pyth,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411165572:3319,test,testReport,3319,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411165572,1,['test'],['testReport']
Testability, {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root.io/stdarray/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411129604:3319,test,testReport,3319,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411129604,1,['test'],['testReport']
Testability, ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1973#issuecomment-394348081:3010,test,testReport,3010,https://root.cern,https://github.com/root-project/root/pull/1973#issuecomment-394348081,1,['test'],['testReport']
Testability, ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:3258,test,testReport,3258,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['testReport']
Testability,# Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844250497:1362,test,testReport,1362,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844250497,4,['test'],['testReport']
Testability,# Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844244254:1363,test,testReport,1363,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844244254,4,['test'],['testReport']
Testability,# Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844261645:1355,test,testReport,1355,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844261645,4,['test'],['testReport']
Testability,## Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-411277208:3626,test,testReport,3626,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-411277208,1,['test'],['testReport']
Testability,### Warnings:; - [2022-07-05T13:55:21.463Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T13:55:40.879Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175116758:1263,test,testReport,1263,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758,1,['test'],['testReport']
Testability,### Warnings:; - [2022-07-05T22:47:30.183Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T22:48:01.949Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root/meta/roottest_root_meta_e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175603018:1265,test,testReport,1265,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175603018,1,['test'],['testReport']
Testability,& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.core.imt.test.gtest_core_imt_test_coreimttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_core_imt_test_coreimttestUnit/); - [projectroot.core.imt.test.gtes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411701514:3024,test,testReport,3024,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411701514,1,['test'],['testReport']
Testability,"(""x"", &x, ""x/I"");. for (int i = 0; i < 9; i++); {; x = i;; tree.Fill();; }; tree.Write();; }; ; int main(){; write_tree(""treeparent.root"", ""treeparent"");; write_tree(""treefriend.root"", ""treefriend"");; TFile parentfile{""treeparent.root"", ""read""};; TFile friendfile{""treefriend.root"", ""read""};. std::unique_ptr<TTree> parenttree{parentfile.Get<TTree>(""treeparent"")};; std::unique_ptr<TTree> friendtree{friendfile.Get<TTree>(""treefriend"")};. parenttree->AddFriend(friendtree.get());; parenttree->Scan(""x:treefriend.x"");; parenttree->Print(""all"");. ROOT::RDataFrame rdf{*parenttree};; auto display = rdf.Display("""");; std::cout << ""Result from rdf.Display()->Print():\n"";; display->Print();; }; ```. Result from TTree:Scan(""x:treefriend.x""):; ```; ************************************; * Row * x * treefrien *; ************************************; * 0 * 0 * 0 *; * 1 * 1 * 1 *; * 2 * 2 * 2 *; * 3 * 3 * 3 *; * 4 * 4 * 4 *; * 5 * 5 * 5 *; * 6 * 6 * 6 *; * 7 * 7 * 7 *; * 8 * 8 * 8 *; ************************************; ```; Result from TTree:Print(""all""):; ```; ******************************************************************************; *Tree :treeparent: test friend trees *; *Entries : 9 : Total = 1074 bytes File Size = 494 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :x : x/I *; *Entries : 9 : Total Size= 583 bytes File Size = 110 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ******************************************************************************; *Tree :treefriend: test friend trees *; *Entries : 9 : Total = 958 bytes File Size = 490 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :x : x/I *; *Entries : 9 : Total Size= 583 bytes File Size = 110 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816500613:2712,test,test,2712,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816500613,1,['test'],['test']
Testability,(*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:3026,test,testReport,3026,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,1,['test'],['testReport']
Testability,(*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_pytho,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2118#issuecomment-393467051:3086,test,testReport,3086,https://root.cern,https://github.com/root-project/root/pull/2118#issuecomment-393467051,1,['test'],['testReport']
Testability,(*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2113#issuecomment-393289526:3086,test,testReport,3086,https://root.cern,https://github.com/root-project/root/pull/2113#issuecomment-393289526,1,['test'],['testReport']
Testability,"(as per the discussion above, this will not get merged as is because we rather prefer an implementation that can estimate the remaining number of entries/time without having to check all input files beforehand, but the logic to create and update the progress bar, including colors, windows support etc. is still directly re-usable and super useful)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8675#issuecomment-880833581:219,log,logic,219,https://root.cern,https://github.com/root-project/root/pull/8675#issuecomment-880833581,1,['log'],['logic']
Testability,); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393485196:4191,test,testReport,4191,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393485196,1,['test'],['testReport']
Testability,)’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.data,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:3300,test,test,3300,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,1,['test'],['test']
Testability,* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.tes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:3540,test,test,3540,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,1,['test'],['test']
Testability,"*'; | |-ParmVarDecl 0xb605d98 <col:34, col:41> col:41 in libc.string.h hidden __n 'size_t':'unsigned long'; | `-NonNullAttr 0xb605fd0 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:589:67> 1; `-FunctionDecl 0xb606160 <line:602:1, /usr/include/sys/cdefs.h:285:63> /usr/include/string.h:602:14 in libc.string.h hidden basename 'char *(const char *) throw()' extern; |-ParmVarDecl 0xb606078 <col:24, col:36> col:36 in libc.string.h hidden __filename 'const char *'; `-NonNullAttr 0xb606208 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:602:69> 1; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../incl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377827282:37659,test,test-products,37659,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282,1,['test'],['test-products']
Testability,*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/); - [projectroot.core.base.test.gtest_core_base_test_CoreBaseTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.base/test/gtest_core_base_test_CoreBaseTests/); - [projectroot.core.cont.test.gtest_core_cont_test_coreconttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-bu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:3299,test,test,3299,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,1,['test'],['test']
Testability,*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.tes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:3296,test,test,3296,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['test']
Testability,", 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-414258112:2797,test,testReport,2797,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-414258112,1,['test'],['testReport']
Testability,-06-02T14:49:29.255Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144980019:1433,test,testReport,1433,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019,1,['test'],['testReport']
Testability,-06-02T18:36:24.346Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145207749:1433,test,testReport,1433,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749,1,['test'],['testReport']
Testability,-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](http,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:2902,test,test,2902,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['test']
Testability,"-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28469/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2125#issuecomment-393740963:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2125#issuecomment-393740963,2,['test'],"['testReport', 'tests']"
Testability,"-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28709/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394293761:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394293761,2,['test'],"['testReport', 'tests']"
Testability,. ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175603018:1740,test,testReport,1740,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175603018,4,['test'],['testReport']
Testability,". my apologies, now slowly reducing amount of flags used for C++ modules build I see that modulemap.overlay file with libc and stl modulemap files is causing these problem. I think it is missing pthead modulemap file, I am testing it..; ```; -ivfsoverlay /mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include/modulemap.overlay.yaml; ```; So somehow -vfsoverlay is triggering the false positive warning detection (it is not clear for me why, maybe it is clang bug):; ```; [sftnight@lcgapp-slc6-x86-64-32 civetweb]$ clang -DHTTP_WITHOUT_FASTCGI -DNO_SSL_DL -DUSE_WEBSOCKET -I/mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include -I/cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-slc6-gcc62-opt/lib/cmake/VecCore/../../../include -isystem /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-slc6-gcc62-opt/include -Qunused-arguments -fcolor-diagnostics -pipe -m64 -Wall -W -pthread -fmodules -fmodules-cache-path=/mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include/pcms/ -fno-autolink -fdiagnostics-show-note-include-stack -Wno-module-import-in-extern-c -ivfsoverlay /mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include/modulemap.overlay.yaml -Xclang -fmodules-local-submodule-visibility -g -fPIC -pthread civetweb.c example.c -ldl -o test; civetweb.c:2701:8: warning: implicit declaration of function 'pthread_setname_np' is invalid in C99 [-Wimplicit-function-declaration]; (void)pthread_setname_np(pthread_self(), threadName);; ^; 1 warning generated.; example.c:3:14: warning: unused parameter 'argc' [-Wunused-parameter]; int main(int argc, char **argv); ^; example.c:3:27: warning: unused parameter 'argv' [-Wunused-parameter]; int main(int argc, char **argv); ^; 2 warnings generated. ```. We will investigate why and my apologies again!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2581#issuecomment-418769386:1512,test,test,1512,https://root.cern,https://github.com/root-project/root/pull/2581#issuecomment-418769386,1,['test'],['test']
Testability,...............................*; ******************************************************************************; *Chain :treefriend: treefriend1.root *; ******************************************************************************; ******************************************************************************; *Tree :treefriend1: test friend trees *; *Entries : 3 : Total = 933 bytes File Size = 470 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :y : y/I *; *Entries : 3 : Total Size= 556 bytes File Size = 87 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ******************************************************************************; *Chain :treefriend: treefriend2.root *; ******************************************************************************; ******************************************************************************; *Tree :treefriend2: test friend trees *; *Entries : 3 : Total = 933 bytes File Size = 471 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :y : y/I *; *Entries : 3 : Total Size= 556 bytes File Size = 87 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ******************************************************************************; *Chain :treefriend: treefriend3.root *; ******************************************************************************; ******************************************************************************; *Tree :treefriend3: test friend trees *; *Entries : 3 : Total = 933 bytes File Size = 471 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :y : y/I *; *Entries : 3 : Total Size= 556 bytes File ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816500613:12902,test,test,12902,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816500613,1,['test'],['test']
Testability,"...............................*; ******************************************************************************; *Chain :treefriend: treefriend2.root *; ******************************************************************************; ******************************************************************************; *Tree :treefriend2: test friend trees *; *Entries : 3 : Total = 933 bytes File Size = 471 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :y : y/I *; *Entries : 3 : Total Size= 556 bytes File Size = 87 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ******************************************************************************; *Chain :treefriend: treefriend3.root *; ******************************************************************************; ******************************************************************************; *Tree :treefriend3: test friend trees *; *Entries : 3 : Total = 933 bytes File Size = 471 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :y : y/I *; *Entries : 3 : Total Size= 556 bytes File Size = 87 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ```. ## Sub-case 3.1; If we call the friend variable ""treefriend.y"", we get; Result from TTree:Scan(""x:treefriend.y""):; ```; Error in <TTreeFormula::Compile>: Bad numerical expression : ""treefriend.y""; ************************************; * Row * x * treefrien *; ************************************; * 0 * 0 * *; * 1 * 1 * *; * 2 * 2 * *; * 3 * 3 * *; * 4 * 4 * *; * 5 * 5 * *; * 6 * 6 * *; * 7 * 7 * *; * 8 * 8 * *; ************************************; ```; Result from rdf.Display()->Print():; ```; Error in <TTreeReaderValueBase::CreateProxy()>: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816500613:13609,test,test,13609,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816500613,1,['test'],['test']
Testability,"................................*; ******************************************************************************; *Chain :treeparent: treeparent2.root *; ******************************************************************************; ******************************************************************************; *Tree :treeparent: test friend trees *; *Entries : 3 : Total = 930 bytes File Size = 470 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :y : y/I *; *Entries : 3 : Total Size= 555 bytes File Size = 86 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ******************************************************************************; *Chain :treeparent: treeparent3.root *; ******************************************************************************; ******************************************************************************; *Tree :treeparent: test friend trees *; *Entries : 3 : Total = 930 bytes File Size = 470 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :y : y/I *; *Entries : 3 : Total Size= 555 bytes File Size = 86 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ```; Result from rdf.Display()->Print():; ```; y | treefriend.y | ; 0 | 0 | ; 1 | 1 | ; 2 | 2 | ; 0 | 0 | ; 1 | 1 | ; 2 | 2 | ; 0 | 0 | ; 1 | 1 | ; 2 | 2 | ; ```. Everything still works, but we already see something missing in `TTree::Print`: only the information of the parent chain is printed!. ## Sub-case 2.2; If we don't give a name to the friend chain, then we're in a strange situation. Somehow magically I can do a Scan(y:treefriend1.y) that returns; Result from TTree:Scan(""y:treefriend1.y""):; ```; ************************************; * Row *",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816500613:7446,test,test,7446,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816500613,1,['test'],['test']
Testability,.....................................***Failed Error regular expression found in output. Regex=[: error:] 1.00 sec ; - 972/1991 Test #880: tutorial-v7-simple.cxx ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.01 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_concurrentfill.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_concurrentfill_cxx/); - [projectroot.runtutorials.tutorial_v7_perf.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_perf_cxx/); - [projectroot.runtutorials.tutorial_v7_perfcomp.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_perfcomp_cxx/); - [projectroot.runtutorials.tutorial_v7_simple.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_simple_cxx/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/); - [projectroot.roottest.root.meta.enums.roottest_root_meta_enums_enumsInNamespaces](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot.roottest.root.meta/enums/roottest_root_meta_enums_enumsInNamespaces/); - [projectroot.roottest.root.meta.enums.roottest_root_meta_enums_duplicateEnums](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot.roottest.root.meta/enums/roottest_root_meta_enums_duplicateEnums/); - [projectroot.roottest.root.meta.enums.roottest_root_meta_enums_execEnumsTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot.roottest.root.meta/enums/roottest_root_meta_enums_execEnumsTest/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4358#issuecomment-528926777:1631,test,testReport,1631,https://root.cern,https://github.com/root-project/root/pull/4358#issuecomment-528926777,5,['test'],['testReport']
Testability,.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_cachedChain/); - [projectroot.roottest.root.treeformula.retobj.roottest_root_treeformula_retobj_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/305,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-398607736:4033,test,testReport,4033,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-398607736,1,['test'],['testReport']
Testability,.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_cachedChain/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400118785:4033,test,testReport,4033,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400118785,1,['test'],['testReport']
Testability,.ch/job/root-pullrequests-build/36159/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/); - [projectroot.core.base.test.gtest_core_base_test_CoreBaseTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.base/test/gtest_core_base_test_CoreBaseTests/); - [projectroot.core.cont.test.gtest_core_cont_test_coreconttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.cont/test/gtest_core_cont_test_coreconttestUnit/); - [projectroot.core.cont.test.gtest_core_cont_test_testTypedIteration](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.cont/test/gtest_core_cont_test_testTypedIteration/); - [projectroot.core.imt.test.gtest_core_imt_test_coreimttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:3738,test,test,3738,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,1,['test'],['test']
Testability,.ch/root-jenkins/job/root-pullrequests-build/164079/console).; ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_nested_rvec_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_nested_rvec_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_multipletriggerrun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_multipletriggerrun/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018#issuecomment-1380875995:1188,test,testReport,1188,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380875995,1,['test'],['testReport']
Testability,.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:3190,test,testReport,3190,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['testReport']
Testability,.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_operator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_operator/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.cling.roottest_python_cling_cling](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/cling/roottest_python_cling_cling/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp11](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp11/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/); - [projectroot.roottest.python.function.roottest_python_function_function](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/function/roottest_python_function_function/). And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5692#issuecomment-633509680:2307,test,testReport,2307,https://root.cern,https://github.com/root-project/root/pull/5692#issuecomment-633509680,5,['test'],['testReport']
Testability,.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_more](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_more/); - [projectroot.tree.dataframe.test.gtest_t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:3780,test,test,3780,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,1,['test'],['test']
Testability,".tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1154135015:1442,test,tests,1442,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015,2,['test'],"['testBuildDir', 'tests']"
Testability,//lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/console).; ### Warnings:; - [2022-06-02T14:49:09.186Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T14:49:29.255Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144980019:1180,test,testReport,1180,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019,1,['test'],['testReport']
Testability,//lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/console).; ### Warnings:; - [2022-06-02T18:36:05.557Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T18:36:24.346Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145207749:1180,test,testReport,1180,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749,1,['test'],['testReport']
Testability,"/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/pro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:2667,test,test,2667,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['test']
Testability,"/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.roottest.root.multicore.roottest_root_multicore_poolManager_build](https://epsft-jenkins.cern.ch/job/root-pul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409277662:2667,test,test,2667,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409277662,1,['test'],['test']
Testability,"/cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5692-ROOT-fedora30-cxx14&date=2020-05-25).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/console).; ### Warnings:; - [2020-05-25T10:19:25.159Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-05-25T10:26:03.641Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_operator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_operator/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5692#issuecomment-633509680:1161,test,testReport,1161,https://root.cern,https://github.com/root-project/root/pull/5692#issuecomment-633509680,1,['test'],['testReport']
Testability,"/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:2653,test,test,2653,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,1,['test'],['test']
Testability,"/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411084210:2653,test,test,2653,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411084210,1,['test'],['test']
Testability,/job/root-pullrequests-build/118086/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.datamodelevolution.roottest_root_io_datamodelevolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/datamodelevolution/roottest_root_io_datamodelevolution_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844253147:1404,test,testReport,1404,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844253147,1,['test'],['testReport']
Testability,"/job/root-pullrequests-build/183764/console).; ### Warnings:; - [2023-08-31T18:23:40.513Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2023-08-31T18:29:46.289Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_pythonizations](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_pythonizations/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.python.stl.roottest_python_stl_stl](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13577#issuecomment-1701582600:1215,test,testReport,1215,https://root.cern,https://github.com/root-project/root/pull/13577#issuecomment-1701582600,1,['test'],['testReport']
Testability,/lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143358479:1319,test,testReport,1319,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479,1,['test'],['testReport']
Testability,/lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143554468:1319,test,testReport,1319,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468,1,['test'],['testReport']
Testability,/lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1153748598:1319,test,testReport,1319,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598,1,['test'],['testReport']
Testability,/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/). And 164 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-410966153:4265,test,testReport,4265,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-410966153,8,['test'],"['test', 'testReport']"
Testability,"/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 175 more. ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42560/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2715#issuecomment-425580897:2634,test,tests,2634,https://root.cern,https://github.com/root-project/root/pull/2715#issuecomment-425580897,2,['test'],"['testReport', 'tests']"
Testability,/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput/). And 93 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2119#issuecomment-393426877:4465,test,testReport,4465,https://root.cern,https://github.com/root-project/root/pull/2119#issuecomment-393426877,4,['test'],['testReport']
Testability,/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1PrepareInput/). And 93 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393458046:4462,test,testReport,4462,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393458046,4,['test'],['testReport']
Testability,/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput/). And 93 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117#issuecomment-393471686:4465,test,testReport,4465,https://root.cern,https://github.com/root-project/root/pull/2117#issuecomment-393471686,4,['test'],['testReport']
Testability,"/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serializ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377827282:38354,test,test-products,38354,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282,1,['test'],['test-products']
Testability,"/scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serializ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377744663:4341,test,test-products,4341,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663,1,['test'],['test-products']
Testability,"/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:368:27; <snip/>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377827282:38580,test,test-products,38580,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282,4,['test'],['test-products']
Testability,"/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:2503:47; #10 0x00000000046bdcea clang::ASTDeclWriter::VisitDecl(clang::Decl*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp:368:27; <snip/>; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377744663:4567,test,test-products,4567,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663,4,['test'],['test-products']
Testability,/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5Ch,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411177216:3807,test,testReport,3807,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411177216,1,['test'],['testReport']
Testability,"/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 175 more. ### Failing tests:; - [projectroot.roottest.python.basic.roottest_python_basic_operator](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29705/testReport/projectroot.roottest.python/basic/roottest_python_basic_operator/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-396066340:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-396066340,2,['test'],"['testReport', 'tests']"
Testability,"/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 175 more. ### Failing tests:; - [projectroot.roottest.python.basic.roottest_python_basic_operator](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29736/testReport/projectroot.roottest.python/basic/roottest_python_basic_operator/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-396162096:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-396162096,2,['test'],"['testReport', 'tests']"
Testability,0-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! . ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory_py/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runatlasaod](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runatlasaod/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runcms310](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runcms310/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runaliceesd](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-589606883:1422,test,testReport,1422,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-589606883,1,['test'],['testReport']
Testability,0:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:2941,test,test,2941,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,1,['test'],['test']
Testability,"0; Submodule=stdio.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; Mod=AEEBBD0; Submodule=signal.h; Mod=AEED350; Submodule=stdlib.h; LinkageSpecDecl 0xb598660 <<module-includes>:1:1, line:3:1> line:1:8 C; `-LinkageSpecDecl 0xb5986d8 </usr/include/sys/cdefs.h:99:24, line:100:22> line:99:31 in libc.string.h C; |-TypedefDecl 0xb598748 </scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc/cling/lib/clang/13.0.0/include/stddef.h:46:1, col:23> col:23 in libc.string.h hidden referenced size_t 'unsigned long'; | `-BuiltinType 0xb55c390 'unsigned long'; |-FunctionDecl 0xb598af0 </usr/include/string.h:42:1, /usr/include/sys/cdefs.h:285:63> /usr/include/string.h:42:14 in libc.string.h hidden memcpy 'void *(void *__restrict, const void *__restrict, size_t) throw()' extern; | |-ParmVarDecl 0xb5987c0 <col:22, col:39> col:39 in libc.string.h hidden __dest 'void *__restrict'; | |-ParmVarDecl 0xb598878 <col:47, col:70> col:70 in libc.string.h hidden __src 'const void *__restrict'; | |-ParmVarDecl 0xb598918 <line:43:8, col:15> col:15 in libc.string.h hidden __n 'size_t':'unsigned long'; | |-NonNullAttr 0xb598ba8 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:43:44> 1 2; | `-BuiltinAttr 0xb598d10 <<invalid sloc>> Implicit 779; |-FunctionDecl 0xb599000 <line:46:1, /usr/include/sys/cdefs.h:285:63> /usr/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377827282:1161,test,test-products,1161,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282,1,['test'],['test-products']
Testability,147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](h,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:2812,test,test,2812,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['test']
Testability,147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.roottest.root.multicore.roottest_root_multicore_poolManager_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_poolManager_build/); - [projectroot.roottest.root.multicore.roottest_root_m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409277662:2812,test,test,2812,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409277662,1,['test'],['test']
Testability,2 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineU,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411059605:3617,test,testReport,3617,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411059605,1,['test'],['testReport']
Testability,"2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1775:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_testForeignDraw](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/cloning/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-415844036:2787,test,testReport,2787,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-415844036,1,['test'],['testReport']
Testability,"2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:2787,test,testReport,2787,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,1,['test'],['testReport']
Testability,25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1154135015:1205,test,tests,1205,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015,2,['test'],"['testBuildDir', 'tests']"
Testability,"3, col:29> col:29 in xlocale.h hidden __ctype_b 'const unsigned short *'; | |-FieldDecl 0xbf7bf28 <line:34:3, col:14> col:14 in xlocale.h hidden __ctype_tolower 'const int *'; | |-FieldDecl 0xbf7bf98 <line:35:3, col:14> col:14 in xlocale.h hidden __ctype_toupper 'const int *'; | `-FieldDecl 0xbf7c098 <line:38:3, col:25> col:15 in xlocale.h hidden __names 'const char *[13]'; |-TypedefDecl 0xbf7c1c8 <line:27:1, line:39:4> col:4 in xlocale.h hidden referenced __locale_t 'struct __locale_struct *'; | `-PointerType 0xbf7c170 'struct __locale_struct *'; | `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; | `-RecordType 0xbf7ba40 '__locale_struct'; | `-CXXRecord 0xbf7b988 '__locale_struct'; `-TypedefDecl 0xbf7c278 <line:42:1, col:20> col:20 in xlocale.h hidden locale_t '__locale_t':'struct __locale_struct *'; `-TypedefType 0xbf7c240 '__locale_t' sugar; |-Typedef 0xbf7c1c8 '__locale_t'; `-PointerType 0xbf7c170 'struct __locale_struct *'; `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; `-RecordType 0xbf7ba40 '__locale_struct'; `-CXXRecord 0xbf7b988 '__locale_struct'; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scrat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377744663:3288,test,test-products,3288,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663,1,['test'],['test-products']
Testability,"304cc8f949e40693d63b855b4b24bc81fa729; # bad: [0f279c7a5c34eaae797c325c18614def21eba921] Revert ""patch"" it wass my mistake inusing git; git bisect bad 0f279c7a5c34eaae797c325c18614def21eba921; # bad: [56d228a14e3631de157ae98dd61d21193e4502d5] [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes; git bisect bad 56d228a14e3631de157ae98dd61d21193e4502d5; # good: [3adb89bb9f8e73c82787babb2f877fece7394770] [ThinLTO] Make cloneUsedGlobalVariables deterministic; git bisect good 3adb89bb9f8e73c82787babb2f877fece7394770; # good: [af4451eb4f38ce492ca38add91c8378f32b93eca] [NFC] Make TrailingObjects non-copyable/non-movable; git bisect good af4451eb4f38ce492ca38add91c8378f32b93eca; # good: [3c4cdd0b6a6fd760707be9b5dec32378ec55c549] [mlir] ExecutionEngine needs special handling for COFF binaries; git bisect good 3c4cdd0b6a6fd760707be9b5dec32378ec55c549; # good: [ab5b00ada9e77437ed2c76f73cfb8481bb9826a5] Revert ""[Driver][Windows] Support per-target runtimes dir layout for profile instr generate""; git bisect good ab5b00ada9e77437ed2c76f73cfb8481bb9826a5; # first bad commit: [56d228a14e3631de157ae98dd61d21193e4502d5] [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes; ```. ```; 56d228a14e3631de157ae98dd61d21193e4502d5 is the first bad commit; commit 56d228a14e3631de157ae98dd61d21193e4502d5; Author: Juneyoung Lee <aqjune@gmail.com>; Date: Tue Feb 23 11:46:59 2021 +0900. [SimplifyCFG] Update passingValueIsAlwaysUndefined to check more attributes. This is a simple patch to update SimplifyCFG's passingValueIsAlwaysUndefined to inspect more attributes. A new function `CallBase::isPassingUndefUB` checks attributes that imply noundef. Reviewed By: spatel. Differential Revision: https://reviews.llvm.org/D97244. llvm/include/llvm/IR/InstrTypes.h | 11 +++++++++++; llvm/lib/Transforms/Utils/SimplifyCFG.cpp | 6 +++---; llvm/test/Transforms/SimplifyCFG/UnreachableEliminate.ll | 10 ++++++----; 3 files changed, 20 insertions(+), 7 deletions(-); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547#issuecomment-1011201311:3638,test,test,3638,https://root.cern,https://github.com/root-project/root/issues/9547#issuecomment-1011201311,1,['test'],['test']
Testability,"3647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-bui",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411436247:2793,test,testReport,2793,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411436247,1,['test'],['testReport']
Testability,"3648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2366#issuecomment-407829804:2805,test,testReport,2805,https://root.cern,https://github.com/root-project/root/pull/2366#issuecomment-407829804,1,['test'],['testReport']
Testability,375/console).; ### Errors:; - 958/1991 Test #866: tutorial-v7-concurrentfill.cxx ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.01 sec ; - 969/1991 Test #878: tutorial-v7-perf.cxx ..............................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.91 sec ; - 971/1991 Test #879: tutorial-v7-perfcomp.cxx ..........................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.00 sec ; - 972/1991 Test #880: tutorial-v7-simple.cxx ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.01 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_concurrentfill.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_concurrentfill_cxx/); - [projectroot.runtutorials.tutorial_v7_perf.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_perf_cxx/); - [projectroot.runtutorials.tutorial_v7_perfcomp.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_perfcomp_cxx/); - [projectroot.runtutorials.tutorial_v7_simple.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_simple_cxx/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/); - [projectroot.roottest.root.meta.enums.roottest_root_meta_enums_enumsInNamespaces](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot.roottest.root.meta/enums/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4358#issuecomment-528926777:1089,test,testReport,1089,https://root.cern,https://github.com/root-project/root/pull/4358#issuecomment-528926777,1,['test'],['testReport']
Testability,"44, /usr/include/string.h:589:67> 1; `-FunctionDecl 0xb606160 <line:602:1, /usr/include/sys/cdefs.h:285:63> /usr/include/string.h:602:14 in libc.string.h hidden basename 'char *(const char *) throw()' extern; |-ParmVarDecl 0xb606078 <col:24, col:36> col:36 in libc.string.h hidden __filename 'const char *'; `-NonNullAttr 0xb606208 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:602:69> 1; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377827282:37817,test,test-products,37817,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282,1,['test'],['test-products']
Testability,"47483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_wri",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2495#issuecomment-414953063:2801,test,testReport,2801,https://root.cern,https://github.com/root-project/root/pull/2495#issuecomment-414953063,1,['test'],['testReport']
Testability,"47483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414956948:2801,test,testReport,2801,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414956948,1,['test'],['testReport']
Testability,"47483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineU",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411059605:2801,test,testReport,2801,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411059605,1,['test'],['testReport']
Testability,"47483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411101883:2801,test,testReport,2801,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411101883,1,['test'],['testReport']
Testability,"47483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testRep",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411201963:2801,test,testReport,2801,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411201963,1,['test'],['testReport']
Testability,"47483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root.io",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411165572:2801,test,testReport,2801,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411165572,1,['test'],['testReport']
Testability,"47483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411177216:2801,test,testReport,2801,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411177216,1,['test'],['testReport']
Testability,"47483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411129604:2801,test,testReport,2801,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411129604,1,['test'],['testReport']
Testability,"47483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:2801,test,testReport,2801,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,1,['test'],['testReport']
Testability,"47483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_pyt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-411277208:2801,test,testReport,2801,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-411277208,1,['test'],['testReport']
Testability,"483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roott",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393485196:2803,test,testReport,2803,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393485196,1,['test'],['testReport']
Testability,"483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_py",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393458046:2803,test,testReport,2803,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393458046,1,['test'],['testReport']
Testability,"483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_py",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2119#issuecomment-393426877:2803,test,testReport,2803,https://root.cern,https://github.com/root-project/root/pull/2119#issuecomment-393426877,1,['test'],['testReport']
Testability,"483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 178 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roott",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-393462547:2803,test,testReport,2803,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-393462547,1,['test'],['testReport']
Testability,"5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2023-08-31T18:29:46.289Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_pythonizations](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_pythonizations/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.python.stl.roottest_python_stl_stl](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/stl/roottest_python_stl_stl/); - [projectroot.tmva.pymva.test.PyMVA_Keras_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/project",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13577#issuecomment-1701582600:1440,test,testReport,1440,https://root.cern,https://github.com/root-project/root/pull/13577#issuecomment-1701582600,1,['test'],['testReport']
Testability,"61:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:696:48: warning: ‘%s’ directive output may be truncated writing up to 1024 bytes into a region of size 64 [-Wformat-truncation=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] . And 179 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.cling.dict.ROOT-9185.roottest_cling_dict_ROOT_9185_ROOT9185](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.cling.dict/ROOT-9185/roottest_cling_dict_ROOT_9185_ROOT9185/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851#issuecomment-408947574:2830,test,testReport,2830,https://root.cern,https://github.com/root-project/root/pull/1851#issuecomment-408947574,1,['test'],['testReport']
Testability,6439/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411436247:3795,test,testReport,3795,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411436247,1,['test'],['testReport']
Testability,"648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2118#issuecomment-393467051:2806,test,testReport,2806,https://root.cern,https://github.com/root-project/root/pull/2118#issuecomment-393467051,1,['test'],['testReport']
Testability,"648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117#issuecomment-393471686:2806,test,testReport,2806,https://root.cern,https://github.com/root-project/root/pull/2117#issuecomment-393471686,1,['test'],['testReport']
Testability,"648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2113#issuecomment-393289526:2806,test,testReport,2806,https://root.cern,https://github.com/root-project/root/pull/2113#issuecomment-393289526,1,['test'],['testReport']
Testability,"7483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30425/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30425/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2201#issuecomment-398086881:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2201#issuecomment-398086881,5,['test'],"['test', 'testReport', 'tests']"
Testability,780/testReport/projectroot.roottest.root.io/stdpair/roottest_root_io_stdpair_collection_build/); - [projectroot.roottest.root.io.stdpair.roottest_root_io_stdpair_pair_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root.io/stdpair/roottest_root_io_stdpair_pair_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tprofile_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tprofile_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_ttree_read_imt_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_ttree_read_imt_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_th1f_fill_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_th1f_fill_build/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_libInitOrderDups_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_libInitOrderDups_build/); - [projectroot.roottest.root.meta.genreflex.ROOT-5709.roottest_root_meta_genreflex_ROOT_5709_Tau_libgen_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root.meta.genreflex/ROOT-5709/roottest_root_meta_genreflex_ROOT_5709_Tau_libgen_build/); - [projectroot.roottest.root.multicore.roottest_root_mult,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12415#issuecomment-1456017123:1399,test,testReport,1399,https://root.cern,https://github.com/root-project/root/pull/12415#issuecomment-1456017123,1,['test'],['testReport']
Testability,8/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testRepo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411129604:3806,test,testReport,3806,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411129604,1,['test'],['testReport']
Testability,9 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2495#issuecomment-414953063:3617,test,testReport,3617,https://root.cern,https://github.com/root-project/root/pull/2495#issuecomment-414953063,1,['test'],['testReport']
Testability,"94967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_treeCloneTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33965/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_treeCloneTest/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2381#issuecomment-408677038:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2381#issuecomment-408677038,2,['test'],"['testReport', 'tests']"
Testability,94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:3171,test,test,3171,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,1,['test'],['test']
Testability,:GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-410966153:3059,test,testReport,3059,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-410966153,1,['test'],['testReport']
Testability,":basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867); > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17); > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161); > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7); > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840); > > > #14 0x0000000000a32349 _start (./cling+0xa32349); > > > Stack dump:; > > > 0.	Program arguments: ./cling -xcuda ; > > > Segmentation fault (core dumped); > > > ```; > > ; > > ; > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session.; > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.; > > ; > > ; > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.; > ; > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-777052629:2835,test,test,2835,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-777052629,1,['test'],['test']
Testability,"; * 1 * 1 * *; * 2 * 2 * *; * 3 * 0 * *; * 4 * 1 * *; * 5 * 2 * *; * 6 * 0 * *; * 7 * 1 * *; * 8 * 2 * *; ************************************; ```; A very weird behaviour imho. Fortunately RDataFrame returns an error in any case if the friend chain does not have a name, which Enrico discussed many times in the comments and I now fully agree it's the best behaviour possible.; ```; terminate called after throwing an instance of 'std::runtime_error'; what(): Unknown column: treefriend.y; ```. # Case 3; Code to create the trees; ```cpp; void write_parent_tree(std::string_view filename, std::string_view treename); {; int x{};. TFile file{filename.data(), ""recreate""};; TTree tree{treename.data(), ""test friend trees""};; tree.Branch(""x"", &x, ""x/I"");. for (int i = 0; i < 9; i++); {; x = i;; tree.Fill();; }; tree.Write();; }. void write_friend_tree(std::string_view filename, std::string_view treename); {; int y{};. TFile file{filename.data(), ""recreate""};; TTree tree{treename.data(), ""test friend trees""};; tree.Branch(""y"", &y, ""y/I"");. for (int i = 0; i < 3; i++); {; y = i;; tree.Fill();; }; tree.Write();; }. void write_tree_and_friends(); {; // Write parent tree to disk.; write_parent_tree(""treeparent.root"", ""treeparent"");; // Write friend trees to disk.; for (int i = 1; i < 4; i++); {; std::string indexstr = std::to_string(i);; std::string treename{""treefriend""};; treename += indexstr;; std::string filename{treename + "".root""};; write_friend_tree(filename, treename);; }; }; ```. Main function; ```cpp; int main(){; write_tree_and_friends();. TFile parentfile{""treeparent.root"", ""read""};. std::unique_ptr<TTree> parenttree{parentfile.Get<TTree>(""treeparent"")};. TChain friendchain{""treefriend""};; for (int i = 1; i < 4; i++); {; std::string indexstr = std::to_string(i);; std::string treename{""treefriend""};; treename += indexstr;; std::string filename{treename + "".root""};; std::string fullpath{filename + ""/"" + treename};; friendchain.Add(fullpath.c_str());; }; parenttree->AddFrie",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816500613:9936,test,test,9936,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816500613,1,['test'],['test']
Testability,"; *............................................................................*; ******************************************************************************; *Tree :treefriend: test friend trees *; *Entries : 9 : Total = 958 bytes File Size = 490 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :x : x/I *; *Entries : 9 : Total Size= 583 bytes File Size = 110 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ```; Result from rdf.Display()->Print():; ```; x | treefriend.x | ; 0 | 0 | ; 1 | 1 | ; 2 | 2 | ; 3 | 3 | ; 4 | 4 | ; 5 | 5 | ; 6 | 6 | ; 7 | 7 | ; 8 | 8 | ; ```; So far so good! Nothing special here, fortunately :smile: . # Case 2; Code; ```cpp. void write_tree(std::string_view filename, std::string_view treename); {; int y{};. TFile file{filename.data(), ""recreate""};; TTree tree{treename.data(), ""test friend trees""};; tree.Branch(""y"", &y, ""y/I"");. for (int i = 0; i < 3; i++); {; y = i;; tree.Fill();; }; tree.Write();; }. void write_chain_and_friends(); {; // Write parent chain to disk.; for (int i = 1; i < 4; i++); {; std::string indexstr = std::to_string(i);; std::string treename{""treeparent""};; std::string filename{treename + indexstr + "".root""};; write_tree(filename, treename);; }; // Write friend chain to disk.; for (int i = 1; i < 4; i++); {; std::string indexstr = std::to_string(i);; std::string treename{""treefriend""};; treename += indexstr;; std::string filename{treename + "".root""};; write_tree(filename, treename);; }; }. int main(){; TChain parentchain{""treeparent""};; parentchain.Add(""treeparent1.root"");; parentchain.Add(""treeparent2.root"");; parentchain.Add(""treeparent3.root"");; // DIFFERENT SCENARIOS IF WE ADD A CHAIN NAME OR NOT, SEE BELOW; TChain friendchain{""treefriend""};; friendchain.Add(""treefriend1.root/treefriend1"");; friendchain.Add(""treefriend2.root/treefriend2"");; fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816500613:4030,test,test,4030,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816500613,1,['test'],['test']
Testability,; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2118#issuecomment-393467051:3363,test,testReport,3363,https://root.cern,https://github.com/root-project/root/pull/2118#issuecomment-393467051,1,['test'],['testReport']
Testability,; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2113#issuecomment-393289526:3363,test,testReport,3363,https://root.cern,https://github.com/root-project/root/pull/2113#issuecomment-393289526,1,['test'],['testReport']
Testability,"; cd ./roottest/root/meta/cmsUnload/; make cleantest V=1. cat scripts/case3.script; ```. ```cpp; struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; .L lib/libStrip.so ; Marker m2;; gInterpreter->AutoParse(""SiStripCluster"");; .undo 2; SiStripCluster obj;; ```. ```bash; root.exe -e ""#define ClingWorkAroundPrintfIssues"" -e ""#define ClingWorkAroundLackOfModule"" -e ""#define ClingWorkAroundProxyConfusion"" -e ""#define ClingWorkAroundMissingDynamicScope"" -e ""#define ClingWorkAroundMultipleInclude"" -e ""#define ClingWorkAroundAutoParseUsingNamespace"" -e ""#define ClingWorkAroundExtraParensWithImplicitAuto"" -e ""#define ClingWorkAroundNoPrivateClassIO"" -e ""#define ClingWorkAroundBrokenUnnamedReturn"" -e ""#define ClingWorkAroundUnnamedDetection2"" -e ""#define ClingWorkAroundUnnamedInclude"" -e ""#define ClingWorkAroundJITfullSymbolResolution"" -e ""#define ClingWorkAroundNoDotNamespace"" -e ""#define ClingWorkAroundNoDotInclude"" -e ""#define ClingWorkAroundUnnamedIncorrectFileLoc"" -e ""#define ClingWorkAroundTClassUpdateDouble32"" -e ""#define ClingWorkAroundUnloadingVTABLES"" -l -b < scripts/case3.script; ```. Currently this test fails for runtime_cxxmodules even though the change seems unrelated. It seems to me that failure is the right behavior. The script 'unloads' `gInterpreter->AutoParse(""SiStripCluster"");` and after that point the definition of `SiStripCluster` should not be available. ```; ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'; SiStripCluster obj;; ^; libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'; ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;; ^; ```. My suspicion is that the for the non-modules case we somehow fail to unload the definition of `SiStripCluster`. @pcanal, can you remember what exactly we were testing there?. PS: How the deserialization of the vtables of `TMVA::IPruneTool` makes the test succeeds is a complete mystery to me at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852#issuecomment-433640932:1156,test,test,1156,https://root.cern,https://github.com/root-project/root/pull/2852#issuecomment-433640932,3,['test'],"['test', 'testing']"
Testability,"; | 1 | 1 |; | 2 | 2 |; | 3 | 3 |; | 4 | 4 |; | 5 | 5 |; | 6 | 6 |; | 7 | 7 |; | 8 | 8 |. I can do that through:; 1. Two TTrees, each with 9 entries, each saved to one single file.; 2. Two TChains, each chain has 9 total entries, each chain is made of three files, each file has internally one TTree with 3 entries.; 3. One TTree with 9 entries saved to one file, plus one TChain with 9 total entries, three files each with a TTree with 3 entries. In each scenario I will create the datasets, read the files back, add one of the two datasets as a friend to the other. Finally, I will try to print the columns both with `TTree::Print` and rdf's `Display`. Plus, I will also use `TTree::Scan` to get more information on the internal structure of the tree and its friend. # Case 1; This is the code I use to recreate the scenario. ```cpp; void write_tree(std::string_view filename, std::string_view treename); {; int x{};. TFile file{filename.data(), ""recreate""};; TTree tree{treename.data(), ""test friend trees""};; tree.Branch(""x"", &x, ""x/I"");. for (int i = 0; i < 9; i++); {; x = i;; tree.Fill();; }; tree.Write();; }; ; int main(){; write_tree(""treeparent.root"", ""treeparent"");; write_tree(""treefriend.root"", ""treefriend"");; TFile parentfile{""treeparent.root"", ""read""};; TFile friendfile{""treefriend.root"", ""read""};. std::unique_ptr<TTree> parenttree{parentfile.Get<TTree>(""treeparent"")};; std::unique_ptr<TTree> friendtree{friendfile.Get<TTree>(""treefriend"")};. parenttree->AddFriend(friendtree.get());; parenttree->Scan(""x:treefriend.x"");; parenttree->Print(""all"");. ROOT::RDataFrame rdf{*parenttree};; auto display = rdf.Display("""");; std::cout << ""Result from rdf.Display()->Print():\n"";; display->Print();; }; ```. Result from TTree:Scan(""x:treefriend.x""):; ```; ************************************; * Row * x * treefrien *; ************************************; * 0 * 0 * 0 *; * 1 * 1 * 1 *; * 2 * 2 * 2 *; * 3 * 3 * 3 *; * 4 * 4 * 4 *; * 5 * 5 * 5 *; * 6 * 6 * 6 *; * 7 * 7 * 7 *; * 8 * 8 * 8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816500613:1519,test,test,1519,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816500613,1,['test'],['test']
Testability,"=============================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc; entry=0x7ffeea3c7360, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408; #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0: 0, yb=; 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0: 0, yb=; 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87; ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```; source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428#issuecomment-698590998:4180,test,test,4180,https://root.cern,https://github.com/root-project/root/issues/6428#issuecomment-698590998,1,['test'],['test']
Testability,"> * Revert changes to `emitLLVMUsed`: clearing the vectors `LLVMUsed` and `LLVMCompilerUsed` does not seem; > needed because `CodeGenerator::StartModule` will swap the entire `CodeGenModule`.; > . Makes sense to me. > * Revert changes to `SourceManager::isBeforeInTranslationUnit`: if assertions are enabled `llvm_unreachable` has the same effects as `assert(0)`. As we don't see this assertion in recent times, this change is probably not relevant anymore. The problem is generated (synthesized) code which have no source location information. Then when you have an error resulting in multiple overloads we will need to compare their source locations to order the diagnostics. This patch makes this codes to work while the llvm_unreachable makes it crash in production. > ; > * Revert change in `SourceLocation::isBeforeInTranslationUnitThan`: I believe that all locations have a `SourceManager` nowadays, even from the command line. That was probably relevant for the PCH and rootmaps?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13181#issuecomment-1621492471:285,assert,assertions,285,https://root.cern,https://github.com/root-project/root/pull/13181#issuecomment-1621492471,3,['assert'],"['assert', 'assertion', 'assertions']"
Testability,"> * why does Linux seem to be ok?. See my previous reply (I will debug myself on Linux next week to give you the correct answer). > * why is `clustersInThisFileSize` zero as per Bertrand's last comment? that number should correspond to the TTree clusters in a given file, and should always be at least 1. Because, as already explained, the `TThreadExecutor` is created **after** `Internal::MakeClusters`, which is calling `ROOT::GetImplicitMTPoolSize()`, which is calling `ROOT::Internal::TPoolManager::GetPoolSize()`, and since the constructor of ROOT::Internal::TPoolManager has not yet been created (by the `TThreadExecutor` constructor), its `fgPoolSize` default value is 0: `UInt_t TPoolManager::fgPoolSize = 0;`; The purpose of this patch is to move the constructor of `TThreadExecutor` **before** the use of `ROOT::Internal::TPoolManager::GetPoolSize()`. I'm a but puzzled about all the discussions around this one line change, and I don't know how to explain better such an easy and obvious issue. Feel free to do anything about it, I know how to fix it on Windows, and I can still disable the failing test if you (I mean all of you) can't find a proper solution to this issue.; And [#4947](https://github.com/root-project/root/pull/4947) was simply another way of initializing the `TPoolManager` before using it.; And sorry if I'm not clear enough about this issue, but it becomes obvious simply by looking at the code...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4953#issuecomment-583759945:1110,test,test,1110,https://root.cern,https://github.com/root-project/root/pull/4953#issuecomment-583759945,1,['test'],['test']
Testability,"> ; > Comments?. This looks awesome!. > A few caveats:; > ; > * `PagedVector` is a bad name, I agree. Suggestions are welcome. We did not come up with a better name. Ours was `SparseVector`. Just to confirm, we do not pre-allocate the entire vector but we deterministically allocate the slabs. That is, if I hardcoded an offset `101` in my code and the pre-allocation allocated just a slab [0-100), then when I do PagedVector[101] it would put what I need where I need it, right?. > ; > * At the moment the implementation allows generic callbacks for ranges, however as I said we only need default initialisation. Removing such flexibility should buy another 1 MB from my test. If it is not needed, let's keep it simple. It would be easier to go through the upstream llvm reviews. > ; > * In case `DeclID*` and `QualType` can default to all 0, one could probably achieve the same result in a more elegant way using calloc / realloc. Can we make the API of the `PagedVector` such that it becomes a drop-in replacement? I have not looked deeply in the PR but I see some work being done on the users side. > ; > * There are probably other vectors which can be optimised in the same way, in particular IdentifiersLoaded as already mentioned by @vgvassilev. The source locations offset would be a major source of improvement if this technique flies there. PP: It seems llvm has some facility along these lines: https://llvm.org/doxygen/classllvm_1_1SparseBitVector.html",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1716088321:672,test,test,672,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1716088321,1,['test'],['test']
Testability,"> > > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration.; > > > > ; > > > > ; > > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:; > > > > ```; > > > > Singularity> ./cling -xcuda; > > > > warning: argument unused during compilation: '-c'; > > > > ; > > > > ****************** CLING ******************; > > > > * Type C++ code and press enter to run it *; > > > > * Type .q to exit *; > > > > *******************************************; > > > > [cling]$ __global__ void g(int * out){ *out=43;}; > > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a); > > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc); > > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39); > > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0); > > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092); > > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9); > > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9); > > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e); > > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67); > > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867); > > > > #10 0x0000",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-777250984:62,test,test,62,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-777250984,3,['test'],"['test', 'tested']"
Testability,"> > > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration.; > > > ; > > > ; > > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:; > > > ```; > > > Singularity> ./cling -xcuda; > > > warning: argument unused during compilation: '-c'; > > > ; > > > ****************** CLING ******************; > > > * Type C++ code and press enter to run it *; > > > * Type .q to exit *; > > > *******************************************; > > > [cling]$ __global__ void g(int * out){ *out=43;}; > > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a); > > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc); > > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39); > > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0); > > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092); > > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9); > > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9); > > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e); > > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67); > > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867); > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-777052629:60,test,test,60,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-777052629,3,['test'],"['test', 'tested']"
Testability,"> > > @SimeonEhrig, I do not have a proper cuda device to test it -- but could you test cling (with llvm9) and cuda. I want to make sure that I did not forget anything during this migration.; > > ; > > ; > > I tested this last week. Unfortunately, the CUDA mode does not work at the moment. If I try to compile a CUDA kernel, I get a segmentation error:; > > ```; > > Singularity> ./cling -xcuda; > > warning: argument unused during compilation: '-c'; > > ; > > ****************** CLING ******************; > > * Type C++ code and press enter to run it *; > > * Type .q to exit *; > > *******************************************; > > [cling]$ __global__ void g(int * out){ *out=43;}; > > #0 0x0000000000b80b2a llvm::sys::PrintStackTrace(llvm::raw_ostream&) (./cling+0xb80b2a); > > #1 0x0000000000b7e9cc llvm::sys::RunSignalHandlers() (./cling+0xb7e9cc); > > #2 0x0000000000b7eb39 SignalHandler(int) (./cling+0xb7eb39); > > #3 0x00007f024c2c54c0 (/lib/x86_64-linux-gnu/libc.so.6+0x354c0); > > #4 0x0000000000b4b092 llvm::Twine::str[abi:cxx11]() const (./cling+0xb4b092); > > #5 0x0000000000b456e9 llvm::Triple::Triple(llvm::Twine const&) (./cling+0xb456e9); > > #6 0x0000000000b80ce9 llvm::TargetRegistry::lookupTarget(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) (./cling+0xb80ce9); > > #7 0x0000000000ab412e cling::IncrementalCUDADeviceCompiler::generatePTX() (./cling+0xab412e); > > #8 0x0000000000ab4b67 cling::IncrementalCUDADeviceCompiler::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (./cling+0xab4b67); > > #9 0x0000000000ace867 cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867); > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-776591942:58,test,test,58,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-776591942,3,['test'],"['test', 'tested']"
Testability,"> > > @hahnjo, is there a way to move forward without losing progress we made for windows?; > > ; > > I don't see one, please see my very lengthy and detailed commit message of why I think it's not going to work like that.; > ; > Would it not help if we annotate all dependencies by hand all of the dependencies that cannot work with modules?. Yes, this is the direction I've also been thinking about. But it's certainly not an easy change of a couple of lines, and I really would like to fix the currently broken state first. To be clear, this is currently *blocking* me from making changes in ROOT / Cling, or at least making it unnecessarily hard because I always have to either deal with 20-ish unrelated test failures or base my branches on these fixes. It's really painful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12561#issuecomment-1491725885:709,test,test,709,https://root.cern,https://github.com/root-project/root/pull/12561#issuecomment-1491725885,1,['test'],['test']
Testability,"> > > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > > ; > > ; > > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.; > ; > Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?. Can you add to cling -fno-rtti? I don’t think this can be done automatically it is not automatic for compilers as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1193095859:67,test,test,67,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193095859,3,['test'],"['test', 'test-case']"
Testability,"> > I think almost everything is there now. I've tested it in both Ubuntu 20.04 LTS and Windows 10. Can we let @phsft-bot build it on other systems?; > ; > No, it is not, see my comments about the coordinates ... how do you define them ?. I added Doxygen comments on the parameters of the methods. The coordinates are like this:. For AddItem you provide x1, y1 which is the starting coordinate and x2, y2 which is the stopping coordinate and labelX and labelY whihc is where the label is. I'm trying to figure out a way where you don't need to set the coordinates, but that may take a while. For AddPair, you simply provide the x and y coordinate of the center of the arc. The labels are positioned automatically. For AddCurved, You also only provide the x and y coordinate of the center of the arc, along with phimin and phimax angles. I'm also trying to find a way to reduce the amount of parameters here (like in TikZ). The problem is that the main type of feynman Diagram, is one where you have the fermions at the left and right side, and a boson + virtual particles (in pairs) in the middle. If this were the only type of feynman diagram, I could do this easily, however sometimes there are other ""irregular"" diagrams, which would be harder to implement. Is there a way, where the particles can be positioned automatically, and then checked to make sure there is no overlapping?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7820#issuecomment-829968031:49,test,tested,49,https://root.cern,https://github.com/root-project/root/pull/7820#issuecomment-829968031,1,['test'],['tested']
Testability,"> > I think there should be little failures since we switch already long ago to the ""just fail the test"" mode. But you never know :); > ; > There is a ton of tutorials that would fail that currently do not run, see #5938 . But I don't think this PR interferes with that, right @hageboeck ?. They are kind of doing the same thing, but #5938 is dumb. It only checks if it can `import <package>` at all, and then runs the tutorial or fails all that need e.g. `numpy`. It doesn't care for versions. I guess I can rewrite the `${PYTHON_EXECUTABLE_DevMain} -c ""import <package>""` from the other PR to simply use the test from this PR. For this, however, it would be nice if you could ask for specific packages. So the thing would look up numba in the requirements, and test if the correct version is installed to run a tutorial or test. This way, we would also get a cross-check that dependencies of tests/tutorials are actually in requirements.txt.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-654934046:99,test,test,99,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-654934046,5,['test'],"['test', 'tests']"
Testability,"> > Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.; > ; > You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well. Unfortunately, the only flags I've passed are `-std=c++17`, `-I`, `-L`, and some `-l`. The full command is shown in the readme. Should this work automatically or do I need to do more to expose these symbols to clang?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1193060988:65,test,test,65,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060988,3,['test'],"['test', 'test-case']"
Testability,> > do you have any intuition about what could have gone wrong that causes these failures in the execCheckClusterRange test because of different file sizes?; > ; > Not yet. It could be that some leaf type changed or a `StreamerInfo` changed (for that reverting just the `LinkDef` should be sufficient). That could be it! I have removed the changes from the LinkDef files from this PR.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14268#issuecomment-1863638811:119,test,test,119,https://root.cern,https://github.com/root-project/root/pull/14268#issuecomment-1863638811,1,['test'],['test']
Testability,"> @ferdymercury is that library already used in ROOT?. I don't think it's used yet in ROOT, but @henryiii could confirm. . > Considering it's 10k loc, I'd not count it as ""simplifying"" unless we decided to use it in multiple places (ideally all our cpp executables). True. My experience is that there are many places doing CLI parsing over and over again within ROOT, so if we would replace everywhere, then we would remove more than 10k from ROOT's codebase, and reduce maintenance / bugs on ROOT's side, so it would be worth it. Or at least for new interfaces, see e.g. https://github.com/root-project/root/pull/14038. > Also, we must make sure that the argument parsing logic remains backward-compatible, which is not very clear to me if it would be the case with that lib. That lib has many customization options, so a derived parser class could probably do it, but yeah, it's hard to say for sure in advance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16090#issuecomment-2244874004:673,log,logic,673,https://root.cern,https://github.com/root-project/root/pull/16090#issuecomment-2244874004,1,['log'],['logic']
Testability,"> @guitargeek Maybe commit a comment on how to create the reference file above the test. Sorry that I didn't do that already. The way I did this was simply to open the v4 file with a newer ROOT version, use the copy constructor of RooDataHist and save the copied object. Is this the way that you would document, or is there an easier way?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8090#issuecomment-832034444:83,test,test,83,https://root.cern,https://github.com/root-project/root/pull/8090#issuecomment-832034444,1,['test'],['test']
Testability,"> @hageboeck Thanks for the correction. The build failure looks like it has something to do with a Git test, but it’s not clear to me what went wrong. No worries, that's somebody else who messed up a setup. I think we are ready to merge, thanks for taking the time!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6172#issuecomment-675429807:103,test,test,103,https://root.cern,https://github.com/root-project/root/pull/6172#issuecomment-675429807,1,['test'],['test']
Testability,"> @hahnjo I did not want to let this sit for too long and as days ahead are even busier for me I invested now some more time on this. The good news is that I can pretty confidently say that the memory leak reported [above in the left plot](https://github.com/root-project/root/issues/14055#issuecomment-1814642915) has nothing to do with ROOT 🎉 and it was an unlucky coincidence which made me think it is due to ROOT. 😓 I still have to understand this memory behaviour in detail, but it is off-topic here. 🙈. Ok, thanks for cross-checking!. > I was about simply closing the issue, when I remembered checking old issues in our project that our tests were just passing with ROOT `v6.26` and started to fail reporting the above mentioned sanitiser complaint from `v6.28`. I now checked and these failure occur as well with `v6.30` and `v6.32`. As far as I understand from our exchange above, we can safely suppress these adding `leak:libCling'` to `lsan-root.supp` file (I would not exclude more than the bare minimum in order to avoid suppress potential real problems/errors in the future). Yes, I believe from an application point of view, you can treat `libCling` as a black box. > However, I would like to ask you a feedback about the fact this suppression was not necessary in `v6.26`. Is this expected for you? 🤔. If the leaks are about `TemplateId` (as they were in the log file(s) you shared), then yes this is a problem we introduced in v6.28. It was eventually fixed in https://github.com/root-project/root/pull/16150 which will appear in v6.34 (later this year). Sorry for not recognizing this as a real problem earlier (the fix was also made difficult because it was ""caused"" by an upstream change in LLVM/Clang when we upgraded).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-2382239702:643,test,tests,643,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-2382239702,2,"['log', 'test']","['log', 'tests']"
Testability,"> @phsft-bot build!; > ; > Could you update the commit message to something like:; > ""[rootcling] Don't generate dictionary to throw it away when called with -r; > ; > This patch should speed up rootcling -r and simplify some of the conditional logic."". It's just cosmetics, but could you maybe shorten the first line a bit more? In github, the `-r` starts to fall into the next line.; ""[rootcling] Suppress dictionary when called with -r.""; Then, the ""throwing away"" part etc can go into the body.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5223#issuecomment-606481867:245,log,logic,245,https://root.cern,https://github.com/root-project/root/pull/5223#issuecomment-606481867,1,['log'],['logic']
Testability,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9301#issuecomment-973325971:359,test,testing,359,https://root.cern,https://github.com/root-project/root/pull/9301#issuecomment-973325971,1,['test'],['testing']
Testability,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it?. If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6532#issuecomment-722648289:438,test,testing,438,https://root.cern,https://github.com/root-project/root/pull/6532#issuecomment-722648289,1,['test'],['testing']
Testability,> Approving. Could you still open a new PR (probably on roottest) to explicitly test the multi library setups for both simple types and complex type. Thanks. Once more: There is nothing to test for complex types wrt `TDataType::GetType` - it's not handled anyway.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7776#issuecomment-831409669:80,test,test,80,https://root.cern,https://github.com/root-project/root/pull/7776#issuecomment-831409669,2,['test'],['test']
Testability,"> As a logical extension, the same happens for any additional branch that later files have, for example:. Thanks for the example. I simplified it further down to:. ```; #include ""TTree.h""; #include ""TFileMerger.h""; #include ""TFile.h""; #include ""TFileMergeInfo.h"". void printBranches(TTree *const tree) {; printf(""PrintBranches:\n"");; for (auto *branch : TRangeDynCast<TBranch>(tree->GetListOfBranches())) {; printf("" %s\n"", branch->GetName());; }; }. void ROOT_4716() {; TTree atree(""tree"", ""title"");; int value;; atree.Branch(""a"", &value);; printBranches(&atree);. TTree abtree(""tree"", ""title"");; abtree.Branch(""a"", &value);; abtree.Branch(""b"", &value);; value = 42;; abtree.Fill();; printBranches(&abtree);. TTree dummy;; TList treelist;; treelist.Add(&atree);; treelist.Add(&abtree);; std::unique_ptr<TFile> file(TFile::Open(""c.root"", ""RECREATE""));; TFileMergeInfo info(file.get());; dummy.Merge(&treelist, &info);; printBranches(&dummy);. treelist.Clear();; treelist.Add(&abtree);; std::unique_ptr<TFile> file2(TFile::Open(""d.root"", ""RECREATE""));; TFileMergeInfo info2(file2.get());; atree.Merge(&treelist, &info2);; printBranches(&atree);; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14558#issuecomment-2022610545:7,log,logical,7,https://root.cern,https://github.com/root-project/root/issues/14558#issuecomment-2022610545,1,['log'],['logical']
Testability,"> As a side remark, it sounds expensive to recreate all managers and passes for every module. Is this also what upstream does if it runs on multiple input files?. I agree that it might not be very efficient to recreate all managers/passes for every module. I've been looking upstream and couldn't find any instance where populating pass/analysis managers and running passes are separated (unlike the legacy pass manager). . I used this as a reference for this PR: https://reviews.llvm.org/D123425. [This issue](https://discourse.llvm.org/t/segmentation-faults-running-the-new-llvm-modulepassmanager-with-default-pipeline/59105) is what I think happened with the failing tests for us. From the thread, they recommend using a new instance every time we perform codegen as the analyses might not be cleared. I could also try using the clear() method instead,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1864281326:670,test,tests,670,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1864281326,1,['test'],['tests']
Testability,"> Awesome, @AniqJaved - thanks a lot for all your work!; > ; > * Could you please reduce the number of commits to something like 5 max? I'm happy to. show you how to rewrite the commit history.; > ; > * `.github/workflows/root-ci-config/__pycache__/build_utils.cpython-39.pyc`, `patch.txt`, and `.github/workflows/root-ci-config/test_file.py` won't be needed in the repo, please don't add them.; > ; > * `.github/workflows/test-coverage.yml` needs only one platform iiuc? Why does it have e.g. `build-macos`?; > ; > ; > I will have a closer look at the code after we chat tomorrow :-). Thank you for your help along the way @Axel-Naumann 💯 🙌,; I have made the proposed changes relating to the files, but I am not sure how to decrease the number of commits, would love to have your guidance on that.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13394#issuecomment-1665533318:423,test,test-coverage,423,https://root.cern,https://github.com/root-project/root/pull/13394#issuecomment-1665533318,1,['test'],['test-coverage']
Testability,"> BTW, why doing this test ? we have something working with all bash versions, simply use it. good point. I just changed it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1081930311:22,test,test,22,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1081930311,1,['test'],['test']
Testability,"> Can you come up with a reproducer for what you see?. @Axel-Naumann : The following simple test case; ```; #include <TROOT.h>; int main(int argc, char** argv) {; gROOT->GetInterpreter();; return 0;; }; ```; compiled via; `c++ -o test -O0 -ggdb `root-config --libs` -I`root-config --incdir` -std=c++17 test.cpp /usr/lib64/libgandiva.so`; yields the error for me. I have a system installation of arrow with gandiva. If I remove the libgandiva.so from the command line, it works fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4689#issuecomment-566586924:92,test,test,92,https://root.cern,https://github.com/root-project/root/pull/4689#issuecomment-566586924,3,['test'],['test']
Testability,"> Did you make sure it works for -Dcxxmodules=On?. How I can check it? I cannot compile current master when specifying `-Dcxxmodules=On`.; Same will be after I merge this PR. There is simple error which can be fixed in graf2s/mathtext/inc/mathrenderer.h, but it does not solve general compilation errors with cxxmodules. I test both on mac and linux platforms",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5791#issuecomment-640223995:323,test,test,323,https://root.cern,https://github.com/root-project/root/pull/5791#issuecomment-640223995,1,['test'],['test']
Testability,"> Do you mean that the sanitiser report when running the following unit test; > ; > ```c++; > #include ""vir/test.h"" // This include has to be first -> https://github.com/mattkretz/virtest; > ; > TEST(){ std::cout << ""Hello world\n""; }; > ```; > ; > compiled linking to ROOT is about the leakage you usually suppress? 🤔. I just tried and with this simple example I don't see anything, which is totally expected because it doesn't even initialize ROOT. The other reports that you provided before were the leakage we know about, or in the case of `TemplateIdAnnotation` are fixed by https://github.com/root-project/root/pull/16150. > Still [the reported leakage above](https://github.com/root-project/root/issues/14055#issuecomment-1814642915) is a real one which appeared in `v6.28` and was not there in `v6.26`. Yes, that's why I didn't close the issue back then and came across this when re-evaluating open issues. I totally understand that creating a reproducer takes time, but I fear without it there isn't much we can do without it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-2371254649:72,test,test,72,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-2371254649,2,['test'],['test']
Testability,"> For bench-marking the change can you run and compare with and without the PR:; > ; > ```; > #include ""TChain.h""; > ; > void callfuncbench(int repeat = 1000) ; > {; > TChain ch(""ntuple""); ; > for(int i = 0 ; i < repeat; ++i); > ch.Draw(""TMath::TanH(px)"", """", ""goff""););; > }; > ```; > ; > This demonstrates a simple common (indirect) usage of CallFunc.; > ; > Thanks, Philippe.; > ; > They are also usage of CallFunc in Signal/Slot mechanism and QT. I used `ctest --output-on-failure -R .*treefor.*` and `ctest -j12 --output-on-failure -R .*callfunc.*` to benchmark. I noticed around 20% slowdown and I decided to go with the enum implementation which I just pushed. Now with it we seem to be consistent with what we used to have but I am still looking how to make it faster. That benchmark runs more or less for the same time (0.16 +-2):. ```; root-callfunc-master/release $ /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C\(1000000\). Processing /build/vvassilev/root-release-master/callfuncbench.C(1000000)...; 	Command being timed: ""root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C(1000000)""; 	User time (seconds): 0.16; 	System time (seconds): 0.06; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.22; 	Average shared text size (kbytes): 0; 	Average unshared data size (kbytes): 0; 	Average stack size (kbytes): 0; 	Average total size (kbytes): 0; 	Maximum resident set size (kbytes): 195476; 	Average resident set size (kbytes): 0; 	Major (requiring I/O) page faults: 0; 	Minor (reclaiming a frame) page faults: 25164; 	Voluntary context switches: 218; 	Involuntary context switches: 6; 	Swaps: 0; 	File system inputs: 0; 	File system outputs: 0; 	Socket messages sent: 0; 	Socket messages received: 0; 	Signals delivered: 0; 	Page size (bytes): 4096; 	Exit status: 0; ```; and this PR on my machine:; ```; /usr/bin/time -v root.exe -l -b -q /build/vvassilev/root-release-master/callfuncbench.C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1251821611:557,benchmark,benchmark,557,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1251821611,2,['benchmark'],['benchmark']
Testability,"> For the `TObject` documentation I would add something along the line of:; > ; > ```; > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly.; > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15469#issuecomment-2151703325:532,benchmark,benchmark,532,https://root.cern,https://github.com/root-project/root/pull/15469#issuecomment-2151703325,1,['benchmark'],['benchmark']
Testability,"> Hi @VanyaBelyaev , do you think the fact that you are using RooFit through PyROOT is relevant? Would you be able to test in pure C++ ?. Dear @eguiraud; I am not using RooFit througt C++ . It would be expremently difficult or even impossible for me to conver tmy python stuff into C++.; Note that for simple models I have no problems.; It happens only for multidimensional multicomponent model, when I draw projecton; - first draw data set with `Invisible` flag ; - draw fit components; - draw data with normal vizibility ; ; And it segfaults at the second step. ; The relevant part of the stack is here: . ```. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 0x00007f36325eec01 in (anonymous namespace)::removeCommon(std::vector<RooAbsArg*, std::allocator<RooAbsArg*> >&, std::__ROOT::span<RooAbsArg* const>) () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so; #8 0x00007f36325f2568 in RooProdPdf::factorizeProduct(RooArgSet const&, RooArgSet const&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&, RooLinkedList&) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so; #9 0x00007f36325f94b9 in RooProdPdf::getPartIntList(RooArgSet const*, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-opt/lib/libRooFitCore.so; #10 0x00007f36325fd52e in RooProdPdf::getAnalyticalIntegralWN(RooArgSet&, RooArgSet&, RooArgSet const*, char const*) const () from /cvmfs/sft-nightlies.cern.ch/lcg/nightli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474#issuecomment-864062658:118,test,test,118,https://root.cern,https://github.com/root-project/root/issues/8474#issuecomment-864062658,1,['test'],['test']
Testability,"> Hi @hageboeck, thank you very much for the review! I will fix the typo in the commit message in the end once I `--autosquash` the fixup commits.; > ; > I addressed all of your comments, but for one comment I'm not sure if I made the right choice.; > ; > My hesitation concerns the new member variables in `RooAbsOptTestStatistic` that relate to the batched mode: I don't know if they should take part in the IO or not. On one hand, I don't know why flags about how the test statistic is evaluated need to be stored. On the other hand, the `_batchEvaluations` flag that is currently in `RooNLLVar` and that this PR moves to `RooAbsOptTestStatistic` [is not excluded from the IO](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooNLLVar.h#L82). I guess you had a good reason for this choice, so I kept the new flags in `RooAbsOptTestStatistic` also for the IO. You think this is the right choice?. The reason is simple: When `_batchMode` is not persistified, you create a test statistic in BatchMode, write it to file, read it back, it will run in scalar mode. That's at best ""annoying"". > ; > Since you mentioned IO: I also increased the class version of `RooNLLVar` since the `_batchEvaluations` flag got moved out of the class. That's good, but the above will happen also now. If you wrote an old test statistic to a file, which had the batch flag set in the derived class, it will now run in scalar mode, because nobody moves the info up to the base class. It's somehow possible to do that, but I need to look this up myself.; Let's first think if this is the best way to do it, and solve the schema evolution later. Remind me, please: Why did the flag have to go to the base class?. NB: There's also the RooChi2Var, which could make use of the batch mode. Maybe for this alone, it's already nice to have the flag in the base.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7344#issuecomment-792681797:471,test,test,471,https://root.cern,https://github.com/root-project/root/pull/7344#issuecomment-792681797,3,['test'],['test']
Testability,"> Hi! No that's alright, we don't enforce the formatting of old code. Also a rebase is not necessary, since the tests all passed and the PR would merge fine.; > ; > Just a note: probably the PR was unattended for so long because the usecase for this feature was not clear (or you needed it in your project?). Now that we have it, we might as well merge it, but for the future try to focus more on addressing concrete use needs or improving the ROOT developer experience (like you did in many other PRs). Thanks for the feedback!. It was a feature needed for my project. Because it took long, I used a workaround with a TGLabel class, so I did not insist much either, but for the future I will make it more clear what the usecase is :). Cheers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9156#issuecomment-1812527084:112,test,tests,112,https://root.cern,https://github.com/root-project/root/pull/9156#issuecomment-1812527084,1,['test'],['tests']
Testability,"> How does it mess things up?. IIUC, if I have `class MyClass{} m;` on the prompt, currently we will recognize the `class` token and we will ask clang to compile it as is. With the new PR we will be playing with the lookup rules (hideDecl and more) to make sure if we unload it in future it would rewire correctly the declarations and the definitions.; > ; > > with no tests; > ; > As I said that won't be the case.; > ; > > to improve the less used feature of unloading; > ; > I don't understand this part - do you mean unloading isn't used a lot? That's totally incorrect - it's the major missing feature of cling for physicists. Not even talking about all of cling's notebook users here. I proposed to enable it for physicists within ROOT. I am opposed to enabling it by default for cling standalone with no usage experience gathered neither through the physicists nor via the notebook users. . > ; > > make this feature configurable; > ; > Do you really believe we need a flag beyond `.rawInput`? Could you argue for this, please? Too many options kill usability... As I said, I am not sure if the implementation does not force the regular person (not using unloading) to pay for something he does not use. Secondly, while I understand the test will come at some point in future, I cannot judge on the implementation without any test. Those are two points which we should always consider when enabling something of this size by default for cling standalone.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4214#issuecomment-532596881:369,test,tests,369,https://root.cern,https://github.com/root-project/root/pull/4214#issuecomment-532596881,3,['test'],"['test', 'tests']"
Testability,"> I also have a general comment,; > ; > https://github.com/root-project/root/blob/5d2c835d1c707dbbb9d7f1a82425c0567d5527dd/tree/ntuple/v7/doc/specifications.md?plain=1#L341-L342; > ; > it's not yet clear what are the expectation around these strings, my hunch is at write-time they come from reflection, and at read-time ROOT's internal compiler will be used to restore the field to a known (maybe user-defined) C++ type. However, in principle all the logical layout of data and types are encoded without these strings, so my questions are:; > ; > 1. for non-ROOT reader, can these be safely ignored (e.g. instead of getting back a named data struct, you get an anonymous struct by ignoring the type name); > ; > 2. for non-ROOT writer, if these are left empty, can ROOT figure out based on primitive types and compositions?. This is a good question. If you omit the type name for structs or collections, they become untyped structs or untyped collections. RDF can deal with this fully, the `RNTupleReader` currently only with untyped collections (transparently cast to an `std::vector`). In general, C++/framework code is likely to have problems with untyped structs because there is no class to read data into... Still, untyped structs and untyped collections are valid RNTuple data. For basic types, we cannot omit the type because the column only specify the on-disk type while the field type information gives the in-memory type. The two don't have to be identical (e.g. `double` in memory and `Real32` on disk). I thought we already documented the allowed combinations of POD type and column types but I now realized we didn't. We'll update the docs in a follow-up PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13779#issuecomment-1820886920:452,log,logical,452,https://root.cern,https://github.com/root-project/root/pull/13779#issuecomment-1820886920,1,['log'],['logical']
Testability,"> I am not sure that we should increment the number of fNRuns and log as if everything went fine if an exception was thrown during the event loop. a different message might be warranted. Indeed this could be a good idea, to further clarify that the RDF is not usable anymore and should just be thrown away",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13546#issuecomment-1707966075:66,log,log,66,https://root.cern,https://github.com/root-project/root/pull/13546#issuecomment-1707966075,1,['log'],['log']
Testability,"> I appreciate your proposed solutions but I do not really have a lot of bandwidth nowadays to investigate why they do not work for us. You will probably see what's going wrong if you build this PR locally. I have built locally and don't see the issue (I don't even know what I'm looking for). Both you and @pcanal asked me to fix this and I spent actual time trying to figure out what you guys were after and implementing a solution that has little cost for both of us. I too suffer from lack time, so asking me to do work then walking away without even giving a single example of what is broken seems a bit rude.... Seriously, can I get one test that still fails with https://reviews.llvm.org/D33529 ?. If that cannot be done could @pcanal or @Axel-Naumann at least verify that after applying D33529 and setting `DynamicLibrary::SearchOrder = SO_LoadedFirst; // or SO_LoadedLast (don't know the problem)` 500+ tests are broken?. > I would appreciate if we can coordinate next time such breaking changes before asking for a llvm review and land patches in these particularly sensitive areas. I explicitly added you to the list of reviewers for the original patch, there is little more I can do than that. And more coordination is exactly what I am trying to do now. If we cannot reach a conclusion may I at least be added to review whatever your solution looks like?. > 1. I plan to remove the NDEBUG assert. Already done in D33529. > 2. Make the std::vector<void*> a std::vector<llvm::PointerIntPair<void*, 1, bool>>. How can you guarantee that the platform will deliver a pointer with proper alignment for that?. > 3. I will change the search order to search for first the one that are not marked RTLD_GLOBAL. So any other client that wants to open thing's with RTLD_LOCAL will then expose what they thought were private symbols to the JIT as a whole?. > One of the issues is that it is not clear to me is what exactly is your use case and this is why there are misunderstandings. I also don't unde",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313799028:643,test,test,643,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313799028,2,['test'],"['test', 'tests']"
Testability,"> I believe the current failures are related to the roottest branch not being up-to-date with the latest master. Close but not quite. What is happening in the reverse. Once the CI test are started they pin the `ROOT master` commit that will be use to test. If one simply ""re-run"" the tests they will (this is intentional) use that same commit. To take in consideration new commits in the new CI build we need to do either of these 3 actions:; * Rebase the master onto the new PR branch.; * Add a new commit to the PR branch.; * Close and re-open the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14967#issuecomment-2046265770:180,test,test,180,https://root.cern,https://github.com/root-project/root/pull/14967#issuecomment-2046265770,3,['test'],"['test', 'tests']"
Testability,"> I can imagine that we can make change this function to return a string and then call it when we called the `.gh` command?. Sounds great, as long as the 'stacktrace' logic does not clear it internally, once it has printed it to terminal before calling `.gh bug`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10366#issuecomment-1122636569:167,log,logic,167,https://root.cern,https://github.com/root-project/root/pull/10366#issuecomment-1122636569,1,['log'],['logic']
Testability,"> I could probably write some for sqlite . It would be grate! ; As far as I know, sqllite can be squeezed in one file. If you can create such small data base (~100KB) with all supported data types and provide simple test macro for reading - it would be really grate! With mysql I am not sure how to do this easily.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3707#issuecomment-484375382:216,test,test,216,https://root.cern,https://github.com/root-project/root/pull/3707#issuecomment-484375382,1,['test'],['test']
Testability,"> I don't agree with these changes for two reasons:; > ; > * The default is `cuda=OFF`, and if the user passes `cuda=ON` explicitly, it can be annoying if it is switched off at compile time because for example some environment variables were missing. We had complaints about this in the past. That's why I suggested to not have this fallback for features that are by default `OFF`. See also: [[cmake] Some improvements related to feature detection #14834](https://github.com/root-project/root/pull/14834).; > ; > * I would argue that it's not correct to set `cuda=ON` if `all=ON`. Enabling cuda disables TMVA CPU, so clearly you don't get `all` features but different ones. That's why many distros like Arch Linux have a separate `root` and `root-cuda` package. Unless this is fixed, I think the right solution to the problem is to not switch cuda on if `all=ON`. Indeed, I was wrong with the second bullet point here. I remembered it wrongly because when building with `tmva-gpu`, some tutorials use the GPU backend of TMVA by default. This first argument still holds though!. I made an alternative suggestion: https://github.com/root-project/root/pull/15155. This one also fixes the problem that the `cuda` flag is checked before it is set. It simplifies the logic also a bit: the `cuda` flag is not determining anymore if CMake will look for the CUDA language and add it to the project. It only determines if ROOTs CUDA sources are actually built.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15149#issuecomment-2039816688:1261,log,logic,1261,https://root.cern,https://github.com/root-project/root/pull/15149#issuecomment-2039816688,1,['log'],['logic']
Testability,"> I don't understand why we would want to allow older versions than we did in the past. The reason why we restrict version - we were not testing for `json_fwd.hpp`. ; With 3.11.x version such simple restriction no longer working. But now we testing `json_fwd.hpp` and can use it, and restriction making no sense.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11268#issuecomment-1245012584:137,test,testing,137,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1245012584,2,['test'],['testing']
Testability,"> I might be missing something, but I think the C++ logic can be simplified by removing RTypeErasedMergeables: we should be able to just return a RMergeableVariations<T> (cast to RMergeableValueBase, from which it could inherit) from RVariedAction::GetMergeableValue. What do you think?. My understanding is as follows: `RVariedAction::GetMergeableValue`'s signature is `std::unique_ptr<RMergeableValueBase> GetMergeableValue() const` . Inside the implementation of this function, I have no typename `T` with which I could construct internally a `std::vector<std::unique_ptr<RDFDetail::RMergeableValue<T>>>`. Thus, I need a struct that holds a `std::vector<std::unique_ptr<RDFDetail::RMergeableValueBase>>` (keep in mind that any subclass of `RActionImpl` defined in `ActionHelpers.hxx` has a method `std::unique_ptr<RMergeableValueBase> GetMergeableValue() const`, so inside `RVariedAction`'s `GetMergeableValue` I don't have any information about the concrete mergeable value type).; I would also just return a `std::vector<std::unique_ptr<RDFDetail::RMergeableValueBase>>` directly from this method, but then I would break the pattern of passing around unique ptrs to `RMergeableValueBase` and I would need to change the interface just for `RVariedAction`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9942#issuecomment-1061744458:52,log,logic,52,https://root.cern,https://github.com/root-project/root/pull/9942#issuecomment-1061744458,1,['log'],['logic']
Testability,"> I see https://github.com/root-project/root/pull/11311. This was not merged and does not reflect that actual content of the file. Somehow in your environment the code snippet I copy/pasted is failing. We need to understand if:; * If the code snippet works in (your) C++20 (expected behavior); * Why is the code snippet failing in (your) C++23 (never tested by us). This should be testable with a simple source file containing just:; ```; #include <span>; #include ""ROOT/RRangeCast.hxx""; ```; (and another test with just the second one).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13042#issuecomment-1595284979:351,test,tested,351,https://root.cern,https://github.com/root-project/root/issues/13042#issuecomment-1595284979,3,['test'],"['test', 'testable', 'tested']"
Testability,"> I think it should live in InternalTreeUtils?. I was thinking this is generic enough that we may want to use it in places that do not strictly depend from `libTree`, but maybe I'm just overthinking. > How can we be sure that this function returns the same files in the same order as the previous one in all cases?. I hope we already get a (very good?) degree of certainty by not breaking existing test cases. I can come up with a few more just to add extra safety. Irrespective of this, the function is taken verbatim from the logic in `TChain::Add`. Do you see any part of the function that intuitively might lead to different results? I was thinking about this and the only place that remotely gives me a slight doubt is using `std::sort` instead of `TList::Sort`, but I really hope that doesn't introduce a different behaviour. > the new one throws if a directory cannot be opened. Yes indeed that's a different behaviour. The existing logic never throws. In case `dir == nullptr`, which I guess happens if the expanded directory cannot be found/opened (?), then it will just fall to the end of the `TChain::Add` method and `return nf`, where `nf` will be zero since no files have been added. In this regard I see two options:. 1. The new function throws (because subjectively is the correct behaviour). Then in `TChain::Add` we can keep the old behaviour, by catching the error and not re-raising it.; 2. The new function can return an empty vector, in case `dir == nullptr`. This is more similar in spirit with the old behaviour.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13160#issuecomment-1619057225:398,test,test,398,https://root.cern,https://github.com/root-project/root/pull/13160#issuecomment-1619057225,3,"['log', 'test']","['logic', 'test']"
Testability,"> I think my fix is actually could be right, can you check it please again?. Your fix simply removes usage of semi-standard pthread_setname_np function on linux.; It is not right solution in my mind. Unfortunately, I cannot test with clang8. ; With clang-6.0.1 I see no problems. That you always can do - try to compile following simple program:. #include ""civetweb.h"". int main(int argc, char **argv); {; return 0;; }. Just copy it into net/http/civetweb directory and call:. clang -pthread civetweb.c main.c -ldl -o test . Can you reproduce your error message?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2581#issuecomment-418737656:224,test,test,224,https://root.cern,https://github.com/root-project/root/pull/2581#issuecomment-418737656,2,['test'],['test']
Testability,"> I think that is sufficient efficient evidence albeit there is one more simple test to do, is to introduce a synchronization point every once in a while to insure that the queue is actually filled/used and then later emptied. Right; for this I went back to the variant of the benchmark that has perfectly balanced time per event and fills identical data into 10 branches. Then I added barriers around the call to `TBufferMergerFile::Write()` to make sure there is as much synchronization and contention as possible. With that, only the run with 64 threads on `/data/ssdext4` is measurably slower (4m16s instead of 3m57s, 9%), lower numbers of threads show very similar performance within noise. However, I then realized that the second barrier after the call to `Write()` is actually not necessary since we want contention when going into the merging / queuing, but the second barrier prevents threads that exit merging early from making further progress. With *only one barrier* before the call to `TBufferMergerFile::Write()` the version without any queuing is consistently faster at higher thread counts. I think this supports my hypothesis that things will balance out automagically. Finally, on `/data/hddext4/` I cannot measure any difference at all outside of noise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14034#issuecomment-1823482567:80,test,test,80,https://root.cern,https://github.com/root-project/root/pull/14034#issuecomment-1823482567,2,"['benchmark', 'test']","['benchmark', 'test']"
Testability,"> I think there is a pretty clear explanation where this comes from in the commit history. We could not load `gRandom`. That was with the very old dyld-based approach to loading symbols. This PR checks if the new approach has the same problem. Note that:; - We can still not reproduce the issue; - With this change, I got the following test failure on Windows (not tested in our CI):; ```; 988: Processing C:/Users/sftnight/git/master/tutorials/rcanvas/symlog.cxx...; 988: IncrementalExecutor::executeFunction: symbol '_imp_?gRandom@@3PAVTRandom@@A' unresolved while linking function '_GLOBAL__sub_I_cling_module_5'!; 988: You are probably missing the definition of _imp_?gRandom@@3PAVTRandom@@A; 988: Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10330#issuecomment-1091405727:336,test,test,336,https://root.cern,https://github.com/root-project/root/pull/10330#issuecomment-1091405727,2,['test'],"['test', 'tested']"
Testability,"> I would propose to change the title to ""[ci] Further speedup mac and linux builds by caching dependencies"". The word ""instead"" can be misleading. Our goal is to have feedback from the CI as soon as possible. Having several nodes, allows to scale horizontally. We are not increasing the number of nodes in the CI because we are lazy, we just need many nodes AND fast CI, e.g. through caches or quicker tests :). The proposed rename works for me. It's not only for mac and linux, it covers any platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14987#issuecomment-2001954686:403,test,tests,403,https://root.cern,https://github.com/root-project/root/issues/14987#issuecomment-2001954686,1,['test'],['tests']
Testability,"> I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Which one exactly? I see from the logs that the interpreted stress test exits with code 1, so there's something going on. The node that has the high number of failures is probably a nullptr deref or similar. > Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?. Yes, I agree that it's not great to have jenkins behind a CERN login, but I guess this has to be done to secure the instance. The tests should be self-consistent, i.e. bring their own files. Try `ctest -R stressHistFactory -V` to see what's going on locally on your machine (i.e. see invocation and which files are used etc). If the test isn't there, you might have to activate `-Dtesting=ON` or `-Dhistfactory=ON` (which requires `-Dxml=ON`) in cmake.; Does the test pass locally?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9271#issuecomment-968052222:36,test,tests,36,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-968052222,13,"['log', 'test']","['log', 'login', 'logs', 'test', 'tests']"
Testability,"> If the developer wants to also run Python-based unittests, yes. I don't see any issue with that. Humm .. I thought a bare `ctest` would run it, so it is the opposite, one would know to add a `-E ` to ignore them. > No, they are not. Well they ""appear"" to be because of the test. The jenkins node was configured however it was (and the user could have the exact same configuration) and a run of `ctest` fails and ""clearly"" states that those are requirements :). From my limited view point it seems that we have:; * python support is enabled ; * some optional component is not installed (and I am assuming that the related features are disabled and the actual tests related to those features are not run); * a test still complains that those optional component are not installed. To make an analogy: this sound like we would have the situations:; * `X11` support is enabled.; * The `OpenGL` libraries (`MesaGL`) is not installed and support for `OpenGL` is disabled, no test tries to run `OpenGL` code); * Still ctest fails noting that `MesaGL` is in the list of 'requirements'. How does my analogy fails/differs from the `xgboost` case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15212#issuecomment-2052136735:275,test,test,275,https://root.cern,https://github.com/root-project/root/issues/15212#issuecomment-2052136735,4,['test'],"['test', 'tests']"
Testability,"> In particular, I tried to add a trivial unit test file [...] and compiling as the other ones, i.e. linking it to [...] makes the sanitiser running the test still complain as above. Depending on how you compile it, you might get `-fsanitize=address` from the ROOT C++ flags. But in general yes, the libraries are sanitized and will operate no matter if your application itself is built with sanitizers or not. > I guess I could create a standalone hello-world C++ code and compile it with the sanitiser linking to ROOT as our unit test does and I should get the same report. Let me know if you need so. That would be as expected, so I don't think it's worth the effort. > Now, this behaviour (leaking just linking) should make it not too difficult to locate the issue. Do you do something [with globals or static variables](https://stackoverflow.com/a/8353892/14967071)? Or do you have [a `_init` and/or `_fini` function](https://stackoverflow.com/a/6412445/14967071)?. As explained before, what the AddressSanitizer is complaining about is well understood and it also doesn't explain growing memory usage when not interacting with ROOT. This latter is what needs a clear reproducer to dig out the problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-1818478493:47,test,test,47,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-1818478493,3,['test'],['test']
Testability,> It does not hit the cache because the unloading clears the memory buffers behind the FileID. This means we have cache but it is unreachable after unloading by design. Fair enough. Which part of the new code make it unreacheable? [I am distracted by LookupHelper.cpp line 87/88 that get an Invalid flag but 'only' assert on it],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2483#issuecomment-413992581:315,assert,assert,315,https://root.cern,https://github.com/root-project/root/pull/2483#issuecomment-413992581,1,['assert'],['assert']
Testability,"> It is old logic that `TBrowser` does not starts without `DISAPLAY` variable set or simply in batch mode. One can solve this, but with some fine-tuning in ""normal"" `TBrowser`/`TBrowserImp` classes. If @bellenot has nothing against it - I can propose PR. Thanks @linev ! Feel free to open a PR if you want 😃",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10748#issuecomment-1159421157:12,log,logic,12,https://root.cern,https://github.com/root-project/root/issues/10748#issuecomment-1159421157,1,['log'],['logic']
Testability,"> It removes the requirement for version 3.9. Technically code works with all 3.x versions of `nlohmann/json.hpp`. I add requirement for 3.9 recently just because we were not using and not testing for `json_fwd.hpp`. Now version restriction is not necessary. > It worsens the error message in case json_fwd.h when it is required for recent versions. They were written based on feedback from upstream, so I would like to keep the detailed messages. `json_fwd.hpp` now always required - not only for 3.11. Just as workaround for time been we allow to use [3.10 .. 3.11] versions without it. After LLVM upgrade we could completely skip usage of `json_fwd.h`. I hope it will happen before 6.28 release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11268#issuecomment-1230200939:189,test,testing,189,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1230200939,1,['test'],['testing']
Testability,"> My suspicion is that the for the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```; struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; .L lib/libStrip.so ; Marker m2;; gInterpreter->AutoParse(""SiStripCluster"");; .undo 2; SiStripCluster obj;; ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```; struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; .L lib/libStrip.so ; SiStripCluster obj;; ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there?. It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:; ```; commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms); Author: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852#issuecomment-434478365:313,test,test,313,https://root.cern,https://github.com/root-project/root/pull/2852#issuecomment-434478365,1,['test'],['test']
Testability,"> My two cents is we should disable the tests . Do you mean short term while we fix the issue or do you mean just ignore the issue?. In this case, unless the tutorial (!) are showing something that the user are very unlikely to do, I think we need to go further and make sure that this same crash/problem won't happen to the user. . > (and stop using Jenkins for PR builds). I agree ... except that they seems to be probing an area of the phase space we are not testing elsewhere. Note: if the issue is as simple as ""the installed version of some dependent product is too old so there is no point in fixing the problem"", we still need to fix the `CMake` configuration to fail when asked to use those older version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15211#issuecomment-2050660691:40,test,tests,40,https://root.cern,https://github.com/root-project/root/issues/15211#issuecomment-2050660691,2,['test'],"['testing', 'tests']"
Testability,> Nice change. I proposed a simplification. The tests seem to fail because the change does what it is supposed to do and the reference would need to be adapted. Thanks! We're on it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10928#issuecomment-1947918617:48,test,tests,48,https://root.cern,https://github.com/root-project/root/issues/10928#issuecomment-1947918617,1,['test'],['tests']
Testability,"> No test was broken in the incrementals: perhaps we can give it a try in the nightlies?. I was hoping getting some feedback from @krasznaa before merging, but I guess we can merge and we'll see afterwards",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14474#issuecomment-1923285964:5,test,test,5,https://root.cern,https://github.com/root-project/root/pull/14474#issuecomment-1923285964,1,['test'],['test']
Testability,"> Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case; > ; > Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred. You probably have compiled your code base with -fno-rtti (or exceptions) and you should pass that flag to cling as well.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1193060626:63,test,test,63,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1193060626,3,['test'],"['test', 'test-case']"
Testability,"> Ok, let me know if you have other tests which you would like me to do. I was a bit surprised to learn that:. > > Thank you for the nice investigations. What are the next steps? I tried #13139 but that does not help us. I see a different memory profile, but the extra memory due to ROOT is stil around 70MB (even a bit more with that PR, AFAICT).; > ; > Is that with or without opening the file? My expectation is that `root.exe -l -b -q` will take a lot less rss. ping. > One more question for my understanding. Are those big vectors actually needed at all when reading a file? If not why aren't they swapped out to disk either implicitly via some madvise or by simply caching to disk the results? The latter might even give some startup advantage, assuming they are offsets to the pcms and they do not change (not the basic root ones, at least). They are not needed upon module loads. We tried to implement some sparse vectors to mitigate this issue. However, I feel like we did not have the persistence to make it work. That is, we can implement a lazy vector structure that behaves just like vector but the reserve operation does not allocate. Instead, we allocate slabs around the access pattern (we override the subscript operator, etc). This would help us avoid eager allocations and hopefully, depending on whether there is a clear access pattern to optimize things. Our implementation seems to be still [here](https://github.com/Teemperor/llvm/commit/a06b21cbc55c6d2f1d2bf6f39771411ccc17342b). Another easier thing to try is reviving https://reviews.llvm.org/D89749",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1629035353:36,test,tests,36,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1629035353,1,['test'],['tests']
Testability,"> Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of; > total runtime is due to allocations in `RPageSource::UnsealPage`. @mxxo @jblomer This work will be resumed soon as we suspect that not reusing addresses is affecting RDMA data transfers (which has an impact on the measured throughput in the DAOS backend). Specifically, we need to confirm that not reusing addresses that appear in the IOVs array in `daos_obj_{fetch,update}()` is related to a higher overhead due to RDMA MR registration. Therefore, this PR might actually have some other side benefits besides reducing memory allocations and heap fragmentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8634#issuecomment-1300054951:22,benchmark,benchmarks,22,https://root.cern,https://github.com/root-project/root/pull/8634#issuecomment-1300054951,1,['benchmark'],['benchmarks']
Testability,"> So you mean extern template the new ExecImp?. Yes, this what I meant. > because you still have to instantiate the ""front-facing"" template . it is a trivial function, that we could even mark as 'force inline' to make it disappear. > Maybe, but I doubt that it actually achieves the goal of reducing compile time .... and neither [of the functions] seems particularly expensive to generate. . I started from the assumption that the existing code was there for a reason. Indeed if the functions are also simple/trivial, the extern template are not needed, however then the git log need to be enhanced to justify/explain that the existing optimization was in fact not needed (assuming this is the case :) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16176#issuecomment-2271543583:576,log,log,576,https://root.cern,https://github.com/root-project/root/pull/16176#issuecomment-2271543583,1,['log'],['log']
Testability,"> Thank you for the addition @ferdymercury ! I believe this is better than `std::tuple_cat` as it doesn't need the input arguments to be `tuples` and it already returns the formatted string. Can I ask you to provide a couple of tests for the new feature?. Thanks! I just wrote a couple of tests, but I am not very familiar with the GTest infrastructure, I usually use CTest. So I will need some guidance from you ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13299#issuecomment-1723612261:228,test,tests,228,https://root.cern,https://github.com/root-project/root/pull/13299#issuecomment-1723612261,2,['test'],['tests']
Testability,"> Thank you for your reminders, I will for sure follow the procedure once I am convinced this works fine for all ALICE usecases. Having a PR on the v6-28-00-patches branch merely simplifies sharing something which can be immediately used in the ALICE software stack. Yes understood :). > Could you please advise regarding the data structure to use? I could not find one that fits the needed sparseness. I'm not sure there is one already, but it has some comments to make about `std::vector` (because I saw you mentioning `std::pmr::vector`. If there is none yet (but I think Vassil mentioned one? maybe it's not listed in that document), it should likely be added to LLVM's ADT library first and then used in Clang. > On a separate note, are the tests supposed to be green?. Yes, and from a quick look it seems ~all builds are failing with; ```; Assertion `Index < TypesLoaded.size() && ""Type index out-of-range""' failed.; ```; which very much sounds like it is caused by the changes...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13641#issuecomment-1719042201:746,test,tests,746,https://root.cern,https://github.com/root-project/root/pull/13641#issuecomment-1719042201,1,['test'],['tests']
Testability,"> Thanks for the patch, Advait!; > ; > My thoughts: If the function is added to ROOT as is, I'd implement it in the header and simply `return a==b`. The C/C++ cast from `bool` to `int` is effectively a Kronecker Delta.; > ; > That said, I'm not sure if the function as such does in practice what users expect. Floating point values are hardly ever exactly equal, but usually one tests for them to be equal within +/ epsilon.; > ; > I'll assign to @lmoneta. Ahh yes , I see what you mean.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8719#issuecomment-886482916:379,test,tests,379,https://root.cern,https://github.com/root-project/root/pull/8719#issuecomment-886482916,1,['test'],['tests']
Testability,"> Thanks for the review! No, there is no unit test for this IO rule, but I tested it locally.; > ; > I don't think it's worth it to include a test for this simple IO rule, because such a test also always needs a file storing an object of the old class version, and I think it's not good to have too many binary files in the repository without strong reasons. Actually, if I may @guitargeek 🙂:; Some of the biggest grievances some users had in RF's ""dormant time"" was a non-functioning schema evolution, which prevented users from moving to a newer ROOT version. You lose these users, as they have to disconnect from ROOT's evolution. Therefore, I strongly suggest having schema evolution tests in master. These files only consume a few kB, and they will never be altered.; This becomes even more important if a specific class version was in use for a long time, because the number of workspaces in the wild will scale with the time that a class version was in master.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10909#issuecomment-1181856704:46,test,test,46,https://root.cern,https://github.com/root-project/root/pull/10909#issuecomment-1181856704,5,['test'],"['test', 'tested', 'tests']"
Testability,"> The commit fixes a bug but it looks like we have no test for this case. This being TTree, I would warmly suggest a test is added for this case. Well ... that was of course useful ... as thinking about it more made it clear that there more similar cases. See https://github.com/root-project/roottest/pull/487",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5342#issuecomment-612209494:54,test,test,54,https://root.cern,https://github.com/root-project/root/pull/5342#issuecomment-612209494,2,['test'],['test']
Testability,"> The first large gap (just before 4s) seems longer in the 'after'. Do we know where the other threads are stopped (and what the running thread does) both in the before and the after. Yes, that's the point at which `LoadClassInfo()` gets called. One thread works on that, while others are waiting for it to finish. That particular gap only happens once. > Do we know where (some of) the gaps are stopped in the main regime?. These stops are on the global lock at several points of the code, it's not a single type of wait. >> TBufferMerger random number generation test on my machine (Core i7 6700).; > Is that with or without the lock removed (both test are needed to get a clear view). I wanted to test the impact of your changes, so that means this branch against master (i.e., no, the lock was not removed). I will test with the lock removed tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1251#issuecomment-343755018:565,test,test,565,https://root.cern,https://github.com/root-project/root/pull/1251#issuecomment-343755018,4,['test'],['test']
Testability,"> The way I did this was simply to open the v4 file with a newer ROOT version, use the copy constructor of RooDataHist and save the copied object. Is this the way that you would document, or is there an easier way?. Ah, right. That will work. I thought you re-engineered that RooDataHist to document it in the style of:; https://github.com/root-project/root/blob/ef483dd32765470c702d72adf387d68663e28842/roofit/roofitcore/test/testProxiesAndCategories.cxx#L59-L80. In this case, it was probably this, but I don't remember:; https://github.com/root-project/root/blob/ef483dd32765470c702d72adf387d68663e28842/roofit/roofitcore/test/testRooDataHist.cxx#L242-L248",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8090#issuecomment-832043953:422,test,test,422,https://root.cern,https://github.com/root-project/root/pull/8090#issuecomment-832043953,4,['test'],"['test', 'testProxiesAndCategories', 'testRooDataHist']"
Testability,"> This should be ""upstreamable""; printing `int i [[deprecated(""reason\n"")]];` seems a valid test case. I doubt there's something I don't know, anyway by applying this patch, tests below in LLVM failed:; ```; Failed Tests (23): ; Clang :: AST/ast-dump-attr.cpp ; Clang :: AST/ast-dump-attr.m ; Clang :: AST/ast-dump-c-attr.c ; Clang :: AST/ast-dump-color.cpp ; Clang :: AST/ast-dump-wasm-attr-export.c ; Clang :: AST/ast-dump-wasm-attr-import.c ; Clang :: AST/ast-print-attr.c; Clang :: AST/attr-swift_attr.m; Clang :: AST/attr-swift_bridge.m; Clang :: AST/category-attribute.m; Clang :: AST/pragma-attribute-cxx-subject-match-rules.cpp; Clang :: AST/pragma-attribute-objc-subject-match-rules.m; Clang :: AST/pragma-multiple-attributes.cpp; Clang :: Misc/pragma-attribute-cxx.cpp; Clang :: Misc/pragma-attribute-objc.m; Clang :: Misc/pragma-attribute-strict-subjects.c; Clang :: OpenMP/assumes_codegen.cpp; Clang :: OpenMP/assumes_print.cpp; Clang :: OpenMP/assumes_template_print.cpp; Clang :: Sema/ast-print.c; Clang :: Sema/attr-availability-swift.c; Clang :: SemaCXX/cxx11-attr-print.cpp; Clang :: SemaTemplate/attributes.cpp; ```. A broken example like:; ```; /home/jun/dev/llvm-project/clang/test/AST/ast-print-attr.c:14:11: error: CHECK: expected string not found in input ; // CHECK: int fun_asm() asm(""test""); ; ^ ; <stdin>:3:46: note: scanning from here ; using C = int ((*))() __attribute__((cdecl)); ; ^ ; <stdin>:4:1: note: possible intended match here ; int fun_asm() asm(R""ATTRDUMP(test)ATTRDUMP""); ; ```. > You can use `R` or `ATTRDUMP`. I just like the freedom we have of using more telling raw string delimiters than `R`. It's also not clear whether such a chance (from `ATTRDUMP` to `R`) is worth the churn. So I guess if `R` is enough for ROOT, maybe we can drop `ATTRDUMP`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10830#issuecomment-1168753106:92,test,test,92,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1168753106,5,['test'],"['test', 'tests']"
Testability,"> To do so we need an additional public API:; GetDatasetInfo, returns string like /path/to/file:name, TBD. > We also want a dedicated GetDataSourceInfo, because we have either fDataSet->GetLabel(), if there's a fDataSource, or a TTree/TChain type if there is a df.GetTree or it's a simple dataframe aka RDataFrame(N) if none if this is true. Alright so I have different opinions for both things. First off, I would like to have a common nomenclature that we agree upon, and we can use as reference in the future for our users. This is what my mind first thinks off when reads the following different names:; * `data format` is the identifier name of the logical or in-memory layout of the dataset. For example, `TTree`, `RNTuple`, `CSV`, `Apache Arrow`. The data format specification also imposes some extra constraints, like a CSV table does not have an embedded name, while a TTree does.; * `dataset` is the concrete representation of the information carried by data contained somewhere in some data format, e.g. a flat table or a table with possible n-dimensional cell elements for our usecases.; * `data source` is kind of more blurred, but I see it as a combination of the two above. You can't have a source of data without a dataset and you need a data format to be able to reason about the dataset and run computations on it. The nomenclature above might not be always true, but I still think it's worth to bring up the point that we should agree on one. It stems from my personal reasoning that:; * While I understand the utility of `GetDatasetInfo`, I see a lot of possible drawbacks which I described in [this comment](https://github.com/root-project/root/issues/7828#issuecomment-817820448) to what we currently call `GetDataSourceInfo` discussion; * I would more clearly understand `GetDataSourceInfo` if it were called `GetDataFormat` or `GetDataFormatName`. I still understand that we could keep this function name to be more aligned with existent RDataSource API, though I see little re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7561#issuecomment-817863318:654,log,logical,654,https://root.cern,https://github.com/root-project/root/issues/7561#issuecomment-817863318,1,['log'],['logical']
Testability,"> We did not come up with a better name. Ours was SparseVector. Just to confirm, we do not pre-allocate the entire vector but we deterministically allocate the slabs. That is, if I hardcoded an offset 101 in my code and the pre-allocation allocated just a slab [0-100), then when I do PagedVector[101] it would put what I need where I need it, right?. No, you would need first to register the range [100, 200) via addEmptyRange(). I could try to modify it for that behaviour, if you prefer. Maybe it would allow me to get rid of the logarithmic lookup, actually (basically, one less vector to worry about). > If it is not needed, let's keep it simple. It would be easier to go through the upstream llvm reviews. Ok, I will clean it up a bit more. > Can we make the API of the PagedVector such that it becomes a drop-in replacement? I have not looked deeply in the PR but I see some work being done on the users side. Yes, users would need to addEmptyRange where they now do resize(). I guess I could actually hide addEmptyRange inside the resize. Is it allowed to use std::pmr::vector in the llvm codebase?. > The source locations offset would be a major source of improvement if this technique flies there. I couldn't find the source locations vector anymore. Could you point it to me?. > PP: It seems llvm has some facility along these lines: https://llvm.org/doxygen/classllvm_1_1SparseBitVector.html. I will have a look.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1717037288:533,log,logarithmic,533,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1717037288,1,['log'],['logarithmic']
Testability,> We should really have a test for this... I absolutely agree! @scott-snyder how involved is the failing test in the ATLAS framework? If it's not too complicated to boil it down to a simple reproducer it would be really helpful here. Otherwise I can try to sketch one myself and then you can tell us how closely it represents your original case.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14887#issuecomment-1980364814:26,test,test,26,https://root.cern,https://github.com/root-project/root/pull/14887#issuecomment-1980364814,2,['test'],['test']
Testability,"> With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test; > ... but; > So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:; > ; > ```; > CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):; > add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified.; > Call Stack (most recent call first):; > /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY); > /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY); > ```; > ; > If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. I imagined that we will have the setting with PARENT_SCOPE and on the roottest side we will have an extra variable which we use onward. > ; > Could you trigger the CI, please? I would like to know if these changes are at least working. Done. > ; > To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before.; > This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY; > ; > ```cmake; > IF(TARGET ${dictionary}); > LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>); > LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>); > ENDIF(); > ```; > ; > ```cmake; > IF(TARGET ${dictionary}); > target_sources(${dictionary} PRIVATE ${gensrcdict}); > ENDIF(); > ```. That seems to be the pattern used for the `ROOT_GENERATE_DICTIONARY` analog [here](https://github.com/root-project/root/blob/master/cmake/modules/RootMacros.cmake#L526). It would be great if we can reuse some code there...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5019#issuecomment-587581863:115,test,test,115,https://root.cern,https://github.com/root-project/root/pull/5019#issuecomment-587581863,1,['test'],['test']
Testability,"> Yes, better than the ""That should fix a recent nightly failure with gcc11"" that Philippe commented on, thanks for improving it!; > ; > Compared to just including the actual diagnostic (something Philippe and I generally try to do these days, something that has proven super helpful several times), your current log:; > ; > ```; > That should fix a recent nightly failure with gcc11 avoiding to require; > module ""bits/ranges_base.h"" in C++20 context.; > ```; > ; > does not call out; > ; > * that it's during dictionary generation; > ; > * that the modulemap requires the module feature 'cplusplus20' (your log seems to suggest that the error surfaces when compiled in C++20 mode, while this error shows up when compiling in C++14 or 17); > ; > * that the issue is also with GCC12 headers (your message seems to suggest that it's only with GCC11 headers); > ; > * the ""stack trace"", i.e. `/usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here` and then `/home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'` and then `#include ""TIsAProxy.h""`; > ; > ; > In general we tell our users (+/- always) ""can we please see the actual diagnostic"", and for the same reasons it's super helpful to include them here. The time we discussed this is waaay larger than the time it would have taken you to update the log to what Philippe proposes, rather than updating it to something that tries to address the issues (but seemingly fails?); > ; > But it's Philippe's review, I let him comment / deal with this if you still prefer to keep your current commit log. I simply wanted to add an explanation why Philippe suggests the inclusion of the actual diagnostic (and why I found it convincing and do it ever since he propose it to me). This issue exists on gcc11 and gcc12 (and I guess any gcc that made changes to libstdc++ and the exp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1430019305:313,log,log,313,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1430019305,2,['log'],['log']
Testability,"> and ~~be done with it~~ never protect TFile::ReadProcessID. Thus obviously leading to random crash (simple conclusion from reading the code). > TTreeProcessorMT::Process respects (and if not, it's a bug and not intentional) the ""one file, one thread"" rule. As I rediscovered the protection are for that case. . From what I can infer the ""limitation"" of the protection to 'just' the TTreeProcessorMT::Process is a bad thing. So I propose:. - Remove TParTreeProcessingRAII and friends; - Replace R__RWLOCK_ACQUIRE_WRITE/READ by the regular R__WRITE/READ_LOCKGUARD; - Remove fgRwLock; - Refind test case containing and using TRef or TRefArray (thus exercising TFile::ReadProcessID and co); - Test with both TTreeProcessorMT::Process and RDF. @etejedor Do you still have (and/or remember) the test files you used to develop/test this code?. [Comment left on queue for a while :( ]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288#issuecomment-610506869:593,test,test,593,https://root.cern,https://github.com/root-project/root/pull/5288#issuecomment-610506869,3,['test'],['test']
Testability,> do you have any intuition about what could have gone wrong that causes these failures in the execCheckClusterRange test because of different file sizes?. Not yet. It could be that some leaf type changed or a `StreamerInfo` changed (for that reverting just the `LinkDef` should be sufficient).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14268#issuecomment-1863174237:117,test,test,117,https://root.cern,https://github.com/root-project/root/pull/14268#issuecomment-1863174237,1,['test'],['test']
Testability,"> how confident are we that (simple) files with that option are indeed 'reproducible' (i.e. is there more field to handle?). I testing file with TH1 and with TTree (10K entries, 4 branches). ; Binary compare shows no difference.; Once option is there, we can try to apply it in several places in roottest.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4253#issuecomment-525010216:127,test,testing,127,https://root.cern,https://github.com/root-project/root/pull/4253#issuecomment-525010216,1,['test'],['testing']
Testability,"> turning by default a feature which messes up with the lookup tables. How does it mess things up?. > with no tests. As I said that won't be the case. > to improve the less used feature of unloading. I don't understand this part - do you mean unloading isn't used a lot? That's totally incorrect - it's the major missing feature of cling for physicists. Not even talking about all of cling's notebook users here. > make this feature configurable. Do you really believe we need a flag beyond `.rawInput`? Could you argue for this, please? Too many options kill usability...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4214#issuecomment-532585952:110,test,tests,110,https://root.cern,https://github.com/root-project/root/pull/4214#issuecomment-532585952,1,['test'],['tests']
Testability,"@Axel-Naumann @eguiraud One of my dataframe tests fails because of this:; ```; 27/155 Test #1500: roottest-root-dataframe-test_snapshot .........................***Failed 13.13 sec; ...; --- /srv/root/src/roottest/root/dataframe/test_snapshot.ref	Tue Mar 17 09:11:36 2020; +++ /srv/root/build/roottest/root/dataframe/test_snapshot.log	Fri Apr 23 09:56:40 2021; @@ -1,4 +1,5 @@; ; +cling::DynamicLibraryManager::loadLibrary():/srv/root/build/roottest/root/dataframe/par:cannotdynamicallyloadposition-independentexecutable; ----Nowwithatreeintherootdirectory; Branch:b1; Branch:b1_square. -- END OUTDIFF OUTPUT --; CMake Error at /srv/root/build/RootTestDriver.cmake:264 (message):; compare 'stdout' error: 1; ```; Somehow ROOT should address the case of binaries built with -fpie, as at least Gentoo has enabled that by default in GCC to improve security. Other distros may do the same in the future. See e.g. https://docs.fedoraproject.org/en-US/packaging-guidelines/#_pie",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-825474655:44,test,tests,44,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-825474655,2,"['log', 'test']","['log', 'tests']"
Testability,"@Axel-Naumann Many thanks for the detailed and friendly reply! :+1: . > Do you have a proposal for the latter? We can add a new boolean constructor argument, `failOnUnknownArgs = false` which we set to `true` in ROOT. Indeed, I believe the additional constructor argument is best. ; The only other solution which comes to mind (if it would not be possible to add a parameter) would be to (once more) use magic numbers for the `numOptions` parameter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported option",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090#issuecomment-1064634456:777,test,test,777,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456,3,['test'],['test']
Testability,"@amadio , I have tested running the executable `tmva/sofie/test/emitFromONNX` on the machine directly. ; With the current master, I don't have the PCH dependency and I have : ; ```; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ rm ../../../etc/allDict.cxx.pch; sftnight@SFT-ubuntu-1804-2:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; terminate called after throwing an instance of 'std::bad_alloc'; what(): std::bad_alloc; Aborted (core dumped); ```; with your PR I have instead: ; ```; sftnight@SFT-ubuntu-1804-3:/mnt/build/workspace/root-pullrequests-build/build/tmva/sofie/test$ ./emitFromONNX ; error: unable to read PCH file /mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch: 'No such file or directory'; fatal error: PCH file '/mnt/build/workspace/root-pullrequests-build/build/etc//allDict.cxx.pch' not found: module file not found; Segmentation fault (core dumped); ```. I think before merging, it would be nice to understand why after your changes in CMAKE affecting only libCore, a simple executable not using the ROOT I/O requires the PCH",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10690#issuecomment-1403728768:17,test,tested,17,https://root.cern,https://github.com/root-project/root/pull/10690#issuecomment-1403728768,5,['test'],"['test', 'tested']"
Testability,@amadio ; As idea: ; Can we provide build option which enables maximal-available c++ standard and root7 when at least c++14 is there? Or simply enable root7 an all platforms where it make sense? ; Otherwise it always a chalenge to test root7 features on Jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3831#issuecomment-493590447:231,test,test,231,https://root.cern,https://github.com/root-project/root/pull/3831#issuecomment-493590447,1,['test'],['test']
Testability,@bbockelm I accidentally deleted my previous work last night. But good news is I figured out the issue I was facing when I try to reproduce my work today.; Now everything is working. I uploaded roottest repo in my github and generated the unit test as a commit. My current test simply follows the sample code in https://sft.its.cern.ch/jira/browse/ROOT-7588.; Let me know if something is not correct.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/84#issuecomment-174810100:244,test,test,244,https://root.cern,https://github.com/root-project/root/pull/84#issuecomment-174810100,2,['test'],['test']
Testability,"@bellenot, the zlib problem is fixed now also on Windows, but there are sill build errors related to something else:; ```; (compiling source file '../BUILTIN_CFITSIO/eval_y.c'); ; C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO\cfortran.h(280,1): error C1189: #error: ""cfortran.h: Can't find your environment among: - GNU gcc (g77) on Linux. - MIPS cc and f77 2.0. (e.g. Silicon Graphics, DECstations, ...) - IBM AIX XL C and FORTRAN Compiler/6000 Version 01.01.0000.0000 - VAX VMS CC 3.1 and FORTRAN 5.4. - Alpha VMS DEC C 1.3 and DEC FORTRAN 6.0. - Alpha OSF DEC C and DEC Fortran for OSF/1 AXP Version 1.2 - Apollo DomainOS 10.2 (sys5.3) with f77 10.7 and cc 6.7. - CRAY - NEC SX-4 SUPER-UX - CONVEX - Sun - PowerStation Fortran with Visual C++ - HP9000s300/s700/s800 Latest test with: HP-UX A.08.07 A 9000/730 - LynxOS: cc or gcc with f2c. - VAXUltrix: vcc,cc or gcc with f2c. gcc or cc with f77. - f77 with vcc works; but missing link magic for f77 I/O. - NO fort. None of gcc, cc or vcc generate required names. - f2c/g77: Use #define f2cFortran, or cc -Df2cFortran - gfortran: Use #define gFortran, or cc -DgFortran (also necessary for g77 with -fno-f2c option) - NAG f90: Use #define NAGf90Fortran, or cc -DNAGf90Fortran - Absoft UNIX F77: Use #define AbsoftUNIXFortran or cc -DAbsoftUNIXFortran - Absoft Pro Fortran: Use #define AbsoftProFortran - Portland Group Fortran: Use #define pgiFortran - Intel Fortran: Use #define INTEL_COMPILER"" [C:\ROOT-CI\build\CFITSIO-prefix\src\BUILTIN_CFITSIO-build\cfitsio.vcxproj] [C:\ROOT-CI\build\builtins\cfitsio\BUILTIN_CFITSIO.vcxproj]; (compiling source file '../BUILTIN_CFITSIO/f77_wrap1.c'); ```; This PR has been much less trivial than I thought :laughing: . Maybe we can just avoid doing this check, as suggested in the source itself:; https://github.com/HEASARC/cfitsio/blob/f220e6e2c570f19228609ee081f735df0ddb204b/cfortran.h#L254",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15508#issuecomment-2112196842:782,test,test,782,https://root.cern,https://github.com/root-project/root/pull/15508#issuecomment-2112196842,1,['test'],['test']
Testability,"@dpiparo - is it possible to pull up the logs? Unfortunately, the error message says simply the error message is in a different log file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/590#issuecomment-304902488:41,log,logs,41,https://root.cern,https://github.com/root-project/root/pull/590#issuecomment-304902488,2,['log'],"['log', 'logs']"
Testability,"@eguiraud ; > Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than; > ; > ```; > #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";; > ```; > ; > ?; > ; > Do we need a test?. Actually, #5530 *does have* this problem.; http://cdash.cern.ch/testDetails.php?test=85254326&build=868739. It's not fatal, since the typedef and the things that it's `typedef`ed to are strictly identical, so all tests proceed normally. However, the warning shows up.; A follow-up question of this is whether gtests should have a failregex or something so we see warnings popping up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5536#issuecomment-623958983:375,test,test,375,https://root.cern,https://github.com/root-project/root/pull/5536#issuecomment-623958983,4,['test'],"['test', 'testDetails', 'tests']"
Testability,"@eguiraud Thank you for your detailed response!. I currently create some TDirectories representing different stages of seloctions, and write histograms into it. For some reason, I would like to have TTree output also in some of the stages, and for that I need to use the `Snapshot` method. The way I had thought of (haven't tested yet, sorry) would be creating all the directories first and close the file, snapshotting to that file (not sure if the sub-directory could be, specified), and then open it for histogram writing. I have little knowledge about multi-threading, and was just (naïvely) looking for an RDataFrame anology of creating a TTree inside a TDirectory. It simply seemed strange to have to close the file and reopen. If feasible, it would be great if the (official) way to create a snapshot and to store into a certain sub-directory of a TFile, along with the multi-threading consideration, could be documented, so that users switching from the imperative pattern would be easier to understand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9225#issuecomment-958037006:324,test,tested,324,https://root.cern,https://github.com/root-project/root/issues/9225#issuecomment-958037006,1,['test'],['tested']
Testability,"@ferdymercury is that library already used in ROOT? Considering it's 10k loc, I'd not count it as ""simplifying"" unless we decided to use it in multiple places (ideally all our cpp executables).; Also, we must make sure that the argument parsing logic remains backward-compatible, which is not very clear to me if it would be the case with that lib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16090#issuecomment-2244858400:245,log,logic,245,https://root.cern,https://github.com/root-project/root/pull/16090#issuecomment-2244858400,1,['log'],['logic']
Testability,"@ferdymercury thanks for the links. I fully agree with Axel's proposal of trying to make all ROOT binaries consistent in their argument parsing and make them POSIX (while keeping the legacy `-long` options valid but hidden). Having never used it, I don't have a strong opinion on the CLI11 library yet. On one hand it seems well maintained and tested on all platforms, which is great, and being header-only certainly makes it convenient to use. On the other hand it's quite big and I wonder if we need enough features from it as to justify its size. . In any case I think we should revive the topic and understand if there were any blockers to it or if it was simply not picked up by anyone in the past 3 years.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16090#issuecomment-2245114452:344,test,tested,344,https://root.cern,https://github.com/root-project/root/pull/16090#issuecomment-2245114452,1,['test'],['tested']
Testability,"@guitargeek While addressing your comments, I started thinking that there's perhaps a better design. 1. I don't think we should have a default parameter at all, but only one ctor with the offset parameters. In real life current cases, these classes are always used from MinuitFcnGrad and they always share offsets with one or two other Likelihood* objects. The only cases where no shared offsets are necessary is in unit tests, but in those cases it's easy to just create a dummy offset vector.; 2. All the offset management is distracting a bit from the core Likelihood logic. I think it may be nicer to make a simple wrapper class `LikelihoodOffset` that holds the shared_ptrs to the vectors, does the swapping, and a few other things. This also makes it easier to create, because the unwieldy types that you also rightly point out would then only be contained within `LikelihoodOffset`. I will start working on point 1 at least, and in the meantime will consider (and allow you to comment on ;) ) point 2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12202#issuecomment-2091419386:421,test,tests,421,https://root.cern,https://github.com/root-project/root/pull/12202#issuecomment-2091419386,2,"['log', 'test']","['logic', 'tests']"
Testability,"@hageboeck Thanks for the correction. The build failure looks like it has something to do with a Git test, but it’s not clear to me what went wrong.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6172#issuecomment-675412995:101,test,test,101,https://root.cern,https://github.com/root-project/root/pull/6172#issuecomment-675412995,1,['test'],['test']
Testability,"@hahnjo Hi, I finally found some time to get this building, the branch now seems to somewhat work. Few things:; - it seems not to break the linux build; - seems to work for now, in whatever simple scenarios I have tested it till now; - the TThread tests crap out saying the _REENTRANT macro is not defined (I think it should be by -pthread which is enabled), probably needs some attention by an expert.; - there is an issue with library unload order vs the thread local dtor calling. Not a dealbreaker but the FreeBSD __cxa_thread_call_dtors is a bit verbose and prints warnings to stderr about that. Also here there is quite some room for experts to look at since there already are mitigations to similar issues in the code. (__cxa_thread_call_dtors: dtr 0x82b2c78f0 from unloaded dso, skipping); - actually a lot more tests fail - what is the general state of the test results on the master branch?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12787#issuecomment-1585584886:214,test,tested,214,https://root.cern,https://github.com/root-project/root/issues/12787#issuecomment-1585584886,4,['test'],"['test', 'tested', 'tests']"
Testability,"@hahnjo I did not want to let this sit for too long and as days ahead are even busier for me I invested now some more time on this. The good news is that I can pretty confidently say that the memory leak reported [above in the left plot](https://github.com/root-project/root/issues/14055#issuecomment-1814642915) has nothing to do with ROOT 🎉 and it was an unlucky coincidence which made me think it is due to ROOT. 😓 I still have to understand this memory behaviour in detail, but it is off-topic here. 🙈 . I was about simply closing the issue, when I remembered checking old issues in our project that our tests were just passing with ROOT `v6.26` and started to fail reporting the above mentioned sanitiser complaint from `v6.28`. I now checked and these failure occur as well with `v6.30` and `v6.32`. As far as I understand from our exchange above, we can safely suppress these adding `leak:libCling'` to `lsan-root.supp` file (I would not exclude more than the bare minimum in order to avoid suppress potential real problems/errors in the future). However, I would like to ask you a feedback about the fact this suppression was not necessary in `v6.26`. Is this expected for you? 🤔",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14055#issuecomment-2379654469:608,test,tests,608,https://root.cern,https://github.com/root-project/root/issues/14055#issuecomment-2379654469,1,['test'],['tests']
Testability,"@hahnjo Thanks for the comment! I can move it there, but do I really need to derive from TRandomEngine? The parent methods are for double Rndm(), which does not seem very useful to me.; This generator is a binary register generator, so rather a quite different structure, and it is not intended to be used as a normal generator, but rather as a test scenario or helper math functions for electronics testing. It also is inherently templated, etc. It returns an array rather than just a number Rndm(). See https://github.com/root-project/root/pull/8798/files#diff-2e848ceefaff2e24c9b2970fb86a8da1d3d00603fc4f48f920421e603198fab2. Wrt tests, I will 'copy' the mentioned tutorial as 'test' once it's clear where this class should go. Thanks for the review!! :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8798#issuecomment-2078772470:345,test,test,345,https://root.cern,https://github.com/root-project/root/pull/8798#issuecomment-2078772470,4,['test'],"['test', 'testing', 'tests']"
Testability,"@iarspider Did your tests indicate that this is a regression introduced by that commit specifically, or that this issue was simply not there yet at the time of that commit and it could be any commit since then?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14793#issuecomment-1983530703:20,test,tests,20,https://root.cern,https://github.com/root-project/root/issues/14793#issuecomment-1983530703,1,['test'],['tests']
Testability,"@jblomer : thanks a lot for your comments, I will address them shortly!; ; >One thing I'd like to discuss before merging is how we can unit test the code. If there is a stable, publicly available XRootD >service with test data, we can use the RRawFileDavix unit test as a blueprint. Otherwise, given that we have access to the xrootd >library, perhaps we can spawn a simple ad-hoc server in another thread. Well, I think one nice thing that we could do is to have an XRootD server with an HTTP plugin exporting same files with both root and HTTP protocols. Then we could simply run all the tests you currently have for the `RRawFileDavix` also for `RRawFileNetXNG`. If you have some stress tests we could even use them to benchmark the two protocols.; Could we use `root.cern.ch` to do this? Otherwise, I can create a small testing service, I would need to see what machine I can get.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9012#issuecomment-922713482:140,test,test,140,https://root.cern,https://github.com/root-project/root/pull/9012#issuecomment-922713482,7,"['benchmark', 'test']","['benchmark', 'test', 'testing', 'tests']"
Testability,"@kgertsenberger ; As you can see, I merged your PR and fix several compiler warnings afterwards - see #4017 ; If you can implement methods for other plugins - it would be grate. ; Even better if one could provide testing in roottest - one could use SQLite, which is very simple to handle.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3961#issuecomment-507209448:213,test,testing,213,https://root.cern,https://github.com/root-project/root/pull/3961#issuecomment-507209448,1,['test'],['testing']
Testability,"@linev @Axel-Naumann . my apologies, now slowly reducing amount of flags used for C++ modules build I see that modulemap.overlay file with libc and stl modulemap files is causing these problem. I think it is missing pthead modulemap file, I am testing it..; ```; -ivfsoverlay /mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include/modulemap.overlay.yaml; ```; So somehow -vfsoverlay is triggering the false positive warning detection (it is not clear for me why, maybe it is clang bug):; ```; [sftnight@lcgapp-slc6-x86-64-32 civetweb]$ clang -DHTTP_WITHOUT_FASTCGI -DNO_SSL_DL -DUSE_WEBSOCKET -I/mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include -I/cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-slc6-gcc62-opt/lib/cmake/VecCore/../../../include -isystem /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-slc6-gcc62-opt/include -Qunused-arguments -fcolor-diagnostics -pipe -m64 -Wall -W -pthread -fmodules -fmodules-cache-path=/mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include/pcms/ -fno-autolink -fdiagnostics-show-note-include-stack -Wno-module-import-in-extern-c -ivfsoverlay /mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include/modulemap.overlay.yaml -Xclang -fmodules-local-submodule-visibility -g -fPIC -pthread civetweb.c example.c -ldl -o test; civetweb.c:2701:8: warning: implicit declaration of function 'pthread_setname_np' is invalid in C99 [-Wimplicit-function-declaration]; (void)pthread_setname_np(pthread_self(), threadName);; ^; 1 warning generated.; example.c:3:14: warning: unused parameter 'argc' [-Wunused-parameter]; int main(int argc, char **argv); ^; example.c:3:27: warning: unused parameter 'argv' [-Wunused-parameter]; int main(int argc, char **argv); ^; 2 warnings generated. ```. We will investigate why and",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2581#issuecomment-418769386:244,test,testing,244,https://root.cern,https://github.com/root-project/root/pull/2581#issuecomment-418769386,1,['test'],['testing']
Testability,"@lmoneta I've implemented the conditional tests for the keras method. As well, this commit fixes the py2/py3 compatibility issue for the `find_python_module` function in `RootNewMacros.cmake` (simply a py2-only print statement buried in the code).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/280#issuecomment-253523265:42,test,tests,42,https://root.cern,https://github.com/root-project/root/pull/280#issuecomment-253523265,1,['test'],['tests']
Testability,"@ntadej I tried to cherry-pick, but it only worked with three of the four fixes. Also, I only know that *merging* worked at the moment, but it's not clear whether it compiles or if tests work.; I will let it run and see, but to get the full fixes, you will have to wait for ROOT 6.22. The good news is that we will branch off the release candidate this week, so you could use the tag v6-22-00-rc1 or so when it's available.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5466#issuecomment-624594499:181,test,tests,181,https://root.cern,https://github.com/root-project/root/pull/5466#issuecomment-624594499,1,['test'],['tests']
Testability,"@pcanal How should we proceed?; Is it goes in right direction?; If yes, should we extend `TClass::HasDefaultConstructor(bool testio=false)` or add new method `TClass::HasIOConstructor()`?; Also problem with array of objects is not clear for me",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5133#issuecomment-597828998:125,test,testio,125,https://root.cern,https://github.com/root-project/root/pull/5133#issuecomment-597828998,1,['test'],['testio']
Testability,"@pcanal I tested with RDataFrame `Snapshot` and a hand-written usage of `TBufferMerger`, writing a quite simple tree. Any ideas what else to test, do we have a more complex benchmark / a production use case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14034#issuecomment-1803962285:10,test,tested,10,https://root.cern,https://github.com/root-project/root/pull/14034#issuecomment-1803962285,3,"['benchmark', 'test']","['benchmark', 'test', 'tested']"
Testability,"@pcanal I wrote a testing program on my own. For compression, it basically reads the root file given in your ticket and compress all the trees in it and write out to another file. For decompression, it simply iterates all entries in the compressed file. I used TStopWatch to measure the performance. I did not use TTreePerfStats in my program.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/81#issuecomment-142029158:18,test,testing,18,https://root.cern,https://github.com/root-project/root/pull/81#issuecomment-142029158,1,['test'],['testing']
Testability,@pcanal This is just a documentatioon update. Can you please decide to merge or not ? ; It is clear the test failures have nothing to do with the PR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1534#issuecomment-458600001:104,test,test,104,https://root.cern,https://github.com/root-project/root/pull/1534#issuecomment-458600001,1,['test'],['test']
Testability,"@pcanal, do you have any intuition about what could have gone wrong that causes these failures in the `execCheckClusterRange` test because of different file sizes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14268#issuecomment-1863121010:126,test,test,126,https://root.cern,https://github.com/root-project/root/pull/14268#issuecomment-1863121010,1,['test'],['test']
Testability,"@pcanal, regarding your requirements:; * I've already run `clang-format` on my laptop. If the CI version behaves differently, I am of course happy to fix further stuff.; * The documentation is on par with `TCsvDS`, given I copied most of it from there. I am happy to improve it further in a subsequent PR.; * The tests are on par with `datasource_csv`, given I simply adapted it to my case. I will of course add more as I experiment more with it myself.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-371615688:313,test,tests,313,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-371615688,1,['test'],['tests']
Testability,"@pcanal, thank you for feedback. Actually, I was talking about fastcloning test in roottest.git. I found in it's Makefile exactly the same macros and bash scripts including also dt_RunDrawTest.sh and dt_DrawTest.C. I tried to port it to CMake but code requires a lot of fixes and doesn't work out of the box. I have WIP PR https://github.com/root-project/roottest/pull/290 with commented out part including dt_RunDrawTest.sh and dt_DrawTest.C since it was not running for long time. Do you think I can remove in roottest PR https://github.com/root-project/roottest/pull/290 outdated code in favour of proposed solution in your comment - (a), b), c) steps?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3270#issuecomment-460264298:75,test,test,75,https://root.cern,https://github.com/root-project/root/pull/3270#issuecomment-460264298,1,['test'],['test']
Testability,@pcanal. If it is any help I reference here a simple cmssw module [1]. When compile it with FWLite (built with root master) you can reproduce the crash. Below is the binary from the test module and the sample file:; test-bname-for.exe /eos/cms/store/group/phys_muon/dmytro/tmp/BPH-RunIIAutumn18DRPremix-00015.root. Crash is the line https://github.com/alja/OssTests/blob/root-test/BranchAddr/bin/test-bname-for.cc#L95. [1] https://github.com/alja/OssTests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-948203246:182,test,test,182,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-948203246,4,['test'],"['test', 'test-bname-for']"
Testability,@petrstepanov : Thank you for the contribution that now is merged!; I forgot to mention you that next time it would be better to merge together simple commits and have more meaningful commit log messages. ; Thanks again!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10780#issuecomment-1192647873:191,log,log,191,https://root.cern,https://github.com/root-project/root/pull/10780#issuecomment-1192647873,1,['log'],['log']
Testability,"@phsft-bot build!. Could you update the commit message to something like:; ""[rootcling] Don't generate dictionary to throw it away when called with -r. This patch should speed up rootcling -r and simplify some of the conditional logic.""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5223#issuecomment-604382871:229,log,logic,229,https://root.cern,https://github.com/root-project/root/pull/5223#issuecomment-604382871,1,['log'],['logic']
Testability,"@stwunsch : The machine running the installation of the reference guide is root-ubuntu-2004-2. I logged on this machine and simply tried (stupidly) to type ""pyspark"". I know nothing about this tool but surprisingly I got an answer saying it seems wrongly installed there ... Dod you have an idea about that ? what should be done ? A Python expert might know better. ```; sftnight@root-ubuntu-2004-2:~$ pyspark; Could not find valid SPARK_HOME while searching ['/home', '/usr/local/bin']. Did you install PySpark via a package manager such as pip or Conda? If so,; PySpark was not found in your Python environment. It is possible your; Python environment does not properly bind with your package manager. Please check your default 'python' and if you set PYSPARK_PYTHON and/or; PYSPARK_DRIVER_PYTHON environment variables, and see if you can import; PySpark, for example, 'python -c 'import pyspark'. If you cannot import, you can install by using the Python executable directly,; for example, 'python -m pip install pyspark [--user]'. Otherwise, you can also; explicitly set the Python executable, that has PySpark installed, to; PYSPARK_PYTHON or PYSPARK_DRIVER_PYTHON environment variables, for example,; 'PYSPARK_PYTHON=python3 pyspark'. /usr/local/bin/pyspark: line 24: /bin/load-spark-env.sh: No such file or directory; /usr/local/bin/pyspark: line 68: /bin/spark-submit: No such file or directory; sftnight@root-ubuntu-2004-2:~$ . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7802#issuecomment-822528404:97,log,logged,97,https://root.cern,https://github.com/root-project/root/issues/7802#issuecomment-822528404,1,['log'],['logged']
Testability,"@vgvassilev , this failed to build for cmssw externals e.g. `hepdata-lib` failed to build with [error](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6342e6/25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1154135015:253,log,log,253,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015,7,"['log', 'test']","['log', 'testBuildDir', 'tests']"
Testability,"@vgvassilev Let me clarify the disconnect. The title says ""Add **a** module for experimental/string_view""; The commit says:. That should fix a recent nightly failure with gcc11 avoiding to require; module ""bits/ranges_base.h"" in C++20 context. The code says:; ```; module ""experimental/string_view"" {; export *; header ""experimental/algorithm""; }; ```; ; The commit content as-is seems completely unrelated to the commit log as far as I could tell (without doing research on the relationship between `range_base`, `string_view` and `algorithm`.; ; So I pondered whether the fix was the right fix for a problem I did not know anything about ... ; ; The right thing to do would have probably be have been to request a complete explanation of what the original problem was, what was the mechanism leading to the error and why this solution was the best solution. This was obviously much more than this seemingly simple fix required. So instead I thought to ask for a very low cost, straight forward solution: simply copy/pasting the error with no additional effort to explain in detail. > Can you suggest a commit message which adds enough information which makes me happy as well?. That requires to paraphrase the error and add a few more details. ```; That should fix a recent nightly failure with gcc11. The failure presented during dictionary generation in a C++14 and C++17 build and incorrectly complained about needing the 'cplusplus20' feature for the 'std.bits/ranges_base.h' module. The issue was triggered by an inclusion of `<bits/ranges_base.h>` from `string_view`. This issue exists on gcc11 and gcc12 (and I guess any gcc that made changes to libstdc++ and the experimental/string_view header file). . It seems the issue is solved by exporting `algorithm` as part of the `string_view` module.; ```. Actually, I still don't know why adding `algorithm` fixes a problem with `range_base.h`, so I can't add that to the commit ... maybe it is something like ""... by avoiding to use the module m",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1430326540:421,log,log,421,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1430326540,1,['log'],['log']
Testability,"A similar warning is also provoked in the simpler case below, so it's not only related to STL stuff:. ```cpp; #include ""TFile.h"". class TestBase {};. class Test : public TestBase {};. void testio() {. Test t;. TFile *fout = TFile::Open(""test.root"", ""RECREATE"");. fout->WriteObjectAny(&t, TClass::GetClass<Test>(), ""t"");; }; ```. ```; root -l testio.cpp ; root [0] ; Processing testio.cpp...; Warning in <TStreamerInfo::Build>: Test: base class TestBase has no streamer or dictionary it will not be saved; root [1] .q; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9371#issuecomment-997463726:189,test,testio,189,https://root.cern,https://github.com/root-project/root/issues/9371#issuecomment-997463726,4,['test'],"['test', 'testio']"
Testability,"ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TCanvas* C= new TCanvas(""canvas"",""canvas"",5,5);//fails; // TCanvas* C= new TCanvas(""canvas"",""canvas"",50,50);//works; C->cd();; Double_t w=20, h=20, xl=0, yb=20;; TBox* o=new TBox();; TPad* c= new TPad();; c->SetPad(0,0,1,1);; c->cd(1);; c->PlaceBox(o,w,h,xl,yb);; return 0;; }. ```. I see. ```; [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc; entry=0x7ffeea3c7360, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408; #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428#issuecomment-698590998:2224,test,test,2224,https://root.cern,https://github.com/root-project/root/issues/6428#issuecomment-698590998,1,['test'],['test']
Testability,AXEL DEBUG: null workspace; Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5360-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77596/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77596/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77596/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77596/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5360#issuecomment-617094622:338,test,tests,338,https://root.cern,https://github.com/root-project/root/pull/5360#issuecomment-617094622,4,['test'],"['testReport', 'tests']"
Testability,AXEL DEBUG: null workspace; Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5395-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77548/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77548/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77548/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77548/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5395#issuecomment-617046782:338,test,tests,338,https://root.cern,https://github.com/root-project/root/pull/5395#issuecomment-617046782,4,['test'],"['testReport', 'tests']"
Testability,AXEL DEBUG: null workspace; Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5411-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77564/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77564/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77564/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77564/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5411#issuecomment-617073790:338,test,tests,338,https://root.cern,https://github.com/root-project/root/pull/5411#issuecomment-617073790,4,['test'],"['testReport', 'tests']"
Testability,AXEL DEBUG: null workspace; Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5412-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77580/console).; ### Warnings:; - [2020-04-21T09:26:20.442Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/math/foam/test/testTFoam.cxx:14:23: warning: unused parameter 'nDim' [-Wunused-parameter] . ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77580/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77580/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77580/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5412#issuecomment-617073738:449,test,test,449,https://root.cern,https://github.com/root-project/root/pull/5412#issuecomment-617073738,6,['test'],"['test', 'testReport', 'testTFoam', 'tests']"
Testability,AXEL DEBUG: null workspace; Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5412-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77620/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77620/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77620/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77620/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5412#issuecomment-617160440:338,test,tests,338,https://root.cern,https://github.com/root-project/root/pull/5412#issuecomment-617160440,4,['test'],"['testReport', 'tests']"
Testability,AXEL DEBUG: null workspace; Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5413-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77588/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77588/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77588/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77588/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5413#issuecomment-617085149:338,test,tests,338,https://root.cern,https://github.com/root-project/root/pull/5413#issuecomment-617085149,4,['test'],"['testReport', 'tests']"
Testability,AXEL DEBUG: null workspace; Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5415-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77612/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77612/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77612/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77612/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5415#issuecomment-617102090:338,test,tests,338,https://root.cern,https://github.com/root-project/root/pull/5415#issuecomment-617102090,4,['test'],"['testReport', 'tests']"
Testability,"Actually it worked for you because you centred the X title. In the previous macro, remove the X title centring and go to log scale in Y and you will get the problem you discovered. So that's not a regression. The bug fix simply revealed a problem (?) which was hidden by the bug generated by the X title centring. To make it short, with a ROOT version without the patch, try:; ```; {; auto c1 = new TCanvas(""c1"",""multigraph"",700,500);; c1->SetGrid();; auto *mg = new TMultiGraph();; std::vector<double> x1;; std::vector<double> sig1;; std::vector<double> sig2;; for (double E=1e-4;E<2e7;E*=1.1) {; x1.push_back(E);; sig1.push_back(10*pow(E,-0.1));; sig2.push_back(15*pow(E,-0.15));; }; auto g1 = new TGraph(x1.size(), x1.data(), sig1.data());; mg->Add(g1);; auto g2 = new TGraph(x1.size(), x1.data(), sig2.data());; mg->Add(g2);; mg->SetTitle(""; E (eV);#sigma (b)"");; mg->Draw(""AL"");; gPad->Update();; c1->SetLogy();; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9011#issuecomment-957859532:121,log,log,121,https://root.cern,https://github.com/root-project/root/issues/9011#issuecomment-957859532,1,['log'],['log']
Testability,Actually my apologies ... changing the default seems to warrant its own commit so that it is clearly marked/seen in short git logs.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4839#issuecomment-577677791:126,log,logs,126,https://root.cern,https://github.com/root-project/root/pull/4839#issuecomment-577677791,1,['log'],['logs']
Testability,"Actually, it's probably not a good idea to introduce this progress bar, because it will break the logging to files, which is done a lot in batch jobs. Hence, I close this PR, which is superseded by another PR:; * https://github.com/root-project/root/pull/14309",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10509#issuecomment-1881730104:98,log,logging,98,https://root.cern,https://github.com/root-project/root/pull/10509#issuecomment-1881730104,1,['log'],['logging']
Testability,"Added tests for the C++ mechanisms, and attempt at fixing the ubuntu18 failure (see last commit) with a much more simplified approach w.r.t. https://github.com/root-project/root/pull/12981, which should not be needed anymore (let's see what the CI thinks).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12363#issuecomment-1585596942:6,test,tests,6,https://root.cern,https://github.com/root-project/root/pull/12363#issuecomment-1585596942,1,['test'],['tests']
Testability,"After more investigation, it is less clear to me how the valgrind report and the `AddDataset` function are related. Still, the logic of the function seems faulty any way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14433#issuecomment-1910477019:127,log,logic,127,https://root.cern,https://github.com/root-project/root/issues/14433#issuecomment-1910477019,1,['log'],['logic']
Testability,"After some investigation, it seems this issue is due to the priority level assigned to the two overloads. Specifically, the logic at https://github.com/root-project/root/blob/896940ef8c0936ad394a1cf6b98d1d8fbaabbfff/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx#L408-L412. seems to aim at assigning higher priority to class types that have a deeper inheritance chain. In the reproducer above, this should translate to class `B` having priority 1 (because it has 1 base class `A`) and class `C` having priority 2 (because it has 2 base classes `A,B`). The function this logic relies on ([GetNumBases](https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx#L1212)) in turn calls [TClass::GetListOfBases](https://github.com/root-project/root/blob/87a998d48803bc207288d90038e60ff148827664/core/meta/src/TClass.cxx#L3620) which does not return all the bases in the full inheritance chain of the class, rather just the direct bases of a class. So in this case:; ```; >>> import ROOT; >>> ROOT.gInterpreter.Declare(; ... '''; ... class A {};; ... class B: public A {};; ... class C: public B {};; ... '''); True; >>> c = ROOT.TClass.GetClass(""C""); >>> b = ROOT.TClass.GetClass(""B""); >>> len(c.GetListOfBases()); 1; >>> len(b.GetListOfBases()); 1; ```. In this case, if TClass:GetListOfBases returned a list of size 2 for class `C`, the correct overload would get assigned a higher priority and thus would be chosen at runtime. There is no clear general solution, but it is worth highlighting the cause of the issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8817#issuecomment-897023454:124,log,logic,124,https://root.cern,https://github.com/root-project/root/issues/8817#issuecomment-897023454,2,['log'],['logic']
Testability,"Alright, I'm building a simpler reproducer then! Good to have one anyway for a unit test. Strange, at least getting a pointer to the workspace works for me also without the ATLAS RooFit extensions (indeed, the workspace contains some custom ATLAS classes)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1085634160:84,test,test,84,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1085634160,1,['test'],['test']
Testability,"Alright, issue was cleared by @etejedor and I was able to put in a test that works around it.; I think this can be merged if jenkins is green.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1857#issuecomment-381656522:67,test,test,67,https://root.cern,https://github.com/root-project/root/pull/1857#issuecomment-381656522,1,['test'],['test']
Testability,"Alright, so the only test failing is `roottest/dataframe/test_glob.C`. It is not clear to me why the interpreter does not find methods like `TDataFrameImpl::Book`. Changing roottest to pass `test_glob.C+` rather than `test_glob.C` solves the problem on my machines. That is actually how the other macros are processed in `roottest/root/dataframe`. I am not sure whether this is expected behavior, so I am not sure how to proceed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/423#issuecomment-286704453:21,test,test,21,https://root.cern,https://github.com/root-project/root/pull/423#issuecomment-286704453,1,['test'],['test']
Testability,"Alright, thank you very much! That's very nice you chose ROOT to contribute to!. If you need any guidance on what you could help with, just ask me. Sometimes it's not easy to find the issues that are actually easy to work on, as the code is quite complex. Are you looking only Python-related issues, or would you also be interested in doing some C++ contributions to beef up your C++ skills and experience?. As for this PR, I'll merge it if the CI bot tests pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10853#issuecomment-1170576376:452,test,tests,452,https://root.cern,https://github.com/root-project/root/pull/10853#issuecomment-1170576376,1,['test'],['tests']
Testability,"An even simpler example which doesn't depend on RDF:. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper); print(res); ```. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. Output (again with centos stream 8, root 6.26/10):; ```; declare ret True; creating helper; IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'!; You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const; Maybe you need to load the corresponding shared library?; 18446744073709551615; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854#issuecomment-1341802449:121,test,test,121,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1341802449,2,['test'],['test']
Testability,"Another minor related point:; ```; - TH1F *test = new TH1F(""test"",""This is test histogram"",100,-4,4);; + auto test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);; ```; I guess this gives us what, a TH1F*? (auto doesn't add clarity); Isn't it better to use the base class?; ```; TH1 *test = RDirectory::Heap().Create<TH1F>(""test"", ""test"",""This is test histogram"",100,-4,4);; ```; assuming that works, or if not, this does:; ```; unique_ptr<TH1> test; ; void the_routine () {; //...; test.reset(new TH1F());; }; ```; This is something that I find not well documented in the past. The old docs point out that TH1F is derived from TH1, but what wasn't always clear to this non-expert was that after creation it seems you can cast to TH1 without loss of any functionality, and functions taking TH1 pointers have the advantage of working on all TH1-derivatives. Building this concept into the standard examples could be helpful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-789295272:43,test,test,43,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-789295272,13,['test'],['test']
Testability,"Another very simple example, less serious because at least it fails, but still problematic because it makes debugging very difficult. test.h:; ```cpp; template <typename T>; int some_template_function(const T &x) {; return x.size();; }; ```. test.py:; ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). res0 = ROOT.some_template_function(ROOT.std.vector[""double""]()); print(""res0"", res0). res1 = ROOT.some_template_function(0.0); print(""res1"", res1); ```. output:; ```; declare ret True; res0 0; Traceback (most recent call last):; File ""/home/b/bendavid/pyrootdebug2/test.py"", line 10, in <module>; res1 = ROOT.some_template_function(0.0); TypeError: Template method resolution failed:; int ::some_template_function(const vector<double>& x) =>; TypeError: could not convert argument 1; Failed to instantiate ""some_template_function(double)""; ```; ; Compare to the same in c++ ; ```; #include ""test.h"". const int res = some_template_function(0.0);; ```; ; Then the output of clang++ with nice error message is:; ```; In file included from test.cpp:1:; ./test.h:3:11: error: member reference base type 'const double' is not a structure or union; return x.size();; ~^~~~~; test.cpp:3:17: note: in instantiation of function template specialization 'some_template_function<double>' requested here; const int res = some_template_function(0.0);; ^; 1 error generated.; ```. So in the pyroot case all of the useful compiler errors are suppressed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854#issuecomment-1410720055:134,test,test,134,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1410720055,8,['test'],['test']
Testability,"As a completely anecdotical evidence, I have been running on the `root-ubuntu-2004-1` machine the distributed RDF test which used to fail, which included calls to DefinePerSample. After applying this patch, currently ~1800 iterations of the test passed without failures. ```; test_all.py::TestPropagateExceptions::test_runtime_error_is_propagated <- check_backend.py PASSED; test_all.py::TestDefinePerSample::test_definepersample_simple <- check_definepersample.py PASSED; test_all.py::TestDefinePerSample::test_definepersample_withinitialization <- check_definepersample.py PASSED; =============================== warnings summary ===============================; test_all.py::TestPropagateExceptions::test_runtime_error_is_propagated; /home/sftnight/vpadulan/rootproject/rootbuild/master-like-jenkins/lib/ROOT/_facade.py:154: DeprecationWarning: `np.bool` is a deprecated alias for the builtin `bool`. To silence this warning, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.; Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations; return _orig_ihook(name, *args, **kwds). test_all.py::TestPropagateExceptions::test_runtime_error_is_propagated; /usr/local/lib/python3.8/dist-packages/dask_jobqueue/core.py:20: FutureWarning: tmpfile is deprecated and will be removed in a future release. Please use dask.utils.tmpfile instead.; from distributed.utils import tmpfile. -- Docs: https://docs.pytest.org/en/latest/warnings.html; ==================== 3 passed, 2 warnings in 32.72 seconds =====================. Running test 1864; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13787#issuecomment-1744852013:114,test,test,114,https://root.cern,https://github.com/root-project/root/pull/13787#issuecomment-1744852013,3,['test'],['test']
Testability,"BTW, why doing this test ? we have something working with all bash versions, simply use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1081920556:20,test,test,20,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1081920556,1,['test'],['test']
Testability,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/console).; ### Warnings:; - [2022-09-13T17:42:54.005Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-09-13T17:43:20.121Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1245798559:558,test,tests,558,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245798559,5,['test'],"['test', 'testReport', 'tests']"
Testability,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018#issuecomment-1380358995:249,test,tests,249,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995,8,['test'],"['test', 'testReport', 'tests']"
Testability,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft11.dyndns.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/console).; ### Warnings:; - [2022-07-05T22:47:30.183Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T22:48:01.949Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175603018:572,test,tests,572,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175603018,3,['test'],"['testReport', 'tests']"
Testability,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft11.dyndns.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164077/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018#issuecomment-1380914798:263,test,tests,263,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380914798,7,['test'],"['test', 'testReport', 'tests']"
Testability,Build failed on ROOT-fedora27/noimt.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67062/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67062/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-527806081:146,test,tests,146,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-527806081,2,['test'],"['testReport', 'tests']"
Testability,Build failed on ROOT-fedora27/noimt.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67422/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67422/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-529337927:146,test,tests,146,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-529337927,2,['test'],"['testReport', 'tests']"
Testability,Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67063/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67063/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-527803650:148,test,tests,148,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-527803650,2,['test'],"['testReport', 'tests']"
Testability,Build failed on ROOT-fedora29/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67423/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67423/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-529331416:148,test,tests,148,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-529331416,2,['test'],"['testReport', 'tests']"
Testability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5615-ROOT-fedora30-cxx14&date=2020-05-14).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82058/console).; ### Warnings:; - [2020-05-14T11:00:37.189Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-05-14T11:07:00.384Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.meta.roottest_root_meta_expressiveErrorMessages](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82058/testReport/projectroot.roottest.root/meta/roottest_root_meta_expressiveErrorMessages/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5615#issuecomment-628570271:985,test,tests,985,https://root.cern,https://github.com/root-project/root/pull/5615#issuecomment-628570271,2,['test'],"['testReport', 'tests']"
Testability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5692-ROOT-fedora30-cxx14&date=2020-05-25).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/console).; ### Warnings:; - [2020-05-25T10:19:25.159Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-05-25T10:26:03.641Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_operator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_operator/); - [projectroot.roottest.python.basic.roottest_python_basic_overloa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5692#issuecomment-633509680:985,test,tests,985,https://root.cern,https://github.com/root-project/root/pull/5692#issuecomment-633509680,1,['test'],['tests']
Testability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5692-ROOT-fedora30-cxx14&date=2020-05-25).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83430/console).; ### Warnings:; - [2020-05-25T13:06:41.453Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-05-25T13:07:19.903Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.io.tuple.roottest_root_io_tuple_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83430/testReport/projectroot.roottest.root.io/tuple/roottest_root_io_tuple_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5692#issuecomment-633570667:985,test,tests,985,https://root.cern,https://github.com/root-project/root/pull/5692#issuecomment-633570667,2,['test'],"['testReport', 'tests']"
Testability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5716-ROOT-fedora30-cxx14&date=2020-05-27).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83727/console).; ### Errors:; - [2020-05-27T10:02:25.808Z] FAILED: tree/dataframe/test/dataframe_splitcoll_arrayview ; - [2020-05-27T10:02:25.808Z] collect2: error: ld returned 1 exit status . ### Warnings:; - [2020-05-27T09:53:43.857Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-05-27T10:00:15.862Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5716#issuecomment-634560707:465,test,test,465,https://root.cern,https://github.com/root-project/root/pull/5716#issuecomment-634560707,1,['test'],['test']
Testability,Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/console).; ### Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [proje,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844250497:253,test,tests,253,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844250497,4,['test'],"['testReport', 'tests']"
Testability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/98913/console).; ### Warnings:; - [2020-10-12T17:59:07.743Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-10-12T18:07:15.273Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-9185.roottest_cling_dict_ROOT_9185_ROOT9185](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/98913/testReport/projectroot.roottest.cling.dict/ROOT-9185/roottest_cling_dict_ROOT_9185_ROOT9185/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6614#issuecomment-707278634:825,test,tests,825,https://root.cern,https://github.com/root-project/root/pull/6614#issuecomment-707278634,2,['test'],"['testReport', 'tests']"
Testability,"Build failed on ROOT-fedora30/cxx14.; Running on root-fedora30-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/98938/console).; ### Warnings:; - [2020-10-13T08:58:48.277Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-10-13T08:59:31.573Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-9185.roottest_cling_dict_ROOT_9185_ROOT9185](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/98938/testReport/projectroot.roottest.cling.dict/ROOT-9185/roottest_cling_dict_ROOT_9185_ROOT9185/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6614#issuecomment-707605773:825,test,tests,825,https://root.cern,https://github.com/root-project/root/pull/6614#issuecomment-707605773,2,['test'],"['testReport', 'tests']"
Testability,"Build failed on ROOT-fedora30/cxx14.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5281)[See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/74840/console).; ### Warnings:; - [2020-04-02T16:53:56.363Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-04-02T17:04:10.487Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/74840/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5281#issuecomment-607985104:856,test,tests,856,https://root.cern,https://github.com/root-project/root/pull/5281#issuecomment-607985104,2,['test'],"['testReport', 'tests']"
Testability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71055/console).; ### Warnings:; - CMake Warning at /build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.test.test_stressgraphics_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71055/testReport/projectroot/test/test_stressgraphics_interpreted/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-547064701:775,test,tests,775,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-547064701,4,['test'],"['test', 'testReport', 'tests']"
Testability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71095/console).; ### Warnings:; - CMake Warning at /build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.bindings.pyroot_experimental.PyROOT.ROOT.test.pyunittests_pyroot_cppcallable](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71095/testReport/projectroot.bindings.pyroot_experimental.PyROOT.ROOT/test/pyunittests_pyroot_cppcallable/); - [projectroot.test.test_stressgraphics_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71095/testReport/projectroot/test/test_stressgraphics_interpreted/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-547113818:775,test,tests,775,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-547113818,7,['test'],"['test', 'testReport', 'tests']"
Testability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71167/console).; AXE### Warnings:; - CMake Warning at /build/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message): ; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.bindings.pyroot_experimental.PyROOT.ROOT.test.pyunittests_pyroot_cppcallable](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71167/testReport/projectroot.bindings.pyroot_experimental.PyROOT.ROOT/test/pyunittests_pyroot_cppcallable/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-547314147:778,test,tests,778,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-547314147,4,['test'],"['test', 'testReport', 'tests']"
Testability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71191/console).; AXEL DEBUG: logParserAction errors=0, warnings=18; ### Warnings:; - include/tbb/concurrent_hash_map.h:127:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - /build/workspace/root-pullrequests-build/root/gui/webdisplay/inc/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - /build/workspace/root-pullrequests-build/root/gui/webdisplay/inc/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - /build/workspace/root-pullrequests-build/root/gui/webdisplay/inc/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - /build/workspace/root-pullrequests-build/root/gui/webdisplay/inc/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - include/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - include/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - include/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - include/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] ; - include/ROOT/RWebDisplayHandle.hxx:88:27: warning: unused parameter ‘UNUSED’ [-Wunused-parameter] . And 8 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4585#issuecomment-547370533:146,log,logParserAction,146,https://root.cern,https://github.com/root-project/root/pull/4585#issuecomment-547370533,1,['log'],['logParserAction']
Testability,"Build failed on ROOT-fedora30/cxx14.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79192/console).; ### Warnings:; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_execCheckClusterRange](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79192/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5038#issuecomment-588335594:665,test,tests,665,https://root.cern,https://github.com/root-project/root/pull/5038#issuecomment-588335594,2,['test'],"['testReport', 'tests']"
Testability,Build failed on ROOT-fedora31/noimt.; Running on root-fedora-31-2.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/console).; ### Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [proj,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844244254:254,test,tests,254,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844244254,4,['test'],"['testReport', 'tests']"
Testability,"Build failed on ROOT-fedora32/default.; Running on root-fedora32-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115159/console).; ### Warnings:; - [2021-04-20T17:41:07.506Z] ginclude/tbb/concurrent_hash_map.h:131:76: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115159/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115159/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115159/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-823498058:559,test,tests,559,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-823498058,4,['test'],"['testReport', 'tests']"
Testability,"Build failed on ROOT-fedora32/default.; Running on root-fedora32-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115296/console).; ### Warnings:; - [2021-04-21T16:53:52.297Z] ginclude/tbb/concurrent_hash_map.h:131:76: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115296/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115296/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115296/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-824222731:559,test,tests,559,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-824222731,4,['test'],"['testReport', 'tests']"
Testability,"Build failed on ROOT-fedora32/default.; Running on root-fedora32-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115313/console).; ### Warnings:; - [2021-04-21T17:35:44.121Z] ginclude/tbb/concurrent_hash_map.h:131:76: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115313/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115313/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115313/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-824249820:559,test,tests,559,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-824249820,4,['test'],"['testReport', 'tests']"
Testability,"Build failed on ROOT-fedora32/default.; Running on root-fedora32-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115314/console).; ### Warnings:; - [2021-04-21T20:32:03.524Z] ginclude/tbb/concurrent_hash_map.h:131:76: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115314/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115314/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115314/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-824351593:559,test,tests,559,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-824351593,4,['test'],"['testReport', 'tests']"
Testability,"Build failed on ROOT-fedora32/default.; Running on root-fedora32-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115411/console).; ### Warnings:; - [2021-04-22T15:26:47.027Z] ginclude/tbb/concurrent_hash_map.h:131:76: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2021-04-22T15:28:51.056Z] math/unuran/unuran-1.8.0-root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=] . ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115411/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115411/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115411/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-824971382:779,test,tests,779,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-824971382,4,['test'],"['testReport', 'tests']"
Testability,"Build failed on ROOT-fedora32/default.; Running on root-fedora32-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115420/console).; ### Warnings:; - [2021-04-22T16:40:55.816Z] ginclude/tbb/concurrent_hash_map.h:131:76: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2021-04-22T16:41:34.121Z] math/unuran/unuran-1.8.0-root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=] . ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115420/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115420/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115420/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-825024680:779,test,tests,779,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-825024680,4,['test'],"['testReport', 'tests']"
Testability,"Build failed on ROOT-fedora32/default.; Running on root-fedora32-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117068/console).; ### Warnings:; - [2021-05-06T20:26:40.917Z] ginclude/tbb/concurrent_hash_map.h:131:76: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2021-05-06T20:28:24.470Z] math/unuran/unuran-1.8.0-root/src/methods/mvtdr_init.ch:886:17: warning: argument 1 value ‘18446744073709551608’ exceeds maximum object size 9223372036854775807 [-Walloc-size-larger-than=] . ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117068/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117068/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/117068/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-833862493:779,test,tests,779,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-833862493,4,['test'],"['testReport', 'tests']"
Testability,"Build failed on ROOT-fedora34/default.; Running on root-fedora34-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/console).; ### Warnings:; - [2021-10-04T15:57:57.930Z] /home/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/concurrent_hash_map.h:131:24: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘struct tbb::interface5::internal::hash_map_base::bucket’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runaliceesd](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runaliceesd/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126763/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9066#issuecomment-933646782:620,test,tests,620,https://root.cern,https://github.com/root-project/root/pull/9066#issuecomment-933646782,5,['test'],"['testReport', 'tests']"
Testability,Build failed on ROOT-performance-centos7-multicore/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67061/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67061/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-527796413:169,test,tests,169,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-527796413,2,['test'],"['testReport', 'tests']"
Testability,Build failed on ROOT-performance-centos7-multicore/default.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67421/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67421/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-529325990:169,test,tests,169,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-529325990,2,['test'],"['testReport', 'tests']"
Testability,Build failed on ROOT-performance-centos8-multicore/cxx17.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/console).; ### Warnings:; - [2022-07-05T13:55:21.463Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T13:55:40.879Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175116758:570,test,tests,570,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758,3,['test'],"['testReport', 'tests']"
Testability,Build failed on ROOT-performance-centos8-multicore/default.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/console).; ### Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.datamodelevolution.roottest_root_io_datamodelevolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/datamodelevolution/roottest_root_io_datamodelevolution_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [project,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844253147:263,test,tests,263,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844253147,4,['test'],"['testReport', 'tests']"
Testability,Build failed on ROOT-performance-centos8-multicore/default.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/console).; ### Warnings:; - [2022-06-02T14:49:09.186Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T14:49:29.255Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144980019:572,test,tests,572,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019,5,['test'],"['test', 'testReport', 'tests']"
Testability,Build failed on ROOT-performance-centos8-multicore/default.; Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/console).; ### Warnings:; - [2022-06-02T18:36:05.557Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-06-02T18:36:24.346Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145207749:572,test,tests,572,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749,5,['test'],"['test', 'testReport', 'tests']"
Testability,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/console).; ### Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844261645:246,test,tests,246,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844261645,4,['test'],"['testReport', 'tests']"
Testability,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcga,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144990827:246,test,tests,246,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827,6,['test'],"['test', 'testReport', 'tests']"
Testability,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1153748598:246,test,tests,246,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598,6,['test'],"['test', 'testReport', 'tests']"
Testability,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143358479:246,test,tests,246,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479,6,['test'],"['test', 'testReport', 'tests']"
Testability,Build failed on ROOT-ubuntu16/nortcxxmod.; Running on sft-ubuntu-1604-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143554468:246,test,tests,246,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468,6,['test'],"['test', 'testReport', 'tests']"
Testability,Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65282/console).; ### Failing tests:; - [projectroot.roottest.root.hist.misc.roottest_root_hist_misc_runownership](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65282/testReport/projectroot.roottest.root.hist/misc/roottest_root_hist_misc_runownership/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65282/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65282/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.io.xml.roottest_root_io_xml_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65282/testReport/projectroot.roottest.root.io/xml/roottest_root_io_xml_make/); - [projectroot.roottest.root.meta.autoloading.roottest_root_meta_autoloading_execTypeinfo_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65282/testReport/projectroot.roottest.root.meta/autoloading/roottest_root_meta_autoloading_execTypeinfo_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65282/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.core.metacling.test.gtest_core_metacling_test_coremetaclingtestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65282/testReport/projectroot.core.metacling/test/gtest_core_metacling_test_coremetaclingtestUnit/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4230#issuecomment-521946252:149,test,tests,149,https://root.cern,https://github.com/root-project/root/pull/4230#issuecomment-521946252,10,['test'],"['test', 'testReport', 'tests']"
Testability,"Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67064/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:39:47: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:40:61: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:43:64: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:44:78: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:46:64: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:47:78: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:49:85: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] . ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-527804099:220,test,test,220,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-527804099,4,['test'],['test']
Testability,Build failed on ROOT-ubuntu16/rtcxxmod.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67424/console).; ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_exectsinclude](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67424/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_exectsinclude/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67424/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-529332052:149,test,tests,149,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-529332052,3,['test'],"['testReport', 'tests']"
Testability,Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/console).; ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149179/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175130897:249,test,tests,249,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175130897,7,['test'],"['testReport', 'tests']"
Testability,"Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-2.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/151341/console).; ### Errors:; - [2022-08-05T22:57:53.738Z] FAILED: tree/dataframe/test/CMakeFiles/dataframe_vary.dir/dataframe_vary.cxx.o ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 1&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TH1D]’ ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:53.995Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D]’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11127#issuecomment-1207076516:302,test,test,302,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207076516,1,['test'],['test']
Testability,Build failed on ROOT-ubuntu18.04/nortcxxmod.; Running on sft-ubuntu-1804-3.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/console).; ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_nested_rvec_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_nested_rvec_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_multipletriggerrun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_multipletriggerrun/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018#issuecomment-1380875995:249,test,tests,249,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380875995,4,['test'],"['testReport', 'tests']"
Testability,Build failed on ROOT-ubuntu2004/python3.; Running on root-ubuntu-2004-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/console).; ### Warnings:; - [2022-07-05T14:28:36.238Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T14:29:07.480Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175163072:569,test,tests,569,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072,4,['test'],"['test', 'testReport', 'tests']"
Testability,"Build failed on ROOT-ubuntu2004/python3.; Running on root-ubuntu-2004-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/console).; ### Warnings:; - [2023-08-31T18:23:40.513Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2023-08-31T18:29:46.289Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_pythonizations](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_pythonizations/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13577#issuecomment-1701582600:833,test,tests,833,https://root.cern,https://github.com/root-project/root/pull/13577#issuecomment-1701582600,2,['test'],"['testReport', 'tests']"
Testability,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34838/console).; ### Errors:; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:158:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:200:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:235:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:270:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:306:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2219#issuecomment-409646068:205,test,test,205,https://root.cern,https://github.com/root-project/root/pull/2219#issuecomment-409646068,5,['test'],['test']
Testability,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34847/console).; ### Errors:; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:158:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:200:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:235:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:270:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ ; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestMatrixArithmetic.h:306:47: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(Matrix_t&)’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2219#issuecomment-409648103:205,test,test,205,https://root.cern,https://github.com/root-project/root/pull/2219#issuecomment-409648103,5,['test'],['test']
Testability,"Build failed on fedora28/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36761/console).; ### Errors:; - /mnt/build/workspace/root-pullrequests-build/root/tmva/tmva/test/DNN/TestOptimization.h:211:23: error: no matching function for call to ‘TMatrixT&lt;double&gt;::TMatrixT(TMVA::DNN::VGeneralLayer&lt;TMVA::DNN::TCpu&lt;float&gt; &gt;::Matrix_t&)’ . ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2219#issuecomment-411905157:205,test,test,205,https://root.cern,https://github.com/root-project/root/pull/2219#issuecomment-411905157,1,['test'],['test']
Testability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67065/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67065/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-527799410:140,test,tests,140,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-527799410,2,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67357/console).; ### Errors:; - 957/1991 Test #866: tutorial-v7-concurrentfill.cxx ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.92 sec ; - 969/1991 Test #878: tutorial-v7-perf.cxx ..............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.06 sec ; - 970/1991 Test #879: tutorial-v7-perfcomp.cxx ..........................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.03 sec ; - 972/1991 Test #880: tutorial-v7-simple.cxx ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.09 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_concurrentfill.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67357/testReport/projectroot/runtutorials/tutorial_v7_concurrentfill_cxx/); - [projectroot.runtutorials.tutorial_v7_perf.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67357/testReport/projectroot/runtutorials/tutorial_v7_perf_cxx/); - [projectroot.runtutorials.tutorial_v7_perfcomp.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67357/testReport/projectroot/runtutorials/tutorial_v7_perfcomp_cxx/); - [projectroot.runtutorials.tutorial_v7_simple.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67357/testReport/projectroot/runtutorials/tutorial_v7_simple_cxx/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67357/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4354#issuecomment-528910405:957,test,tests,957,https://root.cern,https://github.com/root-project/root/pull/4354#issuecomment-528910405,6,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/console).; ### Errors:; - 958/1991 Test #866: tutorial-v7-concurrentfill.cxx ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.01 sec ; - 969/1991 Test #878: tutorial-v7-perf.cxx ..............................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.91 sec ; - 971/1991 Test #879: tutorial-v7-perfcomp.cxx ..........................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.00 sec ; - 972/1991 Test #880: tutorial-v7-simple.cxx ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.01 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_concurrentfill.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_concurrentfill_cxx/); - [projectroot.runtutorials.tutorial_v7_perf.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_perf_cxx/); - [projectroot.runtutorials.tutorial_v7_perfcomp.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_perfcomp_cxx/); - [projectroot.runtutorials.tutorial_v7_simple.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_simple_cxx/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/); - [projectroot.roottest.root.meta.enums.roottest_root_meta_enums_enumsInNamespaces](,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4358#issuecomment-528926777:957,test,tests,957,https://root.cern,https://github.com/root-project/root/pull/4358#issuecomment-528926777,1,['test'],['tests']
Testability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67395/console).; ### Errors:; - 961/1991 Test #866: tutorial-v7-concurrentfill.cxx ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.99 sec ; - 971/1991 Test #878: tutorial-v7-perf.cxx ..............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.73 sec ; - 972/1991 Test #879: tutorial-v7-perfcomp.cxx ..........................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.78 sec ; - 974/1991 Test #880: tutorial-v7-simple.cxx ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.89 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_concurrentfill.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67395/testReport/projectroot/runtutorials/tutorial_v7_concurrentfill_cxx/); - [projectroot.runtutorials.tutorial_v7_perf.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67395/testReport/projectroot/runtutorials/tutorial_v7_perf_cxx/); - [projectroot.runtutorials.tutorial_v7_perfcomp.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67395/testReport/projectroot/runtutorials/tutorial_v7_perfcomp_cxx/); - [projectroot.runtutorials.tutorial_v7_simple.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67395/testReport/projectroot/runtutorials/tutorial_v7_simple_cxx/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67395/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4358#issuecomment-529028304:957,test,tests,957,https://root.cern,https://github.com/root-project/root/pull/4358#issuecomment-529028304,6,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67425/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67425/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-529338522:140,test,tests,140,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-529338522,2,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67527/console).; ### Errors:; - 962/1991 Test #866: tutorial-v7-concurrentfill.cxx ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.84 sec ; - 971/1991 Test #878: tutorial-v7-perf.cxx ..............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.20 sec ; - 973/1991 Test #879: tutorial-v7-perfcomp.cxx ..........................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.28 sec ; - 975/1991 Test #880: tutorial-v7-simple.cxx ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.82 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_concurrentfill.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67527/testReport/projectroot/runtutorials/tutorial_v7_concurrentfill_cxx/); - [projectroot.runtutorials.tutorial_v7_perf.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67527/testReport/projectroot/runtutorials/tutorial_v7_perf_cxx/); - [projectroot.runtutorials.tutorial_v7_perfcomp.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67527/testReport/projectroot/runtutorials/tutorial_v7_perfcomp_cxx/); - [projectroot.runtutorials.tutorial_v7_simple.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67527/testReport/projectroot/runtutorials/tutorial_v7_simple_cxx/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4358#issuecomment-529553525:957,test,tests,957,https://root.cern,https://github.com/root-project/root/pull/4358#issuecomment-529553525,5,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74836/console).; ### Failing tests:; - [projectroot.hist.hist.test.gtest_hist_hist_test_TGraphMultiErrorsTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74836/testReport/projectroot.hist.hist/test/gtest_hist_hist_test_TGraphMultiErrorsTests/); - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treetreeplayertestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74836/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treetreeplayertestUnit/); - [projectroot.roottest.python.stl.roottest_python_stl_stl](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74836/testReport/projectroot.roottest.python/stl/roottest_python_stl_stl/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74836/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.const.roottest_root_io_const_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74836/testReport/projectroot.roottest.root.io/const/roottest_root_io_const_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74836/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execResolveTypedef_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74836/testReport/projectroot.roottest.root.meta/naming/roottest_root_meta_naming_execResolveTypedef_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/74836/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4758#issuecomment-573843824:140,test,tests,140,https://root.cern,https://github.com/root-project/root/pull/4758#issuecomment-573843824,13,['test'],"['test', 'testReport', 'tests']"
Testability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75345/console).; ### Failing tests:; - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treetreeplayertestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75345/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treetreeplayertestUnit/); - [projectroot.roottest.python.stl.roottest_python_stl_stl](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75345/testReport/projectroot.roottest.python/stl/roottest_python_stl_stl/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75345/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.const.roottest_root_io_const_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75345/testReport/projectroot.roottest.root.io/const/roottest_root_io_const_make/); - [projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execResolveTypedef_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75345/testReport/projectroot.roottest.root.meta/naming/roottest_root_meta_naming_execResolveTypedef_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75345/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75345/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.tmva.tmva.test.gtest_tmva_tmva_test_rstandardscaler](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75345/testReport/projectroot.tmva.tmva/test/gtest_tmva_tmva_test_rstandardscaler/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4812#issuecomment-576029522:140,test,tests,140,https://root.cern,https://github.com/root-project/root/pull/4812#issuecomment-576029522,13,['test'],"['test', 'testReport', 'tests']"
Testability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75362/console).; ### Failing tests:; - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treetreeplayertestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75362/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treetreeplayertestUnit/); - [projectroot.roottest.python.stl.roottest_python_stl_stl](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75362/testReport/projectroot.roottest.python/stl/roottest_python_stl_stl/); - [projectroot.roottest.root.io.const.roottest_root_io_const_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75362/testReport/projectroot.roottest.root.io/const/roottest_root_io_const_make/); - [projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execResolveTypedef_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75362/testReport/projectroot.roottest.root.meta/naming/roottest_root_meta_naming_execResolveTypedef_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75362/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/75362/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4812#issuecomment-576245066:140,test,tests,140,https://root.cern,https://github.com/root-project/root/pull/4812#issuecomment-576245066,9,['test'],"['test', 'testReport', 'tests']"
Testability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79011/console).; ### Failing tests:; - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treetreeplayertestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79011/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treetreeplayertestUnit/); - [projectroot.roottest.python.stl.roottest_python_stl_stl](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79011/testReport/projectroot.roottest.python/stl/roottest_python_stl_stl/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79011/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79011/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-587500257:140,test,tests,140,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-587500257,7,['test'],"['test', 'testReport', 'tests']"
Testability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/console).; ### Errors:; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! . ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory_py/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runatlasaod](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runatlasaod/); - [projectroot.roottest.ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-589606883:793,test,tests,793,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-589606883,2,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79453/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79453/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory_py/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79453/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79453/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79453/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-589663474:140,test,tests,140,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-589663474,5,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79541/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_histops.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79541/testReport/projectroot/runtutorials/tutorial_v7_histops_cxx/); - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79541/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory_py/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79541/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79541/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79541/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-589931013:140,test,tests,140,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-589931013,6,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79581/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_histops.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79581/testReport/projectroot/runtutorials/tutorial_v7_histops_cxx/); - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79581/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory_py/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79581/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79581/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79581/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-590256364:140,test,tests,140,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-590256364,6,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80131/console).; ### Failing tests:; - [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treetreeplayertestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80131/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treetreeplayertestUnit/); - [projectroot.roottest.python.stl.roottest_python_stl_stl](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80131/testReport/projectroot.roottest.python/stl/roottest_python_stl_stl/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80131/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/80131/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5082#issuecomment-593825152:140,test,tests,140,https://root.cern,https://github.com/root-project/root/pull/5082#issuecomment-593825152,7,['test'],"['test', 'testReport', 'tests']"
Testability,Build failed on mac1015/cxx17.; Running Allocate node on root-jenkins-01.cern.ch:/var/lib/jenkins/workspace/root-pullrequests-build; Running Allocate node on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5412-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77699/console).; ### Failing tests:; - [projectroot.math.foam.test.gtest_math_foam_test_testTFoam](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77699/testReport/projectroot.math.foam/test/gtest_math_foam_test_testTFoam/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77699/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77699/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77699/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5412#issuecomment-617254612:526,test,tests,526,https://root.cern,https://github.com/root-project/root/pull/5412#issuecomment-617254612,7,['test'],"['test', 'testReport', 'tests']"
Testability,Build failed on mac1015/cxx17.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5219-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77710/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77710/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77710/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77710/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5219#issuecomment-617284554:411,test,tests,411,https://root.cern,https://github.com/root-project/root/pull/5219#issuecomment-617284554,4,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1015/cxx17.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5342-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77744/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77744/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77744/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77744/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77744/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5342#issuecomment-617429874:411,test,tests,411,https://root.cern,https://github.com/root-project/root/pull/5342#issuecomment-617429874,5,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1015/cxx17.; Running on macphsft18.dyndns.cern.ch:/Users/sftnight/build/jenkins/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5423-mac1015-cxx17&date=2020-04-22).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77775/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77775/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77775/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77775/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5423#issuecomment-617452035:411,test,tests,411,https://root.cern,https://github.com/root-project/root/pull/5423#issuecomment-617452035,4,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1015/cxx17.; Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5342-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77703/console).; ### Failing tests:; - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77703/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77703/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77703/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77703/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5342#issuecomment-617307490:403,test,tests,403,https://root.cern,https://github.com/root-project/root/pull/5342#issuecomment-617307490,5,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1015/cxx17.; Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5391-mac1015-cxx17&date=2020-04-22).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77759/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77759/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77759/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77759/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77759/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5391#issuecomment-617457400:403,test,tests,403,https://root.cern,https://github.com/root-project/root/pull/5391#issuecomment-617457400,5,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1015/cxx17.; Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5398-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77751/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77751/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77751/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77751/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5398#issuecomment-617431954:403,test,tests,403,https://root.cern,https://github.com/root-project/root/pull/5398#issuecomment-617431954,4,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1015/cxx17.; Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5418-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77718/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77718/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77718/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77718/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5418#issuecomment-617355629:403,test,tests,403,https://root.cern,https://github.com/root-project/root/pull/5418#issuecomment-617355629,4,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1015/cxx17.; Running on root-jenkins-01.cern.ch:/var/lib/jenkins/workspace/root-pullrequests-build; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5391-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77638/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77638/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77638/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77638/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77638/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5391#issuecomment-617175571:397,test,tests,397,https://root.cern,https://github.com/root-project/root/pull/5391#issuecomment-617175571,5,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1015/cxx17.; Running on root-jenkins-01.cern.ch:/var/lib/jenkins/workspace/root-pullrequests-build; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5417-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77647/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77647/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77647/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77647/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5417#issuecomment-617185813:397,test,tests,397,https://root.cern,https://github.com/root-project/root/pull/5417#issuecomment-617185813,4,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5030-mac1015-cxx17&date=2020-04-06).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75331/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75331/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75331/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75331/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-609768242:310,test,tests,310,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-609768242,4,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5030-mac1015-cxx17&date=2020-04-06).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75332/console).; ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory_py](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75332/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory_py/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75332/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75332/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75332/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75332/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-609794009:310,test,tests,310,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-609794009,6,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5030-mac1015-cxx17&date=2020-04-07).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75611/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75611/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75611/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/75611/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-610418457:310,test,tests,310,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-610418457,4,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5030-mac1015-cxx17&date=2020-04-17).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/76835/console).; ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/76835/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/76835/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/76835/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-615170450:310,test,tests,310,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-615170450,4,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5342-mac1015-cxx17&date=2020-04-20).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77447/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77447/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77447/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77447/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5342#issuecomment-616817622:310,test,tests,310,https://root.cern,https://github.com/root-project/root/pull/5342#issuecomment-616817622,4,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5391-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77480/console).; ### Failing tests:; - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77480/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77480/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77480/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77480/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5391#issuecomment-616855956:310,test,tests,310,https://root.cern,https://github.com/root-project/root/pull/5391#issuecomment-616855956,5,['test'],"['testReport', 'tests']"
Testability,Build failed on mac1015/cxx17.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5395-mac1015-cxx17&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77512/console).; ### Failing tests:; - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77512/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.sync.roottest_root_treeformula_sync_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77512/testReport/projectroot.roottest.root.treeformula/sync/roottest_root_treeformula_sync_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77512/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5395#issuecomment-616956457:310,test,tests,310,https://root.cern,https://github.com/root-project/root/pull/5395#issuecomment-616956457,4,['test'],"['testReport', 'tests']"
Testability,Build failed on ubuntu16/native.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16312/console).; ### Failing tests:; - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16312/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.simple.roottest_root_io_simple_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16312/testReport/projectroot.roottest.root.io/simple/roottest_root_io_simple_make/); - [projectroot.roottest.root.io.set.roottest_root_io_set_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16312/testReport/projectroot.roottest.root.io/set/roottest_root_io_set_make/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseRead_11](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16312/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseRead_11/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16312/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseRead_12](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16312/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseRead_12/); - [projectroot.roottest.root.io.newdelete.roottest_root_io_newdelete_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16312/testReport/projectroot.roottest.root.io/newdelete/roottest_root_io_newdelete_make/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_arrTemplMemberWrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/16312/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_arrTemplMemberWrite/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1591#issuecomment-363262262:142,test,tests,142,https://root.cern,https://github.com/root-project/root/pull/1591#issuecomment-363262262,9,['test'],"['testReport', 'tests']"
Testability,"Build failed on windows10/cxx14.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126788/console).; ### Warnings:; - [2021-10-05T07:51:00.677Z] ghprbPullLongDescription=Should fix the following compilation warnings with `gcc 11` and the current `builtin_tbb`:\r\n```\r\nIn file included from ginclude/tbb/tbb.h:48,\r\n from /home/vpadulan/Programs/rootproject/root/core/imt/src/TThreadExecutor.cxx:10:\r\nginclude/tbb/concurrent_hash_map.h: In constructor 'tbb::interface5::internal::hash_map_base::hash_map_base()':\r\nginclude/tbb/concurrent_hash_map.h:131:24: warning: 'void* memset(void*, int, size_t)' clearing an object of type 'struct tbb::interface5::internal::hash_map_base::bucket' with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess]\r\n 131 | std::memset(my_embedded_segment, 0, sizeof(my_embedded_segment));\r\n | ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nginclude/tbb/concurrent_hash_map.h:93:16: note: 'struct tbb::interface5::internal::hash_map_base::bucket' declared here\r\n 93 | struct bucket : tbb::internal::no_copy {\r\n | ^~~~~~\r\n```\r\n . ### Failing tests:; - [projectroot.roottest.python.function.roottest_python_function_function](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126788/testReport/projectroot.roottest.python/function/roottest_python_function_function/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9067#issuecomment-934265717:1242,test,tests,1242,https://root.cern,https://github.com/root-project/root/pull/9067#issuecomment-934265717,2,['test'],"['testReport', 'tests']"
Testability,Build failed on windows10/cxx14.; Running on null:C:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/console).; ### Failing tests:; - [projectroot.roottest.root.io.stdpair.roottest_root_io_stdpair_collection_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root.io/stdpair/roottest_root_io_stdpair_collection_build/); - [projectroot.roottest.root.io.stdpair.roottest_root_io_stdpair_pair_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root.io/stdpair/roottest_root_io_stdpair_pair_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tprofile_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tprofile_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_ttree_read_imt_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_ttree_read_imt_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_th1f_fill_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_th1f_fill_build/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_libInitOrderDups_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_libInitOrde,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12415#issuecomment-1456017123:218,test,tests,218,https://root.cern,https://github.com/root-project/root/pull/12415#issuecomment-1456017123,4,['test'],"['testReport', 'tests']"
Testability,"Can you add this to a super simple test, just to make sure we compile this case?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9818#issuecomment-1031394700:35,test,test,35,https://root.cern,https://github.com/root-project/root/pull/9818#issuecomment-1031394700,1,['test'],['test']
Testability,Can you just add the two commits fixing the test? I have #15236 adding already xgboost and scikit-learn,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15237#issuecomment-2056871254:44,test,test,44,https://root.cern,https://github.com/root-project/root/pull/15237#issuecomment-2056871254,1,['test'],['test']
Testability,"Can't we just move the tests needing this infrastructure to roottest which is serving is pretty well for comparing to golden output, and which makes it much simpler to add such tests? That way we would not even need this ""common"" library for root.git's tests.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5297#issuecomment-615061213:23,test,tests,23,https://root.cern,https://github.com/root-project/root/pull/5297#issuecomment-615061213,3,['test'],['tests']
Testability,"Correct - and I wanted to start small (`vector`, `string`) and see what roottest has to say about that. I did expect some test failures?! That would guide me what else we should expose. Which makes me wonder whether this works at all - nope, it doesn't. Let me fix that...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11027#issuecomment-1192710542:122,test,test,122,https://root.cern,https://github.com/root-project/root/pull/11027#issuecomment-1192710542,1,['test'],['test']
Testability,"Correct, RDF was not used at all -- flamegraphs show the full call stacks. These are Jakob's I/O benchmarks from ACAT 2017, which showed TTreeReader's excessive overhead for the first time (as far as I know). There is a version that uses RDF but I did not run it, this is TTree vs TTreeReader (pre- and post-patch). It would be great if you could confirm that there is no sensible difference in performance with the patch, at least for this benchmark. A simplified version of Jakob's setup with (hopefully clear enough) instructions in the README can be found in my rootonly branch that I linked above.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3216#issuecomment-456478794:97,benchmark,benchmarks,97,https://root.cern,https://github.com/root-project/root/pull/3216#issuecomment-456478794,2,['benchmark'],"['benchmark', 'benchmarks']"
Testability,"Dear @couet ,; > so I guess that's fine.. . OK. I've put [Do not merge] to the title, as I don't see if there is a label for such requests. . >clearly faulty code in a PR. My fault. I've replaced that with suggestion from @pcanal. >This sounds like an ""obvious thing"" ...padsave is equal to gPad on line 780... did I missed soothing ?. Maybe that is because of cast. I was trying to pay with it, but w/o much success. The IsBatch() was logical and did the job for that separate case... Will have a look soon. Best regards,. Andrii. Edit: but for the proper cast one should replace C-like cast with something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6469#issuecomment-704330700:436,log,logical,436,https://root.cern,https://github.com/root-project/root/pull/6469#issuecomment-704330700,1,['log'],['logical']
Testability,"Dear @etejedor ; I have no local built of ROOT - it is too heavy for me - I am always rely on LCG releases or nightlies. ; The problem appeared not earlier than a week ago. There was a few days break in tests of my project, ; and restarting tests after this pause, couple of days ago, I've observed this behaviour.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8152#issuecomment-839744359:203,test,tests,203,https://root.cern,https://github.com/root-project/root/issues/8152#issuecomment-839744359,2,['test'],['tests']
Testability,"Dear @guitargeek . ... and I have one more problem with another test no my project. It also hangs.. ; Unforunately it i not so simple to isolate,(that's why I am not reporting this problem; since I have no simple reproducer) but since it also involves C++ virtual functions ; reimplemented in python, migth be the unnderlying reason is the same..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15085#issuecomment-2036734953:64,test,test,64,https://root.cern,https://github.com/root-project/root/issues/15085#issuecomment-2036734953,1,['test'],['test']
Testability,"Dear Denys,. Thanks for the logs and for the information. So if you cannot use c++17, why not simply use c++14 and disable root7?. Cheers, Bertrand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12492#issuecomment-1473275035:28,log,logs,28,https://root.cern,https://github.com/root-project/root/issues/12492#issuecomment-1473275035,1,['log'],['logs']
Testability,"Dear Jonas @guitargeek . my PDF is just a simple 3D functon in each dimenstion is is just a Gaussian + linear polynomial. In total one has 8 components: SSS + SSB + SBS + BSS + SBB + BSB + BBS + BBB . Creation of the function is done via my ostap project. https://github.com/OstapHEP/ostap ; You can see the actual (failing) test code in ; https://github.com/OstapHEP/ostap/blob/master/ostap/fitting/tests/test_fitting_components_3D.py; It does not rely any external data - all data is produced internally ; It is a bit more complicated that is actually needed, since the initial purpose of this particular test fiel was to see the change of the fit resutls with addion ""additional"" components mixed to the the base line model. ; But it relies on ""external"" project https://github.com/OstapHEP/ostap . cheers, Vanya. P.S. I'll provide the stack with debug build tomorrow",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474#issuecomment-864243565:325,test,test,325,https://root.cern,https://github.com/root-project/root/issues/8474#issuecomment-864243565,3,['test'],"['test', 'tests']"
Testability,"Dear Jonas. A huge thank you for your investigation on this, and kind explanation. Almost everything on what you explained is clear to me. But let me give you a tiny point where I don't completely understand. **About the <55 instead of <=55. You are right : I made a mistake there in my minimum example. But the principle of the comment stay. I made the fix in order to ""synchronize"" with the numerical values that you gave in your kind answer (I deduced that you made the fix). -->ok for that. **Case option_normalize_hist=1. Your comment : ""n_times_pdf_continuum->getVal()*bin_width=0.0181818 : here n_times_pdf_continuum is a RooAddPdf, which automatically normalizes itself. You create it from the continuum with 55 bins and bin width one, so I'd expect 1/55 which is indeed 0.0181818""; -->I disagree : my pdf is not just ""pdf_continuum"" : I put *n* times pdf_continuum where n is here the number of bkg : n=2200.; So I would expect that n times pdf should be 2200 * (1/55) = 40. **n_times_pdf_continuum is a RooAddPdf (with one element in the addition) with one parameter of yield, and one parameter of shape, so it is a extended pdf : n_bkg * times a pdf.**. **Case option_normalize_hist=0.; From your log, you changed a bit my code since in my code, I was putting, for the case not normalize :; if (option_normalize_hist); value_pdf=nb_events*pdf->getVal()*bin_width;; else; value_pdf=pdf->getVal()*bin_width;. But I understood your point (and it is clear)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7991#issuecomment-826815525:1208,log,log,1208,https://root.cern,https://github.com/root-project/root/issues/7991#issuecomment-826815525,1,['log'],['log']
Testability,Directory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2496#issuecomment-414946221:3507,test,testReport,3507,https://root.cern,https://github.com/root-project/root/pull/2496#issuecomment-414946221,1,['test'],['testReport']
Testability,Errors above were due to some options unrecognized by `root` were actually necessary for other callables in the test. Last commit moves the check to `TRint` and also now checks if there are multiple unrecognized options issued by the user:. ```; $ root --random -z --nonexistingoption; root: unrecognized option '--random'; root: unrecognized option '-z'; root: unrecognized option '--nonexistingoption'; Try 'root --help' for more information.; ```. Also changed to using `std::cerr` for simplicity. Before merging we can discuss the correct output stream,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8868#issuecomment-902501605:112,test,test,112,https://root.cern,https://github.com/root-project/root/pull/8868#issuecomment-902501605,1,['test'],['test']
Testability,Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_more](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_more/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_trivial](https://epsft-jenk,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:3620,test,test,3620,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['test']
Testability,"First simple tests:. ### XRD_PARALLELEVTLOOP=4; In theory this should use 4 threads, but there are 10 instead; ```; $ XRD_PARALLELEVTLOOP=4 xrdcp root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root .; [784MB/2.09GB][ 36%][==================> ][11.04MB/s]; ```; ```; $ ps aux | grep xrdcp; vpadulan 2875 14.5 0.4 698364 77920 pts/0 Sl+ 12:15 0:03 xrdcp root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root .; $ ps hH p 2875 | wc -l; 10; ```; ### XRD_PARALLELEVTLOOP=1; This should use 1 thread, I see 7; ```; $ XRD_PARALLELEVTLOOP=1 xrdcp root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root .; [184MB/2.09GB][ 8%][====> ][10.82MB/s]; ```. ```; $ ps aux | grep xrdcp; vpadulan 3000 20.0 0.2 608092 46488 pts/0 Sl+ 12:18 0:00 xrdcp root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root .; $ ps hH p 3000 | wc -l; 7; ```. ### XRD_WORKERTHREADS=1 XRD_PARALLELEVTLOOP=1; I have found another environment variable in the xrootd docs https://xrootd.slac.stanford.edu/doc/xrdcl-docs/xrdcldocs.pdf described as ""Number of threads processing user callbacks."" with default value 3 . Setting both variables to 1 leads to 5 threads. ```; $ XRD_WORKERTHREADS=1 XRD_PARALLELEVTLOOP=1 xrdcp root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root .; [192MB/2.09GB][ 8%][====> ][10.67MB/s]; ```. ```; $ ps aux | grep xrdcp; vpadulan 3036 17.3 0.2 460628 48240 pts/0 Sl+ 12:21 0:00 xrdcp root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root .; $ ps hH p 3036 | wc -l; 5; ```. So for now:; 1. Setting XRD_PARALLELEVTLOOP=1 makes the xrdcp process use 7 thread, of which 3 are explicable by the default value of XRD_WORKERTHREADS, 1 is the event ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7709#issuecomment-847752725:13,test,tests,13,https://root.cern,https://github.com/root-project/root/issues/7709#issuecomment-847752725,1,['test'],['tests']
Testability,"Fixed the Travis build, moved build script, and added the cmake build-and-test test to the tests (Turns out, CMake's own source has lots of examples of that since that's what a test of CMake itself is generally doing). Fixed a bug in the calculation of the standalone directory, and simplified the CMake code a bit. `make package_source` now produces an error if in used in the wrong configuration. I've tried to avoid making any changes to the parts of Travis that are not affected, but there's a bug in the yaml: making a node anchor is also a normal definition; so if no packages are added, they get the default (which includes a non-existent timeout package). I'll see if I can make a separate PR with some improvements for Travis clarity/speed not related to Minuit2. This PR should be ready for review.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-375310840:74,test,test,74,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-375310840,4,['test'],"['test', 'tests']"
Testability,Following Philippe's suggestion for the test (thanks!) it's clear that the current logic is not enough.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8934#issuecomment-908960572:40,test,test,40,https://root.cern,https://github.com/root-project/root/pull/8934#issuecomment-908960572,2,"['log', 'test']","['logic', 'test']"
Testability,"For completeness dev3/Fri vs dev3/Thu. ```; ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Fri/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_friday.txt ; ...; real	0m45.976s; user	0m36.305s; sys	0m5.073s. ( lb-set-platform x86_64-centos7-gcc12-opt ; source /cvmfs/sft.cern.ch/lcg/views/dev3/Thu/${CMTCONFIG}/setup.sh ; echo $ROOTSYS ; time python -m profile ./tst100.py | tee root627_thursday.txt ); ... real	0m31.001s; user	0m12.790s; sys	0m4.830s. ```. this time no factor of 2, but 1.5 . [log-files](https://gist.github.com/VanyaBelyaev/0e55d321d554af63b56b8f881804e7eb). but much more important for me - that [GitHub Action](https://github.com/OstapHEP/ostap/actions) tests for my real project clearly show a jump in bad direction for CPU performance - from something a bit smaller than 2 hours to something exceeding 6 hours with fails due to timeover",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11927#issuecomment-1361014198:574,log,log-files,574,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1361014198,2,"['log', 'test']","['log-files', 'tests']"
Testability,From the test results I learned that we already have a mechanism in ROOT to mark Python non-optional test dependencies:; https://github.com/root-project/root/commit/2917c6e7153c426507227d9fdba1937fca7535aa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15306#issuecomment-2069022427:9,test,test,9,https://root.cern,https://github.com/root-project/root/pull/15306#issuecomment-2069022427,2,['test'],['test']
Testability,Func_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root/multicore/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411436247:3559,test,testReport,3559,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411436247,1,['test'],['testReport']
Testability,Function::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.core.imt.test.gtest_core_imt_test_coreimttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_core_imt_test_coreimttestUnit/); - [projectroot.core.imt.test.gtest_core_imt_test_testTFuture](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_core_imt_test_testTFuture/); - [projectroot.io.io.test.gtest_io_io_test_TROMemFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.io.io/test/gtest_io_io_test_TROMemFile/); - [projectroot.math.genetic.test.genetic_testGAMinimizer](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.math.genetic/test/genetic_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411701514:3513,test,test,3513,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411701514,1,['test'],['test']
Testability,Function::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.dataframe.roottest_roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:3022,test,test,3022,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['test']
Testability,GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/); - [projectroot.core.base.test.gtest_core_base_test_CoreBaseTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.base/test/gtest_core_base_test_CoreBaseTests/); - [projectroot.core.cont.test.gtest_core_cont_test_coreconttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.cont/test/gtest_core_cont_test_coreconttestUnit/); - [projectroot.core.cont.test.gtest_core_cont_test_testTypedIteration](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:3521,test,test,3521,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,1,['test'],['test']
Testability,GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:3297,test,test,3297,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['test']
Testability,"Ha, that was again a nice rabbit hole. Here's a summary of what I found:; 1. We'll never run into problems with GCC's `libstdc++` since [version 4.5](https://gcc.gnu.org/gcc-4.5/changes.html): ""The default behavior for comparing typeinfo names has changed, so in `<typeinfo>`, `__GXX_MERGED_TYPEINFO_NAMES` now defaults to zero"", which means that `operator==` performs the string comparison in all cases.; 2. `libc++` by now has three different implementations: https://github.com/llvm/llvm-project/blob/066b8f2fc6d584635a017a0a15494ce4460744e3/libcxx/include/typeinfo#L120-L169 For all platforms except Windows and Apple M1, the library ""assume[s] the Itanium C++ ABI and use[s] the Unique implementation"". This may be fine for compiled programs where the linker can unify the `type_info`s, but not if the JIT emits a new copy. I have yet to find an example where this can go wrong, it would be great to have a test that fails if somebody attempts to ""simplify"" things. For this particular method however, the Itanium ABI mandates that the `std::type_info` objects of the checked types live in the run-time support library: https://itanium-cxx-abi.github.io/cxx-abi/abi.html#rtti-emission With exactly one object for those types, even `operator==` cannot mess up.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7776#issuecomment-823939722:912,test,test,912,https://root.cern,https://github.com/root-project/root/pull/7776#issuecomment-823939722,1,['test'],['test']
Testability,Here are the failing tests (without the `-fno-threadsafe-statics` flag):; ```; 7 - gtest-core-meta-test-testHashRecursiveRemove (Failed); 104 - gtest-tree-treeplayer-test-treetreeplayertestUnit (Failed); 105 - gtest-tree-treeplayer-test-dataframe-friends (Failed); 106 - gtest-tree-treeplayer-test-dataframe-alias (Failed); 107 - gtest-tree-treeplayer-test-dataframe-cache (Failed); 108 - gtest-tree-treeplayer-test-dataframe-callbacks (Failed); 110 - gtest-tree-treeplayer-test-dataframe-interface (Failed); 112 - gtest-tree-treeplayer-test-dataframe-regression (Failed); 113 - gtest-tree-treeplayer-test-dataframe-simple (Failed); 114 - gtest-tree-treeplayer-test-dataframe-snapshot (Failed); 116 - gtest-tree-treeplayer-test-datasource-more (Failed); 125 - tutorial-dataframe-tdf001_introduction (Failed); 126 - tutorial-dataframe-tdf002_dataModel (Failed); 127 - tutorial-dataframe-tdf003_profiles (Failed); 128 - tutorial-dataframe-tdf004_cutFlowReport (Failed); 129 - tutorial-dataframe-tdf005_fillAnyObject (Failed); 130 - tutorial-dataframe-tdf006_ranges (Failed); 131 - tutorial-dataframe-tdf007_snapshot (Failed); 132 - tutorial-dataframe-tdf008_createDataSetFromScratch (Failed); 133 - tutorial-dataframe-tdf009_FromScratchVSTTree (Failed); 134 - tutorial-dataframe-tdf010_trivialDataSource (Failed); 135 - tutorial-dataframe-tdf011_ROOTDataSource (Failed); 136 - tutorial-dataframe-tdf012_DefinesAndFiltersAsStrings (Failed); ```; With errors like:; ```; 131: Processing C:/Users/bellenot/git/master/tutorials/dataframe/tdf003_profiles.C...; 131: IncrementalExecutor::executeFunction: symbol '_Init_thread_header' unresolved while linking function '??__Eid@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@YAXXZcling_module_10_'!; 131: You are probably missing the definition of _Init_thread_header; 131: Maybe you need to load the corresponding shared library?; 131: IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while li,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1607#issuecomment-364363584:21,test,tests,21,https://root.cern,https://github.com/root-project/root/pull/1607#issuecomment-364363584,12,['test'],"['test-dataframe-alias', 'test-dataframe-cache', 'test-dataframe-callbacks', 'test-dataframe-friends', 'test-dataframe-interface', 'test-dataframe-regression', 'test-dataframe-simple', 'test-dataframe-snapshot', 'test-datasource-more', 'test-testHashRecursiveRemove', 'test-treetreeplayertestUnit', 'tests']"
Testability,"Here is a relevant [issue](https://gitlab.kitware.com/cmake/cmake/-/issues/17735) where this is discussed more in depth. One of the [comments](https://gitlab.kitware.com/cmake/cmake/-/issues/17735#note_487572) in this issue explains the rationale behind overriding `find_package` quite well. If there is a better solution that can work the way the current solution does (i.e. works also for LLVM without having to change its calls to `find_package(ZLIB)`, for example), we can implement it. However, so far I have not found a another way to do it. Maybe now that the required version of CMake is newer than 3.11, we may be able to improve things by using the [FetchContent](https://cmake.org/cmake/help/latest/module/FetchContent.html) module. It may also be possible to use [CMAKE_DISABLE_FIND_\<PackageName\>](https://cmake.org/cmake/help/v3.10/variable/CMAKE_DISABLE_FIND_PACKAGE_PackageName.html) to skip checking for packages if that doesn't force packages to be considered not found when `<PackageName_FOUND>` is then also set by hand. The reality, though, is that CMake still kinda sucks for managing optionally bundled dependencies like ROOT wants to support. As for the undocumented nature of the feature, it's sad but, like the [CDash test measurements](https://cmake.org/cmake/help/latest/command/ctest_test.html?#additional-test-measurements) that were undocumented for a long time, if you offer it, people will try to use it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8633#issuecomment-898406007:1245,test,test,1245,https://root.cern,https://github.com/root-project/root/issues/8633#issuecomment-898406007,2,['test'],"['test', 'test-measurements']"
Testability,"Here's simpler reproducer for https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154832/testReport/projectroot/runtutorials/tutorial_multicore_mp101_fillNtuples/ ; ```; ❯ cat Demo.C; void Demo() {; auto X = ROOT::TSeqI(42);; } ; ```. The error message is:; ```. Processing Demo.C...; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:67:10: error: instantiation of 'ROOT::TSeq<int>' is different in different modules; class TSeq {; ^; In module 'std' imported from input_line_1:1:; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1910:13: error: 'std::__make_signed_selector<int, true, false>::__type' from module 'std.type_traits' is not present in definition of 'std::__make_signed_selector<int, true, false>' provided earlier; using __type; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1901:11: note: definition has no member '__type'; class __make_signed_selector;; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: error: 'std::make_signed<int>' has different definitions in different modules; defined here; struct make_signed; ^; /usr/bin/../lib/gcc/x86_64-linux-gnu/11/../../../../include/c++/11/type_traits:1966:12: note: definition in module 'std.type_traits' is here; In module 'Core':; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int)'; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/Demo.C:2:12: note: in instantiation of template class 'ROOT::TSeq<int>' requested here; auto X = ROOT::TSeqI(42);; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:79:7: note: previous declaration is here; TSeq(T theEnd): fBegin(), fEnd(theEnd), fStep(1) {; ^; /home/jun/dev/root/Debug/include/ROOT/TSeq.hxx:82:7: error: multiple overloads of 'TSeq' instantiate to the same signature 'void (int, int, int)'; TSeq(T theBegin, T theEnd, T th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253760320:110,test,testReport,110,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320,1,['test'],['testReport']
Testability,"Here's the test program for which I'm doing the massif profile:. ```cpp; #include ""ROOT/RDataFrame.hxx""; #include ""ROOT/RVec.hxx""; #include ""ROOT/RDF/RInterface.hxx""; #include ""TH1D.h""; #include ""TCanvas.h"". #include <string>; #include <vector>; #include <iostream>. int main() {; using namespace std;; using namespace ROOT;. RDataFrame df(""Events"", ""DYJetsToLL.root"");. vector<string> cols;; for (auto& col: df.GetColumnNames()) {; const auto type = df.GetColumnType(col);; if (type.find(""RVec<Float_t>"") != string::npos) {; cols.emplace_back(col);; cout << ""Select column "" << col << "" with type "" << type << endl;; }; }. vector<RDF::RResultPtr<TH1D>> hists;; for (auto& col: cols) {; hists.emplace_back(df.Histo1D<RVec<float>>(col));; }. for (auto i = 0u; i < hists.size(); i++) {; auto c = new TCanvas(cols[i].c_str(), cols[i].c_str(), 600, 600);; hists[i]->Draw();; c->SaveAs((cols[i] + "".png"").c_str());; delete c;; }; }; ```. You can find the profile attached, but it's not very clear to me what we can learn from it. We have 3GB from malloc/new, but it's not clear where it's coming from.; [ms_print_cpp.log](https://github.com/root-project/root/files/5437832/ms_print_cpp.log)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6676#issuecomment-716413931:11,test,test,11,https://root.cern,https://github.com/root-project/root/issues/6676#issuecomment-716413931,3,"['log', 'test']","['log', 'test']"
Testability,"Hey Lorenzo!. Certainly, I will start Right now. This PR is considerably more complex and currently includes copy pasted parts from the merged PRs (I had to do it for temporary tests before we had merged them as the convolutional layer depends on them). As a result a simple rebase and conflict fix would be simple, but would also leave a very messy history. What I can do instead is start a new branch from the updated master and carefully choose the new changes with better messages. I should be able to do that within 1-2 days and it will yield a clean history. Unless w are in a big hurry I plan to go with th me second approach but please let me know if you prefer the first one!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2216#issuecomment-402624497:177,test,tests,177,https://root.cern,https://github.com/root-project/root/pull/2216#issuecomment-402624497,1,['test'],['tests']
Testability,Hi - this is breaking some more or less urgent ATLAS analyses - if there is any guidance as to what we could test that'd be much appreciated. Thanks!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8387#issuecomment-861315969:109,test,test,109,https://root.cern,https://github.com/root-project/root/issues/8387#issuecomment-861315969,1,['test'],['test']
Testability,"Hi @Harshalzzzzzzz ,; ROOT has a high-level data analysis interface called [RDataFrame](https://root.cern/doc/master/classROOT_1_1RDataFrame.html), you can take a look at the docs and try reading and running some of the tutorials [here](https://root.cern/doc/master/group__tutorial__dataframe.html). `RDataFrame` returns results wrapped in the [RResultPtr](https://root.cern/doc/master/classROOT_1_1RDF_1_1RResultPtr.html) type, through which we implement lazy execution (data processing is triggered when a user accesses the contents of a `RResultPtr`, _not_ when they request the result). RResultPtr has interface and semantics similar to [std::shared_ptr](https://en.cppreference.com/w/cpp/memory/shared_ptr), but currently it's missing a way to release ownership of its contents. `RResultPtr<T>::Release` is a simple method that would mimic the semantics of `std::shared_ptr::release`: it must return a `T*` and empty the `RResultPtr`. What needs to be done concretely:. - [x] add the `RResultPtr::Release` method in RResultPtr.hxx. It should be implemented in terms of `fObjPtr.release()` and it should also set `fActionPtr` and `fLoopManager` to null; - [x] add tests for the feature in `tree/dataframe/test/dataframe_resptr.cxx`, in particular making sure that `Release` and the ResultPtr's move-constructor have consistent behavior; - [x] add logic to the current method `RResultPtr::GetValue` to throw an exception if it's called on a null `RResultPtr`. Thank you in advance for any contribution, and feel free to ask more questions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7047#issuecomment-771507725:1168,test,tests,1168,https://root.cern,https://github.com/root-project/root/issues/7047#issuecomment-771507725,3,"['log', 'test']","['logic', 'test', 'tests']"
Testability,"Hi @VanyaBelyaev, thanks for posting about this!. As explained in [this PR](https://github.com/root-project/root/pull/11909/files) and later also dicussed in [this forum post](https://root-forum.cern.ch/t/retreiving-the-calculation-strategy-of-a-roonll/55715/2), saving test statistics objects to ROOT files like `RooNLLVar` is now prohibited since ROOT 6.28. It only technically seemed to work without error, but in fact the read-back RooNLLVars are corrupted and give wrong results when you read them back even for simple Gaussian cases, as I showed in the description of the linked PR. This and other reasons lead us to the decision to disallow the IO of `RooNLLVar` and other test statistics classes. From your warnings and error messages, it seems like you're trying to do IO of the RooNLLVar. Is there a way you can avoid this in your workflow? As I said it's not allowed anymore and in older ROOT versions it was not reliable. What people usually do is to save the pdf and the datasets in a RooWorkspace, and maybe a `ModelConfig` to simplify the NLL creation when reading back the data and pdf. Is that not an option for your?. Certainly I was not expecting that the removal of this accidental and buggy IO feature would cause some friction with some users, so I'm happy to help you finding an alternative and better solution!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13280#issuecomment-1644053557:270,test,test,270,https://root.cern,https://github.com/root-project/root/issues/13280#issuecomment-1644053557,2,['test'],['test']
Testability,"Hi @acampove, thanks for reporting this issue!. I have opened a to avoid the overly-verbose printout in the unbinned case:; https://github.com/root-project/root/pull/14309. However, I would refrain from implementing a progress bar, because this makes the output more difficult to digest when reading log files from e.g. grid jobs. So while I agree it would be nice for interactive use, it would do more harm that good in batch jobs. One could maybe hack something that detects the context in which RooFit is used, but these hacks are usually fragile and I would prefer not to do it. I'll close this issue after merging the PR with the log in the unbinned case. If you *really* want this progress bar, feel free to open a new issue about this, but I'm afraid I can't justify giving that one a high priority. Thanks for your understanding!; Jonas",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9489#issuecomment-1881439092:300,log,log,300,https://root.cern,https://github.com/root-project/root/issues/9489#issuecomment-1881439092,2,['log'],['log']
Testability,"Hi @bellenot , first of all a couple clarifications:. * as per my EDIT2 above, the test is also broken on (at least some) linux platforms (for example, my own machine), but it doesn't run in the nightlies, weirdly.; * your explanation is about why `maxTasksPerFile` is zero. I was asking about `clustersInThisFileSize`, which does not depend on `GetImplicitMTPoolSize()`, but also turns out to be zero. As per my EDIT3 above, it's now clear that `clustersInThisFileSize` is zero because the input file for this test has zero clusters. That's a bit surprising, hence my original question and my request for a comment in the code of the test in EDIT3. Ok cool so #4947 and this PR are meant to fix this same issue. Which solution we want to adopt depends on whether `TTreeProcessorMT` usage, by design and (currently missing) docs, should always be preceeded by a call to `EnableImplicitMT` or not. We are discussing that in the PPP channel on mattermost, as soon as we have an answer that we agree upon, we'll also know what fix to adopt for this failing test. To be clarified why the test does not run in the nightlies for certain platforms (EDIT: other than windows), but that's a different topic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4953#issuecomment-583762217:83,test,test,83,https://root.cern,https://github.com/root-project/root/pull/4953#issuecomment-583762217,5,['test'],['test']
Testability,"Hi @breitwieserCern ,; the functionality now looks good. Could you add a test in roottest about the new functionality?; This one should:; - Generate a dictionary with a selection xml; - Have a macro that loads it and checks that the custom streamer works fine; In order to achieve that, you can have a look to https://github.com/root-project/roottest/blob/master/root/meta/genreflex/CMakeLists.txt . Here you find the instructions about how to run tests: https://root.cern.ch/run-tests. In your case the CMake section could be something like:; ```. ROOTTEST_GENERATE_REFLEX_DICTIONARY(customStreamer customStreamer.h SELECTION customStreamer_selection.xml). ROOTTEST_ADD_TEST(customStreamer; MACRO customStreamer.C; OUTREF customStreamer.ref; DEPENDS ${GENERATE_REFLEX_TEST}); ```; This will generate the dictionary from *customStreamer.h* and *customStreamer_selection.xml*. The macro *customStreamer.C* will be then executed and you can check there that your streamer does what is supposed to do (print something? your call :) ). The output will be compared to customStreamer.ref . You can start from a simplified version of the actual classes you are working with.; Do not hesitate to contact me privately if you need more info!. Cheers,; D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/864#issuecomment-325595999:73,test,test,73,https://root.cern,https://github.com/root-project/root/pull/864#issuecomment-325595999,3,['test'],"['test', 'tests']"
Testability,"Hi @cburgard and @gartrog, thanks a lot for these developments! I have only a few comments inline. Besides that, please do a few things before we can merge (I would like to merge this as soon as possible, tomorrow or on Friday. If you have more you can always do a followup PR):. 1. You moved the `JSONInterface` to a public header now, so it's not a `RooFit::Detail` anymore (I understand now that the user needs the interface to implement custom importers/exporters). But still, it's an interface under heavy development and we need to make that clear to the user that they can't rely too much on the stability of this interface. Therefore, can you please change the namespace to `RooFit::Experimental`?; 2. Please give the PR a meaningful title, and the first commit a good commit message, optimally not only a title but also a body where you explain what you did. When merging, I will squash the commits and only the first commit message will be taken, so please consider that.; 3. Make sure that all C++ sources are formatted with `clang-format` and the python sources with `black --line-length=120`. Let me know when this is done, then we can ask the CI to test once again and then merge.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9482#issuecomment-1016939443:1163,test,test,1163,https://root.cern,https://github.com/root-project/root/pull/9482#issuecomment-1016939443,1,['test'],['test']
Testability,"Hi @couet ,. I've tested it and it fixes things for me.; I wrote hopefully because I cannot write a simple reproducer. ; Please read it as ""fixes for my case and hopefully for all similar cases"". Concerning the explanation, it looks like two threads are simultaneously in the scope where the pointer is not zero. Then one c deletes the pointer and the other one derefences null pointer. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6511#issuecomment-701382727:18,test,tested,18,https://root.cern,https://github.com/root-project/root/pull/6511#issuecomment-701382727,1,['test'],['tested']
Testability,"Hi @couet ,; the reproducer/test is. ```; //; // main.cxx. #include <iostream>; #include <stdlib.h>. #include <TColor.h>; #include <TRandom.h>; #include <fenv.h>. #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, excepts) != 0 ? -1 : flags; /* set new flags */. }. inline int fedisableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(&flags, ~excepts) != 0 ? -1 : flags; /* set new flags */; }. #endif; #endif. int main(int argc, char **argv) {; feenableexcept(FE_DIVBYZERO | FE_INVALID | FE_OVERFLOW);; TRandom* R1= new TRandom();; TRandom* R2= new TRandom();; TRandom* R3= ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6684#issuecomment-713684777:28,test,test,28,https://root.cern,https://github.com/root-project/root/pull/6684#issuecomment-713684777,1,['test'],['test']
Testability,"Hi @dpiparo , Thank you! Indeed, I'm not very familiar with the ways ROOT do parallel and I just searched in the document and chose a simple one, i.e. this way. I think we could improve that. ; The reason I wrote this is because it was actually a test problem for me on the GSOC this year, ""to parallel the build of TKDTree and compare the speed"". The benefit, obviously, is that the build of TKDTree could be faster. And maybe also benefit to those who use TKDTree. There might be other possible improvement but for now that is all I can see.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2202#issuecomment-397645948:247,test,test,247,https://root.cern,https://github.com/root-project/root/pull/2202#issuecomment-397645948,1,['test'],['test']
Testability,"Hi @etejedor, thanks for your comments!. Enric and I had a meeting that resulted in the following action items for me:. 1. Remove the `test_` prefix from the roofit pythonization test files; 2. Come up with a mechanism that uses all the functions defined in the RooFit pythonization proxy classes for the pythonization, not excluding magic functions (which are often pythonized); 3. Check if the pythonization abstraction in this PR also allows for pythonizations with the C API; 4. Introduce Doxygen documentation for RooFit pyROOT. In my recent updates, I addressed bullet points 1, 2, and 3. 1. Was trivial to address; 2. I use now a combination of `mro()` and `funcname in klass.__dict__` to check if a new member function was defined in the corresponding Python class or any of it's base classes (inspired by [this stackoverflow post](https://stackoverflow.com/questions/5253397/check-if-class-attribute-was-defined-or-derived-in-given-class)); 3. I made a relatively [simple test](https://github.com/root-project/root/commit/96d76be74f347eb36bd4d785d6689efebb17408b) to verify that if one updates the Python classes with the C API, this is propagated as a pythonization to the correct RooFit class.; Indeed, if you make the changes to the code in my test branch, then this code gives the expected behaviour (using pythonized version of `__getattr__`:; ```Python; import ROOT; a = ROOT.RooRealVar(""x"", ""x"", 0, 0, 10.); getattr(a, ""Hello""); ```. 4. For the documentation, I still have to do that later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7753#issuecomment-831297263:179,test,test,179,https://root.cern,https://github.com/root-project/root/pull/7753#issuecomment-831297263,3,['test'],['test']
Testability,"Hi @guitargeek , I have some local example which I run to see if the Taylor expansion works fine. (simply Taylor expanding a RooFormulaVar around different points). I would like your inputs on the following items,; - What do you want to have as an unit test ? ; - Shall we also have a tutorial in place ?; - the anaytical integral for a polynomial can be written. I am unsure if the analyticalIntegral fully applies to a function of many variables, let me know how we can ; proceed here. :); ; Cheers,; Rahul",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9184#issuecomment-951725716:253,test,test,253,https://root.cern,https://github.com/root-project/root/pull/9184#issuecomment-951725716,1,['test'],['test']
Testability,"Hi @guitargeek, I've addressed your changes and rebased to master. I've also changed `LogTimings` to `TimingAnalysis` to it is clear that it is different to the existing profiling and allows for a bit more of an in-depth analysis. I did not add the test that you requested yet since I noticed it required some more changes to the `RooFit::MultiProcessing` then simply implementing the test. I am happy to look into this later though, but I think out of the scope of this MR. But for now we have the unit tests of the HeatmapAnalyzer and the ProcessTimer themselves.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11791#issuecomment-1354447607:249,test,test,249,https://root.cern,https://github.com/root-project/root/pull/11791#issuecomment-1354447607,3,['test'],"['test', 'tests']"
Testability,"Hi @hageboeck, thanks for the feedback!. Okay, I now took the time to hopefully get this range casting also work for the TCollections, so we don't have duplicate code. Actually, there was an `assert` also in the old [TRangeStaticCast implementation](https://github.com/root-project/root/blob/master/core/cont/inc/TCollection.h#L355)! So to stay consistent with TRangeStaticCast, I had to bring the `assert` in so that change request is also addressed now :) And we can also use the existing unit test in `testTypedIteration.cxx`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8769#issuecomment-891218910:192,assert,assert,192,https://root.cern,https://github.com/root-project/root/pull/8769#issuecomment-891218910,4,"['assert', 'test']","['assert', 'test', 'testTypedIteration']"
Testability,"Hi @j-mathe , I think you used `clang-format filename1 filename2 ...` instead of `git clang-format --diff ...`, right? because the clang-format commit introduces many formatting changes that are unrelated to the PR and that we should not apply here. It also makes it a bit harder to review the PR. Please remove that commit and only format your changes (e.g. with `git clang-format --diff master kahan | git apply`). I guess you will need to do an interactive git rebase -- you could also take this chance to clean the commit history, leaving only one commit or one for the new implementation plus one for the new tests. That would make it simpler for me to do a last review pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11230#issuecomment-1237232362:614,test,tests,614,https://root.cern,https://github.com/root-project/root/pull/11230#issuecomment-1237232362,1,['test'],['tests']
Testability,"Hi @ktf , the travis log could be clearer, but it indicates how to run the same command it does:. ```; Running clang-format-3.9 against branch master, with hash 7554be95715898fa2a93528254ce3646764ab3d2; clang-format failed.; To reproduce it locally please run; 	git checkout master; 	git-clang-format --commit 7554be95715898fa2a93528254ce3646764ab3d2 --diff --binary /usr/local/clang-5.0.0/bin/clang-format; ```. This system is not perfect and you might have to adapt hashes/paths to your case, but this is it.; If you do not get any corrections you might somehow be overriding ROOT's clang-format configuration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1712#issuecomment-371771090:21,log,log,21,https://root.cern,https://github.com/root-project/root/pull/1712#issuecomment-371771090,1,['log'],['log']
Testability,"Hi @ktf, as discussed yesterday the test failures are related to an issue in our incremental builds where Clad is not rebuilt after changes to the Clang headers. This leads to very weird symptoms because some ""stale"" functions access memory where they shouldn't and so on. I was hit by this problem already twice and it's tracked in https://github.com/root-project/root/issues/7977, so one would suppose that I remember by now but evidently I didn't... Apologies for the confusion and the delay it caused in integrating this. I've now synchronized the changes to https://github.com/root-project/llvm-project/releases/tag/ROOT-llvm16-20240116-01, moving the header to `clang/include/clang/Basic` as mentioned yesterday to keep the ability to build against a vanilla version of LLVM). @vgvassilev I put the commit only into `ROOT-llvm16`, not `cling-llvm16` because I think it's not that relevant for Cling standalone. Let me know if you disagree and I can of course move it. Some measurements of this change on my machine: for a simple `./bin/root.exe -q`, it reduces the maximum RSS from 217MB to 192MB and for `./bin/root.exe -q -e ""std::vector<int> v"" -e ""return 0;""` from 255MB to 230MB :clap:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1893308958:36,test,test,36,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1893308958,1,['test'],['test']
Testability,"Hi @lmoneta and @hageboeck, thanks for the feedback!. I will open a PR in rootbench with a benchmark based on the hf001_example.C tutorial.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10562#issuecomment-1128075811:91,benchmark,benchmark,91,https://root.cern,https://github.com/root-project/root/pull/10562#issuecomment-1128075811,1,['benchmark'],['benchmark']
Testability,"Hi @lmoneta, the bug I fixed was a failing `testMinimizationCpu` test (in another PR). However, during the analysis of the bug, I've seen some places where the code could be improved. The conversion of LossFunctionEventInfo to a struct was a suggestion by Alex. There is a real bug fix for a memory leak, however, that we should merge, even if the rest of the code changes are discarded. The functionality of the minimizer is not changed, the improvements are in simplicity and readability of the code. For what class do you think I'm missing initializations to data members?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/494#issuecomment-293529688:44,test,testMinimizationCpu,44,https://root.cern,https://github.com/root-project/root/pull/494#issuecomment-293529688,2,['test'],"['test', 'testMinimizationCpu']"
Testability,"Hi @pcanal : great - really nice. Thanks for diving into this.; I can suggest a test:; ```; using namespace ROOT::Experimental;; using MyVec_t = std::vector<int,VecOps::TAdoptAllocator<int>>;; TDataFrame d(4);; auto sd = d.Define(""v"", [](){return MyVec_t{1,2,3};}).Snapshot<MyVec_t>(""t"",""ofile.root"",{""v""});; auto checker = [](const MyVec_t &v){; EXPECT_EQ(size_t(3), v.size());; EXPECT_EQ(1, v[0]);; EXPECT_EQ(2, v[2]);; EXPECT_EQ(3, v[3]);; };; sd.Foreach(checker, {""v""});; ```; This solution will make the treatment of vectors with custom allocs slightly slower than ""traditional"" vectors, right? (whatever the answer this PR is a clear improvement of course!)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1707#issuecomment-371294942:80,test,test,80,https://root.cern,https://github.com/root-project/root/pull/1707#issuecomment-371294942,1,['test'],['test']
Testability,"Hi @will-cern, thanks for the report!. I'm a bit surprised by this, because `setData()` on the new likelihoods should already work. I have added a test to also cover this now: https://github.com/root-project/root/pull/16353. But maybe there is a corner case where it doesn't work? Does it have to do something with the global observables in data? For these we have already great test coverage by the way:; https://github.com/root-project/root/blob/master/roofit/roofitcore/test/testGlobalObservables.cxx#L371. I know that data resetting is a bit fragile with the *old* NLL (`EvalBackend(""legacy"")`). Maybe you're doing some workarounds that make it work in that case, but this work around is not applicable to the new NLL where a simple `setData()` call should suffice?. Anyway, please let me know how I can reproduce the issue if it's really there!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15763#issuecomment-2322862007:147,test,test,147,https://root.cern,https://github.com/root-project/root/issues/15763#issuecomment-2322862007,4,['test'],"['test', 'testGlobalObservables']"
Testability,"Hi Axel and Lorenzo,. I have all updated, well tested and ready for merge.; If you want to do other review and you have corrections please let me know. On the other hand I have a question:; I have a users guide in markdown in $ROOTSYS/bindings/r/doc/users-guide and I can see that in the last commits you have the users guides in $ROOTSYS/documentation/users-guide; must I move my users guide there?. Best Regards!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/74#issuecomment-136081750:47,test,tested,47,https://root.cern,https://github.com/root-project/root/pull/74#issuecomment-136081750,1,['test'],['tested']
Testability,"Hi Enrico, thank you very much for taking a look. > 1. I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases?. I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning?. Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has?. Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. ; https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8334#issuecomment-854977563:610,test,test,610,https://root.cern,https://github.com/root-project/root/pull/8334#issuecomment-854977563,2,"['benchmark', 'test']","['benchmarks', 'test']"
Testability,"Hi Konstantin,. Implementation is relatively simple, but I have no possibility to test the code.; If you can test changed code, I can provide it very soon",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7127#issuecomment-773427043:82,test,test,82,https://root.cern,https://github.com/root-project/root/issues/7127#issuecomment-773427043,2,['test'],['test']
Testability,"Hi Marcin,. That worked and did some progress in understanding the problem. A potential work-around would be requested the dictionary for the 2 level of namespace/struct that contains the typedef (in the same dictionary). In order to test any solution to the problem I still need a standalone reproducer and I am still having some difficulties. In particular in my attempts to reproduce the dictionary generation the typedef does not appear in the dictionary nor in the rootmap file. Weirder even, when I follow the [instructions](https://atlassoftwaredocs.web.cern.ch/guides/build_release/) to build Athena from scratch (on zeus.lbl.gov; done a couple of weeks ago), I get a different rootmap file (however because the build is currently (for other reason) partially broken I did not try with it):; ```; grep jetlink_t ../atlas_working/build/build/Athena/_CPack_Packages/Linux/RPM/Athena_23.0.17_x86_64-centos7-gcc11-opt/usr/Athena/23.0.17/InstallArea/x86_64-centos7-gcc11-opt/lib/Athena.rootmap; ```; vs; ```; grep jetlink_t /cvmfs/atlas-nightlies.cern.ch/repo/sw/master_Athena_x86_64-centos7-gcc11-opt/2023-03-05T2101/Athena/23.0.20/InstallArea/x86_64-centos7-gcc11-opt/lib/Athena.rootmap; typedef MissingETBase::Types::jetlink_t; ```. So I am not sure what I am doing different in my reproducer and in my local Athena.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12378#issuecomment-1462615809:234,test,test,234,https://root.cern,https://github.com/root-project/root/issues/12378#issuecomment-1462615809,1,['test'],['test']
Testability,"Hi Philippe,. Could you give me a hint of what sort of test this is? It doesn't look like a simple CTest, is it? How should I reproduce this error locally?. Cheers,; Attila",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1466#issuecomment-352200372:55,test,test,55,https://root.cern,https://github.com/root-project/root/pull/1466#issuecomment-352200372,1,['test'],['test']
Testability,"Hi Stephan, I'm confused, #5530 does not seem to have those warnings anymore? Also, ROOT is simply able to read an old `RooRealProxy` into a new `RooTemplateProxy<RooAbsReal>` with no problem, no instructions needed other than. ```; #pragma read sourceClass=""RooRealProxy"" targetClass=""RooTemplateProxy<RooAbsReal>"";; ```. ?. Do we need a test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5536#issuecomment-623916083:339,test,test,339,https://root.cern,https://github.com/root-project/root/pull/5536#issuecomment-623916083,1,['test'],['test']
Testability,"Hi all,; I still do not see all the advantages of this solution.; The recipe to run the test is on the ROOT website https://root.cern.ch/run-tests and is not exactly niche.; With these commands, from scratch, you can start testing ROOT and you have at disposal roottest for developing tests:; ```; mkdir RootDevelopment; cd RootDevelopment; git clone https://github.com/root-project/root; git clone https://github.com/root-project/roottest; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=Debug -Dtesting=ON -Droottest=ON ../root; ```; I wonder if this is still simpler even though the potential of git is not fully exploited.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/599#issuecomment-308217986:88,test,test,88,https://root.cern,https://github.com/root-project/root/pull/599#issuecomment-308217986,4,['test'],"['test', 'testing', 'tests']"
Testability,"Hi there,. OK, I think that I have found the culprit, but I don't understand the reasons. The main difference of our current 'minitree production' jobs this round is that we included a build of the MCFM physics generator with the build of our analysis code and we use it while running to calculate physics matrix elements for each event. . So to test this, I rebuilt our analysis code without building MCFM, and of course no longer calculate the matrix elements. I submitted this to the BNL site, and we read the files fine:. H4lAnalRun2 INFO processEvents: try to open file: root://dcgftp.usatlas.bnl.gov:1096//pnfs/usatlas.bnl.gov/BNLT0D1/rucio/mc16_13TeV/84/1f/DAOD_HIGG2D1.23315636._000001.pool.root.1; H4lAnalRun2 INFO processEvents: called TFile Open ; H4lAnalRun2 INFO processEvents - opened file 0 root://dcgftp.usatlas.bnl.gov:1096//pnfs/usatlas.bnl.gov/BNLT0D1/rucio/mc16_13TeV/84/1f/DAOD_HIGG2D1.23315636._000001.pool.root.1; H4lAnalRun2 INFO notifyNewFile: Entering. which as you may remember is the TFile::Open on a file which would use xrootd access. The job continues fine, reading 6 files, as one would expect. Now there is no matrix element calculated before we start reading the events. So it must be that somehow linking in the MCFM libraries causes problems for calling the gethostname. I must admit that I have no idea how/why this would 'interfere', since MCFM is not run at all before the TFile::Open. . So I think that we can let this bug report rest for now. If anyone might have ideas on how to check or fix the MCFM problem, suggestions are welcome. But I no longer think that xrootd has a problem. This is clearly a problem in how we have set up our client code. Thanks all for your time spent on this!. see you, RD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-760749391:346,test,test,346,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-760749391,1,['test'],['test']
Testability,"Hi! No that's alright, we don't enforce the formatting of old code. Also a rebase is not necessary, since the tests all passed and the PR would merge fine. Just a note: probably the PR was unattended for so long because the usecase for this feature was not clear (or you needed it in your project?). Now that we have it, we might as well merge it, but for the future try to focus more on addressing concrete use needs or improving the ROOT developer experience (like you did in many other PRs).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9156#issuecomment-1812443312:110,test,tests,110,https://root.cern,https://github.com/root-project/root/pull/9156#issuecomment-1812443312,1,['test'],['tests']
Testability,"Hi, ; Thank you for applying the changes in the code and to provide a tutorial and a test program. ; I have one more comment:; I still don't like having to pass a double** in the interface (in this case in the constructor). As you see that makes the code not nice (you see that also Travis complained). Since there is no easy solution for this, I would use std::vector<std::vector>> which gives the advantage that you could make it simply directly from a 2D initializer list. Otherwise my second preference is to use a simple double or float pointer and one assumes a proper order of the data. (e.g. raw major). . I would prefer having std::vector<std::vector<double>> for the contained type instead of std::vector<TArrayD>. . Thank you again for your changes and I hope we can merge this PR soon. Sorry for my delay in reviewing it . Lorenzo; Thank you if you can apply the ch",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-563254077:85,test,test,85,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-563254077,1,['test'],['test']
Testability,"Hi,. I am new to root and trying to wrap my head around some of its features. I thought a good place to start would be to work on this issue. I started by pythonizing `fitTo` and I'd like to send you a pull request. I take it that I should provide some tests for the feature, but I could not find any resources regarding the testing conventions in python for root. If there are any specific guidelines, please let me know, otherwise I'll just send you a pull request and you can take a look if it is really necessary. Cheers",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7217#issuecomment-785392761:253,test,tests,253,https://root.cern,https://github.com/root-project/root/issues/7217#issuecomment-785392761,2,['test'],"['testing', 'tests']"
Testability,"Hi,; Submit a job with compiled C to just open the Marseille file (code at; bottom). https://bigpanda.cern.ch/job?pandaid=4923453571. It has the same release, and it works! I am not sure if anything else is; different, but it points at the specific code rather than a pure TFile open; problem. Cheers,; Rod. $ cat main.C; #include <iostream>; #include <string>; #include ""TFile.h"". using namespace std;. int main(); {; TFile* davixFile = TFile::Open(""root://; eosatlas.cern.ch:1094//eos/atlas/atlasdatadisk/rucio/mc16_13TeV/25/31/DAOD_HIGG2D1.23315648._000001.pool.root.1; "",""READ"");; cout << ""coucou 5"" << endl;; davixFile->ls();; davixFile->Close();. return 0;; }. On Wed, 16 Dec 2020 at 15:50, rdschaffer <notifications@github.com> wrote:. > Marseilles job logs are in:; >; > marseilles; > <https://bigpanda.cern.ch/filebrowser/?guid=00354dec-89f9-4687-bc9e-d0151ddff358&lfn=panda.um.group.phys-higgs.user.schaffer.mc16_13TeV.500995.H4lMinitree_nominal.0.16e..201216_01.log.23578674.000051.log.tgz&site=IN2P3-CPPM/SCORE&scope=panda&fileid=23156311480>; >; > and Cern jobs logs are in:; > Cern; > <https://bigpanda.cern.ch/filebrowser/?guid=52428b18-b810-4194-be8a-fb11e92bc4f8&lfn=panda.um.group.phys-higgs.user.schaffer.mc16_13TeV.500995.H4lMinitree_nominal.0.16e..201216_01.log.23578674.000050.log.tgz&site=CERN-T0/SCORE&scope=panda&fileid=23156311459>; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/root-project/root/issues/6948#issuecomment-746412091>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABNFVRTBK3POEBIWCBST673SVDCJNANCNFSM4U2MLUJA>; > .; >. -- ; Tel. +49 89 289 14152",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-746431625:760,log,logs,760,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-746431625,6,['log'],"['log', 'logs']"
Testability,"Hi,; here are flamegraphs of the following simple benchmark with current ROOT master (`test_O2.svg`) and then with this PR (`test_O0.svg`). Runtime goes from 9s to 3s and the part of the stack containing `cling::IncrementalParser::Compile` up to `cling::Intepreter::ExecuteTransaction` disappears/seems to weight much less. ```c++; #include ""ROOT/TDataFrame.hxx""; #include <iostream>; using namespace ROOT::Experimental;. int main() {; // build a TDF with 1 event and 1 column ""x"" that is always equal 42; TDataFrame dd(1);; auto d = dd.Define(""x"", []() { return 42; });. // book nHistos histograms; // all with the same cut and filled with the same variable in this simple example; std::vector<TDF::TResultProxy<TH1D>> histos;; const auto nHistos = 1000u;; histos.reserve(nHistos);; for (auto i = 0u; i < nHistos; ++i); histos.emplace_back(d.Histo1D(""x""));. // run event loop, print something to be sure everything is ok; // jitting of the 1000 booked histograms happens here; std::cout << histos.front()->GetMean() << std::endl;; return 0;; }; ```; **Test -O0**; ![test_o0](https://user-images.githubusercontent.com/10999034/31814329-9c9c97a2-b589-11e7-9eaf-596d06dff458.png). **Test -O2**; ![test_o2](https://user-images.githubusercontent.com/10999034/31814330-9cb44a46-b589-11e7-9df7-c9f04ebeb36a.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1211#issuecomment-338155276:50,benchmark,benchmark,50,https://root.cern,https://github.com/root-project/root/pull/1211#issuecomment-338155276,1,['benchmark'],['benchmark']
Testability,"Hi,; yes following the linked example of the VavilovAccuratePdf is fine. It is true you have made a class, but only with static functions. Like this is not needed to be a class, can be simple function in a namespace. The advantage of having as a class is that one can cache some information as class data members. . Then test of the Vavilov is also a good example, however it is better to use the google test framework, resulting in a much simpler test to write. You need just to use the macro defined by test to compare the function value with the reference one. ; You have many examples in ROOT for gtest, for example in `hist/hist/test` directory like `test_TH1.cxx` or `test_TFormula.cxx`, `test_TF123_Moments.cxx`. If you need any help for the test, please let me know",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11049#issuecomment-1202195997:321,test,test,321,https://root.cern,https://github.com/root-project/root/pull/11049#issuecomment-1202195997,6,['test'],['test']
Testability,"Hmmm... From what I understood we can just run a simple fit twice and check that the result is the same. Or maybe even add another test for the evaluation of the objective function, as the reduction is done sequentially and should not create any problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2039#issuecomment-390438329:131,test,test,131,https://root.cern,https://github.com/root-project/root/pull/2039#issuecomment-390438329,1,['test'],['test']
Testability,"I agree that it is an unfortunate circumstance to have the test not passing. However, I still urge you to consider the effect on debugability removing strict tests will have. I have wasted a lot of time trying to track down a subtle bug due to loose tests which left me unable to determine where the bug came from. Conversely, setting tests strictly and tracing discrepancies, I found a different bug in the Kahan sum: #11940. Unit tests especially should be as strict as possible. In absence of unit tests (which unfortunately is the case for the parts of RooFit I worked on), strict ""integration"" tests like these are the closest I could get. Note also that it was simply part of my original assignment: to ensure users can trust the new parallelized methods, I built them to be bit-wise exactly equal to the old methods. So, I know from experience how tedious it is to trace down these bit-wise differences to their actual concrete source, but also think that because we are dealing with scientific software, precision, robustness, reliability and interpretability (of components and hence the whole) are important. Of course, performance is an important factor too, but it's just one of the aspects. We want the end-results of experiments to be accurate and explainable, right? I personally at least don't like when I have to sell a ""because of floating point errors"", because I've been bitten by them a few times now. Now, I'm also well aware that the project only has a given amount of resources and I myself am currently more or less out of resources (I can spend only my free time), so my vote probably doesn't count strongly :) If I could be of more practical help in this, I would definitely be happy to, but I also don't have a non-x86 machine, so it's not feasible for me to do much right now. So, feel free to make a call on this as you all best see fit!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1538758017:59,test,test,59,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1538758017,7,['test'],"['test', 'tests']"
Testability,"I agree that there is a problem here. That might involve the `DeclCollector` or the `DeclUnloader` or some other parts of ROOT. However, IMHO https://github.com/root-project/root/issues/13815#issuecomment-1759250811 clearly shows that the underlying problem is much bigger and older than just the failing test with LLVM 16. So I'd be very much interested in a pragmatic solution to resolve this last blocker for the upgrade. P.S.: One idea I had was to split the test into two parts, ie one ""bad"" part that tests the behavior with an incomplete class and one ""good"" part that loads `inst2lib`. However I quickly got stuck because just removing `o->Print();` on the first loaded object leads to many errors of the form `Error parsing payload code for class Inner` that I can't make sense of...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13815#issuecomment-1768325139:305,test,test,305,https://root.cern,https://github.com/root-project/root/issues/13815#issuecomment-1768325139,3,['test'],"['test', 'tests']"
Testability,I agree we should wait for a more robust solution for cross-compilation of the whole project before removing this simple test. I will close this PR and if in the future we decide what to do we can resume from here 👍,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15930#issuecomment-2228672121:121,test,test,121,https://root.cern,https://github.com/root-project/root/pull/15930#issuecomment-2228672121,1,['test'],['test']
Testability,"I also have a general comment, . https://github.com/root-project/root/blob/5d2c835d1c707dbbb9d7f1a82425c0567d5527dd/tree/ntuple/v7/doc/specifications.md?plain=1#L341-L342. it's not yet clear what are the expectation around these strings, my hunch is at write-time they come from reflection, and at read-time ROOT's internal compiler will be used to restore the field to a known (maybe user-defined) C++ type. However, in principle all the logical layout of data and types are encoded without these strings, so my questions are:. 1. for non-ROOT reader, can these be safely ignored (e.g. instead of getting back a named data struct, you get an anonymous struct by ignoring the type name); 2. for non-ROOT writer, if these are left empty, can ROOT figure out based on primitive types and compositions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13779#issuecomment-1806758875:439,log,logical,439,https://root.cern,https://github.com/root-project/root/pull/13779#issuecomment-1806758875,1,['log'],['logical']
Testability,I also think a test would be good. @vgvassilev in which subdirectory would you put the simple macro which was crashing in https://github.com/root-project/roottest/tree/master/cling ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15368#issuecomment-2083610710:15,test,test,15,https://root.cern,https://github.com/root-project/root/pull/15368#issuecomment-2083610710,1,['test'],['test']
Testability,"I am looking for a hotfix for the upcoming llvm release. The patch would be in the [area](https://github.com/llvm-mirror/llvm/blob/master/lib/Support/DynamicLibrary.cpp#L76-L92):; * I plan to remove the NDEBUG assert; * Make the `std::vector<void*>` a `std::vector<llvm::PointerIntPair<void*, 1, bool>>`; * Add a default flag to `addPermanentLibrary` saying if it was opened with RTLD_GLOBAL; * I will change the search order to search for first the one that are not marked RTLD_GLOBAL. A real solution I've discussed with Lang privately is that we should figure out a way how to pass the dlopened handle to the cling interpreter (before any parsing happens) and have a call to dlsym before calling the DynamicLibrary [here](https://github.com/root-project/cling/blob/master/lib/Interpreter/IncrementalJIT.cpp#L320). This would only happen after the next release of LLVM. I appreciate your proposed solutions but I do not really have a lot of bandwidth nowadays to investigate why they do not work for us. You will probably see what's going wrong if you build this PR locally. One of the issues is that it is not clear to me is what exactly is your use case and this is why there are misunderstandings. I feel fairly strongly running cling (and ROOT) with a patch-free LLVM and clang. I would appreciate if we can coordinate next time such breaking changes before asking for a llvm review and land patches in these particularly sensitive areas.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313786623:210,assert,assert,210,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313786623,1,['assert'],['assert']
Testability,"I cannot decide, that's up to you @egpbos and @lmoneta given the input by @hahnjo and me here. Please consider this:. IIUC you are interpreting this lack of bitwise equality as a bug. In that case our approach is to fix the failure asap. If ""asap"" isn't happening because reasons then we disable the test, and create a bug report about the test failure, reminding ourselves (you, @egpbos in this case) that the test needs to be fixed and re-enabled. ""Disabling the test"" can as well be a switch from equality to equality-with-range, as long as the GitHub issue is clear which commit needs to be reverted to reprouce the original test failure. How does that sound?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1540010898:300,test,test,300,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1540010898,5,['test'],['test']
Testability,"I don't think nvcc actually supports C++14 before CUDA 9.0. https://devblogs.nvidia.com/parallelforall/cuda-9-features-revealed. https://devtalk.nvidia.com/default/topic/985604/nvcc-test-cu-std-c-11-xcompiler-quot-std-c-14-quot-/?offset=2. So, I believe the easiest thing to do is simply to check for the CUDA version and require 9.0 or later.; As for the host compiler, if we use `CMAKE_CXX_STANDARD`, CMake should take care of it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1040#issuecomment-331498473:182,test,test-cu-std-c-,182,https://root.cern,https://github.com/root-project/root/pull/1040#issuecomment-331498473,1,['test'],['test-cu-std-c-']
Testability,"I just built a fresh version of `master` and `v6-26-00-patches` on `macphsft24` with macOS 14.2; the test posted in https://github.com/root-project/root/issues/7541#issuecomment-1316247162 still fails. It's not clear to me how it could work in one setup in the past, but it's certainly not working out-of-box in the default build configuration.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7541#issuecomment-1862729596:101,test,test,101,https://root.cern,https://github.com/root-project/root/issues/7541#issuecomment-1862729596,1,['test'],['test']
Testability,"I just wrote simple program and testing it with **g++** and **clang**; To compile with clang, I need ""-pthread"" compiler flags.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2581#issuecomment-418330918:32,test,testing,32,https://root.cern,https://github.com/root-project/root/pull/2581#issuecomment-418330918,1,['test'],['testing']
Testability,"I narrowed the issue down to a more simple reproducer:; ```C++; void script(); {; RooRealVar x{""x"", """", -10, 10};; x.setRange(""fit"", 0, 10);. RooGenericPdf gauss{""gauss"", ""std::exp(-0.5 * (x*x))"", x};; RooRealVar s{""n_sig"", """", 1000., 0, 10000};; RooAddPdf model{""model"", """", {gauss}, {s}};. std::unique_ptr<RooDataSet> data{model.generate(x)};. // Comment this out and it is fast again; model.setNormRange(""fit"");. std::unique_ptr<RooAbsReal> nll{model.createNLL(*data)};. for(std::size_t i = 0; i < 1000; ++i) {; s.setVal(s.getVal() + (i % 2 ? +1 : -1));; nll->getVal();; }; }; ```. The problem might have something to do with the old test statistics, because if you use the new BatchMode things are going fine. Probably, the dirty flags to the integral are propagated wrongly, causing a numeric integral to be computed for each event.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11637#issuecomment-1297295506:637,test,test,637,https://root.cern,https://github.com/root-project/root/issues/11637#issuecomment-1297295506,1,['test'],['test']
Testability,"I not yet test latest `nlohmann/json.hpp`, but seems to be it is incompatible with previous versions.; The simple solution for now would be ignoring incompatible versions of `nlohmann/json.hpp` and use builtin one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1208998994:10,test,test,10,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1208998994,1,['test'],['test']
Testability,"I really prefer a separate repo, exactly the design of `GooFit/Minut2` (though it should be moved to `root-project/minuit2` and have the latest improvements merged in). It has the nice feature that you can use it on multiple ROOT versions (producing a 6.10 version, for example), it keeps ROOT source tree clean, and is clearly separate. (I'm calling that Version 1). I can also add Travis tests pretty easily to that version (though also possible with the others). The first separate folder (Version 2) method was from a discussion with @lmoneta, and the merged folder method (Version 3) was from a request by @amadio. When I get back to CERN from Italy (Wednesday), can we schedule another meeting with interested parties to set up a plan? We need to pick one of the three options and focus (my) effort on that. My favorite is Version 1 so far. And, no, since you need to make a distributable *source* package, you can't copy all files to the build folder. You can copy all files to a `/standalone` folder, which is what Version 2 did.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1680#issuecomment-370486802:390,test,tests,390,https://root.cern,https://github.com/root-project/root/pull/1680#issuecomment-370486802,1,['test'],['tests']
Testability,I restarted the jobs to make sure the failure on Windows was a glitch. A test timedout for a reason which was not clear to me.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15106#issuecomment-2032409208:73,test,test,73,https://root.cern,https://github.com/root-project/root/pull/15106#issuecomment-2032409208,1,['test'],['test']
Testability,"I tested it locally and it seems to do the job now. If two processes get to the creation of the cache directory hierarchy precisely at the same time, it seems that there can still be a race there where one process fails to create the cache directory but it also doesn't see the full hierarchy already there. In that case there is no hard failure though: the process that fails to create the cache directory simply reads the file remotely rather than caching it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9479#issuecomment-1006504826:2,test,tested,2,https://root.cern,https://github.com/root-project/root/pull/9479#issuecomment-1006504826,1,['test'],['tested']
Testability,"I think that is sufficient efficient evidence albeit there is one more simple test to do, is to introduce a synchronization point every once in a while to insure that the queue is actually filled/used and then later emptied.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14034#issuecomment-1821703597:78,test,test,78,https://root.cern,https://github.com/root-project/root/pull/14034#issuecomment-1821703597,1,['test'],['test']
Testability,"I think the PR goes into the right direction. Please use just 1 simple event instead of 1000, because we are really testing only if the compression setting gets applied. The `ntuple_zip` unit tests are _not_ really relevant here -- they test the compression routines themselves and not if the correct compression settings were used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5179#issuecomment-620674511:116,test,testing,116,https://root.cern,https://github.com/root-project/root/pull/5179#issuecomment-620674511,3,['test'],"['test', 'testing', 'tests']"
Testability,"I think there is one thing that is clear:. * T*System::Abort should disable the signal handling before calling ::abort [rather than the caller of gSystem->Abort doing so]. What is not as clear is what should be the behavior for unexpected (which include failure of a 'regular' assert macro):. * Should it print a stack trace? (This may or may not be useful for an assert).; * When on the prompt, should it recover or stop the process? (probably stop the process but then again we don't stop the process for other 'bad' state: SigBus, SigSegmentationViolation, SigIllegalInstruction, SigFloatingException). Note: to print stack and still always abort, we just need to move the return introduce by the PR to after the call to StackTrack and before the call to HandleException/Exit. Note: to print stack and not exit when on the prompt, just tweaking T*System::Abort should be enough to quit for .qqqq and avoid the infinite recursions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5034#issuecomment-589272246:277,assert,assert,277,https://root.cern,https://github.com/root-project/root/pull/5034#issuecomment-589272246,2,['assert'],['assert']
Testability,"I was thinking of something like this:. https://eguiraud.web.cern.ch/eguiraud/decks/20200416_reusing_rdf_jitted_lambdas_ppp/#/4. but booking all the histos before calling `GetValue` on one of them. I.e. some dedicated test with several RDFs and where reuse across RDFs clearly happens (of course other tests might exercise it to some degree already). Perhaps after merging #5356 , then.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5329#issuecomment-615311725:218,test,test,218,https://root.cern,https://github.com/root-project/root/pull/5329#issuecomment-615311725,2,['test'],"['test', 'tests']"
Testability,"I will make a push with the latest changes as soon as I solve the capacity-as-sentinel-for-ownership thing -- it's a bit tricky because the capacity is unsigned (so can't use -1 unless we change it to signed) and we can't use 0 because `clear()` happens to set the capacity and the size to 0 in the current implementation (and it's not easy to have `clear()` set the capacity to a more meaningful value without lowering a lot of the logic from `SmallVectorImpl` to `RVec`, as far as I can tell).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-851591863:433,log,logic,433,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-851591863,1,['log'],['logic']
Testability,"I would feel *way* more confident if we had any test for this :-/ Would you be kind enough (and I really mean it...) to provide one? It's fairly simple, just copy `core/base/test/TNamedTests.cxx` to `core/base/test/TBitsTests.cxx` and use the usual `EXPECT_EQ` to check for the output to be what you'd expect. *Then* we can simplify things! :-) Let us know, please!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7988#issuecomment-825759330:48,test,test,48,https://root.cern,https://github.com/root-project/root/pull/7988#issuecomment-825759330,3,['test'],['test']
Testability,"I would propose to change the title to ""[ci] Further speedup mac and linux builds by caching dependencies"". The word ""instead"" can be misleading. Our goal is to have feedback from the CI as soon as possible. Having several nodes, allows to scale horizontally. We are not increasing the number of nodes in the CI because we are lazy, we just need many nodes AND fast CI, e.g. through caches or quicker tests :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14987#issuecomment-2001914193:401,test,tests,401,https://root.cern,https://github.com/root-project/root/issues/14987#issuecomment-2001914193,1,['test'],['tests']
Testability,"I'm a little confused as the same tests seems to have been quoted as `passed` and `failed` in the same log. I struggle to find the exact definition of each test as well. I looked through the relevant files, but the structure is not clear to me. Also, last time when I spoke with @amadio about the future of ROOT, he said you guys discussed making sure people outside of CERN can contribute. Unfortunately, I had to use my CERN login to see the test logs. I also don't know how to replicate the tests in my environment. Do they depend on files hosted somewhere? Could you give me some docs to read so I can find my way around?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9271#issuecomment-967115318:34,test,tests,34,https://root.cern,https://github.com/root-project/root/pull/9271#issuecomment-967115318,7,"['log', 'test']","['log', 'login', 'logs', 'test', 'tests']"
Testability,"I'm afraid the ""book everything first, use results later"" is the price to pay to run everything in a single event loop: we need to know what to run before we run it, and at the same time we have to run the event loop to produce the result if you do things with it. However, by the time you lose track of where things were defined because your analysis is too complex, you probably should restructure your code so that you don't keep everything in a single function. Analyses that produce hundreds or thousands of histograms typically have some bookkeeping logic, they don't keep all results at main scope. Some of the more complex RDF tutorials show some possible ways to do it, e.g. in Python we keep `RResultPtr<TH1D>`s in a dictionary. There are other possible designs, like e.g. continuations on futures, but I don't think they increase readability/clarity in general. Anyway, the empirical reply to the original question: we never got the feedback that the ""book first, use later"" programming model made users lose track of the results.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7107#issuecomment-778229985:556,log,logic,556,https://root.cern,https://github.com/root-project/root/pull/7107#issuecomment-778229985,1,['log'],['logic']
Testability,"I'm quite baffled every time I come in contact with it, how you guys manage to survive with such a testing infrastructure. :confused: I did have a fork of [roottest](https://github.com/root-project/roottest) from a long time ago. https://github.com/krasznaa/roottest. What I didn't have was it being up to date with the main repository. Plus, did I see correctly in your copy-pasted error message that the CI complained about not finding a branch in my roottest fork with the same name as the branch that I opened this PR from? :confused: What the heck? Is it really expected that one would create a branch in both repositories to make a modification to ROOT?. After some deliberation I updated the PR as you can see. The setup that you guys have with `ROOTConfig.cmake` being generated twice, and one of them possibly being used already during the main configuration is... unique... (Just so that I stay PC...) I've seen similar configurations being used for header-only libraries in the past, but never for anything that needed an actual build before becoming usable. In any case, making `ROOTConfig.cmake` skip `find_dependency(Vdt)` if `VDT::VDT` is already available as a target, was the most robust thing that I could come up with...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844#issuecomment-1339364132:99,test,testing,99,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1339364132,1,['test'],['testing']
Testability,"Indeed, the presence of the last optional parameter of the 'TSQLStatement ::SetBinary', which is called 'maxsize', looks very strange for me. If i set binary buffer (void* 'mem' variable) and set its size in bytes ('size' variable), what does the 'maxsize' variable mean? Isn't it obvious how much memory needs to be allocated if the 'size' parameter is specified?; 'maxsize' optional parameter may specify something else, but, unfortunately, i can't find meaning of the parameters in the current ROOT reference guide. Please, add this check, because the presence of the both 'size' and 'maxsize' variables is not obvious, at least, for me. So, i never used the 'maxsize' parameter. After the addition, i'll check one more. Other tests have passed well.; The fixes in older branches is not required (i can use own patches). But if it doesn't take a long time for you, then it would be valuable, because the last FairRoot version, we are based on, has ROOT 6.20.08.; Thank you. With respect, Konstantin.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7127#issuecomment-774529790:730,test,tests,730,https://root.cern,https://github.com/root-project/root/issues/7127#issuecomment-774529790,1,['test'],['tests']
Testability,Input/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-393462547:3911,test,testReport,3911,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-393462547,1,['test'],['testReport']
Testability,Input/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2366#issuecomment-407829804:4190,test,testReport,4190,https://root.cern,https://github.com/root-project/root/pull/2366#issuecomment-407829804,1,['test'],['testReport']
Testability,Input/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117#issuecomment-393471686:4191,test,testReport,4191,https://root.cern,https://github.com/root-project/root/pull/2117#issuecomment-393471686,1,['test'],['testReport']
Testability,It could be as simple as testing the full function with a new unit here https://github.com/root-project/root/blob/master/core/clingutils/test/TClingUtilsTests.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15386#issuecomment-2088090746:25,test,testing,25,https://root.cern,https://github.com/root-project/root/pull/15386#issuecomment-2088090746,2,['test'],"['test', 'testing']"
Testability,It is great you add the support for overlapping range in DataRange. ; Can you also please convert the test you have above in a simple Google test that can be added in math/mathcore/test ? ; You can just replace the assert with EXPECT_EQ.; A simple example to look is this test: ; https://github.com/root-project/root/blob/master/hist/hist/test/test_TH1.cxx. Thank you for this contribution!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10101#issuecomment-1080810665:102,test,test,102,https://root.cern,https://github.com/root-project/root/pull/10101#issuecomment-1080810665,6,"['assert', 'test']","['assert', 'test']"
Testability,"It is old logic that `TBrowser` does not starts without `DISAPLAY` variable set or simply in batch mode.; One can solve this, but with some fine-tuning in ""normal"" `TBrowser`/`TBrowserImp` classes.; If @bellenot has nothing against it - I can propose PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10748#issuecomment-1159127875:10,log,logic,10,https://root.cern,https://github.com/root-project/root/issues/10748#issuecomment-1159127875,1,['log'],['logic']
Testability,"It seems deeper problems exists. In my study, I need to sample a 3D multi-variate gaussian distribution. For comparison, I set correlation to zero, so that I can simply sample three independent variables. The results using unuran and the one using three indepent variables are incompatible, even with above mentioned dirty fix. Currently I switch to alternative methods, yet it might be useful to understand what is the problem. I think some unit test and integration test should be implemented.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10222#issuecomment-1079823051:447,test,test,447,https://root.cern,https://github.com/root-project/root/issues/10222#issuecomment-1079823051,2,['test'],['test']
Testability,"It's actually an _array_ ds, not the arrow ds :smile: it's a simple datasource used for testing",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8754#issuecomment-888908741:88,test,testing,88,https://root.cern,https://github.com/root-project/root/pull/8754#issuecomment-888908741,1,['test'],['testing']
Testability,It's not clear to me what the actually issue with Jenkins is. It looks like a fluke in one of the jenkins components. Could you restart the test?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13146#issuecomment-1620049875:140,test,test,140,https://root.cern,https://github.com/root-project/root/pull/13146#issuecomment-1620049875,1,['test'],['test']
Testability,"Javier is testing this patch, so I marked as do-not-merge until I get positive feedback here.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/899#issuecomment-325365214:10,test,testing,10,https://root.cern,https://github.com/root-project/root/pull/899#issuecomment-325365214,1,['test'],['testing']
Testability,"Just for completeness, here is a simple reproducer of the problem:. ```c++; // compile with g++ -fabi-version=6 -o test test.cpp using GCC 13.2; #include <memory>. std::unique_ptr<int> foo() { return nullptr; }. int main() {}; ```; Here is again the error:; ```txt; In file included from /usr/include/c++/13.2.1/memory:78,; from test.C:1:; /usr/include/c++/13.2.1/bits/unique_ptr.h: In instantiation of ‘constexpr std::unique_ptr<_Tp, _Dp>::unique_ptr(std::nullptr_t) [with _Del = std::default_delete<int>; <template-parameter-2-2> = void; _Tp = int; _Dp = std::default_delete<int>; std::nullptr_t = std::nullptr_t]’:; test.C:3:37: required from here; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: error: no matching function for call to ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data()’; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘template<class _Del> std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer, _Del&&) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: template argument deduction/substitution failed:; /usr/include/c++/13.2.1/bits/unique_ptr.h:360:11: note: candidate expects 2 arguments, 0 provided; 360 | : _M_t(); | ^~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate: ‘std::__uniq_ptr_data<int, std::default_delete<int>, true, true>::__uniq_ptr_data(std::__uniq_ptr_impl<int, std::default_delete<int> >::pointer) [inherited from std::__uniq_ptr_impl<int, std::default_delete<int> >]’; 241 | using __uniq_ptr_impl<_Tp, _Dp>::__uniq_ptr_impl;; | ^~~~~~~~~~~~~~~; /usr/include/c++/13.2.1/bits/unique_ptr.h:241:40: note: candidate expects 1 argument, 0 provided; /usr/include/c++/13.2.1/bits/unique_ptr.h:242:7: note: candidate: ‘st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10984#issuecomment-1739815648:115,test,test,115,https://root.cern,https://github.com/root-project/root/issues/10984#issuecomment-1739815648,4,['test'],['test']
Testability,"Just very simple macro:. ```; void *getGlobal(const char *name) ; {; auto gl = gROOT->GetListOfGlobals()->FindObject(name);; if (!gl) return nullptr; ; TGlobal *global = dynamic_cast<TGlobal *> (gl);; return global ? global->GetAddress() : nullptr;; }. void test() ; {; TCanvas c1;; printf(""gROOT %p %p\n"", gROOT, getGlobal(""gROOT""));; printf(""gPad %p %p\n"", gPad, getGlobal(""gPad""));; }; ```; In current ROOT master - gROOT prints identical code, gPad is **DIFFERENT**; This the provided patch gPad and gROOT printouts are identical.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3208#issuecomment-449373735:258,test,test,258,https://root.cern,https://github.com/root-project/root/pull/3208#issuecomment-449373735,1,['test'],['test']
Testability,"Many of the tests in the list above were renamed in master, but they all succceed:; ```; 1027/1220 Test #1028: tutorial-v7-histops.cxx ............................................. Passed 6.00 sec; 1029/1220 Test #1031: tutorial-v7-simple.cxx .............................................. Passed 8.82 sec; 1033/1220 Test #1026: tutorial-v7-concurrentfill.cxx ...................................... Passed 20.39 sec; 1034/1220 Test #1036: tutorial-rcanvas-rframe.cxx ......................................... Passed 2.93 sec; 1035/1220 Test #1037: tutorial-rcanvas-rh1.cxx ............................................ Passed 2.91 sec; 1037/1220 Test #1038: tutorial-rcanvas-rh1_large.cxx ...................................... Passed 3.14 sec; 1039/1220 Test #1040: tutorial-rcanvas-rh2.cxx ............................................ Passed 4.41 sec; 1040/1220 Test #1041: tutorial-rcanvas-rh2_colz.cxx ....................................... Passed 4.62 sec; 1041/1220 Test #1042: tutorial-rcanvas-rh2_large.cxx ...................................... Passed 4.85 sec; 1042/1220 Test #1045: tutorial-rcanvas-rlegend.cxx ........................................ Passed 2.46 sec; 1047/1220 Test #1034: tutorial-rcanvas-rcanvas_mt.cxx ..................................... Passed 25.33 sec; 1051/1220 Test #1043: tutorial-rcanvas-rh3.cxx ............................................ Passed 13.34 sec; 1053/1220 Test #1044: tutorial-rcanvas-rh3_large.cxx ...................................... Passed 13.14 sec; 1059/1220 Test #1056: tutorial-rcanvas-subpads.cxx ........................................ Passed 2.22 sec; 1066/1220 Test #1029: tutorial-v7-perf.cxx ................................................ Passed 55.03 sec; 1199/1220 Test #1030: tutorial-v7-perfcomp.cxx ............................................ Passed 105.92 sec; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8073#issuecomment-1000999629:12,test,tests,12,https://root.cern,https://github.com/root-project/root/issues/8073#issuecomment-1000999629,1,['test'],['tests']
Testability,Marseilles job logs are in:. [marseilles](https://bigpanda.cern.ch/filebrowser/?guid=00354dec-89f9-4687-bc9e-d0151ddff358&lfn=panda.um.group.phys-higgs.user.schaffer.mc16_13TeV.500995.H4lMinitree_nominal.0.16e..201216_01.log.23578674.000051.log.tgz&site=IN2P3-CPPM/SCORE&scope=panda&fileid=23156311480). and Cern jobs logs are in:; [Cern](https://bigpanda.cern.ch/filebrowser/?guid=52428b18-b810-4194-be8a-fb11e92bc4f8&lfn=panda.um.group.phys-higgs.user.schaffer.mc16_13TeV.500995.H4lMinitree_nominal.0.16e..201216_01.log.23578674.000050.log.tgz&site=CERN-T0/SCORE&scope=panda&fileid=23156311459),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-746412091:15,log,logs,15,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-746412091,6,['log'],"['log', 'logs']"
Testability,"My personal preference is to store std::string instead of a hash, as it's simpler and hashing anyway doesn't give us any improvement in performance. About transaction, I'm testing something like what I asked but it gives me an error like this which seems very cryptic to me, have you ever seen this error before?; https://gist.github.com/yamaguchi1024/b137f5313dfca23abbe890a5c4440a7d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2434#issuecomment-411910183:172,test,testing,172,https://root.cern,https://github.com/root-project/root/pull/2434#issuecomment-411910183,1,['test'],['testing']
Testability,Neither svg no png/jpeg images can be produced by eve.; With some efforts one could try to implement png support - but in my mind it is not necessary. This issue was created to let run different tutorials in special testing mode - ; and simply checks that tutorials are still valid. Also there are several tutorials with loop like:; ```; while (gSystem->ProcessEvents()) {; // do something; // update canvas; }; ```; In special testing mode one could limit this loop by several seconds.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6651#issuecomment-1923341069:216,test,testing,216,https://root.cern,https://github.com/root-project/root/issues/6651#issuecomment-1923341069,2,['test'],['testing']
Testability,"Next problem is that musl [apparently](https://www.gnu.org/software/gnulib/manual/html_node/fpu_005fcontrol_002eh.html) does not provide `fpu_control.h`. According to this [forum post](https://root-forum.cern.ch/t/compiling-error-conflicting-types-alpine-linux/28193/3), nothing from this file is in fact used and thus it should be possible to remove the include - based on the `fpu_control.h` [source code](https://code.woboq.org/userspace/glibc/sysdeps/x86/fpu_control.h.html) and a simple `grep`, this should hold for all ROOT components, except `math/mathcore/src/triangle.c`, which uses `_FPU_SETCW` at line 4888. I am not familiar with what `fpu_control.h` does (apparently it has something to do with float precision), but according to [this](https://sourceforge.net/p/jamvm/patches/6/), it should be replaceable by a standard `fenv.h` header file, which I suggest to do (I have not tested it yet, but I will).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9253#issuecomment-963066852:890,test,tested,890,https://root.cern,https://github.com/root-project/root/issues/9253#issuecomment-963066852,1,['test'],['tested']
Testability,Nice change. I proposed a simplification. The tests seem to fail because the change does what it is supposed to do and the reference would need to be adapted.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10928#issuecomment-1947173074:46,test,tests,46,https://root.cern,https://github.com/root-project/root/issues/10928#issuecomment-1947173074,1,['test'],['tests']
Testability,Note:. Such big PR is not good because they are hard to debug in case of problem. The recent recent example with the PR testing IsBatch in TCanvas::Close prove it. It was easy to track down because it was a single simple PR. This faulty code is present in this big PR. I suggest you remove this big PR. We cannot be confident with it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6469#issuecomment-704312614:120,test,testing,120,https://root.cern,https://github.com/root-project/root/pull/6469#issuecomment-704312614,1,['test'],['testing']
Testability,"OK, so simply disabling the `LOG_CONFIGURE`, `LOG_BUILD`, `LOG_INSTALL` when using `CONFIGURE_COMMAND`, `BUILD_COMMNAD`, `INSTALL_COMMAND` seems to fix the issue (i.e. no `BUILD_JOB_SERVER_AWARE` involved), but then we have no log...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16733#issuecomment-2435320448:227,log,log,227,https://root.cern,https://github.com/root-project/root/issues/16733#issuecomment-2435320448,1,['log'],['log']
Testability,OT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:2940,test,testReport,2940,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,1,['test'],['testReport']
Testability,"Ok, I found out what was wrong and fixed it, taking advantage of some suggestion I got in the upstream LLVM review. The issue was missing pointer stability due to the fact the resizing of the backend store could have incurred in copies later than previously expected. The new code uses a BumpPtrAllocator to allocate the pages of items, rather than resizing an std::vector, so it's guaranteed that the elements don't move once they have been allocated (at the cost of the allocated memory not being necessarity contiguous anymore). With such fix, I cannot reproduce the issue anymore when running standalone, with similar memory improvements when running my simple ""open ALICE AOD file"" test.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13641#issuecomment-1723409634:687,test,test,687,https://root.cern,https://github.com/root-project/root/pull/13641#issuecomment-1723409634,1,['test'],['test']
Testability,"Ok, cannot reproduce it with a simple TPaveLabel:; ```; root [0] auto p = new TPaveLabel(10.,0.,0.,10.,""test""); (TPaveLabel *) @0x7ffee68e8608; root [1] p->Draw(); Info in <TCanvas::MakeDefCanvas>: created default TCanvas with name c1; root [2] ; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6344#issuecomment-692133143:104,test,test,104,https://root.cern,https://github.com/root-project/root/issues/6344#issuecomment-692133143,1,['test'],['test']
Testability,"Ok, got it. I commented that out and have been proceeding to test things out. I've hit an issue when trying to embed cling into my project and I've boiled it down to the simplest test case I can here: https://github.com/jeaye/cling-linkage-error-test-case. Is this expected behavior? If so, how can I have cling be able to work with all of the (mangled) symbols which are in my program? I'm trying to use cling as an embedded JIT in my own language's compiler, so the goal is to be generating code on the fly which works with the existing runtime in the compiler. I can move this to a separate ticket if that's preferred.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1192957714:61,test,test,61,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192957714,3,['test'],"['test', 'test-case']"
Testability,"Ok, if `libGL` already depends from `libAfterImage` - then it is fine. You may add simple gtest-based code directly for `libGL` - then it will be automatically tested on all platforms.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2252647669:160,test,tested,160,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2252647669,1,['test'],['tested']
Testability,"Ok, let me know if you have other tests which you would like me to do. One more question for my understanding. Are those big vectors actually needed at all when reading a file? If not why aren't they swapped out to disk either implicitly via some madvise or by simply caching to disk the results? The latter might even give some startup advantage, assuming they are offsets to the pcms and they do not change (not the basic root ones, at least).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1628343236:34,test,tests,34,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1628343236,1,['test'],['tests']
Testability,"Olivier, can you look over the PR? ; I tried to keep logic around `nostackb` - but it is not fully clear for me.; Changes already applied to master",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5898#issuecomment-647540602:53,log,logic,53,https://root.cern,https://github.com/root-project/root/pull/5898#issuecomment-647540602,1,['log'],['logic']
Testability,"On 07/07/17 23:36, marsupial wrote:; >; > I appreciate your proposed solutions but I do not really have a; > lot of bandwidth nowadays to investigate why they do not work for; > us. You will probably see what's going wrong if you build this PR; > locally.; >; > I have built locally and don't see the issue (I don't even know what ; > I'm looking for). Both you and @pcanal <https://github.com/pcanal> ; > asked me to fix this and I spent actual time trying to figure out what ; > you guys were after and implementing a solution that has little cost ; > for both of us. I too suffer from lack time, so asking me to do work ; > then walking away without even giving a single example of what is ; > broken seems a bit rude....; >; Hm, for me the issue was obvious, sorry. You need to build ROOT, start ; it and type `int i`.; >; > Seriously, can I get one test that still fails with ; > https://reviews.llvm.org/D33529 ?; >; > If that cannot be done could @pcanal <https://github.com/pcanal> or ; > @Axel-Naumann <https://github.com/axel-naumann> at least verify that ; > after applying D33529 and setting |DynamicLibrary::SearchOrder = ; > SO_LoadedFirst; // or SO_LoadedLast (don't know the problem)| 500+ ; > tests are broken?; >; Now trying with SO_LoadedLast.; >; > I would appreciate if we can coordinate next time such breaking; > changes before asking for a llvm review and land patches in these; > particularly sensitive areas.; >; > I explicitly added you to the list of reviewers for the original ; > patch, there is little more I can do than that. And more coordination ; > is exactly what I am trying to do now. If we cannot reach a conclusion ; > may I at least be added to review whatever your solution looks like?; >; > 1. I plan to remove the NDEBUG assert; >; > Already done in D33529; >; > 2. Make the std::vector<void*> a; > std::vector<llvm::PointerIntPair<void*, 1, bool>>; >; > How can you guarantee that the platform will deliver a pointer with ; > proper alignment for that?; >;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313802370:854,test,test,854,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313802370,1,['test'],['test']
Testability,Output/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineU,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-411277208:4179,test,testReport,4179,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-411277208,1,['test'],['testReport']
Testability,"Regarding the efficiency, I don't know what's the proper way to benchmark the cumulative histogram generation. In the following simple benchmark targeting the `hpx` 1D histogram in `tutorials/hsimple.root`, the difference is not much, though `TH1::GetCumulativeIncExc` seems slightly faster. ```; [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x372cc00; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_resolution_clock::now();; root [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00026606600; root [3] .q; [yuehshun@lxplus8s13 root-build]$ cd ../root-build.incexc/; [yuehshun@lxplus8s13 root-build.incexc]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x3c458b0; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH. 1 *hpxCumu = hpx->GetCumulativeIncExc(); std::chrono::time_poroot [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00024825600; root [3] .q; [yuehshun@lxplus8s13 root-build.incexc]$ cd ../root-build; [yuehshun@lxplus8s13 root-build]$ ./bin/root -l tutorials/hsimple.root; root [0]; Attaching file tutorials/hsimple.root as _file0...; (TFile *) 0x2b9a7d0; root [1] std::chrono::time_point<std::chrono::high_resolution_clock> start = std::chrono::high_resolution_clock::now(); TH1 *hpxCumu = hpx->GetCumulative(); std::chrono::time_point<std::chrono::high_resolution_clock> stop = std::chrono::high_re; solution_clock::now();; root [2] static_cast<std::chrono::duration<double>>(stop - start).count(); (double) 0.00027867100; root [3] .q; [yuehshun@lxplus8s13 root-build]$ cd ../root-build.inc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11949#issuecomment-1361867780:64,benchmark,benchmark,64,https://root.cern,https://github.com/root-project/root/pull/11949#issuecomment-1361867780,2,['benchmark'],['benchmark']
Testability,"Regarding the titular issue, I have been thinking about it for a bit and I don't think we can do much better than what @pieterdavid already implemented. Solutions considered:. 1. Implicitly converting `TClonesArrays` to `RVecs` would be a) backward-incompatible and b) a silent perf degradation, as it requires a copy. Moreover, if we did this I don't see a migration path that doesn't require that users revise all their TClonesArrays-related logic; 2. Adding a `TClonesArrays2RVec` helper function: it would require a copy (or it would have to return a clunky `RVec<T*>`). It is also trivial to implement for users that need it and don't mind the downsides.; 3. Adding a RDF toggle to tweak ""read TClonesArrays as RVecs"" or not: requires adding a bunch of extra logic to the column-reading mechanism for a feature that might end up being mostly unused (modern data models don't use TClonesArrays), and it would require the extra copy (i.e. silent performance degradation). The best seems to be 3, but feature toggles complicate internals and are typically not easy to discover (might end up mostly unused). It seems simpler to ask users to explicitly do the conversion in a `Redefine` if they need/want to. Sorry I could not come up with something nice :confused: . I will close this in a few days unless people have something against it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8644#issuecomment-883552286:444,log,logic,444,https://root.cern,https://github.com/root-project/root/issues/8644#issuecomment-883552286,2,['log'],['logic']
Testability,"Result from `git-bisect` on LLVM/Clang between current `release/13.x` and `llvmorg-13-init`:; ```; git bisect start; # bad: [9d9efb1f67ff70e996b1cb7fa00e24b9121be226] [lld][CMake] Add LLD_DEFAULT_NOSTART_STOP_GC; git bisect bad 9d9efb1f67ff70e996b1cb7fa00e24b9121be226; # good: [5369517d20dd362a178a1b2d6c398d8898ee4620] Bump the trunk major version to 13; git bisect good 5369517d20dd362a178a1b2d6c398d8898ee4620; # bad: [711a473cd9e3c8e63ad3460d49fdab1545634dd2] Update testcase for D101333.; git bisect bad 711a473cd9e3c8e63ad3460d49fdab1545634dd2; # bad: [11b70b9e3a7458b5b78c30020b56e8ca563a4801] Revert ""[NPM][CGSCC] FunctionAnalysisManagerCGSCCProxy: do not clear immutable function passes""; git bisect bad 11b70b9e3a7458b5b78c30020b56e8ca563a4801; # good: [97ec8fa5bb07e3f5bf25ddcb216b545cd3d03b65] [Coverage] Store compilation dir separately in coverage mapping; git bisect good 97ec8fa5bb07e3f5bf25ddcb216b545cd3d03b65; # bad: [4096ae06f47af9db2c2550a2c34979edfbd91b8d] [lldb] Support DWARF-5 DW_FORM_line_strp (used by GCC); git bisect bad 4096ae06f47af9db2c2550a2c34979edfbd91b8d; # bad: [d65ddca83ff85c7345fe9a0f5a15750f01e38420] [ValueTracking] ComputeKnownBits - minimum leading/trailing zero bits in LSHR/SHL (PR44526); git bisect bad d65ddca83ff85c7345fe9a0f5a15750f01e38420; # good: [15a74b64dfa9bc1213cd582415f849b4dba51bad] [VPlan] Manage pairs of incoming (VPValue, VPBB) in VPWidenPHIRecipe.; git bisect good 15a74b64dfa9bc1213cd582415f849b4dba51bad; # good: [dd68f3cf2899c554cab7baf3ccdcd3f987d77736] [RISCV] Support insertion of misaligned subvectors; git bisect good dd68f3cf2899c554cab7baf3ccdcd3f987d77736; # good: [97a304cc8f949e40693d63b855b4b24bc81fa729] [scan-build-py] Add sarif-html support in scan-build-py; git bisect good 97a304cc8f949e40693d63b855b4b24bc81fa729; # bad: [0f279c7a5c34eaae797c325c18614def21eba921] Revert ""patch"" it wass my mistake inusing git; git bisect bad 0f279c7a5c34eaae797c325c18614def21eba921; # bad: [56d228a14e3631de157ae98dd61d21193e4502d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9547#issuecomment-1011201311:472,test,testcase,472,https://root.cern,https://github.com/root-project/root/issues/9547#issuecomment-1011201311,1,['test'],['testcase']
Testability,"Right - @smuzaffar was quite clear that we should separate build failures from test failures. But we now fail for build failures, too, so maybe including test failures in the failed state makes sense? Anyway, just pinging @smuzaffar for his recommendation + arguments before we decide what to do here!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12307#issuecomment-1542423864:79,test,test,79,https://root.cern,https://github.com/root-project/root/issues/12307#issuecomment-1542423864,2,['test'],['test']
Testability,"Right, of course the tests are correctly failing now where they still use `Offset` for the `NewStyle` likelihoods :). We should probably do two things to finish this PR:; 1. Add a test somewhere (I guess `testLikelihoodGradientJob.cxx` is as good a place as any) that fails when creating a likelihood with the two arguments together. The test can simply check whether the output of `createNLL` is `0`.; 2. Remove `Offset` from the `NewStyle` likelihood creation lines. _Side note:_ I think it would be much better if [`createNLL` just throws here](https://github.com/root-project/root/blob/master/roofit/roofitcore/src/RooAbsPdf.cxx#L1032) instead of returning zero and causing segfaults along the way. But this is probably an issue for a different PR. Would probably be good to run by Wouter to make sure there are no valid usecases of returning a `nullptr`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11650#issuecomment-1330379864:21,test,tests,21,https://root.cern,https://github.com/root-project/root/pull/11650#issuecomment-1330379864,4,['test'],"['test', 'testLikelihoodGradientJob', 'tests']"
Testability,"SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/interpreter/llvm/src/tools/clang/lib/Lex/Lexer.cpp:3940: bool clang::Lexer::LexTokenInternal(clang::Token&, bool): Assertion `Result.is(tok::eof) && ""Preprocessor did not set tok:eof""' failed.; Aborted (core dumped); ```; Even though Vc.pcm is sitting right next to MathCore.pcm; export ROOT_INCLUDE_PATH does solve this problem (see the other tests in the repeater), but at least to me this behaviour or at least the error message seems questionable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:4332,test,tests,4332,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,1,['test'],['tests']
Testability,SimpleRootcp3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411059605:3889,test,testReport,3889,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411059605,1,['test'],['testReport']
Testability,SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411059605:4161,test,testReport,4161,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411059605,1,['test'],['testReport']
Testability,"So @jblomer naively asked ""what about ZLIB"", and it turns out to be equally wrong... I also added a test that at least catches the compression side of things. For the decompression, it's a bit harder because it's not clear how to check if the library read more bytes than it should have (without it running into errors because of decompression errors).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14523#issuecomment-1923740442:100,test,test,100,https://root.cern,https://github.com/root-project/root/pull/14523#issuecomment-1923740442,1,['test'],['test']
Testability,"So I finally managed to get back to this and try a few things and as a result in my tests I managed to go from 82 MB of overhead to 62 MB. See https://github.com/root-project/root/pull/13641 for the actual code. While there is still a few things to cleanup, I think what I have is fairly general and quite self contained change, so I would appreciate feedback and if people like it, instructions on how to proceed to make sure this ends up upstream. The solution is based on a newly introduced `PagedVector<T>` which allows registering callbacks which get invoked whenever the associated range is accessed the first time. At such point, the range is actually allocated and each element of the range is passed to the callback. Initially I developed a mechanism to be general enough to do complex initialisations of the elements, however I later realised this is not actually needed. In order to optimise the issue with the large vectors `TypesLoaded` and `DeclsLoaded` one only needs to have something which does the default construction of their elements for ranges which are small enough to avoid to large upfront allocations. The code which is currently there in root / clang is already smart enough to lazily initialise only the elements which are actually needed, so the whole issue is to find a good tradeoff between number of ranges and sparse enough ones. A few caveats:. - `PagedVector` is a bad name, I agree. Suggestions are welcome.; - At the moment the implementation allows generic callbacks for ranges, however as I said we only need default initialisation. Removing such flexibility should buy another 1 MB from my test.; - In case `DeclID*` and `QualType` can default to all 0, one could probably achieve the same result in a more elegant way using calloc / realloc.; - There are probably other vectors which can be optimised in the same way, in particular IdentifiersLoaded as already mentioned by @vgvassilev. Comments?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1715921216:84,test,tests,84,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1715921216,2,['test'],"['test', 'tests']"
Testability,"So indeed this other test does not work; ```python; import ROOT. ROOT.gInterpreter.Declare(r'''; struct A{; int mA{42};; A() {}; A(const A&) = delete;; template<typename T = int>; A(A &&) {}; };; int foo(A a = A{}) { return a.mA; }; '''). print(ROOT.foo()); ```; ```; input_line_36:18:45: error: call to deleted constructor of 'A'; new (ret) (int) (((int (&)(A))foo)(*(A*)args[0]));; ^~~~~~~~~~~~; input_line_35:5:5: note: 'A' has been explicitly marked deleted here; A(const A&) = delete;; ^; ```. Also, it seems to me that indeed in the case of a templated move constructor, the AST generated by clang simply does not report it in the class definition data, see [this example](https://godbolt.org/#z:OYLghAFBqd5QCxAYwPYBMCmBRdBLAF1QCcAaPECAMzwBtMA7AQwFtMQByARg9KtQYEAysib0QXACx8BBAKoBnTAAUAHpwAMvAFYTStJg1DIApACYAQuYukl9ZATwDKjdAGFUtAK4sGIAMykrgAyeAyYAHI%2BAEaYxCAA7KQADqgKhE4MHt6%2BASlpGQKh4VEssfFJdpgOmUIETMQE2T5%2BgVU1AnUNBMWRMXGJtvWNzbltwz1hfWUDCQCUtqhexMjsHAoExF4OANQAgiYJVhp7O2c7YQQ7LAdHkmaHACIm/sen53sQczuHVgnPJ3O%2BwgaAYG325gAbN8Xo8dlh6ARMC83kCkSxkgYkS83AQAJ7JRisTA7AAqP38cMuL2wJkBHwgpyhUJhRyedNuz1eHMuO34qEZOyYFLhtz%2Bj1ZFh2xEwBGWDCFADobiifv8ORwFrROABWXh%2BDhaUioThuazWHYKJYrEnmfw8UgETSahYAaxAZh1%2Bk4kn1zuNnF4ChAGkdzoWcFgSDQGLocXIlBjyTj8WQBiMXEhGiYCiUjT4dCRxGDEGi/uiYQaeM4DorzGIeIA8tFtNUndxeDG2IJGwxaNXDbwsNEvMA3GJaMGO6QsCxDMBxIOZ3gZTUAG6YKdGzCqapeJE13iXTDape0PDRYhVjxYf2bPAsQ8LKgGYAKABqeEwAHdG4SDQ6/CCCIYjsFIMiCIoKjqEuuhcPo84oOalj6BewaQAsqDJI4AhTrwqAbsQxB4Fg6FfLYJ5tpkLgMO4ngtBIZhBLRvSlOUICQvk6Q4Vk9G5FwTGpNxmSsf08Sce0PFdCMfF%2BAJFH2FJEyiTM4lDN0oxyUxGzdCp7HQosyyrBIWq6n6S4mhwOyqAAHJCAC0kKSDsabzjsmaKhonk7BAOZ5jxCjfBAuCECQPxmPacy8O2WhzG6HpeqevqkAaRqWUGIZhoOEYwIgIBLAQyT7gmIKoLG9DEBExKcLZDlOTswDIMg7n%2BIqZi8Jg%2BBEMR6B6EBwiiOI4H9VBaj%2BnBpDfleyRPt6HB6il/qWY2%2B5FVcqBUNZdmOc5rlGO5kKed5vm5nEAVBR45VxOFkXReG8VcIqCTPTqZhmAAnP4OrPe9NmZpxSXmWlga2JlMWaqQkZ5TmBAlUmKZVWwNXbfVe3AAdR0aD5flnZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14426#issuecomment-1917903939:21,test,test,21,https://root.cern,https://github.com/root-project/root/pull/14426#issuecomment-1917903939,1,['test'],['test']
Testability,"Some debug symbols seem to be missing so we don't have line number information, but this log is already enough to confirm my hypothesis above: 2.9 GB come from std::vector allocations performed by `RDF::FillHelper::Exec<ROOT::VecOps::RVec<float>, 0>`. The simplest workaround is to specify a binning for the histograms. I am not sure whether this is a common enough problem to warrant a fix in RDF if the fix involves thread synchronization or other potential performance pessimizations. Alternatively, if we can come up with a mutex-free algorithm to automatically select binnings that are compatible among threads that might be the best option -- some related discussion on this topic is [here](https://sft.its.cern.ch/jira/browse/ROOT-8883). Moving this to priority ""default"" since there is a workaround. EDIT: another workaround is to run on fewer events, which might be reasonable since this kind of usecase is typically part of an exploratory phase of the analysis.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6676#issuecomment-716447711:89,log,log,89,https://root.cern,https://github.com/root-project/root/issues/6676#issuecomment-716447711,1,['log'],['log']
Testability,"Something went wrong, it looks like you merged the master branch into your feature branch. We need to have one (or more) commit of yours on top of the master branch, like this:. ![image](https://user-images.githubusercontent.com/10999034/150794127-6b77d3bf-9a8d-4d8e-b697-134e1c51c426.png). Instead the current situation is:. ![image](https://user-images.githubusercontent.com/10999034/150794245-1d6abf5e-2011-43fa-b598-8bb4a55c4f35.png). Usually I use `git rebase --interactive` from the command line to fix these kind of issues, see e.g. https://www.sitepoint.com/git-interactive-rebase-guide/ . To display the state of the repository I use a custom git log command that basically runs `git log --graph --decorate --oneline --abbrev-commit`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9650#issuecomment-1020120699:656,log,log,656,https://root.cern,https://github.com/root-project/root/pull/9650#issuecomment-1020120699,2,['log'],['log']
Testability,"Sorry Olivier, I missed your reply. The loop was just to see if the offset of 4 pixels appeared always, or only if the canvas was big enough. Or also to see if the offset was proportional to canvas size or not. I am not creating PNGs in the snippet above, but rather looking at the graphics are size without borders, which is what the PNG should become later. I took the logic out of the ROOT documentation:. ```; To define precisely the graphics area size of a canvas in the interactive mode, the following four lines of code should be used:; {; Double_t w = 600;; Double_t h = 600;; auto c = new TCanvas(""c"", ""c"", w, h);; c->SetWindowSize(w + (w - c->GetWw()), h + (h - c->GetWh()));; }. and in the batch mode simply do:; c->SetCanvasSize(w,h);; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11004#issuecomment-1618360139:371,log,logic,371,https://root.cern,https://github.com/root-project/root/issues/11004#issuecomment-1618360139,1,['log'],['logic']
Testability,"T!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; python3:.../root-6.27.01/interpreter/llvm/src/tools/clang/lib/Basic/FileManager.cpp:301: llvm::Expected<clang::FileEntryRef> clang::FileManager::getFileRef(llvm::StringRef, bool, bool): Assertion `Redirection.second->V.get<FileEntry *>() == &UFE && ""filename from getStatValue() refers to wrong file""' failed.; error: subprocess-exited-with-error; ; Ã— python setup.py egg_info did not run successfully.; â”‚ exit code: -6; â•°â”€> See above for output.; ; note: This error originates from a subprocess, and is likely not a problem with pip.; full command: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/python3/3.9.6-67e5cf5b4952101922f1d4c8474baa39/bin/python3 -c '; exec(compile('""'""''""'""''""'""'; # This is <pip-setuptools-caller> -- a caller that pip uses to run setup.py; #; # - It imports setuptools before invoking setup.py, to enable projects that directly; # import from `distutils.core` to work with newer packaging standards.; # - It provides a clear error message when setuptools is not installed.; # - It sets `sys.argv[0]` to the underlying `setup.py`, when invoking `setup.py` so; # setuptools doesn'""'""'t think the script is `-c`. This avoids the following warning:; # manifest_maker: standard file '""'""'-c'""'""' not found"".; # - It generates a shim setup.py, for handling setup.cfg-only projects.; import os, sys, tokenize; ; try:; import setuptools; except ImportError as error:; print(; ""ERROR: Can not execute `setup.py` since setuptools is not available in ""; ""the build environment."",; file=sys.stderr,; ); sys.exit(1); ; __file__ = %r; sy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1154135015:2699,test,tests,2699,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015,2,['test'],"['testBuildDir', 'tests']"
Testability,T.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411084210:2941,test,testReport,2941,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411084210,1,['test'],['testReport']
Testability,TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root/m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414956948:3283,test,testReport,3283,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414956948,1,['test'],['testReport']
Testability,"TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](ht",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:2668,test,test,2668,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['test']
Testability,TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/); - [projectroot.core.base.test.gtest_core_base_test_CoreBaseTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.base/test/gtest_core_base_test_CoreBaseTests/); - [projectroot.core.cont.test.gtest_core_cont_tes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:3260,test,testReport,3260,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,1,['test'],['testReport']
Testability,Test failure in `alma9-clang` unrelated:; ```txt; TEST FAILURES:; 470:gtest-tree-dataframe-test-dataframe-simple; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16385#issuecomment-2337861300:91,test,test-dataframe-simple,91,https://root.cern,https://github.com/root-project/root/pull/16385#issuecomment-2337861300,1,['test'],['test-dataframe-simple']
Testability,"Test failures were due to a dirty build directory. I logged into the node, ran `cmake .`, and the headers were then found. If the headers are not found in other builds, please clear the build directory of the affected node(s), so that the roottest targets get recreated.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/851#issuecomment-321595336:53,log,logged,53,https://root.cern,https://github.com/root-project/root/pull/851#issuecomment-321595336,1,['log'],['logged']
Testability,"Thank you @jalopezg-r00t :partying_face: I'll rebase the commits shortly and a bit indiscriminately. > I would just suggest testing it again on `olsky-03` or similar, when available. All clear on our (thankfully operational) HPE cluster with daos / libdaos 2.2.0.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11480#issuecomment-1312341311:124,test,testing,124,https://root.cern,https://github.com/root-project/root/pull/11480#issuecomment-1312341311,1,['test'],['testing']
Testability,"Thank you so much @eguiraud for the comments! I have addressed all of them and updated the commits accordingly, also splitting them in smaller commits to make intentions clearer. New tests are still missing, but I would appreciate if you could take another look. In particular, these changes hopefully streamline the code a bit:; * `rdf_uuid`: this was previously not well named, since we need something that contains both an identifier for the current RDataFrame instance and also one for the current (distributed) execution of that RDataFrame (e.g. to separate to consecutive triggers of the computation graph). I have added the type `ExecutionIdentifier` that holds both. This class is now used everywhere (in Ranges.py, HeadNode.py) and should improve readability.; * I merged `CloneResultPtr` and `CloneResultMap` into `CloneResultAndAction`. This helps making the logic in DistRDF more simple (i.e. is what allows the usage of `singledispatch` to distinguish different ways of cloning actions of the distributed computation graph).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12363#issuecomment-1581162133:183,test,tests,183,https://root.cern,https://github.com/root-project/root/pull/12363#issuecomment-1581162133,2,"['log', 'test']","['logic', 'tests']"
Testability,"Thanks a lot @pcanal for this improvement: experiments will appreciate. Given that we still run, with somewhat lower frequency than others, 6.26 builds and tests, would a simple test for 6.26 be of help in roottest?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15006#issuecomment-2010652089:156,test,tests,156,https://root.cern,https://github.com/root-project/root/pull/15006#issuecomment-2010652089,2,['test'],"['test', 'tests']"
Testability,"Thanks a lot, Vassil. It is still work in progress. It implies a lot of changes and I thought it better if I could receive feedback the earliest possible. There will be tests and I'll try to improve the documentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/567#issuecomment-301234996:169,test,tests,169,https://root.cern,https://github.com/root-project/root/pull/567#issuecomment-301234996,1,['test'],['tests']
Testability,"Thanks for the comment. At this point this issue seems to conflate two things: ; 1. The dependencies of python tests. This should have been addressed by #16555 ; 2. The missing symbols. If 1. is confirmed to be solved, I would say that at least this issue ought to be closed and one about missing symbols opened. However, even if an issue dedicated to the missing symbols is opened, it's not clear, at least to me, how the problem can be reproduced. So far we have no indication of it in our CI: can it be due to a somewhat imprecise formulation of the python dependencies in the `requirements.txt` file that affects your platform?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16553#issuecomment-2384870116:111,test,tests,111,https://root.cern,https://github.com/root-project/root/issues/16553#issuecomment-2384870116,1,['test'],['tests']
Testability,Thanks for the feedback Philippe and Danilo!; will modify it and send the corresponding tests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/864#issuecomment-322990975:88,test,tests,88,https://root.cern,https://github.com/root-project/root/pull/864#issuecomment-322990975,1,['test'],['tests']
Testability,"Thanks for the patch, Advait!. My thoughts: If the function is added to ROOT as is, I'd implement it in the header and simply `return a==b`. The C/C++ cast from `bool` to `int` is effectively a Kronecker Delta. That said, I'm not sure if the function as such does in practice what users expect. Floating point values are hardly ever exactly equal, but usually one tests for them to be equal within +/ epsilon. I'll assign to @lmoneta.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8719#issuecomment-886443983:364,test,tests,364,https://root.cern,https://github.com/root-project/root/pull/8719#issuecomment-886443983,1,['test'],['tests']
Testability,"Thanks for the quick feedback!. I've tried with `client.wait_for_workers(1)` before creating the RDF, but it doesn't have the expected effect: it just waits forever after printing `DEBUG:Starting job: 12241446.0` (debugging activated with `import logging; logging.basicConfig(format='%(levelname)s:%(message)s', level=logging.DEBUG)`). I can see the job in `condor_q` come and go, but the blocking call is never released for some reason (note that I'm not a Dask expert by any means). I'll try again once #9431 is merged; in particular I'm interested in using Dask's [adaptive worker management](https://jobqueue.dask.org/en/latest/advanced-tips-and-tricks.html#how-to-handle-job-queueing-system-walltime-killing-workers), so that the exact number of submitted jobs is not fixed a priori but automatically adapts to the workload...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9429#issuecomment-992593304:247,log,logging,247,https://root.cern,https://github.com/root-project/root/issues/9429#issuecomment-992593304,3,['log'],['logging']
Testability,"Thanks for the review @eguiraud , regarding :. > the _extra_args relay logic could be documented a bit better (I'm not sure MethodTemplateWrapper's init method needs to take extra_args as argument, but MethodTemplateGetter's docs should mention that the extra_args are passed when constructing the wrapper_class instance. I think this is already clear enough in the docs of `__get__` in `MethodTemplateGetter`:; ```; Returns:; instance of MethodTemplateWrapper subclass: contains a handle to; the original implementation of the method template that is; bound to `instance` and, possibly, some extra arguments to be; used when receiving a call.; ```; also `_extra_args` is documented as:; ```; _extra_args (tuple): extra arguments to be used by the wrapper object; when receiving a call.; ```; And the extra args need to be passed when constructing the getter, so they can be passed to the wrapper (the user that is pythonizing a class only deals with the getter).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10341#issuecomment-1094750476:71,log,logic,71,https://root.cern,https://github.com/root-project/root/pull/10341#issuecomment-1094750476,1,['log'],['logic']
Testability,"Thanks for the review! No, there is no unit test for this IO rule, but I tested it locally. I don't think it's worth it to include a test for this simple IO rule, because such a test also always needs a file storing an object of the old class version, and I think it's not good to have too many binary files in the repository without strong reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10909#issuecomment-1181836400:44,test,test,44,https://root.cern,https://github.com/root-project/root/pull/10909#issuecomment-1181836400,4,['test'],"['test', 'tested']"
Testability,"Thanks for the review!. > Are all RooStats tutorials dependent on XML ? I think some of them, not using the HIstFactory to create the input workspace, could work without XML. Anyway for simplicity is probably better excluding all if XML is not present. No, not all of them. In the past, I think Windows was built without XML, so it was more important to be pedantic with the vetos there to have at least some test coverage of RooStats on Windows. Nowadays, no test configuration has `xml=OFF` anyway. > Thanks for simplifying the rs401d to use the RooGenericPdf. In the past it was too slow to use with CINT the generic PDF, now with Cling should not be a problem. Yes, I measured the timing, and there was no slowdown from using `RooGenericPdf` in this particular case!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14074#issuecomment-1818475645:409,test,test,409,https://root.cern,https://github.com/root-project/root/pull/14074#issuecomment-1818475645,2,['test'],['test']
Testability,"Thanks for these changes. I apologise for coming back to them so late. ; I would like to hear also what @pcanal has to say about the mechanics of the code, however the change seems a net improvement with respect to the current situation. I would like to start pointing out a few aspects of the PR which could be improved before merging (if consensus in the review is reached):; - There is one test failure, on all platforms but windows: do you need help to figure out why the test is failing?; - The number of commits seem to high, can they be squashed together into fewer commits (one commit) with clear commit messages?; - There is no test for the functionality: can one or more tests be added in roottest? If you need some examples, we can dig them out for you (in the `root/meta/` directory one should have plenty of examples)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14813#issuecomment-2038169206:393,test,test,393,https://root.cern,https://github.com/root-project/root/pull/14813#issuecomment-2038169206,4,['test'],"['test', 'tests']"
Testability,"Thanks to @bellenot for providing the Windows part. I have squashed it into the main commit and added a `Co-Authored-By: Bertrand Bellenot @bellenot` line (hope, that's the best way to give credit?). > BTW, do we have any specific test for this?. If I should write tests (sounds like everything else is fine), I could need a small bit of guidance (could you point me at a test, that I could learn from / extend?). Also rebased.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-801033691:231,test,test,231,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-801033691,3,['test'],"['test', 'tests']"
Testability,"Thanks, @pcanal. I will move the code. Hopefully after that we can merge. I also had a request to test this “across the ocean”, so if you could try to compare before/after by running something simple using data at CERN (or let me know of a file publicly avaiable via XRootD in Fermilab or other location in the US), I would appreciate it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1308989870:98,test,test,98,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1308989870,1,['test'],['test']
Testability,"Thanks. We have slightly different systems and configs; ```; System: Darwin-24.1.0; ROOT Platform: macosx; ROOT Architecture: macosxarm64; Processor: 8 core Apple M2 (arm64); Build type: Release; Install path: /install/; Compiler: AppleClang 16.0.0.16000026; C++ standard: 20; Compiler flags:; -- ; - C: -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread; - C (build type specific): -O3 -DNDEBUG; - C++: -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++; - C++ (build type specific): -O3 -DNDEBUG; -- Linker flags:; - Executable: -mmacosx-version-min=15.1; - Module: ; - Shared: ; ```. For the moment, I cannot yet reproduce the issue on our devel/build nodes. As you saw, I added in the loop our Apple and graphics expert in the loop. Do you manage to start a browser when starting root in batch mode, i.e. `root -b` (as a test, of course it's not overly useful for the user experience)?; I can propose a temporary workaround to unblock you: could you try to boot root enabling web graphics (still experimental): `root --web`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16428#issuecomment-2350896986:1106,test,test,1106,https://root.cern,https://github.com/root-project/root/issues/16428#issuecomment-2350896986,1,['test'],['test']
Testability,"That is not quite surprising as the problem is likely to do with some type of schema evolution (particularly sensitive to this set of change are map/multimap where the key or value is an enum). In addition to having a simpler example, you could consider trying out https://github.com/root-project/root/pull/10230 which contains all the fixes I have been making (and is currently passing all but one of the tests I have/examples).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1086030662:406,test,tests,406,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1086030662,1,['test'],['tests']
Testability,"That will be hard to respect, because that means unless we introduce a new `testsupport=OFF` configuration flag, gtest would always be a dependency of ROOT with `-fail-on-missing=ON` then. I don't see at the moment how I can respect all of these constraints:. 1. Keep configuration simple by not introducing new build flags; 2. Make `ROOT_ADD_GTEST` fully usable in downstream code even if ROOT was not built with unit tests; 3. Don't add `gtest` as an unavoidable build dependency of ROOT if you have `fail-on-missin=ON`; 4. Respect `fail-on-missing`. Which of these constraints should be relaxed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16612#issuecomment-2396463790:76,test,testsupport,76,https://root.cern,https://github.com/root-project/root/issues/16612#issuecomment-2396463790,2,['test'],"['tests', 'testsupport']"
Testability,"That's an option. Inevitably, we will need some common infrastructure which is ROOT-specific for the root.git test and we will have to solve this sooner or later. For the particular tests we are refactoring, I'd like to keep them in root.git for the usual reasons such as they run fast and are part of the commit history which makes changes a lot clearer. In that case I will have to keep the code duplication or drop the checks for diagnostics.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5297#issuecomment-615066525:110,test,test,110,https://root.cern,https://github.com/root-project/root/pull/5297#issuecomment-615066525,2,['test'],"['test', 'tests']"
Testability,"The [documentation](https://cmake.org/cmake/help/latest/command/enable_language.html) says:. > Enable a language (CXX/C/Fortran/etc); >; >**enable_language(<lang> [OPTIONAL] )**; >This command enables support for the named language in CMake. This is the same as the; >project command but does not create any of the extra variables that are created by the; >project command. Example languages are CXX, C, Fortran.; >; >This command must be called in file scope, not in a function call. Furthermore, **it must; >be called in the highest directory common to all targets using the named language**; >directly for compiling sources or indirectly through link dependencies. It is simplest to; >enable all needed languages in the top-level directory of a project.; >; >The **OPTIONAL** keyword is a placeholder for future implementation and **does not currently work**. So, should we just add this logic directly into the top `CMakeLists.txt` file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/891#issuecomment-325334622:891,log,logic,891,https://root.cern,https://github.com/root-project/root/pull/891#issuecomment-325334622,1,['log'],['logic']
Testability,"The code looks fine to me. I don't think using vector::reserve is needed in this case. . It would be nice to test the performance in a complex fix which takes some time and uses heavily the cache, The tutorial are maybe too simple and the fitting is too fast. ; If you can maybe simplify your workspace and make a standalone running example would be great. ; Also, did you observe a substantial performance penalty when creating the std::vector in recalculateCache instead of having as a data member of the class ? . Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/116#issuecomment-293337111:109,test,test,109,https://root.cern,https://github.com/root-project/root/pull/116#issuecomment-293337111,1,['test'],['test']
Testability,The command I'm running was simply `root` to get the interactive prompt. The full output of trying to run `1+2` is below:. ```log; $ root -b -q -x -e 1+2; input_line_1:1:2: fatal error: module 'libc' imported by AST file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm' found in a different module map file (/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/etc/cling/libc.modulemap) than when the importing AST file was built (/home/cburr/mambaforge/conda-bld/root_1609268594446/work/build-dir/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; 'at_quick_exit' not defined; <<< cling interactive line includer >>>: fatal error: module file '/home/cburr/mambaforge/conda-bld/root_1609268594446/_h_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; Failed to load module ROOT_Foundation_C; Failed to load module ROOT_Rtypes; Failed to load mod,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:126,log,log,126,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,1,['log'],['log']
Testability,The first large gap (just before 4s) seems longer in the 'after'. Do we know where the other threads are stopped (and what the running thread does) both in the before and the after. Do we know where (some of) the gaps are stopped in the main regime?. > TBufferMerger random number generation test on my machine (Core i7 6700). Is that with or without the lock removed (both test are needed to get a clear view).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1251#issuecomment-343556195:292,test,test,292,https://root.cern,https://github.com/root-project/root/pull/1251#issuecomment-343556195,2,['test'],['test']
Testability,"The fix works in my standalone ROOT test. To test the integration with DD4hep and the LHCb detector, the simplest is to add it to the SFT nightlies.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11272#issuecomment-1232170822:36,test,test,36,https://root.cern,https://github.com/root-project/root/issues/11272#issuecomment-1232170822,2,['test'],['test']
Testability,"The functionality of Cache is all there. The only issue remaining is caching a cached TDF (let's call this latter ""A"") without destroying the cache of the cached (meaning ""A""). This is a side effect of the optimisation in place to deliver data with zero-copies to transformations and actions requesting it. As for testing, checking the caching works with IMT on needs to be done. The extra mile would consist in checking statically that T does not have a copy constructor and react. How to react is not completely clear to me yet. There are two ways perhaps to solve this problem: 1. Act on the container, keeping in mind that the containers which form the cache must support random access for MT execution. 2. Act on the contained type, wrapping objects in some way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1056#issuecomment-332682497:314,test,testing,314,https://root.cern,https://github.com/root-project/root/pull/1056#issuecomment-332682497,1,['test'],['testing']
Testability,"The idea for this change comes from my own experiments with upgrading LLVM during my time as student worker (and I can't reliably tell if I wrote the code during paid hours or in my free time, hence the funny list of authorships). It would allow to drop one possibly contentious patch for Clang, so I wanted to get the change out for feedback. One thing I currently don't understand are two test failures in `gtest-math-mathcore-test-CladDerivatorTests` and `gtest-hist-hist-test-TFormulaGradientTests` - but only with the second commit that removes the then unneeded patch. I can make the tests pass again by adding back only the `WasReplaced` bit:; ```diff; diff --git a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h; index 403b88ac3a..5e1581f098 100644; --- a/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h; +++ b/interpreter/llvm/src/tools/clang/include/clang/AST/Stmt.h; @@ -131,7 +131,8 @@ protected:; ; unsigned : NumStmtBits;; ; - unsigned NumStmts : 32 - NumStmtBits;; + unsigned WasReplaced : 1;; + unsigned NumStmts : 32 - (NumStmtBits + 1);; ; /// The location of the opening ""{"".; SourceLocation LBraceLoc;; @@ -1328,6 +1329,7 @@ public:; explicit CompoundStmt(SourceLocation Loc); : Stmt(CompoundStmtClass), RBraceLoc(Loc) {; CompoundStmtBits.NumStmts = 0;; + CompoundStmtBits.WasReplaced = 0;; CompoundStmtBits.LBraceLoc = Loc;; }; ; diff --git a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp; index 0a4d403106..cc8c6888b8 100644; --- a/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp; +++ b/interpreter/llvm/src/tools/clang/lib/AST/Stmt.cpp; @@ -293,6 +293,7 @@ CompoundStmt::CompoundStmt(ArrayRef<Stmt *> Stmts, SourceLocation LB,; SourceLocation RB); : Stmt(CompoundStmtClass), RBraceLoc(RB) {; CompoundStmtBits.NumStmts = Stmts.size();; + CompoundStmtBits.WasReplaced = 0;; setStmts(Stmts);; CompoundStmtBits.LBraceLoc = LB;; }; @@ -316,6 +3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7488#issuecomment-797417462:391,test,test,391,https://root.cern,https://github.com/root-project/root/pull/7488#issuecomment-797417462,4,['test'],"['test', 'test-CladDerivatorTests', 'test-TFormulaGradientTests', 'tests']"
Testability,"The problem is that RDF tries to open the file to check that it's valid. The logic for the file opening is at https://github.com/root-project/root/blob/962009b8c2057199c2229c3ef9938ac4d315d10a/tree/dataframe/src/RLoopManager.cxx#L1133 . In particular, because of the presence of the `?` token, the string is parsed as a glob. Now in many cases that would be harmless albeit a tiny overhead (it would just return the same file name to open), but in this particular case it triggers a faulty behaviour. The glob parsing attempts at traversing the remote xrootd directory (see [here](https://github.com/root-project/root/blob/962009b8c2057199c2229c3ef9938ac4d315d10a/tree/tree/src/InternalTreeUtils.cxx#L471)), but since the permission is just for the single file with the token and not for the entire directory, it leads to the `user access restricted` error you post above. Now, I believe the most sane course of action would be to refine the logic that checks whether the input file name is a glob. I could simply add a check for the `xrd.wantprot` token, but probably we want to have a more authoritative list of all the tokens that should make the file name not be parsed as a glob. This probably includes not only xrootd tokens but also anything https-related. Or we could adopt a different strategy for glob detection altogether. Thoughts @dpiparo @pcanal ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16475#issuecomment-2365248206:77,log,logic,77,https://root.cern,https://github.com/root-project/root/issues/16475#issuecomment-2365248206,2,['log'],['logic']
Testability,"The summary is simple (and still the same after applying [`38b0d88` (#16722)](https://github.com/root-project/root/pull/16722/commits/38b0d88d1d51fe914a6aff3645f03a483e31588a):. On first run in a clean directory with `BLAS` missing, we get:; ```; ctest -R gtest-tmva-pymva-TestRModelParserPyTorch; Test project /home/pcanal/root_working/build/quick-devel; Start 349: gtest-tmva-pymva-TestRModelParserPyTorch; 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ... Passed 16.11 sec. 100% tests passed, 0 tests failed out of 1. Total Test time (real) = 16.37 sec; ```; and if we immediately re-run we get:; ```; ctest -R gtest-tmva-pymva-TestRModelParserPyTorch; Test project /home/pcanal/root_working/build/quick-devel; Start 349: gtest-tmva-pymva-TestRModelParserPyTorch; 1/1 Test #349: gtest-tmva-pymva-TestRModelParserPyTorch ...***Failed 9.10 sec; ```; and the error is:; ```; [ RUN ] RModelParser_PyTorch.SEQUENTIAL_MODEL; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; indicates that on the 2nd runs, the test want symbols from the `BLAS` library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16719#issuecomment-2427294206:492,test,tests,492,https://root.cern,https://github.com/root-project/root/issues/16719#issuecomment-2427294206,3,['test'],"['test', 'tests']"
Testability,"The test failures report the file created during the test does not exist, but this node ran the test fine https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/124359/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_entrylist_enterrange/ . Probably using the same filename for multiple tests leads to a recreation/deletion of the file that is then not usable by the new test?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8740#issuecomment-895859603:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/8740#issuecomment-895859603,7,['test'],"['test', 'testReport', 'tests']"
Testability,"The test h2 shows how to generated animated gif from snapshots of the canvas without taking a lock (but by using the gThreadXAR mechanism ... which we probably need to (eventually) 'replace'). If there is no easy and/or clear translation of this example, I recommend we keep it until such a time where we have a clear replacement. Thanks,; Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1531#issuecomment-359073042:4,test,test,4,https://root.cern,https://github.com/root-project/root/pull/1531#issuecomment-359073042,1,['test'],['test']
Testability,This PR is now fine and can be merged. I will add now also a simple test for the new mod. operator,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/977#issuecomment-349961499:68,test,test,68,https://root.cern,https://github.com/root-project/root/pull/977#issuecomment-349961499,1,['test'],['test']
Testability,"This PR looks a big improvement in fixing #7890 and #7933. Here are some test results run on Ubuntu 20. - Test create/delete a RooArgSet, simple example shown in #7933. - with current mater (i.e. including #7904 and #7935): ; - Time to create/delete 10M RooArgSet : 125 sec; - Increase of Memory ~ 1 GB; - with master + this PR: ; - Time to create/delete 10M RooArgSet : 0.8 sec; - total memory increase + 25 Mb); - using 6.15 (before including current MemPoolForRooSets (-> #2866 ); - Time to create/delete 10M RooArgSet : 2.9 sec; - memory increase : 0 ; ; - Running RooStats toy generation + likelihood evaluation on Histfactory tutorial model using in totoal 300k toys: ; ```; StandardHypoTestInvDemo(""$ROOTSYS/tutorials/histfactory/results/example_combined_GaussExample_model.root"",""combined"",""ModelConfig"","""",""obsData"",0,0,true,2,0,5,100000); ```. - master : Time: 344 sec Memory : ~ 3.5 GB; - master + this PR : Time: 157 sec Memory: 570 Mb; - 6.15 Time: 197 sec Memory: 240 Mb; . Runing the master on MacOsX, I have observed a much smaller memory increase, but a much longer time spent with allocating/deallocating RooArgSet's when their total count increases.; This is not observed anymore after applying this PR. So in conclusion:. - this PR fixes the increase time spent in allocate/deallocate RooArgSet over time, which will slow down toys analysis when number of toys increase; - there is still some increase in memory usage, but it is much smaller than before.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7954#issuecomment-824721395:73,test,test,73,https://root.cern,https://github.com/root-project/root/pull/7954#issuecomment-824721395,1,['test'],['test']
Testability,"This PR solves the problem of documenting our python requirements and adding a test that checks if we satisfy them at runtime. #5938 solves three main problems (plus a couple smaller things): a bug in an RDF tutorial, a bug in the vetoing of tutorials, and it adds a nice-to-have, namely having a single test fail that's clearly called ""test-if-numba-is-there"" rather than having all numba tests red. If what I said above is in the ballpark of correct, there is no conflict with #5938. so I still think this PR could go in modulo the missing requirements -- consider my approval conditional to agreeing on what should go in requirements.txt (i'll stay out of the discussion about whether pandas should be in there or not :D)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5408#issuecomment-654947753:79,test,test,79,https://root.cern,https://github.com/root-project/root/pull/5408#issuecomment-654947753,4,['test'],"['test', 'test-if-numba-is-there', 'tests']"
Testability,"This broke the tests:; ```; 729: Processing /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C...; 729: In file included from input_line_10:1:; 729: /home/jhahnfel/ROOT/src/tutorials/graphs/scatter.C:39:43: error: use of undeclared identifier 'scat'; 729: TPaletteAxis *palette = (TPaletteAxis*)scat->GetGraph()->GetListOfFunctions()->FindObject(""palette"");; 729: ^; ```. Tutorials are executed as part of the CI and therefore should *never* be merged with `[skip-ci]`! The simple fix is in https://github.com/root-project/root/pull/15923.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15871#issuecomment-2188647929:15,test,tests,15,https://root.cern,https://github.com/root-project/root/pull/15871#issuecomment-2188647929,1,['test'],['tests']
Testability,"This is an interesting situation. The build on mac12arm/cxx20 did not fail, it's ""unstable"". All tests pass but there are warnings triggered by TBB. The version is simply too old (2019). On Mac13, cxx17 or cxx20, TBB does not even build. A PR is coming to propose a fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13720#issuecomment-1735428320:97,test,tests,97,https://root.cern,https://github.com/root-project/root/pull/13720#issuecomment-1735428320,1,['test'],['tests']
Testability,"This is really good stuff. ARM nodes are appearing on WLCG and testing on that platform will automatically improve the sw stacks of LHC experiments. The test failure needs some thinking but it does not seem a complex issue. If I may suggest this, I would also make sure that a clear indicator of the platform appears in the label of the build (""ARM"", ""Aarch""...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16526#issuecomment-2375944990:63,test,testing,63,https://root.cern,https://github.com/root-project/root/pull/16526#issuecomment-2375944990,2,['test'],"['test', 'testing']"
Testability,"This is the manifestation of a known problem with the `std::string_view` converters, that can be reproduced without RDataFrame:; ```Python; import ROOT; import cppyy. cppyy.cppdef(""""""; void foo(std::string_view input) { std::cout << input << std::endl; }; """"""). my_string = cppyy.gbl.std.string(""test""). cppyy.gbl.foo(my_string); ```; You'll see that the output in ROOT 6.32 is empty, meaning the `string_view` is not correctly initialized. This causes the RDF code to crash. This problem was already fixed in upstream cppyy, and we have a PR open to apply these fixes:; https://github.com/root-project/root/pull/16212. However, the fix is breaking some other tests, so we can't apply them yet. Thanks for the report though, because this makes it clearer how #16212 needs to be prioritized. In the meantime, the workaround is to convert your `std::strings` into Python strings, because the conversion to `std::string_view` works for them:; ```python; for col in cols:; print(col); print( tmprdf.GetColumnType(str(col) )); ```; This workaround is also backwards compatible.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16298#issuecomment-2306614607:296,test,test,296,https://root.cern,https://github.com/root-project/root/issues/16298#issuecomment-2306614607,2,['test'],"['test', 'tests']"
Testability,"Unrelated note. > auto view = ntuple->GetView<float>(""double"");; > modelA->MakeField<std::int32_t>(""int"", 42);. We strive/want to have the name of the column to be usable identifiers (so that they can be used in reading code as-if they actually were identifier (See TTree::Draw syntax and RDataFrame). Could you (likely in a separate/new PR) update the test/example to not use just the datatype as column names?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8227#issuecomment-846080791:353,test,test,353,https://root.cern,https://github.com/root-project/root/pull/8227#issuecomment-846080791,1,['test'],['test']
Testability,"Using `.L` or `__attribute__((constructor))` or static initialization are good alternatives. However that does not improve usability of `.x` .; As mentioned in the first post, entry function still need renaming when file get renamed.; Also we get function redefinition error when `.x` or `.L` two scripts with same name. For example `dir0/test.C` and `dir1/dir2/test.C` (with completely different content) cannot both define their `test(...)` entry functions. They cannot be put into different namespaces either otherwise cling does not recognize them as entry functions. However, `__main__(...)` approach suffers from multiple definitions too. Unless cling unloads/drops symbol `__main__` after executing it (btw. In this case will static variables of `__main__` get destructed too?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11299#issuecomment-1235581331:339,test,test,339,https://root.cern,https://github.com/root-project/root/issues/11299#issuecomment-1235581331,3,['test'],['test']
Testability,"Very nice PR. Thank you very much for your contribution!; Could you also please provide a simple test, to be sure the transformation is doing the right thing ? ; Thank you",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4141#issuecomment-527153019:97,test,test,97,https://root.cern,https://github.com/root-project/root/pull/4141#issuecomment-527153019,1,['test'],['test']
Testability,Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://epsft-jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:3087,test,test,3087,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['test']
Testability,"We are still discussing the names. The current proposal is:; ```; using TFilePtr = std::unique_ptr<TFile>;. /// Open a file with `name` for reading.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr OpenForRead(std::string_view name, const Options_t &opts = Options_t());. /// Open an existing file with `name` for reading and writing. If a file with; /// that name does not exist, an invalid RFilePtr will be returned.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr OpenForUpdate(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. Fail (return an invalid; /// `RFilePtr`) if a file with this name already exists.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr Create(std::string_view name, const Options_t &opts = Options_t());. /// Open a file with `name` for reading and writing. If a file with this name; /// already exists, delete it and create a new one. Else simply create a new file.; ///; /// \note: Synchronizes multi-threaded accesses through locks.; static TFilePtr Recreate(std::string_view name, const Options_t &opts = Options_t());; ```. In the meantime, you should indeed start getting familiar with the testing infrastructure. See io/io/test for some examples.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14017#issuecomment-1821818413:1299,test,testing,1299,https://root.cern,https://github.com/root-project/root/pull/14017#issuecomment-1821818413,2,['test'],"['test', 'testing']"
Testability,"We really only want Google tests in root.git (I realize I did not word that clearly enough), so I will apply your test (thanks!) to our dedicated roottest.git repo. Could you split the test into a separate commit? That way I don't mess with your changes as much :-) Or if you don't mind me messing with your commits I can also split this myself - let me know.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7031#issuecomment-804060890:27,test,tests,27,https://root.cern,https://github.com/root-project/root/pull/7031#issuecomment-804060890,3,['test'],"['test', 'tests']"
Testability,"Well, actually it was less work than I thought.; I implemented now all the additions, changes and suggestions from @lmoneta. I used now std::vector everywhere it's features are useful. For the rest I stayed with using arrays to stay similar to all other TGraph objects. I moved the functions GetPointX, GetPointY, SetPointX, SetPointY and GetObjectInfo to the TGraph class because they apply to any TGraph object and only were in my custom class cause I could not implement them in TGraph without using a custom Root installation. I replaced the funtion SetNErrorDimensions by the functions AddYError and DeleteYError as proposed by @lmoneta. Since I think the meaning of ""dimension"" might not be 100% clear, I exchanged it to a term claryfing that it corresponds to different y errors. Besides that I implemented some further features and fixed a memory leak in the function PaintGraphMultiErrors in the TGraphPainter class. I also added a test macro testing the most critical features like streaming the class, adding / deleting points and y errors and the summation of y errors for fitting with different methods.; Furthermore, I added a small tutorial macro that shows how to use the basic functionalities of the class.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3452#issuecomment-559211358:941,test,test,941,https://root.cern,https://github.com/root-project/root/pull/3452#issuecomment-559211358,2,['test'],"['test', 'testing']"
Testability,"Well, one thing that is clear is that this problem seems to be associated with specific sites. For my 'test' job:. [test job](https://bigpanda.cern.ch/task/23578674/). The sites that are successful either have local reading, or they use xrootd without problems. The latter are: ; SWT2_CPB; IN2P3-LPSC_LAKE; RAL. For the failures, these are all just xrootd problems, at sites:; IN2P3-CPPM; CERN-T0; TOKYO; BNL. So I would suspect some difference in the xrootd installation between these two sites. (I personally have no idea how to check this.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-747328346:103,test,test,103,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-747328346,2,['test'],['test']
Testability,"Well, this simple example works just fine for me on Windows and CentOS7:; ```; void testSignalSlot(); {; TGMainFrame *mainframe = new TGMainFrame(gClient->GetRoot(), 300, 170);; TGCheckButton *myTGCheckBox = new TGCheckButton(mainframe, new TGHotString(""Change Text""), -1);; mainframe->AddFrame(myTGCheckBox, new TGLayoutHints(kLHintsCenterX | kLHintsCenterY));; TGTextButton *myButton = new TGTextButton(mainframe, ""&Any Text"");; mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));; myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");; mainframe->MapSubwindows();; mainframe->Layout();; mainframe->MapWindow();; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7195#issuecomment-779084167:84,test,testSignalSlot,84,https://root.cern,https://github.com/root-project/root/issues/7195#issuecomment-779084167,1,['test'],['testSignalSlot']
Testability,"What I did with definitions is a bit too simple. If you use `target_add_defintions` (only possible for imported interface targets in CMake 3.11+), CMake strips the `-D` if there is one. If you directly set the property, however, it's up to the user to strip it. I'm still interested in the result of this test build, but I'll need to fix the definitions addition before continuing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1959#issuecomment-385710986:305,test,test,305,https://root.cern,https://github.com/root-project/root/pull/1959#issuecomment-385710986,1,['test'],['test']
Testability,"While benchmarking the change I discovered something fascinating.; This simple benchmark only tests retrieval of a custom column:; ```c++; TDataFrame d(1000000000ull);; d.Define(""ans"", [] { return 42; }); .Foreach([](int) {}, {""ans""});; ```. The relevant code path that changes between master and this PR is the following:; ```patch; T &TColumnValue<T>::Get(Long64_t entry); {; - if (!fReaderValues.empty()) {; - return *(fReaderValues.back()->Get());; - } else {; - fCustomColumns.back()->Update(fSlot, entry);; - return fIsDataSourceColumn ? **fDSValuePtrs.back() : *fCustomValuePtrs.back();; + switch (fColumnKind) {; + case EColumnKind::kTreeArray: /*dealt with in the other `Get` overload*/; + case EColumnKind::kTreeValue: return *(fReaderValues.back()->Get());; + case EColumnKind::kCustomColumn: fCustomColumns.back()->Update(fSlot, entry); return *fCustomValuePtrs.back();; + case EColumnKind::kDataSource: fCustomColumns.back()->Update(fSlot, entry); return **fDSValuePtrs.back();; }; +; ```; Looks _faster_ right?. On my workstation `perf stat` yields the following instruction counts and runtimes (single-thread executable compiled with `-g -O2`):; ```; # MASTER; 99,494,923,915 instructions:u; 9.844 seconds. # PR; 103,495,337,205 instructions:u; 11.049 seconds; ```. The `switch-case` is sensibly slower and results in more cpu instructions than the `if-else` over `std::vector::empty` on this artificial yet very representative benchmark. I thought this might have been a cache-friendliness issue and was almost ready to give up on this PR, but luckily plotting stacktraces showed that the culprit is inlining:. **MASTER**; ![image](https://user-images.githubusercontent.com/10999034/30910728-3b607ff4-a386-11e7-928e-6a404a485cf6.png). **PR**; ![image](https://user-images.githubusercontent.com/10999034/30910790-7f808562-a386-11e7-90f9-f1417c712f86.png). The `Get` method is not inlined when it contains the `switch-case`!; I will come up with a change that maintains inlining intact s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1060#issuecomment-332489724:6,benchmark,benchmarking,6,https://root.cern,https://github.com/root-project/root/pull/1060#issuecomment-332489724,3,"['benchmark', 'test']","['benchmark', 'benchmarking', 'tests']"
Testability,"With output variable you mean adding PARENT_SCOPE, or something else? This doesn't seem to require fixes in root test; ... but; So I make REFLEX_.. a function and then simply do ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` I get this error:. ```; CMake Error at /home/sailer/software/buildroot/RootMacros.cmake:183 (add_custom_command):; add_custom_command Wrong syntax. A TARGET or OUTPUT must be specified.; Call Stack (most recent call first):; /home/sailer/software/roottest/cmake/modules/RoottestMacros.cmake:349 (REFLEX_GENERATE_DICTIONARY); /home/sailer/software/roottest/root/meta/dictSelection/CMakeLists.txt:1 (ROOTTEST_GENERATE_REFLEX_DICTIONARY); ```. If I keep the first `set(gensrcdict...)` and add this ` set(gensrcdict ${dictionary}.cxx PARENT_SCOPE)` after the `add_custom_command` call I at least don't get any obvious cmake errors I can connect with these changes. Could you trigger the CI, please? I would like to know if these changes are at least working. To not have USES, one would check if `${dictionary}` is a target or not (I don't think this was a requirement before?) and then do what was done with the list given to USES before.; This can potentially affect existing uses of REFLEX_GENERATE_DICTIONARY. ```cmake; IF(TARGET ${dictionary}); LIST(APPEND include_dirs $<TARGET_PROPERTY:${dictionary},INCLUDE_DIRECTORIES>); LIST(APPEND definitions $<TARGET_PROPERTY:${dictionary},COMPILE_DEFINITIONS>); ENDIF(); ```; ```cmake; IF(TARGET ${dictionary}); target_sources(${dictionary} PRIVATE ${gensrcdict}); ENDIF(); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5019#issuecomment-587575128:113,test,test,113,https://root.cern,https://github.com/root-project/root/pull/5019#issuecomment-587575128,1,['test'],['test']
Testability,"X.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. $ clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/stognini -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -internal-isystem /Library",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2374779123:6393,stub,stubs,6393,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2374779123,1,['stub'],['stubs']
Testability,"X.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. + clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/pcanal/root_working/builds/master.debug/src/tutorials/v7/ntuple -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Library/Developer/Comm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2375170248:6731,stub,stubs,6731,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2375170248,1,['stub'],['stubs']
Testability,"X.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. + clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/pcanal/root_working/builds/master.module -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOS",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2377172429:6705,stub,stubs,6705,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2377172429,1,['stub'],['stubs']
Testability,"Yeah, I wrote those docs :sweat_smile: but I am not sure they should say ""stored as 64 bit"". @pcanal I guess we can fix this test such that writing and reading back a `Long_t` leaf works correctly both on 32bit and 64bit architectures, but what happens when you write that data on a 64bit machine and read it on a 32bit machine or vice-versa?. @ellert in this test we really want to test `long int` support (see be6a62ee84317), so I think the appropriate fix would be to simply use a smaller value than the current `2^33` on 32bit machines, rather than switching to `long long`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10302#issuecomment-1091685848:125,test,test,125,https://root.cern,https://github.com/root-project/root/pull/10302#issuecomment-1091685848,3,['test'],['test']
Testability,"Yes, I know, but since this is quite a high level change, I don't think I will introduce it in the `TGCommandPlugin` class. You should do that in your own application. For example, you can simply copy and paste what is done in `TRint.cxx`:; ```; // Goto into raw terminal input mode; char defhist[kMAXPATHLEN];; snprintf(defhist, sizeof(defhist), ""%s/.root_hist"", gSystem->HomeDirectory());; logon = gEnv->GetValue(""Rint.History"", defhist);; // In the code we had HistorySize and HistorySave, in the rootrc and doc; // we have HistSize and HistSave. Keep the doc as it is and check; // now also for HistSize and HistSave in case the user did not use; // the History versions; int hist_size = gEnv->GetValue(""Rint.HistorySize"", 500);; if (hist_size == 500); hist_size = gEnv->GetValue(""Rint.HistSize"", 500);; int hist_save = gEnv->GetValue(""Rint.HistorySave"", 400);; if (hist_save == 400); hist_save = gEnv->GetValue(""Rint.HistSave"", 400);; const char *envHist = gSystem->Getenv(""ROOT_HIST"");; if (envHist) {; hist_size = atoi(envHist);; envHist = strchr(envHist, ':');; if (envHist); hist_save = atoi(envHist+1);; }; Gl_histsize(hist_size, hist_save);; Gl_histinit((char *)logon);; ```; You can even specify your own history file, if you don't want to use the default.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7180#issuecomment-780840424:392,log,logon,392,https://root.cern,https://github.com/root-project/root/issues/7180#issuecomment-780840424,2,['log'],['logon']
Testability,"Yes, better than the ""That should fix a recent nightly failure with gcc11"" that Philippe commented on, thanks for improving it!. Compared to just including the actual diagnostic (something Philippe and I generally try to do these days, something that has proven super helpful several times), your current log:; ```; That should fix a recent nightly failure with gcc11 avoiding to require; module ""bits/ranges_base.h"" in C++20 context.; ```. does not call out; - that it's during dictionary generation; - that the modulemap requires the module feature 'cplusplus20' (your log seems to suggest that the error surfaces when compiled in C++20 mode, while this error shows up when compiling in C++14 or 17); - that the issue is also with GCC12 headers (your message seems to suggest that it's only with GCC11 headers); - the ""stack trace"", i.e. `/usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here` and then `/home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'` and then `#include ""TIsAProxy.h""`. In general we tell our users (+/- always) ""can we please see the actual diagnostic"", and for the same reasons it's super helpful to include them here. The time we discussed this is waaay larger than the time it would have taken you to update the log to what Philippe proposes, rather than updating it to something that tries to address the issues (but seemingly fails?). But it's Philippe's review, I let him comment / deal with this if you still prefer to keep your current commit log. I simply wanted to add an explanation why Philippe suggests the inclusion of the actual diagnostic (and why I found it convincing and do it ever since he propose it to me).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1429251757:305,log,log,305,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1429251757,4,['log'],['log']
Testability,"Yes, it is clearly a difference is setup. In the failing one the `BLAS` library is not installed (or not found) and the real problem is that this result in a very obscure and hard to understand failure:; ```; IncrementalExecutor::executeFunction: symbol 'saxpy_' unresolved while linking [cling interface function]!; IncrementalExecutor::executeFunction: symbol 'sgemm_' unresolved while linking [cling interface function]!; ```; Instead we should either; * fail to configure if BLAS is missing; or ; * disable the components that require BLAS when configuring whe BLAS is missing; or; * disable the test that require BLAS when BLAS is not there. and at the very least we should list somewhere (if not already done so, but I don't see it) that the `BLAS` library is required to successfully run the tests and some of the features.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16720#issuecomment-2425048725:600,test,test,600,https://root.cern,https://github.com/root-project/root/issues/16720#issuecomment-2425048725,2,['test'],"['test', 'tests']"
Testability,"[-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411701514:2785,test,testReport,2785,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411701514,1,['test'],['testReport']
Testability,"_Should_ be fixed (and tested), let me know if you have any feedback (it would be great if you could pick that branch and check it fixes your usecase, or alternatively a nightly build tomorrow -- I plan to merge the fix today).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7143#issuecomment-775238821:23,test,tested,23,https://root.cern,https://github.com/root-project/root/issues/7143#issuecomment-775238821,1,['test'],['tested']
Testability,"__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867); > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17); > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161); > > #12 0x00000000009d28b7 main (./cling+0x9d28b7); > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840); > > #14 0x0000000000a32349 _start (./cling+0xa32349); > > Stack dump:; > > 0.	Program arguments: ./cling -xcuda ; > > Segmentation fault (core dumped); > > ```; > ; > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session.; > ; > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.; > ; > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-776591942:2804,test,test,2804,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-776591942,2,['test'],['test']
Testability,"`sysctl -n hw.logicalcpu` works. I still think that a simple ""`-j8` where ""8"" is the number of cores you have"" is easier to access for our readers. I don't think it's the readme's job to explain how to find one's number of cores. ""`-j8` where ""8"" is the number of cores you have"" is the change I suggested you to do. Would you agree to do that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5079#issuecomment-597561877:14,log,logicalcpu,14,https://root.cern,https://github.com/root-project/root/pull/5079#issuecomment-597561877,1,['log'],['logicalcpu']
Testability,a ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393485196:3077,test,testReport,3077,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393485196,1,['test'],['testReport']
Testability,"ace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 175 more. ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42004/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_testForeignDraw](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42004/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2691#issuecomment-424741755:2634,test,tests,2634,https://root.cern,https://github.com/root-project/root/pull/2691#issuecomment-424741755,3,['test'],"['testReport', 'tests']"
Testability,ad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_load](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_load/); - [projectroot.roottest.cling.stl.dicts.roottest_cling_stl_dicts_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.stl/dicts/roottest_cling_stl_dicts_build/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stl_makeproject_test_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stl_makeproject_test_build/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_MyClass_v1_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_MyClass_v1_libgen_build/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadtest_build](https://epsft-jenkins.cern.ch/job/root-pullre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2454#issuecomment-411275022:3021,test,testReport,3021,https://root.cern,https://github.com/root-project/root/pull/2454#issuecomment-411275022,1,['test'],['testReport']
Testability,aframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_more](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_more/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_trivial](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_trivial/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_csv](https://epsft-jenk,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:3852,test,test,3852,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['test']
Testability,"after very long pause (sorry), I've rerun my tests with dev3 LCG nightly slot and I see that performance is close to values from the start of December. Likely the the problem is solved and the issue can be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11927#issuecomment-1399911161:45,test,tests,45,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1399911161,1,['test'],['tests']
Testability,ailing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roott,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393458046:3631,test,testReport,3631,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393458046,1,['test'],['testReport']
Testability,ailing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roott,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2119#issuecomment-393426877:3631,test,testReport,3631,https://root.cern,https://github.com/root-project/root/pull/2119#issuecomment-393426877,1,['test'],['testReport']
Testability,"ain(){; write_tree_and_friends();. TFile parentfile{""treeparent.root"", ""read""};. std::unique_ptr<TTree> parenttree{parentfile.Get<TTree>(""treeparent"")};. TChain friendchain{""treefriend""};; for (int i = 1; i < 4; i++); {; std::string indexstr = std::to_string(i);; std::string treename{""treefriend""};; treename += indexstr;; std::string filename{treename + "".root""};; std::string fullpath{filename + ""/"" + treename};; friendchain.Add(fullpath.c_str());; }; parenttree->AddFriend(&friendchain);; // DIFFERENT SUBCASES ACCORDING TO THE NAME OF THE FRIEND VARIABLE; parenttree->Scan(""x:treefriend.y"");; parenttree->Print(""all"");; ROOT::RDataFrame rdf{*parenttree};; auto display = rdf.Display("""");; display->Print();; }; ```. In this scenario, the only consistent behaviour is given by `TTree::Print(""all"")` that always outputs both info on the parent tree and on the friend chain.; Result from TTree:Print(""all""):; ```; ******************************************************************************; *Tree :treeparent: test friend trees *; *Entries : 9 : Total = 1059 bytes File Size = 494 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :x : x/I *; *Entries : 9 : Total Size= 583 bytes File Size = 110 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ******************************************************************************; *Chain :treefriend: treefriend1.root *; ******************************************************************************; ******************************************************************************; *Tree :treefriend1: test friend trees *; *Entries : 3 : Total = 933 bytes File Size = 470 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :y : y/I *; *Entries : 3 : Total Size= 556 bytes File Size = 87 *; *Baskets :",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816500613:11486,test,test,11486,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816500613,1,['test'],['test']
Testability,al-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! . ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory_py/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runatlasaod](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runatlasaod/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runcms310](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-589606883:1172,test,testReport,1172,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-589606883,1,['test'],['testReport']
Testability,alFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-398607736:3064,test,testReport,3064,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-398607736,1,['test'],['testReport']
Testability,alFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400118785:3064,test,testReport,3064,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400118785,1,['test'],['testReport']
Testability,alFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411436247:3310,test,testReport,3310,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411436247,1,['test'],['testReport']
Testability,alFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-398607736:3310,test,testReport,3310,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-398607736,1,['test'],['testReport']
Testability,alFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400118785:3310,test,testReport,3310,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400118785,1,['test'],['testReport']
Testability,alMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:3535,test,testReport,3535,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,1,['test'],['testReport']
Testability,alMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411201963:3535,test,testReport,3535,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411201963,1,['test'],['testReport']
Testability,alMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414956948:3042,test,testReport,3042,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414956948,1,['test'],['testReport']
Testability,alMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/); - [projectroot.core.base.test.gtest_c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:3042,test,testReport,3042,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,1,['test'],['testReport']
Testability,alPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:3018,test,testReport,3018,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['testReport']
Testability,areInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_pytho,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2119#issuecomment-393426877:4188,test,testReport,4188,https://root.cern,https://github.com/root-project/root/pull/2119#issuecomment-393426877,1,['test'],['testReport']
Testability,areInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393458046:3908,test,testReport,3908,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393458046,1,['test'],['testReport']
Testability,areInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_pytho,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2113#issuecomment-393289526:3914,test,testReport,3914,https://root.cern,https://github.com/root-project/root/pull/2113#issuecomment-393289526,1,['test'],['testReport']
Testability,areInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2119#issuecomment-393426877:3908,test,testReport,3908,https://root.cern,https://github.com/root-project/root/pull/2119#issuecomment-393426877,1,['test'],['testReport']
Testability,areInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_pytho,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-393462547:4188,test,testReport,4188,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-393462547,1,['test'],['testReport']
Testability,areInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_pytho,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117#issuecomment-393471686:3914,test,testReport,3914,https://root.cern,https://github.com/root-project/root/pull/2117#issuecomment-393471686,1,['test'],['testReport']
Testability,areInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_pytho,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2366#issuecomment-407829804:3913,test,testReport,3913,https://root.cern,https://github.com/root-project/root/pull/2366#issuecomment-407829804,1,['test'],['testReport']
Testability,"at concept here rather than the precise concept of friends in TTree/RNtuple, which is limiting in scope for what is possible for dataset augmentation. Moreover, this allows the definition of left/right/inner/outer joins at the metadata level which is extremely useful for understanding how that additional data is intended to be used (are you just augmenting the number of columns in the dataset, are you x-referencing two datasets, etc.). It is then up to the system ingesting this data to implement the join specified by the user correctly (which can be tested for). For the second *** reference, this is also a restriction of your program, not the metadata, an error should be thrown by whatever is executing and cannot handle a case rather than restricting concepts for describing a dataset. Furthermore, going to joins as a metadata concept allows the user to specify an entire dataset for a join rather than individual files, resulting in significant reduction of doubly-bookkept data. . Entry ranges: I don't think this is very useful data to record. This is either kept track of as a good-luminosity block list, or specified at execution time by the user (since it is often the case they will want to run over a limited piece of the data to test things and then run over the full dataset). Re-writing the metadata on each run would get cumbersome quickly. To take all this and mutate your original suggestion (I haven't defined all the types but hopefully it's intelligible):; ```; {; ""datasets"":{; ""dataset"":{; ""treenames"": Union[List[String], String],; ""files"": List[String],; ""friends"":{; ""treenames"": Union[List[String], String],; ""files"": List[String],; ""joinType"": OneOf[""inner"", ""outer"", ""left"", ""right"", ""cross""], #this should just be made into a type; } or List[Dict[As in Single Dict]],; ""metadata"": Optional[Dict[JsonSerialiableAny:JsonSerializableAny]]; },; # ...; },; # other optional values from here on; ""metadata"": Optional[Dict[JsonSerialiableAny:JsonSerialiableAny]]; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11624#issuecomment-1293743624:3797,test,test,3797,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1293743624,1,['test'],['test']
Testability,"ation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -Iginclude -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/inc -I/mnt/build/workspace/root-pullrequests-build/root/math/mathcore/v7/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/imt/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/multiproc/inc -Iexternals/mnt/build/workspace/root-pullrequests-build/install/include -I/mnt/build/workspace/root-pullrequests-build/root/net/net/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -fPIC -std=c++11 -MD -MT math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -MF math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o.d -o math/mathmore/CMakeFiles/MathMore.dir/src/GSLRndmEngines.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx; > * [2021-03-01T16:00:58.827Z] /mnt/build/workspace/root-pullrequests-build/root/math/mathmore/src/GSLRndmEngines.cxx:225:68: error: ‘gsl_ran_multivariate_gaussian’ was not declared in this scope. Sorry that it took me a while to look at this. I had to create an Ubuntu 16.04 virtual machine for testing. . @lmoneta, unfortunately, this error happens because Ubuntu 16.04 ships GSL version 2.1, which hasn't gsl_ran_multivariate_gaussian. The multivariate Gaussian random number generation in GSL was only introduced in version 2.2.1. I bypass this with an `#ifdef` that will define the function if the GSL version is < 2.2 by simply copying it from a higher version of GSL. Hopefully, this doesn't break the GPL license under which GSL is distributed. I think that I could also replace the function call to `gsl_ran_multivariate_gaussian` with the wrapper's full implementation. I am open to comments. I don't have access to a windows machine now; I will do the same and use a virtual machine to test that part.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7186#issuecomment-801496369:2434,test,testing,2434,https://root.cern,https://github.com/root-project/root/pull/7186#issuecomment-801496369,2,['test'],"['test', 'testing']"
Testability,b/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://epsft-jenkins.cern.ch/job/root-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-398607736:3773,test,testReport,3773,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-398607736,1,['test'],['testReport']
Testability,b/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://epsft-jenkins.cern.ch/job/root-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400118785:3773,test,testReport,3773,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400118785,1,['test'],['testReport']
Testability,b/root-pullrequests-build/36586/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.core.imt.test.gtest_core_imt_test_coreimttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_core_imt_test_coreimttestUnit/); - [projectroot.core.imt.test.gtest_core_imt_test_testTFuture](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_core_imt_test_testTFuture/); - [projectroot.io.io.test.gtest_io_io_test_TROMemFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.io.io/test/gtest_io_io_test_TROMemFile/); - [projectroot.math.genetic.test.genetic_testGAMinimizer](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.math.genetic/test/genetic_testGAMinimizer/); - [projectroot.math.genetic.test.genetic_GAMinTutorial](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.math.genetic/test/genetic_GAMinTutorial/). And 81 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411701514:3731,test,test,3731,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411701514,16,['test'],"['test', 'testReport']"
Testability,balMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testRepo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411165572:3534,test,testReport,3534,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411165572,1,['test'],['testReport']
Testability,"bool) (./cling+0xb10d17); > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161); > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7); > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840); > > > > #14 0x0000000000a32349 _start (./cling+0xa32349); > > > > Stack dump:; > > > > 0.	Program arguments: ./cling -xcuda ; > > > > Segmentation fault (core dumped); > > > > ```; > > > ; > > > ; > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session.; > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.; > > > ; > > > ; > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.; > > ; > > ; > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time.; > ; > I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-777250984:3024,test,test,3024,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-777250984,1,['test'],['test']
Testability,build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/); - [projectroot.core.base.test.gtest_core_base_test_CoreBaseTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.cor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:3151,test,test,3151,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,1,['test'],['test']
Testability,build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/console).; ### Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.datamodelevolution.roottest_root_io_datamodelevolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/datamodelevolution/roottest_root_io_datamodelevolution_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenki,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844253147:1146,test,testReport,1146,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844253147,1,['test'],['testReport']
Testability,c/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:3420,test,test,3420,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,1,['test'],['test']
Testability,c_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-410966153:3315,test,testReport,3315,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-410966153,1,['test'],['testReport']
Testability,cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144990827:1555,test,testReport,1555,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827,1,['test'],['testReport']
Testability,ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_gdirectoryRestore](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_gdirectoryRestore/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:3939,test,test,3939,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,5,['test'],"['test', 'testReport']"
Testability,ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.core.thread.test.gtest_core_thread_test_testTThreadedObject](https://epsft-jenkins.cern.ch/job/root-pullrequests-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411201963:4043,test,testReport,4043,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411201963,1,['test'],['testReport']
Testability,ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143358479:1091,test,testReport,1091,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479,1,['test'],['testReport']
Testability,ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143554468:1091,test,testReport,1091,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468,1,['test'],['testReport']
Testability,ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/pr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1153748598:1091,test,testReport,1091,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598,1,['test'],['testReport']
Testability,ckle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.event.roottest_root_io_event](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/event/roottest_root_io_event/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411089672:3701,test,testReport,3701,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411089672,1,['test'],['testReport']
Testability,"clude/string.h:589:14 in libc.string.h hidden memfrob 'void *(void *, size_t) throw()' extern; | |-ParmVarDecl 0xb605d18 <col:23, col:29> col:29 in libc.string.h hidden __s 'void *'; | |-ParmVarDecl 0xb605d98 <col:34, col:41> col:41 in libc.string.h hidden __n 'size_t':'unsigned long'; | `-NonNullAttr 0xb605fd0 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:589:67> 1; `-FunctionDecl 0xb606160 <line:602:1, /usr/include/sys/cdefs.h:285:63> /usr/include/string.h:602:14 in libc.string.h hidden basename 'char *(const char *) throw()' extern; |-ParmVarDecl 0xb606078 <col:24, col:36> col:36 in libc.string.h hidden __filename 'const char *'; `-NonNullAttr 0xb606208 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:602:69> 1; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e390",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377827282:37483,test,test-products,37483,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282,1,['test'],['test-products']
Testability,cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/). And 72 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-411277208:4451,test,testReport,4451,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-411277208,4,['test'],['testReport']
Testability,comparing contains was more complex. I went to the simplest way for this simple test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15897#issuecomment-2182075929:80,test,test,80,https://root.cern,https://github.com/root-project/root/pull/15897#issuecomment-2182075929,1,['test'],['test']
Testability,compatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.core.imt.test.gtest_core_imt_test_coreimttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_core_imt_test_coreimttestUnit/); - [projectroot.core.imt.test.gtest_core_imt_test_testTFuture](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_core_imt_test_testTFuture/); - [projectroot.io.io.test.gtest_io_io_test_TROMemFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.io.io/test/gtest_io_io_test_TROMemFile/); - [projectroot.math.genetic.test.genetic_testGAMinimizer](https://epsft-jenkins.cern.ch/job/root-pull,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411701514:3474,test,testReport,3474,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411701514,1,['test'],['testReport']
Testability,compatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:3219,test,test,3219,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,1,['test'],['test']
Testability,"ctive output may be truncated writing up to 1024 bytes into a region of size 64 [-Wformat-truncation=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] . And 179 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.cling.dict.ROOT-9185.roottest_cling_dict_ROOT_9185_ROOT9185](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.cling.dict/ROOT-9185/roottest_cling_dict_ROOT_9185_ROOT9185/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roott",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851#issuecomment-408947574:3065,test,testReport,3065,https://root.cern,https://github.com/root-project/root/pull/1851#issuecomment-408947574,1,['test'],['testReport']
Testability,cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411084210:3191,test,testReport,3191,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411084210,1,['test'],['testReport']
Testability,"d by setting ClassDef version to 0.; 2. https://github.com/root-project/root/pull/8700#discussion_r672509759 RooFit naming convention puts underscores in front of member names. This is discouraged, since underscore prefix is reserved for C++ implementations. I introduced some new members with underscore suffix instead, which is also common practice e.g. in the Google C++ guidelines. I think this is not something we should spend too much time on now, but maybe good to keep in mind for the future.; 3. https://github.com/root-project/root/pull/8700#discussion_r672519457 The configuration parameters (GlobalObservables etc.): should we unify them or keep like this?; 4. https://github.com/root-project/root/pull/8700#discussion_r672538377 This should be checked by Wouter. In addition, some other remaining questions:; 1. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test.; 2. In an ideal world I would have liked to add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, this will take time. The advantage would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the MultiProcess minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in ""PR 7"" (see overview). So, up for discussion, two choices: A: add (probably mostly useless except for testing this PR) ""LikelihoodGradientSerial"" class (based on RooGradMinimizerFcn) so we can add an integration test in this PR; B: wait for the integration test in PR 7.; 3. Does everybody like the RooNLLVar stat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-915217168:1276,test,test,1276,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-915217168,1,['test'],['test']
Testability,d* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.cling.dict.fwd-decl-stdless.roottest_cling_dict_fwd_decl_stdless_execLessyTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.cling.dict/fwd-decl-stdless/roottest_cling_dict_fwd_decl_stdless_execLessyTest/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_runTTestClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.cling/parsing/roottest_cling_parsing_runTTestClass/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadNamespace](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadNamespace/); - [projectroot.roottest.root.meta.roottest_root_meta_runautoload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root/meta/roottest_root_meta_runautoload_auto/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root/meta/roottest_root_meta_runtemplateAutoload_auto/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoloadInclude_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root/meta/roottest_root_meta_runtemplateAutoloadInclude_auto/); - [projectroot.roottest.root.meta.rootcling.roottest_root_meta_rootcling_includeInLinkdef](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.meta/rootcling/roottest_root_meta_rootcling_includeInLinkdef/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395599631:3756,test,testReport,3756,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395599631,4,['test'],['testReport']
Testability,d* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roott,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117#issuecomment-393471686:3083,test,testReport,3083,https://root.cern,https://github.com/root-project/root/pull/2117#issuecomment-393471686,1,['test'],['testReport']
Testability,d* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411309441:3329,test,testReport,3329,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411309441,1,['test'],['testReport']
Testability,"d/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_invalidref](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30217/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_invalidref/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2195#issuecomment-397357824:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2195#issuecomment-397357824,2,['test'],"['testReport', 'tests']"
Testability,"d/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:696:48: warning: ‘%s’ directive output may be truncated writing up to 1024 bytes into a region of size 64 [-Wformat-truncation=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] . And 179 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.cling.dict.ROOT-9185.roottest_cling_dict_ROOT_9185_ROOT9185](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.cling.dict/ROOT-9185/roottest_cling_dict_ROOT_9185_ROOT9185/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_datafr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851#issuecomment-408947574:2462,test,tests,2462,https://root.cern,https://github.com/root-project/root/pull/1851#issuecomment-408947574,1,['test'],['tests']
Testability,"d/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36568/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2424#issuecomment-411685113:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2424#issuecomment-411685113,2,['test'],"['testReport', 'tests']"
Testability,"d/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36577/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411689618:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411689618,2,['test'],"['testReport', 'tests']"
Testability,"d/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36743/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2412#issuecomment-411882917:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2412#issuecomment-411882917,2,['test'],"['testReport', 'tests']"
Testability,"d/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36752/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411900558:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411900558,2,['test'],"['testReport', 'tests']"
Testability,"d/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36864/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2449#issuecomment-412084096:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2449#issuecomment-412084096,2,['test'],"['testReport', 'tests']"
Testability,"d/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36873/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2449#issuecomment-412090993:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2449#issuecomment-412090993,2,['test'],"['testReport', 'tests']"
Testability,"d/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37080/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2406#issuecomment-412985127:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2406#issuecomment-412985127,2,['test'],"['testReport', 'tests']"
Testability,"d/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37513/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-414352157:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-414352157,2,['test'],"['testReport', 'tests']"
Testability,dFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411436247:3049,test,testReport,3049,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411436247,1,['test'],['testReport']
Testability,dLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.core.thread.test.gtest_core_thread_test_testTThreadedObject](https://epsft-jenkins.cern.ch/job/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2495#issuecomment-414953063:4121,test,testReport,4121,https://root.cern,https://github.com/root-project/root/pull/2495#issuecomment-414953063,1,['test'],['testReport']
Testability,dTotemNtuple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_more](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_more/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_trivial](https://epsft-jenk,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:3864,test,test,3864,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,1,['test'],['test']
Testability,"dd a new boolean constructor argument, `failOnUnknownArgs = false` which we set to `true` in ROOT. Indeed, I believe the additional constructor argument is best. ; The only other solution which comes to mind (if it would not be possible to add a parameter) would be to (once more) use magic numbers for the `numOptions` parameter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090#issuecomment-1064634456:1119,test,test,1119,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456,2,['test'],['test']
Testability,"den __string 'char *'; | `-NonNullAttr 0xb605c68 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:586:59> 1; |-FunctionDecl 0xb605f20 <line:589:1, /usr/include/sys/cdefs.h:285:63> /usr/include/string.h:589:14 in libc.string.h hidden memfrob 'void *(void *, size_t) throw()' extern; | |-ParmVarDecl 0xb605d18 <col:23, col:29> col:29 in libc.string.h hidden __s 'void *'; | |-ParmVarDecl 0xb605d98 <col:34, col:41> col:41 in libc.string.h hidden __n 'size_t':'unsigned long'; | `-NonNullAttr 0xb605fd0 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:589:67> 1; `-FunctionDecl 0xb606160 <line:602:1, /usr/include/sys/cdefs.h:285:63> /usr/include/string.h:602:14 in libc.string.h hidden basename 'char *(const char *) throw()' extern; |-ParmVarDecl 0xb606078 <col:24, col:36> col:36 in libc.string.h hidden __filename 'const char *'; `-NonNullAttr 0xb606208 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:602:69> 1; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377827282:37301,test,test-products,37301,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282,1,['test'],['test-products']
Testability,"developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_EXPORT_SYMBOLS_FOR_PLUGINS'.; Call Stack (most recent call first):; /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1157 (CMAKE_DEPENDENT_OPTION); CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. -- Looking for os_signpost_interval_begin; -- Looking for os_signpost_interval_begin - not found; -- Found PythonInterp: /usr/bin/python (found version ""3.10.9""); -- Performing Test CXX_HAS_Wno_nested_anon_types; -- Performing Test CXX_HAS_Wno_nested_anon_types - Success; -- Performing Test CXX_HAS_Wno_covered_switch_default; -- Performing Test CXX_HAS_Wno_covered_switch_default - Success; -- Performing Test CXX_HAS_Wno_unused_local_typedef; -- Performing Test CXX_HAS_Wno_unused_local_typedef - Success; -- Cling version (from VERSION file): 1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/x86_64-pc-linux-gnu:/usr/lib/gcc/x86_64-pc-linux-gnu/11/include/g++-v11/backward' at runtime.; -- And if not found, will invoke: '/usr/bin/c++ ' for them.; CMake Error: Could not open file for write in copy operation /usr/lib/llvm/15/lib/cmake/cling/ClingConfig.cmake.tmp; CMake Error: : System Error: No such file or directory; CMake Error at cmake/modules/CMakeLists.txt:22 (configure_file):; configure_file Problem configuring file. -- Configuring incomplete, errors occurred!; See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeOutput.log"".; See also ""/home/jonesmz/build-cling/CMakeFiles/CMakeError.log"".; jonesmz@ymir ~ $; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:8683,log,log,8683,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,2,['log'],['log']
Testability,"dk -> MacOSX15.0.sdk; drwxr-xr-x 7 root wheel 224 Apr 30 18:16 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 Sep 16 20:47 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 Aug 21 11:15 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 Sep 16 20:47 MacOSX15.sdk -> MacOSX15.0.sdk. $ clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/stognini -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2374779123:1618,stub,stubs,1618,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2374779123,1,['stub'],['stubs']
Testability,"dk -> MacOSX15.0.sdk; drwxr-xr-x 7 root wheel 224 Sep 25 18:33 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 Sep 25 18:29 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 Sep 25 18:31 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 Sep 25 18:29 MacOSX15.sdk -> MacOSX15.0.sdk; + clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/pcanal/root_working/builds/master.module -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Applications/Xcode.app/Contents/Developer/Pla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2377172429:1886,stub,stubs,1886,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2377172429,1,['stub'],['stubs']
Testability,e Thread: . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1245798559:1695,test,testReport,1695,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245798559,4,['test'],['testReport']
Testability,e following specified headers in the module Thread: . ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149177/testReport/projectroot.roottest.root.selector/simple/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175603018:1520,test,testReport,1520,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175603018,1,['test'],['testReport']
Testability,e following specified headers in the module Thread: . ### Failing tests:; - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175116758:1518,test,testReport,1518,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758,1,['test'],['testReport']
Testability,e function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411101883:3483,test,testReport,3483,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411101883,1,['test'],['testReport']
Testability,"e(); l_index += nentries * [index]. arr_id = numpy.array(l_index). idfilepath = '/tmp/file_id.root'; df_id = ROOT.RDF.MakeNumpyDataFrame({id_column: arr_id}); df_id.Snapshot(treename, idfilepath). ch_data = ROOT.TChain(treename, '') ; for _, filepath in l_tp_file:; ch_data.Add(filepath). size_ch = ch_data.GetEntries(); size_id = arr_id.size. if size_ch != size_id:; print('Different id and chain sizes: {}/{}'.format(size_id, size_ch)); raise. ch_data.AddFriend(treename, idfilepath). df = ROOT.RDataFrame(ch_data). return (df, ch_data); #------------------------------------------; def test():; #----------------------; #Make input; #----------------------; index = 0 ; l_tp_file = [] ; for val in range(0, 100, 10):; filepath = make_data(val); l_tp_file.append((index, filepath)); index+=1; #----------------------; #Merge; #----------------------; df, _ = get_df(l_tp_file, 'tree', id_column='id'); df.Display(['a', 'id'], -1).Print(); #df.Snapshot('tree', 'file.root'); #------------------------------------------; test(); ```. I will add `get_df` to my personal library. The approach seems safe and clean enough, however the return value needs to include the chain (i.e. _) because otherwise I get a crash. Which seems to indicate that the chain's reference is not kept inside the dataframe. So once the function returns, the chain is removed by the garbage collector and the dataframe does not have anything to save (the script above is self contained and you can try it yourself). That should not be right, if I tell the dataframe to use the chain, the chain should be kept alive by the dataframe. > ; > The simplest solution: with the upcoming `DefinePerSample` method you can solve this more easily, but the feature will only be merged in ROOT master in a few days ([PR here](https://github.com/root-project/root/pull/8841)). With `DefinePerSample` you could write something like this:; > ; > ```c++; > df.DefinePerSample(""index"", ""GetIndex(rdfsampleinfo_.AsString())""); > ```; > ; > where ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-932494638:4210,test,test,4210,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638,1,['test'],['test']
Testability,e/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/); - [projectroot.core.base.test.gtest_core_base_test_CoreBaseTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.base/test/gtest_core_base_test_CoreBaseTests/); - [projectroot.core.cont.test.gtest_core_cont_test_coreconttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.cont/test/gtest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:3377,test,test,3377,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,1,['test'],['test']
Testability,"e/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31418/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400455069:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400455069,2,['test'],"['testReport', 'tests']"
Testability,"e/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31484/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400820416:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400820416,2,['test'],"['testReport', 'tests']"
Testability,eFcc/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/). And 230 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411101883:4247,test,testReport,4247,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411101883,4,['test'],['testReport']
Testability,eUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4PrepareInput/). And 93 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2118#issuecomment-393467051:4462,test,testReport,4462,https://root.cern,https://github.com/root-project/root/pull/2118#issuecomment-393467051,4,['test'],['testReport']
Testability,eUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2PrepareInput/). And 93 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2113#issuecomment-393289526:4465,test,testReport,4465,https://root.cern,https://github.com/root-project/root/pull/2113#issuecomment-393289526,4,['test'],['testReport']
Testability,e] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 178 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-393462547:3360,test,testReport,3360,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-393462547,1,['test'],['testReport']
Testability,e](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_testForeignDraw](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make/); - [projectroot.roottest.root.tree.split.roottest_root_tree_split_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/split/roottest_root_tree_split_make/); - [projectroot.roottest.root.treeformula.string.roottest_root_treeformula_string_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.treeformula/string/roottest_root_treeformula_string_make/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root/dataframe/roottest_roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-415844036:3727,test,testReport,3727,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-415844036,1,['test'],['testReport']
Testability,eckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-411277208:3904,test,testReport,3904,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-411277208,1,['test'],['testReport']
Testability,eckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.core.meta.test.gtest_core_meta_test_testHashRecursiveRemove](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.core.meta/test/gtest_core,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411309441:4005,test,testReport,4005,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411309441,1,['test'],['testReport']
Testability,"efriend[23].y) returns the same error both times, still printing an empty ""treefrien"" column; ```; Error in <TTreeFormula::Compile>: Bad numerical expression : ""treefriend2.y""; ************************************; * Row * y * treefrien *; ************************************; * 0 * 0 * *; * 1 * 1 * *; * 2 * 2 * *; * 3 * 0 * *; * 4 * 1 * *; * 5 * 2 * *; * 6 * 0 * *; * 7 * 1 * *; * 8 * 2 * *; ************************************; ```; A very weird behaviour imho. Fortunately RDataFrame returns an error in any case if the friend chain does not have a name, which Enrico discussed many times in the comments and I now fully agree it's the best behaviour possible.; ```; terminate called after throwing an instance of 'std::runtime_error'; what(): Unknown column: treefriend.y; ```. # Case 3; Code to create the trees; ```cpp; void write_parent_tree(std::string_view filename, std::string_view treename); {; int x{};. TFile file{filename.data(), ""recreate""};; TTree tree{treename.data(), ""test friend trees""};; tree.Branch(""x"", &x, ""x/I"");. for (int i = 0; i < 9; i++); {; x = i;; tree.Fill();; }; tree.Write();; }. void write_friend_tree(std::string_view filename, std::string_view treename); {; int y{};. TFile file{filename.data(), ""recreate""};; TTree tree{treename.data(), ""test friend trees""};; tree.Branch(""y"", &y, ""y/I"");. for (int i = 0; i < 3; i++); {; y = i;; tree.Fill();; }; tree.Write();; }. void write_tree_and_friends(); {; // Write parent tree to disk.; write_parent_tree(""treeparent.root"", ""treeparent"");; // Write friend trees to disk.; for (int i = 1; i < 4; i++); {; std::string indexstr = std::to_string(i);; std::string treename{""treefriend""};; treename += indexstr;; std::string filename{treename + "".root""};; write_friend_tree(filename, treename);; }; }; ```. Main function; ```cpp; int main(){; write_tree_and_friends();. TFile parentfile{""treeparent.root"", ""read""};. std::unique_ptr<TTree> parenttree{parentfile.Get<TTree>(""treeparent"")};. TChain friendchain{""treefriend""}",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816500613:9647,test,test,9647,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816500613,1,['test'],['test']
Testability,"emap requires the module feature 'cplusplus20' (your log seems to suggest that the error surfaces when compiled in C++20 mode, while this error shows up when compiling in C++14 or 17); > ; > * that the issue is also with GCC12 headers (your message seems to suggest that it's only with GCC11 headers); > ; > * the ""stack trace"", i.e. `/usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here` and then `/home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'` and then `#include ""TIsAProxy.h""`; > ; > ; > In general we tell our users (+/- always) ""can we please see the actual diagnostic"", and for the same reasons it's super helpful to include them here. The time we discussed this is waaay larger than the time it would have taken you to update the log to what Philippe proposes, rather than updating it to something that tries to address the issues (but seemingly fails?); > ; > But it's Philippe's review, I let him comment / deal with this if you still prefer to keep your current commit log. I simply wanted to add an explanation why Philippe suggests the inclusion of the actual diagnostic (and why I found it convincing and do it ever since he propose it to me). This issue exists on gcc11 and gcc12 (and I guess any gcc that made changes to libstdc++ and the experimental/string_view header file). I am not sure if pasting a diagnostic from a random system makes this clearer in any form. I agree with you this should have be 1 min review fixing an important failure that we introduced with the c++20 support and some of the new releases of maybe libstdc++. @pcanal I find pasting errors in the logs a bad practice, especially when it obfuscates the real fix. Can you suggest a commit message which adds enough information which makes me happy as well?. In general it is a bit unfortunate how the whole review went fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1430019305:1481,log,log,1481,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1430019305,2,['log'],['log']
Testability,"endencyMissingError` to public to make it catchable; [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup; [RF][HS3] Added helper function for writing matrices in JSONInterface; [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation; [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation; [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; [RF] No need for `RooAbsMinimizerFcn::fit()` method; [RF] Further refactor RooJSONFactoryWSTool; [RF][HS3] Avoid catching without re-throwing; [RF][HS3] Write out bin counts as `int` and other small improvements; [RF] Correctly support constants in RooFit JSON IO; [RF] Add test for a simultaneous model written and read from JSON; [RF] Skip the RooSimultaneous in JSON IO; [RF] Don't export `factory_tag` in JSON; [RF][HS3] Move the default variable values to the estimates section; [RF] RooFit JSON: no need to tag variables, just export them; [RF] Rename fields in JSON file to match new standard; [RF] Complete also the reading of likelihoods and analysis fields; [RF] Add likelihoods and analyses fields for HS3 v2; [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3; [RF] Some refactoring of RooFit HS3; [RF] New `domains` section in JSON to store variable ranges; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Clearly mark `RooFit::CloneData()` as deprecated; [RF] Again code-format RooMinimizer; [RF] Avoid overhead of tracking evaluation error msgs when not needed; [RF] Implement safe way to set eval error logging in RooMinimizer; [RF] Use proper infinity checks in RooFit HS3; [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code; [RF] RooTruthModel",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:7095,test,tests,7095,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,2,['test'],"['test', 'tests']"
Testability,enkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_pythonizations](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_pythonizations/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.python.stl.roottest_python_stl_stl](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/stl/roottest_python_stl_stl/); - [projectroot.tmva.pymva.test.PyMVA_Keras_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.tmva.pymva/test/PyMVA_Keras_Classification/); - [projectroot.tmva.pymva.test.PyMVA_Keras_Regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.tmva.pymva/test/PyMVA_Keras_Regression/); - [projectroot.tmva.pymva.test.PyMVA_Keras_Multiclass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.tmva.pymva/test/PyMVA_Keras_Multiclass/); - [projectroot.roottest.root.roofitstats.roottest_root_roofitstats_RooD,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13577#issuecomment-1701582600:1962,test,testReport,1962,https://root.cern,https://github.com/root-project/root/pull/13577#issuecomment-1701582600,1,['test'],['testReport']
Testability,eport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_load/); - [projectroot.roottest.cling.stl.dicts.roottest_cling_stl_dicts_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.stl/dicts/roottest_cling_stl_dicts_build/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stl_makeproject_test_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stl_makeproject_test_build/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_MyClass_v1_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_MyClass_v1_libgen_build/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadtest_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadtest_build/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_read_leaves_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_read_leaves_build/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_classWithComplex_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_classWithComplex_libgen_build/); - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_forwardList_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_forwardList_libgen_build/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_classes_libgen_build](https:/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2454#issuecomment-411275022:4033,test,testReport,4033,https://root.cern,https://github.com/root-project/root/pull/2454#issuecomment-411275022,1,['test'],['testReport']
Testability,epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_more](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_more/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_trivial](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:3733,test,testReport,3733,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['testReport']
Testability,"equests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1775:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_helpers](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38691/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_helpers/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2523#issuecomment-416212209:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2523#issuecomment-416212209,4,['test'],"['test', 'testReport', 'tests']"
Testability,"erflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.treeformula.scan.roottest_root_treeformula_scan_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32672/testReport/projectroot.roottest.root.treeformula/scan/roottest_root_treeformula_scan_make/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/32672/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2319#issuecomment-405627002:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2319#issuecomment-405627002,3,['test'],"['testReport', 'tests']"
Testability,ervices.cern.ch/root-jenkins/job/root-pullrequests-build/169780/console).; ### Failing tests:; - [projectroot.roottest.root.io.stdpair.roottest_root_io_stdpair_collection_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root.io/stdpair/roottest_root_io_stdpair_collection_build/); - [projectroot.roottest.root.io.stdpair.roottest_root_io_stdpair_pair_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root.io/stdpair/roottest_root_io_stdpair_pair_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tprofile_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tprofile_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_ttree_read_imt_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_ttree_read_imt_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_th1f_fill_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_th1f_fill_build/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_libInitOrderDups_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_libInitOrderDups_build/); - [projectroot.roottest.root.meta.genreflex.ROOT-5709.roottest_root_meta_genreflex_ROOT_5709_Tau_libgen_build](http,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12415#issuecomment-1456017123:1145,test,testReport,1145,https://root.cern,https://github.com/root-project/root/pull/12415#issuecomment-1456017123,1,['test'],['testReport']
Testability,es from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1973#issuecomment-394348081:3251,test,testReport,3251,https://root.cern,https://github.com/root-project/root/pull/1973#issuecomment-394348081,1,['test'],['testReport']
Testability,es.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_pythonizations](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_pythonizations/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.python.stl.roottest_python_stl_stl](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.python/stl/roottest_python_stl_stl/); - [projectroot.tmva.pymva.test.PyMVA_Keras_Classification](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.tmva.pymva/test/PyMVA_Keras_Classification/); - [projectroot.tmva.pymva.test.PyMVA_Keras_Regression](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.tmva.pymva/test/PyMVA_Keras_Regression/); - [projectroot.tmva.pymva.test.PyMVA_Keras_Multiclass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.tmva.pymva/test/PyMVA_Keras_Multiclass/); - [projectroot.roottest.root.roofitstats.roottest_root_roofitstats_RooDataSet_ASCII_out](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/183764/testReport/projectroot.roottest.root/roofitstats/roottest_root_roofitstats_RooDataSet_ASCII_out/). And 14 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13577#issuecomment-1701582600:2199,test,testReport,2199,https://root.cern,https://github.com/root-project/root/pull/13577#issuecomment-1701582600,11,['test'],"['test', 'testReport']"
Testability,"ess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37576/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.compression.roottest_root_io_compression_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37576/testReport/projectroot.roottest.root.io/compression/roottest_root_io_compression_make/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37576/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_hadd_autoload/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37576/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2492#issuecomment-414426779:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2492#issuecomment-414426779,5,['test'],"['testReport', 'tests']"
Testability,"ess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37859/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.compression.roottest_root_io_compression_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37859/testReport/projectroot.roottest.root.io/compression/roottest_root_io_compression_make/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37859/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_hadd_autoload/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37859/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2492#issuecomment-415001212:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2492#issuecomment-415001212,5,['test'],"['testReport', 'tests']"
Testability,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144980019:2155,test,testReport,2155,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019,4,['test'],['testReport']
Testability,est.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145207749:2155,test,testReport,2155,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749,4,['test'],['testReport']
Testability,estForeignDraw](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make/); - [projectroot.roottest.root.tree.split.roottest_root_tree_split_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/split/roottest_root_tree_split_make/); - [projectroot.roottest.root.treeformula.string.roottest_root_treeformula_string_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.treeformula/string/roottest_root_treeformula_string_make/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root/multicore/roottest_root_mult,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-415844036:3963,test,testReport,3963,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-415844036,1,['test'],['testReport']
Testability,estReport/projectroot.roottest.root.io/stdpair/roottest_root_io_stdpair_pair_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tprofile_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tprofile_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_ttree_read_imt_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_ttree_read_imt_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_th1f_fill_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_th1f_fill_build/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_libInitOrderDups_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_libInitOrderDups_build/); - [projectroot.roottest.root.meta.genreflex.ROOT-5709.roottest_root_meta_genreflex_ROOT_5709_Tau_libgen_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root.meta.genreflex/ROOT-5709/roottest_root_meta_genreflex_ROOT_5709_Tau_libgen_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_testSetAddress_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_testSetAddress_build/); - [projectroot.roottest.root.selector.simple.roottes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12415#issuecomment-1456017123:1654,test,testReport,1654,https://root.cern,https://github.com/root-project/root/pull/12415#issuecomment-1456017123,1,['test'],['testReport']
Testability,ests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:3146,test,test,3146,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,1,['test'],['test']
Testability,"et [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28759/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28759/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2128#issuecomment-394339120:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2128#issuecomment-394339120,3,['test'],"['testReport', 'tests']"
Testability,"etely agree that this is a limit, indexed friends only extend it a little bit by allowing different sets of event indexes in the two tables. The idea of an heterogeneous dataset layout, with some datasets/samples having to be left-joined and others having to be inner-joined (for example), involves some design work and I would like to discuss it further, although I'd like to get a better idea of the use cases that need any joins other than left join. > Entry ranges: I don't think this is very useful data to record. This is either kept track of as a good-luminosity block list, or specified at execution time by the user. During the meeting a few weeks ago there was quite a large consensus on this information being useful when written at the datasets/samples level. I also agree with you that an entry range is usually specified when testing before running the full thing. Nonetheless, the important part of this feature was the ability to tie a specific entry range to a specific dataset/sample and not to the global dataset, so that even when testing at least N entries from each dataset/sample would be processed. If this is not specified when definining the dataset metadata, then I suppose we should expose some API like:. ```python; entry_ranges = [(0,1000), (50000, 60000)] # taken from my initial specification example; df = RDataFrame(...); df.SetEntryRanges(entry_ranges); ```; And similarly for coffea and other frameworks. What I don't like about this is that I need to remember how many datasets/samples I have in my specification so that `len(entry_ranges)` corresponds to that number. Of course the tool can error and say ""You have specified too many entry ranges, please use only N"", maybe that's good enough but I'm not sure. One other comment could be that we don't need to have exactly one entry range per dataset/sample, maybe some datasets just need to be processed fully. But the API from above would not be able to distinguish whether the user actually didn't want to pro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11624#issuecomment-1297411993:3462,test,testing,3462,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1297411993,1,['test'],['testing']
Testability,"ets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:2775,test,testReport,2775,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['testReport']
Testability,"ets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.roottest.root.multicore.roottest_root_multicore_poolManager_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_poolM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409277662:2775,test,testReport,2775,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409277662,1,['test'],['testReport']
Testability,"evert ""[RF] Make RooBatchCompute dependency public.""; [RF] Move loop management for code generation into CodeSquashContext; [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); [RF] Add 'translate' to RooNllVarNew.; [RF] Remove function declarations in RooStats LinkDef.h; [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx; [RF] Move `ModelConfig` from RooStats to RooFit; [RF] Don't add `weightVar` to observables in HistFactory; [RF] Minor improvements to RooFit evaluation code generation; [RF][NFC] Fix typo.; [RF] Disable RooFuncWrapper test if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF][HS3] Put exported `histosys` in the correct vector; [RF][HS3] Avoid creating temporary objects to import into workspace; [RF][HS3][HF] General cleanup of HS3 HistFactory implementation; [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF][HS3] Consistent range for nominal alpha params with HistFactory; [RF][HS3] Remember simultaneous channel names when writing JSON; [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip; [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints; [RF][HS3] Don't mix up free functions and class impl in JSON tool; [RF][HS3] Consistently have implicit fallback for HistFactory variables; [RF][HS3] Don't import datasets that are parts of a combined dataset; [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`; [RF][HS3] Generate input file for testHS3HistFactory on the fly; [RF][HS3] Improveme",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:1902,test,test,1902,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,1,['test'],['test']
Testability,"for taking a look. > 1. I guess the behavior of TTaskGroup should mimic what TThreadExecutor does, e.g. it should use the task arena if it exists, and it should construct one if it doesn't. What's the rationale for doing things independently of ROOT's task arena? Does this mean users might see more cores used than they expect in some cases?. I believe this change only removes an unnecessary restriction on when `TTaskGroup` can be used (i.e. after looking through the implementation, I don't think having IMT globally enabled is a precondition for the use of `TTaskGroup` and test benchmarks using this implementation seem to perform the same). > 2. Are you ok with silently do nothing if R__IMT is undefined? Would it be better to print a warning?. Thank you, yes, a warning would probably be better. > 3. Can we also have a way to disable RNTuple's multi-threading even if implicit MT is enabled, like TTree has?. Yes, this makes sense to me. It will probably need a big warning in the docs about when to call it and/or some graceful shutdown logic. Even if this PR doesn't make it that method might be valuable by itself. > the rationale behind my question is that we should not have N different multi-threading behaviors for N components. I completely agree, it is very nice to be able to say ""if you want multithreading, call `EnableImplicitMT` and you're done"". > and we should play well with the TBB settings of frameworks such as CMSSW, but it's not clear to me how we do that now, actually. For the RNTuple NanoAOD project, we were hoping to plug in the CMSSW tbb instance with `RPageStorage::SetTaskScheduler` (for both page sink and source): https://github.com/root-project/root/blob/a9c61d56afd70b74425779f330a4ec2cc581bb0b/tree/ntuple/v7/inc/ROOT/RPageStorage.hxx#L136. by implementing a derived `RTaskScheduler` on the CMSSW side so they have control over task isolation etc. ; https://github.com/root-project/root/blob/4118c0cb6db03998ae77f56f57cc372ac150c9df/tree/ntuple/v7/inc/ROOT",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8334#issuecomment-854977563:1079,log,logic,1079,https://root.cern,https://github.com/root-project/root/pull/8334#issuecomment-854977563,1,['log'],['logic']
Testability,ft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1973#issuecomment-394348081:3730,test,testReport,3730,https://root.cern,https://github.com/root-project/root/pull/1973#issuecomment-394348081,1,['test'],['testReport']
Testability,ft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://epsft-jenkins.cern.ch/job/root-pul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411129604:4027,test,testReport,4027,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411129604,1,['test'],['testReport']
Testability,ft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pull,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411165572:3755,test,testReport,3755,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411165572,1,['test'],['testReport']
Testability,function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:3449,test,test,3449,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['test']
Testability,function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-411277208:3348,test,testReport,3348,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-411277208,1,['test'],['testReport']
Testability,g tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_more](https://epsft,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:3626,test,test,3626,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,1,['test'],['test']
Testability,g_specialobj_stlwrite/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411084210:4010,test,testReport,4010,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411084210,1,['test'],['testReport']
Testability,h/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/). And 164,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-410966153:4030,test,testReport,4030,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-410966153,1,['test'],['testReport']
Testability,h/job/root-pullrequests-build/37787/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2496#issuecomment-414946221:3741,test,testReport,3741,https://root.cern,https://github.com/root-project/root/pull/2496#issuecomment-414946221,1,['test'],['testReport']
Testability,h/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175116758:1959,test,testReport,1959,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758,1,['test'],['testReport']
Testability,"hain.Add(""treefriend2.root/treefriend2"");; friendchain.Add(""treefriend3.root/treefriend3"");; ; parentchain.AddFriend(&friendchain);. parentchain.Scan(""y:treefriend.y"");; parentchain.Print(""all"");. ROOT::RDataFrame rdf{parentchain};; auto display = rdf.Display("""");; display->Print();; }; ```; ## Sub-case 2.1; If we have a name for the friend chain ""treefriend"", then we get; Result from TTree:Scan(""y:treefriend.y""):; ```; ************************************; * Row * y * treefrien *; ************************************; * 0 * 0 * 0 *; * 1 * 1 * 1 *; * 2 * 2 * 2 *; * 3 * 0 * 0 *; * 4 * 1 * 1 *; * 5 * 2 * 2 *; * 6 * 0 * 0 *; * 7 * 1 * 1 *; * 8 * 2 * 2 *; ************************************; ```; Result from TTree:Print(""all""):; ```; ******************************************************************************; *Chain :treeparent: treeparent1.root *; ******************************************************************************; ******************************************************************************; *Tree :treeparent: test friend trees *; *Entries : 3 : Total = 930 bytes File Size = 470 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :y : y/I *; *Entries : 3 : Total Size= 555 bytes File Size = 86 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ******************************************************************************; *Chain :treeparent: treeparent2.root *; ******************************************************************************; ******************************************************************************; *Tree :treeparent: test friend trees *; *Entries : 3 : Total = 930 bytes File Size = 470 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :y : y/I *; *Entries : 3 : Total Size= 555 bytes File S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816500613:6034,test,test,6034,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816500613,1,['test'],['test']
Testability,"har_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867); > > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17); > > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161); > > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7); > > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840); > > > > #14 0x0000000000a32349 _start (./cling+0xa32349); > > > > Stack dump:; > > > > 0.	Program arguments: ./cling -xcuda ; > > > > Segmentation fault (core dumped); > > > > ```; > > > ; > > > ; > > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session.; > > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.; > > > ; > > > ; > > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.; > > ; > > ; > > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-777250984:2907,test,test,2907,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-777250984,1,['test'],['test']
Testability,heads/pcanal-v6-18-00-patches does not point to a valid object! ; - error: refs/heads/pcanal-v6-18-00-patches does not point to a valid object! . ### Failing tests:; - [projectroot.runtutorials.tutorial_roofit_rf104_classfactory_py](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory_py/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runatlasaod](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runatlasaod/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runcms310](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runcms310/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runaliceesd](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runaliceesd/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_foreign](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testRe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-589606883:1642,test,testReport,1642,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-589606883,1,['test'],['testReport']
Testability,https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot/runtutorials/tutorial_roofit_rf104_classfactory_py/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runatlasaod](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runatlasaod/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runcms310](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runcms310/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runaliceesd](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runaliceesd/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_foreign](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_foreign/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/te,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-589606883:1875,test,testReport,1875,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-589606883,1,['test'],['testReport']
Testability,ible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.meta/test/gtest_core_meta_test_testStatusBitsChecker/); - [projectroot.core.meta.test,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:3234,test,testReport,3234,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,1,['test'],['testReport']
Testability,"id code duplication in `JSONFactories_RooFitCore`; 9a605d7f35 [RF][HS3] Make `combined_data_name` optional; b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs; f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting; 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication; a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas; 6b80645765 Revert ""[RF] Make RooBatchCompute dependency public.""; [RF] Move loop management for code generation into CodeSquashContext; [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); [RF] Add 'translate' to RooNllVarNew.; [RF] Remove function declarations in RooStats LinkDef.h; [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx; [RF] Move `ModelConfig` from RooStats to RooFit; [RF] Don't add `weightVar` to observables in HistFactory; [RF] Minor improvements to RooFit evaluation code generation; [RF][NFC] Fix typo.; [RF] Disable RooFuncWrapper test if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF][HS3] Put exported `histosys` in the correct vector; [RF][HS3] Avoid creating temporary objects to import into workspace; [RF][HS3][HF] General cleanup of HS3 HistFactory implementation; [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF][HS3] Consistent range for nominal alpha params with HistFactory; [RF][HS3] Remember simultaneous channel names when writing JSON; [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:1421,test,test,1421,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,1,['test'],['test']
Testability,id* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roott,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2366#issuecomment-407829804:3082,test,testReport,3082,https://root.cern,https://github.com/root-project/root/pull/2366#issuecomment-407829804,1,['test'],['testReport']
Testability,"igate why they do not work for; > us. You will probably see what's going wrong if you build this PR; > locally.; >; > I have built locally and don't see the issue (I don't even know what ; > I'm looking for). Both you and @pcanal <https://github.com/pcanal> ; > asked me to fix this and I spent actual time trying to figure out what ; > you guys were after and implementing a solution that has little cost ; > for both of us. I too suffer from lack time, so asking me to do work ; > then walking away without even giving a single example of what is ; > broken seems a bit rude....; >; Hm, for me the issue was obvious, sorry. You need to build ROOT, start ; it and type `int i`.; >; > Seriously, can I get one test that still fails with ; > https://reviews.llvm.org/D33529 ?; >; > If that cannot be done could @pcanal <https://github.com/pcanal> or ; > @Axel-Naumann <https://github.com/axel-naumann> at least verify that ; > after applying D33529 and setting |DynamicLibrary::SearchOrder = ; > SO_LoadedFirst; // or SO_LoadedLast (don't know the problem)| 500+ ; > tests are broken?; >; Now trying with SO_LoadedLast.; >; > I would appreciate if we can coordinate next time such breaking; > changes before asking for a llvm review and land patches in these; > particularly sensitive areas.; >; > I explicitly added you to the list of reviewers for the original ; > patch, there is little more I can do than that. And more coordination ; > is exactly what I am trying to do now. If we cannot reach a conclusion ; > may I at least be added to review whatever your solution looks like?; >; > 1. I plan to remove the NDEBUG assert; >; > Already done in D33529; >; > 2. Make the std::vector<void*> a; > std::vector<llvm::PointerIntPair<void*, 1, bool>>; >; > How can you guarantee that the platform will deliver a pointer with ; > proper alignment for that?; >; > 3. I will change the search order to search for first the one; > that are not marked RTLD_GLOBAL.; >; > So any other client that wants to ope",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313802370:1210,test,tests,1210,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313802370,1,['test'],['tests']
Testability,ild failed on ROOT-ubuntu2004/python3.; Running on root-ubuntu-2004-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/console).; ### Warnings:; - [2022-07-05T14:28:36.238Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T14:29:07.480Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175163072:1016,test,testReport,1016,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072,1,['test'],['testReport']
Testability,ild/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tprofile_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tprofile_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_ttree_read_imt_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_ttree_read_imt_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_th1f_fill_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_th1f_fill_build/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_libInitOrderDups_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_libInitOrderDups_build/); - [projectroot.roottest.root.meta.genreflex.ROOT-5709.roottest_root_meta_genreflex_ROOT_5709_Tau_libgen_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root.meta.genreflex/ROOT-5709/roottest_root_meta_genreflex_ROOT_5709_Tau_libgen_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_testSetAddress_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_testSetAddress_build/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_testSelector_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/169780/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_testSelector_build/). And 155 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12415#issuecomment-1456017123:1915,test,testReport,1915,https://root.cern,https://github.com/root-project/root/pull/12415#issuecomment-1456017123,4,['test'],['testReport']
Testability,ild/35970/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-410966153:3795,test,testReport,3795,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-410966153,1,['test'],['testReport']
Testability,ils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput/). And 93 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-393462547:4465,test,testReport,4465,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-393462547,4,['test'],['testReport']
Testability,impleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https:/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411101883:3719,test,testReport,3719,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411101883,1,['test'],['testReport']
Testability,impleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411165572:3991,test,testReport,3991,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411165572,1,['test'],['testReport']
Testability,ineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2CheckOutput/). And 111 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411084210:4288,test,testReport,4288,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411084210,4,['test'],['testReport']
Testability,"ing it, see if it fails, and if it doesn't fail declare it ""portable"" is exactly what causes folks to still cast pointers to long, for example. This would never happen if code was written with portability in mind from the get-go. But your closer exemplifies that even better: given the choice between *potential* scaling problems and *guaranteed* portability problems, you choose to accept the latter. Clearly, portability isn't high on your list. Portability is, however, very important. By providing a portable solution that works well within other environments, cppyy is now being used on large code bases in mathematics, chemistry, and biology. That work uncovers errors even deep inside Cling, because it is pushed harder and used differently than in the CINT-tamed HEP world. Here is a current problem I'm working on for example. Try it in ROOT master, and watch memory consumption grow with top or whatever:. ```; $ root -l -b; root [0] template <class T, class U> class __gmp_expr;; root [1] typedef struct{ } __mpz_struct;; root [2] typedef __gmp_expr<__mpz_struct[1],__mpz_struct[1]> mpz_class;; root [3] for (;;) gInterpreter->ClassInfo_IsEnum(""std::vector<mpz_class>::value_type""); ```. That leak occurs when `findScope` in the LookupHelper starts parsing whenever `quickFindDecl()` fails (it's nothing to do with `mpz_class` or `ClassInfo_IsEnum` per se, just that that's where it was first found). If `quickFindDecl()` succeeds, then no leak. Since this is an accumulation of internal state, it will _not_ be reported by valgrind as a leak. Use of `findScope` is pervasive, not just from Python, but also from I/O and in clingutils. So, you're sitting on a leak even in HEP (where, especially in the LHC experiments, memory is precious), but your standard test tools won't catch it. To discover these types of deep problems, you need portable software, as that allows it to be used by a wider audience, causing it to be better tested simply through the virtue of having more eyes on it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-707273510:4522,test,test,4522,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-707273510,2,['test'],"['test', 'tested']"
Testability,"ing of `JSONFactories_HistFactory`; [RF][HS3] Correctly consider weight errors in `readBinnedData()`; [RF][HS3] Small code style improvement (renaming); [RF][HS3] Make `testHS3HistFactory` less verbose; [RF][HS3] Changed some JSON keywords to comply with new HS3 standard; [RF][HS3] Moved `DependencyMissingError` to public to make it catchable; [RF][HS3] Support MultiVarGaussian and TF1Binding plus code cleanup; [RF][HS3] Added helper function for writing matrices in JSONInterface; [RF][HS3] JSON IO of positive definite flag in PiecewiseInterpolation; [RF] Added getters to TFnBinding, MultiVarGauss, PiecewiseInterpolation; [RF] Avoid invalid pointer access in `RooAbsPdf::printStream()`; [RF] Add intiial minimizer interface for RooFuncWrapper.; [RF] Improve code in `MinuitFcnGrad`; [RF] Code improvements in tests for new TestStatistics; [RF] Composition over inheritance in RooAbsMinimizerFcn implementations; [RF] No need for `RooAbsMinimizerFcn::fit()` method; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`; Add AD based derivatives for RooFuncWrapper.; [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; [RF] Make it possible to switch to `ryml` backend after building ROOT; [RF] Add a C/C++ function wrapper class in roofit.; [RF] Fix implementation error from typo in `RooGenProdProj`; [RF] New mechanism to implicitly convert numbers to RooRealVar&; [RF] Remove RooFormula code for gcc <= 4.8; [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; [RF] More use of `snapshot()` overload with output parameter; [RF] Bring back `RooStats::FeldmanCousins::SetData()`; [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12618#issuecomment-1497317057:7523,test,testRooFuncWrapper,7523,https://root.cern,https://github.com/root-project/root/pull/12618#issuecomment-1497317057,1,['test'],['testRooFuncWrapper']
Testability,ing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393485196:3634,test,testReport,3634,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393485196,1,['test'],['testReport']
Testability,ing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117#issuecomment-393471686:3634,test,testReport,3634,https://root.cern,https://github.com/root-project/root/pull/2117#issuecomment-393471686,1,['test'],['testReport']
Testability,ins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1973#issuecomment-394348081:3971,test,testReport,3971,https://root.cern,https://github.com/root-project/root/pull/1973#issuecomment-394348081,1,['test'],['testReport']
Testability,ins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make/); - [projectroot.roottest.root.tree.split.roottest_root_tree_split_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/split/roottest_root_tree_split_make/); - [projectroot.roottest.root.treeformula.string.roottest_root_treeformula_string_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.treeformula/string/roottest_root_treeformula_string_make/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readFcc/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt/). And 2 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-415844036:4191,test,testReport,4191,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-415844036,4,['test'],['testReport']
Testability,"int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:187:76: warning: cast between incompatible function types from ‘void (*)(void*, FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:188:76: warning: cast between incompatible function types from ‘void (*)(FTGL_DOUBLE*, void**, GLfloat*, void**, FTMesh*)’ {aka ‘void (*)(double*, void**, float*, void**, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:189:76: warning: cast between incompatible function types from ‘void (*)(FTMesh*)’ to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/graf3d/ftgl/src/FTVectoriser.cxx:190:76: warning: cast between incompatible function types from ‘void (*)(GLenum, FTMesh*)’ {aka ‘void (*)(unsigned int, FTMesh*)’} to ‘GLUTesselatorFunction’ {aka ‘void (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] . And 193 more. ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43493/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.root.multicore.roottest_root_multicore_processExecutorH1Test](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/43493/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_processExecutorH1Test/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2768#issuecomment-427830089:2803,test,tests,2803,https://root.cern,https://github.com/root-project/root/pull/2768#issuecomment-427830089,3,['test'],"['testReport', 'tests']"
Testability,ion-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_me,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:3324,test,testReport,3324,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,2,['test'],"['test', 'testReport']"
Testability,"ionResult&, cling::Value*, bool) (./cling+0xb10d17); > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161); > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7); > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840); > > > #14 0x0000000000a32349 _start (./cling+0xa32349); > > > Stack dump:; > > > 0.	Program arguments: ./cling -xcuda ; > > > Segmentation fault (core dumped); > > > ```; > > ; > > ; > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session.; > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.; > > ; > > ; > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.; > ; > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-777052629:2946,test,test,2946,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-777052629,1,['test'],['test']
Testability,irtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testRepo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411101883:3262,test,testReport,3262,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411101883,1,['test'],['testReport']
Testability,irtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:3262,test,testReport,3262,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,1,['test'],['testReport']
Testability,"isplay->Print();; }; ```. Result from TTree:Scan(""x:treefriend.x""):; ```; ************************************; * Row * x * treefrien *; ************************************; * 0 * 0 * 0 *; * 1 * 1 * 1 *; * 2 * 2 * 2 *; * 3 * 3 * 3 *; * 4 * 4 * 4 *; * 5 * 5 * 5 *; * 6 * 6 * 6 *; * 7 * 7 * 7 *; * 8 * 8 * 8 *; ************************************; ```; Result from TTree:Print(""all""):; ```; ******************************************************************************; *Tree :treeparent: test friend trees *; *Entries : 9 : Total = 1074 bytes File Size = 494 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :x : x/I *; *Entries : 9 : Total Size= 583 bytes File Size = 110 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ******************************************************************************; *Tree :treefriend: test friend trees *; *Entries : 9 : Total = 958 bytes File Size = 490 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :x : x/I *; *Entries : 9 : Total Size= 583 bytes File Size = 110 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ```; Result from rdf.Display()->Print():; ```; x | treefriend.x | ; 0 | 0 | ; 1 | 1 | ; 2 | 2 | ; 3 | 3 | ; 4 | 4 | ; 5 | 5 | ; 6 | 6 | ; 7 | 7 | ; 8 | 8 | ; ```; So far so good! Nothing special here, fortunately :smile: . # Case 2; Code; ```cpp. void write_tree(std::string_view filename, std::string_view treename); {; int y{};. TFile file{filename.data(), ""recreate""};; TTree tree{treename.data(), ""test friend trees""};; tree.Branch(""y"", &y, ""y/I"");. for (int i = 0; i < 3; i++); {; y = i;; tree.Fill();; }; tree.Write();; }. void write_chain_and_friends(); {; // Write parent chain to disk.;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816500613:3220,test,test,3220,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816500613,1,['test'],['test']
Testability,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143358479:1809,test,testReport,1809,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479,4,['test'],['testReport']
Testability,jectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1153748598:1809,test,testReport,1809,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598,4,['test'],['testReport']
Testability,jectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144990827:1810,test,testReport,1810,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827,4,['test'],['testReport']
Testability,kdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2118#issuecomment-393467051:4185,test,testReport,4185,https://root.cern,https://github.com/root-project/root/pull/2118#issuecomment-393467051,1,['test'],['testReport']
Testability,"king leftover after the analysis (see any file ending with `_patch` and compare it with the same file ending with `_master`). Now that the main source of memory usage is gone, I have noticed a much smaller contribute that still seems to make the memory increase in the flamegraphs. And it seems to have something to do with the increased number of files, at least on the surface. Let's take the following two files to compare:; * test_agc_9sample_1file_10task_patch.html; * test_agc_9sample_10file_10task_patch.html. They are running exactly the same script, with all 9 RDF samples. In the first case we have 1 file per sample, in the second case 10 files per sample. The memray flamegraph report a total of 253.5 MB used for the first case and 260.9 MB used for the first case (7.4 MB delta). There are two main parts of the graph: the one deriving from the `clone` of the Dask process, where the actual analysis code is run, and the one deriving from the `_start` function where most of the Python code around the analysis is (things like `import`ing packages or the Dask worker-scheduler communication). The difference between the two graphs in the `clone` part is of 0.6 MB, the difference between the two `_start` parts is 6.7 MB, so I focus on that from now on. This 6.7 MB difference is in turn split between a 0.1 MB difference deriving from `_PyObject_VectorcallTState` and 6.6 MB difference deriving from. Finally, the vast majority of these 6.6 MB comes from:; * The metrics gathered by profiling (i.e. memray itself); * Dask communication protocol. [Screencast from 2024-07-26 10-47-18.webm](https://github.com/user-attachments/assets/3a21ea3e-c130-42af-b50b-bb324b06eaaa). TL;DR: After this patch the leftover memory increase may be attributed mostly to Dask or memray itself. To confirm this, I have executed the full AGC benchmark on the SWAN platform with 64 workers of the CERN condor pools for 10 times in a row. At the end of the 10th run all the workers have a total RSS of < 1GB.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16094#issuecomment-2252273470:2086,benchmark,benchmark,2086,https://root.cern,https://github.com/root-project/root/pull/16094#issuecomment-2252273470,1,['benchmark'],['benchmark']
Testability,kins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://epsft-jenkins.cern.ch/job,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2496#issuecomment-414946221:3971,test,testReport,3971,https://root.cern,https://github.com/root-project/root/pull/2496#issuecomment-414946221,1,['test'],['testReport']
Testability,lMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](ht,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:3527,test,test,3527,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['test']
Testability,lX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2496#issuecomment-414946221:3267,test,testReport,3267,https://root.cern,https://github.com/root-project/root/pull/2496#issuecomment-414946221,1,['test'],['testReport']
Testability,"laboratedType 0xbf7c100 'struct __locale_struct' sugar; `-RecordType 0xbf7ba40 '__locale_struct'; `-CXXRecord 0xbf7b988 '__locale_struct'; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377744663:4106,test,test-products,4106,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663,1,['test'],['test-products']
Testability,ld/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversio,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-414258112:4055,test,testReport,4055,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-414258112,1,['test'],['testReport']
Testability,"ld/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411309441:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411309441,1,['test'],['tests']
Testability,le function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/); - [projectroot.core.base.test.gtest_core_base_test_CoreBaseTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.base/test/gtest_core_base_test_CoreBaseTests/); - [projectroot.core.cont.test.gtest_core_cont_test_coreconttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.cont/test/gtest_core_cont_test_coreconttestUnit/); - [projectroot.core.cont.test.gtest_core_cont_test_testType,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:3482,test,testReport,3482,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,1,['test'],['testReport']
Testability,le output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/console).; ### Warnings:; - [2022-09-13T17:42:54.005Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-09-13T17:43:20.121Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/154244/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1245798559:1149,test,testReport,1149,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1245798559,1,['test'],['testReport']
Testability,les.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Clearly mark `RooFit::CloneData()` as deprecated; [RF] Again code-format RooMinimizer; [RF] Avoid overhead of tracking evaluation error msgs when not needed; [RF] Implement safe way to set eval error logging in RooMinimizer; [RF] Use proper infinity checks in RooFit HS3; [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code; [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable; [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Inline infinity constant and checks in `RooNumber`; [RF] Code-format RooNumber.h and RooNumber.cxx; [RF] Fill weight errors when importing RooDataHists to RooDataSet; [RF] Make it possible to directly import RooDataHist to RooDataSet; [RF] Reduce code duplication in RooDataSet constructor; [RF] Always create weight var in RooDataSet when importing weighted data; [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist; [RF] Support also importing `RooDataHists` into RooDataSets; [RF] Avoid some code duplication in `RooDataSet` with importing slices; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`; Add AD based derivatives for RooFuncWrapper.; [cxxmodules] Enable a few modules for Windows. Now we can run hsimple.C.; [RF] Make it possible to switch to `ryml` backend after building ROOT; [RF] Add a C/C++ function wrapper class in roofit.; [RF] Fix implementation error from typo in `RooGenProdProj`; [RF] New mechanism to implicitly convert numbers to RooRealVar&; [RF] Remove RooFormula code for gcc <= 4.8; [RF] Remove `RooGenFunction` and `RooMultiGenFunction`; [RF] More use of `snapshot()` overload with output parameter; [RF] Bring back `RooStats::FeldmanCousins::SetData()`; [RF] Remove deprecated RooFit parts that are marked for removal in 6.30; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:9427,test,testRooFuncWrapper,9427,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,1,['test'],['testRooFuncWrapper']
Testability,"libc.string.h hidden __filename 'const char *'; `-NonNullAttr 0xb606208 </usr/include/sys/cdefs.h:285:44, /usr/include/string.h:602:69> 1; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f3887b30630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1249:48; #9 0x0000000004639003 clang::ASTWriter::getSubmoduleID(clang::Module*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/tools/clang/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377827282:38119,test,test-products,38119,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377827282,1,['test'],['test-products']
Testability,llrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:3140,test,test,3140,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['test']
Testability,lobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root/multicore/roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411309441:3554,test,testReport,3554,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411309441,1,['test'],['testReport']
Testability,lobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.cling.dict.fwd-decl-stdless.roottest_cling_dict_fwd_decl_stdless_execLessyTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.cling.dict/fwd-decl-stdless/roottest_cling_dict_fwd_decl_stdless_execLessyTest/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_runTTestClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.cling/parsing/roottest_cling_parsing_runTTestClass/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadNamespace](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadNamespace/); - [projectroot.roottest.root.meta.roottest_root_meta_runautoload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root/meta/roottest_root_meta_runautoload_auto/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root/meta/roottest_r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395599631:3039,test,testReport,3039,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395599631,1,['test'],['testReport']
Testability,"losure for ATLAS ttW workspace; [RF][HS3] Sorting distributions; [RF][HS3] Bugfixes for histfactory workspaces; [RF][HS3] Small renamings; [RF][HS3] Improved attribute handling, caught some typecast-errors; [RF][HS3] Bugfix for FlexibleInterpVar; [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF][HS3] Re-retrieve element after exporting dependants; [RF][HS3] Don't write `histfactory_dist` axes redundantly; [RF] Exclude RooHistError from IO; [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; [RF] Code-format `testRooDataHist.cxx`; [RF][HS3] Change analysis and likelihoods fields to match HS3 standard; [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`; [RF] Modernize `RooVectorDataStore::RealFullVector` class; [RF][HS3] Move attributes and string attributes to `misc/ROOT_internal`; [RF][HS3] Support IO of models with RooConstVars; [RF][HS3] Don't do conversion to unbinned dataset manually in JSONIO; [RF] Enable AD code-gen test for RooFit.; [RF][HS3] Use arrays and not dicts to specify data axes; [RF][HS3] Remove exporter and importer function for RooProdPdf; [RF] Add function to clear node to RooFit JSON interface; [RF][HS3] Make ""parameter_points"" field conform with HS3 standard; [RF][HS3] Also migrate distributions and functions from dicts to arrays; [RF][HS3] Change some fields to use arrays and not dictionaries; [RF] Suggest alternative to RooDataSet c'tor that takes weight name; [RF] Add unit test for splitting RooDataSets with weight errors; [RF] Add weight errors and not weight squared when filling split data; [RF] Correctly propagate error storage in `RooDataSet::emptyClone()`; [RF][HS3] Don't assume that combined dataset name is always `""obsData""`; [RF][HS3] Use less `c_str()` conversions in Ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:4263,test,test,4263,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,2,['test'],['test']
Testability,"low=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_semaphore](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29029/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_semaphore/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_emptysource_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29029/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_emptysource_build/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_emptysource](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29029/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_emptysource/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2147#issuecomment-394741633:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2147#issuecomment-394741633,4,['test'],"['testReport', 'tests']"
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/project",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2495#issuecomment-414953063:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2495#issuecomment-414953063,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414956948:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414956948,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.cling.speci",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2496#issuecomment-414946221:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2496#issuecomment-414946221,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pull",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.roottest.root.multicore.roottest_root_multicore_poolManager_build](https:/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409277662:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409277662,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_load](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_load/); - [projectroot.roottest.cling.stl.dicts.roottest_cling_stl_dicts_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.stl/dicts/roottest_cling_stl_dicts_build/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stl_makeproject_test_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stl_makeproject_test_build/); - [projectroot.rootte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2454#issuecomment-411275022:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2454#issuecomment-411275022,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/project",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411059605:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411059605,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411101883:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411101883,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2366#issuecomment-407829804:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2366#issuecomment-407829804,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411201963:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411201963,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411165572:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411165572,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/pickle/roo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411177216:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411177216,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411129604:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411129604,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36213/testRepor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-411277208:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-411277208,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.event.roottest_root_io_event](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/event/roottest_root_io_event/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411089672:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411089672,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https:/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411701514:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411701514,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_R",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411436247:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411436247,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-414258112:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-414258112,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-398607736:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-398607736,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400118785:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400118785,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-410966153:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-410966153,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.ce",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmd",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411084210:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411084210,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['tests']
Testability,"lrequests-build/root/core/base/src/TSystem.cxx:1149:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1769:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1775:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_testForeignDraw](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tree.cloning.roottest_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-415844036:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-415844036,1,['test'],['tests']
Testability,"lrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30614/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2200#issuecomment-398742839:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2200#issuecomment-398742839,2,['test'],"['testReport', 'tests']"
Testability,"lrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30623/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2220#issuecomment-398762202:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2220#issuecomment-398762202,2,['test'],"['testReport', 'tests']"
Testability,"lrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30632/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2221#issuecomment-398776137:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2221#issuecomment-398776137,2,['test'],"['testReport', 'tests']"
Testability,"lrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30650/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2200#issuecomment-398788089:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2200#issuecomment-398788089,2,['test'],"['testReport', 'tests']"
Testability,"lrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30389/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2201#issuecomment-398001738:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2201#issuecomment-398001738,2,['test'],"['testReport', 'tests']"
Testability,"ls using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF][HS3] Consistent range for nominal alpha params with HistFactory; [RF][HS3] Remember simultaneous channel names when writing JSON; [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip; [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints; [RF][HS3] Don't mix up free functions and class impl in JSON tool; [RF][HS3] Consistently have implicit fallback for HistFactory variables; [RF][HS3] Don't import datasets that are parts of a combined dataset; [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`; [RF][HS3] Generate input file for testHS3HistFactory on the fly; [RF][HS3] Improvements to the HS3 HistFactory implementation; [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; [RF][HS3] Some refactoring for less lines of code; [RF][HS3] Ordering fixes; [RF][HS3] Achieved closure for ATLAS ttW workspace; [RF][HS3] Sorting distributions; [RF][HS3] Bugfixes for histfactory workspaces; [RF][HS3] Small renamings; [RF][HS3] Improved attribute handling, caught some typecast-errors; [RF][HS3] Bugfix for FlexibleInterpVar; [RF] Avoid unnecessary warnings in `FlexibleInterpVar::setInterpCode`; [RF] Enable analytic integration of RooHistPdfs with RooLinearVars; [RF] Replace `RooAbsReal::_lastNSet` pointer with ID of last normSet; [RF] Remove `evaluateSpan()` from RooGenericPdf and RooFormulaVar; [RF][HS3] Re-retrieve element after exporting dependants; [RF][HS3] Don't write `histfactory_dist` axes redundantly; [RF] Exclude RooHistError from IO; [RF] Remove `add(row, weight, weightError)` from RooAbsData interface; [RF] Code-format `testRooDataHist.cxx`; [RF][HS3] Change analysis and likelihoods fields to match HS3 standard; [RF] Remove native buffers from `RooVectorDataStore::RealFullVector`; [RF] Modernize `RooVectorDataStore::RealF",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:3823,test,testRooDataHist,3823,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,2,['test'],['testRooDataHist']
Testability,ls/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput/). And 234 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2366#issuecomment-407829804:4464,test,testReport,4464,https://root.cern,https://github.com/root-project/root/pull/2366#issuecomment-407829804,4,['test'],['testReport']
Testability,ls/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36186/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/). And 113 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411165572:4247,test,testReport,4247,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411165572,4,['test'],['testReport']
Testability,ls/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/); - [projectroot.core.base.test.gtest_core_base_test_CoreBaseTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.base/test/gtest_core_base_test_CoreBaseTests/); - [projectroot.core.cont.test.gtest_core_cont_test_coreconttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.cont/test/gtest_core_cont_test_coreconttestUnit/); - [projectroot.core.cont.test.gtest_core_cont_test_testTypedIteration](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.cont/test/gtest_core_cont_test_testTypedIteration/); - [projectroot.core.imt.test.gtest_core_imt_test_coreimttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.imt/test/gtest_core_imt_test_coreimttestUnit/). And 120 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:3916,test,testReport,3916,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,14,['test'],"['test', 'testReport']"
Testability,m ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_testForeignDraw](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make/); - [projectroot.roottest.root.tree.split.roottest_root_tree_split_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/split/roottest_root_tree_split_make/); - [projectroot.roottest.root.treeformula.string.roottest_root_treeformula_string_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.treeformula/string/roottest_root_tre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-415844036:3503,test,testReport,3503,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-415844036,1,['test'],['testReport']
Testability,m ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.data,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:3227,test,test,3227,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['test']
Testability,mdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execOld/). And 216 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411129604:4263,test,testReport,4263,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411129604,4,['test'],['testReport']
Testability,"mes 'const char *[13]'; |-TypedefDecl 0xbf7c1c8 <line:27:1, line:39:4> col:4 in xlocale.h hidden referenced __locale_t 'struct __locale_struct *'; | `-PointerType 0xbf7c170 'struct __locale_struct *'; | `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; | `-RecordType 0xbf7ba40 '__locale_struct'; | `-CXXRecord 0xbf7b988 '__locale_struct'; `-TypedefDecl 0xbf7c278 <line:42:1, col:20> col:20 in xlocale.h hidden locale_t '__locale_t':'struct __locale_struct *'; `-TypedefType 0xbf7c240 '__locale_t' sugar; |-Typedef 0xbf7c1c8 '__locale_t'; `-PointerType 0xbf7c170 'struct __locale_struct *'; `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; `-RecordType 0xbf7ba40 '__locale_struct'; `-CXXRecord 0xbf7b988 '__locale_struct'; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e390",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377744663:3470,test,test-products,3470,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663,1,['test'],['test-products']
Testability,"n RooFit JSON IO; [RF] Add test for a simultaneous model written and read from JSON; [RF] Skip the RooSimultaneous in JSON IO; [RF] Don't export `factory_tag` in JSON; [RF][HS3] Move the default variable values to the estimates section; [RF] RooFit JSON: no need to tag variables, just export them; [RF] Rename fields in JSON file to match new standard; [RF] Complete also the reading of likelihoods and analysis fields; [RF] Add likelihoods and analyses fields for HS3 v2; [RF] Decouple `RooDataHist` reading from rest of workspace in RooFitHS3; [RF] Some refactoring of RooFit HS3; [RF] New `domains` section in JSON to store variable ranges; Fix modules and modules.idx generation on Windows and disable a few more modules causing potential crashes (#12252); [RF] Clearly mark `RooFit::CloneData()` as deprecated; [RF] Again code-format RooMinimizer; [RF] Avoid overhead of tracking evaluation error msgs when not needed; [RF] Implement safe way to set eval error logging in RooMinimizer; [RF] Use proper infinity checks in RooFit HS3; [RF] Avoid `sin` or `cos` of infinity in RooTruthModel integral code; [RF] RooTruthModel: local `xmin` and `xmax` to make code more readable; [RF] Define infinity as `std::numeric_limits<double>::infinity()`; [RF] Inline infinity constant and checks in `RooNumber`; [RF] Code-format RooNumber.h and RooNumber.cxx; [RF] Fill weight errors when importing RooDataHists to RooDataSet; [RF] Make it possible to directly import RooDataHist to RooDataSet; [RF] Reduce code duplication in RooDataSet constructor; [RF] Always create weight var in RooDataSet when importing weighted data; [RF] Implicitly create `WeightVar` for RooDataSet if it doesn't exist; [RF] Support also importing `RooDataHists` into RooDataSets; [RF] Avoid some code duplication in `RooDataSet` with importing slices; [RF] Split RooFuncWrapper into '.h' and '.cxx'.; [RF] Add observables as another parameter in RooFuncWrapper.; [RF] Test rough prototype of code generation in `testRooFuncWrapper`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:8412,log,logging,8412,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,1,['log'],['logging']
Testability,n types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.event.roottest_root_io_event](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/event/roottest_root_io_event/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/comple,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411089672:3246,test,testReport,3246,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411089672,1,['test'],['testReport']
Testability,n::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/3,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-414258112:3057,test,testReport,3057,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-414258112,1,['test'],['testReport']
Testability,n::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.meta/test/gtest_core_meta_test_testStatusBitsChecker/); - [projectroot.core.meta.test.gtest_core_meta_test_testHashRecursiveRemove](https://epsft-jenkins.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:3273,test,test,3273,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,1,['test'],['test']
Testability,"nZkgUdV1JAkX1sggUN0gjUoY2wXoknURAriaSAkihiEUxsQMX1cYUvE5H4LPczxemc16dOdBMTMC2LDDSZMJRiQEosS7JzOhjpjTC/EX0LJsmCYMTGimfNQP4Zwezgp%2BP7XbVO0uem6MeV5WMnf5eNBSF3U3fBOyXcmFVe1FWWxfFkg2W1b2SM9GhOW9GhcDZc3JalpscBlobg3Fc3tYtFkgxnCyEekziSEAA%3D). There, by commenting the template declaration of the move constructor, one can see the corresponding AST definition data being filled, i.e. from; > ; > ```; > | | |-MoveConstructor; > ```; > ; > to; > ; > ```; > | | |-MoveConstructor exists non_trivial user_declared; > ```; > ; > I am surely not expert enough in this area, but I noticed that when the constructor is templated the corresponding `CXXConstructorDecl` is nested inside a `FunctionTemplateDecl`, so that may be ""hiding"" it somehow?. I suppose that with a template move constructor is not the ""canonical form"" of a move constructor (or whatever the right standardese is). I was hoping that it's reported once the template is instantiated, but that doesn't seem the case either. In any case, what you really want to ask Clang is ""can you copy-construct this thing"" and ""can you move-construct this thing"". That logic is implemented in `EvaluateBooleanTypeTrait` of `SemaExprCXX.cpp` and is indeed a bit hairy because it actually has to run through all the machinery of template instantiation and overload resolution. You can invoke that machinery via `Sema::BuildTypeTrait` with `Kind = clang::TT_IsConstructible`. Alternatively, you can try using the `__is_constructible` builtin in the generated wrapper code, but I'm not sure how that would work because it's not available in the preprocessor... Final remark: A better heuristic could be to check for [`defaultedCopyConstructorIsDeleted()`](https://clang.llvm.org/doxygen/classclang_1_1CXXRecordDecl.html#a6cd5ebd1006eab239a19413c2886dab3) and then just try the `std::move`. I think that heuristic still has false-negatives and false-positives, but I think it gets the one case right where the explicit intent is to `delete` the copy constructor...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14426#issuecomment-1918556597:2505,log,logic,2505,https://root.cern,https://github.com/root-project/root/pull/14426#issuecomment-1918556597,1,['log'],['logic']
Testability,n_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.core.thread.test.gtest_core_thread_test_testTThreadedObject](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.core.thread/test/gtest_core_thread_test_testTThreadedObject/). And 110 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2495#issuecomment-414953063:4393,test,testReport,4393,https://root.cern,https://github.com/root-project/root/pull/2495#issuecomment-414953063,6,['test'],"['test', 'testReport']"
Testability,nc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.tree/cache/roottest_roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-410966153:3561,test,testReport,3561,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-410966153,1,['test'],['testReport']
Testability,nc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testRepo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411201963:3314,test,testReport,3314,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411201963,1,['test'],['testReport']
Testability,"nd [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.cling.dict.fwd-decl-stdless.roottest_cling_dict_fwd_decl_stdless_execLessyTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.cling.dict/fwd-decl-stdless/roottest_cling_dict_fwd_decl_stdless_execLessyTest/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_runTTestClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.cling/parsing/roottest_cling_parsing_runTTestClass/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadNamespace](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadNamespace/); - [projectroot.roottest.root.meta.roottest_root_meta_runautoload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395599631:2782,test,testReport,2782,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395599631,1,['test'],['testReport']
Testability,"nd [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:2782,test,testReport,2782,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['testReport']
Testability,"nd questions arising from @hageboeck's review:. 1. https://github.com/root-project/root/pull/8700#discussion_r672508683 Should RooRealL have I/O? It is currently disabled by setting ClassDef version to 0.; 2. https://github.com/root-project/root/pull/8700#discussion_r672509759 RooFit naming convention puts underscores in front of member names. This is discouraged, since underscore prefix is reserved for C++ implementations. I introduced some new members with underscore suffix instead, which is also common practice e.g. in the Google C++ guidelines. I think this is not something we should spend too much time on now, but maybe good to keep in mind for the future.; 3. https://github.com/root-project/root/pull/8700#discussion_r672519457 The configuration parameters (GlobalObservables etc.): should we unify them or keep like this?; 4. https://github.com/root-project/root/pull/8700#discussion_r672538377 This should be checked by Wouter. In addition, some other remaining questions:; 1. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test.; 2. In an ideal world I would have liked to add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, this will take time. The advantage would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the MultiProcess minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in ""PR 7"" (see overview). So, up for discussion, two choices: A: add (probably mostly useless except for testing this PR) ""LikelihoodGradientSerial""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-915217168:1013,test,testRooRealL,1013,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-915217168,1,['test'],['testRooRealL']
Testability,neUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.core.thread.test.gtest_core_thread_test_testTThreadedObject](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.core.thread/test/gtest_core_thread_test_testTThreadedObject/). And 232 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411201963:4299,test,testReport,4299,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411201963,6,['test'],"['test', 'testReport']"
Testability,"ng between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:696:48: warning: ‘%s’ directive output may be truncated writing up to 1024 bytes into a region of size 64 [-Wformat-truncation=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] . And 179 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.cling.dict.ROOT-9185.roottest_cling_dict_ROOT_9185_ROOT9185](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.cling.dict/ROOT-9185/roottest_cling_dict_ROOT_9185_ROOT9185/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851#issuecomment-408947574:2607,test,testReport,2607,https://root.cern,https://github.com/root-project/root/pull/1851#issuecomment-408947574,1,['test'],['testReport']
Testability,ng: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.event.roottest_root_io_event](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/event/roottest_root_io_event/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411089672:3455,test,testReport,3455,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411089672,1,['test'],['testReport']
Testability,ngs:; - [2022-07-05T14:28:36.238Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-05T14:29:07.480Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175163072:1271,test,testReport,1271,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072,1,['test'],['testReport']
Testability,nkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.cling.dict.ROOT-9185.roottest_cling_dict_ROOT_9185_ROOT9185](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.cling.dict/ROOT-9185/roottest_cling_dict_ROOT_9185_ROOT9185/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851#issuecomment-408947574:3789,test,testReport,3789,https://root.cern,https://github.com/root-project/root/pull/1851#issuecomment-408947574,1,['test'],['testReport']
Testability,"nkins.cern.ch/job/root-pullrequests-build/67064/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:39:47: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:40:61: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:43:64: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:44:78: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:46:64: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:47:78: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:49:85: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] . ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67064/testReport/projectroot.roottest.root.selector/simple/roottest_root_sele",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-527804099:1176,test,test,1176,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-527804099,1,['test'],['test']
Testability,nkins/job/root-pullrequests-build/146659/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144980019:1677,test,testReport,1677,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019,1,['test'],['testReport']
Testability,nkins/job/root-pullrequests-build/146675/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145207749:1677,test,testReport,1677,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749,1,['test'],['testReport']
Testability,"not be possible to add a parameter) would be to (once more) use magic numbers for the `numOptions` parameter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090#issuecomment-1064634456:1358,test,test,1358,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456,2,['test'],['test']
Testability,ns.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:3689,test,test,3689,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['test']
Testability,ns/job/root-pullrequests-build/164000/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018#issuecomment-1380358995:1366,test,testReport,1366,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995,1,['test'],['testReport']
Testability,"nsole).; ### Warnings:; - [2020-05-25T10:19:25.159Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-05-25T10:26:03.641Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_operator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_operator/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.cling.roottest_python_cling_cling](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/cling/roottest_python_cling_cling/); - [projec",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5692#issuecomment-633509680:1405,test,testReport,1405,https://root.cern,https://github.com/root-project/root/pull/5692#issuecomment-633509680,1,['test'],['testReport']
Testability,o ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.cling.dict.fwd-decl-stdless.roottest_cling_dict_fwd_decl_stdless_execLessyTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.cling.dict/fwd-decl-stdless/roottest_cling_dict_fwd_decl_stdless_execLessyTest/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_runTTestClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.cling/parsing/roottest_cling_parsing_runTTestClass/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadNamespace](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadNamespace/); - [projectroot.roottest.root.meta.roottest_root_meta_runautoload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root/meta/roottest_root_meta_runautoload_auto/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root/meta/roottest_root_meta_runtemplateAutoload_auto/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoloadInclude_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root/meta/roottest_root_meta_runtemplateAutoloadInclude_auto/); - [projectroot.roottest.root.meta.rootcling.roottest_root_meta_rootcling_includeInLinkdef](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.meta/rootclin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395599631:3527,test,testReport,3527,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395599631,1,['test'],['testReport']
Testability,ob/root-pullrequests-build/36231/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.tree/ca,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411309441:3775,test,testReport,3775,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411309441,1,['test'],['testReport']
Testability,ob/root-pullrequests-build/37823/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.io.io.test.gtest_io_io_test_TROMemFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.io.io/test/gtest_io_io_test_TROMemFile/); - [projectroot.math.genetic.test.genetic_testGAMinimizer](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.math.genetic/test/genetic_testGAMinimizer/); - [projectroot.math.genetic.test.genetic_GAMinTutorial](https://,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414956948:3775,test,testReport,3775,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414956948,1,['test'],['testReport']
Testability,obalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pull,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-398607736:3533,test,testReport,3533,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-398607736,1,['test'],['testReport']
Testability,obalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pull,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400118785:3533,test,testReport,3533,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400118785,1,['test'],['testReport']
Testability,ojectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_gdirectoryRestore](https://epsf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:3786,test,test,3786,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['test']
Testability,"olve copying the two operands. With this sense, a friend TTree is equivalent to a left join where both unique IDs correspond to the event index and are the same number. I completely agree that this is a limit, indexed friends only extend it a little bit by allowing different sets of event indexes in the two tables. The idea of an heterogeneous dataset layout, with some datasets/samples having to be left-joined and others having to be inner-joined (for example), involves some design work and I would like to discuss it further, although I'd like to get a better idea of the use cases that need any joins other than left join. > Entry ranges: I don't think this is very useful data to record. This is either kept track of as a good-luminosity block list, or specified at execution time by the user. During the meeting a few weeks ago there was quite a large consensus on this information being useful when written at the datasets/samples level. I also agree with you that an entry range is usually specified when testing before running the full thing. Nonetheless, the important part of this feature was the ability to tie a specific entry range to a specific dataset/sample and not to the global dataset, so that even when testing at least N entries from each dataset/sample would be processed. If this is not specified when definining the dataset metadata, then I suppose we should expose some API like:. ```python; entry_ranges = [(0,1000), (50000, 60000)] # taken from my initial specification example; df = RDataFrame(...); df.SetEntryRanges(entry_ranges); ```; And similarly for coffea and other frameworks. What I don't like about this is that I need to remember how many datasets/samples I have in my specification so that `len(entry_ranges)` corresponds to that number. Of course the tool can error and say ""You have specified too many entry ranges, please use only N"", maybe that's good enough but I'm not sure. One other comment could be that we don't need to have exactly one entry rang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11624#issuecomment-1297411993:3251,test,testing,3251,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1297411993,1,['test'],['testing']
Testability,om ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:3502,test,testReport,3502,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,1,['test'],['testReport']
Testability,om ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.core.imt.test.gtest_core_imt_test_coreimttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_core_imt_test_coreimttestUnit/); - [projectroot.core.imt.test.gtest_core_imt_test_testTFuture](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_core_imt_test_testTFuture/); - [projectroot.io.io.test.gtest_io_io_test_TROMemFile](https://epsf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411701514:3256,test,testReport,3256,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411701514,1,['test'],['testReport']
Testability,on sft-ubuntu-1604-1.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/console).; ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144990827:1065,test,testReport,1065,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827,1,['test'],['testReport']
Testability,on-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393485196:3354,test,testReport,3354,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393485196,1,['test'],['testReport']
Testability,on::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:3047,test,test,3047,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,1,['test'],['test']
Testability,oot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:3656,test,testReport,3656,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['testReport']
Testability,oot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.meta/test/gtest_core_meta_test_testStatusBitsChecker/); - [projectroot.core.meta.test.gtest_core_meta_test_testHashRecursiveRemove](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.meta/test/gtest_core_meta_test_testHashRecursiveRemove/); - [projectroot.core.metacling.test.gtest_core_metacling_test_coremetaclingtestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.metacling/test/gtest_core_metacling_test_coremetaclingtestUnit/); - [projectroot.core.thread.test.gtest_core_thread_test_corethreadtestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.thread/test/gtest_core_thread_test_corethreadtestUnit/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:3894,test,testReport,3894,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,1,['test'],['testReport']
Testability,oottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.addresses.roottest_root_tree_addresses_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.tree/addresses/roottest_root_tree_addresses_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175116758:2187,test,testReport,2187,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758,4,['test'],['testReport']
Testability,or simply delete the testfile on the server :-),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-872039777:21,test,testfile,21,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-872039777,1,['test'],['testfile']
Testability,ort/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.tree/cach,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-414258112:3811,test,testReport,3811,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-414258112,1,['test'],['testReport']
Testability,ort/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runatlasaod](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runatlasaod/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runcms310](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runcms310/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runaliceesd](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runaliceesd/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_foreign](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_foreign/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make_2/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make_2/). And 6 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-589606883:2379,test,testReport,2379,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-589606883,4,['test'],['testReport']
Testability,ort/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.meta/test/gtest_core_meta_test_testStatusBitsChecker/); - [projectroot.core.meta.test.gtest_core_meta_test_testHashRecursiveRemove](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.meta/test/gtest_core_meta_test_testHashRecursiveRemove/); - [projectroot.core.metacling.test.gtest_core_metacling_test_coremetaclingtestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.metacling/test/gtest_core_metacling_test_coremetaclingtestUnit/); - [projectroot.core.thread.test.gtest_core_thread_test_corethreadtestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:3789,test,test,3789,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,1,['test'],['test']
Testability,ot-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-b,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:2887,test,test,2887,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['test']
Testability,ot-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.roottest.root.multicore.roottest_root_multicore_poolManager_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_poolManager_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_poolManager](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409277662:2887,test,test,2887,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409277662,1,['test'],['test']
Testability,ot.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.meta/test/gtest_core_meta_test_testStatusBitsChecker/); - [projectroot.core.meta.test.gtest_core_meta_test_testHashRecursiveRemove](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.meta/test/gtest_core_meta_test_testHashRecursiveRemove/); - [projectroot.core.metacling.test.gtest_core_metacling_test_coremetaclingtestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.metacling/test/gtest_core_metacling_test_coremetaclingtestUnit/); - [projectroot.core.thread.test.gtest_core_thread_test_corethreadtestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.thread/test/gtest_core_thread_test_corethreadtestUnit/). And 166 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:3933,test,test,3933,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,13,['test'],"['test', 'testReport']"
Testability,"other compression algorithms already do this,. Indeed. The diffs was made less obvious because:; ZLIB decompression is already doing the right thing.; ZLIB and LZMA use a struct to pass the configuration rather than function argument so the code pattern is slight different.; ; > it seems that all existing code paths in TKey.cxx, TBufferXML.cxx, TMessage.cxx, and TBasket.cxx allocate a buffer that is slightly larger, so it's probably not an as critical problem . Right, the allocations is done:; ```; Int_t buflen = TMath::Max(512,fKeylen + fObjlen + 9*nbuffers + 28); //add 28 bytes in case object is placed in a deleted gap; ```; and used via; ```; char *bufcur = &fBuffer[fKeylen];; ```; so the only extra is `9*nbuffers + 28` which reduces the risk of writing the end since the size is larger than `fObjlen + kHeaderSize` but that leaves 2 additional question:; * why are those added?; * why doesn't RNTuple need it?. 01bb6965557fcc63d5d2e535b89f57e025922731 hints that the compression engine were seen as writing past the end ... it is plausible since the prior delta was ``9*nbuffers + 8` with `nbuffers==0` is common case. (in hindsight, this commit was not investigated long enough and needed a test). The `9*nbuffers` is meant to be for the keys and is now inaccurate (most algorithms have a 9 bytes header but for lz4 we have seemingly 73. This part is missing from the `RNTuple` usage. The consequences is that on data set that is not compressible `TTree` might use a bit more space (header + barely compressed size) vs `RNTuple` (uncompressed size which might be less than header + barely compressed size). This of course assume that the compression algorithm strictly respect the limit given (it would be a serious security risk if not). The `8` is commented as ""8 bytes in case object is placed in a deleted gap"" (the 20 was seemingly added to work-around the bug fixed here) ~and is not clear to me (the 'delete gap' is most likely talking about a space 'freed' inside a ROOT file.~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14523#issuecomment-1932803605:1269,test,test,1269,https://root.cern,https://github.com/root-project/root/pull/14523#issuecomment-1932803605,1,['test'],['test']
Testability,ottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput/). And 93 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393485196:4465,test,testReport,4465,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393485196,4,['test'],['testReport']
Testability,"our message seems to suggest that it's only with GCC11 headers); > ; > * the ""stack trace"", i.e. `/usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here` and then `/home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'` and then `#include ""TIsAProxy.h""`; > ; > ; > In general we tell our users (+/- always) ""can we please see the actual diagnostic"", and for the same reasons it's super helpful to include them here. The time we discussed this is waaay larger than the time it would have taken you to update the log to what Philippe proposes, rather than updating it to something that tries to address the issues (but seemingly fails?); > ; > But it's Philippe's review, I let him comment / deal with this if you still prefer to keep your current commit log. I simply wanted to add an explanation why Philippe suggests the inclusion of the actual diagnostic (and why I found it convincing and do it ever since he propose it to me). This issue exists on gcc11 and gcc12 (and I guess any gcc that made changes to libstdc++ and the experimental/string_view header file). I am not sure if pasting a diagnostic from a random system makes this clearer in any form. I agree with you this should have be 1 min review fixing an important failure that we introduced with the c++20 support and some of the new releases of maybe libstdc++. @pcanal I find pasting errors in the logs a bad practice, especially when it obfuscates the real fix. Can you suggest a commit message which adds enough information which makes me happy as well?. In general it is a bit unfortunate how the whole review went for this PR. This should been just a simple ""approve"" as I thought we needed a quick fix which I developed in between travels and a business trip... I suspect this would help me define urgent/important in similar circumstances in future...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1430019305:2334,log,logs,2334,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1430019305,1,['log'],['logs']
Testability,pe] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33519/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2366#issuecomment-407829804:3359,test,testReport,3359,https://root.cern,https://github.com/root-project/root/pull/2366#issuecomment-407829804,1,['test'],['testReport']
Testability,pedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_pyth,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411101883:3047,test,testReport,3047,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411101883,1,['test'],['testReport']
Testability,pedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.cling.dict.fwd-decl-stdless.roottest_cling_dict_fwd_decl_stdless_execLessyTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.cling.dict/fwd-decl-stdless/roottest_cling_dict_fwd_decl_stdless_execLessyTest/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_runTTestClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.cling/parsing/roottest_cling_parsing_runTTestClass/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadNamespace](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadNamespace/); - [projectroot.roottest.root.meta.roottest_root_meta_runautoload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root/meta/roottest_root_meta_runautoload_auto/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root/meta/roottest_root_meta_runtemplateAutoload_auto/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoloadInclude_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root/meta/roottest_root_meta_runtem,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395599631:3293,test,testReport,3293,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395599631,1,['test'],['testReport']
Testability,"people do use parquet or hdf5 in analysis. Removing those formats as concepts to describe a dataset is rather limiting. Allowing them opens up many possibilities, including mixed modes and joins across rather heterogenous datasets. This can make things much easier in the case that, for instance, some random machine learning tool cannot output root files but can produce some other usefully structured data format. . *** - The more general term for this is a a join, and I think you should use that concept here rather than the precise concept of friends in TTree/RNtuple, which is limiting in scope for what is possible for dataset augmentation. Moreover, this allows the definition of left/right/inner/outer joins at the metadata level which is extremely useful for understanding how that additional data is intended to be used (are you just augmenting the number of columns in the dataset, are you x-referencing two datasets, etc.). It is then up to the system ingesting this data to implement the join specified by the user correctly (which can be tested for). For the second *** reference, this is also a restriction of your program, not the metadata, an error should be thrown by whatever is executing and cannot handle a case rather than restricting concepts for describing a dataset. Furthermore, going to joins as a metadata concept allows the user to specify an entire dataset for a join rather than individual files, resulting in significant reduction of doubly-bookkept data. . Entry ranges: I don't think this is very useful data to record. This is either kept track of as a good-luminosity block list, or specified at execution time by the user (since it is often the case they will want to run over a limited piece of the data to test things and then run over the full dataset). Re-writing the metadata on each run would get cumbersome quickly. To take all this and mutate your original suggestion (I haven't defined all the types but hopefully it's intelligible):; ```; {; ""datasets"":",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11624#issuecomment-1293743624:3104,test,tested,3104,https://root.cern,https://github.com/root-project/root/issues/11624#issuecomment-1293743624,1,['test'],['tested']
Testability,"play("""");; display->Print();; }; ```. In this scenario, the only consistent behaviour is given by `TTree::Print(""all"")` that always outputs both info on the parent tree and on the friend chain.; Result from TTree:Print(""all""):; ```; ******************************************************************************; *Tree :treeparent: test friend trees *; *Entries : 9 : Total = 1059 bytes File Size = 494 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :x : x/I *; *Entries : 9 : Total Size= 583 bytes File Size = 110 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ******************************************************************************; *Chain :treefriend: treefriend1.root *; ******************************************************************************; ******************************************************************************; *Tree :treefriend1: test friend trees *; *Entries : 3 : Total = 933 bytes File Size = 470 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :y : y/I *; *Entries : 3 : Total Size= 556 bytes File Size = 87 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ******************************************************************************; *Chain :treefriend: treefriend2.root *; ******************************************************************************; ******************************************************************************; *Tree :treefriend2: test friend trees *; *Entries : 3 : Total = 933 bytes File Size = 471 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :y : y/I *; *Entries : 3 : Total Size= 556 bytes File ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816500613:12195,test,test,12195,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816500613,1,['test'],['test']
Testability,ppedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.io.io.test.gtest_io_io_test_TROMemFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.io.io/test/gtest_io_io_test_TROMemFile/); - [projectroot.mat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414956948:3539,test,testReport,3539,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414956948,1,['test'],['testReport']
Testability,ps://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.event.roottest_root_io_event](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/event/roottest_root_io_event/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roott,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411089672:3957,test,testReport,3957,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411089672,1,['test'],['testReport']
Testability,pullrequests-build/36231/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.core.meta.test.gtest_core_meta_test_testHashRecursiveRemove](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36231/testReport/projectroot.core.meta/test/gtest_core_meta_test_testHashRecursiveRemove/). And 134 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411309441:4246,test,testReport,4246,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411309441,6,['test'],"['test', 'testReport']"
Testability,pullrequests-build/36439/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411436247:4031,test,testReport,4031,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411436247,1,['test'],['testReport']
Testability,pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](ht,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:3384,test,test,3384,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,1,['test'],['test']
Testability,python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://eps,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2495#issuecomment-414953063:3869,test,testReport,3869,https://root.cern,https://github.com/root-project/root/pull/2495#issuecomment-414953063,1,['test'],['testReport']
Testability,quests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_more](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_more/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_trivial](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_trivial/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_csv](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_csv/). And 12 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:4003,test,test,4003,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,13,['test'],"['test', 'testReport']"
Testability,"quests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 101 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_VectorizedTMathUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31655/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_VectorizedTMathUnit/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-401785227:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-401785227,4,['test'],"['test', 'testReport', 'tests']"
Testability,"quests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 101 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_VectorizedTMathUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31664/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_VectorizedTMathUnit/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2236#issuecomment-401790307:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2236#issuecomment-401790307,4,['test'],"['test', 'testReport', 'tests']"
Testability,"r(val); filepath = '/tmp/file_{}.root'.format(val). df=ROOT.RDataFrame(2); df=df.Define('a', val); df.Snapshot('tree', filepath). return filepath; #------------------------------------------; def get_df(l_tp_file, treename, id_column='index'):; l_index = []; for index, filepath in l_tp_file:; df=ROOT.RDataFrame(treename, filepath); nentries = df.Count().GetValue(); l_index += nentries * [index]. arr_id = numpy.array(l_index). idfilepath = '/tmp/file_id.root'; df_id = ROOT.RDF.MakeNumpyDataFrame({id_column: arr_id}); df_id.Snapshot(treename, idfilepath). ch_data = ROOT.TChain(treename, '') ; for _, filepath in l_tp_file:; ch_data.Add(filepath). size_ch = ch_data.GetEntries(); size_id = arr_id.size. if size_ch != size_id:; print('Different id and chain sizes: {}/{}'.format(size_id, size_ch)); raise. ch_data.AddFriend(treename, idfilepath). df = ROOT.RDataFrame(ch_data). return (df, ch_data); #------------------------------------------; def test():; #----------------------; #Make input; #----------------------; index = 0 ; l_tp_file = [] ; for val in range(0, 100, 10):; filepath = make_data(val); l_tp_file.append((index, filepath)); index+=1; #----------------------; #Merge; #----------------------; df, _ = get_df(l_tp_file, 'tree', id_column='id'); df.Display(['a', 'id'], -1).Print(); #df.Snapshot('tree', 'file.root'); #------------------------------------------; test(); ```. I will add `get_df` to my personal library. The approach seems safe and clean enough, however the return value needs to include the chain (i.e. _) because otherwise I get a crash. Which seems to indicate that the chain's reference is not kept inside the dataframe. So once the function returns, the chain is removed by the garbage collector and the dataframe does not have anything to save (the script above is self contained and you can try it yourself). That should not be right, if I tell the dataframe to use the chain, the chain should be kept alive by the dataframe. > ; > The simplest solution: wi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-932494638:3778,test,test,3778,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638,1,['test'],['test']
Testability,r](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146660/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144990827:1309,test,testReport,1309,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144990827,1,['test'],['testReport']
Testability,rame_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36150/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411101883:3975,test,testReport,3975,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411101883,1,['test'],['testReport']
Testability,ree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_assertBranchCount](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_assertBranchCount/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:3997,test,testReport,3997,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,4,['test'],['testReport']
Testability,repareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393458046:4185,test,testReport,4185,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393458046,1,['test'],['testReport']
Testability,repareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2113#issuecomment-393289526:4191,test,testReport,4191,https://root.cern,https://github.com/root-project/root/pull/2113#issuecomment-393289526,1,['test'],['testReport']
Testability,repareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2118#issuecomment-393467051:3911,test,testReport,3911,https://root.cern,https://github.com/root-project/root/pull/2118#issuecomment-393467051,1,['test'],['testReport']
Testability,requests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411177216:4059,test,testReport,4059,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411177216,1,['test'],['testReport']
Testability,requests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36204/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411201963:3787,test,testReport,3787,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411201963,1,['test'],['testReport']
Testability,"requests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393485196:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393485196,1,['test'],['tests']
Testability,"requests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28339",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2118#issuecomment-393467051:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2118#issuecomment-393467051,1,['test'],['tests']
Testability,"requests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117#issuecomment-393471686:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2117#issuecomment-393471686,1,['test'],['tests']
Testability,"requests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28299",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2113#issuecomment-393289526:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2113#issuecomment-393289526,1,['test'],['tests']
Testability,"requests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393458046:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393458046,1,['test'],['tests']
Testability,"requests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2119#issuecomment-393426877:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2119#issuecomment-393426877,1,['test'],['tests']
Testability,"requests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.dataframe.roottest_root_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1973#issuecomment-394348081:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/1973#issuecomment-394348081,1,['test'],['tests']
Testability,"requests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.cling.dict.fwd-decl-stdless.roottest_cling_dict_fwd_decl_stdless_execLessyTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.cling.dict/fwd-decl-stdless/roottest_cling_dict_fwd_decl_stdless_execLessyTest/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_runTTestClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.cling/parsing/roottest_cling_parsing_runTTestClass/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadNamespace](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29452/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadNamespace/); - [projectroot.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395599631:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395599631,1,['test'],['tests']
Testability,"requests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 178 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-393462547:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-393462547,1,['test'],['tests']
Testability,"rivial copy-assignment; use value-initialization instead [-Wclass-memaccess] ; - [2020-05-25T10:26:03.641Z] include/tbb/concurrent_hash_map.h:124:51: warning: ‘void* memset(void*, int, size_t)’ clearing an object of type ‘class tbb::interface5::internal::hash_map_base’ with no trivial copy-assignment; use value-initialization instead [-Wclass-memaccess] . ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_operator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_operator/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.cling.roottest_python_cling_cling](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/cling/roottest_python_cling_cling/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp11](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp11/); - [projectroot.roott",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5692#issuecomment-633509680:1629,test,testReport,1629,https://root.cern,https://github.com/root-project/root/pull/5692#issuecomment-633509680,1,['test'],['testReport']
Testability,rkspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/console).; ### Failing tests:; - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-ser,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018#issuecomment-1380358995:1106,test,testReport,1106,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995,1,['test'],['testReport']
Testability,rning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_numbadeclare](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175163072:1491,test,testReport,1491,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072,1,['test'],['testReport']
Testability,rning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.meta/test/gtest_core_meta_test_testStatusBitsChecker/); - [projectroot.core.meta.test.gtest_core_meta_test_testHashRecursiveRemove](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.meta/test/gtest_core_meta_test_testHashRecursiveRemove/); - [projectroot.core.m,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:3452,test,testReport,3452,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,1,['test'],['testReport']
Testability,rojectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/); - [projectroot.core.base.test.gtest_core_base_test_CoreBaseTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.base/test/gtest_core_base_test_CoreBaseTests/); - [projectroot.core.cont.test.gtest_core_cont_test_coreconttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.cont/test/gtest_core_cont_test_coreconttestUnit/); - [projectroot.core.cont.test.gtest_core_cont_test_testTypedIteration](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.cont/test/gtest_core_cont_test_testTypedIteration/); - [projectroot.core.imt.test.gtest_core_imt_test_coreimttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.imt/test/gtest_core_imt_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:3811,test,test,3811,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,1,['test'],['test']
Testability,rojectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/). And 50 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1973#issuecomment-394348081:4217,test,testReport,4217,https://root.cern,https://github.com/root-project/root/pull/1973#issuecomment-394348081,4,['test'],['testReport']
Testability,root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146424/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-j,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143358479:1563,test,testReport,1563,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143358479,1,['test'],['testReport']
Testability,root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-j,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143554468:1563,test,testReport,1563,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468,1,['test'],['testReport']
Testability,root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/147284/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-j,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1153748598:1563,test,testReport,1563,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1153748598,1,['test'],['testReport']
Testability,root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175163072:1982,test,testReport,1982,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072,1,['test'],['testReport']
Testability,root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:3142,test,testReport,3142,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,1,['test'],['testReport']
Testability,root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:3133,test,test,3133,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,1,['test'],['test']
Testability,root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/console).; ### Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844250497:1118,test,testReport,1118,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844250497,1,['test'],['testReport']
Testability,root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/console).; ### Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844244254:1119,test,testReport,1119,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844244254,1,['test'],['testReport']
Testability,root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/console).; ### Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844261645:1111,test,testReport,1111,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844261645,1,['test'],['testReport']
Testability,root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:3412,test,testReport,3412,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['testReport']
Testability,"root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 93 more. ### Failing tests:; - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_typedefSelection_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35147/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_typedefSelection_libgen_build/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_typedefSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35147/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_typedefSelection/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2421#issuecomment-409967337:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2421#issuecomment-409967337,3,['test'],"['testReport', 'tests']"
Testability,"root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 93 more. ### Failing tests:; - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_typedefSelection_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35291/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_typedefSelection_libgen_build/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_typedefSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35291/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_typedefSelection/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2421#issuecomment-410083254:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2421#issuecomment-410083254,3,['test'],"['testReport', 'tests']"
Testability,"root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 93 more. ### Failing tests:; - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_typedefSelection_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35300/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_typedefSelection_libgen_build/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_typedefSelection](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35300/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_typedefSelection/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2421#issuecomment-410090281:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2421#issuecomment-410090281,3,['test'],"['testReport', 'tests']"
Testability,rt/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/). And 92 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-414258112:4289,test,testReport,4289,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-414258112,6,['test'],"['test', 'testReport']"
Testability,rt/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_assertBranchCount](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:3761,test,testReport,3761,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,1,['test'],['testReport']
Testability,rtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.roottest.root.multicore.roottest_root_multicore_poolManager_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_poolManager_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_poolManager](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_poolManager/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409277662:3022,test,test,3022,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409277662,9,['test'],"['test', 'testReport']"
Testability,ry leaks from `RooAbsL::getParameters()`; fb891723bc [RF][HS3] Avoid code duplication in `JSONFactories_RooFitCore`; 9a605d7f35 [RF][HS3] Make `combined_data_name` optional; b87c368b6a [RF][HS3] Keep all info necessary to reconstruct simultaneous pdfs; f9348f857c [RF][HS3] Don't convert RooHistPdf first to TH1 when exporting; 195d5b8111 [RF][HS3] Additions to JSONInterface to reduce code duplication; a75dec1868 [RF][HS3] Keep all information necessary to reconstruct combined datas; [RF] Move loop management for code generation into CodeSquashContext; [RF] Avoid need for buildLoopBegin() by recursive calls to translate(); [RF] Add 'translate' to RooNllVarNew.; [RF] Remove function declarations in RooStats LinkDef.h; [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx; [RF] Move `ModelConfig` from RooStats to RooFit; [RF] Don't add `weightVar` to observables in HistFactory; [RF] Minor improvements to RooFit evaluation code generation; [RF][NFC] Fix typo.; [RF] Disable RooFuncWrapper test if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF][HS3] Put exported `histosys` in the correct vector; [RF][HS3] Avoid creating temporary objects to import into workspace; [RF][HS3][HF] General cleanup of HS3 HistFactory implementation; [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF][HS3] Consistent range for nominal alpha params with HistFactory; [RF][HS3] Remember simultaneous channel names when writing JSON; [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12618#issuecomment-1497317057:1349,test,test,1349,https://root.cern,https://github.com/root-project/root/pull/12618#issuecomment-1497317057,1,['test'],['test']
Testability,s LinkDef.h; [RF] Apply clang-format to ModelConfig.h and ModelConfig.cxx; [RF] Move `ModelConfig` from RooStats to RooFit; [RF] Don't add `weightVar` to observables in HistFactory; [RF] Minor improvements to RooFit evaluation code generation; [RF][NFC] Fix typo.; [RF] Disable RooFuncWrapper test if clad is off.; [RF] Remove wrong header declaration from roofit/roofit.; [RF] Fix visibility of the res/ directories.; [RF] Make RooBatchCompute dependency public.; [RF] Add initial interface and implementation for code-squashing.; [RF][HS3] Put exported `histosys` in the correct vector; [RF][HS3] Avoid creating temporary objects to import into workspace; [RF][HS3][HF] General cleanup of HS3 HistFactory implementation; [RF][HS3] Cover also `HistoSys` in HS3 HistFactory test; [RF] Enable passing of gradient function directly to RooMinimizer; [RF] Add support for differentiating Gaussian integrals using AD. This commits adds support for including analytical integrals into the mock code-squashing test by introducing a private header that stores the stateless implementation details.; [RF][HS3] Consistent range for nominal alpha params with HistFactory; [RF][HS3] Remember simultaneous channel names when writing JSON; [RF][HS3] Avoid turning RooConstVar into RooRealVar in JSON roundtrip; [RF][HS3] Use `RooConstVar` for sigma parameters in HF constraints; [RF][HS3] Don't mix up free functions and class impl in JSON tool; [RF][HS3] Consistently have implicit fallback for HistFactory variables; [RF][HS3] Don't import datasets that are parts of a combined dataset; [RF][HS3] Some code simplification in `RooJSONFactoryWSTool`; [RF][HS3] Generate input file for testHS3HistFactory on the fly; [RF][HS3] Improvements to the HS3 HistFactory implementation; [RF] Use `std::vector` diretly in RooVectorDataStore::RealFullVector; [RF][HS3] Some refactoring for less lines of code; [RF][HS3] Ordering fixes; [RF][HS3] Achieved closure for ATLAS ttW workspace; [RF][HS3] Sorting distributions; [RF][,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12590#issuecomment-1491813664:2111,mock,mock,2111,https://root.cern,https://github.com/root-project/root/pull/12590#issuecomment-1491813664,4,"['mock', 'test']","['mock', 'test']"
Testability,s from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_more](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_d,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:3498,test,testReport,3498,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['testReport']
Testability,s.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.stl/dicts/roottest_cling_stl_dicts_build/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stl_makeproject_test_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stl_makeproject_test_build/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_MyClass_v1_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_MyClass_v1_libgen_build/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadtest_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadtest_build/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_read_leaves_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_read_leaves_build/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_classWithComplex_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_classWithComplex_libgen_build/); - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_forwardList_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_forwardList_libgen_build/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_classes_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_classes_libgen_build/). And 303 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2454#issuecomment-411275022:4274,test,testReport,4274,https://root.cern,https://github.com/root-project/root/pull/2454#issuecomment-411275022,4,['test'],['testReport']
Testability,s.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/). And 278 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411177216:4331,test,testReport,4331,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411177216,4,['test'],['testReport']
Testability,s://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_more](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_more/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_trivial](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_trivial/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_csv](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:3965,test,testReport,3965,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['testReport']
Testability,"sdk; drwxr-xr-x 7 root wheel 224 8 Jun 2023 MacOSX12.3.sdk; lrwxr-xr-x 1 root wheel 14 8 Jun 2023 MacOSX12.sdk -> MacOSX12.3.sdk; drwxr-xr-x 7 root wheel 224 1 May 00:16 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 17 Sep 17:17 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 21 Aug 17:15 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 17 Sep 17:16 MacOSX15.sdk -> MacOSX15.0.sdk; sftnight@macphsft31 ~ % clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -I/usr/local/include -internal-isystem /Library/Developer/CommandLine",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:10004,stub,stubs,10004,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['stub'],['stubs']
Testability,"se assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36679/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.multicore.roottest_root_multicore_poolManager_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36679/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_poolManager_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_poolManager](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36679/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_poolManager/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-411746107:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-411746107,4,['test'],"['testReport', 'tests']"
Testability,sion found in output. Regex=[: error:] 1.01 sec ; - 969/1991 Test #878: tutorial-v7-perf.cxx ..............................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.91 sec ; - 971/1991 Test #879: tutorial-v7-perfcomp.cxx ..........................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.00 sec ; - 972/1991 Test #880: tutorial-v7-simple.cxx ............................................................................***Failed Error regular expression found in output. Regex=[: error:] 1.01 sec . ### Failing tests:; - [projectroot.runtutorials.tutorial_v7_concurrentfill.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_concurrentfill_cxx/); - [projectroot.runtutorials.tutorial_v7_perf.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_perf_cxx/); - [projectroot.runtutorials.tutorial_v7_perfcomp.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_perfcomp_cxx/); - [projectroot.runtutorials.tutorial_v7_simple.cxx](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot/runtutorials/tutorial_v7_simple_cxx/); - [projectroot.roottest.root.io.evolution.roottest_root_io_evolution_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot.roottest.root.io/evolution/roottest_root_io_evolution_make/); - [projectroot.roottest.root.meta.enums.roottest_root_meta_enums_enumsInNamespaces](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67375/testReport/projectroot.roottest.root.meta/enums/roottest_root_meta_enums_enumsInNamespaces/); - [projectroot.roottest.root.meta.enums.roottest_root_meta_enums_duplicateEnums](https://epsft-jenkins.cern.ch/job/root-pullrequests-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4358#issuecomment-528926777:1273,test,testReport,1273,https://root.cern,https://github.com/root-project/root/pull/4358#issuecomment-528926777,1,['test'],['testReport']
Testability,space/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.core.imt.test.gtest_core_imt_test_coreimttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_core_imt_test_coreimttestUnit/); - [projectroot.core.imt.test.gtest_core_imt_test_testTFuture](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_core_imt_test_testTFuture/); - [projectroot.io.io.test.gtest_io_io_test_TROMemFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.io.io/test/gtest_io_io_test_TROMemFile/); - [project,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411701514:3373,test,test,3373,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411701514,1,['test'],['test']
Testability,"space/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.tmva.tmva.test.DNN.CNN.TMVA_DNN_CNN_Backpropagation_CPU](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37832/testReport/projectroot.tmva.tmva.test.DNN/CNN/TMVA_DNN_CNN_Backpropagation_CPU/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414965082:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414965082,4,['test'],"['test', 'testReport', 'tests']"
Testability,"space/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tmva.tmva.test.DNN.CNN.TMVA_DNN_CNN_Backpropagation_CPU](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34984/testReport/projectroot.tmva.tmva.test.DNN/CNN/TMVA_DNN_CNN_Backpropagation_CPU/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2407#issuecomment-409881305:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2407#issuecomment-409881305,4,['test'],"['test', 'testReport', 'tests']"
Testability,"space/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tmva.tmva.test.DNN.CNN.TMVA_DNN_CNN_Backpropagation_CPU](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35889/testReport/projectroot.tmva.tmva.test.DNN/CNN/TMVA_DNN_CNN_Backpropagation_CPU/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-410732358:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-410732358,4,['test'],"['test', 'testReport', 'tests']"
Testability,"space/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31399/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_escapedQuotesreadTree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31399/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_escapedQuotesreadTree/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400351100:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400351100,3,['test'],"['testReport', 'tests']"
Testability,"sr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. sftnight@macphsft31 ~ % clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.0.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:14070,stub,stubs,14070,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['stub'],['stubs']
Testability,"sr/include; /Library/Developer/CommandLineTools/usr/include; /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks (framework directory); End of search list.; # 1 ""/dev/null""; # 1 ""<built-in>"" 1; # 1 ""<built-in>"" 3; # 439 ""<built-in>"" 3; # 1 ""<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. sftnight@macphsft34 ~ % clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.1.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:22874,stub,stubs,22874,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['stub'],['stubs']
Testability,st-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.core.imt.test.gtest_core_imt_test_coreimttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_core_imt_test_coreimttestUnit/); - [projectroot.core.imt.test.gtest_core_imt_test_testTFuture](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_core_imt_test_testTFuture/); - [projectroot.io.io.test.gtest_io_io_test_TROMemFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.io.io/test/gtest_io_io_test_TROMemFile/); - [projectroot.math.genetic.test.genetic_testGAMinimizer](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.math.genetic/test/genetic_testGAMinimizer/); - [projectroot.math.genetic.te,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411701514:3583,test,test,3583,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411701514,1,['test'],['test']
Testability,st-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:3064,test,test,3064,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,1,['test'],['test']
Testability,st-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37814/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2495#issuecomment-414953063:3345,test,testReport,3345,https://root.cern,https://github.com/root-project/root/pull/2495#issuecomment-414953063,1,['test'],['testReport']
Testability,st-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineU,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411059605:3345,test,testReport,3345,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411059605,1,['test'],['testReport']
Testability,st-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36195/testRep,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411177216:3345,test,testReport,3345,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411177216,1,['test'],['testReport']
Testability,stReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_nested_rvec_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_nested_rvec_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_multipletriggerrun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_multipletriggerrun/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.fastcloning.root,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018#issuecomment-1380875995:1441,test,testReport,1441,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380875995,1,['test'],['testReport']
Testability,st_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.core.imt.test.gtest_core_imt_test_coreimttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_core_imt_test_coreimttestUnit/); - [projectroot.core.imt.test.gtest_core_imt_test_testTFuture](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_core_imt_test_testTFuture/); - [projectroot.io.io.test.gtest_io_io_test_TROMemFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.io.io/test/gtest_io_io_test_TROMemFile/); - [projectroot.math.genetic.test.genetic_testGAMinimizer](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.math.genetic/test/genetic_testGAMinimizer/); - [projectroot.math.genetic.test.genetic_GAMinTutorial](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testRepor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411701514:3692,test,testReport,3692,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411701514,1,['test'],['testReport']
Testability,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info); [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info); [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info); [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info); [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info); [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info); [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info); [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info); [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info); [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info); [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info); [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info); [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info); [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info); [/usr/lib/system/libdyld.dylib] start (no debug info); [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6537#issuecomment-704297485:3082,test,test,3082,https://root.cern,https://github.com/root-project/root/pull/6537#issuecomment-704297485,4,['test'],['test']
Testability,"stringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30090/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396975222:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396975222,4,['test'],"['test', 'testReport', 'tests']"
Testability,sts-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144980019:1920,test,testReport,1920,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019,1,['test'],['testReport']
Testability,sts-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145207749:1920,test,testReport,1920,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749,1,['test'],['testReport']
Testability,"sts-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execNamingMatchesNoHeader_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34446/testReport/projectroot.roottest.root.meta/naming/roottest_root_meta_naming_execNamingMatchesNoHeader_auto/); - [projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execNamingMatches_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34446/testReport/projectroot.roottest.root.meta/naming/roottest_root_meta_naming_execNamingMatches_auto/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2396#issuecomment-409268102:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2396#issuecomment-409268102,3,['test'],"['testReport', 'tests']"
Testability,"t [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_invalidref](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36411/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_invalidref/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36411/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2459#issuecomment-411401046:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2459#issuecomment-411401046,3,['test'],"['testReport', 'tests']"
Testability,"t [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_invalidref](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36502/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_invalidref/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36502/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2459#issuecomment-411478809:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2459#issuecomment-411478809,3,['test'],"['testReport', 'tests']"
Testability,"t __locale_struct *'; | `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; | `-RecordType 0xbf7ba40 '__locale_struct'; | `-CXXRecord 0xbf7b988 '__locale_struct'; `-TypedefDecl 0xbf7c278 <line:42:1, col:20> col:20 in xlocale.h hidden locale_t '__locale_t':'struct __locale_struct *'; `-TypedefType 0xbf7c240 '__locale_t' sugar; |-Typedef 0xbf7c1c8 '__locale_t'; `-PointerType 0xbf7c170 'struct __locale_struct *'; `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; `-RecordType 0xbf7ba40 '__locale_struct'; `-CXXRecord 0xbf7b988 '__locale_struct'; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../incl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377744663:3646,test,test-products,3646,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663,1,['test'],['test-products']
Testability,"t offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35925/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_CacheRange](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35925/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_CacheRange/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2425#issuecomment-410838838:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2425#issuecomment-410838838,3,['test'],"['testReport', 'tests']"
Testability,"t offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35934/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_CacheRange](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35934/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_CacheRange/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2424#issuecomment-410842792:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2424#issuecomment-410842792,3,['test'],"['testReport', 'tests']"
Testability,"t offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35943/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_CacheRange](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35943/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_CacheRange/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2423#issuecomment-410846925:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2423#issuecomment-410846925,3,['test'],"['testReport', 'tests']"
Testability,"t offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35952/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_CacheRange](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35952/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_CacheRange/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2445#issuecomment-410850862:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2445#issuecomment-410850862,3,['test'],"['testReport', 'tests']"
Testability,"t offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:2746,test,testReport,2746,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,2,['test'],"['test', 'testReport']"
Testability,"t offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411084210:2746,test,testReport,2746,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411084210,2,['test'],"['test', 'testReport']"
Testability,t-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_more](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_d,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:3742,test,testReport,3742,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,1,['test'],['testReport']
Testability,t-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_more](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_more/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_trivial](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_datafra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:3981,test,testReport,3981,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,1,['test'],['testReport']
Testability,t-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root/treeproxy/roottest_root_treeproxy_make/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runatlasaod](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runatlasaod/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runcms310](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runcms310/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_runaliceesd](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_runaliceesd/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_foreign](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_foreign/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make_2/); - [projectroot.roottest.root.treeproxy.roottest_root_treeproxy_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/79381/testReport/projectroot.roottest.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5030#issuecomment-589606883:2127,test,testReport,2127,https://root.cern,https://github.com/root-project/root/pull/5030#issuecomment-589606883,1,['test'],['testReport']
Testability,t-pullrequests-build/149180/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_numbadeclare/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175163072:1727,test,testReport,1727,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072,1,['test'],['testReport']
Testability,t-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_more](https://epsft,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:3382,test,test,3382,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['test']
Testability,t/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149180/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175163072:2234,test,testReport,2234,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175163072,4,['test'],['testReport']
Testability,"t/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:5203:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_tp_process_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31336/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tp_process_imt/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2251#issuecomment-400304937:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2251#issuecomment-400304937,2,['test'],"['testReport', 'tests']"
Testability,t/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:2912,test,test,2912,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,1,['test'],['test']
Testability,"td/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.treeformula.formulaio.roottest_root_treeformula_formulaio_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36530/testReport/projectroot.roottest.root.treeformula/formulaio/roottest_root_treeformula_formulaio_make/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2434#issuecomment-411495922:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2434#issuecomment-411495922,2,['test'],"['testReport', 'tests']"
Testability,"te at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/meta/src/TClass.cxx:686:14: warning: ‘char* strncpy(char*, const char*, size_t)’ specified bound depends on the length of the source argument [-Wstringop-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31493/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2260#issuecomment-400865752:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2260#issuecomment-400865752,2,['test'],"['testReport', 'tests']"
Testability,te_testcint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_operator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_operator/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.cling.roottest_python_cling_cling](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/cling/roottest_python_cling_cling/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp11](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp11/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83389/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/); - [projectroot.roottest.python.function.rootte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5692#issuecomment-633509680:2083,test,testReport,2083,https://root.cern,https://github.com/root-project/root/pull/5692#issuecomment-633509680,1,['test'],['testReport']
Testability,"ter (similar to how `TApplication` ignores `argc` and `argv` if `numOptions==-1`), but that is certainly not a design pattern leading to modern, readable code, so better not spread it more ;-). ; `failOnUnknownArgs` sounds like a great choice of name, it clarifies the intent clearly. . > It would be wonderful to have that as unit test in `core/rint/test` [...]. It seems this does already exist, and has a unit test checking that errors are producted by `TRint` if unrecognitzed options are encountered ;-). Still, it seems I lack sufficient experience with `gtest`, since I don't understand why (for example) `TRint` with unsupported arguments does not `Terminate()` the test — so it's unclear to me how to write a test checking that it does not actually try to `Terminate()` when provided with a to-be-added `failOnUnknownArgs = false`. . In pseudo-steps, I think possible changes / additions to the existing test in `core/rint/test/TRintTests.cxx` to cover the use case as completely as possible could be:; 1. The existing test should be changed to set `failOnUnknownArgs = true` (after that is implemented). ; 2. A second test could be added, not setting `failOnUnknownArgs` (i.e. the default of `false` is used). This test then needs to check that no `stderr` is produced, and `Terminate()` is not called (here I'm unsure how to do these with `gtest`). ; 3. A third test could try to do the following, for complete coverage of the use case:; i. Create a `TRint (let's name it `myApp for simplicity here)`, passing in supported and unsupported options. ; ii. Check the unsupported options are accessible via `myApp->Argv()`. ; iii. Call `myApp`->Run(kTRUE)`, inject `.q` via `stdin` and test that the execution flow returns to after that line. . Does that sound reasonable? ; Since I am slightly at a loss on how to solve these ideas within `gtest`, I would be fine with going the back and forth approach (learning more `gtest` along the way so I can better contribute tests in the future) ;-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10090#issuecomment-1064634456:1473,test,test,1473,https://root.cern,https://github.com/root-project/root/issues/10090#issuecomment-1064634456,6,['test'],"['test', 'tests']"
Testability,"ter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) (./cling+0xace867); > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17); > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161); > > #12 0x00000000009d28b7 main (./cling+0x9d28b7); > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840); > > #14 0x0000000000a32349 _start (./cling+0xa32349); > > Stack dump:; > > 0.	Program arguments: ./cling -xcuda ; > > Segmentation fault (core dumped); > > ```; > ; > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session.; > ; > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.; > ; > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use. The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-776591942:2763,test,test,2763,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-776591942,1,['test'],['test']
Testability,test.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.event.roottest_root_io_event](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/event/roottest_root_io_event/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/). And 142 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411089672:4193,test,testReport,4193,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411089672,4,['test'],['testReport']
Testability,test.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.cling.dict.ROOT-9185.roottest_cling_dict_ROOT_9185_ROOT9185](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.cling.dict/ROOT-9185/roottest_cling_dict_ROOT_9185_ROOT9185/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/). And 54 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851#issuecomment-408947574:4030,test,testReport,4030,https://root.cern,https://github.com/root-project/root/pull/1851#issuecomment-408947574,4,['test'],['testReport']
Testability,test_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_cachedChain/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31253/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/). And 3 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400118785:4291,test,testReport,4291,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400118785,4,['test'],['testReport']
Testability,thcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_reduce](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_reduce/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_glob](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_glob/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_gdirectoryRestore](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.roottest.root/dataframe/rootte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:3901,test,testReport,3901,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['testReport']
Testability,"the Google C++ guidelines. I think this is not something we should spend too much time on now, but maybe good to keep in mind for the future.; 3. https://github.com/root-project/root/pull/8700#discussion_r672519457 The configuration parameters (GlobalObservables etc.): should we unify them or keep like this?; 4. https://github.com/root-project/root/pull/8700#discussion_r672538377 This should be checked by Wouter. In addition, some other remaining questions:; 1. `testRooRealL.getValRooAddition` fails because it doesn't know `RooFormulaVar`... I'm not sure what this means, but I vaguely remember that (I think) @hageboeck and @cburgard were talking about this, so I was hoping you may be able to help me out with fixing that test.; 2. In an ideal world I would have liked to add a serial implementation of the `LikelihoodGradientWrapper` class. Probably, we can reuse a lot of `RooGradMinimizerFcn` for this and it should be rather straightforward. However, this will take time. The advantage would be that we could add a test to this PR that covers all that is added, basically by just running a minimization. Note that I do have such a full-coverage test, but only for the MultiProcess minimization, where I implemented `LikelihoodGradientWrapper` in the parallel `LikelihoodGradientJob` class. So this test will come in ""PR 7"" (see overview). So, up for discussion, two choices: A: add (probably mostly useless except for testing this PR) ""LikelihoodGradientSerial"" class (based on RooGradMinimizerFcn) so we can add an integration test in this PR; B: wait for the integration test in PR 7.; 3. Does everybody like the RooNLLVar statics?; 4. Offset in the new TestStatistics classes can easily include the RooSubsidiaryL term as well, unlike with RooAbsTestStatistic, where the RooConstraintSum was a separate class that would not be included in the offset. I have now implemented a legacy mode to get bit-wise equal results, but is the new ""full"" mode a good idea at all? Does it make sense?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-915217168:1573,test,test,1573,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-915217168,6,['test'],"['test', 'testing']"
Testability,tible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.mathcore_testBinnedFitExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/mathcore_testBinnedFitExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34364/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datafram,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409233856:2985,test,testReport,2985,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409233856,1,['test'],['testReport']
Testability,tible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientUnit/); - [projectroot.math.mathcore.test.mathcore_testLogLExecPolicy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/mathcore_testLogLExecPolicy/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_GradientFittingUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_GradientFittingUnit/); - [projectroot.tmva.tmva.test.envelope.gtest_tmva_tmva_test_envelope_TMVA_Classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.tmva.tmva.test/envelope/gtest_tmva_tmva_test_envelope_TMVA_Classification/); - [projectroot.roottest.root.multicore.roottest_root_multicore_poolManager_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_poolManager_build/); - [projectroot.roottest.root.multicore.roottest_root_multicore_poolManager](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34456/testReport/projectroot.roottest.root/multicore/roottes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2389#issuecomment-409277662:2985,test,testReport,2985,https://root.cern,https://github.com/root-project/root/pull/2389#issuecomment-409277662,1,['test'],['testReport']
Testability,tion types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1973#issuecomment-394348081:3489,test,testReport,3489,https://root.cern,https://github.com/root-project/root/pull/1973#issuecomment-394348081,1,['test'],['testReport']
Testability,tion-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.meta/test/gtest_core_meta_test_testStatusBitsChecker/); - [projectroot.core.meta.test.gtest_core_meta_test_testHashRecursiveRemove](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testRepo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:3343,test,test,3343,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,1,['test'],['test']
Testability,tion/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36439/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/). And 127 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411436247:4265,test,testReport,4265,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411436247,4,['test'],['testReport']
Testability,to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1775:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_testForeignDraw](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make/); - [projectroot.roottest.root.tree.split.roottest_root_tree_split_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/split/roottest_root_tree_split_make/); ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-415844036:3279,test,testReport,3279,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-415844036,1,['test'],['testReport']
Testability,tps://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.cling.dict.ROOT-9185.roottest_cling_dict_ROOT_9185_ROOT9185](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.cling.dict/ROOT-9185/roottest_cling_dict_ROOT_9185_ROOT9185/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851#issuecomment-408947574:3552,test,testReport,3552,https://root.cern,https://github.com/root-project/root/pull/1851#issuecomment-408947574,1,['test'],['testReport']
Testability,tput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.io.io.test.gtest_io_io_test_TROMemFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.io.io/test/gtest_io_io_test_TROMemFile/); - [projectroot.math.genetic.test.genetic_testGAMinimizer](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.math.genetic/test/genetic_testGAMinimizer/); - [projectroot.math.genetic.test.genetic_GAMinTutorial](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37823/testReport/projectroot.math.genetic/test/genetic_GAMinTutorial/). And 153 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2498#issuecomment-414956948:4005,test,testReport,4005,https://root.cern,https://github.com/root-project/root/pull/2498#issuecomment-414956948,11,['test'],"['test', 'testReport']"
Testability,troot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_more](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_more/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_trivial](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_trivial/); - [projectroot.tree.dataframe.test.gtes,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:3771,test,test,3771,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['test']
Testability,"ts 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28799/testReport/projectroot.roottest.root/da",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1973#issuecomment-394348081:2776,test,testReport,2776,https://root.cern,https://github.com/root-project/root/pull/1973#issuecomment-394348081,1,['test'],['testReport']
Testability,ts-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_nested_rvec_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_nested_rvec_snapshot/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_misc](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_misc/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_multipletriggerrun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_regression_multipletriggerrun/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelCheckValues](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelCheckValues/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_execCheckClusterRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164079/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_execCheckClusterRange/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018#issuecomment-1380875995:1710,test,testReport,1710,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380875995,4,['test'],['testReport']
Testability,ts-build/36222/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_load](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_load/); - [projectroot.roottest.cling.stl.dicts.roottest_cling_stl_dicts_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.stl/dicts/roottest_cling_stl_dicts_build/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stl_makeproject_test_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stl_makeproject_test_build/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_MyClass_v1_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_MyClass_v1_libgen_build/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadtest_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadtest_build/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_read_leaves_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_read_leaves_build/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_classWithComplex_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_classWithComplex_libgen_build/); - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_forwardList_libgen_build](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2454#issuecomment-411275022:3776,test,testReport,3776,https://root.cern,https://github.com/root-project/root/pull/2454#issuecomment-411275022,1,['test'],['testReport']
Testability,"ts-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28399/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.xml.roottest_root_io_xml_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28399/testReport/projectroot.roottest.root.io/xml/roottest_root_io_xml_make/); - [projectroot.roottest.root.meta.iotypeioname.roottest_root_meta_iotypeioname_execionameiotype_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28399/testReport/projectroot.roottest.root.meta/iotypeioname/roottest_root_meta_iotypeioname_execionameiotype_auto/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-393586302:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-393586302,4,['test'],"['testReport', 'tests']"
Testability,"ts-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28429/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.xml.roottest_root_io_xml_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28429/testReport/projectroot.roottest.root.io/xml/roottest_root_io_xml_make/); - [projectroot.roottest.root.meta.iotypeioname.roottest_root_meta_iotypeioname_execionameiotype_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28429/testReport/projectroot.roottest.root.meta/iotypeioname/roottest_root_meta_iotypeioname_execionameiotype_auto/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2121#issuecomment-393644259:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2121#issuecomment-393644259,4,['test'],"['testReport', 'tests']"
Testability,ttest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146495/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/). And 1 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1143554468:1809,test,testReport,1809,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1143554468,4,['test'],['testReport']
Testability,ttest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.datamodelevolution.roottest_root_io_datamodelevolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/datamodelevolution/roottest_root_io_datamodelevolution_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118086/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844253147:1648,test,testReport,1648,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844253147,4,['test'],['testReport']
Testability,tualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.core.meta.test.gte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:3016,test,testReport,3016,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,1,['test'],['testReport']
Testability,type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/); - [projectroot.core.base.test.gtest_core_base_test_CoreBaseTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.base/test/gtest_core_base_test_CoreBaseTests/); - [projectroot.core.cont.test.gtest_core_cont_test_coreconttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.cont/test/gtest_core_cont_test_coreconttestUnit/); - [projectroot.core.cont.test.gtest_core_cont_test_testTypedIteration](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.cont/test/gtest_cor,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:3595,test,test,3595,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,1,['test'],['test']
Testability,type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/); - [projectroot.core.base.test.gtest_core_base_test_CoreBaseTests](https://epsft-jenkins.cern.ch/job/root-pu,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:3081,test,test,3081,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,1,['test'],['test']
Testability,type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28349/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roott,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2117#issuecomment-393471686:3357,test,testReport,3357,https://root.cern,https://github.com/root-project/root/pull/2117#issuecomment-393471686,1,['test'],['testReport']
Testability,type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_py,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393458046:3357,test,testReport,3357,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393458046,1,['test'],['testReport']
Testability,type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roott,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2119#issuecomment-393426877:3357,test,testReport,3357,https://root.cern,https://github.com/root-project/root/pull/2119#issuecomment-393426877,1,['test'],['testReport']
Testability,types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_load](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_load/); - [projectroot.roottest.cling.stl.dicts.roottest_cling_stl_dicts_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.cling.stl/dicts/roottest_cling_stl_dicts_build/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stl_makeproject_test_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stl_makeproject_test_build/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_MyClass_v1_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_MyClass_v1_libgen_build/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadtest_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36222/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadtest_build/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_read_leaves_build](https://epsft-jenkins.cern.ch/j,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2454#issuecomment-411275022:3248,test,testReport,3248,https://root.cern,https://github.com/root-project/root/pull/2454#issuecomment-411275022,1,['test'],['testReport']
Testability,"u need to build ROOT, start ; it and type `int i`.; >; > Seriously, can I get one test that still fails with ; > https://reviews.llvm.org/D33529 ?; >; > If that cannot be done could @pcanal <https://github.com/pcanal> or ; > @Axel-Naumann <https://github.com/axel-naumann> at least verify that ; > after applying D33529 and setting |DynamicLibrary::SearchOrder = ; > SO_LoadedFirst; // or SO_LoadedLast (don't know the problem)| 500+ ; > tests are broken?; >; Now trying with SO_LoadedLast.; >; > I would appreciate if we can coordinate next time such breaking; > changes before asking for a llvm review and land patches in these; > particularly sensitive areas.; >; > I explicitly added you to the list of reviewers for the original ; > patch, there is little more I can do than that. And more coordination ; > is exactly what I am trying to do now. If we cannot reach a conclusion ; > may I at least be added to review whatever your solution looks like?; >; > 1. I plan to remove the NDEBUG assert; >; > Already done in D33529; >; > 2. Make the std::vector<void*> a; > std::vector<llvm::PointerIntPair<void*, 1, bool>>; >; > How can you guarantee that the platform will deliver a pointer with ; > proper alignment for that?; >; > 3. I will change the search order to search for first the one; > that are not marked RTLD_GLOBAL.; >; > So any other client that wants to open thing's with RTLD_LOCAL will ; > then expose what they thought were private symbols to the JIT as a whole?; >; > One of the issues is that it is not clear to me is what exactly is; > your use case and this is why there are misunderstandings.; >; > I also don't understand why there are mis-understandings, but have ; > explained the use case a few times now and *3* will explicitly break ; > that as well as provide bizarre default behavior:; >; > libc++.so, libA.so; > libA.so defines an overload for global operator new/delete; >; > |DynamicLibrary::getPermanentLibrary(NULL) // Other code; > DynamicLibrary::getPermanentLib",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313802370:1765,assert,assert,1765,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313802370,1,['assert'],['assert']
Testability,"uct'; `-TypedefDecl 0xbf7c278 <line:42:1, col:20> col:20 in xlocale.h hidden locale_t '__locale_t':'struct __locale_struct *'; `-TypedefType 0xbf7c240 '__locale_t' sugar; |-Typedef 0xbf7c1c8 '__locale_t'; `-PointerType 0xbf7c170 'struct __locale_struct *'; `-ElaboratedType 0xbf7c100 'struct __locale_struct' sugar; `-RecordType 0xbf7ba40 '__locale_struct'; `-CXXRecord 0xbf7b988 '__locale_struct'; Mod=0; #0 0x0000000009107dda llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:565:11; #1 0x0000000009107f8b PrintStackTraceSignalHandler(void*) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:632:1; #2 0x00000000091067b3 llvm::sys::RunSignalHandlers() /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Signals.cpp:97:5; #3 0x00000000091085a5 SignalHandler(int) /scratch/greenc/test-products/root/v6_27_99f1/source/root-6.27.99/interpreter/llvm/src/lib/Support/Unix/Signals.inc:407:1; #4 0x00007f7e8feef630 __restore_rt sigaction.c:0:0; #5 0x00000000031e3995 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__is_long() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1445:22; #6 0x00000000031e3949 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::__get_pointer() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1544:17; #7 0x00000000031e3905 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::data() const /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/string:1251:75; #8 0x00000000031e1945 std::__2::basic_string<char, std::__2::char_traits<char>, std::__2::allocator<char> >::c_str() const /scratch/greenc",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377744663:3804,test,test-products,3804,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377744663,1,['test'],['test-products']
Testability,"ue*, cling::Transaction**, bool) (./cling+0xace867); > > > #10 0x0000000000b10d17 cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (./cling+0xb10d17); > > > #11 0x0000000000bad161 cling::UserInterface::runInteractively(bool) (./cling+0xbad161); > > > #12 0x00000000009d28b7 main (./cling+0x9d28b7); > > > #13 0x00007f024c2b0840 __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x20840); > > > #14 0x0000000000a32349 _start (./cling+0xa32349); > > > Stack dump:; > > > 0.	Program arguments: ./cling -xcuda ; > > > Segmentation fault (core dumped); > > > ```; > > ; > > ; > > There is nothing obvious for me happening wrong in the `CIFactory.cpp`. Something likely changed in the cuda setup in llvm9. Let me know if we should make a joint debug session.; > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.; > > ; > > ; > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.; > ; > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The proble",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-777052629:2876,test,test,2876,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-777052629,1,['test'],['test']
Testability,uests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149178/testReport/projectroot.roottest.root.se,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1175116758:1738,test,testReport,1738,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1175116758,1,['test'],['testReport']
Testability,uests-build/36123/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36123/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.rootte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411084210:3735,test,testReport,3735,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411084210,1,['test'],['testReport']
Testability,"uests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30136/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2192#issuecomment-397195445:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2192#issuecomment-397195445,4,['test'],"['test', 'testReport', 'tests']"
Testability,uild/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_more](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_more/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_trivial](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34227/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_trivial/). And 13 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-409167887:4019,test,test,4019,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-409167887,13,['test'],"['test', 'testReport']"
Testability,"uild/67064/console).; ### Warnings:; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:39:47: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:40:61: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:43:64: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:44:78: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:46:64: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:47:78: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] ; - /mnt/build/workspace/root-pullrequests-build/root/core/clingutils/test/TClingUtilsTests.cxx:49:85: warning: ignoring return value of ‘int symlink(const char*, const char*)’, declared with attribute warn_unused_result [-Wunused-result] . ### Failing tests:; - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/67064/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4338#issuecomment-527804099:1415,test,test,1415,https://root.cern,https://github.com/root-project/root/pull/4338#issuecomment-527804099,4,['test'],"['test', 'testReport', 'tests']"
Testability,ullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp5CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36078/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/). And 32 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2408#issuecomment-411059605:4433,test,testReport,4433,https://root.cern,https://github.com/root-project/root/pull/2408#issuecomment-411059605,4,['test'],['testReport']
Testability,"ullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - include/ROOT/RConcurrentHashColl.hxx:39:19: warning: variable ‘d’ set but not used [-Wunused-but-set-variable] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - include/ROOT/RConcurrentHashColl.hxx:39:19: warning: variable ‘d’ set but not used [-Wunused-but-set-variable] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TVirtualGL.cxx:31:85: warning: cast between incompatible function types from ‘TGLManager*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] . And 387 more. ### Failing tests:; - [projectroot.roottest.cling.functionTemplate.roottest_cling_functionTemplate_testcint](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/42551/testReport/projectroot.roottest.cling/functionTemplate/roottest_cling_functionTemplate_testcint/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2715#issuecomment-425565118:2370,test,tests,2370,https://root.cern,https://github.com/root-project/root/pull/2715#issuecomment-425565118,2,['test'],"['testReport', 'tests']"
Testability,"ult from TTree:Print(""all""):; ```; ******************************************************************************; *Chain :treeparent: treeparent1.root *; ******************************************************************************; ******************************************************************************; *Tree :treeparent: test friend trees *; *Entries : 3 : Total = 930 bytes File Size = 470 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :y : y/I *; *Entries : 3 : Total Size= 555 bytes File Size = 86 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ******************************************************************************; *Chain :treeparent: treeparent2.root *; ******************************************************************************; ******************************************************************************; *Tree :treeparent: test friend trees *; *Entries : 3 : Total = 930 bytes File Size = 470 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :y : y/I *; *Entries : 3 : Total Size= 555 bytes File Size = 86 *; *Baskets : 1 : Basket Size= 32000 bytes Compression= 1.00 *; *............................................................................*; ******************************************************************************; *Chain :treeparent: treeparent3.root *; ******************************************************************************; ******************************************************************************; *Tree :treeparent: test friend trees *; *Entries : 3 : Total = 930 bytes File Size = 470 *; * : : Tree compression factor = 1.00 *; ******************************************************************************; *Br 0 :y : y/I *; *Entries : 3 : Total Size= 555 bytes File S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7785#issuecomment-816500613:6740,test,test,6740,https://root.cern,https://github.com/root-project/root/pull/7785#issuecomment-816500613,1,['test'],['test']
Testability,ulticore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.meta/test/gtest_core_meta_test_testStatusBitsChecker/); - [projectroot.core.meta.test.gtest_core_meta_test_testHashRecursiveRemove](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.meta/test/gtest_core_meta_test_testHashRecursiveRemove/); - [projectroot.core.metacling.test.gtest_core_metacling_test_coremetaclingtestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36303/testReport/projectroot.core.metacling/test/gtest_core_metacling_test_coremetaclingtestUnit/); - ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411349950:3675,test,testReport,3675,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411349950,1,['test'],['testReport']
Testability,"urn main; ```; Then calling `df = Dask.RDataFrame(chain, daskclient=connection, npartitions=nparts)`. 1. Is it intentional not to use a spec instead?; 2. From the breakpoint I printed the contents of file and tree names and they looked all file:; ```py; (Pdb) p FILENAMES; ['distrdf_check_friend_trees_alignment_dask_file_1.root', 'distrdf_check_friend_trees_alignment_dask_file_2.root', 'distrdf_check_friend_trees_alignment_dask_file_3.root', 'distrdf_check_friend_trees_alignment_dask_file_4.root', 'distrdf_check_friend_trees_alignment_dask_file_5.root', 'distrdf_check_friend_trees_alignment_dask_file_6.root']; (Pdb) p TREENAMES; ['distrdf_check_friend_trees_alignment_dask_tree_1.root', 'distrdf_check_friend_trees_alignment_dask_tree_2.root', 'distrdf_check_friend_trees_alignment_dask_tree_3.root', 'distrdf_check_friend_trees_alignment_dask_tree_4.root', 'distrdf_check_friend_trees_alignment_dask_tree_5.root', 'distrdf_check_friend_trees_alignment_dask_tree_6.root']; ```; 3. Locally this test fails for me on `s1val = s1.GetValue()`. From pdb I get this stack strace:; ```py; ... > rdf_node = rdf_operation(*in_task_op.args, **in_task_op.kwargs); E cppyy.ll.SegmentationViolation: Template method resolution failed:; E ROOT::RDF::RResultPtr<double> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Sum(basic_string_view<char,char_traits<char> > columnName = """", double& initValue = RDFDetail::SumReturnType_t<RInferredType>{}) =>; E SegmentationViolation: segfault in C++; program state was reset; E ROOT::RDF::RResultPtr<double> ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager,void>::Sum(basic_string_view<char,char_traits<char> > columnName = """", double& initValue = RDFDetail::SumReturnType_t<RInferredType>{}) =>; E SegmentationViolation: segfault in C++; program state was reset. ../../../../rb/lib/DistRDF/ComputationGraphGenerator.py:134: SegmentationViolation; ```; This is also what jenkins complains about. I don't clearly see what is wrong. Investigating ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11526#issuecomment-1340908063:2002,test,test,2002,https://root.cern,https://github.com/root-project/root/pull/11526#issuecomment-1340908063,1,['test'],['test']
Testability,ut/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28359/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_pytho,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393485196:3914,test,testReport,3914,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393485196,1,['test'],['testReport']
Testability,utput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/). And 88 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2496#issuecomment-414946221:4214,test,testReport,4214,https://root.cern,https://github.com/root-project/root/pull/2496#issuecomment-414946221,4,['test'],['testReport']
Testability,"uys were after and implementing a solution that has little cost for both of us. I too suffer from lack time, so asking me to do work then walking away without even giving a single example of what is broken seems a bit rude.... Seriously, can I get one test that still fails with https://reviews.llvm.org/D33529 ?. If that cannot be done could @pcanal or @Axel-Naumann at least verify that after applying D33529 and setting `DynamicLibrary::SearchOrder = SO_LoadedFirst; // or SO_LoadedLast (don't know the problem)` 500+ tests are broken?. > I would appreciate if we can coordinate next time such breaking changes before asking for a llvm review and land patches in these particularly sensitive areas. I explicitly added you to the list of reviewers for the original patch, there is little more I can do than that. And more coordination is exactly what I am trying to do now. If we cannot reach a conclusion may I at least be added to review whatever your solution looks like?. > 1. I plan to remove the NDEBUG assert. Already done in D33529. > 2. Make the std::vector<void*> a std::vector<llvm::PointerIntPair<void*, 1, bool>>. How can you guarantee that the platform will deliver a pointer with proper alignment for that?. > 3. I will change the search order to search for first the one that are not marked RTLD_GLOBAL. So any other client that wants to open thing's with RTLD_LOCAL will then expose what they thought were private symbols to the JIT as a whole?. > One of the issues is that it is not clear to me is what exactly is your use case and this is why there are misunderstandings. I also don't understand why there are mis-understandings, but have explained the use case a few times now and **3** will explicitly break that as well as provide bizarre default behavior:. > libc++.so, libA.so; > libA.so defines an overload for global operator new/delete; > ; > ```; > DynamicLibrary::getPermanentLibrary(NULL); > // Other code; > DynamicLibrary::getPermanentLibrary(""libA.so""); > ```; > In",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313799028:1402,assert,assert,1402,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313799028,1,['assert'],['assert']
Testability,void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28319/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2116#issuecomment-393458046:3080,test,testReport,3080,https://root.cern,https://github.com/root-project/root/pull/2116#issuecomment-393458046,1,['test'],['testReport']
Testability,void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28309/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2119#issuecomment-393426877:3080,test,testReport,3080,https://root.cern,https://github.com/root-project/root/pull/2119#issuecomment-393426877,1,['test'],['testReport']
Testability,void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 178 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmkdir3PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp1PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28329/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootcp2PrepareInput/); - [projectroot.roottest.python.cmdLineUtils.roottest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-393462547:3080,test,testReport,3080,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-393462547,1,['test'],['testReport']
Testability,volution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_cachedChain/); - [projectroot.roottest.root.treeformula.retobj.roottest_root_treeformula_retobj_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30533/testReport/projectroot.roottest.root.treeformula/retobj/roottest_root_treeformula_retobj_make/). And 5 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-398607736:4291,test,testReport,4291,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-398607736,4,['test'],['testReport']
Testability,"volve ` opening each file and saving them. Then loading them again and merging, then saving again` as you say above. Or at least the loading, merging and saving again part, if we consider that the part of your example where you create two files from scratch and save data into them with RDF could also just have been opening already existing files written by some other application before the merging. In fact the solution you provide follows exactly these steps:; > ; > ```python; > # Opening files and loading pre-existing datasets; > df_1=ROOT.RDataFrame('tree', file_path_1); > df_2=ROOT.RDataFrame('tree', file_path_2); > ; > # creating new columns in the datasets; > df_1=df_1.Define('identity', '+1'); > df_2=df_2.Define('identity', '+2'); > ; > # Merging the datasets in memory; > df_3 = df_1.Merge(df_2); > # Opening a new file and save the merged dataset into the new file; > df_3.Snapshot('tree', 'file.root'); > ```; > ; > I admit that I might not be able to see some internal optimizations that RDF might do while merging, but the logical steps seem to be equivalent to me. Or I also might be misinterpreting your proposal. No, the approaches are different. In the approach without `RDataFrame::Merge` I save twice the modified trees with the new column added, so the whole thing is slower than the second approach where the looping and saving can be done only once. . > ; > ## Current possible approaches; > If you need to process a dataset with RDF and need to concatenate parts of it, the current best approach is to use the `RDataFrame(TTree &tree)` constructor after having created the correct tree with all the information you need. If for example you need to concatenate vertically 2 or more TTrees (i.e. if all have the same schema with column `a` and you want to append values of the same column into a single entity), than you can create a TChain and add all the trees to it. If you need horizontal concatenation (i.e. the trees have different schema but same number of entries",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-927331768:2566,log,logical,2566,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-927331768,1,['log'],['logical']
Testability,"w=] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:4757:26: warning: ‘char* strncpy(char*, const char*, size_t)’ output may be truncated copying 10 bytes from a string of length 10 [-Wstringop-truncation] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 174 more. ### Failing tests:; - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35709/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_CacheRange](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35709/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_CacheRange/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2423#issuecomment-410609447:2631,test,tests,2631,https://root.cern,https://github.com/root-project/root/pull/2423#issuecomment-410609447,3,['test'],"['testReport', 'tests']"
Testability,"workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:490:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing between 2147483648 and 2147483647 bytes at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 4294967295] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:1148:14: warning: ‘char* strncat(char*, const char*, size_t)’ accessing 1 byte at offsets 0 and [-2147483647, 2147483648] may overlap 1 byte at offset [0, 2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_MethodDL_Optimization_Cpu](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/33809/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_MethodDL_Optimization_Cpu/)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2379#issuecomment-408399396:2630,test,tests,2630,https://root.cern,https://github.com/root-project/root/pull/2379#issuecomment-408399396,4,['test'],"['test', 'testReport', 'tests']"
Testability,"you should see the warnings regarding the comparisons of `unsigned long` and `int` as well on your system. can you check? the tests for all builds seem to be fine. is it possible for you to access [cdash.cern.ch](cdash.cern.ch)?. as well, please rebase and squash your commits in a single commit with a meaningful message. last change: please put a `[TMVA]` tag at the begin of your commit message so that it's clear what you've worked on in the commit history.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2309#issuecomment-404080279:126,test,tests,126,https://root.cern,https://github.com/root-project/root/pull/2309#issuecomment-404080279,1,['test'],['tests']
Testability,"ystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```; struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; .L lib/libStrip.so ; Marker m2;; gInterpreter->AutoParse(""SiStripCluster"");; .undo 2; SiStripCluster obj;; ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```; struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; .L lib/libStrip.so ; SiStripCluster obj;; ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there?. It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:; ```; commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms); Author: Philippe Canal <pcanal@fnal.gov>; Date: Wed Oct 21 21:59:31 2015 -0500. Allow redoing autoparsing undo by a transaction rollback.; ; For each autoparse record to under which transaction it is being done. If this transaction is; rolled back, make sure to clear the caches that noted that this autoparsing had be done.; ```. Cheers,; Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852#issuecomment-434478365:1686,test,testing,1686,https://root.cern,https://github.com/root-project/root/pull/2852#issuecomment-434478365,2,['test'],['testing']
Testability,ython_cmdLineUtils_SimpleRootrm1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootrm1CheckOutput/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_array_interface/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_ttree_asmatrix](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_ttree_asmatrix/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_pretty_printing](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_pretty_printing/); - [projectroot.core.base.test.gtest_core_base_test_CoreBaseTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.base/test/gtest_core_base_test_CoreBaseTests/); - [projectroot.core.cont.test.gtest_core_cont_test_coreconttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.cont/test/gtest_core_cont_test_coreconttestUnit/); - [projectroot.core.cont.test.gtest_core_cont_test_testTypedIteration](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36159/testReport/projectroot.core.cont/test/gtest_core_cont_test_testTypedIteration/); - [projectroot.core.imt.test.gtest_core_imt_test_coreimttest,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2452#issuecomment-411107206:3699,test,testReport,3699,https://root.cern,https://github.com/root-project/root/pull/2452#issuecomment-411107206,1,['test'],['testReport']
Testability,zations.test.pyunittests_pyroot_import_load_libs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_import_load_libs/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.other.roottest_cling_other_execValuePrint](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.cling/other/roottest_cling_other_execValuePrint/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.tree.reader.roottest_root_tree_reader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/reader/roottest_root_tree_reader_make/); - [projectroot.roottest.root.tree.selector.roottest_root_tree_selector_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.tree/selector/roottest_root_tree_selector_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/164000/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12018#issuecomment-1380358995:1652,test,testReport,1652,https://root.cern,https://github.com/root-project/root/pull/12018#issuecomment-1380358995,4,['test'],['testReport']
Testability,{aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.ro,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-414258112:3567,test,testReport,3567,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-414258112,1,['test'],['testReport']
Testability,} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.te,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:3056,test,test,3056,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['test']
Testability,‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1773:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1775:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_readTotemNtuple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_readTotemNtuple/); - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_testForeignDraw](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/); - [projectroot.roottest.root.io.treeproblem.roottest_root_io_treeproblem_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.io/treeproblem/roottest_root_io_treeproblem_make/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/38591/testReport/projectroot.roottest.root.tree/fastcloning/roottest_roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-415844036:3036,test,testReport,3036,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-415844036,1,['test'],['testReport']
Testability,‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 89 more. ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_2/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlwrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlwrite/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37787/testReport/projectroot.roottest.r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2496#issuecomment-414946221:3011,test,testReport,3011,https://root.cern,https://github.com/root-project/root/pull/2496#issuecomment-414946221,1,['test'],['testReport']
Testability,‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv5CheckOutput/); - [projectroot.roottest.root.io.event.roottest_root_io_event](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/event/roottest_root_io_event/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36132/testReport/projectroot.roottest.root.io/stdarra,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411089672:3011,test,testReport,3011,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411089672,1,['test'],['testReport']
Testability,‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_friends](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_friends/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_callbacks](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_callbacks/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_histomodels](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_histomodels/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_interface/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_simple](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_simple/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_vecops](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_vecops/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_regression](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_regression/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_datasource_more](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30965/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_datasource_more/); - [projectroot.tree.dataframe.test.gtest_t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2176#issuecomment-399670363:3536,test,test,3536,https://root.cern,https://github.com/root-project/root/pull/2176#issuecomment-399670363,1,['test'],['test']
Testability,’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] . And 179 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.cling.dict.ROOT-9185.roottest_cling_dict_ROOT_9185_ROOT9185](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.cling.dict/ROOT-9185/roottest_cling_dict_ROOT_9185_ROOT9185/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_listFilesCtor/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshotNFiles/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_regression_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851#issuecomment-408947574:3311,test,testReport,3311,https://root.cern,https://github.com/root-project/root/pull/1851#issuecomment-408947574,1,['test'],['testReport']
Testability,’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv4CheckOutput/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv3CheckOutput/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_SimpleRootmv1CheckOutput/); - [projectroot.roottest.python.pickle.roottest_python_pickle_write](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/pickle/roottest_python_pickle_write/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_writecomplex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_writecomplex/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootmv2CheckOutput](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36168/testReport/projectroot.roottest.python/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/774#issuecomment-411129604:3565,test,testReport,3565,https://root.cern,https://github.com/root-project/root/pull/774#issuecomment-411129604,1,['test'],['testReport']
Testability,’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37449/testReport/projectroot,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-414258112:3318,test,testReport,3318,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-414258112,1,['test'],['testReport']
Usability,"				 If no name is given, prints out list of all typedefs. .files			- Prints names of all included (parsed) files. .fileEx			- Prints out included (parsed) file statistics; 				 as well as a list of their names. .g <var>				- Prints out information about global variable; 				 'var' - if no name is given, print them all. .@ 				- Cancels and ignores the multiline input. .rawInput [0|1]		- Toggle wrapping and printing the; 				 execution results of the input. .dynamicExtensions [0|1]	- Toggles the use of the dynamic scopes; 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding; 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one; 				 saved in a given file. .stats [name]		- Show stats for internal data structures; 				 'ast' abstract syntax tree stats; 				 'asttree [filter]' abstract syntax tree layout; 				 'decl' dump ast declarations; 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation; 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands.; ===============================================================================; .L <filename>[flags]: load the given file with optional flags like; + to compile or ++ to force recompile.; Type .? TSystem::CompileMacro for a list of all flags.; .(x|X) <filename>[flags](args) :; same as .L <filename>[flags] and runs then a function; with signature: ret_type filename(args).; .credits : show credits; .demo : launch GUI demo; .help Class::Member : open reference guide for that class member (or .?).; Specifying '::Member' is optional.; .help edit : show line editing shortcuts (or .?); .license : show license; .ls : list contents of current TDir",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10121#issuecomment-1084927674:2512,undo,undo,2512,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674,2,['undo'],['undo']
Usability," 	std::vector<double> m_vVel;; 	std::vector<double> m_vOpPow;; 	std::vector<double> m_vPulseMag;; 	std::vector<double> m_vIntData[NUMBER_OF_COLORS];; 	std::vector<double> m_vIntDataSD[NUMBER_OF_COLORS];; 	std::vector<double> m_vPkRatio;; 	std::vector<int> m_vEvtErr;; 	std::vector<double> m_vEvRate;; 	std::vector<double> m_vGEV;; 	std::vector<int> m_vChEnbMask;. 	bool m_bAllChannelsEnabled;; ```. Here, NUMBER_OF_COLORS = 5. The generated _dict file in root 5 show, at one point (note the vector declaration), . ```; {; for (Int_t R__l = 0; R__l < 5; R__l++) {; vector<double> &R__stl = m_vIntData[R__l];; R__stl.clear();; int R__i, R__n;; R__b >> R__n;; R__stl.reserve(R__n);; for (R__i = 0; R__i < R__n; R__i++) {; double R__t;; R__b >> R__t;; R__stl.push_back(R__t);; }; }; }; ```. This seems to work well. But in root 6 it produces (note the [5] after vector<double>). ```; for (Int_t R__l = 0; R__l < 5; R__l++) {; vector<double>[5] &R__stl = m_vIntData[R__l];; R__stl.clear();; int R__i, R__n;; R__b >> R__n;; R__stl.reserve(R__n);; for (R__i = 0; R__i < R__n; R__i++) {; double R__t;; R__b >> R__t;; R__stl.push_back(R__t);; }; }; }. ```. this produces the compilation error:. ```; g++ -O -Wall -fPIC -pthread -std=c++14 -m64 -I/usr/include/root -I/home/vmecomp/Projects/Cytogate/CytCommon -I../../Include -I. -I/usr/include -I/home/vmecomp/Projects/Cytogate/Bus -I/home/vmecomp/Projects/Cytogate/Include -I/home/vmecomp/Projects/Cytogate/CytCommon -I/usr/include/root -c -o CytStatInfo_dict.o CytStatInfo_dict.C; CytStatInfo_dict.C: In member function ‘virtual void CytStatInfo::Streamer(TBuffer&)’:; CytStatInfo_dict.C:202:25: error: expected identifier before numeric constant; vector<double>[5] &R__stl = m_vIntData[R__l];; ^; CytStatInfo_dict.C:202:25: error: expected ‘]’ before numeric constant; vector<double>[5] &R__stl = m_vIntData[R__l];; ^; ]; CytStatInfo_dict.C:202:24: warning: structured bindings only available with -std=c++17 or -std=gnu++17; vector<double>[5] &R__stl = m_vI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12755#issuecomment-1534658132:1715,clear,clear,1715,https://root.cern,https://github.com/root-project/root/issues/12755#issuecomment-1534658132,1,['clear'],['clear']
Usability," /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 3&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile2D]’ ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:498:44: error: the value of ‘i’ is not usable in a constant expression ; - [2022-08-05T22:57:54.253Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:512:58: error: no matching function for call to ‘GetNthElement&lt;colidx&gt;(const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&, const ROOT::VecOps::RVec&lt;int&gt;&)’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build/root/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx:507:49: error: call to non-constexpr function ‘ROOT::Internal::RDF::FillHelper&lt;HIST&gt;::Exec(unsigned int, const Xs& ...)::&lt;lambda(const auto:2&)&gt; [with auto:2 = std::array&lt;bool, 2&gt;; Xs = {ROOT::VecOps::RVec&lt;int&gt;, ROOT::VecOps::RVec&lt;int&gt;}; typename std::enable_if&lt;ROOT::Internal::RDF::Disjunction&lt;ROOT::Internal::RDF::IsDataContainer&lt;ValTypes&gt;...&gt;::value, int&gt;::type &lt;anonymous&gt; = 0; HIST = TProfile]’ ; - [2022-08-05T22:57:54.254Z] /mnt/build/workspace/root-pullrequests-build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11127#issuecomment-1207076516:2125,usab,usable,2125,https://root.cern,https://github.com/root-project/root/pull/11127#issuecomment-1207076516,1,['usab'],['usable']
Usability," 2022 MacOSX13.1.sdk; drwxr-xr-x 7 root wheel 224 Sep 18 15:25 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 Sep 18 14:57 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 Sep 18 15:25 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 Sep 18 14:56 MacOSX15.sdk -> MacOSX15.0.sdk; + clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin; ignoring nonexistent directory ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1""; ""/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/clang"" -cc1 -triple arm64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/pcanal/root_working/builds/master.debug/src/tutorials/v7/ntuple -resource-dir /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/16 -isysroot /Applications/Xcode.app",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2375170248:1618,clear,clear-ast-before-backend,1618,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2375170248,1,['clear'],['clear-ast-before-backend']
Usability," CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG; -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success; -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS; -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success; -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS; -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS; -- Performing Test CXX_SUPPORTS_FFUNCTION_SECTIONS - Success; -- Performing Test C_SUPPORTS_FDATA_SECTIONS; -- Performing Test C_SUPPORTS_FDATA_SECTIONS - Success; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS; -- Performing Test CXX_SUPPORTS_FDATA_SECTIONS - Success; CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1000 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_EH'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/lib/llvm/15/lib/cmake/llvm/HandleLLVMOptions.cmake:1001 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning. For compatibility with older versions of CMake, option is clearing the; normal variable 'LLVM_ENABLE_RTTI'.; Call Stack (most recent call first):; CMakeLists.txt:95 (include); This warning is for project developers. Use -Wno-dev to suppress it. CMake Warning (dev) at /usr/share/cmake/Modules/CMakeDependentOption.cmake:75 (option):; Policy CMP0077 is not set: option() honors normal variables. Run ""cmake; --help-policy CMP0077"" for policy details. Use the cmake_policy command to; set the policy and suppress this warning",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:6101,clear,clearing,6101,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,1,['clear'],['clearing']
Usability," ch_data.AddFriend(treename, idfilepath). df = ROOT.RDataFrame(ch_data). return (df, ch_data); #------------------------------------------; def test():; #----------------------; #Make input; #----------------------; index = 0 ; l_tp_file = [] ; for val in range(0, 100, 10):; filepath = make_data(val); l_tp_file.append((index, filepath)); index+=1; #----------------------; #Merge; #----------------------; df, _ = get_df(l_tp_file, 'tree', id_column='id'); df.Display(['a', 'id'], -1).Print(); #df.Snapshot('tree', 'file.root'); #------------------------------------------; test(); ```. I will add `get_df` to my personal library. The approach seems safe and clean enough, however the return value needs to include the chain (i.e. _) because otherwise I get a crash. Which seems to indicate that the chain's reference is not kept inside the dataframe. So once the function returns, the chain is removed by the garbage collector and the dataframe does not have anything to save (the script above is self contained and you can try it yourself). That should not be right, if I tell the dataframe to use the chain, the chain should be kept alive by the dataframe. > ; > The simplest solution: with the upcoming `DefinePerSample` method you can solve this more easily, but the feature will only be merged in ROOT master in a few days ([PR here](https://github.com/root-project/root/pull/8841)). With `DefinePerSample` you could write something like this:; > ; > ```c++; > df.DefinePerSample(""index"", ""GetIndex(rdfsampleinfo_.AsString())""); > ```; > ; > where `rdfsampleinfo_.AsString()` will be of the form `<filename>/<treename>`. I expect to merge this feature in master today or tomorrow. So we would have to create a `GetIndex` function to extract from the ""filename/treename"" the index? Yes, that would make my code far simpler. However it might take months until that is available through CVMFS. In any case, the simpler our code gets, the better, fewer places for bugs to hide. Cheers and thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030#issuecomment-932494638:4806,simpl,simplest,4806,https://root.cern,https://github.com/root-project/root/issues/9030#issuecomment-932494638,3,['simpl'],"['simpler', 'simplest']"
Usability," in `ui5/eve7/` folder, one or two fonts as examples in tutorials and provide recipe where other fonts can be found?. Yes, we could do that. Font textures and metrics files are generated from TTF via https://github.com/osschar/sdf_atlas. It's a small tool, easy to build on linux -- so we could provide instructions for this and also a catalog/web-site with a bunch of pre-generated fonts. > 3. If I understand correct, `REveText` rendering will be only supported with RenderCore? That about three.js? Beside fonts support it is easy to implement text rendering there. Yes, I know ... they have a monster implementation(s) of fonts. Seeing that I went looking for something super simple and still good looking :). Now, this is a bit unfortunate ... but I don't think I have the bandwidth to keep Three fully supported. Also, the low-level, renderer- and shader-level support we are getting from RenderCore (in particular, for picking & rendering of instanced objects and the upcoming spline-based line rendering) is making it possible to support features and performance optimizations that I do not think would be doable in Three with the time budget we all have and the level of changes we can do in core Three (zero, unless we can hack over it locally). > 4. Is it possible to support other font formats - like TTF or OTF? ROOT already includes such fonts, is it an option?. This would be nice, sdf_atlas could be incorporated into root (it requires minimal GL support which we already have) -- and one could then generate the missing SDF fonts during the startup of a demo/application. License is free to use in whatever way, just keep the copyright notice. But it only supports TTF, not OTF. Perhaps we should look for another library ... or at least a new TTF/OTF parser -- I don't know much about low-level font things so this maybe already exists in root?. I understand this is not all perfect -- but at this point our priority is to get something usable in for the existing REve applications.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2161600927:2271,usab,usable,2271,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2161600927,1,['usab'],['usable']
Usability," ls -l /Library/Developer/CommandLineTools/SDKs/; total 0; lrwxr-xr-x 1 root wheel 14 17 Sep 14:08 MacOSX.sdk -> MacOSX15.0.sdk; drwxr-xr-x 7 root wheel 224 17 Sep 14:10 MacOSX14.5.sdk; lrwxr-xr-x 1 root wheel 14 17 Sep 14:07 MacOSX14.sdk -> MacOSX14.5.sdk; drwxr-xr-x 7 root wheel 224 17 Sep 14:09 MacOSX15.0.sdk; lrwxr-xr-x 1 root wheel 14 17 Sep 14:07 MacOSX15.sdk -> MacOSX15.0.sdk; sftnight@macphsft34 ~ % clang++ -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: arm64-apple-darwin24.1.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple arm64-apple-macosx15.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=non-leaf -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=1 -fobjc-msgsend-selector-stubs -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu apple-m1 -target-feature +v8.5a -target-feature +aes -target-feature +crc -target-feature +dotprod -target-feature +fp-armv8 -target-feature +fp16fml -target-feature +lse -target-feature +ras -target-feature +rcpc -target-feature +rdm -target-feature +sha2 -target-feature +sha3 -target-feature +neon -target-feature +zcm -target-feature +zcz -target-feature +fullfp16 -target-abi darwinpcs -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -I/usr/local/include -internal-isystem /Library/Developer/CommandLine",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:18560,clear,clear-ast-before-backend,18560,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,1,['clear'],['clear-ast-before-backend']
Usability," make a joint debug session.; > > > But this is on my todo list for this week. I also see that this PR has some changes that your cling doesn't have, which is what my test is based on. So, my next step is to test the CUDA mode with the root version.; > > ; > > ; > > One way to test cling within ROOT would be to get this PR and then configure with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -Dclingtest=On` and then type `make -j cling` and that should build the cling binary ready to use.; > ; > The root PR does not solve my problem. I looked a little bit in the code with the gdb and found out, where the application crashes. In `IncrementalCUDADeviceCompiler::generatePTX()` the line `llvm::Module* module = m_PTX_interp->getLastTransaction()->getModule();` returns a `nullptr`. But this only happens, if I define a Cuda `__global__` kernel. If use a normal C++ statement, like `int i = 3;` or define a Cuda `__device__` function everything is fine. I'm not sure, if there more cases. @vgvassilev Do you have an idea? Maybe you saw something, which can help me, during your porting work. If not, it is not problem. Then, I simply have to spent more time. I found the problem and a possible fix. The problem happens in the Interpreter instance for the device code. In the function `IncrementalExecutor::runStaticInitializersOnce()`, there is the line `llvm::orc::VModuleKey K = emitModule(T.takeModule(), T.getCompilationOpts().OptLevel);`, which removes the `llvm::Module` from the transaction. Because `generatePTX()` is called afterwards, `getLastTransaction->getModule` returns a `nullptr`. At the moment, I don't know, why the device compiler creates a static initializer on the device site. On the host site, it is necessary to register the CUDA kernel. At the moment, my solution is a if-guard in `Interpreter::executeTransaction()`:. ```C++; if(!m_Opts.CompilerOpts.CUDADevice); ExeRes = m_Executor->runStaticInitializersOnce(T);; ```. I need to verify, if this is a good solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-777052629:3803,simpl,simply,3803,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-777052629,1,['simpl'],['simply']
Usability, on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163311/console).; ### Errors:; - [2023-01-02T13:46:22.128Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:307:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ ; - [2023-01-02T13:46:22.128Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:701:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ . ### Warnings:; - [2023-01-02T13:41:26.055Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2023-01-02T13:41:26.575Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-02T13:41:26.575Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4042:43: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-02T13:42:45.530Z] /home/sftnight/build/workspace/root-pullrequests-build/root/io/io/src/TEmulatedMapProxy.cxx:144:25: warning: bitwise operation between different enumeration types ‘EProperty’ and ‘TGenCollectionProxy::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-02T13:42:45.530Z] /home/sftnig,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11874#issuecomment-1368960482:1011,simpl,simple,1011,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1368960482,1,['simpl'],['simple']
Usability, on root-ubuntu-2204-1.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/163670/console).; ### Errors:; - [2023-01-10T07:30:15.222Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:307:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ ; - [2023-01-10T07:30:15.222Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/ntuple/v7/src/RPageStorageDaos.cxx:701:80: error: no matching function for call to ‘ROOT::Experimental::Detail::RDaosContainer::ROidDkeyPair::ROidDkeyPair(&lt;brace-enclosed initializer list&gt;)’ . ### Warnings:; - [2023-01-10T07:26:17.045Z] /home/sftnight/build/workspace/root-pullrequests-build/root/net/rpdutils/src/rpdutils.cxx:422:54: warning: using value of simple assignment with ‘volatile’-qualified left operand is deprecated [-Wvolatile] ; - [2023-01-10T07:26:17.322Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4040:42: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-10T07:26:17.322Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/base/src/TSystem.cxx:4042:43: warning: bitwise operation between different enumeration types ‘TSystem::EAclicProperties’ and ‘TObject::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-10T07:26:46.426Z] /home/sftnight/build/workspace/root-pullrequests-build/root/io/io/src/TEmulatedMapProxy.cxx:144:25: warning: bitwise operation between different enumeration types ‘EProperty’ and ‘TGenCollectionProxy::&lt;unnamed enum&gt;’ is deprecated [-Wdeprecated-enum-enum-conversion] ; - [2023-01-10T07:26:46.426Z] /home/sftnig,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11874#issuecomment-1376839076:1011,simpl,simple,1011,https://root.cern,https://github.com/root-project/root/pull/11874#issuecomment-1376839076,1,['simpl'],['simple']
Usability," sprintf(char *string,char *format,arglist,...);; int fscanf(FILE *fp,char *format,arglist,...);; int scanf(char *format,arglist,...);; int sscanf(char *string,char *format,arglist,...);; (C++ compiled) class TClass public:TDictionary //Dictionary containing class information; (C++ compiled) class TBuffer public:TObject //Buffer base class used for serializing objects; (C++ compiled) class TMemberInspector //ABC for inspecting class data members; (C++ compiled) class TNamed public:TObject //The basis for a named object (name, title); (C++ compiled) class TVirtualPerfStats public:TObject //ABC for collecting PROOF statistics; (C++ compiled) class THashList public:TList //Doubly linked list with hashtable for lookup; (C++ compiled) class TFileInfo public:TNamed //Describes generic file info including meta data information; (C++ compiled) class TVirtualMonitoringWriter public:TNamed //ABC for Sending Monitoring Information; (C++ compiled) class TVirtualMonitoringReader public:TNamed //ABC for Reading Monitoring Information; (C++ compiled) class TObjectSpy public:TObject //Spy object pointer for deletion; (C++ compiled) class TObjectRefSpy public:TObject //Spy object reference for deletion; (C++ compiled) class TMethod public:TFunction //Dictionary for a class member function (method); (C++ compiled) class TQObject //Base class for object communication mechanism; (C++ compiled) class TFunction public:TDictionary //Dictionary for global function; (C++ compiled) class TPluginManager public:TObject //Manager for plugin handlers; (C++ compiled) class TPluginHandler public:TObject //Handler for plugin libraries; (C++ compiled) class TTask public:TNamed //Base class for tasks; (C++ compiled) class TQCommand public:TList public:TQObject //encapsulates the information for undo/redo a single action.; (C++ compiled) class TQUndoManager public:TQCommand //recorder of operations for undo and redo; (C++ compiled) class TSysEvtHandler public:TObject public:TQObject //ABC for handling ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10191#issuecomment-1084824531:2809,undo,undo,2809,https://root.cern,https://github.com/root-project/root/issues/10191#issuecomment-1084824531,1,['undo'],['undo']
Usability," the non-modules case we somehow fail to unload the definition of SiStripCluster. That is very likely (or more likely because 'moving memory around change the behavior), the unloading is only partially done. > PS: How the deserialization of the vtables of TMVA::IPruneTool makes the test succeeds is a complete mystery to me at the moment. I recommend that it is actually investigated and understood as this 'seeming random behavior' is likely to be 'use of undefined behavior in the code (somewhere)' or (less likely) the correct behavior but we are completely misunderstanding what's going on under the hood. > It seems to me that failure is the right behavior. It is not :) . I am sure we can agree that an 'undo X' should return the state to a point as if the last X cling related actions had not happened. I.e. the simplified example:. ```; struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; .L lib/libStrip.so ; Marker m2;; gInterpreter->AutoParse(""SiStripCluster"");; .undo 2; SiStripCluster obj;; ```. should actually have the same result (assuming no side effect for Marker::Marker) as. ```; struct Marker { ~Marker() { fprintf(stdout,""dest\n""); } };; .L lib/libStrip.so ; SiStripCluster obj;; ```. and it does not (when modules are turned on) ... possibly because the implicit AutoParse (that is triggered by the use of the symbol SiStripCluster) is no longer possible, in the module case, after the first execution (for example because the first execution of the AutoParse is switching some flag, like I already read this part of the pcm file, that is not 'reset'/'reverted' by the undo. > @pcanal, can you remember what exactly we were testing there?. It is testing both that in this setup the undo is not running into an infinite loop and that we correctly support an (implicit or explicit) AutoParse followed by undo followed by an implicit AutoParse. See the related commit:; ```; commit b6296198c2735101051daa33af89fe8ae641991e (fix_cms); Author: Philippe Canal <pcanal@fnal.go",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852#issuecomment-434478365:1014,undo,undo,1014,https://root.cern,https://github.com/root-project/root/pull/2852#issuecomment-434478365,1,['undo'],['undo']
Usability,![screenshot](https://user-images.githubusercontent.com/249404/51119045-173f1980-1812-11e9-9195-9cbc431d1709.png); I get this even after clearing the cache.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3235#issuecomment-454025552:137,clear,clearing,137,https://root.cern,https://github.com/root-project/root/pull/3235#issuecomment-454025552,1,['clear'],['clearing']
Usability,"""You"" was Axel and Philippe + whoever is doing TXNetNG these days :) ; Michal (main developer of XrdCl) and I assumed the crash happens because libXrdCl was already unloaded, see xrootd issue: xrootd/xrootd#1487. Now, you say the library is still loaded ... then it's probably more likely that destruction ob XrdCl global objects has already happened or was in progress (I just learned c++ is rather relaxed about how this is allowed to happen). @simonmichal ... what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767#issuecomment-892009554:378,learn,learned,378,https://root.cern,https://github.com/root-project/root/issues/8767#issuecomment-892009554,1,['learn'],['learned']
Usability,# Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118087/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844250497:1743,simpl,simple,1743,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844250497,2,['simpl'],['simple']
Usability,# Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118088/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844244254:1744,simpl,simple,1744,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844244254,2,['simpl'],['simple']
Usability,# Failing tests:; - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_runf02](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_runf02/); - [projectroot.roottest.root.meta.roottest_root_meta_runnamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root/meta/roottest_root_meta_runnamespace_auto/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execDuplicate](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execDuplicate/); - [projectroot.roottest.root.selector.simple.roottest_root_selector_simple_runtestLoadingSelector](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.selector/simple/roottest_root_selector_simple_runtestLoadingSelector/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/118089/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-844261645:1736,simpl,simple,1736,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-844261645,2,['simpl'],['simple']
Usability,"## DeepCode failed to analyze this pull request; Something went wrong despite trying multiple times, sorry about that.; Please comment this pull request with ""Retry DeepCode"" to manually retry, or [contact us](https://www.deepcode.ai/feedback?select=4&utm_source=gh_review) so that a human can look into the issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7771#issuecomment-811770636:234,feedback,feedback,234,https://root.cern,https://github.com/root-project/root/pull/7771#issuecomment-811770636,6,['feedback'],['feedback']
Usability,"## RooMultivariateGaussian doesn't allow the converiance matrix to be fit. The data type used to represent the covariance matrix in RooMultivariateGaussian is TMatrixDSym and not RooRealVar or RooListProxy and doesn't allow for it to be fit. This is not a bug but a new feature request. There is alway the possibility to write in this case your own pdf. This feature only got requested once in 2017, and in the request ticket there was no mention of a usecase. Without a clear usecase, we are not going to blindly implement features. *Originally suggested by Albert Bursche [ROOT-9052](https://sft.its.cern.ch/jira/browse/ROOT-9052)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6557#issuecomment-1705593397:471,clear,clear,471,https://root.cern,https://github.com/root-project/root/issues/6557#issuecomment-1705593397,1,['clear'],['clear']
Usability,## [Codecov](https://app.codecov.io/gh/root-project/root/pull/13414?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project) Report; > :exclamation: No coverage uploaded for pull request base (`master@0d1f204`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project#section-missing-base-commit).; > The diff coverage is `n/a`. > :exclamation: Current head 15e8116 differs from pull request most recent head e2c1183. Consider uploading reports for the commit e2c1183 to get more accurate results. ```diff; @@ Coverage Diff @@; ## master #13414 +/- ##; ==========================================; Coverage ? 23.83% ; ==========================================; Files ? 8507 ; Lines ? 1719518 ; Branches ? 717767 ; ==========================================; Hits ? 409914 ; Misses ? 1083067 ; Partials ? 226537 ; ```. | Flag | Coverage Δ | |; |---|---|---|; | unittests | `23.83% <0.00%> (?)` | |. Flags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project#carryforward-flags-in-the-pull-request-comment) to find out more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13414#issuecomment-1672056213:289,learn,learn,289,https://root.cern,https://github.com/root-project/root/pull/13414#issuecomment-1672056213,1,['learn'],['learn']
Usability,## [Codecov](https://app.codecov.io/gh/root-project/root/pull/13430?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project) Report; > :exclamation: No coverage uploaded for pull request base (`master@6276954`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project#section-missing-base-commit).; > The diff coverage is `n/a`. > :exclamation: Current head 85ba098 differs from pull request most recent head 6c6f6da. Consider uploading reports for the commit 6c6f6da to get more accurate results. ```diff; @@ Coverage Diff @@; ## master #13430 +/- ##; ==========================================; Coverage ? 23.80% ; ==========================================; Files ? 8507 ; Lines ? 1719515 ; Branches ? 717824 ; ==========================================; Hits ? 409380 ; Misses ? 1083984 ; Partials ? 226151 ; ```. | Flag | Coverage Δ | |; |---|---|---|; | unittests | `23.80% <0.00%> (?)` | |. Flags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project#carryforward-flags-in-the-pull-request-comment) to find out more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13430#issuecomment-1678240847:289,learn,learn,289,https://root.cern,https://github.com/root-project/root/pull/13430#issuecomment-1678240847,1,['learn'],['learn']
Usability,## [Codecov](https://app.codecov.io/gh/root-project/root/pull/13466?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project) Report; > :exclamation: No coverage uploaded for pull request base (`master@4f0450b`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project#section-missing-base-commit).; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #13466 +/- ##; ==========================================; Coverage ? 23.84% ; ==========================================; Files ? 8508 ; Lines ? 1719789 ; Branches ? 717998 ; ==========================================; Hits ? 410002 ; Misses ? 1083133 ; Partials ? 226654 ; ```. | [Flag](https://app.codecov.io/gh/root-project/root/pull/13466/flags?src=pr&el=flags&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project) | Coverage Δ | |; |---|---|---|; | [unittests](https://app.codecov.io/gh/root-project/root/pull/13466/flags?src=pr&el=flag&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project) | `23.84% <0.00%> (?)` | |. Flags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project#carryforward-flags-in-the-pull-request-comment) to find out more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13466#issuecomment-1681134447:289,learn,learn,289,https://root.cern,https://github.com/root-project/root/pull/13466#issuecomment-1681134447,1,['learn'],['learn']
Usability,## [Codecov](https://app.codecov.io/gh/root-project/root/pull/13478?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project) Report; > :exclamation: No coverage uploaded for pull request base (`master@ebe4f59`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project#section-missing-base-commit).; > The diff coverage is `n/a`. ```diff; @@ Coverage Diff @@; ## master #13478 +/- ##; ==========================================; Coverage ? 23.80% ; ==========================================; Files ? 8508 ; Lines ? 1719800 ; Branches ? 718008 ; ==========================================; Hits ? 409426 ; Misses ? 1083951 ; Partials ? 226423 ; ```. | [Flag](https://app.codecov.io/gh/root-project/root/pull/13478/flags?src=pr&el=flags&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project) | Coverage Δ | |; |---|---|---|; | [unittests](https://app.codecov.io/gh/root-project/root/pull/13478/flags?src=pr&el=flag&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project) | `23.80% <0.00%> (?)` | |. Flags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=root-project#carryforward-flags-in-the-pull-request-comment) to find out more.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13478#issuecomment-1685023865:289,learn,learn,289,https://root.cern,https://github.com/root-project/root/pull/13478#issuecomment-1685023865,1,['learn'],['learn']
